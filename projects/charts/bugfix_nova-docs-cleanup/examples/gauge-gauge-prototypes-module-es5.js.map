{"version":3,"sources":["webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.ts","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.html","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.less","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.html","webpack:///examples/components/demo/development/gauge/gauge-prototypes.module.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.ts","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.less"],"names":["LinearGaugeHorizontalPrototypeComponent","flipLabels","changes","thickness","firstChange","gridConfig","chartAssist","chart","getGrid","config","dimension","height","labelsPlugin","margin","top","right","bottom","left","updateDimensions","gaugeConfig","update","updateSeriesSet","seriesSet","grid","Horizontal","addPlugin","assembleSeriesSet","setThresholdLabelFormatter","d","selector","template","GaugeTestPageComponent","value","maxValue","annularGrowth","Large","donutSize","thresholds","reversed","reversedColorAccessor","createReversedQuantityThresholdColorAccessor","getGaugeConfig","max","quantityColorAccessor","undefined","enableThresholdMarkers","DonutGaugePrototypeComponent","size","annularWidth","updateDonutSize","updateAnnularAttributes","autoHeight","autoWidth","contentPlugin","labelConfig","clearance","Donut","gridDimensions","width","forEach","series","rendererConfig","renderer","maxThickness","routes","path","component","data","srlc","hideIndicator","GaugePrototypesModule","declarations","imports","forChild","LinearGaugeVerticalPrototypeComponent","Vertical"],"mappings":"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","file":"gauge-gauge-prototypes-module-es5.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-prototype.component.less\"],\n})\nexport class LinearGaugeHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public flipLabels = false;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeHorizontalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.flipLabels && !changes.flipLabels.firstChange)) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            if (changes.thickness) {\n                gridConfig.dimension.height(this.thickness);\n            }\n            if (changes.flipLabels) {\n                this.labelsPlugin.config.flipLabels = this.flipLabels;\n                // reset the margins to accommodate the label direction change\n                gridConfig.dimension.margin = {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                };\n            }\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flipLabels: this.flipLabels });\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}ms`, this.seriesSet);\n\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".testing-region {\\n  height: 500px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSiIsImZpbGUiOiJnYXVnZS10ZXN0LXBhZ2UuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGVzdGluZy1yZWdpb24ge1xuICAgIGhlaWdodDogNTAwcHg7XG59XG4iXX0= */\";","export default \"<charts-test-harness>\\n    <div class=\\\"testing-region d-flex align-items-center justify-content-around\\\">\\n        <donut-gauge-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [size]=\\\"donutSize\\\" [annularGrowth]=\\\"annularGrowth\\\" [annularWidth]=\\\"thickness\\\"></donut-gauge-prototype>\\n        <linear-gauge-vertical-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [thickness]=\\\"thickness\\\" [flipLabels]=\\\"flipLabels\\\"></linear-gauge-vertical-prototype>\\n        <linear-gauge-horizontal-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [thickness]=\\\"thickness\\\" [flipLabels]=\\\"flipLabels\\\"></linear-gauge-horizontal-prototype>\\n    </div>\\n\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"valueInput\\\">\\n            Value\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [ngModel]=\\\"value\\\"\\n                            (ngModelChange)=\\\"onValueChange($event)\\\"\\n                            [minValue]=\\\"0\\\"\\n                            [maxValue]=\\\"maxValue\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"valueInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"thicknessInput\\\">\\n            Thickness\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [(ngModel)]=\\\"thickness\\\"\\n                            [minValue]=\\\"0\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"thicknessInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <nui-form-field caption=\\\"Donut Annular Growth\\\"\\n                        hint=\\\"Set to zero to have the donut obey the manual thickness setting\\\"\\n                        [showOptionalText]=\\\"false\\\">\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [(ngModel)]=\\\"annularGrowth\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [step]=\\\"0.01\\\"\\n                                customBoxWidth=\\\"75px\\\"></nui-textbox-number>\\n        </nui-form-field>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"donutSizeInput\\\">\\n            Donut Size\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [(ngModel)]=\\\"donutSize\\\"\\n                            [minValue]=\\\"0\\\"\\n                            [step]=\\\"25\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"donutSizeInput\\\"></nui-textbox-number>\\n    </div>\\n</charts-test-harness>\\n<div class=\\\"ml-3\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <input id=\\\"reversed\\\"\\n               class=\\\"mb-2\\\"\\n               type=\\\"checkbox\\\"\\n               [ngModel]=\\\"reversed\\\"\\n               (ngModelChange)=\\\"onReverseChange($event)\\\" />\\n        <label class=\\\"px-3\\\" for=\\\"reversed\\\">Reversed</label>\\n    </div>\\n</div>\\n<div class=\\\"ml-3\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <input id=\\\"flip-labels\\\"\\n               class=\\\"mb-2\\\"\\n               type=\\\"checkbox\\\"\\n               [(ngModel)]=\\\"flipLabels\\\" />\\n        <label class=\\\"px-3\\\" for=\\\"flip-labels\\\">Flip Labels</label>\\n    </div>\\n</div>\\n\";","export default \".chart {\\n  width: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMjVweDtcbn1cbiJdfQ== */\";","import { Component } from \"@angular/core\";\nimport { DataAccessor, DEFAULT_RADIAL_RENDERER_CONFIG, GaugeUtil, IGaugeConfig, StandardLinearGaugeThickness } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n    styleUrls: [\"./gauge-test-page.component.less\"],\n})\nexport class GaugeTestPageComponent {\n    public value = 95;\n    public maxValue = 200;\n    public annularGrowth = DEFAULT_RADIAL_RENDERER_CONFIG.annularGrowth;\n    public thickness = StandardLinearGaugeThickness.Large;\n    public donutSize = 200;\n    public thresholds: number[] = [100, 150];\n    public reversed = false;\n    public flipLabels = false;\n    public gaugeConfig: IGaugeConfig;\n\n    private reversedColorAccessor: DataAccessor<any, any> | undefined;\n\n    constructor() {\n        // this.thresholds = new Array(200).fill(null).map((e, i) => i);\n        // this.thresholds = [50, 75, 100, 125, 150, 175, 200];\n        this.reversedColorAccessor = GaugeUtil.createReversedQuantityThresholdColorAccessor(this.thresholds);\n\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onReverseChange(reversed: boolean) {\n        this.reversed = reversed;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onValueChange(value: number) {\n        this.value = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: this.maxValue,\n            thresholds: this.thresholds,\n            quantityColorAccessor: this.reversed ? this.reversedColorAccessor : undefined,\n            enableThresholdMarkers: true,\n        };\n    }\n}\n","export default \".chart {\\n  height: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMjVweDtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{gaugeConfig.value | number:'1.0-0'}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    IRadialRendererConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-prototype\",\n    templateUrl: \"./donut-gauge-prototype.component.html\",\n    styleUrls: [\"./donut-gauge-prototype.component.less\"],\n})\nexport class DonutGaugePrototypeComponent implements OnChanges, OnInit {\n    @Input() public size: number;\n    @Input() public annularGrowth: number;\n    @Input() public annularWidth: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugePrototypeComponent>) {\n        if ((changes.size && !changes.size.firstChange) ||\n            (changes.annularWidth && !changes.annularWidth.firstChange) ||\n            (changes.annularGrowth && !changes.annularGrowth.firstChange)) {\n            this.updateDonutSize();\n            this.updateAnnularAttributes();\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = radialGrid();\n        grid.config().dimension.autoHeight = false;\n        grid.config().dimension.autoWidth = false;\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        const labelConfig: IGaugeLabelsPluginConfig = {\n            clearance: { top: 40, right: 40, bottom: 40, left: 40 },\n        };\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin(labelConfig));\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}ms`, this.seriesSet);\n\n        this.updateDonutSize();\n        this.updateAnnularAttributes();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateDonutSize() {\n        const gridDimensions = this.chartAssist.chart.getGrid().config().dimension;\n        gridDimensions.height(this.size);\n        gridDimensions.width(this.size);\n    }\n\n    private updateAnnularAttributes() {\n        this.seriesSet.forEach(series => {\n            const rendererConfig = (series.renderer.config as IRadialRendererConfig);\n            // increase the max thickness from 30 for testing purposes\n            rendererConfig.maxThickness = 20000;\n            rendererConfig.annularGrowth = this.annularGrowth;\n            rendererConfig.annularWidth = this.annularWidth;\n        });\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiFormFieldModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { DonutGaugePrototypeComponent } from \"./donut/donut-gauge-prototype.component\";\nimport { GaugeTestPageComponent } from \"./gauge-test-page.component\";\nimport { LinearGaugeHorizontalPrototypeComponent } from \"./horizontal/linear-gauge-horizontal-prototype.component\";\nimport { LinearGaugeVerticalPrototypeComponent } from \"./vertical/linear-gauge-vertical-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        LinearGaugeHorizontalPrototypeComponent,\n        LinearGaugeVerticalPrototypeComponent,\n        DonutGaugePrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-prototype\",\n    templateUrl: \"./linear-gauge-vertical-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-prototype.component.less\"],\n})\nexport class LinearGaugeVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public flipLabels = false;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeVerticalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.flipLabels && !changes.flipLabels.firstChange)) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            if (changes.thickness) {\n                gridConfig.dimension.width(this.thickness);\n            }\n            if (changes.flipLabels) {\n                this.labelsPlugin.config.flipLabels = this.flipLabels;\n                // reset the margins to accommodate the label direction change\n                gridConfig.dimension.margin = {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                };\n            }\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        const labelConfig: IGaugeLabelsPluginConfig = {\n            flipLabels: this.flipLabels,\n            // extra clearance for the longer labels generated by the formatter\n            clearance: {\n                top: 0,\n                right: 40,\n                bottom: 0,\n                left: 40,\n            },\n        };\n        this.labelsPlugin = new LinearGaugeLabelsPlugin(labelConfig);\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}ms`, this.seriesSet);\n\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";"]}