(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{HRsf:function(e,s,t){"use strict";t.r(s),t.d(s,"ChartDocsAccessorsDataModule",function(){return u});var a=t("tyNb"),c=t("Rr1A"),o=t("gKry"),r=t("fXoL"),n=t("HHUD");let i=(()=>{class e{constructor(){this.chart=new o.r(new o.Cb)}ngOnInit(){const e=new o.Q,s={x:new o.T,y:new o.T},t=[{x:1,y:10,z:0},{x:2,y:30,z:1},{x:3,y:5,z:2},{x:4,y:20,z:3},{x:5,y:15,z:4}],a=new o.P;a.data={x:e=>e.z,y:e=>2*e.y},this.seriesSet=[{id:"series-1",name:"Series 1",data:t,scales:s,renderer:e,accessors:new o.P},{id:"series-2",name:"Series 2",data:t,scales:s,renderer:e,accessors:a}],this.chart.update(this.seriesSet)}}return e.\u0275fac=function(s){return new(s||e)},e.\u0275cmp=r.Jb({type:e,selectors:[["nui-accessors-example"]],decls:1,vars:1,consts:[[1,"d-flex",3,"chart"]],template:function(e,s){1&e&&r.Qb(0,"nui-chart",0),2&e&&r.tc("chart",s.chart)},directives:[n.a],encapsulation:2}),e})();const d=[{path:"",component:(()=>{class e{constructor(){this.customAccessorCode="const customAccessors = new LineAccessors();\ncustomAccessors.data = {\n    x: (datum: any) => datum.z,\n    y: (datum: any) => datum.y * 2,\n};\n..."}}return e.\u0275fac=function(s){return new(s||e)},e.\u0275cmp=r.Jb({type:e,selectors:[["nui-chart-docs-accessors-data"]],decls:59,vars:2,consts:[["href","../classes/LineRenderer.html","target","_blank"],["href","../classes/XYRenderer.html","target","_blank"],["href","../classes/LineAccessors.html","target","_blank"],["type","info",3,"allowDismiss"],["filenamePrefix","accessors","exampleTitle","Custom Accessors"]],template:function(e,s){1&e&&(r.Vb(0,"h1"),r.Oc(1,"Data Accessors"),r.Ub(),r.Vb(2,"p"),r.Oc(3," Renderers are responsible for rendering your data, so they need to understand how your data is structured. That is the role of accessors. There is no interface that will enforce the structure of your data, but there are defaults you can follow to require as little extra configuration as possible.\n"),r.Ub(),r.Vb(4,"p"),r.Oc(5," A renderer such as the "),r.Vb(6,"code"),r.Vb(7,"a",0),r.Oc(8,"LineRenderer"),r.Ub(),r.Ub(),r.Oc(9," that derives from "),r.Vb(10,"code"),r.Vb(11,"a",1),r.Oc(12,"XYRenderer"),r.Ub(),r.Ub(),r.Oc(13," has an associated "),r.Vb(14,"code"),r.Vb(15,"a",2),r.Oc(16,"LineAccessors"),r.Ub(),r.Ub(),r.Oc(17," implementation with data accessor keys "),r.Vb(18,"code"),r.Oc(19,"x"),r.Ub(),r.Oc(20," and "),r.Vb(21,"code"),r.Oc(22,"y"),r.Ub(),r.Oc(23," which are used for accessing x and y domain data respectively from a chart's input data set(s).\n"),r.Ub(),r.Vb(24,"nui-message",3),r.Oc(25,"The general convention for data accessors is to use data point properties of the same name. So data accessor "),r.Vb(26,"code"),r.Oc(27,"x"),r.Ub(),r.Oc(28," uses a property "),r.Vb(29,"code"),r.Oc(30,"x"),r.Ub(),r.Oc(31," on the data point."),r.Ub(),r.Vb(32,"p"),r.Oc(33," The following descriptions use the LineRenderer as an example. And, even though renderers not derived from XYRenderer may have different sets of default accessor keys, the same patterns for customizing data access still apply.\n"),r.Ub(),r.Vb(34,"h2"),r.Oc(35,"Custom Accessors"),r.Ub(),r.Vb(36,"p"),r.Oc(37," Accessors define how data is accessed in a domain, and framework allows you to define custom accessors on one or more domains. A renderer will invoke the appropriate accessor on each datum within a domain. By default, a renderer visualizes raw data as is, i.e. without modification, but defining custom accessors makes it possible to add logic for deciding how to mutate the data before it gets visualized on the chart. In the following snippet, each datum in the y-domain gets multiplied by two before being rendered on the chart and for x-domain "),r.Vb(38,"code"),r.Oc(39,"z"),r.Ub(),r.Oc(40," property will be used, instead of default "),r.Vb(41,"code"),r.Oc(42,"x"),r.Ub(),r.Oc(43," property.\n"),r.Ub(),r.Vb(44,"pre"),r.Oc(45),r.Ub(),r.Vb(46,"p"),r.Oc(47," The following example contains two series each with its own line renderer visualizing the same raw data. One of the accessors has been customized to multiply each "),r.Vb(48,"code"),r.Oc(49,"y"),r.Ub(),r.Oc(50," datum by two and return "),r.Vb(51,"code"),r.Oc(52,"z"),r.Ub(),r.Oc(53," property value for "),r.Vb(54,"code"),r.Oc(55,"x"),r.Ub(),r.Oc(56," datum, as shown in the snippet above.\n"),r.Ub(),r.Vb(57,"nui-example-wrapper",4),r.Qb(58,"nui-accessors-example"),r.Ub()),2&e&&(r.Db(24),r.tc("allowDismiss",!1),r.Db(21),r.Pc(s.customAccessorCode))},directives:[c.p,c.h,i],encapsulation:2}),e})(),data:{srlc:{stage:c.T.beta},showThemeSwitcher:!0}},{path:"accessors",component:i}];let u=(()=>{class e{}return e.\u0275fac=function(s){return new(s||e)},e.\u0275mod=r.Nb({type:e}),e.\u0275inj=r.Mb({providers:[{provide:c.e,useFactory:()=>t("mcI3")}],imports:[[o.ab,c.x,c.D,a.e.forChild(d)]]}),e})()},mcI3:function(e,s,t){var a={"./accessors/accessors.example.component.html":"YTI/","./accessors/accessors.example.component.ts":"5A4g","./chart-docs-accessors-data.component.html":"Y2mW","./chart-docs-accessors-data.component.ts":"2kwe","./chart-docs-accessors-data.module.ts":"D4b+"};function c(e){var s=o(e);return t(s)}function o(e){if(!t.o(a,e)){var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}return a[e]}c.keys=function(){return Object.keys(a)},c.resolve=o,e.exports=c,c.id="mcI3"}}]);