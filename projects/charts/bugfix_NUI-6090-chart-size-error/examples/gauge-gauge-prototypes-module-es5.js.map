{"version":3,"sources":["webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.ts","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.html","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.less","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.html","webpack:///examples/components/demo/development/gauge/gauge-prototypes.module.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.ts","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.less"],"names":["LinearGaugeHorizontalPrototypeComponent","unitConversionService","flipLabels","changes","thickness","firstChange","gridConfig","chartAssist","chart","getGrid","config","dimension","height","labelsPlugin","margin","top","right","bottom","left","updateDimensions","gaugeConfig","disableThresholdLabels","disableThresholdMarkers","update","updateSeriesSet","seriesSet","Horizontal","grid","addPlugin","assembleSeriesSet","setThresholdLabelFormatter","d","conversion","convert","parseInt","getFullDisplay","selector","template","GaugeTestPageComponent","themeSwitcher","value","maxValue","annularGrowth","Large","donutSize","warningEnabled","criticalEnabled","enableThresholdMarkers","reversed","lowThreshold","highThreshold","thresholds","createStandardThresholdConfigs","originalWithRefreshRoute","withRefreshRoute","getGaugeConfig","enabled","Warning","Critical","max","reversedThresholds","DonutGaugePrototypeComponent","size","annularWidth","updateDonutSize","updateAnnularAttributes","autoHeight","autoWidth","contentPlugin","labelConfig","clearance","Donut","gridDimensions","width","forEach","series","rendererConfig","renderer","maxThickness","routes","path","component","data","srlc","hideIndicator","GaugePrototypesModule","declarations","imports","forChild","LinearGaugeVerticalPrototypeComponent","Vertical"],"mappings":"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","file":"gauge-gauge-prototypes-module-es5.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges, UnitConversionService } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-prototype.component.less\"],\n})\nexport class LinearGaugeHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public flipLabels = false;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    constructor(private unitConversionService: UnitConversionService) { }\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeHorizontalPrototypeComponent>): void {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.flipLabels && !changes.flipLabels.firstChange)) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            if (changes.thickness) {\n                gridConfig.dimension.height(this.thickness);\n            }\n            if (changes.flipLabels) {\n                this.labelsPlugin.config.flipLabels = this.flipLabels;\n                // reset the margins to accommodate the label direction change\n                gridConfig.dimension.margin = {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                };\n            }\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.labelsPlugin.config.disableThresholdLabels = this.gaugeConfig.disableThresholdMarkers;\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gridConfig = linearGaugeGridConfig(GaugeMode.Horizontal, this.thickness) as XYGridConfig;\n        gridConfig.dimension.margin.right = 15;\n        gridConfig.dimension.margin.left = 5;\n        const grid = new XYGrid(gridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flipLabels: this.flipLabels });\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => {\n            const conversion = this.unitConversionService.convert(parseInt(d, 10), 1000, 2);\n            return this.unitConversionService.getFullDisplay(conversion, \"generic\");\n        }, this.seriesSet);\n\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".testing-region {\\n  height: 500px;\\n}\\n.column {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtBQUFKIiwiZmlsZSI6ImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXN0aW5nLXJlZ2lvbiB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLmNvbHVtbiB7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuIl19 */\";","export default \"<div class=\\\"testing-region d-flex align-items-center justify-content-around\\\">\\n    <donut-gauge-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [size]=\\\"donutSize\\\" [annularGrowth]=\\\"annularGrowth\\\" [annularWidth]=\\\"thickness\\\">\\n    </donut-gauge-prototype>\\n    <linear-gauge-vertical-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [thickness]=\\\"thickness\\\" [flipLabels]=\\\"flipLabels\\\"></linear-gauge-vertical-prototype>\\n    <linear-gauge-horizontal-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [thickness]=\\\"thickness\\\" [flipLabels]=\\\"flipLabels\\\"></linear-gauge-horizontal-prototype>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"column\\\">\\n        <div class=\\\"mb-2\\\">\\n            <nui-form-field caption=\\\"Donut Annular Growth\\\"\\n                            hint=\\\"Set to zero to have the donut obey the manual thickness setting\\\"\\n                            [showOptionalText]=\\\"false\\\">\\n                <nui-textbox-number type=\\\"number\\\"\\n                                    [(ngModel)]=\\\"annularGrowth\\\"\\n                                    [minValue]=\\\"0\\\"\\n                                    [step]=\\\"0.01\\\"\\n                                    customBoxWidth=\\\"75px\\\"></nui-textbox-number>\\n            </nui-form-field>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"donutSizeInput\\\">\\n                Donut Size\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [(ngModel)]=\\\"donutSize\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [step]=\\\"25\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"donutSizeInput\\\"></nui-textbox-number>\\n        </div>\\n    </div>\\n    <div class=\\\"column ml-5\\\">\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"valueInput\\\">\\n                Value\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"value\\\"\\n                                (ngModelChange)=\\\"onValueChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [maxValue]=\\\"maxValue\\\"\\n                                [step]=\\\"10\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"valueInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"thicknessInput\\\">\\n                Thickness\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [(ngModel)]=\\\"thickness\\\"\\n                                [minValue]=\\\"0\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"thicknessInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"lowThresholdInput\\\">\\n                Low Threshold\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"lowThreshold\\\"\\n                                (ngModelChange)=\\\"onLowThresholdChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [maxValue]=\\\"highThreshold - 1\\\"\\n                                [step]=\\\"10\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"lowThresholdInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"highThresholdInput\\\">\\n                High Threshold\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"highThreshold\\\"\\n                                (ngModelChange)=\\\"onHighThresholdChange($event)\\\"\\n                                [minValue]=\\\"lowThreshold + 1\\\"\\n                                [maxValue]=\\\"maxValue\\\"\\n                                [step]=\\\"10\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"highThresholdInput\\\"></nui-textbox-number>\\n        </div>\\n    </div>\\n    <div class=\\\"column ml-5\\\">\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"enable-warning\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"warningEnabled\\\"\\n                       (ngModelChange)=\\\"onWarningEnabledChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-warning\\\">Enable Warning</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"enable-critical\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [(ngModel)]=\\\"criticalEnabled\\\"\\n                       (ngModelChange)=\\\"onCriticalEnabledChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-critical\\\">Enable Critical</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       id=\\\"enable-markers\\\"\\n                       [ngModel]=\\\"enableThresholdMarkers\\\"\\n                       (ngModelChange)=\\\"onEnableThresholdMarkersChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-markers\\\">Enable Markers</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"reversed\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"reversed\\\"\\n                       (ngModelChange)=\\\"onReversedChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"reversed\\\">Reversed</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"flip-labels\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [(ngModel)]=\\\"flipLabels\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"flip-labels\\\">Flip Labels</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       id=\\\"dark-theme\\\"\\n                       [ngModel]=\\\"themeSwitcher.isDarkModeEnabledSubject | async\\\"\\n                       (ngModelChange)=\\\"themeSwitcher.setDarkTheme($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"dark-theme\\\">Dark Theme</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \".chart {\\n  width: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMjVweDtcbn1cbiJdfQ== */\";","import { Component, OnDestroy } from \"@angular/core\";\nimport { ThemeSwitchService } from \"@nova-ui/bits\";\nimport {\n    DEFAULT_RADIAL_RENDERER_CONFIG,\n    GaugeUtil,\n    IGaugeConfig,\n    IGaugeThresholdConfigs,\n    StandardGaugeThresholdId,\n    StandardLinearGaugeThickness,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n    styleUrls: [\"./gauge-test-page.component.less\"],\n})\nexport class GaugeTestPageComponent implements OnDestroy {\n    public value = 950;\n    public maxValue = 2000;\n    public annularGrowth = DEFAULT_RADIAL_RENDERER_CONFIG.annularGrowth;\n    public thickness = StandardLinearGaugeThickness.Large;\n    public donutSize = 200;\n    public warningEnabled = true;\n    public criticalEnabled = true;\n    public enableThresholdMarkers = true;\n    public reversed = false;\n    public flipLabels = false;\n\n    public lowThreshold = 1000;\n    public highThreshold = 1500;\n\n    public thresholds: IGaugeThresholdConfigs = {\n        ...GaugeUtil.createStandardThresholdConfigs(this.lowThreshold, this.highThreshold),\n    };\n\n\n    public gaugeConfig: IGaugeConfig;\n\n    private originalWithRefreshRoute: boolean;\n\n    constructor(public themeSwitcher: ThemeSwitchService) {\n        // disable route refreshing because the theme service currently always reverts to\n        // the light theme on route refresh unless route.data.showThemeSwitcher is 'true'\n        this.originalWithRefreshRoute = this.themeSwitcher.withRefreshRoute;\n        this.themeSwitcher.withRefreshRoute = false;\n\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public ngOnDestroy(): void {\n        this.themeSwitcher.withRefreshRoute = this.originalWithRefreshRoute;\n    }\n\n    public onReversedChange(reversed: boolean): void {\n        this.reversed = reversed;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onLowThresholdChange(value: number): void {\n        this.lowThreshold = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onHighThresholdChange(value: number): void {\n        this.highThreshold = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onCriticalEnabledChange(enabled: boolean): void {\n        this.criticalEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onEnableThresholdMarkersChange(enabled: boolean): void {\n        this.enableThresholdMarkers = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        if (this.warningEnabled) {\n            this.thresholds[StandardGaugeThresholdId.Warning].value = this.reversed ? this.highThreshold : this.lowThreshold;\n        }\n\n        if (this.criticalEnabled) {\n            this.thresholds[StandardGaugeThresholdId.Critical].value = this.reversed ? this.lowThreshold : this.highThreshold;\n        }\n\n        this.thresholds[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n        this.thresholds[StandardGaugeThresholdId.Critical].enabled = this.criticalEnabled;\n\n        return {\n            value: this.value,\n            max: this.maxValue,\n            reversedThresholds: this.reversed,\n            thresholds: this.thresholds,\n            disableThresholdMarkers: !this.enableThresholdMarkers,\n        };\n    }\n}\n","export default \".chart {\\n  height: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMjVweDtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{gaugeConfig.value | unitConversion : 2 : false : \\\"generic\\\"}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges, UnitConversionService } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    IRadialRendererConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-prototype\",\n    templateUrl: \"./donut-gauge-prototype.component.html\",\n    styleUrls: [\"./donut-gauge-prototype.component.less\"],\n})\nexport class DonutGaugePrototypeComponent implements OnChanges, OnInit {\n    @Input() public size: number;\n    @Input() public annularGrowth: number;\n    @Input() public annularWidth: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private labelsPlugin: DonutGaugeLabelsPlugin;\n\n    constructor(private unitConversionService: UnitConversionService) { }\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugePrototypeComponent>): void {\n        if ((changes.size && !changes.size.firstChange) ||\n            (changes.annularWidth && !changes.annularWidth.firstChange) ||\n            (changes.annularGrowth && !changes.annularGrowth.firstChange)) {\n            this.updateDonutSize();\n            this.updateAnnularAttributes();\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.labelsPlugin.config.disableThresholdLabels = this.gaugeConfig.disableThresholdMarkers;\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const grid = radialGrid();\n        grid.config().dimension.autoHeight = false;\n        grid.config().dimension.autoWidth = false;\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        const labelConfig: IGaugeLabelsPluginConfig = {\n            clearance: { top: 40, right: 40, bottom: 40, left: 40 },\n        };\n\n        this.labelsPlugin = new DonutGaugeLabelsPlugin(labelConfig);\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => {\n            const conversion = this.unitConversionService.convert(parseInt(d, 10), 1000, 2);\n            return this.unitConversionService.getFullDisplay(conversion, \"generic\");\n        }, this.seriesSet);\n\n        this.updateDonutSize();\n        this.updateAnnularAttributes();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateDonutSize(): void {\n        const gridDimensions = this.chartAssist.chart.getGrid().config().dimension;\n        gridDimensions.height(this.size);\n        gridDimensions.width(this.size);\n    }\n\n    private updateAnnularAttributes(): void {\n        this.seriesSet.forEach(series => {\n            const rendererConfig = (series.renderer.config as IRadialRendererConfig);\n            // increase the max thickness from 30 for testing purposes\n            rendererConfig.maxThickness = 20000;\n            rendererConfig.annularGrowth = this.annularGrowth;\n            rendererConfig.annularWidth = this.annularWidth;\n        });\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiFormFieldModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { DonutGaugePrototypeComponent } from \"./donut/donut-gauge-prototype.component\";\nimport { GaugeTestPageComponent } from \"./gauge-test-page.component\";\nimport { LinearGaugeHorizontalPrototypeComponent } from \"./horizontal/linear-gauge-horizontal-prototype.component\";\nimport { LinearGaugeVerticalPrototypeComponent } from \"./vertical/linear-gauge-vertical-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        LinearGaugeHorizontalPrototypeComponent,\n        LinearGaugeVerticalPrototypeComponent,\n        DonutGaugePrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges, UnitConversionService } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-prototype\",\n    templateUrl: \"./linear-gauge-vertical-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-prototype.component.less\"],\n})\nexport class LinearGaugeVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public flipLabels = false;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    constructor(private unitConversionService: UnitConversionService) { }\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeVerticalPrototypeComponent>): void {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.flipLabels && !changes.flipLabels.firstChange)) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            if (changes.thickness) {\n                gridConfig.dimension.width(this.thickness);\n            }\n            if (changes.flipLabels) {\n                this.labelsPlugin.config.flipLabels = this.flipLabels;\n                // reset the margins to accommodate the label direction change\n                gridConfig.dimension.margin = {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                };\n            }\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.labelsPlugin.config.disableThresholdLabels = this.gaugeConfig.disableThresholdMarkers;\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gridConfig = linearGaugeGridConfig(GaugeMode.Vertical, this.thickness) as XYGridConfig;\n        gridConfig.dimension.margin.top = 5;\n        gridConfig.dimension.margin.bottom = 5;\n        const grid = new XYGrid(gridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        const labelConfig: IGaugeLabelsPluginConfig = {\n            flipLabels: this.flipLabels,\n            // extra clearance for the longer labels generated by the formatter\n            clearance: {\n                top: 0,\n                right: 35,\n                bottom: 0,\n                left: 35,\n            },\n        };\n        this.labelsPlugin = new LinearGaugeLabelsPlugin(labelConfig);\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => {\n            const conversion = this.unitConversionService.convert(parseInt(d, 10), 1000, 2);\n            return this.unitConversionService.getFullDisplay(conversion, \"generic\");\n        }, this.seriesSet);\n\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";"]}