{"version":3,"sources":["webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.ts","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.html","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.less","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.html","webpack:///examples/components/demo/development/gauge/gauge-prototypes.module.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.ts","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.less"],"names":["LinearGaugeHorizontalPrototypeComponent","rightMargin","leftMargin","changes","gaugeConfig","firstChange","gridConfig","chartAssist","chart","getGrid","config","dimension","height","linearThickness","flippedLabels","labels","flipped","labelsPlugin","disableMarkers","thresholds","disableThresholdLabels","margin","top","right","bottom","left","marginToUpdate","updateDimensions","update","seriesSet","createChartAssist","Horizontal","assembleSeriesSet","selector","template","GaugeTestPageComponent","themeSwitcher","unitConversionSvc","value","maxValue","annularGrowth","thickness","Large","donutSize","warningEnabled","criticalEnabled","thresholdMarkersEnabled","reversed","flipLabels","lowThreshold","highThreshold","valueStep","originalWithRefreshRoute","withRefreshRoute","labelFormatter","d","conversion","convert","parseFloat","getFullDisplay","createStandardThresholdsConfig","getGaugeConfig","enabled","updateThresholdsConfig","max","formatter","definitions","Warning","Critical","DonutGaugePrototypeComponent","labelClearance","size","annularWidth","updateDonutSize","updateAnnularAttributes","gaugeConfigWithLabelClearance","clearance","Donut","autoHeight","autoWidth","contentPlugin","addPlugin","gridDimensions","width","forEach","series","rendererConfig","renderer","maxThickness","routes","path","component","data","srlc","hideIndicator","GaugePrototypesModule","declarations","imports","forChild","LinearGaugeVerticalPrototypeComponent","staticMargin","Vertical"],"mappings":"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","file":"gauge-gauge-prototypes-module-es5.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    LinearGaugeLabelsPlugin,\n    LINEAR_GAUGE_LABEL_CLEARANCE_DEFAULTS,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-prototype.component.less\"],\n})\nexport class LinearGaugeHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n    private readonly rightMargin = 15;\n    private readonly leftMargin = 5;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeHorizontalPrototypeComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            gridConfig.dimension.height(this.gaugeConfig.linearThickness ?? 0);\n            const flippedLabels = this.gaugeConfig.labels?.flipped ?? false;\n            this.labelsPlugin.config.flippedLabels = flippedLabels;\n\n            // update the margins to accommodate the label direction change\n            const disableMarkers = this.gaugeConfig.thresholds?.disableMarkers ?? false;\n            this.labelsPlugin.config.disableThresholdLabels = disableMarkers;\n            gridConfig.dimension.margin = {\n                top: 0,\n                right: disableMarkers ? 0 : this.rightMargin,\n                bottom: 0,\n                left: disableMarkers ? 0 : this.leftMargin,\n            };\n\n            const marginToUpdate = flippedLabels ? \"top\" : \"bottom\";\n            gridConfig.dimension.margin[marginToUpdate] = LINEAR_GAUGE_LABEL_CLEARANCE_DEFAULTS[marginToUpdate];\n\n            this.chartAssist.chart.updateDimensions();\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flippedLabels: this.gaugeConfig.labels?.flipped });\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal, this.labelsPlugin);\n        const gridConfig = this.chartAssist.chart.getGrid().config();\n        gridConfig.dimension.margin.right = this.rightMargin;\n        gridConfig.dimension.margin.left = this.leftMargin;\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".testing-region {\\n  height: 500px;\\n}\\n.column {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtBQUFKIiwiZmlsZSI6ImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXN0aW5nLXJlZ2lvbiB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLmNvbHVtbiB7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuIl19 */\";","export default \"<div class=\\\"testing-region d-flex align-items-center justify-content-around\\\">\\n    <donut-gauge-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [size]=\\\"donutSize\\\" [annularGrowth]=\\\"annularGrowth\\\" [annularWidth]=\\\"thickness\\\">\\n    </donut-gauge-prototype>\\n    <linear-gauge-vertical-prototype [gaugeConfig]=\\\"gaugeConfig\\\"></linear-gauge-vertical-prototype>\\n    <linear-gauge-horizontal-prototype [gaugeConfig]=\\\"gaugeConfig\\\"></linear-gauge-horizontal-prototype>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"column\\\">\\n        <div class=\\\"mb-2\\\">\\n            <nui-form-field caption=\\\"Donut Annular Growth\\\"\\n                            hint=\\\"Set to zero to have the donut obey the manual thickness setting\\\"\\n                            [showOptionalText]=\\\"false\\\">\\n                <nui-textbox-number type=\\\"number\\\"\\n                                    [(ngModel)]=\\\"annularGrowth\\\"\\n                                    [minValue]=\\\"0\\\"\\n                                    [step]=\\\"0.01\\\"\\n                                    customBoxWidth=\\\"75px\\\"></nui-textbox-number>\\n            </nui-form-field>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"donutSizeInput\\\">\\n                Donut Size\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [(ngModel)]=\\\"donutSize\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [step]=\\\"25\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"donutSizeInput\\\"></nui-textbox-number>\\n        </div>\\n    </div>\\n    <div class=\\\"column ml-5\\\">\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"valueInput\\\">\\n                Value\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"value\\\"\\n                                (ngModelChange)=\\\"onValueChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [maxValue]=\\\"maxValue\\\"\\n                                [step]=\\\"valueStep\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"valueInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"thicknessInput\\\">\\n                Thickness\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"thickness\\\"\\n                                (ngModelChange)=\\\"onThicknessChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"thicknessInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"lowThresholdInput\\\">\\n                Low Threshold\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"lowThreshold\\\"\\n                                (ngModelChange)=\\\"onLowThresholdChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [maxValue]=\\\"highThreshold - valueStep\\\"\\n                                [step]=\\\"valueStep\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"lowThresholdInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"highThresholdInput\\\">\\n                High Threshold\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"highThreshold\\\"\\n                                (ngModelChange)=\\\"onHighThresholdChange($event)\\\"\\n                                [minValue]=\\\"lowThreshold + valueStep\\\"\\n                                [maxValue]=\\\"maxValue\\\"\\n                                [step]=\\\"valueStep\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"highThresholdInput\\\"></nui-textbox-number>\\n        </div>\\n    </div>\\n    <div class=\\\"column ml-5\\\">\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"enable-warning\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"warningEnabled\\\"\\n                       (ngModelChange)=\\\"onWarningEnabledChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-warning\\\">Warning Enabled</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"enable-critical\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [(ngModel)]=\\\"criticalEnabled\\\"\\n                       (ngModelChange)=\\\"onCriticalEnabledChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-critical\\\">Critical Enabled</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       id=\\\"enable-markers\\\"\\n                       [ngModel]=\\\"thresholdMarkersEnabled\\\"\\n                       (ngModelChange)=\\\"onEnableThresholdMarkersChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-markers\\\">Markers Enabled</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"reversed\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"reversed\\\"\\n                       (ngModelChange)=\\\"onReversedChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"reversed\\\">Reversed</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"flip-labels\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"flipLabels\\\"\\n                       (ngModelChange)=\\\"onFlippedChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"flip-labels\\\">Flip Labels</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       id=\\\"dark-theme\\\"\\n                       [ngModel]=\\\"themeSwitcher.isDarkModeEnabledSubject | async\\\"\\n                       (ngModelChange)=\\\"themeSwitcher.setDarkTheme($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"dark-theme\\\">Dark Theme</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \".chart {\\n  width: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMjVweDtcbn1cbiJdfQ== */\";","import { Component, OnDestroy } from \"@angular/core\";\nimport { ThemeSwitchService, UnitConversionService } from \"@nova-ui/bits\";\nimport {\n    DEFAULT_RADIAL_RENDERER_CONFIG,\n    GaugeUtil,\n    IGaugeConfig,\n    GaugeThresholdDefs,\n    StandardGaugeThresholdId,\n    StandardLinearGaugeThickness,\n    IGaugeThresholdsConfig,\n    Formatter,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n    styleUrls: [\"./gauge-test-page.component.less\"],\n})\nexport class GaugeTestPageComponent implements OnDestroy {\n    public value = 950;\n    public maxValue = 2000;\n    public thresholds: IGaugeThresholdsConfig;\n    public gaugeConfig: IGaugeConfig;\n\n    public annularGrowth = DEFAULT_RADIAL_RENDERER_CONFIG.annularGrowth;\n    public thickness = StandardLinearGaugeThickness.Large;\n    public donutSize = 200;\n\n    public warningEnabled = true;\n    public criticalEnabled = true;\n    public thresholdMarkersEnabled = true;\n    public reversed = false;\n    public flipLabels = false;\n\n    public lowThreshold = 1000;\n    public highThreshold = 1500;\n    public valueStep = 10;\n\n    private originalWithRefreshRoute: boolean;\n    private labelFormatter: Formatter<string>;\n\n    constructor(public themeSwitcher: ThemeSwitchService, private unitConversionSvc: UnitConversionService) {\n        // disable route refreshing because the theme service currently always reverts to\n        // the light theme on route refresh unless route.data.showThemeSwitcher is 'true'\n        this.originalWithRefreshRoute = this.themeSwitcher.withRefreshRoute;\n        this.themeSwitcher.withRefreshRoute = false;\n\n        this.labelFormatter = (d: string) => {\n            const conversion = this.unitConversionSvc.convert(parseFloat(d), 1000, 2);\n            return this.unitConversionSvc.getFullDisplay(conversion, \"generic\");\n        };\n\n        this.thresholds = GaugeUtil.createStandardThresholdsConfig(this.lowThreshold, this.highThreshold);\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public ngOnDestroy(): void {\n        this.themeSwitcher.withRefreshRoute = this.originalWithRefreshRoute;\n    }\n\n    public onReversedChange(reversed: boolean): void {\n        this.reversed = reversed;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onFlippedChange(flipped: boolean): void {\n        this.flipLabels = flipped;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onThicknessChange(thickness: number): void {\n        this.thickness = thickness;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onLowThresholdChange(value: number): void {\n        this.lowThreshold = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onHighThresholdChange(value: number): void {\n        this.highThreshold = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onCriticalEnabledChange(enabled: boolean): void {\n        this.criticalEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onEnableThresholdMarkersChange(enabled: boolean): void {\n        this.thresholdMarkersEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        this.updateThresholdsConfig();\n\n        return {\n            value: this.value,\n            max: this.maxValue,\n            thresholds: this.thresholds,\n            labels: {\n                formatter: this.labelFormatter,\n                flipped: this.flipLabels,\n            },\n            linearThickness: this.thickness,\n        };\n    }\n\n    private updateThresholdsConfig() {\n        if (this.warningEnabled) {\n            this.thresholds.definitions[StandardGaugeThresholdId.Warning].value = this.reversed ? this.highThreshold : this.lowThreshold;\n        }\n\n        if (this.criticalEnabled) {\n            this.thresholds.definitions[StandardGaugeThresholdId.Critical].value = this.reversed ? this.lowThreshold : this.highThreshold;\n        }\n\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].enabled = this.criticalEnabled;\n        this.thresholds.reversed = this.reversed;\n        this.thresholds.disableMarkers = !this.thresholdMarkersEnabled;\n    }\n}\n","export default \".chart {\\n  height: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMjVweDtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{gaugeConfig.value | unitConversion : 2 : false : \\\"generic\\\"}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IRadialRendererConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-prototype\",\n    templateUrl: \"./donut-gauge-prototype.component.html\",\n    styleUrls: [\"./donut-gauge-prototype.component.less\"],\n})\nexport class DonutGaugePrototypeComponent implements OnChanges, OnInit {\n    @Input() public size: number;\n    @Input() public annularGrowth: number;\n    @Input() public annularWidth: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private labelsPlugin: DonutGaugeLabelsPlugin;\n    private readonly labelClearance = 40;\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugePrototypeComponent>): void {\n        if ((changes.size && !changes.size.firstChange) ||\n            (changes.annularWidth && !changes.annularWidth.firstChange) ||\n            (changes.annularGrowth && !changes.annularGrowth.firstChange)) {\n            this.updateDonutSize();\n            this.updateAnnularAttributes();\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            const disableMarkers = this.gaugeConfig.thresholds?.disableMarkers ?? false;\n            this.labelsPlugin.config.disableThresholdLabels = disableMarkers;\n\n            this.chartAssist.chart.updateDimensions();\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gaugeConfigWithLabelClearance = { ...this.gaugeConfig, labels: { ...this.gaugeConfig.labels, clearance: this.labelClearance } };\n\n        this.labelsPlugin = new DonutGaugeLabelsPlugin();\n        this.chartAssist = GaugeUtil.createChartAssist(gaugeConfigWithLabelClearance, GaugeMode.Donut, this.labelsPlugin);\n        const gridConfig = this.chartAssist.chart.getGrid().config();\n        gridConfig.dimension.autoHeight = false;\n        gridConfig.dimension.autoWidth = false;\n\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(gaugeConfigWithLabelClearance, GaugeMode.Donut);\n\n        this.updateDonutSize();\n        this.updateAnnularAttributes();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateDonutSize(): void {\n        const gridDimensions = this.chartAssist.chart.getGrid().config().dimension;\n        gridDimensions.height(this.size);\n        gridDimensions.width(this.size);\n    }\n\n    private updateAnnularAttributes(): void {\n        this.seriesSet.forEach(series => {\n            const rendererConfig = (series.renderer.config as IRadialRendererConfig);\n            // increase the max thickness from 30 for testing purposes\n            rendererConfig.maxThickness = 20000;\n            rendererConfig.annularGrowth = this.annularGrowth;\n            rendererConfig.annularWidth = this.annularWidth;\n        });\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiFormFieldModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { DonutGaugePrototypeComponent } from \"./donut/donut-gauge-prototype.component\";\nimport { GaugeTestPageComponent } from \"./gauge-test-page.component\";\nimport { LinearGaugeHorizontalPrototypeComponent } from \"./horizontal/linear-gauge-horizontal-prototype.component\";\nimport { LinearGaugeVerticalPrototypeComponent } from \"./vertical/linear-gauge-vertical-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        LinearGaugeHorizontalPrototypeComponent,\n        LinearGaugeVerticalPrototypeComponent,\n        DonutGaugePrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    LinearGaugeLabelsPlugin,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-prototype\",\n    templateUrl: \"./linear-gauge-vertical-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-prototype.component.less\"],\n})\nexport class LinearGaugeVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    // extra clearance for the longer labels generated by the formatter\n    private labelClearance = 35;\n    private readonly staticMargin = 5;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeVerticalPrototypeComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            gridConfig.dimension.width(this.gaugeConfig.linearThickness ?? 0);\n\n            const flippedLabels = this.gaugeConfig.labels?.flipped ?? false;\n            const disableMarkers = this.gaugeConfig.thresholds?.disableMarkers ?? false;\n            this.labelsPlugin.config.flippedLabels = flippedLabels;\n            this.labelsPlugin.config.disableThresholdLabels = disableMarkers;\n\n            // update the margins to accommodate the label direction change\n            const staticMargin = disableMarkers ? 0 : this.staticMargin;\n            gridConfig.dimension.margin = {\n                top: staticMargin,\n                right: 0,\n                bottom: staticMargin,\n                left: 0,\n            };\n\n            const marginToUpdate = flippedLabels ? \"left\" : \"right\";\n            gridConfig.dimension.margin[marginToUpdate] = this.labelClearance;\n\n            this.chartAssist.chart.updateDimensions();\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gaugeConfigWithLabelClearance = { ...this.gaugeConfig, labels: { ...this.gaugeConfig.labels, clearance: this.labelClearance } };\n\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flippedLabels: this.gaugeConfig.labels?.flipped });\n        this.chartAssist = GaugeUtil.createChartAssist(gaugeConfigWithLabelClearance, GaugeMode.Vertical, this.labelsPlugin);\n        const gridConfig = this.chartAssist.chart.getGrid().config();\n        gridConfig.dimension.margin.top = this.staticMargin;\n        gridConfig.dimension.margin.bottom = this.staticMargin;\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(gaugeConfigWithLabelClearance, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";"]}