{"version":3,"sources":["./examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.ts","./examples/components/demo/development/gauge/gauge-test-page.component.less","./examples/components/demo/development/gauge/gauge-test-page.component.html","./examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.less","./examples/components/demo/development/gauge/gauge-test-page.component.ts","./examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.less","./examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.html","./examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.html","./examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.ts","./examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.html","./examples/components/demo/development/gauge/gauge-prototypes.module.ts","./examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.ts","./examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.less"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAoE;AAgB3C;IAOZ,uCAAuC,SAAvC,uCAAuC;;QAM/B,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,CAAC,CAAC;IA2CpC,CAAC;IAzCU,WAAW,CAAC,OAAkE;;QACjF,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE;YACzD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC;YAC7D,UAAU,CAAC,SAAS,CAAC,MAAM,OAAC,IAAI,CAAC,WAAW,CAAC,eAAe,mCAAI,CAAC,CAAC,CAAC;YACnE,MAAM,aAAa,eAAG,IAAI,CAAC,WAAW,CAAC,MAAM,0CAAE,OAAO,mCAAI,KAAK,CAAC;YAChE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;YAEvD,+DAA+D;YAC/D,MAAM,cAAc,eAAG,IAAI,CAAC,WAAW,CAAC,UAAU,0CAAE,cAAc,mCAAI,KAAK,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,sBAAsB,GAAG,cAAc,CAAC;YACjE,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG;gBAC1B,GAAG,EAAE,CAAC;gBACN,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;gBAC5C,MAAM,EAAE,CAAC;gBACT,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU;aAC7C,CAAC;YAEF,IAAI,CAAC,cAAc,EAAE;gBACjB,MAAM,cAAc,GAAG,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACxD,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,qFAAqC,CAAC,cAAc,CAAC,CAAC;aACvG;YACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,yDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC/E;IACL,CAAC;IAEM,QAAQ;;QACX,MAAM,UAAU,GAAG,6EAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAS,CAAC,UAAU,CAAiB,CAAC;QACjG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QACrD,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QACnD,MAAM,IAAI,GAAG,IAAI,sDAAM,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,KAAK,GAAG,IAAI,qDAAK,CAAC,IAAI,CAAC,CAAC;QAE9B,IAAI,CAAC,WAAW,GAAG,IAAI,2DAAW,CAAC,KAAK,EAAE,qDAAK,CAAC,CAAC;QAEjD,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAuB,CAAC,EAAE,aAAa,QAAE,IAAI,CAAC,WAAW,CAAC,MAAM,0CAAE,OAAO,EAAE,CAAC,CAAC;QACrG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,yDAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAS,CAAC,UAAU,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;CACJ;;0BAjDI,mDAAK;;AADG,uCAAuC;IALnD,+DAAS,CAAC;QACP,QAAQ,EAAE,mCAAmC;QAC7C,8GAAiE;;KAEpE,CAAC;GACW,uCAAuC,CAkDnD;AAlDmD;;;;;;;;;;;;;ACvBpD;AAAe,iFAAkB,kBAAkB,GAAG,WAAW,iBAAiB,GAAG,+CAA+C,uWAAuW,E;;;;;;;;;;;;ACA3e;AAAe,09NAA25N,E;;;;;;;;;;;;ACA16N;AAAe,wEAAS,iBAAiB,GAAG,+CAA+C,uZAAuZ,E;;;;;;;;;;;;;;;;;;;;;;;ACA7b;AACqB;AAUjD;IAOZ,sBAAsB,SAAtB,sBAAsB;IAuB/B,YAAmB,aAAiC,EAAU,iBAAwC;QAAnF,kBAAa,GAAb,aAAa,CAAoB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAuB;QAtB/F,UAAK,GAAG,GAAG,CAAC;QACZ,aAAQ,GAAG,IAAI,CAAC;QAIhB,kBAAa,GAAG,8EAA8B,CAAC,aAAa,CAAC;QAC7D,cAAS,GAAG,4EAA4B,CAAC,KAAK,CAAC;QAC/C,cAAS,GAAG,GAAG,CAAC;QAEhB,mBAAc,GAAG,IAAI,CAAC;QACtB,oBAAe,GAAG,IAAI,CAAC;QACvB,4BAAuB,GAAG,IAAI,CAAC;QAC/B,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QAEnB,iBAAY,GAAG,IAAI,CAAC;QACpB,kBAAa,GAAG,IAAI,CAAC;QACrB,cAAS,GAAG,EAAE,CAAC;QAMlB,iFAAiF;QACjF,iFAAiF;QACjF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE5C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAS,EAAE,EAAE;YAChC,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACxE,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,yDAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAClG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC;IACxE,CAAC;IAEM,gBAAgB,CAAC,QAAiB;QACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,eAAe,CAAC,OAAgB;QACnC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,aAAa,CAAC,KAAa;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,iBAAiB,CAAC,SAAiB;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,oBAAoB,CAAC,KAAa;QACrC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,qBAAqB,CAAC,KAAa;QACtC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,sBAAsB,CAAC,OAAgB;QAC1C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,uBAAuB,CAAC,OAAgB;QAC3C,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEM,8BAA8B,CAAC,OAAgB;QAClD,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAEO,cAAc;QAClB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,GAAG,EAAE,IAAI,CAAC,QAAQ;YAClB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE;gBACJ,SAAS,EAAE,IAAI,CAAC,cAAc;gBAC9B,OAAO,EAAE,IAAI,CAAC,UAAU;aAC3B;YACD,eAAe,EAAE,IAAI,CAAC,SAAS;SAClC,CAAC;IACN,CAAC;IAEO,sBAAsB;QAC1B,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wEAAwB,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;SAChI;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wEAAwB,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;SACjI;QAED,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wEAAwB,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5F,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wEAAwB,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;QAC9F,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC;IACnE,CAAC;CACJ;;YArIQ,gEAAkB;YAAE,mEAAqB;;AAiBrC,sBAAsB;IALlC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,4FAA+C;;KAElD,CAAC;mFAwBoC,gEAAkB,EAA6B,mEAAqB;GAvB7F,sBAAsB,CAoHlC;AApHkC;;;;;;;;;;;;;AClBnC;AAAe,wEAAS,kBAAkB,GAAG,+CAA+C,mZAAmZ,E;;;;;;;;;;;;ACA/e;AAAe,oLAAqH,E;;;;;;;;;;;;ACApI;AAAe,qOAAsK,8QAA8Q,8DAA8D,oMAAoM,E;;;;;;;;;;;;;;;;;;;;;;ACAjoB;AAiB3C;IAOZ,4BAA4B,SAA5B,4BAA4B;;QAWpB,mBAAc,GAAG,EAAE,CAAC;IAgEzC,CAAC;IA9DU,WAAW,CAAC,OAAuD;;QACtE,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YAC3C,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC;YAC3D,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;YAC/D,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;SAC7C;QAED,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE;YACzD,MAAM,cAAc,eAAG,IAAI,CAAC,WAAW,CAAC,UAAU,0CAAE,cAAc,mCAAI,KAAK,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,sBAAsB,GAAG,cAAc,CAAC;YAEjE,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC;YAC7D,MAAM,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3D,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG;gBAC1B,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,SAAS;aAClB,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,yDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC/E;IACL,CAAC;IAEM,QAAQ;QACX,MAAM,6BAA6B,mCAAQ,IAAI,CAAC,WAAW,KAAE,MAAM,kCAAO,IAAI,CAAC,WAAW,CAAC,MAAM,KAAE,SAAS,EAAE,IAAI,CAAC,cAAc,MAAI,CAAC;QACtI,MAAM,IAAI,GAAG,iEAAS,CAAC,6BAA6B,EAAE,yDAAS,CAAC,KAAK,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;QAE1C,IAAI,CAAC,WAAW,GAAG,IAAI,2DAAW,CAAC,IAAI,qDAAK,CAAC,IAAI,CAAC,EAAE,sDAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,uEAAuB,EAAE,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAErD,IAAI,CAAC,YAAY,GAAG,IAAI,sEAAsB,EAAE,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,yDAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAS,CAAC,KAAK,CAAC,CAAC;QAEhF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAEO,eAAe;QACnB,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC;QAC3E,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAEO,uBAAuB;QAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC5B,MAAM,cAAc,GAAI,MAAM,CAAC,QAAQ,CAAC,MAAgC,CAAC;YACzE,0DAA0D;YAC1D,cAAc,CAAC,YAAY,GAAG,KAAK,CAAC;YACpC,cAAc,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAClD,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;mBA1EI,mDAAK;4BACL,mDAAK;2BACL,mDAAK;0BACL,mDAAK;;AAJG,4BAA4B;IALxC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,kGAAqD;;KAExD,CAAC;GACW,4BAA4B,CA2ExC;AA3EwC;;;;;;;;;;;;;ACxBzC;AAAe,oLAAqH,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3F;AACI;AACU;AAC+B;AACpC;AAEiB;AAEoB;AAClB;AAC8C;AACN;AAE7G,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iFAAsB;QACjC,IAAI,EAAE;YACF,IAAI,EAAE;gBACF,aAAa,EAAE,IAAI;aACtB;SACJ;KACJ;CACJ,CAAC;IAmBW,qBAAqB,SAArB,qBAAqB;CACjC;AADY,qBAAqB;IAjBjC,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,+HAAuC;YACvC,0HAAqC;YACrC,mGAA4B;YAC5B,iFAAsB;SACzB;QACD,OAAO,EAAE;YACL,6DAAe;YACf,gEAAkB;YAClB,8DAAgB;YAChB,2EAAgB;YAChB,+DAAe;YACf,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC;KACJ,CAAC;GACW,qBAAqB,CACjC;AADiC;;;;;;;;;;;;;;;;;;;;;;;AC1CkC;AAgB3C;IAOZ,qCAAqC,SAArC,qCAAqC;;QAM9C,mEAAmE;QAC3D,mBAAc,GAAG,EAAE,CAAC;QACX,iBAAY,GAAG,CAAC,CAAC;IA+CtC,CAAC;IA7CU,WAAW,CAAC,OAAgE;;QAC/E,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE;YACzD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC;YAC7D,UAAU,CAAC,SAAS,CAAC,KAAK,OAAC,IAAI,CAAC,WAAW,CAAC,eAAe,mCAAI,CAAC,CAAC,CAAC;YAElE,MAAM,aAAa,eAAG,IAAI,CAAC,WAAW,CAAC,MAAM,0CAAE,OAAO,mCAAI,KAAK,CAAC;YAChE,MAAM,cAAc,eAAG,IAAI,CAAC,WAAW,CAAC,UAAU,0CAAE,cAAc,mCAAI,KAAK,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;YACvD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,sBAAsB,GAAG,cAAc,CAAC;YAEjE,+DAA+D;YAC/D,MAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;YAC5D,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG;gBAC1B,GAAG,EAAE,YAAY;gBACjB,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,YAAY;gBACpB,IAAI,EAAE,CAAC;aACV,CAAC;YAEF,IAAI,CAAC,cAAc,EAAE;gBACjB,MAAM,cAAc,GAAG,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;gBACxD,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;aACrE;YAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,yDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC/E;IACL,CAAC;IAEM,QAAQ;;QACX,MAAM,6BAA6B,mCAAQ,IAAI,CAAC,WAAW,KAAE,MAAM,kCAAO,IAAI,CAAC,WAAW,CAAC,MAAM,KAAE,SAAS,EAAE,IAAI,CAAC,cAAc,MAAI,CAAC;QACtI,MAAM,UAAU,GAAG,6EAAqB,CAAC,6BAA6B,EAAE,yDAAS,CAAC,QAAQ,CAAiB,CAAC;QAC5G,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;QACpD,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QACvD,MAAM,IAAI,GAAG,IAAI,sDAAM,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,KAAK,GAAG,IAAI,qDAAK,CAAC,IAAI,CAAC,CAAC;QAE9B,IAAI,CAAC,WAAW,GAAG,IAAI,2DAAW,CAAC,KAAK,EAAE,qDAAK,CAAC,CAAC;QAEjD,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAuB,CAAC,EAAE,aAAa,QAAE,IAAI,CAAC,WAAW,CAAC,MAAM,0CAAE,OAAO,EAAE,CAAC,CAAC;QACrG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,yDAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAS,CAAC,QAAQ,CAAC,CAAC;QACnF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;CACJ;;0BAtDI,mDAAK;;AADG,qCAAqC;IALjD,+DAAS,CAAC;QACP,QAAQ,EAAE,iCAAiC;QAC3C,4GAA+D;;KAElE,CAAC;GACW,qCAAqC,CAuDjD;AAvDiD;;;;;;;;;;;;;ACvBlD;AAAe,gFAAiB,sBAAsB,oBAAoB,qBAAqB,8BAA8B,2CAA2C,GAAG,+CAA+C,mmBAAmmB,E","file":"gauge-gauge-prototypes-module-es2015.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    LINEAR_GAUGE_LABEL_CLEARANCE_DEFAULTS,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-prototype.component.less\"],\n})\nexport class LinearGaugeHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n    private readonly rightMargin = 15;\n    private readonly leftMargin = 5;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeHorizontalPrototypeComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            gridConfig.dimension.height(this.gaugeConfig.linearThickness ?? 0);\n            const flippedLabels = this.gaugeConfig.labels?.flipped ?? false;\n            this.labelsPlugin.config.flippedLabels = flippedLabels;\n\n            // update the margins to accommodate the label direction change\n            const disableMarkers = this.gaugeConfig.thresholds?.disableMarkers ?? false;\n            this.labelsPlugin.config.disableThresholdLabels = disableMarkers;\n            gridConfig.dimension.margin = {\n                top: 0,\n                right: disableMarkers ? 0 : this.rightMargin,\n                bottom: 0,\n                left: disableMarkers ? 0 : this.leftMargin,\n            };\n\n            if (!disableMarkers) {\n                const marginToUpdate = flippedLabels ? \"top\" : \"bottom\";\n                gridConfig.dimension.margin[marginToUpdate] = LINEAR_GAUGE_LABEL_CLEARANCE_DEFAULTS[marginToUpdate];\n            }\n            this.chartAssist.chart.updateDimensions();\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gridConfig = linearGaugeGridConfig(this.gaugeConfig, GaugeMode.Horizontal) as XYGridConfig;\n        gridConfig.dimension.margin.right = this.rightMargin;\n        gridConfig.dimension.margin.left = this.leftMargin;\n        const grid = new XYGrid(gridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flippedLabels: this.gaugeConfig.labels?.flipped });\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".testing-region {\\n  height: 500px;\\n}\\n.column {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtBQUFKIiwiZmlsZSI6ImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXN0aW5nLXJlZ2lvbiB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLmNvbHVtbiB7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuIl19 */\";","export default \"<div class=\\\"testing-region d-flex align-items-center justify-content-around\\\">\\n    <donut-gauge-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [size]=\\\"donutSize\\\" [annularGrowth]=\\\"annularGrowth\\\" [annularWidth]=\\\"thickness\\\">\\n    </donut-gauge-prototype>\\n    <linear-gauge-vertical-prototype [gaugeConfig]=\\\"gaugeConfig\\\"></linear-gauge-vertical-prototype>\\n    <linear-gauge-horizontal-prototype [gaugeConfig]=\\\"gaugeConfig\\\"></linear-gauge-horizontal-prototype>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"column\\\">\\n        <div class=\\\"mb-2\\\">\\n            <nui-form-field caption=\\\"Donut Annular Growth\\\"\\n                            hint=\\\"Set to zero to have the donut obey the manual thickness setting\\\"\\n                            [showOptionalText]=\\\"false\\\">\\n                <nui-textbox-number type=\\\"number\\\"\\n                                    [(ngModel)]=\\\"annularGrowth\\\"\\n                                    [minValue]=\\\"0\\\"\\n                                    [step]=\\\"0.01\\\"\\n                                    customBoxWidth=\\\"75px\\\"></nui-textbox-number>\\n            </nui-form-field>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"donutSizeInput\\\">\\n                Donut Size\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [(ngModel)]=\\\"donutSize\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [step]=\\\"25\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"donutSizeInput\\\"></nui-textbox-number>\\n        </div>\\n    </div>\\n    <div class=\\\"column ml-5\\\">\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"valueInput\\\">\\n                Value\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"value\\\"\\n                                (ngModelChange)=\\\"onValueChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [maxValue]=\\\"maxValue\\\"\\n                                [step]=\\\"valueStep\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"valueInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"thicknessInput\\\">\\n                Thickness\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"thickness\\\"\\n                                (ngModelChange)=\\\"onThicknessChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"thicknessInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"lowThresholdInput\\\">\\n                Low Threshold\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"lowThreshold\\\"\\n                                (ngModelChange)=\\\"onLowThresholdChange($event)\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [maxValue]=\\\"highThreshold - valueStep\\\"\\n                                [step]=\\\"valueStep\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"lowThresholdInput\\\"></nui-textbox-number>\\n        </div>\\n        <div class=\\\"mb-2\\\">\\n            <label for=\\\"highThresholdInput\\\">\\n                High Threshold\\n            </label>\\n            <br />\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [ngModel]=\\\"highThreshold\\\"\\n                                (ngModelChange)=\\\"onHighThresholdChange($event)\\\"\\n                                [minValue]=\\\"lowThreshold + valueStep\\\"\\n                                [maxValue]=\\\"maxValue\\\"\\n                                [step]=\\\"valueStep\\\"\\n                                customBoxWidth=\\\"75px\\\"\\n                                name=\\\"highThresholdInput\\\"></nui-textbox-number>\\n        </div>\\n    </div>\\n    <div class=\\\"column ml-5\\\">\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"enable-warning\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"warningEnabled\\\"\\n                       (ngModelChange)=\\\"onWarningEnabledChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-warning\\\">Warning Enabled</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"enable-critical\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [(ngModel)]=\\\"criticalEnabled\\\"\\n                       (ngModelChange)=\\\"onCriticalEnabledChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-critical\\\">Critical Enabled</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       id=\\\"enable-markers\\\"\\n                       [ngModel]=\\\"thresholdMarkersEnabled\\\"\\n                       (ngModelChange)=\\\"onEnableThresholdMarkersChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"enable-markers\\\">Markers Enabled</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"reversed\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"reversed\\\"\\n                       (ngModelChange)=\\\"onReversedChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"reversed\\\">Reversed</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input id=\\\"flip-labels\\\"\\n                       class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       [ngModel]=\\\"flipLabels\\\"\\n                       (ngModelChange)=\\\"onFlippedChange($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"flip-labels\\\">Flip Labels</label>\\n            </div>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <input class=\\\"mb-2\\\"\\n                       type=\\\"checkbox\\\"\\n                       id=\\\"dark-theme\\\"\\n                       [ngModel]=\\\"themeSwitcher.isDarkModeEnabledSubject | async\\\"\\n                       (ngModelChange)=\\\"themeSwitcher.setDarkTheme($event)\\\" />\\n                <label class=\\\"px-3\\\" for=\\\"dark-theme\\\">Dark Theme</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \".chart {\\n  width: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMjVweDtcbn1cbiJdfQ== */\";","import { Component, OnDestroy } from \"@angular/core\";\nimport { ThemeSwitchService, UnitConversionService } from \"@nova-ui/bits\";\nimport {\n    DEFAULT_RADIAL_RENDERER_CONFIG,\n    GaugeUtil,\n    IGaugeConfig,\n    GaugeThresholdDefs,\n    StandardGaugeThresholdId,\n    StandardLinearGaugeThickness,\n    IGaugeThresholdsConfig,\n    Formatter,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n    styleUrls: [\"./gauge-test-page.component.less\"],\n})\nexport class GaugeTestPageComponent implements OnDestroy {\n    public value = 950;\n    public maxValue = 2000;\n    public thresholds: IGaugeThresholdsConfig;\n    public gaugeConfig: IGaugeConfig;\n\n    public annularGrowth = DEFAULT_RADIAL_RENDERER_CONFIG.annularGrowth;\n    public thickness = StandardLinearGaugeThickness.Large;\n    public donutSize = 200;\n\n    public warningEnabled = true;\n    public criticalEnabled = true;\n    public thresholdMarkersEnabled = true;\n    public reversed = false;\n    public flipLabels = false;\n\n    public lowThreshold = 1000;\n    public highThreshold = 1500;\n    public valueStep = 10;\n\n    private originalWithRefreshRoute: boolean;\n    private labelFormatter: Formatter<string>;\n\n    constructor(public themeSwitcher: ThemeSwitchService, private unitConversionSvc: UnitConversionService) {\n        // disable route refreshing because the theme service currently always reverts to\n        // the light theme on route refresh unless route.data.showThemeSwitcher is 'true'\n        this.originalWithRefreshRoute = this.themeSwitcher.withRefreshRoute;\n        this.themeSwitcher.withRefreshRoute = false;\n\n        this.labelFormatter = (d: string) => {\n            const conversion = this.unitConversionSvc.convert(parseFloat(d), 1000, 2);\n            return this.unitConversionSvc.getFullDisplay(conversion, \"generic\");\n        };\n\n        this.thresholds = GaugeUtil.createStandardThresholdsConfig(this.lowThreshold, this.highThreshold);\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public ngOnDestroy(): void {\n        this.themeSwitcher.withRefreshRoute = this.originalWithRefreshRoute;\n    }\n\n    public onReversedChange(reversed: boolean): void {\n        this.reversed = reversed;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onFlippedChange(flipped: boolean): void {\n        this.flipLabels = flipped;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onThicknessChange(thickness: number): void {\n        this.thickness = thickness;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onLowThresholdChange(value: number): void {\n        this.lowThreshold = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onHighThresholdChange(value: number): void {\n        this.highThreshold = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onCriticalEnabledChange(enabled: boolean): void {\n        this.criticalEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onEnableThresholdMarkersChange(enabled: boolean): void {\n        this.thresholdMarkersEnabled = enabled;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        this.updateThresholdsConfig();\n\n        return {\n            value: this.value,\n            max: this.maxValue,\n            thresholds: this.thresholds,\n            labels: {\n                formatter: this.labelFormatter,\n                flipped: this.flipLabels,\n            },\n            linearThickness: this.thickness,\n        };\n    }\n\n    private updateThresholdsConfig() {\n        if (this.warningEnabled) {\n            this.thresholds.definitions[StandardGaugeThresholdId.Warning].value = this.reversed ? this.highThreshold : this.lowThreshold;\n        }\n\n        if (this.criticalEnabled) {\n            this.thresholds.definitions[StandardGaugeThresholdId.Critical].value = this.reversed ? this.lowThreshold : this.highThreshold;\n        }\n\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].enabled = this.criticalEnabled;\n        this.thresholds.reversed = this.reversed;\n        this.thresholds.disableMarkers = !this.thresholdMarkersEnabled;\n    }\n}\n","export default \".chart {\\n  height: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMjVweDtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{gaugeConfig.value | unitConversion : 2 : false : \\\"generic\\\"}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    IRadialRendererConfig,\n    radial,\n    radialGrid,\n    gaugeGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-prototype\",\n    templateUrl: \"./donut-gauge-prototype.component.html\",\n    styleUrls: [\"./donut-gauge-prototype.component.less\"],\n})\nexport class DonutGaugePrototypeComponent implements OnChanges, OnInit {\n    @Input() public size: number;\n    @Input() public annularGrowth: number;\n    @Input() public annularWidth: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private labelsPlugin: DonutGaugeLabelsPlugin;\n    private readonly labelClearance = 40;\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugePrototypeComponent>): void {\n        if ((changes.size && !changes.size.firstChange) ||\n            (changes.annularWidth && !changes.annularWidth.firstChange) ||\n            (changes.annularGrowth && !changes.annularGrowth.firstChange)) {\n            this.updateDonutSize();\n            this.updateAnnularAttributes();\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            const disableMarkers = this.gaugeConfig.thresholds?.disableMarkers ?? false;\n            this.labelsPlugin.config.disableThresholdLabels = disableMarkers;\n\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            const clearance = disableMarkers ? 0 : this.labelClearance;\n            gridConfig.dimension.margin = {\n                top: clearance,\n                right: clearance,\n                bottom: clearance,\n                left: clearance,\n            };\n\n            this.chartAssist.chart.updateDimensions();\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gaugeConfigWithLabelClearance = { ...this.gaugeConfig, labels: { ...this.gaugeConfig.labels, clearance: this.labelClearance } };\n        const grid = gaugeGrid(gaugeConfigWithLabelClearance, GaugeMode.Donut);\n        grid.config().dimension.autoHeight = false;\n        grid.config().dimension.autoWidth = false;\n\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.labelsPlugin = new DonutGaugeLabelsPlugin();\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        this.updateDonutSize();\n        this.updateAnnularAttributes();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateDonutSize(): void {\n        const gridDimensions = this.chartAssist.chart.getGrid().config().dimension;\n        gridDimensions.height(this.size);\n        gridDimensions.width(this.size);\n    }\n\n    private updateAnnularAttributes(): void {\n        this.seriesSet.forEach(series => {\n            const rendererConfig = (series.renderer.config as IRadialRendererConfig);\n            // increase the max thickness from 30 for testing purposes\n            rendererConfig.maxThickness = 20000;\n            rendererConfig.annularGrowth = this.annularGrowth;\n            rendererConfig.annularWidth = this.annularWidth;\n        });\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiFormFieldModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { DonutGaugePrototypeComponent } from \"./donut/donut-gauge-prototype.component\";\nimport { GaugeTestPageComponent } from \"./gauge-test-page.component\";\nimport { LinearGaugeHorizontalPrototypeComponent } from \"./horizontal/linear-gauge-horizontal-prototype.component\";\nimport { LinearGaugeVerticalPrototypeComponent } from \"./vertical/linear-gauge-vertical-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        LinearGaugeHorizontalPrototypeComponent,\n        LinearGaugeVerticalPrototypeComponent,\n        DonutGaugePrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n    linearGaugeGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-prototype\",\n    templateUrl: \"./linear-gauge-vertical-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-prototype.component.less\"],\n})\nexport class LinearGaugeVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n    // extra clearance for the longer labels generated by the formatter\n    private labelClearance = 35;\n    private readonly staticMargin = 5;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeVerticalPrototypeComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            gridConfig.dimension.width(this.gaugeConfig.linearThickness ?? 0);\n\n            const flippedLabels = this.gaugeConfig.labels?.flipped ?? false;\n            const disableMarkers = this.gaugeConfig.thresholds?.disableMarkers ?? false;\n            this.labelsPlugin.config.flippedLabels = flippedLabels;\n            this.labelsPlugin.config.disableThresholdLabels = disableMarkers;\n\n            // update the margins to accommodate the label direction change\n            const staticMargin = disableMarkers ? 0 : this.staticMargin;\n            gridConfig.dimension.margin = {\n                top: staticMargin,\n                right: 0,\n                bottom: staticMargin,\n                left: 0,\n            };\n\n            if (!disableMarkers) {\n                const marginToUpdate = flippedLabels ? \"left\" : \"right\";\n                gridConfig.dimension.margin[marginToUpdate] = this.labelClearance;\n            }\n\n            this.chartAssist.chart.updateDimensions();\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const gaugeConfigWithLabelClearance = { ...this.gaugeConfig, labels: { ...this.gaugeConfig.labels, clearance: this.labelClearance } };\n        const gridConfig = linearGaugeGridConfig(gaugeConfigWithLabelClearance, GaugeMode.Vertical) as XYGridConfig;\n        gridConfig.dimension.margin.top = this.staticMargin;\n        gridConfig.dimension.margin.bottom = this.staticMargin;\n        const grid = new XYGrid(gridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flippedLabels: this.gaugeConfig.labels?.flipped });\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";"],"sourceRoot":"webpack:///"}