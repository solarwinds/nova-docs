{"version":3,"sources":["webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.ts","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.html","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.less","webpack:///examples/components/demo/development/gauge/gauge-test-page.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.less","webpack:///examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.html","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.html","webpack:///examples/components/demo/development/gauge/gauge-prototypes.module.ts","webpack:///examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.ts","webpack:///examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.less"],"names":["LinearGaugeHorizontalPrototypeComponent","thickness","changes","firstChange","seriesConfig","chartAssist","chart","getGrid","config","dimension","height","updateDimensions","update","updateSeriesSet","seriesSet","grid","Horizontal","margin","right","assembleSeriesSet","selector","template","GaugeTestPageComponent","value","maxValue","thresholds","reversed","reversedValueColorAccessor","createReversedValueColorAccessor","max","valueColorAccessor","undefined","DonutGaugePrototypeComponent","annularWidth","updateAnnularWidth","contentPlugin","addPlugin","labelConfig","gridMargin","top","bottom","left","Donut","setThresholdLabelFormatter","d","forEach","series","renderer","routes","path","component","data","srlc","hideIndicator","GaugePrototypesModule","declarations","imports","forChild","LinearGaugeVerticalPrototypeComponent","width","Vertical"],"mappings":"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","file":"gauge-gauge-prototypes-module-es5.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    GAUGE_THICKNESS_DEFAULT,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeSeriesConfig,\n    linearGaugeGridConfig,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-prototype.component.less\"],\n})\nexport class LinearGaugeHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness = GAUGE_THICKNESS_DEFAULT;\n    @Input() public seriesConfig: IGaugeSeriesConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeHorizontalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.seriesConfig && !changes.seriesConfig.firstChange)) {\n            if (changes.thickness) {\n                this.chartAssist.chart.getGrid().config().dimension.height(this.thickness);\n                this.chartAssist.chart.updateDimensions();\n            }\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.seriesConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal, this.thickness) as XYGridConfig);\n        grid.config().dimension.margin.right = 5;\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.seriesConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \"<charts-test-harness>\\n    <div class=\\\"d-flex align-items-center justify-content-around\\\">\\n        <donut-gauge-prototype [seriesConfig]=\\\"getSeriesConfig()\\\" [annularWidth]=\\\"thickness\\\"></donut-gauge-prototype>\\n        <linear-gauge-vertical-prototype [seriesConfig]=\\\"getSeriesConfig()\\\" [thickness]=\\\"thickness\\\"></linear-gauge-vertical-prototype>\\n        <linear-gauge-horizontal-prototype [seriesConfig]=\\\"getSeriesConfig()\\\" [thickness]=\\\"thickness\\\"></linear-gauge-horizontal-prototype>\\n    </div>\\n\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"valueInput\\\">\\n            Value\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [(ngModel)]=\\\"value\\\"\\n                            [minValue]=\\\"0\\\"\\n                            [maxValue]=\\\"maxValue\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"valueInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"thicknessInput\\\">\\n            Thickness\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [(ngModel)]=\\\"thickness\\\"\\n                            [minValue]=\\\"10\\\"\\n                            [maxValue]=\\\"30\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"thicknessInput\\\"></nui-textbox-number>\\n    </div>\\n</charts-test-harness>\\n<div class=\\\"ml-3\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <input id=\\\"reversed\\\"\\n               class=\\\"mb-2\\\"\\n               type=\\\"checkbox\\\"\\n               [(ngModel)]=\\\"reversed\\\" />\\n        <label class=\\\"px-3\\\" for=\\\"reversed\\\">Reversed</label>\\n    </div>\\n</div>\\n\";","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","import { Component } from \"@angular/core\";\nimport { DataAccessor, GaugeUtil, GAUGE_THICKNESS_DEFAULT, IGaugeSeriesConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n})\nexport class GaugeTestPageComponent {\n    public value = 95;\n    public maxValue = 200;\n    public thickness = GAUGE_THICKNESS_DEFAULT;\n    public thresholds: number[] = [100, 125];\n    public reversed = false;\n\n    private reversedValueColorAccessor: DataAccessor<any, any> | undefined;\n\n    constructor() {\n        // this.thresholds = new Array(200).fill(null).map((e, i) => i);\n        // this.thresholds = [187, 50, 75, 100, 125, 150, 175, 200];\n        this.reversedValueColorAccessor = GaugeUtil.createReversedValueColorAccessor(this.thresholds);\n    }\n\n    public getSeriesConfig(): IGaugeSeriesConfig {\n        return {\n            value: this.value,\n            max: this.maxValue,\n            thresholds: this.thresholds,\n            valueColorAccessor: this.reversed ? this.reversedValueColorAccessor : undefined,\n        };\n    }\n}\n","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMDBweDtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{seriesConfig.value | number:'1.0-0'}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    GAUGE_THICKNESS_DEFAULT,\n    IAccessors,\n    IChartAssistSeries,\n    IDonutGaugeLabelsPluginConfig,\n    IGaugeSeriesConfig,\n    IRadialRendererConfig,\n    radial,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-prototype\",\n    templateUrl: \"./donut-gauge-prototype.component.html\",\n    styleUrls: [\"./donut-gauge-prototype.component.less\"],\n})\nexport class DonutGaugePrototypeComponent implements OnChanges, OnInit {\n    @Input() public annularWidth = GAUGE_THICKNESS_DEFAULT;\n    @Input() public seriesConfig: IGaugeSeriesConfig;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugePrototypeComponent>) {\n        if ((changes.annularWidth && !changes.annularWidth.firstChange) || (changes.seriesConfig && !changes.seriesConfig.firstChange)) {\n            if (changes.annularWidth) {\n                this.updateAnnularWidth();\n            }\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.seriesConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = radialGrid();\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        const labelConfig: IDonutGaugeLabelsPluginConfig = {\n            gridMargin: { top: 20, right: 20, bottom: 20, left: 20 },\n        };\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin(labelConfig));\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.seriesConfig, GaugeMode.Donut);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}MS`, this.seriesSet);\n\n        this.updateAnnularWidth();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateAnnularWidth() {\n        this.seriesSet.forEach(series => {\n            (series.renderer.config as IRadialRendererConfig).annularWidth = this.annularWidth;\n        });\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { DonutGaugePrototypeComponent } from \"./donut/donut-gauge-prototype.component\";\nimport { GaugeTestPageComponent } from \"./gauge-test-page.component\";\nimport { LinearGaugeHorizontalPrototypeComponent } from \"./horizontal/linear-gauge-horizontal-prototype.component\";\nimport { LinearGaugeVerticalPrototypeComponent } from \"./vertical/linear-gauge-vertical-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        LinearGaugeHorizontalPrototypeComponent,\n        LinearGaugeVerticalPrototypeComponent,\n        DonutGaugePrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    GAUGE_THICKNESS_DEFAULT,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeSeriesConfig,\n    linearGaugeGridConfig,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-prototype\",\n    templateUrl: \"./linear-gauge-vertical-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-prototype.component.less\"],\n})\nexport class LinearGaugeVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness = GAUGE_THICKNESS_DEFAULT;\n    @Input() public seriesConfig: IGaugeSeriesConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeVerticalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.seriesConfig && !changes.seriesConfig.firstChange)) {\n            if (changes.thickness) {\n                this.chartAssist.chart.getGrid().config().dimension.width(this.thickness);\n                this.chartAssist.chart.updateDimensions();\n            }\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.seriesConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical, this.thickness) as XYGridConfig);\n        grid.config().dimension.margin.top = 5;\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.seriesConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".chart {\\n  width: 280px;\\n  height: 280px;\\n}\\n.content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7RUFDQSxhQUFBO0FBREo7QUFJQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQUZKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgd2lkdGg6IDI4MHB4O1xuICAgIGhlaWdodDogMjgwcHg7XG59XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";"]}