{"version":3,"sources":["./examples/components/demo/advanced-usage/grid-config/base-grid/chart-docs-base-grid.module.ts","./examples/components/demo/advanced-usage/grid-config/base-grid/margins/base-grid-auto-margins.example.component.ts","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?4d5e","./examples/components/demo/advanced-usage/grid-config/base-grid/padding/base-grid-padding.example.component.ts","./examples/components/demo/advanced-usage/grid-config/base-grid/disabling-interaction/base-grid-disabling-interaction.example.component.ts","./examples/components/demo/advanced-usage/grid-config/base-grid/height-and-width/base-grid-height-and-width.example.component.ts","./examples/components/demo/advanced-usage/grid-config/base-grid/margins/base-grid-margins.example.component.ts","./examples/components/demo/advanced-usage/grid-config/base-grid/chart-docs-base-grid.component.ts"],"names":[],"mappings":"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","file":"components-demo-advanced-usage-grid-config-base-grid-chart-docs-base-grid-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiCheckboxModule, NuiDocsModule, NuiMessageModule, SrlcStage } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { ChartDocsBaseGridComponent } from \"./chart-docs-base-grid.component\";\nimport { BaseGridDisablingInteractionExampleComponent } from \"./disabling-interaction/base-grid-disabling-interaction.example.component\";\nimport { BaseGridHeightAndWidthExampleComponent } from \"./height-and-width/base-grid-height-and-width.example.component\";\nimport { BaseGridAutoMarginsExampleComponent } from \"./margins/base-grid-auto-margins.example.component\";\nimport { BaseGridMarginsExampleComponent } from \"./margins/base-grid-margins.example.component\";\nimport { BaseGridPaddingExampleComponent } from \"./padding/base-grid-padding.example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsBaseGridComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"disabling-interaction\",\n        component: BaseGridDisablingInteractionExampleComponent,\n    },\n    {\n        path: \"margins\",\n        component: BaseGridMarginsExampleComponent,\n    },\n    {\n        path: \"padding\",\n        component: BaseGridPaddingExampleComponent,\n    },\n    {\n        path: \"height-and-width\",\n        component: BaseGridHeightAndWidthExampleComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        BaseGridDisablingInteractionExampleComponent,\n        BaseGridAutoMarginsExampleComponent,\n        BaseGridMarginsExampleComponent,\n        BaseGridPaddingExampleComponent,\n        BaseGridHeightAndWidthExampleComponent,\n        ChartDocsBaseGridComponent,\n    ],\n    imports: [\n        NuiCheckboxModule,\n        NuiChartsModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsBaseGridModule {\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Chart, ChartComponent, IChartSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, XYGrid, XYGridConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"nui-base-grid-auto-margins-example\",\n    templateUrl: \"./base-grid-auto-margins.example.component.html\",\n})\nexport class BaseGridAutoMarginsExampleComponent implements OnInit {\n    public chart: Chart;\n\n    @ViewChild(ChartComponent) chartComponent: ChartComponent;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.axis.bottom.fit = false;\n        gridConfig.axis.left.fit = false;\n\n        this.chart = new Chart(new XYGrid(gridConfig));\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors: new LineAccessors(),\n            renderer: new LineRenderer(),\n            scales: {\n                x: new LinearScale(),\n                y: new LinearScale(),\n            },\n        }));\n\n        this.chart.update(seriesSet);\n    }\n\n    public toggleFit() {\n        const gridConfig = this.chart.getGrid().config() as XYGridConfig;\n        gridConfig.axis.bottom.fit = !gridConfig.axis.bottom.fit;\n        gridConfig.axis.left.fit = !gridConfig.axis.left.fit;\n        if (!gridConfig.axis.bottom.fit) {\n            gridConfig.dimension.margin = Object.assign({}, XYGridConfig.DEFAULT_MARGIN);\n        }\n        this.chart.updateDimensions();\n        this.chartComponent.redraw();\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    return [{\n        id: \"series-1\",\n        name: \"Series 1\",\n        data: [\n            { x: 100, y: 10000 },\n            { x: 200, y: 30000 },\n            { x: 300, y: 5000 },\n            { x: 400, y: 20000 },\n            { x: 500, y: 15000 },\n        ],\n    }];\n}\n","var map = {\n\t\"./chart-docs-base-grid.component.html\": \"zB9g\",\n\t\"./chart-docs-base-grid.component.ts\": \"r8lI\",\n\t\"./chart-docs-base-grid.module.ts\": \"jFy7\",\n\t\"./disabling-interaction/base-grid-disabling-interaction.example.component.html\": \"Fl8W\",\n\t\"./disabling-interaction/base-grid-disabling-interaction.example.component.ts\": \"bJ8T\",\n\t\"./height-and-width/base-grid-height-and-width.example.component.html\": \"pOcv\",\n\t\"./height-and-width/base-grid-height-and-width.example.component.ts\": \"CyQ5\",\n\t\"./margins/base-grid-auto-margins.example.component.html\": \"u0jB\",\n\t\"./margins/base-grid-auto-margins.example.component.ts\": \"HAcT\",\n\t\"./margins/base-grid-margins.example.component.html\": \"ohXm\",\n\t\"./margins/base-grid-margins.example.component.ts\": \"/6ss\",\n\t\"./padding/base-grid-padding.example.component.html\": \"6nh+\",\n\t\"./padding/base-grid-padding.example.component.ts\": \"0BQA\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"G96f\";","import { Component, OnInit } from \"@angular/core\";\nimport { Chart, IChartSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, XYGrid, XYGridConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"nui-base-grid-padding-example\",\n    templateUrl: \"./base-grid-padding.example.component.html\",\n})\nexport class BaseGridPaddingExampleComponent implements OnInit {\n    public chart: Chart;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.dimension.padding = {\n            top: 25,\n            right: 50,\n            bottom: 25,\n            left: 50,\n        };\n\n        this.chart = new Chart(new XYGrid(gridConfig));\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors: new LineAccessors(),\n            renderer: new LineRenderer(),\n            scales: {\n                x: new LinearScale(),\n                y: new LinearScale(),\n            },\n        }));\n\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    return [{\n        id: \"series-1\",\n        name: \"Series 1\",\n        data: [\n            { x: 1, y: 10 },\n            { x: 2, y: 30 },\n            { x: 3, y: 5 },\n            { x: 4, y: 20 },\n            { x: 5, y: 15 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Chart, IChartSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, XYGrid, XYGridConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"nui-base-grid-disabling-interaction-example\",\n    templateUrl: \"./base-grid-disabling-interaction.example.component.html\",\n})\nexport class BaseGridDisablingInteractionExampleComponent implements OnInit {\n    public chart: Chart;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.interactive = false;\n        this.chart = new Chart(new XYGrid(gridConfig));\n\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            scales: {\n                x: new LinearScale(),\n                y: new LinearScale(),\n            },\n            accessors: new LineAccessors(),\n            renderer: new LineRenderer(),\n        }));\n\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    return [{\n        id: \"series-1\",\n        name: \"Series 1\",\n        data: [\n            { x: 1, y: 10 },\n            { x: 2, y: 30 },\n            { x: 3, y: 5 },\n            { x: 4, y: 20 },\n            { x: 5, y: 15 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Chart, IChartSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, XYGrid, XYGridConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"nui-base-grid-height-and-width-example\",\n    templateUrl: \"./base-grid-height-and-width.example.component.html\",\n})\nexport class BaseGridHeightAndWidthExampleComponent implements OnInit {\n    public chart: Chart;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.dimension.autoHeight = false;\n        gridConfig.dimension.autoWidth = false;\n        gridConfig.dimension.height(50);\n        gridConfig.dimension.width(100);\n\n        this.chart = new Chart(new XYGrid(gridConfig));\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            scales: {\n                x: new LinearScale(),\n                y: new LinearScale(),\n            },\n            accessors: new LineAccessors(),\n            renderer: new LineRenderer(),\n        }));\n\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    return [{\n        id: \"series-1\",\n        name: \"Series 1\",\n        data: [\n            { x: 1, y: 10 },\n            { x: 2, y: 30 },\n            { x: 3, y: 5 },\n            { x: 4, y: 20 },\n            { x: 5, y: 15 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Chart, IChartSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, XYGrid, XYGridConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"nui-base-grid-margins-example\",\n    templateUrl: \"./base-grid-margins.example.component.html\",\n})\nexport class BaseGridMarginsExampleComponent implements OnInit {\n    public chart: Chart;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.dimension.margin = {\n            top: 30,\n            bottom: 30,\n            left: 100,\n            right: 100,\n        };\n\n        this.chart = new Chart(new XYGrid(gridConfig));\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors: new LineAccessors(),\n            renderer: new LineRenderer(),\n            scales: {\n                x: new LinearScale(),\n                y: new LinearScale(),\n            },\n        }));\n\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    return [{\n        id: \"series-1\",\n        name: \"Series 1\",\n        data: [\n            { x: 1, y: 10 },\n            { x: 2, y: 30 },\n            { x: 3, y: 5 },\n            { x: 4, y: 20 },\n            { x: 5, y: 15 },\n        ],\n    }];\n}\n","import { Component } from \"@angular/core\";\nimport { XYGridConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"nui-chart-docs-base-grid\",\n    templateUrl: \"./chart-docs-base-grid.component.html\",\n})\nexport class ChartDocsBaseGridComponent {\n    public gridInstantiation = `const gridConfig = new XYGridConfig();\ngridConfig.dimension.padding.left = 20;\nthis.chart = new Chart(new XYGrid(gridConfig));\n...`;\n    public gridReconfiguration = `const gridConfig = new XYGridConfig();\ngridConfig.dimension.padding.left = 20;\nthis.chart.getGrid().config(gridConfig);\n...`;\n    public defaultMargins = XYGridConfig.DEFAULT_MARGIN;\n}\n"],"sourceRoot":"webpack:///"}