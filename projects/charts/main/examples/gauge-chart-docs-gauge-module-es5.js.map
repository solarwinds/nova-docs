{"version":3,"sources":["webpack:///examples/components/demo/chart-types/gauge/linear/linear-with-thresholds/linear-gauge-with-thresholds.example.component.less?24b8","webpack:///examples/components/demo/chart-types/gauge/linear/vertical-basic/vertical-gauge-basic.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/linear/horizontal-basic/horizontal-gauge-basic.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/linear/horizontal-basic/horizontal-gauge-basic.example.component.less?fc8b","webpack:///examples/components/demo/chart-types/gauge/linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment.example.component.less?36c6","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels.example.component.less?29c3","webpack:///examples/components/demo/chart-types/gauge/linear/linear-with-thresholds/linear-gauge-with-thresholds.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/linear/vertical-basic/vertical-gauge-basic.example.component.less?ab09","webpack:///examples/components/demo/chart-types/gauge/linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment.example.component.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?b693","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling.example.component.less?7e59","webpack:///examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.less?f69f","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-content/donut-gauge-with-content.example.component.less?1f17","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-thresholds/donut-gauge-with-thresholds.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-content/donut-gauge-with-content.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers.example.component.less?5981","webpack:///examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/chart-docs-gauge.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/gauge-visual-test.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-basic/donut-gauge-basic.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-thresholds/donut-gauge-with-thresholds.example.component.less?888d","webpack:///examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.less?e390","webpack:///examples/components/demo/chart-types/gauge/donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers.example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling.example.component.less?235e","webpack:///examples/components/demo/chart-types/gauge/donut/donut-basic/donut-gauge-basic.example.component.less?10ac","webpack:///examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.less?07ce","webpack:///examples/components/demo/chart-types/gauge/chart-docs-gauge.module.ts","webpack:///examples/components/demo/chart-types/gauge/donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling.example.component.ts"],"names":["VerticalGaugeBasicExampleComponent","initialValue","gaugeConfig","getGaugeConfig","chartAssist","createChartAssist","Vertical","seriesSet","assembleSeriesSet","update","value","max","selector","template","HorizontalGaugeBasicExampleComponent","Horizontal","LinearGaugeWithThresholdsExampleComponent","thresholds","createStandardThresholdsConfig","horizontalChartAssist","horizontalSeriesSet","verticalChartAssist","verticalSeriesSet","updateGauges","LinearGaugeThicknessAdjustmentExampleComponent","compact","markerRadius","Small","Large","updateThickness","thickness","horizontalGridConfig","chart","getGrid","config","dimension","height","updateDimensions","verticalGridConfig","width","linearThickness","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","DonutGaugeWithThresholdsExampleComponent","reversed","lowThreshold","highThreshold","Donut","updateGauge","definitions","Warning","Critical","DonutGaugeWithContentExampleComponent","contentPlugin","addPlugin","VerticalGaugeTesterComponent","changes","firstChange","ChartDocsGaugeComponent","GaugeVisualTestComponent","warningEnabled","gaugeConfigs","enabled","c","DonutGaugeBasicExampleComponent","DonutGaugeWithThresholdMarkerTogglingExampleComponent","markersEnabled","labelsPlugin","disableMarkers","disableThresholdLabels","HorizontalGaugeTesterComponent","DonutGaugeWithCustomThresholdLabelsExampleComponent","labels","formatter","d","DonutGaugeWithoutThresholdMarkersExampleComponent","DonutGaugeTesterComponent","size","exampleRoutes","path","component","data","showThemeSwitcher","ga","ChartDocsGaugeModule","declarations","imports","forChild","providers","provide","useFactory","DonutGaugeWithThresholdTogglingExampleComponent","criticalEnabled"],"mappings":"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","file":"gauge-chart-docs-gauge-module-es5.js","sourcesContent":["export default \".demo__value-input {\\n  margin-right: 50px;\\n}\\n.demo__vertical-chart {\\n  height: 200px;\\n}\\n.demo__horizontal-chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS13aXRoLXRocmVzaG9sZHMuZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7QUFHQTtFQUNJLGFBQUE7QUFESjtBQUtBO0VBQ0ksWUFBQTtBQUhKIiwiZmlsZSI6ImxpbmVhci1nYXVnZS13aXRoLXRocmVzaG9sZHMuZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX192YWx1ZS1pbnB1dCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSBoZWlnaHQgb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgdmVydGljYWwgbGVuZ3RoIG9mIHRoZSBnYXVnZVxuLmRlbW9fX3ZlcnRpY2FsLWNoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSB3aWR0aCBvbiB0aGUgY2hhcnQgZWxlbWVudCBkZXRlcm1pbmVzIHRoZSBob3Jpem9udGFsIGxlbmd0aCBvZiB0aGUgZ2F1Z2Vcbi5kZW1vX19ob3Jpem9udGFsLWNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-basic-example\",\n    templateUrl: \"./vertical-gauge-basic.example.component.html\",\n    styleUrls: [\"./vertical-gauge-basic.example.component.less\"],\n})\nexport class VerticalGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 64;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart assist\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n\n            /**\n             * Optionally customize the default quantity color (defaults to StandardGaugeColor.Ok)\n             */\n\n            // defaultQuantityColor: \"var(--nui-color-semantic-ok)\",\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-basic-example\",\n    templateUrl: \"./horizontal-gauge-basic.example.component.html\",\n    styleUrls: [\"./horizontal-gauge-basic.example.component.less\"],\n})\nexport class HorizontalGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 64;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart assist\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n\n            /**\n             * Optionally customize the default quantity color (defaults to StandardGaugeColor.Ok)\n             */\n\n            // defaultQuantityColor: \"var(--nui-color-semantic-ok)\",\n        };\n    }\n}\n","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtYmFzaWMuZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7QUFHQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJob3Jpem9udGFsLWdhdWdlLWJhc2ljLmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtb19fdmFsdWUtaW5wdXQge1xuICAgIG1hcmdpbi1yaWdodDogNDBweDtcbn1cblxuLy8gU2V0dGluZyB0aGUgd2lkdGggb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgaG9yaXpvbnRhbCBsZW5ndGggb2YgdGhlIGdhdWdlXG4uZGVtb19fY2hhcnQge1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","export default \".demo__inputs {\\n  margin-right: 50px;\\n}\\n.demo__charts {\\n  width: 255px;\\n}\\n.demo__vertical-chart {\\n  height: 200px;\\n}\\n.demo__horizontal-chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS10aGlja25lc3MtYWRqdXN0bWVudC5leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtBQUFKO0FBSUE7RUFDSSxhQUFBO0FBRko7QUFNQTtFQUNJLFlBQUE7QUFKSiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtdGhpY2tuZXNzLWFkanVzdG1lbnQuZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX19pbnB1dHMge1xuICAgIG1hcmdpbi1yaWdodDogNTBweDtcbn1cblxuLmRlbW9fX2NoYXJ0cyB7XG4gICAgd2lkdGg6IDI1NXB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSBoZWlnaHQgb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgdmVydGljYWwgbGVuZ3RoIG9mIHRoZSBnYXVnZVxuLmRlbW9fX3ZlcnRpY2FsLWNoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSB3aWR0aCBvbiB0aGUgY2hhcnQgZWxlbWVudCBkZXRlcm1pbmVzIHRoZSBob3Jpem9udGFsIGxlbmd0aCBvZiB0aGUgZ2F1Z2Vcbi5kZW1vX19ob3Jpem9udGFsLWNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY3VzdG9tLXRocmVzaG9sZC1sYWJlbHMuZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jdXN0b20tdGhyZXNob2xkLWxhYmVscy5leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbW9fX2NoYXJ0IHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-with-thresholds-example\",\n    templateUrl: \"./linear-gauge-with-thresholds.example.component.html\",\n    styleUrls: [\"./linear-gauge-with-thresholds.example.component.less\"],\n})\nexport class LinearGaugeWithThresholdsExampleComponent implements OnInit {\n    public horizontalChartAssist: ChartAssist;\n    public verticalChartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n    public value = 64;\n\n    private thresholds: IGaugeThresholdsConfig;\n    private horizontalSeriesSet: IChartAssistSeries<IAccessors>[];\n    private verticalSeriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Generating a standard set of thresholds with warning and critical levels\n        this.thresholds = GaugeUtil.createStandardThresholdsConfig(50, 79);\n\n        /**\n         * Optionally, instead of using the 'createStandardThresholdsConfig' function as above, you can manually create a thresholds\n         * config object like the following with as many or as few threshold definitions as you need.\n         */\n        // this.thresholds = {\n        //     definitions: {\n        //         [StandardGaugeThresholdId.Warning]: {\n        //             id: StandardGaugeThresholdId.Warning,\n        //             value: 50,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Warning,\n        //         },\n        //         [StandardGaugeThresholdId.Critical]: {\n        //             id: StandardGaugeThresholdId.Critical,\n        //             value: 79,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Critical,\n        //         },\n        //     },\n        //     reversed: false,\n        //     disableMarkers: false,\n        //     markerRadius: StandardGaugeThresholdMarkerRadius.Large,\n        // };\n\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Creating the horizontal gauge\n        this.horizontalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Creating the vertical gauge\n        this.verticalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauges();\n    }\n\n    private updateGauges() {\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Updating the horizontal gauge\n        this.horizontalSeriesSet = GaugeUtil.update(this.horizontalSeriesSet, this.gaugeConfig);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Updating the vertical gauge\n        this.verticalSeriesSet = GaugeUtil.update(this.verticalSeriesSet, this.gaugeConfig);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 100,\n\n            // Enabling the thresholds\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLWJhc2ljLmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKO0FBR0E7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoidmVydGljYWwtZ2F1Z2UtYmFzaWMuZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX192YWx1ZS1pbnB1dCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSBoZWlnaHQgb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgdmVydGljYWwgbGVuZ3RoIG9mIHRoZSBnYXVnZVxuLmRlbW9fX2NoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufVxuIl19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    StandardGaugeThresholdMarkerRadius,\n    StandardLinearGaugeThickness,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-thickness-adjustment-example\",\n    templateUrl: \"./linear-gauge-thickness-adjustment.example.component.html\",\n    styleUrls: [\"./linear-gauge-thickness-adjustment.example.component.less\"],\n})\nexport class LinearGaugeThicknessAdjustmentExampleComponent implements OnInit {\n    public gaugeConfig: IGaugeConfig;\n    public horizontalChartAssist: ChartAssist;\n    public verticalChartAssist: ChartAssist;\n\n    public value = 64;\n    public compact = true;\n\n    private horizontalSeriesSet: IChartAssistSeries<IAccessors>[];\n    private verticalSeriesSet: IChartAssistSeries<IAccessors>[];\n\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(50, 79);\n\n    public ngOnInit(): void {\n        // Setting the initial threshold marker radius\n        this.thresholds.markerRadius = this.compact ? StandardGaugeThresholdMarkerRadius.Small : StandardGaugeThresholdMarkerRadius.Large;\n\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Creating the horizontal gauge\n        this.horizontalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Creating the vertical gauge\n        this.verticalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauges();\n    }\n\n    public onCompactChange(compact: boolean): void {\n        this.compact = compact;\n\n        // Adjusting the threshold marker radius\n        this.thresholds.markerRadius = this.compact ? StandardGaugeThresholdMarkerRadius.Small : StandardGaugeThresholdMarkerRadius.Large;\n        this.updateGauges();\n\n        // Updating the thickness\n        this.updateThickness();\n    }\n\n    private updateThickness() {\n        // Using standard thicknesses based on whether the gauge is in compact mode\n        const thickness = this.compact ? StandardLinearGaugeThickness.Small : StandardLinearGaugeThickness.Large;\n\n        // Updating the horizontal gauge height with the desired gauge thickness in pixels\n        const horizontalGridConfig = this.horizontalChartAssist.chart.getGrid().config();\n        horizontalGridConfig.dimension.height(thickness);\n        this.horizontalChartAssist.chart.updateDimensions();\n\n        // Updating the vertical gauge width with the desired gauge thickness in pixels\n        const verticalGridConfig = this.verticalChartAssist.chart.getGrid().config();\n        verticalGridConfig.dimension.width(thickness);\n        this.verticalChartAssist.chart.updateDimensions();\n    }\n\n    private updateGauges() {\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Updating the horizontal gauge\n        this.horizontalSeriesSet = GaugeUtil.update(this.horizontalSeriesSet, this.gaugeConfig);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Updating the vertical gauge\n        this.verticalSeriesSet = GaugeUtil.update(this.verticalSeriesSet, this.gaugeConfig);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 100,\n            thresholds: this.thresholds,\n\n            // Setting the initial thickness based on whether the gauge is in compact mode\n            // The 'createChartAssist' function uses this to configure the grid's dimensions\n            linearThickness: this.compact ? StandardLinearGaugeThickness.Small : StandardLinearGaugeThickness.Large,\n        };\n    }\n}\n","var map = {\n\t\"./chart-docs-gauge.component.html\": \"ZWN/\",\n\t\"./chart-docs-gauge.component.ts\": \"2DII\",\n\t\"./chart-docs-gauge.module.ts\": \"ZDgL\",\n\t\"./donut/donut-basic/donut-gauge-basic.example.component.html\": \"LvBy\",\n\t\"./donut/donut-basic/donut-gauge-basic.example.component.less\": \"1p5v\",\n\t\"./donut/donut-basic/donut-gauge-basic.example.component.ts\": \"Nn4a\",\n\t\"./donut/donut-with-content/donut-gauge-with-content.example.component.html\": \"z8Cb\",\n\t\"./donut/donut-with-content/donut-gauge-with-content.example.component.less\": \"Ylwx\",\n\t\"./donut/donut-with-content/donut-gauge-with-content.example.component.ts\": \"0JNq\",\n\t\"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels.example.component.html\": \"Zzgk\",\n\t\"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels.example.component.less\": \"6TMf\",\n\t\"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels.example.component.ts\": \"j72X\",\n\t\"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling.example.component.html\": \"eTJD\",\n\t\"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling.example.component.less\": \"ROqj\",\n\t\"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling.example.component.ts\": \"Tgb2\",\n\t\"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling.example.component.html\": \"prE6\",\n\t\"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling.example.component.less\": \"RODt\",\n\t\"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling.example.component.ts\": \"+Sq9\",\n\t\"./donut/donut-with-thresholds/donut-gauge-with-thresholds.example.component.html\": \"6YN8\",\n\t\"./donut/donut-with-thresholds/donut-gauge-with-thresholds.example.component.less\": \"LeOk\",\n\t\"./donut/donut-with-thresholds/donut-gauge-with-thresholds.example.component.ts\": \"xbL6\",\n\t\"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers.example.component.html\": \"oWCq\",\n\t\"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers.example.component.less\": \"oZgo\",\n\t\"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers.example.component.ts\": \"IcHH\",\n\t\"./linear/horizontal-basic/horizontal-gauge-basic.example.component.html\": \"61+u\",\n\t\"./linear/horizontal-basic/horizontal-gauge-basic.example.component.less\": \"vdeH\",\n\t\"./linear/horizontal-basic/horizontal-gauge-basic.example.component.ts\": \"axmd\",\n\t\"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment.example.component.html\": \"uiEO\",\n\t\"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment.example.component.less\": \"EDkH\",\n\t\"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment.example.component.ts\": \"nZIx\",\n\t\"./linear/linear-with-thresholds/linear-gauge-with-thresholds.example.component.html\": \"RcBz\",\n\t\"./linear/linear-with-thresholds/linear-gauge-with-thresholds.example.component.less\": \"MWUs\",\n\t\"./linear/linear-with-thresholds/linear-gauge-with-thresholds.example.component.ts\": \"84yw\",\n\t\"./linear/vertical-basic/vertical-gauge-basic.example.component.html\": \"Xdhv\",\n\t\"./linear/vertical-basic/vertical-gauge-basic.example.component.less\": \"ziUA\",\n\t\"./linear/vertical-basic/vertical-gauge-basic.example.component.ts\": \"fN0t\",\n\t\"./visual-test/donut/donut-gauge-tester.component.html\": \"3Isn\",\n\t\"./visual-test/donut/donut-gauge-tester.component.less\": \"WISq\",\n\t\"./visual-test/donut/donut-gauge-tester.component.ts\": \"wITR\",\n\t\"./visual-test/gauge-visual-test.component.html\": \"m1aH\",\n\t\"./visual-test/gauge-visual-test.component.ts\": \"d56P\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.html\": \"CqTf\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.less\": \"QoLo\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.ts\": \"Nchi\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.html\": \"OzOS\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.less\": \"rphd\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.ts\": \"WxU7\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"AVdE\";","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLXRvZ2dsaW5nLmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLXRvZ2dsaW5nLmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtb19fY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuIl19 */\";","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n.demo__content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY29udGVudC5leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFESjtBQUlBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLHNDQUFBO0FBRkoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jb250ZW50LmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uZGVtb19fY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuXG4uZGVtb19fY29udGVudC1sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IEBudWktbGluZS1oZWlnaHQtc21hbGw7XG4gICAgZm9udC1zaXplOiBAbnVpLWZvbnQtc2l6ZS1zbWFsbDtcbiAgICBmb250LXdlaWdodDogQG51aS1mb250LXdlaWdodC1yZWd1bGFyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6IHZhcigtLW51aS1jb2xvci10ZXh0LXNlY29uZGFyeSk7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    StandardGaugeThresholdId,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-thresholds-example\",\n    templateUrl: \"./donut-gauge-with-thresholds.example.component.html\",\n    styleUrls: [\"./donut-gauge-with-thresholds.example.component.less\"],\n})\nexport class DonutGaugeWithThresholdsExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n    public value = 178;\n    public reversed = false;\n\n    private thresholds: IGaugeThresholdsConfig;\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private lowThreshold = 100;\n    private highThreshold = 158;\n\n    public ngOnInit(): void {\n        // Generating a standard set of thresholds with warning and critical levels\n        this.thresholds = GaugeUtil.createStandardThresholdsConfig(this.lowThreshold, this.highThreshold);\n\n        /**\n         * Optionally, instead of using the 'createStandardThresholdsConfig' function as above, you can manually create a thresholds\n         * config object like the following with as many or as few threshold definitions as you need.\n         */\n        // this.thresholds = {\n        //     definitions: {\n        //         [StandardGaugeThresholdId.Warning]: {\n        //             id: StandardGaugeThresholdId.Warning,\n        //             value: this.lowThreshold,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Warning,\n        //         },\n        //         [StandardGaugeThresholdId.Critical]: {\n        //             id: StandardGaugeThresholdId.Critical,\n        //             value: this.highThreshold,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Critical,\n        //         },\n        //     },\n        //     reversed: false,\n        //     disableMarkers: false,\n        //     markerRadius: StandardGaugeThresholdMarkerRadius.Large,\n        // };\n\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onReversedChange(reversed: boolean): void {\n        this.reversed = reversed;\n        this.thresholds.reversed = reversed;\n\n        // swap the values of the warning and critical thresholds\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].value = this.reversed ? this.highThreshold : this.lowThreshold;\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].value = this.reversed ? this.lowThreshold : this.highThreshold;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n\n            // Enabling the thresholds\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    ChartDonutContentPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-content-example\",\n    templateUrl: \"./donut-gauge-with-content.example.component.html\",\n    styleUrls: [\"./donut-gauge-with-content.example.component.less\"],\n})\nexport class DonutGaugeWithContentExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        // Adding the plugin for the donut inner content\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.gaugeConfig = this.getGaugeConfig(value);\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  height: 190px;\\n  width: 190px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGhvdXQtdGhyZXNob2xkLW1hcmtlcnMuZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7QUFFQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQUoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aG91dC10aHJlc2hvbGQtbWFya2Vycy5leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbW9fX3ZhbHVlLWlucHV0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XG59XG5cbi5kZW1vX19jaGFydCB7XG4gICAgaGVpZ2h0OiAxOTBweDtcbiAgICB3aWR0aDogMTkwcHg7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-tester\",\n    templateUrl: \"./vertical-gauge-tester.component.html\",\n    styleUrls: [\"./vertical-gauge-tester.component.less\"],\n})\nexport class VerticalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<VerticalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-chart-docs-gauge\",\n    templateUrl: \"./chart-docs-gauge.component.html\",\n})\nexport class ChartDocsGaugeComponent {\n}\n","import { Component } from \"@angular/core\";\nimport { GaugeUtil, IGaugeConfig, GaugeThresholdDefs, StandardGaugeThresholdId } from \"@nova-ui/charts\";\nimport cloneDeep from \"lodash/cloneDeep\"\n\n@Component({\n    selector: \"gauge-visual-test\",\n    templateUrl: \"./gauge-visual-test.component.html\",\n})\nexport class GaugeVisualTestComponent {\n    public warningEnabled = true;\n    public gaugeConfigs = [this.getGaugeConfig(42), this.getGaugeConfig(130), this.getGaugeConfig(178)];\n\n    public getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: GaugeUtil.createStandardThresholdsConfig(100, 158),\n        };\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfigs = this.gaugeConfigs.map(c => {\n            const config = cloneDeep(c);\n            (config.thresholds?.definitions as GaugeThresholdDefs)[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n            return config;\n        });\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-basic-example\",\n    templateUrl: \"./donut-gauge-basic.example.component.html\",\n    styleUrls: [\"./donut-gauge-basic.example.component.less\"],\n})\nexport class DonutGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart assist\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n\n            /**\n             * Optionally customize the default quantity color (defaults to StandardGaugeColor.Ok)\n             */\n\n            // defaultQuantityColor: \"var(--nui-color-semantic-ok)\",\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-marker-toggling-example\",\n    templateUrl: \"./donut-gauge-with-threshold-marker-toggling.example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-marker-toggling.example.component.less\"],\n})\nexport class DonutGaugeWithThresholdMarkerTogglingExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 128;\n    public gaugeConfig: IGaugeConfig;\n    public markersEnabled = true;\n    public labelsPlugin = new DonutGaugeLabelsPlugin();\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Setting up the chart assist with a local instance of the labels plugin for direct control of the label display\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut, this.labelsPlugin);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onMarkersEnabledChange(enabled: boolean): void {\n        this.markersEnabled = enabled;\n\n        // Enabling or disabling the threshold markers\n        this.thresholds.disableMarkers = !this.markersEnabled;\n\n        // Enabling or disabling the threshold labels\n        this.labelsPlugin.config.disableThresholdLabels = !this.markersEnabled;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-tester\",\n    templateUrl: \"./horizontal-gauge-tester.component.html\",\n    styleUrls: [\"./horizontal-gauge-tester.component.less\"],\n})\nexport class HorizontalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<HorizontalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-custom-threshold-labels-example\",\n    templateUrl: \"./donut-gauge-with-custom-threshold-labels.example.component.html\",\n    styleUrls: [\"./donut-gauge-with-custom-threshold-labels.example.component.less\"],\n})\nexport class DonutGaugeWithCustomThresholdLabelsExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(50, 75);\n\n    public ngOnInit(): void {\n        const initialValue = 40;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.gaugeConfig = this.getGaugeConfig(value);\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n            thresholds: this.thresholds,\n\n            // Setting a custom label formatter\n            labels: {\n                formatter: (d: string) => `${d}%`,\n\n                /**\n                 * Optionally specify a custom clearance in pixels for the labels if the\n                 * display strings are too long to fit within the default grid margins.\n                 */\n\n                // clearance: 35,\n            },\n        };\n    }\n}\n","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkcy5leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJkb251dC1nYXVnZS13aXRoLXRocmVzaG9sZHMuZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX19jaGFydCB7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgICB3aWR0aDogMjUwcHg7XG59XG4iXX0= */\";","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESiIsImZpbGUiOiJ2ZXJ0aWNhbC1nYXVnZS10ZXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-without-threshold-markers-example\",\n    templateUrl: \"./donut-gauge-without-threshold-markers.example.component.html\",\n    styleUrls: [\"./donut-gauge-without-threshold-markers.example.component.less\"],\n})\nexport class DonutGaugeWithoutThresholdMarkersExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 128;\n    public gaugeConfig: IGaugeConfig;\n\n    private thresholds: IGaugeThresholdsConfig;\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Generating a standard set of thresholds with warning and critical levels\n        this.thresholds= GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n        // Turning off the markers\n        this.thresholds.disableMarkers = true;\n\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    ChartDonutContentPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-tester\",\n    templateUrl: \"./donut-gauge-tester.component.html\",\n    styleUrls: [\"./donut-gauge-tester.component.less\"],\n})\nexport class DonutGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public size = 250;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLW1hcmtlci10b2dnbGluZy5leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJkb251dC1nYXVnZS13aXRoLXRocmVzaG9sZC1tYXJrZXItdG9nZ2xpbmcuZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX19jaGFydCB7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgICB3aWR0aDogMjUwcHg7XG59XG4iXX0= */\";","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  height: 200px;\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLWJhc2ljLmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKO0FBRUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUFKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLWJhc2ljLmV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtb19fdmFsdWUtaW5wdXQge1xuICAgIG1hcmdpbi1yaWdodDogNDBweDtcbn1cblxuLmRlbW9fX2NoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQURKIiwiZmlsZSI6Imhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","/* eslint-disable max-len */\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { ChartDocsGaugeComponent } from \"./chart-docs-gauge.component\";\nimport { GaugeVisualTestComponent } from \"./visual-test/gauge-visual-test.component\";\nimport { HorizontalGaugeTesterComponent } from \"./visual-test/horizontal/horizontal-gauge-tester.component\";\nimport { DonutGaugeTesterComponent } from \"./visual-test/donut/donut-gauge-tester.component\";\nimport { VerticalGaugeTesterComponent } from \"./visual-test/vertical/vertical-gauge-tester.component\";\nimport { DonutGaugeBasicExampleComponent } from \"./donut/donut-basic/donut-gauge-basic.example.component\";\nimport { DonutGaugeWithContentExampleComponent } from \"./donut/donut-with-content/donut-gauge-with-content.example.component\";\nimport { DonutGaugeWithThresholdsExampleComponent } from \"./donut/donut-with-thresholds/donut-gauge-with-thresholds.example.component\";\nimport { DonutGaugeWithThresholdTogglingExampleComponent } from \"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling.example.component\";\nimport { DonutGaugeWithCustomThresholdLabelsExampleComponent } from \"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels.example.component\";\nimport { HorizontalGaugeBasicExampleComponent } from \"./linear/horizontal-basic/horizontal-gauge-basic.example.component\";\nimport { VerticalGaugeBasicExampleComponent } from \"./linear/vertical-basic/vertical-gauge-basic.example.component\";\nimport { DonutGaugeWithoutThresholdMarkersExampleComponent } from \"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers.example.component\";\nimport { DonutGaugeWithThresholdMarkerTogglingExampleComponent } from \"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling.example.component\";\nimport { LinearGaugeWithThresholdsExampleComponent } from \"./linear/linear-with-thresholds/linear-gauge-with-thresholds.example.component\";\nimport { LinearGaugeThicknessAdjustmentExampleComponent } from \"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment.example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsGaugeComponent,\n        data: {\n            showThemeSwitcher: true,\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"visual-test\",\n        component: GaugeVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-basic\",\n        component: DonutGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-content\",\n        component: DonutGaugeWithContentExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-custom-labels\",\n        component: DonutGaugeWithCustomThresholdLabelsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-without-markers\",\n        component: DonutGaugeWithoutThresholdMarkersExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-marker-toggling\",\n        component: DonutGaugeWithThresholdMarkerTogglingExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-thresholds\",\n        component: DonutGaugeWithThresholdsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-threshold-toggling\",\n        component: DonutGaugeWithThresholdTogglingExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"horizontal-basic\",\n        component: HorizontalGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"vertical-basic\",\n        component: VerticalGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"linear-with-thresholds\",\n        component: LinearGaugeWithThresholdsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"linear-thickness\",\n        component: LinearGaugeWithThresholdsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsGaugeComponent,\n        GaugeVisualTestComponent,\n        HorizontalGaugeBasicExampleComponent,\n        LinearGaugeWithThresholdsExampleComponent,\n        HorizontalGaugeTesterComponent,\n        DonutGaugeTesterComponent,\n        DonutGaugeBasicExampleComponent,\n        DonutGaugeWithContentExampleComponent,\n        DonutGaugeWithCustomThresholdLabelsExampleComponent,\n        DonutGaugeWithThresholdMarkerTogglingExampleComponent,\n        DonutGaugeWithoutThresholdMarkersExampleComponent,\n        DonutGaugeWithThresholdsExampleComponent,\n        DonutGaugeWithThresholdTogglingExampleComponent,\n        VerticalGaugeBasicExampleComponent,\n        LinearGaugeThicknessAdjustmentExampleComponent,\n        VerticalGaugeTesterComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        FormsModule,\n        NuiChartsModule,\n        NuiCheckboxModule,\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiIconModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsGaugeModule {\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    StandardGaugeThresholdId,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-toggling-example\",\n    templateUrl: \"./donut-gauge-with-threshold-toggling.example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-toggling.example.component.less\"],\n})\nexport class DonutGaugeWithThresholdTogglingExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 178;\n    public gaugeConfig: IGaugeConfig;\n    public warningEnabled = true;\n    public criticalEnabled = true;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n\n        // Enabling or disabling the warning threshold\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n\n        this.updateGauge();\n    }\n\n    public onCriticalEnabledChange(enabled: boolean): void {\n        this.criticalEnabled = enabled;\n\n        // Enabling or disabling the critical threshold\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].enabled = this.criticalEnabled;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n"]}