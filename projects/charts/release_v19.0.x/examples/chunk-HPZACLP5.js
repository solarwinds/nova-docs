import{a as E}from"./chunk-BLBAPCQI.js";import{A as a,B as x,Ia as R,Z as L,_ as F,fa as Q,ga as $,ma as N,qa as O}from"./chunk-JLRCU3YI.js";import{Ya as I}from"./chunk-PJ4NWNDH.js";import{e as T,f as A}from"./chunk-JQPMAK7F.js";import{Aa as h,Lb as D,Ma as s,Na as g,Ta as y,Ua as l,Va as d,hb as v,ja as m,mb as S,nb as w,ob as _,pa as f,va as u}from"./chunk-YSXLQTCP.js";import{a as p,b as C}from"./chunk-B7O3QC5Z.js";function b(n,c){n&1&&d(0,"nui-divider")}function k(n,c){if(n&1&&(y(0,"div")(1,"div",1),d(2,"nui-chart",2),l(),h(3,b,1,0,"nui-divider",3),l()),n&2){let t=c.$implicit,e=c.index,i=v();g("min-height",150),m(2),s("chart",t.chart),m(),s("ngIf",i.myCharts.length-1>e)}}var Y=(()=>{class n{changeDetection;charts;myCharts=[];chartCount=2;constructor(t){this.changeDetection=t;for(let e=0;e<this.chartCount;e++){let i=new Q(new O),r={chart:i,chartAssist:new $(i),scales:{x:new R("x"),y:new N},renderer:new F,accessors:new L};this.myCharts.push(r)}}ngOnInit(){}ngAfterViewInit(){this.myCharts.forEach((t,e)=>{t.chartAssist.update(this.generateChartAssistSeriesSet(t,4,e))}),this.changeDetection.detectChanges()}generateChartAssistSeriesSet(t,e,i){return this.generateDataSeriesSet(e,i).map(o=>C(p({},o),{scales:t.scales,renderer:t.renderer,accessors:t.accessors,showInLegend:!0}))}generateDataSeriesSet(t,e){let i=e+1;return Array.from(Array(t).keys()).map(r=>{let o=r+1;return{id:`series-${i}-${o}`,name:`Series ${i}-${o}`,data:E.mockTimeLineData(o*10)}})}static \u0275fac=function(e){return new(e||n)(f(D))};static \u0275cmp=u({type:n,selectors:[["nui-chart-collection-test"]],viewQuery:function(e,i){if(e&1&&S(a,5),e&2){let r;w(r=_())&&(i.charts=r)}},standalone:!1,decls:1,vars:1,consts:[[3,"min-height",4,"ngFor","ngForOf"],[1,"d-flex","w-100","h-100"],["nuiChartCollectionId","1",1,"w-100",3,"chart"],[4,"ngIf"]],template:function(e,i){e&1&&h(0,k,4,4,"div",0),e&2&&s("ngForOf",i.myCharts)},dependencies:[T,A,a,x,I],encapsulation:2})}return n})();export{Y as a};
