import{a as f}from"./chunk-JXBBPZVY.js";import{a as c}from"./chunk-6T3SA73T.js";import{a as x}from"./chunk-QPJ6542P.js";import{a as u}from"./chunk-P44QWZIF.js";import{a as S}from"./chunk-DT3ILJN2.js";import{Pb as p,_a as d}from"./chunk-PJ4NWNDH.js";import{Ma as h,Ta as t,Ua as a,Va as i,ja as s,qb as e,rb as l,va as m}from"./chunk-YSXLQTCP.js";var A=(()=>{class n{gridConfiguration=`public chart = new Chart(new XYGrid(new SparkChartGridConfig(false, false)));
...`;scaleInstantiationWithId=`const scale = new TimeScale("example-scale-id");
...`;collectionIdHtml=`<div *ngFor="let s of chartAssist.sparks">
    <nui-chart class="d-flex" [chart]="s.chart" nuiChartCollectionId="example-collection-id"></nui-chart>
</div>`;static \u0275fac=function(r){return new(r||n)};static \u0275cmp=m({type:n,selectors:[["nui-chart-docs-spark"]],standalone:!1,decls:177,vars:3,consts:[["href","../additional-documentation/chart-types/line.html","target","_parent"],["href","../miscellaneous/functions.html#sparkChartGridConfig","target","_blank"],["href","../classes/XYGridConfig.html","target","_blank"],["href","../classes/XYGrid.html","target","_blank"],["filenamePrefix","spark-chart-basic","exampleTitle","Simple Sparkline"],["href","../additional-documentation/advanced-usage/chart.html","target","_parent"],["href","../classes/SparkChartAssist.html","target","_blank"],["href","../interfaces/ISpark.html","target","_blank"],["href","../interfaces/IChartAssistSeries.html","target","_blank"],["href","../additional-documentation/thresholds.html","target","_parent"],["href","../directives/ChartCollectionIdDirective.html","target","_blank"],["href","../classes/SparkChartAssist.html#trackByFn","target","_blank"],["href","../classes/SparkChartAssist.html#update","target","_blank"],["href","../classes/SparkChartAssist.html#updateSparks","target","_blank"],["type","info",3,"allowDismiss"],["filenamePrefix","spark-chart-multiple","exampleTitle","Multiple Series"],["href","../classes/AreaRenderer.html","target","_blank"],["href","../miscellaneous/functions.html#stackedAreaAccessors","target","_blank"],["href","../additional-documentation/chart-types/area.html","target","_parent"],["filenamePrefix","spark-chart-area-multiple","exampleTitle","Area with Multiple Series"],["href","../additional-documentation/advanced-usage/legend.html","target","_parent"],["filenamePrefix","spark-chart-legend","exampleTitle","Adding a legend"],["filenamePrefix","spark-chart-table","exampleTitle","Table"]],template:function(r,o){r&1&&(t(0,"h1"),e(1,"Spark Chart"),a(),t(2,"p"),e(3,` A spark chart is really just a line chart that's been resized and styled to give it a sparkline look and feel. Theoretically you can turn any chart into a spark chart. But, practically, there are only a few use cases for a spark chart that are needed so far, and these use cases are represented by the examples on this page.
`),a(),t(4,"h2"),e(5,"Simple Sparkline"),a(),t(6,"p"),e(7," The simplest sparkline chart, i.e. a line visualization with no grid, axis lines, or other details, can be done as in the example below. Features not described here \u2014 such as tooltips \u2014 are configured in the same way as for a generic X/Y chart, so feel free to check the "),t(8,"a",0),e(9,"Line Chart"),a(),e(10,` page for guidance.
`),a(),t(11,"p"),e(12," The magic of a Nova spark chart originates from the "),t(13,"code")(14,"a",1),e(15,"sparkChartGridConfig"),a()(),e(16," function which creates a pre-baked spark chart "),t(17,"code")(18,"a",2),e(19,"XYGridConfig"),a()(),e(20," for setting up the "),t(21,"code")(22,"a",3),e(23,"XYGrid"),a()(),e(24,`.
`),a(),t(25,"p"),e(26,` See the inline comments of the example source below for more details on how to achieve it.
`),a(),t(27,"nui-example-wrapper",4),i(28,"nui-spark-chart-basic-example"),a(),t(29,"h2"),e(30,"Multiple Series"),a(),t(31,"p"),e(32," Following the same approach as in the case of a "),t(33,"a",0),e(34,"Line Chart"),a(),e(35,", using a chart assist is the easiest way to set up and manage a "),t(36,"a",5),e(37,"chart"),a(),e(38,` visualization. There is one difference with spark charts though. Whereas regular line charts sometimes visualize multiple data series at once, spark charts are designed to visualize a single primary data series per chart.
`),a(),t(39,"p"),e(40," What this means is that to visualize multiple primary series in a spark chart format, we need multiple spark chart instances to be stacked discretely on top of each other. So, the "),t(41,"code")(42,"a",6),e(43,"SparkChartAssist"),a()(),e(44,` reflects this pattern in that multiple primary input series result in multiple stacked spark chart instances.
`),a(),t(45,"p"),e(46," SparkChartAssist conceptualizes each spark chart as an "),t(47,"code")(48,"a",7),e(49,"ISpark"),a()(),e(50," which consists of an id, a chart instance, and an associated "),t(51,"code")(52,"a",8),e(53,"IChartAssistSeries"),a()(),e(54," collection. Typically, the series collection is a collection of one primary data series and zero or more dependent series such as a background threshold series. See the "),t(55,"a",9),e(56,"thresholds page"),a(),e(57,` for information on how to add a threshold series to a spark chart.
`),a(),t(58,"h3"),e(59,"Event Synchronization"),a(),t(60,"p"),e(61," Notice the "),t(62,"code")(63,"a",10),e(64,"nuiChartCollectionId"),a()(),e(65,` attribute directive used in the template of the following example. This is what allows for synchronization of the events among charts. This can be seen in the following example in which hovering over one sparkline results in the duplication of the interaction line for each of the other sparklines.
`),a(),t(66,"p"),e(67,"To get the interaction line synchronization working do the following:"),a(),t(68,"ol")(69,"li"),e(70," Ensure that each sparkline "),t(71,"code"),e(72,"nui-chart"),a(),e(73," shares the same "),t(74,"code"),e(75,"nuiChartCollectionId"),a(),e(76," value: "),t(77,"pre"),e(78),a()(),t(79,"li"),e(80," Ensure that the x-axis scale id of each spark series is the same by either using the same scale instance across all series or by passing the same scale id to the scale constructor parameter each time a new scale is instantiated. "),t(81,"pre"),e(82),a()()(),t(83,"h3"),e(84,"trackBy"),a(),t(85,"p"),e(86," Also, notice in the template of the example below that the "),t(87,"code"),e(88,"trackBy"),a(),e(89," on the "),t(90,"code"),e(91,"ngFor"),a(),e(92," is set to the SparkChartAssist's "),t(93,"a",11)(94,"code"),e(95,"trackByFn"),a()(),e(96," function. This enables SparkChartAssist and Angular to reuse an existing nui-chart if the chart's associated "),t(97,"code")(98,"a",7),e(99,"ISpark"),a()(),e(100,` id is the same as an id that's already in use.
`),a(),t(101,"h3"),e(102,"update vs. updateSparks"),a(),t(103,"p"),e(104," The SparkChartAssist's "),t(105,"code")(106,"a",12),e(107,"update"),a()(),e(108," method can be used to initiate a spark visualization if each of your sparklines has a primary data series and "),t(109,"strong"),e(110,"no"),a(),e(111,` dependent secondary series. The method takes a set of IChartAssistSeries as its argument, and the resulting ISpark's generated by the SparkChartAssist will automatically have id's equal to the corresponding series id's. The following example demonstrates how to use the update method.
`),a(),t(112,"p"),e(113," The SparkChartAssist's "),t(114,"code")(115,"a",13),e(116,"updateSparks"),a()(),e(117," method can be used in the above case as well. But, if each of your sparkline's primary data series has one or more dependent series, updateSparks "),t(118,"strong"),e(119,"must"),a(),e(120," be used. Note that the method takes a set of ISparks instead of IChartAssistSeries as its argument. Also, note that you do not need to provide the chart instance as part of the ISpark. The SparkChartAssist generates the chart for each ISpark automatically and appends it to the ISpark object. See the "),t(121,"a",9),e(122,"thresholds page"),a(),e(123,` for an example of updateSparks usage.
`),a(),t(124,"nui-message",14),e(125,` In the case of updateSparks, each ISpark passed to the method must be assigned an explicit id to take advantage of the trackBy functionality mentioned above.
`),a(),t(126,"nui-example-wrapper",15),i(127,"nui-spark-chart-multiple-example"),a(),t(128,"p"),e(129," The next example is very similar to the above with two major changes. Here we use the "),t(130,"code")(131,"a",16),e(132,"AreaRenderer"),a()(),e(133," and the "),t(134,"code")(135,"a",17),e(136,"stackedAreaAccessors"),a()(),e(137," function to generate and assign the "),t(138,"code"),e(139,"x"),a(),e(140,", "),t(141,"code"),e(142,"y"),a(),e(143,", "),t(144,"code"),e(145,"y0"),a(),e(146," and "),t(147,"code"),e(148,"y1"),a(),e(149," accessors. Check out the "),t(150,"a",18),e(151,"Area Chart "),a(),e(152,` page for additional guidance.
`),a(),t(153,"nui-example-wrapper",19),i(154,"nui-spark-chart-area-multiple-example"),a(),t(155,"h2"),e(156,"Adding a Legend"),a(),t(157,"p"),e(158," Using a chart assist is the easiest way to manage the communication of a "),t(159,"a",5),e(160,"chart"),a(),e(161," and a "),t(162,"a",20),e(163,"legend"),a(),e(164,`. See the example html below for how to set it up.
`),a(),t(165,"nui-example-wrapper",21),i(166,"nui-spark-chart-legend-example"),a(),t(167,"h2"),e(168,"Table"),a(),t(169,"p"),e(170," The next example demonstrates how to implement multiple sparklines within a table. Instantiation of "),t(171,"code")(172,"a",6),e(173,"SparkChartAssist"),a()(),e(174,` including plugins and all related functionality has to be done for every row in the table.
`),a(),t(175,"nui-example-wrapper",22),i(176,"nui-spark-chart-table-example"),a()),r&2&&(s(78),l(o.collectionIdHtml),s(4),l(o.scaleInstantiationWithId),s(42),h("allowDismiss",!1))},dependencies:[p,d,c,x,u,S,f],encapsulation:2})}return n})();export{A as a};
