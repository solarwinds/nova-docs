import{a as u}from"./chunk-DMQKXU5C.js";import{a as x}from"./chunk-AD55BBT3.js";import{a as f}from"./chunk-V3HKEU4E.js";import{a as g}from"./chunk-SUQ2VIFX.js";import{a as d}from"./chunk-VOVLUQWS.js";import{a as h}from"./chunk-NPLIS6WN.js";import{a as p}from"./chunk-YSBTJFPF.js";import{Pb as m,_a as c}from"./chunk-HL7NY4QC.js";import{Fa as a,Ga as t,Ha as i,cb as e,fa as s,q as o,ya as l}from"./chunk-VSZOZJXN.js";var I=(()=>{class n{static \u0275fac=function(r){return new(r||n)};static \u0275cmp=o({type:n,selectors:[["nui-chart-docs-area"]],decls:230,vars:1,consts:[["href","../additional-documentation/chart-types/line.html","target","_parent"],["href","../classes/AreaRenderer.html","target","_blank"],["href","../classes/LineRenderer.html","target","_blank"],["href","../classes/AreaAccessors.html","target","_blank"],["href","../interfaces/IAreaRendererConfig.html","target","_blank"],["type","info",3,"allowDismiss"],["href","../classes/ChartAssist.html","target","_blank"],["filenamePrefix","area-chart-basic","exampleTitle","Basic Usage"],["href","../../additional-documentation/advanced-usage/chart.html","target","_parent"],["href","../miscellaneous/functions.html#areaGrid","target","_blank"],["href","../classes/Chart.html#constructor","target","_blank"],["href","../miscellaneous/functions.html#stackedArea","target","_blank"],["filenamePrefix","area-chart-stack","exampleTitle","Stacked"],["href","../miscellaneous/functions.html#stackedPercentageArea","target","_blank"],["filenamePrefix","area-chart-stack-percentage","exampleTitle","Stacked Percentage"],["filenamePrefix","area-chart-variable-baseline","exampleTitle","Variable Baseline"],["filenamePrefix","area-chart-bi-directional","exampleTitle","Bi-Directional"],["href","../classes/LinearScale.html#reverse","target","_blank"],["href","../classes/LinearScale.html","target","_blank"],["filenamePrefix","area-chart-bi-directional-stacked","exampleTitle","Bi-Directional Stacked"],["filenamePrefix","area-chart-bi-directional-stacked-inverted","exampleTitle","Inverted Bi-Directional Stacked"]],template:function(r,y){r&1&&(a(0,"h1"),e(1,"Area Charts"),t(),a(2,"p"),e(3,` An area chart visualization can be thought of as a hybrid between a line and a bar chart. Similar to a line chart, an area chart shows how the numeric values of one or more series change over the progression of another variable, usually time. And, similar to a bar chart, an area chart consists of a shaded area between a baseline (typically zero) and the line representing the numeric values.
`),t(),a(4,"p"),e(5,` In real world scenarios, using an area chart visualization may make the most sense if you want to compare quantities between two or more series by stacking them one on top of another. If, on the other hand, you only have a single series to visualize, it may be more practical to use just a simple bar or line chart, depending of course on what you want to communicate about the data. With that in mind, the first example on this page does show, for simplicity's sake, a single series visualized as an area.
`),t(),a(6,"h2"),e(7,"Basic Usage"),t(),a(8,"p"),e(9," To create a simple area chart, the basic elements you need are much the same as those of a "),a(10,"a",0),e(11,"line chart"),t(),e(12,". The main differences in usage lie in the use of "),a(13,"code")(14,"a",1),e(15,"AreaRenderer"),t()(),e(16," instead of "),a(17,"code")(18,"a",2),e(19,"LineRenderer"),t()(),e(20," and in the configuration of the data accessors implemented by the "),a(21,"code")(22,"a",3),e(23,"AreaAccessors"),t()(),e(24," class. When instantiating the "),a(25,"code"),e(26,"AreaRenderer"),t(),e(27,", you can optionally pass a configuration object of type "),a(28,"code")(29,"a",4),e(30,"IAreaRendererConfig"),t()(),e(31,` to make certain modifications to the behavior of the chart.
`),t(),a(32,"nui-message",5),e(33," As with other chart types, this first example implements an area chart without the aid of a "),a(34,"code")(35,"a",6),e(36,"ChartAssist"),t()(),e(37," since it doesn't need to either process the stacking of multiple series or handle interaction with an external component such as a legend. Subsequent examples that include series stacking or legend interaction will make use of a "),a(38,"code"),e(39,"ChartAssist"),t(),e(40,` instance to handle those tasks.
`),t(),a(41,"nui-example-wrapper",7),i(42,"area-chart-basic-example"),t(),a(43,"p"),e(44," In the example above, we create an instance of "),a(45,"code")(46,"a",3),e(47,"AreaAccessors"),t()(),e(48,` and configure it to work specifically with the data being fed into the chart. For the standard, horizontally oriented area chart we provide implementation-specific definitions for the following accessors:
`),t(),a(49,"ul")(50,"li"),e(51," An "),a(52,"code"),e(53,"x"),t(),e(54," accessor for values in the data that correspond to the horizontal axis. Again, this is typically a datetime value. This value is also used as a coordinate for the data point marker. "),t(),a(55,"li"),e(56," A "),a(57,"code"),e(58,"y"),t(),e(59," accessor for values to be used as the "),a(60,"code"),e(61,"y"),t(),e(62," coordinate for the data point marker. The "),a(63,"code"),e(64,"y"),t(),e(65," accessor is assigned the "),a(66,"code"),e(67,"absoluteY1"),t(),e(68," accessor which takes into account areas that may be stacked below the current area and retrieves the absolute distance from the baseline to the area's value line. "),t(),a(69,"li"),e(70," A "),a(71,"code"),e(72,"y0"),t(),e(73," accessor for the baseline on the vertical axis which, in this particular case, will always return the typical baseline value of zero. "),t(),a(74,"li"),e(75," A "),a(76,"code"),e(77,"y1"),t(),e(78," accessor for the value line on the vertical axis that provides access to the numeric values we want to visualize in the data. "),t()(),a(79,"p")(80,"strong"),e(81,"Note:"),t(),e(82," For a vertically oriented chart in which the progression runs along the y axis, you can configure the opposite accessors from those above, i.e. "),a(83,"code"),e(84,"y"),t(),e(85,", "),a(86,"code"),e(87,"x0"),t(),e(88,", and "),a(89,"code"),e(90,"x1"),t(),e(91,`, but with the same corresponding implementations.
`),t(),a(92,"p"),e(93," In addition to data access, the "),a(94,"code")(95,"a",3),e(96,"AreaAccessors"),t()(),e(97," indicate what color and marker symbol the chart should use for each series visualization. For additional information about chart setup, take a look at "),a(98,"a",8),e(99,"this"),t(),e(100,` page.
`),t(),a(101,"p"),e(102," To instantiate a grid that conforms to UX guidelines for area visualizations, we invoke the "),a(103,"code")(104,"a",9),e(105,"areaGrid"),t()(),e(106," function and pass the result to the "),a(107,"code")(108,"a",10),e(109,"Chart"),t()(),e(110,` constructor.
`),t(),a(111,"h2"),e(112,"Stacked"),t(),a(113,"p"),e(114," As mentioned above, an area chart may be an ideal option if you want to compare a progression of quantities between two or more series. In that case, you'll likely want to display the series in a stacked formation, and the easiest way to do that is to pass the "),a(115,"code")(116,"a",11),e(117,"stackedArea"),t()(),e(118," preprocessor to an instance of the previously mentioned "),a(119,"code")(120,"a",6),e(121,"ChartAssist"),t()(),e(122,` which will use the preprocessor to stack the series' numeric values on the same progression domain.
`),t(),a(123,"p")(124,"strong"),e(125,"Note:"),t(),e(126," The "),a(127,"code"),e(128,"absoluteY1"),t(),e(129," accessor is assigned to the "),a(130,"code"),e(131,"y"),t(),e(132,` accessor to position data point markers in the stacked series correctly.
`),t(),a(133,"nui-example-wrapper",12),i(134,"area-chart-stack-example"),t(),a(135,"h2"),e(136,"Unstacked or Overlapping Areas"),t(),a(137,"p"),e(138,` The use of an unstacked or overlapping area visualization is generally discouraged for a few key reasons:
`),t(),a(139,"ul")(140,"li"),e(141," Area charts are typically expected to be stacked, and the main benefit this configuration provides is that it can help the user to visualize a total value's progression over time along with a running breakdown of subgroup contributions to that total. If, however, the areas are unstacked, the total value visualization is obviously absent. And, the user may consequently find it more difficult to discern a comparison of each group's contribution to their sum. "),t(),a(142,"li"),e(143," Colors generated by the combination of overlapping areas are inherently not represented in the legend which can create unnecessary mental strain on the user as they try to determine what metrics in the legend correspond to the overlapping values. "),t(),a(144,"li"),e(145," If subgroup values along the progression never intersect, the visualization can be easily mistaken for a stacked area. "),t()(),a(146,"p"),e(147," If you're considering implementing an unstacked area chart, it's a good idea to consider these and other potential drawbacks. While making your considerations, it's possible you'll determine that implementing a "),a(148,"a",0),e(149,"line chart"),t(),e(150,` instead will result in a better overall experience for your users. If however you find that your use case is extra, super special, and you really, really need an unstacked area chart, please contact the Nova team so that we can show you how to assemble the visualization. Additionally, please consult with Nova Design System leadership before proceeding so that they can work with you to provide the best solution possible.
`),t(),a(151,"h2"),e(152,"Stacked Percentage"),t(),a(153,"p"),e(154,` Stacked percentage area charts are similar to standard stacked area charts in that they facilitate the comparison of quantities between two or more series across the progression of another variable. The difference is that a stacked percentage area chart visualizes each quantity in relation to the sum of all quantities along that progression. It can be thought of as a pie chart with an added dimension, usually time, in which you can see what portion of the sum total each data point represents over a given period of time.
`),t(),a(155,"p"),e(156," Because of the similarities to standard stacked area charts, the usage for a stacked percentage chart is much the same but with a minor difference. Instead of passing the "),a(157,"code"),e(158,"stackedArea"),t(),e(159," preprocessor to the "),a(160,"code")(161,"a",6),e(162,"ChartAssist"),t()(),e(163,", you pass the "),a(164,"code")(165,"a",13),e(166,"stackedPercentageArea"),t()(),e(167,` preprocessor which will not only stack the series' numeric values on the same progression domain but will also vertically scale each series area as a percentage of the sum of all corresponding series values.
`),t(),a(168,"nui-example-wrapper",14),i(169,"area-chart-stack-percentage-example"),t(),a(170,"h2"),e(171,"Variable Baseline"),t(),a(172,"p"),e(173," Sometimes the baseline of an area chart isn't fixed at zero. If you have a use case in which the baseline varies with each data point, you can set the "),a(174,"code"),e(175,"y0"),t(),e(176," accessor to provide access to the value in the data to be used as the baseline. In the following example, the data contains "),a(177,"code"),e(178,"start"),t(),e(179," and "),a(180,"code"),e(181,"end"),t(),e(182," properties that are used as the "),a(183,"code"),e(184,"y0"),t(),e(185," and "),a(186,"code"),e(187,"y1"),t(),e(188,` values respectively.
`),t(),a(189,"nui-example-wrapper",15),i(190,"area-chart-variable-baseline-example"),t(),a(191,"h2"),e(192,"Bi-Directional"),t(),a(193,"h3"),e(194,"Single Metric Per Direction"),t(),a(195,"p"),e(196," To display a progression of two correlated values on opposite sides of a baseline, you can implement a data accessor that flips the values of one series from positive to negative. In this example, the positive values for download speed are flipped to negative in that series's "),a(197,"code"),e(198,"y1"),t(),e(199,` data accessor. Additionally, the example implements a y-scale "tick" formatter to display positive values for the axis ticks below the zero baseline and in the legend.
`),t(),a(200,"nui-example-wrapper",16),i(201,"area-chart-bi-directional-example"),t(),a(202,"h3"),e(203,"Stacked"),t(),a(204,"p"),e(205," If you need to visualize more than one metric per direction, you can set up a bi-directional stacked chart. The following example demonstrates this by creating two chart instances, each with its own data but acting as a single visualization. The series on the bottom chart are stacked in a downward direction by invoking the "),a(206,"code")(207,"a",17),e(208,"reverse"),t()(),e(209," method on the chart's y-axis "),a(210,"code")(211,"a",18),e(212,"LinearScale"),t()(),e(213,`. For additional details, take a look at the code and comments in the example's source expander.
`),t(),a(214,"nui-example-wrapper",19),i(215,"area-chart-bi-directional-stacked-example"),t(),a(216,"h3"),e(217,"Inverted Stacked"),t(),a(218,"p"),e(219," To invert the direction of each stack, you can invoke the "),a(220,"code")(221,"a",17),e(222,"reverse"),t()(),e(223," method on the y-axis "),a(224,"code")(225,"a",18),e(226,"LinearScale"),t()(),e(227,` of the top chart instead of the one on the bottom chart. The following example demonstrates how to do this. For details, take a look at the code and comments in the example's source expander.
`),t(),a(228,"nui-example-wrapper",20),i(229,"area-chart-bi-directional-stacked-inverted-example"),t()),r&2&&(s(32),l("allowDismiss",!1))},dependencies:[m,c,d,u,p,h,g,f,x],encapsulation:2})}return n})();export{I as a};
