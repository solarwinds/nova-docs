{"version":3,"sources":["./examples/components/demo/development/gauge/component-prototype/gauge-component-prototype.component.less","./examples/components/demo/development/gauge/component-prototype/gauge-component-prototype.component.ts","./examples/components/demo/development/gauge/chart-prototype/gauge-test-page.component.html","./examples/components/demo/development/gauge/chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component.html","./examples/components/demo/development/gauge/chart-prototype/radial/radial-gauge-chart-prototype.component.html","./examples/components/demo/development/gauge/chart-prototype/gauge-test-page.component.ts","./examples/components/demo/development/gauge/chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component.html","./examples/components/demo/development/gauge/chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component.ts","./examples/components/demo/development/gauge/chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component.less","./examples/components/demo/development/gauge/chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component.less","./examples/components/demo/development/gauge/gauge-prototypes.module.ts","./examples/components/demo/development/gauge/chart-prototype/radial/radial-gauge-chart-prototype.component.less","./examples/components/demo/development/gauge/chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component.ts","./examples/components/demo/development/gauge/component-prototype/gauge-component-prototype.component.html","./examples/components/demo/development/gauge/chart-prototype/radial/radial-gauge-chart-prototype.component.ts"],"names":[],"mappings":"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","file":"gauge-gauge-prototypes-module-es2015.js","sourcesContent":["export default \".radial-gauge__inner-content {\\n  font-weight: 600;\\n  font-family: \\\"Comic Sans MS\\\";\\n  font-size: 42px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLWNvbXBvbmVudC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxnQkFBQTtFQUNBLDRCQUFBO0VBQ0EsZUFBQTtBQURKIiwiZmlsZSI6ImdhdWdlLWNvbXBvbmVudC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4ucmFkaWFsLWdhdWdlX19pbm5lci1jb250ZW50IHtcbiAgICBmb250LXdlaWdodDogQG51aS1mb250LXdlaWdodC1zZW1pYm9sZDtcbiAgICBmb250LWZhbWlseTogXCJDb21pYyBTYW5zIE1TXCI7XG4gICAgZm9udC1zaXplOiA0MnB4O1xufVxuIl19 */\";","import { ConnectionPositionPair, Overlay, OverlayPositionBuilder, PositionStrategy, ScrollStrategyOptions } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport { AfterViewInit, Component, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { GaugeComponent } from \"@nova-ui/charts\";\n\n/** @ignore */\n@Component({\n    selector: \"gauge-component-prototype\",\n    templateUrl: \"./gauge-component-prototype.component.html\",\n    styleUrls: [\"./gauge-component-prototype.component.less\"],\n})\nexport class GaugeComponentPrototypeComponent implements AfterViewInit {\n    public value = 42;\n    private _thickness = 30;\n\n    public get thickness() {\n        return this._thickness;\n    }\n\n    public set thickness(val: number) {\n        this._thickness = val;\n        if (this.positionStrategy) {\n            this.positionStrategy.apply();\n        }\n    }\n\n    public thresholds = {\n        error: 90,\n        warning: 65,\n    };\n\n    public positionStrategy: PositionStrategy;\n\n    public templatePortal: TemplatePortal;\n\n    @ViewChild(\"templatePortalContent\") templatePortalContent: TemplateRef<any>;\n    @ViewChild(\"withConnectedContent\") gaugeWithContent: GaugeComponent;\n\n    constructor(private _viewContainerRef: ViewContainerRef,\n                private overlay: Overlay,\n                private overlayPositionBuilder: OverlayPositionBuilder,\n                private scrollStrategyOptions: ScrollStrategyOptions) {\n    }\n\n    ngAfterViewInit(): void {\n        this.templatePortal = new TemplatePortal(this.templatePortalContent, this._viewContainerRef);\n        const positions: ConnectionPositionPair[] = [\n            {\n                overlayX: \"center\",\n                overlayY: \"center\",\n                originX: \"center\",\n                originY: \"center\",\n            },\n        ];\n        this.positionStrategy = this.overlayPositionBuilder\n            .flexibleConnectedTo(this.gaugeWithContent.control)\n            .withPositions(positions)\n            .withFlexibleDimensions(true)\n            .withPush(true);\n\n        const overlayRef = this.overlay.create({\n            positionStrategy: this.positionStrategy,\n            scrollStrategy: this.scrollStrategyOptions.close(),\n        });\n        overlayRef.attach(this.templatePortal);\n    }\n}\n","export default \"<charts-test-harness>\\n    <div class=\\\"d-flex\\\">\\n        <radial-gauge-chart-prototype [value]=\\\"value\\\" [annularWidth]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" [max]=\\\"maxValue\\\"></radial-gauge-chart-prototype>\\n        <linear-gauge-vertical-chart-prototype class=\\\"ml-5\\\" [value]=\\\"value\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" [max]=\\\"maxValue\\\"></linear-gauge-vertical-chart-prototype>\\n        <linear-gauge-horizontal-chart-prototype class=\\\"ml-5\\\" [value]=\\\"value\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" [max]=\\\"maxValue\\\"></linear-gauge-horizontal-chart-prototype>\\n    </div>\\n\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"valueInput\\\">\\n            Value\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n               [(ngModel)]=\\\"value\\\"\\n               [minValue]=\\\"0\\\"\\n               [maxValue]=\\\"maxValue\\\"\\n               customBoxWidth=\\\"75px\\\"\\n               name=\\\"valueInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"thicknessInput\\\">\\n            Thickness\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n               [(ngModel)]=\\\"thickness\\\"\\n               [minValue]=\\\"10\\\"\\n               [maxValue]=\\\"30\\\"\\n               customBoxWidth=\\\"75px\\\"\\n               name=\\\"thicknessInput\\\"></nui-textbox-number>\\n    </div>\\n</charts-test-harness>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{value | number:'1.0-0'}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component } from \"@angular/core\";\nimport { GAUGE_THICKNESS_DEFAULT, IGaugeThreshold } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n})\nexport class GaugeTestPageComponent {\n    public value = 95;\n    public maxValue = 200;\n    public thickness = GAUGE_THICKNESS_DEFAULT;\n    public thresholds: IGaugeThreshold[] = [\n        { value: 100 },\n        { value: 112 },\n        { value: 125 },\n        { value: 150 },\n        { value: 187 },\n        { value: 200 },\n    ];\n\n    constructor() {\n        // this.thresholds = new Array(200).fill(null).map((e, i) => ({ value: i }));\n        // this.thresholds = [{ value: 187 }/* , { value: 50 }, { value: 75 },\n        // { value: 100 }, { value: 125 }, { value: 150 }, { value: 175 }, { value: 200 } */];\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    BarHorizontalGridConfig,\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeService,\n    GAUGE_THICKNESS_DEFAULT,\n    HorizontalBarAccessors,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeThreshold,\n    linearGaugeGridConfig,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-chart-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-chart-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-chart-prototype.component.less\"],\n})\nexport class LinearGaugeChartHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public value = 42;\n    @Input() public max: number = 200;\n    @Input() public thickness = GAUGE_THICKNESS_DEFAULT;\n    @Input() public thresholds: IGaugeThreshold[];\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    constructor(private gaugeService: GaugeService) { }\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeChartHorizontalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.value && !changes.value.firstChange)) {\n            if (changes.thickness) {\n                this.chartAssist.chart.getGrid().config().dimension.height(this.thickness);\n                this.chartAssist.chart.updateDimensions();\n            }\n            this.chartAssist.update(this.gaugeService.updateSeriesSet(this.value, this.max, this.thresholds, this.seriesSet));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.seriesSet = this.gaugeService.assembleSeriesSet(this.value, this.max, this.thresholds, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLWNoYXJ0LXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1jaGFydC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1jaGFydC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLWNoYXJ0LXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMDBweDtcbn1cbiJdfQ== */\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { GaugeTestPageComponent } from \"./chart-prototype/gauge-test-page.component\";\nimport { LinearGaugeChartHorizontalPrototypeComponent } from \"./chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component\";\nimport { RadialGaugeChartPrototypeComponent } from \"./chart-prototype/radial/radial-gauge-chart-prototype.component\";\nimport { LinearGaugeChartVerticalPrototypeComponent } from \"./chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component\";\nimport { GaugeComponentPrototypeComponent } from \"./component-prototype/gauge-component-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"chart\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: \"component\",\n        component: GaugeComponentPrototypeComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        GaugeComponentPrototypeComponent,\n        LinearGaugeChartHorizontalPrototypeComponent,\n        LinearGaugeChartVerticalPrototypeComponent,\n        RadialGaugeChartPrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","export default \".chart {\\n  width: 280px;\\n  height: 280px;\\n}\\n.content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlhbC1nYXVnZS1jaGFydC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtBQURKO0FBSUE7RUFDSSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0NBQUE7QUFGSiIsImZpbGUiOiJyYWRpYWwtZ2F1Z2UtY2hhcnQtcHJvdG90eXBlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjgwcHg7XG4gICAgaGVpZ2h0OiAyODBweDtcbn1cblxuLmNvbnRlbnQtbGFiZWwge1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6IHZhcigtLW51aS1jb2xvci10ZXh0LXNlY29uZGFyeSk7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    BarGridConfig,\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeService,\n    GAUGE_THICKNESS_DEFAULT,\n    HorizontalBarAccessors,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeThreshold,\n    linearGaugeGridConfig,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-chart-prototype\",\n    templateUrl: \"./linear-gauge-vertical-chart-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-chart-prototype.component.less\"],\n})\nexport class LinearGaugeChartVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public value = 42;\n    @Input() public max: number = 200;\n    @Input() public thickness = GAUGE_THICKNESS_DEFAULT;\n    @Input() public thresholds: IGaugeThreshold[];\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    constructor(private gaugeService: GaugeService) { }\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeChartVerticalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.value && !changes.value.firstChange)) {\n            if (changes.thickness) {\n                this.chartAssist.chart.getGrid().config().dimension.width(this.thickness);\n                this.chartAssist.chart.updateDimensions();\n            }\n            this.chartAssist.update(this.gaugeService.updateSeriesSet(this.value, this.max, this.thresholds, this.seriesSet));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.seriesSet = this.gaugeService.assembleSeriesSet(this.value, this.max, this.thresholds, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"horizontal\\\"></nui-gauge>\\n</div>\\n<div class=\\\"d-flex\\\">\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"radial\\\"></nui-gauge>\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"radial\\\" #withConnectedContent></nui-gauge>\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"radial\\\"></nui-gauge>\\n</div>\\n\\n<div>\\n    <label for=\\\"valueInput\\\">\\n        Value\\n    </label>\\n    <br/>\\n    <input type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" [(ngModel)]=\\\"value\\\" id=\\\"valueInput\\\">\\n</div>\\n\\n<div>\\n    <label for=\\\"thicknessInput\\\">\\n        Thickness\\n    </label>\\n    <br/>\\n    <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" [(ngModel)]=\\\"thickness\\\" id=\\\"thicknessInput\\\">\\n</div>\\n\\n<ng-template #templatePortalContent>\\n    <span class=\\\"radial-gauge__inner-content\\\">\\n        {{value}}\\n    </span>\\n</ng-template>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    GaugeMode,\n    GaugeService,\n    GAUGE_THICKNESS_DEFAULT,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeThreshold,\n    IRadialRendererConfig,\n    radial,\n    RadialGaugeThresholdLabelsPlugin,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"radial-gauge-chart-prototype\",\n    templateUrl: \"./radial-gauge-chart-prototype.component.html\",\n    styleUrls: [\"./radial-gauge-chart-prototype.component.less\"],\n})\nexport class RadialGaugeChartPrototypeComponent implements OnChanges, OnInit {\n    @Input() public value = 42;\n    @Input() public max: number = 200;\n    @Input() public annularWidth = GAUGE_THICKNESS_DEFAULT;\n    @Input() public thresholds: IGaugeThreshold[];\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    constructor(private gaugeService: GaugeService) { }\n\n    public ngOnChanges(changes: ComponentChanges<RadialGaugeChartPrototypeComponent>) {\n        if ((changes.annularWidth && !changes.annularWidth.firstChange) || (changes.value && !changes.value.firstChange)) {\n            if (changes.annularWidth) {\n                this.updateAnnularWidth();\n            }\n            this.chartAssist.update(this.gaugeService.updateSeriesSet(this.value, this.max, this.thresholds, this.seriesSet));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = radialGrid();\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        const labelConfig = {\n            gridMargin: { top: 40, right: 40, bottom: 40, left: 40 },\n        };\n        this.chartAssist.chart.addPlugin(new RadialGaugeThresholdLabelsPlugin(labelConfig));\n\n        this.seriesSet = this.gaugeService.assembleSeriesSet(this.value, this.max, this.thresholds, GaugeMode.Radial);\n        this.seriesSet = this.gaugeService.setThresholdLabelFormatter((d: string) => `${d}MS`, this.seriesSet);\n\n        this.updateAnnularWidth();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateAnnularWidth() {\n        this.seriesSet.forEach(series => {\n            (series.renderer.config as IRadialRendererConfig).annularWidth = this.annularWidth;\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}