{"version":3,"sources":["./examples/components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts","./examples/components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.html","webpack:///./examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.module.ts?298c","./examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.module.ts","webpack:///./examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-data.service.ts?4e46","./examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?8c79","webpack:///./examples/components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts?74ee","./examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.component.html","./examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-data.service.ts","./examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.component.ts","webpack:///./examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.component.ts?a11b","./examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.html","webpack:///./examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts?bc6e"],"names":[],"mappings":"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","file":"components-demo-time-frame-bar-chart-docs-time-frame-bar-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \"@nova-ui/bits\";\nimport {\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, IAccessors, IChartAssistSeries, ISetDomainEventPayload, LineAccessors, LinearScale,\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\n} from \"@nova-ui/charts\";\nimport moment, { Moment } from \"moment/moment\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"nui-time-frame-bar-example\",\n    templateUrl: \"./time-frame-bar-basic.example.component.html\",\n    providers: [NoopDataSourceService, HistoryStorage],\n})\nexport class TimeFrameBarBasicExampleComponent implements OnInit, OnDestroy {\n    private series = getData();\n    public fromDate = moment(\"2018-05-01 15:00:00\").subtract(5.2, \"days\");\n    public toDate = moment(\"2019-01-01 15:00:00\");\n\n    public chart = new Chart(new XYGrid());\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\n\n    public timeFrame: ITimeframe;\n\n    private xScale = new TimeScale(\"time-scale\");\n    private yScale = new LinearScale();\n    private seriesSet: IChartAssistSeries<IAccessors>[] = [];\n    private filteringSubscription: Subscription;\n\n    constructor(public history: HistoryStorage<ITimeframe>,\n                private dataSourceService: NoopDataSourceService<ITimeframe>) {\n    }\n\n    public ngOnInit() {\n        const accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\n        const renderer = new LineRenderer();\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\n        this.seriesSet = Object.keys(this.series).map((key: string) => ({\n            id: key,\n            name: key,\n            data: buildTimeSeriesFromData(this.fromDate, this.toDate, this.series[key]),\n            accessors,\n            renderer,\n            scales: { x: this.xScale, y: this.yScale },\n        }));\n\n        this.timeFrame = this.history.save({\n            startDatetime: this.fromDate,\n            endDatetime: this.toDate,\n            selectedPresetId: undefined,\n        });\n\n        this.chart.addPlugins(new ZoomPlugin());\n\n        // Update Time Frame Bar when chart got zoomed\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\n            const payload = <ISetDomainEventPayload>event.data;\n            const newDomain = payload[this.xScale.id];\n            this.timeFrame = this.history.save({\n                startDatetime: moment(newDomain[0]),\n                endDatetime: moment(newDomain[1]),\n                selectedPresetId: undefined,\n            });\n\n            void this.dataSourceService.applyFilters();\n        });\n\n        this.filteringSubscription = this.setUpFiltering();\n\n        void this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        if (this.filteringSubscription) {\n            this.filteringSubscription.unsubscribe();\n        }\n    }\n\n    public updateTimeFrame(value: ITimeframe) {\n        this.timeFrame = this.history.restart(value);\n        void this.dataSourceService.applyFilters();\n    }\n\n    // Use the history storage to go back one time frame\n    public zoomUndo() {\n        this.timeFrame = this.history.undo();\n        void this.dataSourceService.applyFilters();\n    }\n\n    // Reset the history storage and save a new initial value if provided\n    // Otherwise preserve the previous one\n    public zoomReset(value?: ITimeframe) {\n        this.timeFrame = this.history.restart(value);\n        void this.dataSourceService.applyFilters();\n    }\n\n    private setUpFiltering(): any {\n        this.dataSourceService.registerComponent({\n            timeframe: {\n                componentInstance: {\n                    getFilters: () => <IFilter<ITimeframe>>({\n                        type: \"ITimeframe\",\n                        value: this.timeFrame,\n                    }),\n                },\n            },\n        });\n\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\n            this.xScale.fixDomain([data.timeframe.value.startDatetime.toDate(), data.timeframe.value.endDatetime.toDate()]);\n            this.chartAssist.update(this.seriesSet);\n        });\n    }\n}\n\n/* Chart data */\nfunction getData(): Record<string, number[]> {\n    return {\n        \"Tex-lab-aus-2621\": [18, 27, 35, 33, 26, 50, 36, 47, 58, 66, 65, 50, 40, 31, 42, 62, 57, 99, 75, 55, 73, 69, 77, 57, 61, 68, 82, 81, 78, 67],\n        \"Cz-lab-brn-02\": [41, 50, 56, 40, 44, 35, 27, 42, 38, 23, 20, 13, 29, 42, 84, 93, 71, 60, 54, 79, 64, 49, 48, 59, 76, 63, 52, 84, 89, 80],\n    };\n}\n\nfunction buildTimeSeriesFromData(from: Moment, to: Moment, data: number[]): { x: Moment, y: number }[] {\n    const count = data.length;\n    if (!from || !to || count === 0) {\n        return [];\n    }\n\n    const interval = count > 1 ? to.diff(from) / (count - 1) : 0;\n    return data.map((y, i) => ({\n        x: from.clone().add(moment.duration(i * interval)),\n        y,\n    }));\n}\n","export default \"<nui-time-frame-bar [timeFrame]=\\\"timeFrame\\\"\\n                    (timeFrameChange)=\\\"updateTimeFrame($event)\\\"\\n                    [historyIndex]=\\\"history.index\\\"\\n                    [minDate]=\\\"fromDate\\\"\\n                    [maxDate]=\\\"toDate\\\"\\n                    (undo)=\\\"zoomUndo()\\\"\\n                    (clear)=\\\"zoomReset()\\\">\\n    <nui-icon icon=\\\"calendar\\\" class=\\\"pr-3\\\"></nui-icon>\\n    {{timeFrame | timeFrame}}\\n    <nui-quick-picker timeFrameSelection>\\n        <nui-time-frame-picker></nui-time-frame-picker>\\n    </nui-quick-picker>\\n</nui-time-frame-bar>\\n\\n<div class=\\\"nui-chart-layout p-3\\\">\\n    <div class=\\\"axis-label-left nui-text-small\\\"><strong i18n>Average CPU load (%)</strong></div>\\n    <div class=\\\"chart\\\">\\n        <nui-chart class=\\\"d-flex w-100 h-100\\\" [chart]=\\\"chart\\\"></nui-chart>\\n    </div>\\n    <div class=\\\"legend\\\">\\n        <nui-legend seriesUnitLabel=\\\"%\\\"\\n                    [active]=\\\"chartAssist.isLegendActive\\\"\\n                    [interactive]=\\\"true\\\"\\n                    (mouseleave)=\\\"chartAssist.resetVisibleSeries()\\\">\\n            <nui-legend-series *ngFor=\\\"let legendSeries of chartAssist.legendSeriesSet; trackBy: chartAssist.seriesTrackByFn\\\"\\n                               [descriptionPrimary]=\\\"legendSeries['name']\\\"\\n                               (mouseenter)=\\\"chartAssist.emphasizeSeries(legendSeries.id)\\\"\\n                               [seriesRenderState]=\\\"chartAssist.renderStatesIndex[legendSeries.id]?.state\\\"\\n                               [isSelected]=\\\"!chartAssist.isSeriesHidden(legendSeries.id)\\\"\\n                               (isSelectedChange)=\\\"chartAssist.toggleSeries(legendSeries.id, $event)\\\">\\n                <nui-rich-legend-tile [value]=\\\"chartAssist.getHighlightedValue(legendSeries, 'y')\\\"\\n                                      [backgroundColor]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\"\\n                                      [color]=\\\"chartAssist.palette.textColors.get(legendSeries.id)\\\">\\n                    <nui-chart-marker rightEdge\\n                                      [marker]=\\\"chartAssist.markers.get(legendSeries.id)\\\"\\n                                      [color]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\">\\n                    </nui-chart-marker>\\n                </nui-rich-legend-tile>\\n            </nui-legend-series>\\n        </nui-legend>\\n    </div>\\n</div>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule, Routes } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN, NuiBusyModule, NuiButtonModule, NuiCommonModule, NuiDialogModule, NuiDocsModule, NuiIconModule, NuiLayoutModule, NuiPopoverModule,\\n    NuiTimeFrameBarModule, NuiTimeFramePickerModule, NuiTooltipModule, SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\nimport { NuiChartsModule } from \\\"@nova-ui/charts\\\";\\n\\nimport { DemoCommonModule } from \\\"../common/demo-common.module\\\";\\n\\nimport { ChartDocsTimeFrameBarComponent } from \\\"./chart-docs-time-frame-bar.component\\\";\\nimport { TimeFrameBarBasicExampleComponent } from \\\"./time-frame-bar-basic/time-frame-bar-basic.example.component\\\";\\nimport { TimeFrameBarTestComponent } from \\\"./time-frame-bar-test/time-frame-bar-test.component\\\";\\n\\nconst exampleRoutes: Routes = [\\n    {\\n        path: \\\"\\\",\\n        component: ChartDocsTimeFrameBarComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.beta,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"example\\\",\\n        component: TimeFrameBarBasicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"test\\\",\\n        component: TimeFrameBarTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    declarations: [\\n        ChartDocsTimeFrameBarComponent,\\n        TimeFrameBarBasicExampleComponent,\\n        TimeFrameBarTestComponent,\\n    ],\\n    imports: [\\n        DemoCommonModule,\\n        NuiButtonModule,\\n        NuiBusyModule,\\n        NuiChartsModule,\\n        NuiCommonModule,\\n        NuiDialogModule,\\n        NuiDocsModule,\\n        NuiIconModule,\\n        NuiLayoutModule,\\n        NuiPopoverModule,\\n        NuiTimeFramePickerModule,\\n        NuiTimeFrameBarModule,\\n        NuiTooltipModule,\\n        RouterModule.forChild(exampleRoutes),\\n    ],\\n    providers: [\\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/) },\\n    ],\\n})\\nexport class ChartDocsTimeFrameBarModule {\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN, NuiBusyModule, NuiButtonModule, NuiCommonModule, NuiDialogModule, NuiDocsModule, NuiIconModule, NuiLayoutModule, NuiPopoverModule,\n    NuiTimeFrameBarModule, NuiTimeFramePickerModule, NuiTooltipModule, SrlcStage,\n} from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../common/demo-common.module\";\n\nimport { ChartDocsTimeFrameBarComponent } from \"./chart-docs-time-frame-bar.component\";\nimport { TimeFrameBarBasicExampleComponent } from \"./time-frame-bar-basic/time-frame-bar-basic.example.component\";\nimport { TimeFrameBarTestComponent } from \"./time-frame-bar-test/time-frame-bar-test.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsTimeFrameBarComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"example\",\n        component: TimeFrameBarBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"test\",\n        component: TimeFrameBarTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsTimeFrameBarComponent,\n        TimeFrameBarBasicExampleComponent,\n        TimeFrameBarTestComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        NuiButtonModule,\n        NuiBusyModule,\n        NuiChartsModule,\n        NuiCommonModule,\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiIconModule,\n        NuiLayoutModule,\n        NuiPopoverModule,\n        NuiTimeFramePickerModule,\n        NuiTimeFrameBarModule,\n        NuiTooltipModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsTimeFrameBarModule {\n}\n","export default \"import moment, { Moment } from \\\"moment/moment\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport { delay } from \\\"rxjs/operators\\\";\\n\\nenum DataInterval {\\n    Poll = 5,\\n    Hour = 60,\\n    // Day = 24 * 60,\\n    // Week = 7 * 24 * 60,\\n}\\n\\nexport class TimeFrameBarDataService {\\n    /* eslint-disable max-len */\\n    private factors = {\\n        \\\"day\\\": [42, 7, 63, 33, 10, 16, 57, 16, 88, 44, 35, 85, 46, 73, 29, 35, 51, 52, 100, 51, 40, 87, 42, 90, 75, 90, 70, 16, 4, 43, 18, 63, 28, 15, 86, 81, 48, 86, 91, 89, 15, 89, 66, 35, 65, 18, 59, 75, 69, 64, 55, 67, 60, 76, 29, 81, 87, 73, 10, 19, 29, 83, 16, 72, 80, 43, 28, 53, 38, 24, 88, 81, 14, 68, 80, 44, 72, 56, 89, 83, 6, 1, 1, 11, 66, 39, 42, 81, 31, 48, 11, 76, 41, 60, 40, 15, 75, 33, 90, 80, 37, 40, 39, 58, 69, 31, 61, 80, 85, 57, 38, 3, 45, 36, 71, 66, 36, 58, 82, 70, 90, 78, 33, 72, 98, 36, 32, 61, 44, 13, 22, 90, 66, 87, 55, 21, 63, 70, 41, 61, 19, 42, 65, 79, 17, 14, 85, 69, 79, 77, 99, 86, 5, 31, 94, 2, 37, 54, 79, 32, 63, 83, 64, 52, 59, 35, 18, 45, 58, 23, 58, 99, 61, 60, 78, 95, 63, 35, 27, 93, 46, 86, 51, 80, 73, 6, 66, 72, 96, 7, 90, 94, 3, 66, 1, 38, 30, 11, 58, 91, 84, 100, 90, 70, 51, 77, 56, 53, 49, 42, 84, 10, 76, 11, 66, 41, 38, 68, 24, 84, 89, 72, 74, 54, 29, 18, 36, 13, 17, 18, 82, 14, 50, 10, 47, 12, 1, 4, 63, 59, 62, 78, 83, 5, 25, 8, 59, 59, 28, 56, 35, 33, 31, 37, 5, 67, 34, 93, 25, 66, 69, 64, 23, 69, 60, 24, 26, 81, 88, 66, 80, 45, 91, 68, 83, 8, 83, 43, 96, 85, 8, 47, 67, 14, 64, 26, 96, 45],\\n        \\\"year\\\": [64, 70, 41, 96, 74, 38, 38, 79, 77, 24, 98, 78, 22, 90, 7, 42, 95, 76, 92, 86, 13, 5, 80, 6, 9, 90, 40, 94, 66, 12, 28, 7, 76, 74, 23, 79, 82, 9, 9, 84, 59, 92, 63, 15, 25, 18, 83, 35, 46, 14, 22, 84, 34, 17, 9, 25, 34, 89, 48, 80, 76, 38, 60, 43, 41, 88, 35, 32, 62, 80, 76, 64, 41, 49, 23, 61, 27, 56, 3, 88, 37, 24, 15, 88, 85, 18, 41, 74, 81, 13, 40, 10, 39, 30, 45, 21, 32, 46, 54, 8, 28, 19, 74, 87, 36, 43, 74, 15, 58, 24, 98, 14, 49, 96, 51, 83, 4, 4, 13, 72, 42, 62, 26, 80, 85, 46, 74, 60, 14, 5, 97, 16, 90, 84, 52, 10, 18, 26, 8, 49, 71, 34, 87, 32, 15, 46, 23, 10, 86, 7, 18, 51, 31, 72, 20, 43, 10, 91, 74, 51, 86, 89, 32, 79, 94, 5, 41, 16, 79, 66, 84, 24, 74, 78, 69, 85, 46, 57, 92, 92, 3, 14, 5, 12, 63, 1, 6, 37, 85, 79, 18, 88, 42, 8, 25, 94, 87, 7, 52, 16, 35, 43, 65, 63, 46, 38, 98, 55, 100, 14, 45, 50, 49, 90, 98, 47, 20, 83, 84, 84, 58, 79, 100, 19, 75, 94, 34, 5, 94, 29, 96, 80, 46, 33, 73, 82, 58, 68, 98, 100, 10, 46, 96, 87, 96, 5, 64, 53, 5, 7, 19, 65, 91, 78, 59, 14, 19, 12, 15, 92, 8, 15, 19, 99, 26, 25, 45, 29, 39, 1, 61, 74, 88, 27, 43, 1, 93, 75, 91, 97, 38, 39, 24, 94, 29, 18, 88, 56, 62, 7, 88, 13, 34, 21, 20, 41, 90, 95, 2, 17, 26, 4, 44, 70, 18, 65, 75, 62, 18, 46, 18, 73, 76, 95, 2, 30, 31, 77, 77, 80, 23, 51, 48, 42, 78, 65, 78, 56, 37, 46, 96, 72, 49, 48, 8, 45, 89, 42, 87, 28, 42, 53, 94, 73, 57, 30, 75, 53, 77, 62, 9, 71, 9, 48, 97, 92, 91, 24, 44, 83, 8, 86, 41, 6, 21, 45],\\n        \\\"century\\\": [85, 83, 87, 82, 77, 65, 67, 72, 75, 76, 82, 87, 91, 93, 94, 90, 84, 89, 86, 88, 86, 85, 82, 84, 81, 77, 77, 77, 80, 97, 18, 6, 25, 85, 90, 25, 72, 99, 61, 79, 62, 7, 50, 41, 40, 6, 60, 65, 1, 98, 90, 31, 57, 74, 50, 57, 68, 20, 12, 16, 33, 1, 32, 53, 76, 57, 89, 33, 48, 28, 89, 35, 15, 3, 33, 77, 10, 1, 36, 4, 36, 88, 26, 66, 50, 3, 66, 37, 77, 70, 9, 40, 20, 14, 55, 96, 88, 14, 9, 54],\\n    };\\n    /* eslint-enable max-len */\\n\\n    /* Chart data */\\n    private seriesValueFunctions: Record<string, (fs: [number, number, number]) => number> = {\\n        \\\"Tex-lab-aus-2621\\\": ([a, b, c]) => a + 0.1 * (b - 30) + (c - 50),\\n        \\\"Cz-lab-brn-02\\\": ([a, b, c]) => a + 0.01 * b * (b - 50) + 20 * Math.cos(c * 0.02 * Math.PI),\\n    };\\n\\n    public getChartData(from: Moment, to: Moment, delayInterval: number = 0): Observable<Record<string, { x: Moment, y: number }[]>> {\\n        const rules = this.seriesValueFunctions;\\n        const results: Record<string, { x: moment.Moment; y: number }[]> = {};\\n\\n        const duration = moment.duration(to.diff(from));\\n        const dataInterval = duration.asHours() > 12 ? DataInterval.Hour : DataInterval.Poll;\\n\\n        for (const seriesId of Object.keys(rules)) {\\n            results[seriesId] = this.getData(from, to, rules[seriesId], dataInterval);\\n        }\\n\\n        return of(results).pipe(delay(delayInterval));\\n    }\\n\\n    private getData(\\n        start: Moment,\\n        end: Moment,\\n        valueFn: (fs: [number, number, number]) => number,\\n        interval: DataInterval = DataInterval.Poll\\n    ): { x: moment.Moment; y: number }[] {\\n        const startCorrector = start.minutes() % interval;\\n        const currentDate = start.clone().subtract(startCorrector, \\\"minutes\\\").seconds(0); // rounds to pollInterval\\n        const endCorrector = interval - end.minutes() % interval;\\n        const endDate = end.clone().add(endCorrector, \\\"minutes\\\").seconds(0); // rounds to 5 minutes pollInterval\\n        const count = Math.ceil(moment.duration(endDate.diff(currentDate)).asMinutes() / interval);\\n        const results = [];\\n\\n        for (let i = 0; i < count; i++) {\\n            const fDay = this.factors.day[Math.ceil((60 * currentDate.hours() + currentDate.minutes()) / 5)];\\n            const fYear = this.factors.year[currentDate.dayOfYear()];\\n            const fCentury = this.factors.century[currentDate.year() % 100];\\n            results.push({\\n                x: currentDate.clone(),\\n                y: valueFn([fCentury, fYear, fDay]),\\n            });\\n            currentDate.add(interval, \\\"minutes\\\");\\n        }\\n\\n        return results;\\n    }\\n\\n}\\n\";","import { AfterContentInit, Component, OnDestroy } from \"@angular/core\";\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \"@nova-ui/bits\";\nimport {\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, ISetDomainEventPayload, LineAccessors, LinearScale,\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\nimport { Subscription } from \"rxjs\";\n\nimport { TimeFrameBarDataService } from \"./time-frame-bar-data.service\";\n\n@Component({\n    selector: \"nui-time-frame-bar-test\",\n    templateUrl: \"./time-frame-bar-test.component.html\",\n    providers: [NoopDataSourceService, HistoryStorage],\n})\nexport class TimeFrameBarTestComponent implements AfterContentInit, OnDestroy {\n    public fromDate = moment(\"2018-05-01 15:00:00\").subtract(2, \"days\");\n    public toDate = moment(\"2018-05-01 15:00:00\");\n\n    public chart = new Chart(new XYGrid());\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\n\n    public timeFrame: ITimeframe;\n    public busy: boolean;\n    public addDelay: boolean = true;\n\n    private xScale = new TimeScale(\"time-scale\");\n    private yScale = new LinearScale();\n    private accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\n    private renderer = new LineRenderer();\n    private filteringSubscription: Subscription;\n\n    private dataService = new TimeFrameBarDataService();\n\n    constructor(public history: HistoryStorage<ITimeframe>,\n        private dataSourceService: NoopDataSourceService<ITimeframe>) {\n    }\n\n    public ngAfterContentInit() {\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\n        this.chart.addPlugins(new ZoomPlugin());\n\n        this.filteringSubscription = this.setUpFiltering();\n\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\n            const payload = <ISetDomainEventPayload>event.data;\n            const newDomain = payload[this.xScale.id];\n\n            this.applyFilters(this.history.save({\n                startDatetime: moment(newDomain[0]),\n                endDatetime: moment(newDomain[1]),\n                selectedPresetId: undefined,\n            }));\n        });\n\n        this.applyFilters(this.history.save({\n            startDatetime: this.fromDate,\n            endDatetime: this.toDate,\n            selectedPresetId: undefined,\n        }));\n    }\n\n    public ngOnDestroy() {\n        if (this.filteringSubscription) {\n            this.filteringSubscription.unsubscribe();\n        }\n    }\n\n    public updateTimeFrame(value?: ITimeframe) {\n        this.applyFilters(this.history.restart(value));\n    }\n\n    public zoomUndo() {\n        this.applyFilters(this.history.undo());\n    }\n\n    private applyFilters(value: ITimeframe) {\n        this.busy = true;\n        this.timeFrame = value;\n        this.xScale.fixDomain([value.startDatetime.toDate(), value.endDatetime.toDate()]);\n        this.chart.updateDimensions();\n        void this.dataSourceService.applyFilters();\n    }\n\n    private setUpFiltering(): any {\n        this.dataSourceService.registerComponent({\n            timeframe: {\n                componentInstance: {\n                    getFilters: () => <IFilter<ITimeframe>>({\n                        type: \"ITimeframe\",\n                        value: this.timeFrame,\n                    }),\n                },\n            },\n        });\n\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\n            const start = data.timeframe.value.startDatetime;\n            const end = data.timeframe.value.endDatetime;\n            this.dataService.getChartData(start, end, this.addDelay ? 1000 : 0).subscribe((series) => {\n                this.chartAssist.update(Object.keys(series).map((key: string) => ({\n                    id: key,\n                    name: key,\n                    data: series[key],\n                    accessors: this.accessors,\n                    renderer: this.renderer,\n                    scales: { x: this.xScale, y: this.yScale },\n                })));\n                this.busy = false;\n            });\n\n        });\n    }\n}\n\n","var map = {\n\t\"./chart-docs-time-frame-bar.component.html\": \"dsON\",\n\t\"./chart-docs-time-frame-bar.component.ts\": \"oRth\",\n\t\"./chart-docs-time-frame-bar.module.ts\": \"KYwu\",\n\t\"./time-frame-bar-basic/time-frame-bar-basic.example.component.html\": \"EUdT\",\n\t\"./time-frame-bar-basic/time-frame-bar-basic.example.component.ts\": \"dO4p\",\n\t\"./time-frame-bar-test/time-frame-bar-data.service.ts\": \"Tkac\",\n\t\"./time-frame-bar-test/time-frame-bar-test.component.html\": \"oS9I\",\n\t\"./time-frame-bar-test/time-frame-bar-test.component.ts\": \"vG5J\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Xc7/\";","export default \"import { Component, OnDestroy, OnInit } from \\\"@angular/core\\\";\\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \\\"@nova-ui/bits\\\";\\nimport {\\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, IAccessors, IChartAssistSeries, ISetDomainEventPayload, LineAccessors, LinearScale,\\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\\n} from \\\"@nova-ui/charts\\\";\\nimport moment, { Moment } from \\\"moment/moment\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\n@Component({\\n    selector: \\\"nui-time-frame-bar-example\\\",\\n    templateUrl: \\\"./time-frame-bar-basic.example.component.html\\\",\\n    providers: [NoopDataSourceService, HistoryStorage],\\n})\\nexport class TimeFrameBarBasicExampleComponent implements OnInit, OnDestroy {\\n    private series = getData();\\n    public fromDate = moment(\\\"2018-05-01 15:00:00\\\").subtract(5.2, \\\"days\\\");\\n    public toDate = moment(\\\"2019-01-01 15:00:00\\\");\\n\\n    public chart = new Chart(new XYGrid());\\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\\n\\n    public timeFrame: ITimeframe;\\n\\n    private xScale = new TimeScale(\\\"time-scale\\\");\\n    private yScale = new LinearScale();\\n    private seriesSet: IChartAssistSeries<IAccessors>[] = [];\\n    private filteringSubscription: Subscription;\\n\\n    constructor(public history: HistoryStorage<ITimeframe>,\\n                private dataSourceService: NoopDataSourceService<ITimeframe>) {\\n    }\\n\\n    public ngOnInit() {\\n        const accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\\n        const renderer = new LineRenderer();\\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\\n        this.seriesSet = Object.keys(this.series).map((key: string) => ({\\n            id: key,\\n            name: key,\\n            data: buildTimeSeriesFromData(this.fromDate, this.toDate, this.series[key]),\\n            accessors,\\n            renderer,\\n            scales: { x: this.xScale, y: this.yScale },\\n        }));\\n\\n        this.timeFrame = this.history.save({\\n            startDatetime: this.fromDate,\\n            endDatetime: this.toDate,\\n            selectedPresetId: undefined,\\n        });\\n\\n        this.chart.addPlugins(new ZoomPlugin());\\n\\n        // Update Time Frame Bar when chart got zoomed\\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\\n            const payload = <ISetDomainEventPayload>event.data;\\n            const newDomain = payload[this.xScale.id];\\n            this.timeFrame = this.history.save({\\n                startDatetime: moment(newDomain[0]),\\n                endDatetime: moment(newDomain[1]),\\n                selectedPresetId: undefined,\\n            });\\n\\n            void this.dataSourceService.applyFilters();\\n        });\\n\\n        this.filteringSubscription = this.setUpFiltering();\\n\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        if (this.filteringSubscription) {\\n            this.filteringSubscription.unsubscribe();\\n        }\\n    }\\n\\n    public updateTimeFrame(value: ITimeframe) {\\n        this.timeFrame = this.history.restart(value);\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    // Use the history storage to go back one time frame\\n    public zoomUndo() {\\n        this.timeFrame = this.history.undo();\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    // Reset the history storage and save a new initial value if provided\\n    // Otherwise preserve the previous one\\n    public zoomReset(value?: ITimeframe) {\\n        this.timeFrame = this.history.restart(value);\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    private setUpFiltering(): any {\\n        this.dataSourceService.registerComponent({\\n            timeframe: {\\n                componentInstance: {\\n                    getFilters: () => <IFilter<ITimeframe>>({\\n                        type: \\\"ITimeframe\\\",\\n                        value: this.timeFrame,\\n                    }),\\n                },\\n            },\\n        });\\n\\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\\n            this.xScale.fixDomain([data.timeframe.value.startDatetime.toDate(), data.timeframe.value.endDatetime.toDate()]);\\n            this.chartAssist.update(this.seriesSet);\\n        });\\n    }\\n}\\n\\n/* Chart data */\\nfunction getData(): Record<string, number[]> {\\n    return {\\n        \\\"Tex-lab-aus-2621\\\": [18, 27, 35, 33, 26, 50, 36, 47, 58, 66, 65, 50, 40, 31, 42, 62, 57, 99, 75, 55, 73, 69, 77, 57, 61, 68, 82, 81, 78, 67],\\n        \\\"Cz-lab-brn-02\\\": [41, 50, 56, 40, 44, 35, 27, 42, 38, 23, 20, 13, 29, 42, 84, 93, 71, 60, 54, 79, 64, 49, 48, 59, 76, 63, 52, 84, 89, 80],\\n    };\\n}\\n\\nfunction buildTimeSeriesFromData(from: Moment, to: Moment, data: number[]): { x: Moment, y: number }[] {\\n    const count = data.length;\\n    if (!from || !to || count === 0) {\\n        return [];\\n    }\\n\\n    const interval = count > 1 ? to.diff(from) / (count - 1) : 0;\\n    return data.map((y, i) => ({\\n        x: from.clone().add(moment.duration(i * interval)),\\n        y,\\n    }));\\n}\\n\";","export default \"<h1>Time Frame Bar</h1>\\n\\n<p>\\n    This example shows the current way of implementing a chart with zooming capability and a time frame bar.\\n    We don't provide components that would encapsulate this logic, so it needs to be implemented from scratch like this. It takes advantage of the filtering\\n    session implementation to connect the filtering components on the page.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"time-frame-bar-basic\\\"\\n                     exampleTitle=\\\"Time Frame Bar\\\">\\n    <nui-time-frame-bar-example></nui-time-frame-bar-example>\\n</nui-example-wrapper>\\n\";","import moment, { Moment } from \"moment/moment\";\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\nenum DataInterval {\n    Poll = 5,\n    Hour = 60,\n    // Day = 24 * 60,\n    // Week = 7 * 24 * 60,\n}\n\nexport class TimeFrameBarDataService {\n    /* eslint-disable max-len */\n    private factors = {\n        \"day\": [42, 7, 63, 33, 10, 16, 57, 16, 88, 44, 35, 85, 46, 73, 29, 35, 51, 52, 100, 51, 40, 87, 42, 90, 75, 90, 70, 16, 4, 43, 18, 63, 28, 15, 86, 81, 48, 86, 91, 89, 15, 89, 66, 35, 65, 18, 59, 75, 69, 64, 55, 67, 60, 76, 29, 81, 87, 73, 10, 19, 29, 83, 16, 72, 80, 43, 28, 53, 38, 24, 88, 81, 14, 68, 80, 44, 72, 56, 89, 83, 6, 1, 1, 11, 66, 39, 42, 81, 31, 48, 11, 76, 41, 60, 40, 15, 75, 33, 90, 80, 37, 40, 39, 58, 69, 31, 61, 80, 85, 57, 38, 3, 45, 36, 71, 66, 36, 58, 82, 70, 90, 78, 33, 72, 98, 36, 32, 61, 44, 13, 22, 90, 66, 87, 55, 21, 63, 70, 41, 61, 19, 42, 65, 79, 17, 14, 85, 69, 79, 77, 99, 86, 5, 31, 94, 2, 37, 54, 79, 32, 63, 83, 64, 52, 59, 35, 18, 45, 58, 23, 58, 99, 61, 60, 78, 95, 63, 35, 27, 93, 46, 86, 51, 80, 73, 6, 66, 72, 96, 7, 90, 94, 3, 66, 1, 38, 30, 11, 58, 91, 84, 100, 90, 70, 51, 77, 56, 53, 49, 42, 84, 10, 76, 11, 66, 41, 38, 68, 24, 84, 89, 72, 74, 54, 29, 18, 36, 13, 17, 18, 82, 14, 50, 10, 47, 12, 1, 4, 63, 59, 62, 78, 83, 5, 25, 8, 59, 59, 28, 56, 35, 33, 31, 37, 5, 67, 34, 93, 25, 66, 69, 64, 23, 69, 60, 24, 26, 81, 88, 66, 80, 45, 91, 68, 83, 8, 83, 43, 96, 85, 8, 47, 67, 14, 64, 26, 96, 45],\n        \"year\": [64, 70, 41, 96, 74, 38, 38, 79, 77, 24, 98, 78, 22, 90, 7, 42, 95, 76, 92, 86, 13, 5, 80, 6, 9, 90, 40, 94, 66, 12, 28, 7, 76, 74, 23, 79, 82, 9, 9, 84, 59, 92, 63, 15, 25, 18, 83, 35, 46, 14, 22, 84, 34, 17, 9, 25, 34, 89, 48, 80, 76, 38, 60, 43, 41, 88, 35, 32, 62, 80, 76, 64, 41, 49, 23, 61, 27, 56, 3, 88, 37, 24, 15, 88, 85, 18, 41, 74, 81, 13, 40, 10, 39, 30, 45, 21, 32, 46, 54, 8, 28, 19, 74, 87, 36, 43, 74, 15, 58, 24, 98, 14, 49, 96, 51, 83, 4, 4, 13, 72, 42, 62, 26, 80, 85, 46, 74, 60, 14, 5, 97, 16, 90, 84, 52, 10, 18, 26, 8, 49, 71, 34, 87, 32, 15, 46, 23, 10, 86, 7, 18, 51, 31, 72, 20, 43, 10, 91, 74, 51, 86, 89, 32, 79, 94, 5, 41, 16, 79, 66, 84, 24, 74, 78, 69, 85, 46, 57, 92, 92, 3, 14, 5, 12, 63, 1, 6, 37, 85, 79, 18, 88, 42, 8, 25, 94, 87, 7, 52, 16, 35, 43, 65, 63, 46, 38, 98, 55, 100, 14, 45, 50, 49, 90, 98, 47, 20, 83, 84, 84, 58, 79, 100, 19, 75, 94, 34, 5, 94, 29, 96, 80, 46, 33, 73, 82, 58, 68, 98, 100, 10, 46, 96, 87, 96, 5, 64, 53, 5, 7, 19, 65, 91, 78, 59, 14, 19, 12, 15, 92, 8, 15, 19, 99, 26, 25, 45, 29, 39, 1, 61, 74, 88, 27, 43, 1, 93, 75, 91, 97, 38, 39, 24, 94, 29, 18, 88, 56, 62, 7, 88, 13, 34, 21, 20, 41, 90, 95, 2, 17, 26, 4, 44, 70, 18, 65, 75, 62, 18, 46, 18, 73, 76, 95, 2, 30, 31, 77, 77, 80, 23, 51, 48, 42, 78, 65, 78, 56, 37, 46, 96, 72, 49, 48, 8, 45, 89, 42, 87, 28, 42, 53, 94, 73, 57, 30, 75, 53, 77, 62, 9, 71, 9, 48, 97, 92, 91, 24, 44, 83, 8, 86, 41, 6, 21, 45],\n        \"century\": [85, 83, 87, 82, 77, 65, 67, 72, 75, 76, 82, 87, 91, 93, 94, 90, 84, 89, 86, 88, 86, 85, 82, 84, 81, 77, 77, 77, 80, 97, 18, 6, 25, 85, 90, 25, 72, 99, 61, 79, 62, 7, 50, 41, 40, 6, 60, 65, 1, 98, 90, 31, 57, 74, 50, 57, 68, 20, 12, 16, 33, 1, 32, 53, 76, 57, 89, 33, 48, 28, 89, 35, 15, 3, 33, 77, 10, 1, 36, 4, 36, 88, 26, 66, 50, 3, 66, 37, 77, 70, 9, 40, 20, 14, 55, 96, 88, 14, 9, 54],\n    };\n    /* eslint-enable max-len */\n\n    /* Chart data */\n    private seriesValueFunctions: Record<string, (fs: [number, number, number]) => number> = {\n        \"Tex-lab-aus-2621\": ([a, b, c]) => a + 0.1 * (b - 30) + (c - 50),\n        \"Cz-lab-brn-02\": ([a, b, c]) => a + 0.01 * b * (b - 50) + 20 * Math.cos(c * 0.02 * Math.PI),\n    };\n\n    public getChartData(from: Moment, to: Moment, delayInterval: number = 0): Observable<Record<string, { x: Moment, y: number }[]>> {\n        const rules = this.seriesValueFunctions;\n        const results: Record<string, { x: moment.Moment; y: number }[]> = {};\n\n        const duration = moment.duration(to.diff(from));\n        const dataInterval = duration.asHours() > 12 ? DataInterval.Hour : DataInterval.Poll;\n\n        for (const seriesId of Object.keys(rules)) {\n            results[seriesId] = this.getData(from, to, rules[seriesId], dataInterval);\n        }\n\n        return of(results).pipe(delay(delayInterval));\n    }\n\n    private getData(\n        start: Moment,\n        end: Moment,\n        valueFn: (fs: [number, number, number]) => number,\n        interval: DataInterval = DataInterval.Poll\n    ): { x: moment.Moment; y: number }[] {\n        const startCorrector = start.minutes() % interval;\n        const currentDate = start.clone().subtract(startCorrector, \"minutes\").seconds(0); // rounds to pollInterval\n        const endCorrector = interval - end.minutes() % interval;\n        const endDate = end.clone().add(endCorrector, \"minutes\").seconds(0); // rounds to 5 minutes pollInterval\n        const count = Math.ceil(moment.duration(endDate.diff(currentDate)).asMinutes() / interval);\n        const results = [];\n\n        for (let i = 0; i < count; i++) {\n            const fDay = this.factors.day[Math.ceil((60 * currentDate.hours() + currentDate.minutes()) / 5)];\n            const fYear = this.factors.year[currentDate.dayOfYear()];\n            const fCentury = this.factors.century[currentDate.year() % 100];\n            results.push({\n                x: currentDate.clone(),\n                y: valueFn([fCentury, fYear, fDay]),\n            });\n            currentDate.add(interval, \"minutes\");\n        }\n\n        return results;\n    }\n\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-chart-docs-time-frame-bar\",\n    templateUrl: \"./chart-docs-time-frame-bar.component.html\",\n})\nexport class ChartDocsTimeFrameBarComponent {\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-chart-docs-time-frame-bar\\\",\\n    templateUrl: \\\"./chart-docs-time-frame-bar.component.html\\\",\\n})\\nexport class ChartDocsTimeFrameBarComponent {\\n}\\n\";","export default \"<charts-test-harness>\\n    <div class=\\\"nui-time-frame-bar-test\\\">\\n        <div class=\\\"m-5\\\" nui-busy [busy]=\\\"busy\\\" style=\\\"border: 1px solid lightgrey;\\\">\\n            <nui-time-frame-bar [timeFrame]=\\\"timeFrame\\\"\\n                                (timeFrameChange)=\\\"updateTimeFrame($event)\\\"\\n                                [historyIndex]=\\\"history.index\\\"\\n                                [minDate]=\\\"fromDate\\\"\\n                                [maxDate]=\\\"toDate\\\"\\n                                (undo)=\\\"zoomUndo()\\\"\\n                                (clear)=\\\"updateTimeFrame()\\\"\\n                                style=\\\"display: block; border-bottom: 1px solid lightgrey;\\\"\\n                                class=\\\"time-frame-bar\\\">\\n                <nui-icon icon=\\\"calendar\\\" class=\\\"pr-3\\\"></nui-icon>\\n                {{timeFrame | timeFrame}}\\n                <nui-quick-picker timeFrameSelection>\\n                    <nui-time-frame-picker></nui-time-frame-picker>\\n                </nui-quick-picker>\\n            </nui-time-frame-bar>\\n            <div class=\\\"nui-chart-layout p-3\\\">\\n                <div class=\\\"axis-label-left nui-text-small\\\"><strong i18n>Average CPU load (%)</strong></div>\\n                <div class=\\\"chart\\\">\\n                    <nui-chart class=\\\"w-100\\\" [chart]=\\\"chart\\\"></nui-chart>\\n                </div>\\n                <div class=\\\"legend\\\">\\n                    <nui-legend seriesUnitLabel=\\\"%\\\"\\n                                [active]=\\\"chartAssist.isLegendActive\\\"\\n                                [interactive]=\\\"true\\\"\\n                                (mouseleave)=\\\"chartAssist.resetVisibleSeries()\\\">\\n                        <nui-legend-series *ngFor=\\\"let legendSeries of chartAssist.legendSeriesSet; trackBy: chartAssist.seriesTrackByFn\\\"\\n                                           [descriptionPrimary]=\\\"legendSeries['name']\\\"\\n                                           (mouseenter)=\\\"chartAssist.emphasizeSeries(legendSeries.id)\\\"\\n                                           [seriesRenderState]=\\\"chartAssist.renderStatesIndex[legendSeries.id]?.state\\\"\\n                                           [isSelected]=\\\"!chartAssist.isSeriesHidden(legendSeries.id)\\\"\\n                                           (isSelectedChange)=\\\"chartAssist.toggleSeries(legendSeries.id, $event)\\\">\\n                            <nui-rich-legend-tile [value]=\\\"chartAssist.getHighlightedValue(legendSeries, 'y')\\\"\\n                                                  [backgroundColor]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\"\\n                                                  [color]=\\\"chartAssist.palette.textColors.get(legendSeries.id)\\\">\\n                                <nui-chart-marker rightEdge\\n                                                  [marker]=\\\"chartAssist.markers.get(legendSeries.id)\\\"\\n                                                  [color]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\">\\n                                </nui-chart-marker>\\n                            </nui-rich-legend-tile>\\n                        </nui-legend-series>\\n                    </nui-legend>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"p-5\\\">\\n            <input id=\\\"delay\\\" name=\\\"delay\\\" type=\\\"checkbox\\\" [checked]=\\\"addDelay\\\" (change)=\\\"addDelay = !addDelay\\\" />\\n            <label for=\\\"delay\\\" class=\\\"pl-2\\\">Add delay to server requests</label>\\n        </div>\\n    </div>\\n</charts-test-harness>\\n\";","export default \"import { AfterContentInit, Component, OnDestroy } from \\\"@angular/core\\\";\\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \\\"@nova-ui/bits\\\";\\nimport {\\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, ISetDomainEventPayload, LineAccessors, LinearScale,\\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\\n} from \\\"@nova-ui/charts\\\";\\nimport moment from \\\"moment/moment\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { TimeFrameBarDataService } from \\\"./time-frame-bar-data.service\\\";\\n\\n@Component({\\n    selector: \\\"nui-time-frame-bar-test\\\",\\n    templateUrl: \\\"./time-frame-bar-test.component.html\\\",\\n    providers: [NoopDataSourceService, HistoryStorage],\\n})\\nexport class TimeFrameBarTestComponent implements AfterContentInit, OnDestroy {\\n    public fromDate = moment(\\\"2018-05-01 15:00:00\\\").subtract(2, \\\"days\\\");\\n    public toDate = moment(\\\"2018-05-01 15:00:00\\\");\\n\\n    public chart = new Chart(new XYGrid());\\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\\n\\n    public timeFrame: ITimeframe;\\n    public busy: boolean;\\n    public addDelay: boolean = true;\\n\\n    private xScale = new TimeScale(\\\"time-scale\\\");\\n    private yScale = new LinearScale();\\n    private accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\\n    private renderer = new LineRenderer();\\n    private filteringSubscription: Subscription;\\n\\n    private dataService = new TimeFrameBarDataService();\\n\\n    constructor(public history: HistoryStorage<ITimeframe>,\\n        private dataSourceService: NoopDataSourceService<ITimeframe>) {\\n    }\\n\\n    public ngAfterContentInit() {\\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\\n        this.chart.addPlugins(new ZoomPlugin());\\n\\n        this.filteringSubscription = this.setUpFiltering();\\n\\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\\n            const payload = <ISetDomainEventPayload>event.data;\\n            const newDomain = payload[this.xScale.id];\\n\\n            this.applyFilters(this.history.save({\\n                startDatetime: moment(newDomain[0]),\\n                endDatetime: moment(newDomain[1]),\\n                selectedPresetId: undefined,\\n            }));\\n        });\\n\\n        this.applyFilters(this.history.save({\\n            startDatetime: this.fromDate,\\n            endDatetime: this.toDate,\\n            selectedPresetId: undefined,\\n        }));\\n    }\\n\\n    public ngOnDestroy() {\\n        if (this.filteringSubscription) {\\n            this.filteringSubscription.unsubscribe();\\n        }\\n    }\\n\\n    public updateTimeFrame(value?: ITimeframe) {\\n        this.applyFilters(this.history.restart(value));\\n    }\\n\\n    public zoomUndo() {\\n        this.applyFilters(this.history.undo());\\n    }\\n\\n    private applyFilters(value: ITimeframe) {\\n        this.busy = true;\\n        this.timeFrame = value;\\n        this.xScale.fixDomain([value.startDatetime.toDate(), value.endDatetime.toDate()]);\\n        this.chart.updateDimensions();\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    private setUpFiltering(): any {\\n        this.dataSourceService.registerComponent({\\n            timeframe: {\\n                componentInstance: {\\n                    getFilters: () => <IFilter<ITimeframe>>({\\n                        type: \\\"ITimeframe\\\",\\n                        value: this.timeFrame,\\n                    }),\\n                },\\n            },\\n        });\\n\\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\\n            const start = data.timeframe.value.startDatetime;\\n            const end = data.timeframe.value.endDatetime;\\n            this.dataService.getChartData(start, end, this.addDelay ? 1000 : 0).subscribe((series) => {\\n                this.chartAssist.update(Object.keys(series).map((key: string) => ({\\n                    id: key,\\n                    name: key,\\n                    data: series[key],\\n                    accessors: this.accessors,\\n                    renderer: this.renderer,\\n                    scales: { x: this.xScale, y: this.yScale },\\n                })));\\n                this.busy = false;\\n            });\\n\\n        });\\n    }\\n}\\n\\n\";"],"sourceRoot":"webpack:///"}