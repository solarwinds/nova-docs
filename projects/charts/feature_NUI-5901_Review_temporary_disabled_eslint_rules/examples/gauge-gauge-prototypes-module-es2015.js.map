{"version":3,"sources":["./examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.ts","./examples/components/demo/development/gauge/gauge-test-page.component.less","./examples/components/demo/development/gauge/gauge-test-page.component.html","./examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.less","./examples/components/demo/development/gauge/gauge-test-page.component.ts","./examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.less","./examples/components/demo/development/gauge/horizontal/linear-gauge-horizontal-prototype.component.html","./examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.html","./examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.ts","./examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.html","./examples/components/demo/development/gauge/gauge-prototypes.module.ts","./examples/components/demo/development/gauge/vertical/linear-gauge-vertical-prototype.component.ts","./examples/components/demo/development/gauge/donut/donut-gauge-prototype.component.less"],"names":[],"mappings":"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","file":"gauge-gauge-prototypes-module-es2015.js","sourcesContent":["import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-prototype.component.less\"],\n})\nexport class LinearGaugeHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public flipLabels = false;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeHorizontalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.flipLabels && !changes.flipLabels.firstChange)) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            if (changes.thickness) {\n                gridConfig.dimension.height(this.thickness);\n            }\n            if (changes.flipLabels) {\n                this.labelsPlugin.config.flipLabels = this.flipLabels;\n                // reset the margins to accommodate the label direction change\n                gridConfig.dimension.margin = {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                };\n            }\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.labelsPlugin = new LinearGaugeLabelsPlugin({ flipLabels: this.flipLabels });\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}ms`, this.seriesSet);\n\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".testing-region {\\n  height: 500px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLXRlc3QtcGFnZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSiIsImZpbGUiOiJnYXVnZS10ZXN0LXBhZ2UuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGVzdGluZy1yZWdpb24ge1xuICAgIGhlaWdodDogNTAwcHg7XG59XG4iXX0= */\";","export default \"<charts-test-harness>\\n    <div class=\\\"testing-region d-flex align-items-center justify-content-around\\\">\\n        <donut-gauge-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [size]=\\\"donutSize\\\" [annularGrowth]=\\\"annularGrowth\\\" [annularWidth]=\\\"thickness\\\"></donut-gauge-prototype>\\n        <linear-gauge-vertical-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [thickness]=\\\"thickness\\\" [flipLabels]=\\\"flipLabels\\\"></linear-gauge-vertical-prototype>\\n        <linear-gauge-horizontal-prototype [gaugeConfig]=\\\"gaugeConfig\\\" [thickness]=\\\"thickness\\\" [flipLabels]=\\\"flipLabels\\\"></linear-gauge-horizontal-prototype>\\n    </div>\\n\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"valueInput\\\">\\n            Value\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [ngModel]=\\\"value\\\"\\n                            (ngModelChange)=\\\"onValueChange($event)\\\"\\n                            [minValue]=\\\"0\\\"\\n                            [maxValue]=\\\"maxValue\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"valueInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"thicknessInput\\\">\\n            Thickness\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [(ngModel)]=\\\"thickness\\\"\\n                            [minValue]=\\\"0\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"thicknessInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <nui-form-field caption=\\\"Donut Annular Growth\\\"\\n                        hint=\\\"Set to zero to have the donut obey the manual thickness setting\\\"\\n                        [showOptionalText]=\\\"false\\\">\\n            <nui-textbox-number type=\\\"number\\\"\\n                                [(ngModel)]=\\\"annularGrowth\\\"\\n                                [minValue]=\\\"0\\\"\\n                                [step]=\\\"0.01\\\"\\n                                customBoxWidth=\\\"75px\\\"></nui-textbox-number>\\n        </nui-form-field>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"donutSizeInput\\\">\\n            Donut Size\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n                            [(ngModel)]=\\\"donutSize\\\"\\n                            [minValue]=\\\"0\\\"\\n                            [step]=\\\"25\\\"\\n                            customBoxWidth=\\\"75px\\\"\\n                            name=\\\"donutSizeInput\\\"></nui-textbox-number>\\n    </div>\\n</charts-test-harness>\\n<div class=\\\"ml-3\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <input id=\\\"reversed\\\"\\n               class=\\\"mb-2\\\"\\n               type=\\\"checkbox\\\"\\n               [ngModel]=\\\"reversed\\\"\\n               (ngModelChange)=\\\"onReverseChange($event)\\\" />\\n        <label class=\\\"px-3\\\" for=\\\"reversed\\\">Reversed</label>\\n    </div>\\n</div>\\n<div class=\\\"ml-3\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <input id=\\\"flip-labels\\\"\\n               class=\\\"mb-2\\\"\\n               type=\\\"checkbox\\\"\\n               [(ngModel)]=\\\"flipLabels\\\" />\\n        <label class=\\\"px-3\\\" for=\\\"flip-labels\\\">Flip Labels</label>\\n    </div>\\n</div>\\n\";","export default \".chart {\\n  width: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMjVweDtcbn1cbiJdfQ== */\";","import { Component } from \"@angular/core\";\nimport { DataAccessor, DEFAULT_RADIAL_RENDERER_CONFIG, GaugeUtil, IGaugeConfig, StandardLinearGaugeThickness } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n    styleUrls: [\"./gauge-test-page.component.less\"],\n})\nexport class GaugeTestPageComponent {\n    public value = 95;\n    public maxValue = 200;\n    public annularGrowth = DEFAULT_RADIAL_RENDERER_CONFIG.annularGrowth;\n    public thickness = StandardLinearGaugeThickness.Large;\n    public donutSize = 200;\n    public thresholds: number[] = [100, 150];\n    public reversed = false;\n    public flipLabels = false;\n    public gaugeConfig: IGaugeConfig;\n\n    private reversedColorAccessor: DataAccessor<any, any> | undefined;\n\n    constructor() {\n        // this.thresholds = new Array(200).fill(null).map((e, i) => i);\n        // this.thresholds = [50, 75, 100, 125, 150, 175, 200];\n        this.reversedColorAccessor = GaugeUtil.createReversedQuantityThresholdColorAccessor(this.thresholds);\n\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onReverseChange(reversed: boolean) {\n        this.reversed = reversed;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    public onValueChange(value: number) {\n        this.value = value;\n        this.gaugeConfig = this.getGaugeConfig();\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: this.maxValue,\n            thresholds: this.thresholds,\n            quantityColorAccessor: this.reversed ? this.reversedColorAccessor : undefined,\n            enableThresholdMarkers: true,\n        };\n    }\n}\n","export default \".chart {\\n  height: 225px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMjVweDtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{gaugeConfig.value | number:'1.0-0'}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    IRadialRendererConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-prototype\",\n    templateUrl: \"./donut-gauge-prototype.component.html\",\n    styleUrls: [\"./donut-gauge-prototype.component.less\"],\n})\nexport class DonutGaugePrototypeComponent implements OnChanges, OnInit {\n    @Input() public size: number;\n    @Input() public annularGrowth: number;\n    @Input() public annularWidth: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugePrototypeComponent>) {\n        if ((changes.size && !changes.size.firstChange) ||\n            (changes.annularWidth && !changes.annularWidth.firstChange) ||\n            (changes.annularGrowth && !changes.annularGrowth.firstChange)) {\n            this.updateDonutSize();\n            this.updateAnnularAttributes();\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = radialGrid();\n        grid.config().dimension.autoHeight = false;\n        grid.config().dimension.autoWidth = false;\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        const labelConfig: IGaugeLabelsPluginConfig = {\n            clearance: { top: 40, right: 40, bottom: 40, left: 40 },\n        };\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin(labelConfig));\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}ms`, this.seriesSet);\n\n        this.updateDonutSize();\n        this.updateAnnularAttributes();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateDonutSize() {\n        const gridDimensions = this.chartAssist.chart.getGrid().config().dimension;\n        gridDimensions.height(this.size);\n        gridDimensions.width(this.size);\n    }\n\n    private updateAnnularAttributes() {\n        this.seriesSet.forEach(series => {\n            const rendererConfig = (series.renderer.config as IRadialRendererConfig);\n            // increase the max thickness from 30 for testing purposes\n            rendererConfig.maxThickness = 20000;\n            rendererConfig.annularGrowth = this.annularGrowth;\n            rendererConfig.annularWidth = this.annularWidth;\n        });\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiFormFieldModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { DonutGaugePrototypeComponent } from \"./donut/donut-gauge-prototype.component\";\nimport { GaugeTestPageComponent } from \"./gauge-test-page.component\";\nimport { LinearGaugeHorizontalPrototypeComponent } from \"./horizontal/linear-gauge-horizontal-prototype.component\";\nimport { LinearGaugeVerticalPrototypeComponent } from \"./vertical/linear-gauge-vertical-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        LinearGaugeHorizontalPrototypeComponent,\n        LinearGaugeVerticalPrototypeComponent,\n        DonutGaugePrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeLabelsPluginConfig,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-prototype\",\n    templateUrl: \"./linear-gauge-vertical-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-prototype.component.less\"],\n})\nexport class LinearGaugeVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public thickness: number;\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public flipLabels = false;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n    private labelsPlugin: LinearGaugeLabelsPlugin;\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeVerticalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.flipLabels && !changes.flipLabels.firstChange)) {\n            const gridConfig = this.chartAssist.chart.getGrid().config();\n            if (changes.thickness) {\n                gridConfig.dimension.width(this.thickness);\n            }\n            if (changes.flipLabels) {\n                this.labelsPlugin.config.flipLabels = this.flipLabels;\n                // reset the margins to accommodate the label direction change\n                gridConfig.dimension.margin = {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0,\n                };\n            }\n            this.chartAssist.chart.updateDimensions();\n        }\n\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        const labelConfig: IGaugeLabelsPluginConfig = {\n            flipLabels: this.flipLabels,\n            // extra clearance for the longer labels generated by the formatter\n            clearance: {\n                top: 0,\n                right: 40,\n                bottom: 0,\n                left: 40,\n            },\n        };\n        this.labelsPlugin = new LinearGaugeLabelsPlugin(labelConfig);\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.seriesSet = GaugeUtil.setThresholdLabelFormatter((d: string) => `${d}ms`, this.seriesSet);\n\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";"],"sourceRoot":"webpack:///"}