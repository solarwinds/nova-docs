{"version":3,"sources":["./examples/components/demo/chart-types/gauge/donut-with-content/donut-gauge-with-content-example.component.ts","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?b693","./examples/components/demo/chart-types/gauge/donut-basic/donut-gauge-basic-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.less?f69f","./examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.ts","./examples/components/demo/chart-types/gauge/chart-docs-gauge.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut-with-content/donut-gauge-with-content-example.component.less?e8bf","./examples/components/demo/chart-types/gauge/visual-test/gauge-visual-test.component.ts","./examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut-basic/donut-gauge-basic-example.component.less?f251","webpack:///./examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.less?e390","./examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.ts","./examples/components/demo/chart-types/gauge/donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.less?07ce","webpack:///./examples/components/demo/chart-types/gauge/donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.less?aba5","./examples/components/demo/chart-types/gauge/chart-docs-gauge.module.ts"],"names":[],"mappings":"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","file":"gauge-chart-docs-gauge-module-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-content-example\",\n    templateUrl: \"./donut-gauge-with-content-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-content-example.component.less\"],\n})\nexport class DonutGaugeWithContentExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 178;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the plugin for the inner content\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: GaugeUtil.createStandardThresholdConfigs(100, 158),\n        };\n    }\n}\n","var map = {\n\t\"./chart-docs-gauge.component.html\": \"ZWN/\",\n\t\"./chart-docs-gauge.component.ts\": \"2DII\",\n\t\"./chart-docs-gauge.module.ts\": \"ZDgL\",\n\t\"./donut-basic/donut-gauge-basic-example.component.html\": \"R/Os\",\n\t\"./donut-basic/donut-gauge-basic-example.component.less\": \"ZVh5\",\n\t\"./donut-basic/donut-gauge-basic-example.component.ts\": \"qaJP\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.html\": \"2Th4\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.less\": \"MnH5\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.ts\": \"4fWi\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.html\": \"yMj0\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.less\": \"3me9\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.ts\": \"k4Bf\",\n\t\"./visual-test/donut/donut-gauge-tester.component.html\": \"3Isn\",\n\t\"./visual-test/donut/donut-gauge-tester.component.less\": \"WISq\",\n\t\"./visual-test/donut/donut-gauge-tester.component.ts\": \"wITR\",\n\t\"./visual-test/gauge-visual-test.component.html\": \"m1aH\",\n\t\"./visual-test/gauge-visual-test.component.ts\": \"d56P\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.html\": \"CqTf\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.less\": \"QoLo\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.ts\": \"Nchi\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.html\": \"OzOS\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.less\": \"rphd\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.ts\": \"WxU7\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"AVdE\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-basic-example\",\n    templateUrl: \"./donut-gauge-basic-example.component.html\",\n    styleUrls: [\"./donut-gauge-basic-example.component.less\"],\n})\nexport class DonutGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n        };\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-tester\",\n    templateUrl: \"./vertical-gauge-tester.component.html\",\n    styleUrls: [\"./vertical-gauge-tester.component.less\"],\n})\nexport class VerticalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<VerticalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n        this.chartAssist.chart.addPlugin(new LinearGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-chart-docs-gauge\",\n    templateUrl: \"./chart-docs-gauge.component.html\",\n})\nexport class ChartDocsGaugeComponent {\n}\n","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n.content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY29udGVudC1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFESjtBQUlBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLHNDQUFBO0FBRkoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jb250ZW50LWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuXG4uY29udGVudC1sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogdmFyKC0tbnVpLWNvbG9yLXRleHQtc2Vjb25kYXJ5KTtcbn1cbiJdfQ== */\";","import { Component } from \"@angular/core\";\nimport { GaugeUtil, IGaugeConfig, IGaugeThresholdConfigs, StandardGaugeThresholdId } from \"@nova-ui/charts\";\nimport cloneDeep from \"lodash/cloneDeep\"\n\n@Component({\n    selector: \"gauge-visual-test\",\n    templateUrl: \"./gauge-visual-test.component.html\",\n})\nexport class GaugeVisualTestComponent {\n    public warningEnabled = true;\n    public gaugeConfigs = [this.getGaugeConfig(42), this.getGaugeConfig(130), this.getGaugeConfig(178)];\n\n    public getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: GaugeUtil.createStandardThresholdConfigs(100, 158),\n        };\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfigs = this.gaugeConfigs.map(c => {\n            const config = cloneDeep(c);\n            (config.thresholds as IGaugeThresholdConfigs)[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n            return config;\n        });\n    }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-tester\",\n    templateUrl: \"./horizontal-gauge-tester.component.html\",\n    styleUrls: [\"./horizontal-gauge-tester.component.less\"],\n})\nexport class HorizontalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<HorizontalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n        this.chartAssist.chart.addPlugin(new LinearGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".chart {\\n  height: 200px;\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuIl19 */\";","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESiIsImZpbGUiOiJ2ZXJ0aWNhbC1nYXVnZS10ZXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-tester\",\n    templateUrl: \"./donut-gauge-tester.component.html\",\n    styleUrls: [\"./donut-gauge-tester.component.less\"],\n})\nexport class DonutGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public size = 250;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-markers-example\",\n    templateUrl: \"./donut-gauge-with-threshold-markers-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-markers-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdMarkersExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        // Assembling the series set\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n\n            // Enabling the thresholds\n            thresholds: GaugeUtil.createStandardThresholdConfigs(100, 158),\n\n            // ** Optional color accessor override **\n            // quantityColorAccessor: (data: any, i: number, series: number[], dataSeries: IDataSeries<IAccessors>) => {\n            //     if (this.gaugeConfig?.thresholds && this.gaugeConfig.thresholds[1] <= data.value) {\n            //         return \"purple\";\n            //     }\n            //     if (this.gaugeConfig?.thresholds && this.gaugeConfig.thresholds[0] <= data.value) {\n            //         return \"pink\";\n            //     }\n            //     return \"green\";\n            // },\n        };\n    }\n}\n","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQURKIiwiZmlsZSI6Imhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLW1hcmtlcnMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC10aHJlc2hvbGQtbWFya2Vycy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXJ0IHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbn1cbiJdfQ== */\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiCommonModule, NuiDocsModule, NuiFormFieldModule, NuiIconModule, NuiMessageModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { ChartDocsGaugeComponent } from \"./chart-docs-gauge.component\";\nimport { GaugeVisualTestComponent } from \"./visual-test/gauge-visual-test.component\";\nimport { HorizontalGaugeTesterComponent } from \"./visual-test/horizontal/horizontal-gauge-tester.component\";\nimport { DonutGaugeTesterComponent } from \"./visual-test/donut/donut-gauge-tester.component\";\nimport { VerticalGaugeTesterComponent } from \"./visual-test/vertical/vertical-gauge-tester.component\";\nimport { DonutGaugeBasicExampleComponent } from \"./donut-basic/donut-gauge-basic-example.component\";\nimport { DonutGaugeWithContentExampleComponent } from \"./donut-with-content/donut-gauge-with-content-example.component\";\nimport { DonutGaugeWithThresholdMarkersExampleComponent } from \"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsGaugeComponent,\n        data: {\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"visual-test\",\n        component: GaugeVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-basic\",\n        component: DonutGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-threshold-markers\",\n        component: DonutGaugeWithThresholdMarkersExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-content\",\n        component: DonutGaugeWithContentExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsGaugeComponent,\n        GaugeVisualTestComponent,\n        HorizontalGaugeTesterComponent,\n        DonutGaugeTesterComponent,\n        DonutGaugeBasicExampleComponent,\n        DonutGaugeWithContentExampleComponent,\n        DonutGaugeWithThresholdMarkersExampleComponent,\n        VerticalGaugeTesterComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        FormsModule,\n        NuiChartsModule,\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiIconModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsGaugeModule {\n}\n"],"sourceRoot":"webpack:///"}