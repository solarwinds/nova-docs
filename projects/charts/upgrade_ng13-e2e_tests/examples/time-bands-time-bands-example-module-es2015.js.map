{"version":3,"sources":["./examples/components/demo/development/time-bands/time-bands-example.module.ts","./examples/components/demo/development/time-bands/line-time-series/line-time-series-test.component.html","./examples/components/demo/development/time-bands/line-time-series/line-time-series-test.component.ts"],"names":[],"mappings":"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","file":"time-bands-time-bands-example-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { LineTimeSeriesTestComponent } from \"./line-time-series/line-time-series-test.component\";\n\nconst collectionRoutes: Routes = [\n    {\n        path: \"line\",\n        component: LineTimeSeriesTestComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        LineTimeSeriesTestComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        NuiChartsModule,\n        RouterModule.forChild(collectionRoutes),\n    ],\n})\nexport class TimeBandsExampleModule {\n}\n","export default \"<nui-chart class=\\\"d-flex\\\" [chart]=\\\"chart\\\"></nui-chart>\\n\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    barAccessors, BarRenderer, Chart, ChartPalette, CHART_PALETTE_CS1, LineAccessors, LinearScale, LineRenderer, Scales, TimeIntervalScale, XYGrid, ZoomPlugin,\n} from \"@nova-ui/charts\";\nimport moment, { duration } from \"moment/moment\";\n\nconst format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n@Component({\n    selector: \"nui-line-time-series-test\",\n    templateUrl: \"./line-time-series-test.component.html\",\n})\nexport class LineTimeSeriesTestComponent implements OnInit {\n\n    // XYGrid is used for rendering the axes\n    public chart = new Chart(new XYGrid());\n    public palette = new ChartPalette(CHART_PALETTE_CS1);\n\n    public ngOnInit() {\n        this.chart.addPlugin(new ZoomPlugin());\n\n        // In case of a line chart, the scale definitions are flexible.\n        // This example demonstrates a scenario with time on the X scale and a numeric value on the Y scale.\n        const scales: Scales = {\n            x: new TimeIntervalScale(duration(5, \"minutes\"))\n                .fixDomain([\n                    moment(\"2016-12-25T14:30:00Z\", format).toDate(),\n                    moment(\"2016-12-25T18:00:00Z\", format).toDate(),\n                ]),\n            y: new LinearScale(),\n        };\n        const lines = this.getLines(scales);\n        const bars = this.getBars(scales);\n\n        this.chart.update([...lines, ...bars]);\n    }\n\n    private getLines(scales: Scales) {\n        // The line renderer will make the chart look like a line chart.\n        const renderer = new LineRenderer();\n        const accessors = new LineAccessors();\n        accessors.series.color = (seriesId, series) => this.palette.standardColors.get(series.name);\n\n        return [\n            {\n                id: \"series-1\",\n                name: \"Series 1\",\n                data: [\n                    { x: moment(\"2016-12-25T15:00:00Z\", format).toDate(), y: 30 },\n                    { x: moment(\"2016-12-25T15:21:00Z\", format).toDate(), y: 95 },\n                    { x: moment(\"2016-12-25T15:44:00Z\", format).toDate(), y: 15 },\n                    { x: moment(\"2016-12-25T16:00:00Z\", format).toDate(), y: 60 },\n                    { x: moment(\"2016-12-25T17:30:00Z\", format).toDate(), y: 35 },\n                ],\n            },\n            {\n                id: \"series-2\",\n                name: \"Series 2\",\n                data: [\n                    { x: moment(\"2016-12-25T15:00:00Z\", format).toDate(), y: 60 },\n                    { x: moment(\"2016-12-25T15:10:00Z\", format).toDate(), y: 40 },\n                    { x: moment(\"2016-12-25T15:45:00Z\", format).toDate(), y: 70 },\n                    { x: moment(\"2016-12-25T16:15:00Z\", format).toDate(), y: 45 },\n                    { x: moment(\"2016-12-25T17:20:00Z\", format).toDate(), y: 90 },\n                ],\n            },\n        ].map(s => ({\n            ...s,\n            scales,\n            renderer,\n            accessors,\n        }));\n    }\n\n    private getBars(scales: Scales) {\n        // The line renderer will make the chart look like a line chart.\n        const renderer = new BarRenderer();\n        const accessors = barAccessors(undefined, this.palette.backgroundColors);\n        accessors.data.start = (d) => d.value / 2;\n        accessors.data.end = (d) => d.value * 1.5;\n\n        return [\n            {\n                id: \"bars-1\",\n                name: \"Series 1\",\n                data: [\n                    { category: moment(\"2016-12-25T15:00:00Z\", format).toDate(), value: 30 },\n                    { category: moment(\"2016-12-25T15:20:00Z\", format).toDate(), value: 95 },\n                    { category: moment(\"2016-12-25T15:40:00Z\", format).toDate(), value: 15 },\n                    { category: moment(\"2016-12-25T16:00:00Z\", format).toDate(), value: 60 },\n                    { category: moment(\"2016-12-25T17:30:00Z\", format).toDate(), value: 35 },\n                ],\n            },\n            {\n                id: \"bars-2\",\n                name: \"Series 2\",\n                data: [\n                    { category: moment(\"2016-12-25T15:00:00Z\", format).toDate(), value: 60 },\n                    { category: moment(\"2016-12-25T15:10:00Z\", format).toDate(), value: 40 },\n                    { category: moment(\"2016-12-25T15:45:00Z\", format).toDate(), value: 70 },\n                    { category: moment(\"2016-12-25T16:15:00Z\", format).toDate(), value: 45 },\n                    { category: moment(\"2016-12-25T17:20:00Z\", format).toDate(), value: 90 },\n                ],\n            },\n        ].map(s => ({\n            ...s,\n            scales,\n            renderer,\n            accessors,\n        }));\n    }\n}\n"],"sourceRoot":"webpack:///"}