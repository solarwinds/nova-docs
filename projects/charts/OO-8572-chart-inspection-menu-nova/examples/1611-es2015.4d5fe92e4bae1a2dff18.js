(self.webpackChunk_nova_ui_charts=self.webpackChunk_nova_ui_charts||[]).push([[1611],{13025:function(e,t,n){var i={"./chart-docs-time-frame-bar.component.html":47688,"./chart-docs-time-frame-bar.component.ts":19147,"./chart-docs-time-frame-bar.module.ts":32757,"./time-frame-bar-basic/time-frame-bar-basic.example.component.html":77460,"./time-frame-bar-basic/time-frame-bar-basic.example.component.ts":60883,"./time-frame-bar-test/time-frame-bar-data.service.ts":34988,"./time-frame-bar-test/time-frame-bar-test.component.html":5473,"./time-frame-bar-test/time-frame-bar-test.component.ts":38192,"components/demo/time-frame-bar/chart-docs-time-frame-bar.component.html":47688,"components/demo/time-frame-bar/chart-docs-time-frame-bar.component.ts":19147,"components/demo/time-frame-bar/chart-docs-time-frame-bar.module.ts":32757,"components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.html":77460,"components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts":60883,"components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-data.service.ts":34988,"components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.html":5473,"components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts":38192};function r(e){var t=a(e);return n(t)}function a(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=a,e.exports=r,r.id=13025},81611:function(e,t,n){"use strict";n.r(t),n.d(t,{ChartDocsTimeFrameBarModule:function(){return E}});var i=n(66266),r=n(28425),a=n(91021),s=n(58490),o=n(33018),c=n(16738),m=n.n(c),l=n(13458),d=n(46743),u=n(38583),h=n(83063),p=n(87373),f=n(73943);function S(e,t){if(1&e){const e=o.EpF();o.TgZ(0,"nui-legend-series",11),o.NdJ("mouseenter",function(){const t=o.CHM(e).$implicit;return o.oxw().chartAssist.emphasizeSeries(t.id)})("isSelectedChange",function(t){const n=o.CHM(e).$implicit;return o.oxw().chartAssist.toggleSeries(n.id,t)}),o.TgZ(1,"nui-rich-legend-tile",12),o._UZ(2,"nui-chart-marker",13),o.qZA(),o.qZA()}if(2&e){const e=t.$implicit,n=o.oxw();o.Q6J("descriptionPrimary",e.name)("seriesRenderState",null==n.chartAssist.renderStatesIndex[e.id]?null:n.chartAssist.renderStatesIndex[e.id].state)("isSelected",!n.chartAssist.isSeriesHidden(e.id)),o.xp6(1),o.Q6J("value",n.chartAssist.getHighlightedValue(e,"y"))("backgroundColor",n.chartAssist.palette.standardColors.get(e.id))("color",n.chartAssist.palette.textColors.get(e.id)),o.xp6(1),o.Q6J("marker",n.chartAssist.markers.get(e.id))("color",n.chartAssist.palette.standardColors.get(e.id))}}let g=(()=>{class e{constructor(e,t){this.history=e,this.dataSourceService=t,this.series={"Tex-lab-aus-2621":[18,27,35,33,26,50,36,47,58,66,65,50,40,31,42,62,57,99,75,55,73,69,77,57,61,68,82,81,78,67],"Cz-lab-brn-02":[41,50,56,40,44,35,27,42,38,23,20,13,29,42,84,93,71,60,54,79,64,49,48,59,76,63,52,84,89,80]},this.fromDate=m()("2018-05-01 15:00:00").subtract(5.2,"days"),this.toDate=m()("2019-01-01 15:00:00"),this.chart=new a.kL2(new a.Be5),this.chartAssist=new a.doR(this.chart),this.xScale=new a.FBd("time-scale"),this.yScale=new a.f$s,this.seriesSet=[]}ngOnInit(){const e=new a.qxh(this.chartAssist.palette.standardColors,this.chartAssist.markers),t=new a.Med;this.yScale.domainCalculator=(0,a._OB)([0,100]),this.seriesSet=Object.keys(this.series).map(n=>({id:n,name:n,data:T(this.fromDate,this.toDate,this.series[n]),accessors:e,renderer:t,scales:{x:this.xScale,y:this.yScale}})),this.timeFrame=this.history.save({startDatetime:this.fromDate,endDatetime:this.toDate,selectedPresetId:void 0}),this.chart.addPlugins(new a.Rbc),this.chart.getEventBus().getStream(a.bdF).subscribe(e=>{const t=e.data[this.xScale.id];this.timeFrame=this.history.save({startDatetime:m()(t[0]),endDatetime:m()(t[1]),selectedPresetId:void 0}),this.dataSourceService.applyFilters()}),this.filteringSubscription=this.setUpFiltering(),this.dataSourceService.applyFilters()}ngOnDestroy(){this.filteringSubscription&&this.filteringSubscription.unsubscribe()}updateTimeFrame(e){this.timeFrame=this.history.restart(e),this.dataSourceService.applyFilters()}zoomUndo(){this.timeFrame=this.history.undo(),this.dataSourceService.applyFilters()}zoomReset(e){this.timeFrame=this.history.restart(e),this.dataSourceService.applyFilters()}setUpFiltering(){return this.dataSourceService.registerComponent({timeframe:{componentInstance:{getFilters:()=>({type:"ITimeframe",value:this.timeFrame})}}}),this.dataSourceService.outputsSubject.subscribe(e=>{this.xScale.fixDomain([e.timeframe.value.startDatetime.toDate(),e.timeframe.value.endDatetime.toDate()]),this.chartAssist.update(this.seriesSet)})}}return e.\u0275fac=function(t){return new(t||e)(o.Y36(r.vpR),o.Y36(r.B3L))},e.\u0275cmp=o.Xpm({type:e,selectors:[["nui-time-frame-bar-example"]],features:[o._Bn([r.B3L,r.vpR])],decls:15,vars:12,consts:function(){let e;return e=$localize`:␟a8a8afdb3773c92f866263dd8ceabcc3d92682fb␟8471193138456330657:Average CPU load (%)`,[[3,"timeFrame","historyIndex","minDate","maxDate","timeFrameChange","undo","clear"],["icon","calendar",1,"pr-3"],["timeFrameSelection",""],[1,"nui-chart-layout","p-3"],[1,"axis-label-left","nui-text-small"],e,[1,"chart"],[1,"d-flex","w-100","h-100",3,"chart"],[1,"legend"],["seriesUnitLabel","%",3,"active","interactive","mouseleave"],[3,"descriptionPrimary","seriesRenderState","isSelected","mouseenter","isSelectedChange",4,"ngFor","ngForOf","ngForTrackBy"],[3,"descriptionPrimary","seriesRenderState","isSelected","mouseenter","isSelectedChange"],[3,"value","backgroundColor","color"],["rightEdge","",3,"marker","color"]]},template:function(e,t){1&e&&(o.TgZ(0,"nui-time-frame-bar",0),o.NdJ("timeFrameChange",function(e){return t.updateTimeFrame(e)})("undo",function(){return t.zoomUndo()})("clear",function(){return t.zoomReset()}),o._UZ(1,"nui-icon",1),o._uU(2),o.ALo(3,"timeFrame"),o.TgZ(4,"nui-quick-picker",2),o._UZ(5,"nui-time-frame-picker"),o.qZA(),o.qZA(),o.TgZ(6,"div",3),o.TgZ(7,"div",4),o.TgZ(8,"strong"),o.SDv(9,5),o.qZA(),o.qZA(),o.TgZ(10,"div",6),o._UZ(11,"nui-chart",7),o.qZA(),o.TgZ(12,"div",8),o.TgZ(13,"nui-legend",9),o.NdJ("mouseleave",function(){return t.chartAssist.resetVisibleSeries()}),o.YNc(14,S,3,8,"nui-legend-series",10),o.qZA(),o.qZA(),o.qZA()),2&e&&(o.Q6J("timeFrame",t.timeFrame)("historyIndex",t.history.index)("minDate",t.fromDate)("maxDate",t.toDate),o.xp6(2),o.hij(" ",o.lcZ(3,10,t.timeFrame)," "),o.xp6(9),o.Q6J("chart",t.chart),o.xp6(2),o.Q6J("active",t.chartAssist.isLegendActive)("interactive",!0),o.xp6(1),o.Q6J("ngForOf",t.chartAssist.legendSeriesSet)("ngForTrackBy",t.chartAssist.seriesTrackByFn))},directives:[r.y0H,r.oJW,r.mtp,r.xlZ,l.x,d.F,u.sg,h.k,p.w,f.s],pipes:[r.aEp],encapsulation:2}),e})();function T(e,t,n){const i=n.length;if(!e||!t||0===i)return[];const r=i>1?t.diff(e)/(i-1):0;return n.map((t,n)=>({x:e.clone().add(m().duration(n*r)),y:t}))}let b=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=o.Xpm({type:e,selectors:[["nui-chart-docs-time-frame-bar"]],decls:6,vars:0,consts:[["filenamePrefix","time-frame-bar-basic","exampleTitle","Time Frame Bar"]],template:function(e,t){1&e&&(o.TgZ(0,"h1"),o._uU(1,"Time Frame Bar"),o.qZA(),o.TgZ(2,"p"),o._uU(3," This example shows the current way of implementing a chart with zooming capability and a time frame bar. We don't provide components that would encapsulate this logic, so it needs to be implemented from scratch like this. It takes advantage of the filtering session implementation to connect the filtering components on the page.\n"),o.qZA(),o.TgZ(4,"nui-example-wrapper",0),o._UZ(5,"nui-time-frame-bar-example"),o.qZA())},directives:[r.hD2,g],encapsulation:2}),e})();var A=n(25917),I=n(71289),y=(()=>{return(e=y||(y={}))[e.Poll=5]="Poll",e[e.Hour=60]="Hour",y;var e})();class v{constructor(){this.factors={day:[42,7,63,33,10,16,57,16,88,44,35,85,46,73,29,35,51,52,100,51,40,87,42,90,75,90,70,16,4,43,18,63,28,15,86,81,48,86,91,89,15,89,66,35,65,18,59,75,69,64,55,67,60,76,29,81,87,73,10,19,29,83,16,72,80,43,28,53,38,24,88,81,14,68,80,44,72,56,89,83,6,1,1,11,66,39,42,81,31,48,11,76,41,60,40,15,75,33,90,80,37,40,39,58,69,31,61,80,85,57,38,3,45,36,71,66,36,58,82,70,90,78,33,72,98,36,32,61,44,13,22,90,66,87,55,21,63,70,41,61,19,42,65,79,17,14,85,69,79,77,99,86,5,31,94,2,37,54,79,32,63,83,64,52,59,35,18,45,58,23,58,99,61,60,78,95,63,35,27,93,46,86,51,80,73,6,66,72,96,7,90,94,3,66,1,38,30,11,58,91,84,100,90,70,51,77,56,53,49,42,84,10,76,11,66,41,38,68,24,84,89,72,74,54,29,18,36,13,17,18,82,14,50,10,47,12,1,4,63,59,62,78,83,5,25,8,59,59,28,56,35,33,31,37,5,67,34,93,25,66,69,64,23,69,60,24,26,81,88,66,80,45,91,68,83,8,83,43,96,85,8,47,67,14,64,26,96,45],year:[64,70,41,96,74,38,38,79,77,24,98,78,22,90,7,42,95,76,92,86,13,5,80,6,9,90,40,94,66,12,28,7,76,74,23,79,82,9,9,84,59,92,63,15,25,18,83,35,46,14,22,84,34,17,9,25,34,89,48,80,76,38,60,43,41,88,35,32,62,80,76,64,41,49,23,61,27,56,3,88,37,24,15,88,85,18,41,74,81,13,40,10,39,30,45,21,32,46,54,8,28,19,74,87,36,43,74,15,58,24,98,14,49,96,51,83,4,4,13,72,42,62,26,80,85,46,74,60,14,5,97,16,90,84,52,10,18,26,8,49,71,34,87,32,15,46,23,10,86,7,18,51,31,72,20,43,10,91,74,51,86,89,32,79,94,5,41,16,79,66,84,24,74,78,69,85,46,57,92,92,3,14,5,12,63,1,6,37,85,79,18,88,42,8,25,94,87,7,52,16,35,43,65,63,46,38,98,55,100,14,45,50,49,90,98,47,20,83,84,84,58,79,100,19,75,94,34,5,94,29,96,80,46,33,73,82,58,68,98,100,10,46,96,87,96,5,64,53,5,7,19,65,91,78,59,14,19,12,15,92,8,15,19,99,26,25,45,29,39,1,61,74,88,27,43,1,93,75,91,97,38,39,24,94,29,18,88,56,62,7,88,13,34,21,20,41,90,95,2,17,26,4,44,70,18,65,75,62,18,46,18,73,76,95,2,30,31,77,77,80,23,51,48,42,78,65,78,56,37,46,96,72,49,48,8,45,89,42,87,28,42,53,94,73,57,30,75,53,77,62,9,71,9,48,97,92,91,24,44,83,8,86,41,6,21,45],century:[85,83,87,82,77,65,67,72,75,76,82,87,91,93,94,90,84,89,86,88,86,85,82,84,81,77,77,77,80,97,18,6,25,85,90,25,72,99,61,79,62,7,50,41,40,6,60,65,1,98,90,31,57,74,50,57,68,20,12,16,33,1,32,53,76,57,89,33,48,28,89,35,15,3,33,77,10,1,36,4,36,88,26,66,50,3,66,37,77,70,9,40,20,14,55,96,88,14,9,54]},this.seriesValueFunctions={"Tex-lab-aus-2621":([e,t,n])=>e+.1*(t-30)+(n-50),"Cz-lab-brn-02":([e,t,n])=>e+.01*t*(t-50)+20*Math.cos(.02*n*Math.PI)}}getChartData(e,t,n=0){const i=this.seriesValueFunctions,r={},a=m().duration(t.diff(e)).asHours()>12?y.Hour:y.Poll;for(const s of Object.keys(i))r[s]=this.getData(e,t,i[s],a);return(0,A.of)(r).pipe((0,I.g)(n))}getData(e,t,n,i=y.Poll){const r=e.minutes()%i,a=e.clone().subtract(r,"minutes").seconds(0),s=i-t.minutes()%i,o=t.clone().add(s,"minutes").seconds(0),c=Math.ceil(m().duration(o.diff(a)).asMinutes()/i),l=[];for(let m=0;m<c;m++){const e=this.factors.day[Math.ceil((60*a.hours()+a.minutes())/5)],t=this.factors.year[a.dayOfYear()],r=this.factors.century[a.year()%100];l.push({x:a.clone(),y:n([r,t,e])}),a.add(i,"minutes")}return l}}var D=n(94317);function O(e,t){if(1&e){const e=o.EpF();o.TgZ(0,"nui-legend-series",16),o.NdJ("mouseenter",function(){const t=o.CHM(e).$implicit;return o.oxw().chartAssist.emphasizeSeries(t.id)})("isSelectedChange",function(t){const n=o.CHM(e).$implicit;return o.oxw().chartAssist.toggleSeries(n.id,t)}),o.TgZ(1,"nui-rich-legend-tile",17),o._UZ(2,"nui-chart-marker",18),o.qZA(),o.qZA()}if(2&e){const e=t.$implicit,n=o.oxw();o.Q6J("descriptionPrimary",e.name)("seriesRenderState",null==n.chartAssist.renderStatesIndex[e.id]?null:n.chartAssist.renderStatesIndex[e.id].state)("isSelected",!n.chartAssist.isSeriesHidden(e.id)),o.xp6(1),o.Q6J("value",n.chartAssist.getHighlightedValue(e,"y"))("backgroundColor",n.chartAssist.palette.standardColors.get(e.id))("color",n.chartAssist.palette.textColors.get(e.id)),o.xp6(1),o.Q6J("marker",n.chartAssist.markers.get(e.id))("color",n.chartAssist.palette.standardColors.get(e.id))}}const F=[{path:"",component:b,data:{srlc:{stage:r.We9.beta},showThemeSwitcher:!0}},{path:"example",component:g,data:{srlc:{hideIndicator:!0}}},{path:"test",component:(()=>{class e{constructor(e,t){this.history=e,this.dataSourceService=t,this.fromDate=m()("2018-05-01 15:00:00").subtract(2,"days"),this.toDate=m()("2018-05-01 15:00:00"),this.chart=new a.kL2(new a.Be5),this.chartAssist=new a.doR(this.chart),this.addDelay=!0,this.xScale=new a.FBd("time-scale"),this.yScale=new a.f$s,this.accessors=new a.qxh(this.chartAssist.palette.standardColors,this.chartAssist.markers),this.renderer=new a.Med,this.dataService=new v}ngAfterContentInit(){this.yScale.domainCalculator=(0,a._OB)([0,100]),this.chart.addPlugins(new a.Rbc),this.filteringSubscription=this.setUpFiltering(),this.chart.getEventBus().getStream(a.bdF).subscribe(e=>{const t=e.data[this.xScale.id];this.applyFilters(this.history.save({startDatetime:m()(t[0]),endDatetime:m()(t[1]),selectedPresetId:void 0}))}),this.applyFilters(this.history.save({startDatetime:this.fromDate,endDatetime:this.toDate,selectedPresetId:void 0}))}ngOnDestroy(){this.filteringSubscription&&this.filteringSubscription.unsubscribe()}updateTimeFrame(e){this.applyFilters(this.history.restart(e))}zoomUndo(){this.applyFilters(this.history.undo())}applyFilters(e){this.busy=!0,this.timeFrame=e,this.xScale.fixDomain([e.startDatetime.toDate(),e.endDatetime.toDate()]),this.chart.updateDimensions(),this.dataSourceService.applyFilters()}setUpFiltering(){return this.dataSourceService.registerComponent({timeframe:{componentInstance:{getFilters:()=>({type:"ITimeframe",value:this.timeFrame})}}}),this.dataSourceService.outputsSubject.subscribe(e=>{this.dataService.getChartData(e.timeframe.value.startDatetime,e.timeframe.value.endDatetime,this.addDelay?1e3:0).subscribe(e=>{this.chartAssist.update(Object.keys(e).map(t=>({id:t,name:t,data:e[t],accessors:this.accessors,renderer:this.renderer,scales:{x:this.xScale,y:this.yScale}}))),this.busy=!1})})}}return e.\u0275fac=function(t){return new(t||e)(o.Y36(r.vpR),o.Y36(r.B3L))},e.\u0275cmp=o.Xpm({type:e,selectors:[["nui-time-frame-bar-test"]],features:[o._Bn([r.B3L,r.vpR])],decls:22,vars:14,consts:function(){let e;return e=$localize`:␟a8a8afdb3773c92f866263dd8ceabcc3d92682fb␟8471193138456330657:Average CPU load (%)`,[[1,"nui-time-frame-bar-test"],["nui-busy","",1,"m-5",2,"border","1px solid lightgrey",3,"busy"],[1,"time-frame-bar",2,"display","block","border-bottom","1px solid lightgrey",3,"timeFrame","historyIndex","minDate","maxDate","timeFrameChange","undo","clear"],["icon","calendar",1,"pr-3"],["timeFrameSelection",""],[1,"nui-chart-layout","p-3"],[1,"axis-label-left","nui-text-small"],e,[1,"chart"],[1,"w-100",3,"chart"],[1,"legend"],["seriesUnitLabel","%",3,"active","interactive","mouseleave"],[3,"descriptionPrimary","seriesRenderState","isSelected","mouseenter","isSelectedChange",4,"ngFor","ngForOf","ngForTrackBy"],[1,"p-5"],["id","delay","name","delay","type","checkbox",3,"checked","change"],["for","delay",1,"pl-2"],[3,"descriptionPrimary","seriesRenderState","isSelected","mouseenter","isSelectedChange"],[3,"value","backgroundColor","color"],["rightEdge","",3,"marker","color"]]},template:function(e,t){1&e&&(o.TgZ(0,"charts-test-harness"),o.TgZ(1,"div",0),o.TgZ(2,"div",1),o.TgZ(3,"nui-time-frame-bar",2),o.NdJ("timeFrameChange",function(e){return t.updateTimeFrame(e)})("undo",function(){return t.zoomUndo()})("clear",function(){return t.updateTimeFrame()}),o._UZ(4,"nui-icon",3),o._uU(5),o.ALo(6,"timeFrame"),o.TgZ(7,"nui-quick-picker",4),o._UZ(8,"nui-time-frame-picker"),o.qZA(),o.qZA(),o.TgZ(9,"div",5),o.TgZ(10,"div",6),o.TgZ(11,"strong"),o.SDv(12,7),o.qZA(),o.qZA(),o.TgZ(13,"div",8),o._UZ(14,"nui-chart",9),o.qZA(),o.TgZ(15,"div",10),o.TgZ(16,"nui-legend",11),o.NdJ("mouseleave",function(){return t.chartAssist.resetVisibleSeries()}),o.YNc(17,O,3,8,"nui-legend-series",12),o.qZA(),o.qZA(),o.qZA(),o.qZA(),o.TgZ(18,"div",13),o.TgZ(19,"input",14),o.NdJ("change",function(){return t.addDelay=!t.addDelay}),o.qZA(),o.TgZ(20,"label",15),o._uU(21,"Add delay to server requests"),o.qZA(),o.qZA(),o.qZA(),o.qZA()),2&e&&(o.xp6(2),o.Q6J("busy",t.busy),o.xp6(1),o.Q6J("timeFrame",t.timeFrame)("historyIndex",t.history.index)("minDate",t.fromDate)("maxDate",t.toDate),o.xp6(2),o.hij(" ",o.lcZ(6,12,t.timeFrame)," "),o.xp6(9),o.Q6J("chart",t.chart),o.xp6(2),o.Q6J("active",t.chartAssist.isLegendActive)("interactive",!0),o.xp6(1),o.Q6J("ngForOf",t.chartAssist.legendSeriesSet)("ngForTrackBy",t.chartAssist.seriesTrackByFn),o.xp6(2),o.Q6J("checked",t.addDelay))},directives:[D.m,r.ERI,r.y0H,r.oJW,r.mtp,r.xlZ,l.x,d.F,u.sg,h.k,p.w,f.s],pipes:[r.aEp],encapsulation:2}),e})(),data:{srlc:{hideIndicator:!0}}}];let E=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=o.oAB({type:e}),e.\u0275inj=o.cJS({providers:[{provide:r.V3$,useFactory:()=>n(13025)}],imports:[[s.l,r.Az_,r.Gsl,a.$y4,r.lam,r.F__,r.vvu,r.Ts3,r.DmU,r.S6I,r.JhO,r.l70,r.VSN,i.Bz.forChild(F)]]}),e})()},47688:function(e,t,n){"use strict";n.r(t),t.default='<h1>Time Frame Bar</h1>\n\n<p>\n    This example shows the current way of implementing a chart with zooming\n    capability and a time frame bar. We don\'t provide components that would\n    encapsulate this logic, so it needs to be implemented from scratch like\n    this. It takes advantage of the filtering session implementation to connect\n    the filtering components on the page.\n</p>\n\n<nui-example-wrapper\n    filenamePrefix="time-frame-bar-basic"\n    exampleTitle="Time Frame Bar"\n>\n    <nui-time-frame-bar-example></nui-time-frame-bar-example>\n</nui-example-wrapper>\n'},19147:function(e,t,n){"use strict";n.r(t),t.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-chart-docs-time-frame-bar",\n    templateUrl: "./chart-docs-time-frame-bar.component.html",\n})\nexport class ChartDocsTimeFrameBarComponent {}\n'},32757:function(e,t,n){"use strict";n.r(t),t.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCommonModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiLayoutModule,\n    NuiPopoverModule,\n    NuiTimeFrameBarModule,\n    NuiTimeFramePickerModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from "@nova-ui/bits";\nimport { NuiChartsModule } from "@nova-ui/charts";\n\nimport { DemoCommonModule } from "../common/demo-common.module";\nimport { ChartDocsTimeFrameBarComponent } from "./chart-docs-time-frame-bar.component";\nimport { TimeFrameBarBasicExampleComponent } from "./time-frame-bar-basic/time-frame-bar-basic.example.component";\nimport { TimeFrameBarTestComponent } from "./time-frame-bar-test/time-frame-bar-test.component";\n\nconst exampleRoutes: Routes = [\n    {\n        path: "",\n        component: ChartDocsTimeFrameBarComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "example",\n        component: TimeFrameBarBasicExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: TimeFrameBarTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsTimeFrameBarComponent,\n        TimeFrameBarBasicExampleComponent,\n        TimeFrameBarTestComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        NuiButtonModule,\n        NuiBusyModule,\n        NuiChartsModule,\n        NuiCommonModule,\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiIconModule,\n        NuiLayoutModule,\n        NuiPopoverModule,\n        NuiTimeFramePickerModule,\n        NuiTimeFrameBarModule,\n        NuiTooltipModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n})\nexport class ChartDocsTimeFrameBarModule {}\n'},77460:function(e,t,n){"use strict";n.r(t),t.default='<nui-time-frame-bar\n    [timeFrame]="timeFrame"\n    (timeFrameChange)="updateTimeFrame($event)"\n    [historyIndex]="history.index"\n    [minDate]="fromDate"\n    [maxDate]="toDate"\n    (undo)="zoomUndo()"\n    (clear)="zoomReset()"\n>\n    <nui-icon icon="calendar" class="pr-3"></nui-icon>\n    {{ timeFrame | timeFrame }}\n    <nui-quick-picker timeFrameSelection>\n        <nui-time-frame-picker></nui-time-frame-picker>\n    </nui-quick-picker>\n</nui-time-frame-bar>\n\n<div class="nui-chart-layout p-3">\n    <div class="axis-label-left nui-text-small">\n        <strong i18n>Average CPU load (%)</strong>\n    </div>\n    <div class="chart">\n        <nui-chart class="d-flex w-100 h-100" [chart]="chart"></nui-chart>\n    </div>\n    <div class="legend">\n        <nui-legend\n            seriesUnitLabel="%"\n            [active]="chartAssist.isLegendActive"\n            [interactive]="true"\n            (mouseleave)="chartAssist.resetVisibleSeries()"\n        >\n            <nui-legend-series\n                *ngFor="\n                    let legendSeries of chartAssist.legendSeriesSet;\n                    trackBy: chartAssist.seriesTrackByFn\n                "\n                [descriptionPrimary]="legendSeries[\'name\']"\n                (mouseenter)="chartAssist.emphasizeSeries(legendSeries.id)"\n                [seriesRenderState]="\n                    chartAssist.renderStatesIndex[legendSeries.id]?.state\n                "\n                [isSelected]="!chartAssist.isSeriesHidden(legendSeries.id)"\n                (isSelectedChange)="\n                    chartAssist.toggleSeries(legendSeries.id, $event)\n                "\n            >\n                <nui-rich-legend-tile\n                    [value]="chartAssist.getHighlightedValue(legendSeries, \'y\')"\n                    [backgroundColor]="\n                        chartAssist.palette.standardColors.get(legendSeries.id)\n                    "\n                    [color]="\n                        chartAssist.palette.textColors.get(legendSeries.id)\n                    "\n                >\n                    <nui-chart-marker\n                        rightEdge\n                        [marker]="chartAssist.markers.get(legendSeries.id)"\n                        [color]="\n                            chartAssist.palette.standardColors.get(\n                                legendSeries.id\n                            )\n                        "\n                    >\n                    </nui-chart-marker>\n                </nui-rich-legend-tile>\n            </nui-legend-series>\n        </nui-legend>\n    </div>\n</div>\n'},60883:function(e,t,n){"use strict";n.r(t),t.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, OnInit } from "@angular/core";\nimport moment, { Moment } from "moment/moment";\nimport { Subscription } from "rxjs";\n\nimport {\n    HistoryStorage,\n    IFilter,\n    IFilteringOutputs,\n    ITimeframe,\n    NoopDataSourceService,\n} from "@nova-ui/bits";\nimport {\n    Chart,\n    ChartAssist,\n    getAutomaticDomainWithIncludedInterval,\n    IAccessors,\n    IChartAssistSeries,\n    ISetDomainEventPayload,\n    LineAccessors,\n    LinearScale,\n    LineRenderer,\n    SET_DOMAIN_EVENT,\n    TimeScale,\n    XYGrid,\n    ZoomPlugin,\n} from "@nova-ui/charts";\n\n@Component({\n    selector: "nui-time-frame-bar-example",\n    templateUrl: "./time-frame-bar-basic.example.component.html",\n    providers: [NoopDataSourceService, HistoryStorage],\n})\nexport class TimeFrameBarBasicExampleComponent implements OnInit, OnDestroy {\n    private series = getData();\n    public fromDate = moment("2018-05-01 15:00:00").subtract(5.2, "days");\n    public toDate = moment("2019-01-01 15:00:00");\n\n    public chart = new Chart(new XYGrid());\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\n\n    public timeFrame: ITimeframe;\n\n    private xScale = new TimeScale("time-scale");\n    private yScale = new LinearScale();\n    private seriesSet: IChartAssistSeries<IAccessors>[] = [];\n    private filteringSubscription: Subscription;\n\n    constructor(\n        public history: HistoryStorage<ITimeframe>,\n        private dataSourceService: NoopDataSourceService<ITimeframe>\n    ) {}\n\n    public ngOnInit() {\n        const accessors = new LineAccessors(\n            this.chartAssist.palette.standardColors,\n            this.chartAssist.markers\n        );\n        const renderer = new LineRenderer();\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([\n            0, 100,\n        ]);\n        this.seriesSet = Object.keys(this.series).map((key: string) => ({\n            id: key,\n            name: key,\n            data: buildTimeSeriesFromData(\n                this.fromDate,\n                this.toDate,\n                this.series[key]\n            ),\n            accessors,\n            renderer,\n            scales: { x: this.xScale, y: this.yScale },\n        }));\n\n        this.timeFrame = this.history.save({\n            startDatetime: this.fromDate,\n            endDatetime: this.toDate,\n            selectedPresetId: undefined,\n        });\n\n        this.chart.addPlugins(new ZoomPlugin());\n\n        // Update Time Frame Bar when chart got zoomed\n        this.chart\n            .getEventBus()\n            .getStream(SET_DOMAIN_EVENT)\n            .subscribe((event) => {\n                const payload = <ISetDomainEventPayload>event.data;\n                const newDomain = payload[this.xScale.id];\n                this.timeFrame = this.history.save({\n                    startDatetime: moment(newDomain[0]),\n                    endDatetime: moment(newDomain[1]),\n                    selectedPresetId: undefined,\n                });\n\n                void this.dataSourceService.applyFilters();\n            });\n\n        this.filteringSubscription = this.setUpFiltering();\n\n        void this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        if (this.filteringSubscription) {\n            this.filteringSubscription.unsubscribe();\n        }\n    }\n\n    public updateTimeFrame(value: ITimeframe) {\n        this.timeFrame = this.history.restart(value);\n        void this.dataSourceService.applyFilters();\n    }\n\n    // Use the history storage to go back one time frame\n    public zoomUndo() {\n        this.timeFrame = this.history.undo();\n        void this.dataSourceService.applyFilters();\n    }\n\n    // Reset the history storage and save a new initial value if provided\n    // Otherwise preserve the previous one\n    public zoomReset(value?: ITimeframe) {\n        this.timeFrame = this.history.restart(value);\n        void this.dataSourceService.applyFilters();\n    }\n\n    private setUpFiltering(): any {\n        this.dataSourceService.registerComponent({\n            timeframe: {\n                componentInstance: {\n                    getFilters: () =>\n                        <IFilter<ITimeframe>>{\n                            type: "ITimeframe",\n                            value: this.timeFrame,\n                        },\n                },\n            },\n        });\n\n        return this.dataSourceService.outputsSubject.subscribe(\n            (data: IFilteringOutputs) => {\n                this.xScale.fixDomain([\n                    data.timeframe.value.startDatetime.toDate(),\n                    data.timeframe.value.endDatetime.toDate(),\n                ]);\n                this.chartAssist.update(this.seriesSet);\n            }\n        );\n    }\n}\n\n/* Chart data */\nfunction getData(): Record<string, number[]> {\n    return {\n        "Tex-lab-aus-2621": [\n            18, 27, 35, 33, 26, 50, 36, 47, 58, 66, 65, 50, 40, 31, 42, 62, 57,\n            99, 75, 55, 73, 69, 77, 57, 61, 68, 82, 81, 78, 67,\n        ],\n        "Cz-lab-brn-02": [\n            41, 50, 56, 40, 44, 35, 27, 42, 38, 23, 20, 13, 29, 42, 84, 93, 71,\n            60, 54, 79, 64, 49, 48, 59, 76, 63, 52, 84, 89, 80,\n        ],\n    };\n}\n\nfunction buildTimeSeriesFromData(\n    from: Moment,\n    to: Moment,\n    data: number[]\n): { x: Moment; y: number }[] {\n    const count = data.length;\n    if (!from || !to || count === 0) {\n        return [];\n    }\n\n    const interval = count > 1 ? to.diff(from) / (count - 1) : 0;\n    return data.map((y, i) => ({\n        x: from.clone().add(moment.duration(i * interval)),\n        y,\n    }));\n}\n'},34988:function(e,t,n){"use strict";n.r(t),t.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport moment, { Moment } from "moment/moment";\nimport { Observable, of } from "rxjs";\nimport { delay } from "rxjs/operators";\n\nenum DataInterval {\n    Poll = 5,\n    Hour = 60,\n    // Day = 24 * 60,\n    // Week = 7 * 24 * 60,\n}\n\nexport class TimeFrameBarDataService {\n    /* eslint-disable max-len */\n    private factors = {\n        day: [\n            42, 7, 63, 33, 10, 16, 57, 16, 88, 44, 35, 85, 46, 73, 29, 35, 51,\n            52, 100, 51, 40, 87, 42, 90, 75, 90, 70, 16, 4, 43, 18, 63, 28, 15,\n            86, 81, 48, 86, 91, 89, 15, 89, 66, 35, 65, 18, 59, 75, 69, 64, 55,\n            67, 60, 76, 29, 81, 87, 73, 10, 19, 29, 83, 16, 72, 80, 43, 28, 53,\n            38, 24, 88, 81, 14, 68, 80, 44, 72, 56, 89, 83, 6, 1, 1, 11, 66, 39,\n            42, 81, 31, 48, 11, 76, 41, 60, 40, 15, 75, 33, 90, 80, 37, 40, 39,\n            58, 69, 31, 61, 80, 85, 57, 38, 3, 45, 36, 71, 66, 36, 58, 82, 70,\n            90, 78, 33, 72, 98, 36, 32, 61, 44, 13, 22, 90, 66, 87, 55, 21, 63,\n            70, 41, 61, 19, 42, 65, 79, 17, 14, 85, 69, 79, 77, 99, 86, 5, 31,\n            94, 2, 37, 54, 79, 32, 63, 83, 64, 52, 59, 35, 18, 45, 58, 23, 58,\n            99, 61, 60, 78, 95, 63, 35, 27, 93, 46, 86, 51, 80, 73, 6, 66, 72,\n            96, 7, 90, 94, 3, 66, 1, 38, 30, 11, 58, 91, 84, 100, 90, 70, 51,\n            77, 56, 53, 49, 42, 84, 10, 76, 11, 66, 41, 38, 68, 24, 84, 89, 72,\n            74, 54, 29, 18, 36, 13, 17, 18, 82, 14, 50, 10, 47, 12, 1, 4, 63,\n            59, 62, 78, 83, 5, 25, 8, 59, 59, 28, 56, 35, 33, 31, 37, 5, 67, 34,\n            93, 25, 66, 69, 64, 23, 69, 60, 24, 26, 81, 88, 66, 80, 45, 91, 68,\n            83, 8, 83, 43, 96, 85, 8, 47, 67, 14, 64, 26, 96, 45,\n        ],\n        year: [\n            64, 70, 41, 96, 74, 38, 38, 79, 77, 24, 98, 78, 22, 90, 7, 42, 95,\n            76, 92, 86, 13, 5, 80, 6, 9, 90, 40, 94, 66, 12, 28, 7, 76, 74, 23,\n            79, 82, 9, 9, 84, 59, 92, 63, 15, 25, 18, 83, 35, 46, 14, 22, 84,\n            34, 17, 9, 25, 34, 89, 48, 80, 76, 38, 60, 43, 41, 88, 35, 32, 62,\n            80, 76, 64, 41, 49, 23, 61, 27, 56, 3, 88, 37, 24, 15, 88, 85, 18,\n            41, 74, 81, 13, 40, 10, 39, 30, 45, 21, 32, 46, 54, 8, 28, 19, 74,\n            87, 36, 43, 74, 15, 58, 24, 98, 14, 49, 96, 51, 83, 4, 4, 13, 72,\n            42, 62, 26, 80, 85, 46, 74, 60, 14, 5, 97, 16, 90, 84, 52, 10, 18,\n            26, 8, 49, 71, 34, 87, 32, 15, 46, 23, 10, 86, 7, 18, 51, 31, 72,\n            20, 43, 10, 91, 74, 51, 86, 89, 32, 79, 94, 5, 41, 16, 79, 66, 84,\n            24, 74, 78, 69, 85, 46, 57, 92, 92, 3, 14, 5, 12, 63, 1, 6, 37, 85,\n            79, 18, 88, 42, 8, 25, 94, 87, 7, 52, 16, 35, 43, 65, 63, 46, 38,\n            98, 55, 100, 14, 45, 50, 49, 90, 98, 47, 20, 83, 84, 84, 58, 79,\n            100, 19, 75, 94, 34, 5, 94, 29, 96, 80, 46, 33, 73, 82, 58, 68, 98,\n            100, 10, 46, 96, 87, 96, 5, 64, 53, 5, 7, 19, 65, 91, 78, 59, 14,\n            19, 12, 15, 92, 8, 15, 19, 99, 26, 25, 45, 29, 39, 1, 61, 74, 88,\n            27, 43, 1, 93, 75, 91, 97, 38, 39, 24, 94, 29, 18, 88, 56, 62, 7,\n            88, 13, 34, 21, 20, 41, 90, 95, 2, 17, 26, 4, 44, 70, 18, 65, 75,\n            62, 18, 46, 18, 73, 76, 95, 2, 30, 31, 77, 77, 80, 23, 51, 48, 42,\n            78, 65, 78, 56, 37, 46, 96, 72, 49, 48, 8, 45, 89, 42, 87, 28, 42,\n            53, 94, 73, 57, 30, 75, 53, 77, 62, 9, 71, 9, 48, 97, 92, 91, 24,\n            44, 83, 8, 86, 41, 6, 21, 45,\n        ],\n        century: [\n            85, 83, 87, 82, 77, 65, 67, 72, 75, 76, 82, 87, 91, 93, 94, 90, 84,\n            89, 86, 88, 86, 85, 82, 84, 81, 77, 77, 77, 80, 97, 18, 6, 25, 85,\n            90, 25, 72, 99, 61, 79, 62, 7, 50, 41, 40, 6, 60, 65, 1, 98, 90, 31,\n            57, 74, 50, 57, 68, 20, 12, 16, 33, 1, 32, 53, 76, 57, 89, 33, 48,\n            28, 89, 35, 15, 3, 33, 77, 10, 1, 36, 4, 36, 88, 26, 66, 50, 3, 66,\n            37, 77, 70, 9, 40, 20, 14, 55, 96, 88, 14, 9, 54,\n        ],\n    };\n    /* eslint-enable max-len */\n\n    /* Chart data */\n    private seriesValueFunctions: Record<\n        string,\n        (fs: [number, number, number]) => number\n    > = {\n        "Tex-lab-aus-2621": ([a, b, c]) => a + 0.1 * (b - 30) + (c - 50),\n        "Cz-lab-brn-02": ([a, b, c]) =>\n            a + 0.01 * b * (b - 50) + 20 * Math.cos(c * 0.02 * Math.PI),\n    };\n\n    public getChartData(\n        from: Moment,\n        to: Moment,\n        delayInterval: number = 0\n    ): Observable<Record<string, { x: Moment; y: number }[]>> {\n        const rules = this.seriesValueFunctions;\n        const results: Record<string, { x: moment.Moment; y: number }[]> = {};\n\n        const duration = moment.duration(to.diff(from));\n        const dataInterval =\n            duration.asHours() > 12 ? DataInterval.Hour : DataInterval.Poll;\n\n        for (const seriesId of Object.keys(rules)) {\n            results[seriesId] = this.getData(\n                from,\n                to,\n                rules[seriesId],\n                dataInterval\n            );\n        }\n\n        return of(results).pipe(delay(delayInterval));\n    }\n\n    private getData(\n        start: Moment,\n        end: Moment,\n        valueFn: (fs: [number, number, number]) => number,\n        interval: DataInterval = DataInterval.Poll\n    ): { x: moment.Moment; y: number }[] {\n        const startCorrector = start.minutes() % interval;\n        const currentDate = start\n            .clone()\n            .subtract(startCorrector, "minutes")\n            .seconds(0); // rounds to pollInterval\n        const endCorrector = interval - (end.minutes() % interval);\n        const endDate = end.clone().add(endCorrector, "minutes").seconds(0); // rounds to 5 minutes pollInterval\n        const count = Math.ceil(\n            moment.duration(endDate.diff(currentDate)).asMinutes() / interval\n        );\n        const results = [];\n\n        for (let i = 0; i < count; i++) {\n            const fDay =\n                this.factors.day[\n                    Math.ceil(\n                        (60 * currentDate.hours() + currentDate.minutes()) / 5\n                    )\n                ];\n            const fYear = this.factors.year[currentDate.dayOfYear()];\n            const fCentury = this.factors.century[currentDate.year() % 100];\n            results.push({\n                x: currentDate.clone(),\n                y: valueFn([fCentury, fYear, fDay]),\n            });\n            currentDate.add(interval, "minutes");\n        }\n\n        return results;\n    }\n}\n'},5473:function(e,t,n){"use strict";n.r(t),t.default='<charts-test-harness>\n    <div class="nui-time-frame-bar-test">\n        <div\n            class="m-5"\n            nui-busy\n            [busy]="busy"\n            style="border: 1px solid lightgrey"\n        >\n            <nui-time-frame-bar\n                [timeFrame]="timeFrame"\n                (timeFrameChange)="updateTimeFrame($event)"\n                [historyIndex]="history.index"\n                [minDate]="fromDate"\n                [maxDate]="toDate"\n                (undo)="zoomUndo()"\n                (clear)="updateTimeFrame()"\n                style="display: block; border-bottom: 1px solid lightgrey"\n                class="time-frame-bar"\n            >\n                <nui-icon icon="calendar" class="pr-3"></nui-icon>\n                {{ timeFrame | timeFrame }}\n                <nui-quick-picker timeFrameSelection>\n                    <nui-time-frame-picker></nui-time-frame-picker>\n                </nui-quick-picker>\n            </nui-time-frame-bar>\n            <div class="nui-chart-layout p-3">\n                <div class="axis-label-left nui-text-small">\n                    <strong i18n>Average CPU load (%)</strong>\n                </div>\n                <div class="chart">\n                    <nui-chart class="w-100" [chart]="chart"></nui-chart>\n                </div>\n                <div class="legend">\n                    <nui-legend\n                        seriesUnitLabel="%"\n                        [active]="chartAssist.isLegendActive"\n                        [interactive]="true"\n                        (mouseleave)="chartAssist.resetVisibleSeries()"\n                    >\n                        <nui-legend-series\n                            *ngFor="\n                                let legendSeries of chartAssist.legendSeriesSet;\n                                trackBy: chartAssist.seriesTrackByFn\n                            "\n                            [descriptionPrimary]="legendSeries[\'name\']"\n                            (mouseenter)="\n                                chartAssist.emphasizeSeries(legendSeries.id)\n                            "\n                            [seriesRenderState]="\n                                chartAssist.renderStatesIndex[legendSeries.id]\n                                    ?.state\n                            "\n                            [isSelected]="\n                                !chartAssist.isSeriesHidden(legendSeries.id)\n                            "\n                            (isSelectedChange)="\n                                chartAssist.toggleSeries(\n                                    legendSeries.id,\n                                    $event\n                                )\n                            "\n                        >\n                            <nui-rich-legend-tile\n                                [value]="\n                                    chartAssist.getHighlightedValue(\n                                        legendSeries,\n                                        \'y\'\n                                    )\n                                "\n                                [backgroundColor]="\n                                    chartAssist.palette.standardColors.get(\n                                        legendSeries.id\n                                    )\n                                "\n                                [color]="\n                                    chartAssist.palette.textColors.get(\n                                        legendSeries.id\n                                    )\n                                "\n                            >\n                                <nui-chart-marker\n                                    rightEdge\n                                    [marker]="\n                                        chartAssist.markers.get(legendSeries.id)\n                                    "\n                                    [color]="\n                                        chartAssist.palette.standardColors.get(\n                                            legendSeries.id\n                                        )\n                                    "\n                                >\n                                </nui-chart-marker>\n                            </nui-rich-legend-tile>\n                        </nui-legend-series>\n                    </nui-legend>\n                </div>\n            </div>\n        </div>\n        <div class="p-5">\n            <input\n                id="delay"\n                name="delay"\n                type="checkbox"\n                [checked]="addDelay"\n                (change)="addDelay = !addDelay"\n            />\n            <label for="delay" class="pl-2">Add delay to server requests</label>\n        </div>\n    </div>\n</charts-test-harness>\n'},38192:function(e,t,n){"use strict";n.r(t),t.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { AfterContentInit, Component, OnDestroy } from "@angular/core";\nimport moment from "moment/moment";\nimport { Subscription } from "rxjs";\n\nimport {\n    HistoryStorage,\n    IFilter,\n    IFilteringOutputs,\n    ITimeframe,\n    NoopDataSourceService,\n} from "@nova-ui/bits";\nimport {\n    Chart,\n    ChartAssist,\n    getAutomaticDomainWithIncludedInterval,\n    ISetDomainEventPayload,\n    LineAccessors,\n    LinearScale,\n    LineRenderer,\n    SET_DOMAIN_EVENT,\n    TimeScale,\n    XYGrid,\n    ZoomPlugin,\n} from "@nova-ui/charts";\n\nimport { TimeFrameBarDataService } from "./time-frame-bar-data.service";\n\n@Component({\n    selector: "nui-time-frame-bar-test",\n    templateUrl: "./time-frame-bar-test.component.html",\n    providers: [NoopDataSourceService, HistoryStorage],\n})\nexport class TimeFrameBarTestComponent implements AfterContentInit, OnDestroy {\n    public fromDate = moment("2018-05-01 15:00:00").subtract(2, "days");\n    public toDate = moment("2018-05-01 15:00:00");\n\n    public chart = new Chart(new XYGrid());\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\n\n    public timeFrame: ITimeframe;\n    public busy: boolean;\n    public addDelay: boolean = true;\n\n    private xScale = new TimeScale("time-scale");\n    private yScale = new LinearScale();\n    private accessors = new LineAccessors(\n        this.chartAssist.palette.standardColors,\n        this.chartAssist.markers\n    );\n    private renderer = new LineRenderer();\n    private filteringSubscription: Subscription;\n\n    private dataService = new TimeFrameBarDataService();\n\n    constructor(\n        public history: HistoryStorage<ITimeframe>,\n        private dataSourceService: NoopDataSourceService<ITimeframe>\n    ) {}\n\n    public ngAfterContentInit() {\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([\n            0, 100,\n        ]);\n        this.chart.addPlugins(new ZoomPlugin());\n\n        this.filteringSubscription = this.setUpFiltering();\n\n        this.chart\n            .getEventBus()\n            .getStream(SET_DOMAIN_EVENT)\n            .subscribe((event) => {\n                const payload = <ISetDomainEventPayload>event.data;\n                const newDomain = payload[this.xScale.id];\n\n                this.applyFilters(\n                    this.history.save({\n                        startDatetime: moment(newDomain[0]),\n                        endDatetime: moment(newDomain[1]),\n                        selectedPresetId: undefined,\n                    })\n                );\n            });\n\n        this.applyFilters(\n            this.history.save({\n                startDatetime: this.fromDate,\n                endDatetime: this.toDate,\n                selectedPresetId: undefined,\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        if (this.filteringSubscription) {\n            this.filteringSubscription.unsubscribe();\n        }\n    }\n\n    public updateTimeFrame(value?: ITimeframe) {\n        this.applyFilters(this.history.restart(value));\n    }\n\n    public zoomUndo() {\n        this.applyFilters(this.history.undo());\n    }\n\n    private applyFilters(value: ITimeframe) {\n        this.busy = true;\n        this.timeFrame = value;\n        this.xScale.fixDomain([\n            value.startDatetime.toDate(),\n            value.endDatetime.toDate(),\n        ]);\n        this.chart.updateDimensions();\n        void this.dataSourceService.applyFilters();\n    }\n\n    private setUpFiltering(): any {\n        this.dataSourceService.registerComponent({\n            timeframe: {\n                componentInstance: {\n                    getFilters: () =>\n                        <IFilter<ITimeframe>>{\n                            type: "ITimeframe",\n                            value: this.timeFrame,\n                        },\n                },\n            },\n        });\n\n        return this.dataSourceService.outputsSubject.subscribe(\n            (data: IFilteringOutputs) => {\n                const start = data.timeframe.value.startDatetime;\n                const end = data.timeframe.value.endDatetime;\n                this.dataService\n                    .getChartData(start, end, this.addDelay ? 1000 : 0)\n                    .subscribe((series) => {\n                        this.chartAssist.update(\n                            Object.keys(series).map((key: string) => ({\n                                id: key,\n                                name: key,\n                                data: series[key],\n                                accessors: this.accessors,\n                                renderer: this.renderer,\n                                scales: { x: this.xScale, y: this.yScale },\n                            }))\n                        );\n                        this.busy = false;\n                    });\n            }\n        );\n    }\n}\n'}}]);