{"version":3,"sources":["webpack:///examples/components/demo/chart-types/gauge/donut-with-content/donut-gauge-with-content-example.component.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?b693","webpack:///examples/components/demo/chart-types/gauge/donut-basic/donut-gauge-basic-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.less?62ae","webpack:///examples/components/demo/chart-types/gauge/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.less?fb6a","webpack:///examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/chart-docs-gauge.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-content/donut-gauge-with-content-example.component.less?dbd0","webpack:///examples/components/demo/chart-types/gauge/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.less?18dc","webpack:///examples/components/demo/chart-types/gauge/visual-test/gauge-visual-test.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-marker-toggling/donut-gauge-with-marker-toggling-example.component.less?9fd2","webpack:///examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-basic/donut-gauge-basic-example.component.less?a351","webpack:///examples/components/demo/chart-types/gauge/donut-with-marker-toggling/donut-gauge-with-marker-toggling-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.less?65a4","webpack:///examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.less?e589","webpack:///examples/components/demo/chart-types/gauge/donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.less?26ec","webpack:///examples/components/demo/chart-types/gauge/chart-docs-gauge.module.ts"],"names":["DonutGaugeWithContentExampleComponent","thresholds","createStandardThresholdsConfig","initialValue","gaugeConfig","getGaugeConfig","chartAssist","contentPlugin","chart","addPlugin","seriesSet","assembleSeriesSet","Donut","update","value","updateSeriesSet","max","selector","template","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","DonutGaugeBasicExampleComponent","VerticalGaugeTesterComponent","changes","firstChange","grid","Vertical","ChartDocsGaugeComponent","GaugeVisualTestComponent","warningEnabled","gaugeConfigs","enabled","c","config","definitions","Warning","HorizontalGaugeTesterComponent","Horizontal","DonutGaugeWithMarkerTogglingExampleComponent","markersEnabled","labelsPlugin","updateGauge","disableMarkers","disableThresholdLabels","DonutGaugeWithCustomThresholdLabelsExampleComponent","labelFormatter","d","DonutGaugeTesterComponent","size","DonutGaugeWithThresholdTogglingExampleComponent","criticalEnabled","Critical","DonutGaugeWithThresholdMarkersExampleComponent","reversed","lowThreshold","highThreshold","exampleRoutes","path","component","data","showThemeSwitcher","ChartDocsGaugeModule","declarations","imports","forChild","providers","provide","useFactory"],"mappings":"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","file":"gauge-chart-docs-gauge-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-content-example\",\n    templateUrl: \"./donut-gauge-with-content-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-content-example.component.less\"],\n})\nexport class DonutGaugeWithContentExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        const initialValue = 178;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the plugin for the donut inner content\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.gaugeConfig = this.getGaugeConfig(value);\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","var map = {\n\t\"./chart-docs-gauge.component.html\": \"ZWN/\",\n\t\"./chart-docs-gauge.component.ts\": \"2DII\",\n\t\"./chart-docs-gauge.module.ts\": \"ZDgL\",\n\t\"./donut-basic/donut-gauge-basic-example.component.html\": \"R/Os\",\n\t\"./donut-basic/donut-gauge-basic-example.component.less\": \"ZVh5\",\n\t\"./donut-basic/donut-gauge-basic-example.component.ts\": \"qaJP\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.html\": \"2Th4\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.less\": \"MnH5\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.ts\": \"4fWi\",\n\t\"./donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.html\": \"ib0S\",\n\t\"./donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.less\": \"8Jux\",\n\t\"./donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.ts\": \"QL48\",\n\t\"./donut-with-marker-toggling/donut-gauge-with-marker-toggling-example.component.html\": \"wf0O\",\n\t\"./donut-with-marker-toggling/donut-gauge-with-marker-toggling-example.component.less\": \"p49R\",\n\t\"./donut-with-marker-toggling/donut-gauge-with-marker-toggling-example.component.ts\": \"s484\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.html\": \"yMj0\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.less\": \"3me9\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.ts\": \"k4Bf\",\n\t\"./donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.html\": \"/Et5\",\n\t\"./donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.less\": \"xSwD\",\n\t\"./donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.ts\": \"ONZv\",\n\t\"./visual-test/donut/donut-gauge-tester.component.html\": \"3Isn\",\n\t\"./visual-test/donut/donut-gauge-tester.component.less\": \"WISq\",\n\t\"./visual-test/donut/donut-gauge-tester.component.ts\": \"wITR\",\n\t\"./visual-test/gauge-visual-test.component.html\": \"m1aH\",\n\t\"./visual-test/gauge-visual-test.component.ts\": \"d56P\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.html\": \"CqTf\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.less\": \"QoLo\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.ts\": \"Nchi\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.html\": \"OzOS\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.less\": \"rphd\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.ts\": \"WxU7\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"AVdE\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-basic-example\",\n    templateUrl: \"./donut-gauge-basic-example.component.html\",\n    styleUrls: [\"./donut-gauge-basic-example.component.less\"],\n})\nexport class DonutGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n        };\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY3VzdG9tLXRocmVzaG9sZC1sYWJlbHMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jdXN0b20tdGhyZXNob2xkLWxhYmVscy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXJ0IHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbn1cbiJdfQ== */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-tester\",\n    templateUrl: \"./vertical-gauge-tester.component.html\",\n    styleUrls: [\"./vertical-gauge-tester.component.less\"],\n})\nexport class VerticalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<VerticalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n        this.chartAssist.chart.addPlugin(new LinearGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-chart-docs-gauge\",\n    templateUrl: \"./chart-docs-gauge.component.html\",\n})\nexport class ChartDocsGaugeComponent {\n}\n","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n.content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY29udGVudC1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFESjtBQUlBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLHNDQUFBO0FBRkoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jb250ZW50LWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuXG4uY29udGVudC1sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogdmFyKC0tbnVpLWNvbG9yLXRleHQtc2Vjb25kYXJ5KTtcbn1cbiJdfQ== */\";","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLXRvZ2dsaW5nLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLXRvZ2dsaW5nLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuIl19 */\";","import { Component } from \"@angular/core\";\nimport { GaugeUtil, IGaugeConfig, GaugeThresholdDefs, StandardGaugeThresholdId } from \"@nova-ui/charts\";\nimport cloneDeep from \"lodash/cloneDeep\"\n\n@Component({\n    selector: \"gauge-visual-test\",\n    templateUrl: \"./gauge-visual-test.component.html\",\n})\nexport class GaugeVisualTestComponent {\n    public warningEnabled = true;\n    public gaugeConfigs = [this.getGaugeConfig(42), this.getGaugeConfig(130), this.getGaugeConfig(178)];\n\n    public getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: GaugeUtil.createStandardThresholdsConfig(100, 158),\n        };\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfigs = this.gaugeConfigs.map(c => {\n            const config = cloneDeep(c);\n            (config.thresholds?.definitions as GaugeThresholdDefs)[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n            return config;\n        });\n    }\n}\n","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtbWFya2VyLXRvZ2dsaW5nLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXdpdGgtbWFya2VyLXRvZ2dsaW5nLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuIl19 */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-tester\",\n    templateUrl: \"./horizontal-gauge-tester.component.html\",\n    styleUrls: [\"./horizontal-gauge-tester.component.less\"],\n})\nexport class HorizontalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<HorizontalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n        this.chartAssist.chart.addPlugin(new LinearGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".chart {\\n  height: 200px;\\n  width: 200px;\\n}\\n.value-input {\\n  margin-right: 40px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKO0FBRUE7RUFDSSxrQkFBQTtBQUFKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuXG4udmFsdWUtaW5wdXQge1xuICAgIG1hcmdpbi1yaWdodDogNDBweDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-marker-toggling-example\",\n    templateUrl: \"./donut-gauge-with-marker-toggling-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-marker-toggling-example.component.less\"],\n})\nexport class DonutGaugeWithMarkerTogglingExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 128;\n    public gaugeConfig: IGaugeConfig;\n    public markersEnabled = true;\n    public labelsPlugin = new DonutGaugeLabelsPlugin();\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the labels plugin\n        // Note: This plugin can be completely omitted if labels aren't needed for your use case.\n        this.chartAssist.chart.addPlugin(this.labelsPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onMarkersEnabledChange(enabled: boolean): void {\n        this.markersEnabled = enabled;\n\n        // Enabling or disabling the threshold markers\n        this.thresholds.disableMarkers = !this.markersEnabled;\n\n        // Enabling or disabling the threshold labels\n        // Note: In addition to toggling the label plugin's 'disableThresholdLabels' configuration property,\n        // the plugin can simply be omitted if labels aren't needed at all for your use case.\n        this.labelsPlugin.config.disableThresholdLabels = !this.markersEnabled;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-custom-threshold-labels-example\",\n    templateUrl: \"./donut-gauge-with-custom-threshold-labels-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-custom-threshold-labels-example.component.less\"],\n})\nexport class DonutGaugeWithCustomThresholdLabelsExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(50, 80);\n\n    public ngOnInit(): void {\n        const initialValue = 64;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.gaugeConfig = this.getGaugeConfig(value);\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n            thresholds: this.thresholds,\n\n            // Setting a custom label formatter\n            labelFormatter: (d: string) => `${d}%`,\n        };\n    }\n}\n","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESiIsImZpbGUiOiJ2ZXJ0aWNhbC1nYXVnZS10ZXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-tester\",\n    templateUrl: \"./donut-gauge-tester.component.html\",\n    styleUrls: [\"./donut-gauge-tester.component.less\"],\n})\nexport class DonutGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public size = 250;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    radial,\n    radialGrid,\n    StandardGaugeThresholdId,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-toggling-example\",\n    templateUrl: \"./donut-gauge-with-threshold-toggling-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-toggling-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdTogglingExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 128;\n    public gaugeConfig: IGaugeConfig;\n    public warningEnabled = true;\n    public criticalEnabled = true;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n\n        // Enabling or disabling the warning threshold\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n\n        this.updateGauge();\n    }\n\n    public onCriticalEnabledChange(enabled: boolean): void {\n        this.criticalEnabled = enabled;\n\n        // Enabling or disabling the critical threshold\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].enabled = this.criticalEnabled;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    radial,\n    radialGrid,\n    StandardGaugeThresholdId,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-markers-example\",\n    templateUrl: \"./donut-gauge-with-threshold-markers-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-markers-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdMarkersExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n    public value = 178;\n    public reversed = false;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private lowThreshold = 100;\n    private highThreshold = 158;\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(this.lowThreshold, this.highThreshold);\n\n    public ngOnInit(): void {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onReversedChange(reversed: boolean): void {\n        this.reversed = reversed;\n        this.thresholds.reversed = reversed;\n\n        // swap the values of the warning and critical thresholds\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].value = this.reversed ? this.highThreshold : this.lowThreshold;\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].value = this.reversed ? this.lowThreshold : this.highThreshold;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n\n            // Enabling the thresholds\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQURKIiwiZmlsZSI6Imhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLW1hcmtlcnMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC10aHJlc2hvbGQtbWFya2Vycy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXJ0IHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbn1cbiJdfQ== */\";","/* eslint-disable max-len */\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n} from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { ChartDocsGaugeComponent } from \"./chart-docs-gauge.component\";\nimport { GaugeVisualTestComponent } from \"./visual-test/gauge-visual-test.component\";\nimport { HorizontalGaugeTesterComponent } from \"./visual-test/horizontal/horizontal-gauge-tester.component\";\nimport { DonutGaugeTesterComponent } from \"./visual-test/donut/donut-gauge-tester.component\";\nimport { VerticalGaugeTesterComponent } from \"./visual-test/vertical/vertical-gauge-tester.component\";\nimport { DonutGaugeBasicExampleComponent } from \"./donut-basic/donut-gauge-basic-example.component\";\nimport { DonutGaugeWithContentExampleComponent } from \"./donut-with-content/donut-gauge-with-content-example.component\";\nimport { DonutGaugeWithThresholdMarkersExampleComponent } from \"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component\";\nimport { DonutGaugeWithThresholdTogglingExampleComponent } from \"./donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component\";\nimport { DonutGaugeWithCustomThresholdLabelsExampleComponent } from \"./donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component\";\nimport { DonutGaugeWithMarkerTogglingExampleComponent } from \"./donut-with-marker-toggling/donut-gauge-with-marker-toggling-example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsGaugeComponent,\n        data: {\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"visual-test\",\n        component: GaugeVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-basic\",\n        component: DonutGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-threshold-markers\",\n        component: DonutGaugeWithThresholdMarkersExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-content\",\n        component: DonutGaugeWithContentExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsGaugeComponent,\n        GaugeVisualTestComponent,\n        HorizontalGaugeTesterComponent,\n        DonutGaugeTesterComponent,\n        DonutGaugeBasicExampleComponent,\n        DonutGaugeWithContentExampleComponent,\n        DonutGaugeWithCustomThresholdLabelsExampleComponent,\n        DonutGaugeWithMarkerTogglingExampleComponent,\n        DonutGaugeWithThresholdMarkersExampleComponent,\n        DonutGaugeWithThresholdTogglingExampleComponent,\n        VerticalGaugeTesterComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        FormsModule,\n        NuiChartsModule,\n        NuiCheckboxModule,\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiIconModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsGaugeModule {\n}\n"]}