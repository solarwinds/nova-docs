{"version":3,"sources":["webpack:///./examples/components/demo/chart-types/gauge/linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment-example.component.less?1a78","./examples/components/demo/chart-types/gauge/donut/donut-basic/donut-gauge-basic-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.less?8540","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?b693","webpack:///./examples/components/demo/chart-types/gauge/linear/linear-with-thresholds/linear-gauge-with-thresholds-example.component.less?7153","./examples/components/demo/chart-types/gauge/donut/donut-with-thresholds/donut-gauge-with-thresholds-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-with-content/donut-gauge-with-content-example.component.less?91b1","webpack:///./examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.less?f69f","./examples/components/demo/chart-types/gauge/linear/vertical-basic/vertical-gauge-basic-example.component.ts","./examples/components/demo/chart-types/gauge/linear/linear-with-thresholds/linear-gauge-with-thresholds-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-basic/donut-gauge-basic-example.component.less?459f","./examples/components/demo/chart-types/gauge/linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment-example.component.ts","./examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.ts","./examples/components/demo/chart-types/gauge/donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.ts","./examples/components/demo/chart-types/gauge/chart-docs-gauge.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling-example.component.less?dbe6","./examples/components/demo/chart-types/gauge/visual-test/gauge-visual-test.component.ts","webpack:///./examples/components/demo/chart-types/gauge/linear/vertical-basic/vertical-gauge-basic-example.component.less?2e21","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-with-thresholds/donut-gauge-with-thresholds-example.component.less?8d44","./examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.ts","./examples/components/demo/chart-types/gauge/donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers-example.component.ts","./examples/components/demo/chart-types/gauge/donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.less?de84","./examples/components/demo/chart-types/gauge/donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.ts","./examples/components/demo/chart-types/gauge/donut/donut-with-content/donut-gauge-with-content-example.component.ts","webpack:///./examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.less?e390","webpack:///./examples/components/demo/chart-types/gauge/donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers-example.component.less?2f1e","./examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.ts","webpack:///./examples/components/demo/chart-types/gauge/linear/horizontal-basic/horizontal-gauge-basic-example.component.less?c9b6","webpack:///./examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.less?07ce","./examples/components/demo/chart-types/gauge/chart-docs-gauge.module.ts","./examples/components/demo/chart-types/gauge/linear/horizontal-basic/horizontal-gauge-basic-example.component.ts"],"names":[],"mappings":"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","file":"gauge-chart-docs-gauge-module-es2015.js","sourcesContent":["export default \".demo__inputs {\\n  margin-right: 50px;\\n}\\n.demo__charts {\\n  width: 255px;\\n}\\n.demo__vertical-chart {\\n  height: 200px;\\n}\\n.demo__horizontal-chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS10aGlja25lc3MtYWRqdXN0bWVudC1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSjtBQUVBO0VBQ0ksWUFBQTtBQUFKO0FBSUE7RUFDSSxhQUFBO0FBRko7QUFNQTtFQUNJLFlBQUE7QUFKSiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtdGhpY2tuZXNzLWFkanVzdG1lbnQtZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX19pbnB1dHMge1xuICAgIG1hcmdpbi1yaWdodDogNTBweDtcbn1cblxuLmRlbW9fX2NoYXJ0cyB7XG4gICAgd2lkdGg6IDI1NXB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSBoZWlnaHQgb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgdmVydGljYWwgbGVuZ3RoIG9mIHRoZSBnYXVnZVxuLmRlbW9fX3ZlcnRpY2FsLWNoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSB3aWR0aCBvbiB0aGUgY2hhcnQgZWxlbWVudCBkZXRlcm1pbmVzIHRoZSBob3Jpem9udGFsIGxlbmd0aCBvZiB0aGUgZ2F1Z2Vcbi5kZW1vX19ob3Jpem9udGFsLWNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-basic-example\",\n    templateUrl: \"./donut-gauge-basic-example.component.html\",\n    styleUrls: [\"./donut-gauge-basic-example.component.less\"],\n})\nexport class DonutGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart assist\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n\n            /**\n             * Optionally customize the default quantity color (defaults to StandardGaugeColor.Ok)\n             */\n\n            // defaultQuantityColor: \"var(--nui-color-semantic-ok)\",\n        };\n    }\n}\n","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLXRvZ2dsaW5nLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLXRvZ2dsaW5nLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtb19fY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuIl19 */\";","var map = {\n\t\"./chart-docs-gauge.component.html\": \"ZWN/\",\n\t\"./chart-docs-gauge.component.ts\": \"2DII\",\n\t\"./chart-docs-gauge.module.ts\": \"ZDgL\",\n\t\"./donut/donut-basic/donut-gauge-basic-example.component.html\": \"QUxe\",\n\t\"./donut/donut-basic/donut-gauge-basic-example.component.less\": \"z2tb\",\n\t\"./donut/donut-basic/donut-gauge-basic-example.component.ts\": \"mDnq\",\n\t\"./donut/donut-with-content/donut-gauge-with-content-example.component.html\": \"dXgp\",\n\t\"./donut/donut-with-content/donut-gauge-with-content-example.component.less\": \"91pg\",\n\t\"./donut/donut-with-content/donut-gauge-with-content-example.component.ts\": \"/sCd\",\n\t\"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.html\": \"G2WF\",\n\t\"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.less\": \"Yu0q\",\n\t\"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component.ts\": \"r3Ox\",\n\t\"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling-example.component.html\": \"TW+J\",\n\t\"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling-example.component.less\": \"MV1o\",\n\t\"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling-example.component.ts\": \"19lF\",\n\t\"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.html\": \"1oNZ\",\n\t\"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.less\": \"2ZQm\",\n\t\"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component.ts\": \"ZvUs\",\n\t\"./donut/donut-with-thresholds/donut-gauge-with-thresholds-example.component.html\": \"wSIz\",\n\t\"./donut/donut-with-thresholds/donut-gauge-with-thresholds-example.component.less\": \"i4Pe\",\n\t\"./donut/donut-with-thresholds/donut-gauge-with-thresholds-example.component.ts\": \"hSR7\",\n\t\"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers-example.component.html\": \"jp58\",\n\t\"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers-example.component.less\": \"J6rO\",\n\t\"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers-example.component.ts\": \"j5fe\",\n\t\"./linear/horizontal-basic/horizontal-gauge-basic-example.component.html\": \"0Cj1\",\n\t\"./linear/horizontal-basic/horizontal-gauge-basic-example.component.less\": \"IzSJ\",\n\t\"./linear/horizontal-basic/horizontal-gauge-basic-example.component.ts\": \"uxvK\",\n\t\"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment-example.component.html\": \"BDzF\",\n\t\"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment-example.component.less\": \"Xr13\",\n\t\"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment-example.component.ts\": \"jmb1\",\n\t\"./linear/linear-with-thresholds/linear-gauge-with-thresholds-example.component.html\": \"3dr6\",\n\t\"./linear/linear-with-thresholds/linear-gauge-with-thresholds-example.component.less\": \"bakv\",\n\t\"./linear/linear-with-thresholds/linear-gauge-with-thresholds-example.component.ts\": \"jRwM\",\n\t\"./linear/vertical-basic/vertical-gauge-basic-example.component.html\": \"aI42\",\n\t\"./linear/vertical-basic/vertical-gauge-basic-example.component.less\": \"6LbR\",\n\t\"./linear/vertical-basic/vertical-gauge-basic-example.component.ts\": \"S5Pj\",\n\t\"./visual-test/donut/donut-gauge-tester.component.html\": \"3Isn\",\n\t\"./visual-test/donut/donut-gauge-tester.component.less\": \"WISq\",\n\t\"./visual-test/donut/donut-gauge-tester.component.ts\": \"wITR\",\n\t\"./visual-test/gauge-visual-test.component.html\": \"m1aH\",\n\t\"./visual-test/gauge-visual-test.component.ts\": \"d56P\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.html\": \"CqTf\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.less\": \"QoLo\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.ts\": \"Nchi\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.html\": \"OzOS\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.less\": \"rphd\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.ts\": \"WxU7\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"AVdE\";","export default \".demo__value-input {\\n  margin-right: 50px;\\n}\\n.demo__vertical-chart {\\n  height: 200px;\\n}\\n.demo__horizontal-chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS13aXRoLXRocmVzaG9sZHMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7QUFHQTtFQUNJLGFBQUE7QUFESjtBQUtBO0VBQ0ksWUFBQTtBQUhKIiwiZmlsZSI6ImxpbmVhci1nYXVnZS13aXRoLXRocmVzaG9sZHMtZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX192YWx1ZS1pbnB1dCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSBoZWlnaHQgb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgdmVydGljYWwgbGVuZ3RoIG9mIHRoZSBnYXVnZVxuLmRlbW9fX3ZlcnRpY2FsLWNoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSB3aWR0aCBvbiB0aGUgY2hhcnQgZWxlbWVudCBkZXRlcm1pbmVzIHRoZSBob3Jpem9udGFsIGxlbmd0aCBvZiB0aGUgZ2F1Z2Vcbi5kZW1vX19ob3Jpem9udGFsLWNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    StandardGaugeThresholdId,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-thresholds-example\",\n    templateUrl: \"./donut-gauge-with-thresholds-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-thresholds-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdsExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n    public value = 178;\n    public reversed = false;\n\n    private thresholds: IGaugeThresholdsConfig;\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    private lowThreshold = 100;\n    private highThreshold = 158;\n\n    public ngOnInit(): void {\n        // Generating a standard set of thresholds with warning and critical levels\n        this.thresholds = GaugeUtil.createStandardThresholdsConfig(this.lowThreshold, this.highThreshold);\n\n        /**\n         * Optionally, instead of using the 'createStandardThresholdsConfig' function as above, you can manually create a thresholds\n         * config object like the following with as many or as few threshold definitions as you need.\n         */\n        // this.thresholds = {\n        //     definitions: {\n        //         [StandardGaugeThresholdId.Warning]: {\n        //             id: StandardGaugeThresholdId.Warning,\n        //             value: this.lowThreshold,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Warning,\n        //         },\n        //         [StandardGaugeThresholdId.Critical]: {\n        //             id: StandardGaugeThresholdId.Critical,\n        //             value: this.highThreshold,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Critical,\n        //         },\n        //     },\n        //     reversed: false,\n        //     disableMarkers: false,\n        //     markerRadius: StandardGaugeThresholdMarkerRadius.Large,\n        // };\n\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onReversedChange(reversed: boolean): void {\n        this.reversed = reversed;\n        this.thresholds.reversed = reversed;\n\n        // swap the values of the warning and critical thresholds\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].value = this.reversed ? this.highThreshold : this.lowThreshold;\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].value = this.reversed ? this.lowThreshold : this.highThreshold;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n\n            // Enabling the thresholds\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n.demo__content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY29udGVudC1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFESjtBQUlBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLHNDQUFBO0FBRkoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jb250ZW50LWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uZGVtb19fY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuXG4uZGVtb19fY29udGVudC1sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IEBudWktbGluZS1oZWlnaHQtc21hbGw7XG4gICAgZm9udC1zaXplOiBAbnVpLWZvbnQtc2l6ZS1zbWFsbDtcbiAgICBmb250LXdlaWdodDogQG51aS1mb250LXdlaWdodC1yZWd1bGFyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6IHZhcigtLW51aS1jb2xvci10ZXh0LXNlY29uZGFyeSk7XG59XG4iXX0= */\";","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-basic-example\",\n    templateUrl: \"./vertical-gauge-basic-example.component.html\",\n    styleUrls: [\"./vertical-gauge-basic-example.component.less\"],\n})\nexport class VerticalGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 64;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart assist\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n\n            /**\n             * Optionally customize the default quantity color (defaults to StandardGaugeColor.Ok)\n             */\n\n            // defaultQuantityColor: \"var(--nui-color-semantic-ok)\",\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-with-thresholds-example\",\n    templateUrl: \"./linear-gauge-with-thresholds-example.component.html\",\n    styleUrls: [\"./linear-gauge-with-thresholds-example.component.less\"],\n})\nexport class LinearGaugeWithThresholdsExampleComponent implements OnInit {\n    public horizontalChartAssist: ChartAssist;\n    public verticalChartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n    public value = 64;\n\n    private thresholds: IGaugeThresholdsConfig;\n    private horizontalSeriesSet: IChartAssistSeries<IAccessors>[];\n    private verticalSeriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Generating a standard set of thresholds with warning and critical levels\n        this.thresholds = GaugeUtil.createStandardThresholdsConfig(50, 79);\n\n        /**\n         * Optionally, instead of using the 'createStandardThresholdsConfig' function as above, you can manually create a thresholds\n         * config object like the following with as many or as few threshold definitions as you need.\n         */\n        // this.thresholds = {\n        //     definitions: {\n        //         [StandardGaugeThresholdId.Warning]: {\n        //             id: StandardGaugeThresholdId.Warning,\n        //             value: 50,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Warning,\n        //         },\n        //         [StandardGaugeThresholdId.Critical]: {\n        //             id: StandardGaugeThresholdId.Critical,\n        //             value: 79,\n        //             enabled: true,\n        //             color: StandardGaugeColor.Critical,\n        //         },\n        //     },\n        //     reversed: false,\n        //     disableMarkers: false,\n        //     markerRadius: StandardGaugeThresholdMarkerRadius.Large,\n        // };\n\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Creating the horizontal gauge\n        this.horizontalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Creating the vertical gauge\n        this.verticalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauges();\n    }\n\n    private updateGauges() {\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Updating the horizontal gauge\n        this.horizontalSeriesSet = GaugeUtil.update(this.horizontalSeriesSet, this.gaugeConfig);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Updating the vertical gauge\n        this.verticalSeriesSet = GaugeUtil.update(this.verticalSeriesSet, this.gaugeConfig);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 100,\n\n            // Enabling the thresholds\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  height: 200px;\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKO0FBRUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUFKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtb19fdmFsdWUtaW5wdXQge1xuICAgIG1hcmdpbi1yaWdodDogNDBweDtcbn1cblxuLmRlbW9fX2NoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    StandardGaugeThresholdMarkerRadius,\n    StandardLinearGaugeThickness,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-thickness-adjustment-example\",\n    templateUrl: \"./linear-gauge-thickness-adjustment-example.component.html\",\n    styleUrls: [\"./linear-gauge-thickness-adjustment-example.component.less\"],\n})\nexport class LinearGaugeThicknessAdjustmentExampleComponent implements OnInit {\n    public gaugeConfig: IGaugeConfig;\n    public horizontalChartAssist: ChartAssist;\n    public verticalChartAssist: ChartAssist;\n\n    public value = 64;\n    public compact = true;\n\n    private horizontalSeriesSet: IChartAssistSeries<IAccessors>[];\n    private verticalSeriesSet: IChartAssistSeries<IAccessors>[];\n\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(50, 79);\n\n    public ngOnInit(): void {\n        // Setting the initial threshold marker radius\n        this.thresholds.markerRadius = this.compact ? StandardGaugeThresholdMarkerRadius.Small : StandardGaugeThresholdMarkerRadius.Large;\n\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Creating the horizontal gauge\n        this.horizontalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Creating the vertical gauge\n        this.verticalChartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalSeriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauges();\n    }\n\n    public onCompactChange(compact: boolean): void {\n        this.compact = compact;\n\n        // Adjusting the threshold marker radius\n        this.thresholds.markerRadius = this.compact ? StandardGaugeThresholdMarkerRadius.Small : StandardGaugeThresholdMarkerRadius.Large;\n        this.updateGauges();\n\n        // Updating the thickness\n        this.updateThickness();\n    }\n\n    private updateThickness() {\n        // Using standard thicknesses based on whether the gauge is in compact mode\n        const thickness = this.compact ? StandardLinearGaugeThickness.Small : StandardLinearGaugeThickness.Large;\n\n        // Updating the horizontal gauge height with the desired gauge thickness in pixels\n        const horizontalGridConfig = this.horizontalChartAssist.chart.getGrid().config();\n        horizontalGridConfig.dimension.height(thickness);\n        this.horizontalChartAssist.chart.updateDimensions();\n\n        // Updating the vertical gauge width with the desired gauge thickness in pixels\n        const verticalGridConfig = this.verticalChartAssist.chart.getGrid().config();\n        verticalGridConfig.dimension.width(thickness);\n        this.verticalChartAssist.chart.updateDimensions();\n    }\n\n    private updateGauges() {\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Updating the horizontal gauge\n        this.horizontalSeriesSet = GaugeUtil.update(this.horizontalSeriesSet, this.gaugeConfig);\n        this.horizontalChartAssist.update(this.horizontalSeriesSet);\n\n        // Updating the vertical gauge\n        this.verticalSeriesSet = GaugeUtil.update(this.verticalSeriesSet, this.gaugeConfig);\n        this.verticalChartAssist.update(this.verticalSeriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 100,\n            thresholds: this.thresholds,\n\n            // Setting the initial thickness based on whether the gauge is in compact mode\n            // The 'createChartAssist' function uses this to configure the grid's dimensions\n            linearThickness: this.compact ? StandardLinearGaugeThickness.Small : StandardLinearGaugeThickness.Large,\n        };\n    }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-tester\",\n    templateUrl: \"./vertical-gauge-tester.component.html\",\n    styleUrls: [\"./vertical-gauge-tester.component.less\"],\n})\nexport class VerticalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<VerticalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Vertical);\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n    StandardGaugeThresholdId,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-toggling-example\",\n    templateUrl: \"./donut-gauge-with-threshold-toggling-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-toggling-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdTogglingExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 178;\n    public gaugeConfig: IGaugeConfig;\n    public warningEnabled = true;\n    public criticalEnabled = true;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n\n        // Enabling or disabling the warning threshold\n        this.thresholds.definitions[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n\n        this.updateGauge();\n    }\n\n    public onCriticalEnabledChange(enabled: boolean): void {\n        this.criticalEnabled = enabled;\n\n        // Enabling or disabling the critical threshold\n        this.thresholds.definitions[StandardGaugeThresholdId.Critical].enabled = this.criticalEnabled;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-chart-docs-gauge\",\n    templateUrl: \"./chart-docs-gauge.component.html\",\n})\nexport class ChartDocsGaugeComponent {\n}\n","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLW1hcmtlci10b2dnbGluZy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJkb251dC1nYXVnZS13aXRoLXRocmVzaG9sZC1tYXJrZXItdG9nZ2xpbmctZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX19jaGFydCB7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgICB3aWR0aDogMjUwcHg7XG59XG4iXX0= */\";","import { Component } from \"@angular/core\";\nimport { GaugeUtil, IGaugeConfig, GaugeThresholdDefs, StandardGaugeThresholdId } from \"@nova-ui/charts\";\nimport cloneDeep from \"lodash/cloneDeep\"\n\n@Component({\n    selector: \"gauge-visual-test\",\n    templateUrl: \"./gauge-visual-test.component.html\",\n})\nexport class GaugeVisualTestComponent {\n    public warningEnabled = true;\n    public gaugeConfigs = [this.getGaugeConfig(42), this.getGaugeConfig(130), this.getGaugeConfig(178)];\n\n    public getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: GaugeUtil.createStandardThresholdsConfig(100, 158),\n        };\n    }\n\n    public onWarningEnabledChange(enabled: boolean): void {\n        this.warningEnabled = enabled;\n        this.gaugeConfigs = this.gaugeConfigs.map(c => {\n            const config = cloneDeep(c);\n            (config.thresholds?.definitions as GaugeThresholdDefs)[StandardGaugeThresholdId.Warning].enabled = this.warningEnabled;\n            return config;\n        });\n    }\n}\n","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKO0FBR0E7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoidmVydGljYWwtZ2F1Z2UtYmFzaWMtZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX192YWx1ZS1pbnB1dCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xufVxuXG4vLyBTZXR0aW5nIHRoZSBoZWlnaHQgb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgdmVydGljYWwgbGVuZ3RoIG9mIHRoZSBnYXVnZVxuLmRlbW9fX2NoYXJ0IHtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufVxuIl19 */\";","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkcy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJkb251dC1nYXVnZS13aXRoLXRocmVzaG9sZHMtZXhhbXBsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vX19jaGFydCB7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgICB3aWR0aDogMjUwcHg7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-tester\",\n    templateUrl: \"./horizontal-gauge-tester.component.html\",\n    styleUrls: [\"./horizontal-gauge-tester.component.less\"],\n})\nexport class HorizontalGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<HorizontalGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-without-threshold-markers-example\",\n    templateUrl: \"./donut-gauge-without-threshold-markers-example.component.html\",\n    styleUrls: [\"./donut-gauge-without-threshold-markers-example.component.less\"],\n})\nexport class DonutGaugeWithoutThresholdMarkersExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 128;\n    public gaugeConfig: IGaugeConfig;\n\n    private thresholds: IGaugeThresholdsConfig;\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Generating a standard set of thresholds with warning and critical levels\n        this.thresholds= GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n        // Turning off the markers\n        this.thresholds.disableMarkers = true;\n\n        this.gaugeConfig = this.getGaugeConfig();\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-marker-toggling-example\",\n    templateUrl: \"./donut-gauge-with-threshold-marker-toggling-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-marker-toggling-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdMarkerTogglingExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public value = 128;\n    public gaugeConfig: IGaugeConfig;\n    public markersEnabled = true;\n    public labelsPlugin = new DonutGaugeLabelsPlugin();\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    // Generating a standard set of thresholds with warning and critical levels\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        this.gaugeConfig = this.getGaugeConfig();\n\n        // Setting up the chart assist with a local instance of the labels plugin for direct control of the label display\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut, this.labelsPlugin);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.value = value;\n        this.updateGauge();\n    }\n\n    public onMarkersEnabledChange(enabled: boolean): void {\n        this.markersEnabled = enabled;\n\n        // Enabling or disabling the threshold markers\n        this.thresholds.disableMarkers = !this.markersEnabled;\n\n        // Enabling or disabling the threshold labels\n        this.labelsPlugin.config.disableThresholdLabels = !this.markersEnabled;\n\n        this.updateGauge();\n    }\n\n    private updateGauge() {\n        this.gaugeConfig = this.getGaugeConfig();\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(): IGaugeConfig {\n        return {\n            value: this.value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".demo__chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY3VzdG9tLXRocmVzaG9sZC1sYWJlbHMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jdXN0b20tdGhyZXNob2xkLWxhYmVscy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbW9fX2NoYXJ0IHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-custom-threshold-labels-example\",\n    templateUrl: \"./donut-gauge-with-custom-threshold-labels-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-custom-threshold-labels-example.component.less\"],\n})\nexport class DonutGaugeWithCustomThresholdLabelsExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(50, 75);\n\n    public ngOnInit(): void {\n        const initialValue = 40;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.gaugeConfig = this.getGaugeConfig(value);\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n            thresholds: this.thresholds,\n\n            // Setting a custom label formatter\n            labels: {\n                formatter: (d: string) => `${d}%`,\n\n                /**\n                 * Optionally specify a custom clearance in pixels for the labels if the\n                 * display strings are too long to fit within the default grid margins.\n                 */\n\n                // clearance: 35,\n            },\n        };\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    ChartDonutContentPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    IGaugeThresholdsConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-content-example\",\n    templateUrl: \"./donut-gauge-with-content-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-content-example.component.less\"],\n})\nexport class DonutGaugeWithContentExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n    private thresholds: IGaugeThresholdsConfig = GaugeUtil.createStandardThresholdsConfig(100, 158);\n\n    public ngOnInit(): void {\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n\n        // Adding the plugin for the donut inner content\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        this.gaugeConfig = this.getGaugeConfig(value);\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: this.thresholds,\n        };\n    }\n}\n","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESiIsImZpbGUiOiJ2ZXJ0aWNhbC1nYXVnZS10ZXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG59XG4iXX0= */\";","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  height: 190px;\\n  width: 190px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGhvdXQtdGhyZXNob2xkLW1hcmtlcnMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7QUFFQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQUoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aG91dC10aHJlc2hvbGQtbWFya2Vycy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbW9fX3ZhbHVlLWlucHV0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XG59XG5cbi5kZW1vX19jaGFydCB7XG4gICAgaGVpZ2h0OiAxOTBweDtcbiAgICB3aWR0aDogMTkwcHg7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    ChartAssist,\n    ChartDonutContentPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-tester\",\n    templateUrl: \"./donut-gauge-tester.component.html\",\n    styleUrls: [\"./donut-gauge-tester.component.less\"],\n})\nexport class DonutGaugeTesterComponent implements OnInit, OnChanges {\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public size = 250;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnChanges(changes: ComponentChanges<DonutGaugeTesterComponent>): void {\n        if (changes.gaugeConfig && !changes.gaugeConfig.firstChange) {\n            this.chartAssist.update(GaugeUtil.update(this.seriesSet, this.gaugeConfig));\n        }\n    }\n\n    public ngOnInit(): void {\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Donut);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".demo__value-input {\\n  margin-right: 40px;\\n}\\n.demo__chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtYmFzaWMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FBQ0o7QUFHQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJob3Jpem9udGFsLWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtb19fdmFsdWUtaW5wdXQge1xuICAgIG1hcmdpbi1yaWdodDogNDBweDtcbn1cblxuLy8gU2V0dGluZyB0aGUgd2lkdGggb24gdGhlIGNoYXJ0IGVsZW1lbnQgZGV0ZXJtaW5lcyB0aGUgaG9yaXpvbnRhbCBsZW5ndGggb2YgdGhlIGdhdWdlXG4uZGVtb19fY2hhcnQge1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQURKIiwiZmlsZSI6Imhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","/* eslint-disable max-len */\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { ChartDocsGaugeComponent } from \"./chart-docs-gauge.component\";\nimport { GaugeVisualTestComponent } from \"./visual-test/gauge-visual-test.component\";\nimport { HorizontalGaugeTesterComponent } from \"./visual-test/horizontal/horizontal-gauge-tester.component\";\nimport { DonutGaugeTesterComponent } from \"./visual-test/donut/donut-gauge-tester.component\";\nimport { VerticalGaugeTesterComponent } from \"./visual-test/vertical/vertical-gauge-tester.component\";\nimport { DonutGaugeBasicExampleComponent } from \"./donut/donut-basic/donut-gauge-basic-example.component\";\nimport { DonutGaugeWithContentExampleComponent } from \"./donut/donut-with-content/donut-gauge-with-content-example.component\";\nimport { DonutGaugeWithThresholdsExampleComponent } from \"./donut/donut-with-thresholds/donut-gauge-with-thresholds-example.component\";\nimport { DonutGaugeWithThresholdTogglingExampleComponent } from \"./donut/donut-with-threshold-toggling/donut-gauge-with-threshold-toggling-example.component\";\nimport { DonutGaugeWithCustomThresholdLabelsExampleComponent } from \"./donut/donut-with-custom-threshold-labels/donut-gauge-with-custom-threshold-labels-example.component\";\nimport { HorizontalGaugeBasicExampleComponent } from \"./linear/horizontal-basic/horizontal-gauge-basic-example.component\";\nimport { VerticalGaugeBasicExampleComponent } from \"./linear/vertical-basic/vertical-gauge-basic-example.component\";\nimport { DonutGaugeWithoutThresholdMarkersExampleComponent } from \"./donut/donut-without-threshold-markers/donut-gauge-without-threshold-markers-example.component\";\nimport { DonutGaugeWithThresholdMarkerTogglingExampleComponent } from \"./donut/donut-with-threshold-marker-toggling/donut-gauge-with-threshold-marker-toggling-example.component\";\nimport { LinearGaugeWithThresholdsExampleComponent } from \"./linear/linear-with-thresholds/linear-gauge-with-thresholds-example.component\";\nimport { LinearGaugeThicknessAdjustmentExampleComponent } from \"./linear/linear-thickness-adjustment/linear-gauge-thickness-adjustment-example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsGaugeComponent,\n        data: {\n            showThemeSwitcher: true,\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"visual-test\",\n        component: GaugeVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-basic\",\n        component: DonutGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-content\",\n        component: DonutGaugeWithContentExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-custom-labels\",\n        component: DonutGaugeWithCustomThresholdLabelsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-without-markers\",\n        component: DonutGaugeWithoutThresholdMarkersExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-marker-toggling\",\n        component: DonutGaugeWithThresholdMarkerTogglingExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-thresholds\",\n        component: DonutGaugeWithThresholdsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-threshold-toggling\",\n        component: DonutGaugeWithThresholdTogglingExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"horizontal-basic\",\n        component: HorizontalGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"vertical-basic\",\n        component: VerticalGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"linear-with-thresholds\",\n        component: LinearGaugeWithThresholdsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"linear-thickness\",\n        component: LinearGaugeWithThresholdsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsGaugeComponent,\n        GaugeVisualTestComponent,\n        HorizontalGaugeBasicExampleComponent,\n        LinearGaugeWithThresholdsExampleComponent,\n        HorizontalGaugeTesterComponent,\n        DonutGaugeTesterComponent,\n        DonutGaugeBasicExampleComponent,\n        DonutGaugeWithContentExampleComponent,\n        DonutGaugeWithCustomThresholdLabelsExampleComponent,\n        DonutGaugeWithThresholdMarkerTogglingExampleComponent,\n        DonutGaugeWithoutThresholdMarkersExampleComponent,\n        DonutGaugeWithThresholdsExampleComponent,\n        DonutGaugeWithThresholdTogglingExampleComponent,\n        VerticalGaugeBasicExampleComponent,\n        LinearGaugeThicknessAdjustmentExampleComponent,\n        VerticalGaugeTesterComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        FormsModule,\n        NuiChartsModule,\n        NuiCheckboxModule,\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiIconModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsGaugeModule {\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-basic-example\",\n    templateUrl: \"./horizontal-gauge-basic-example.component.html\",\n    styleUrls: [\"./horizontal-gauge-basic-example.component.less\"],\n})\nexport class HorizontalGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit(): void {\n        // Setting up the gauge config\n        const initialValue = 64;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart assist\n        this.chartAssist = GaugeUtil.createChartAssist(this.gaugeConfig, GaugeMode.Horizontal);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number): void {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.update(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 100,\n\n            /**\n             * Optionally customize the default quantity color (defaults to StandardGaugeColor.Ok)\n             */\n\n            // defaultQuantityColor: \"var(--nui-color-semantic-ok)\",\n        };\n    }\n}\n"],"sourceRoot":"webpack:///"}