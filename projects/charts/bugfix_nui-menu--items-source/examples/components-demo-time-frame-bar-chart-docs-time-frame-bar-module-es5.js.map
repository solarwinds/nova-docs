{"version":3,"sources":["webpack:///examples/components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.html","webpack:///examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.module.ts?298c","webpack:///examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.module.ts","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-data.service.ts?4e46","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?8c79","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-basic/time-frame-bar-basic.example.component.ts?74ee","webpack:///examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.component.html","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-data.service.ts","webpack:///examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.component.ts","webpack:///examples/components/demo/time-frame-bar/chart-docs-time-frame-bar.component.ts?a11b","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.html","webpack:///examples/components/demo/time-frame-bar/time-frame-bar-test/time-frame-bar-test.component.ts?bc6e"],"names":["TimeFrameBarBasicExampleComponent","history","dataSourceService","series","getData","fromDate","subtract","toDate","chart","chartAssist","xScale","yScale","seriesSet","accessors","palette","standardColors","markers","renderer","domainCalculator","Object","keys","map","key","id","name","data","buildTimeSeriesFromData","scales","x","y","timeFrame","save","startDatetime","endDatetime","selectedPresetId","undefined","addPlugins","getEventBus","getStream","subscribe","event","payload","newDomain","applyFilters","filteringSubscription","setUpFiltering","unsubscribe","value","restart","undo","registerComponent","timeframe","componentInstance","getFilters","type","outputsSubject","fixDomain","update","selector","template","providers","from","to","count","length","interval","diff","i","clone","add","duration","exampleRoutes","path","component","beta","showThemeSwitcher","ChartDocsTimeFrameBarModule","declarations","imports","forChild","provide","useFactory","TimeFrameBarTestComponent","addDelay","dataService","busy","updateDimensions","start","end","getChartData","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","webpackContextKeys","resolve","module","exports","DataInterval","TimeFrameBarDataService","factors","seriesValueFunctions","a","b","c","Math","cos","PI","delayInterval","rules","results","dataInterval","asHours","Hour","Poll","seriesId","pipe","valueFn","startCorrector","minutes","currentDate","seconds","endCorrector","endDate","ceil","asMinutes","fDay","day","hours","fYear","year","dayOfYear","fCentury","century","push","ChartDocsTimeFrameBarComponent"],"mappings":"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","file":"components-demo-time-frame-bar-chart-docs-time-frame-bar-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \"@nova-ui/bits\";\nimport {\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, IAccessors, IChartAssistSeries, ISetDomainEventPayload, LineAccessors, LinearScale,\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\n} from \"@nova-ui/charts\";\nimport moment, { Moment } from \"moment/moment\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"nui-time-frame-bar-example\",\n    templateUrl: \"./time-frame-bar-basic.example.component.html\",\n    providers: [NoopDataSourceService, HistoryStorage],\n})\nexport class TimeFrameBarBasicExampleComponent implements OnInit, OnDestroy {\n    private series = getData();\n    public fromDate = moment(\"2018-05-01 15:00:00\").subtract(5.2, \"days\");\n    public toDate = moment(\"2019-01-01 15:00:00\");\n\n    public chart = new Chart(new XYGrid());\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\n\n    public timeFrame: ITimeframe;\n\n    private xScale = new TimeScale(\"time-scale\");\n    private yScale = new LinearScale();\n    private seriesSet: IChartAssistSeries<IAccessors>[] = [];\n    private filteringSubscription: Subscription;\n\n    constructor(public history: HistoryStorage<ITimeframe>,\n                private dataSourceService: NoopDataSourceService<ITimeframe>) {\n    }\n\n    public ngOnInit() {\n        const accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\n        const renderer = new LineRenderer();\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\n        this.seriesSet = Object.keys(this.series).map((key: string) => ({\n            id: key,\n            name: key,\n            data: buildTimeSeriesFromData(this.fromDate, this.toDate, this.series[key]),\n            accessors,\n            renderer,\n            scales: { x: this.xScale, y: this.yScale },\n        }));\n\n        this.timeFrame = this.history.save({\n            startDatetime: this.fromDate,\n            endDatetime: this.toDate,\n            selectedPresetId: undefined,\n        });\n\n        this.chart.addPlugins(new ZoomPlugin());\n\n        // Update Time Frame Bar when chart got zoomed\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\n            const payload = <ISetDomainEventPayload>event.data;\n            const newDomain = payload[this.xScale.id];\n            this.timeFrame = this.history.save({\n                startDatetime: moment(newDomain[0]),\n                endDatetime: moment(newDomain[1]),\n                selectedPresetId: undefined,\n            });\n\n            void this.dataSourceService.applyFilters();\n        });\n\n        this.filteringSubscription = this.setUpFiltering();\n\n        void this.dataSourceService.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        if (this.filteringSubscription) {\n            this.filteringSubscription.unsubscribe();\n        }\n    }\n\n    public updateTimeFrame(value: ITimeframe) {\n        this.timeFrame = this.history.restart(value);\n        void this.dataSourceService.applyFilters();\n    }\n\n    // Use the history storage to go back one time frame\n    public zoomUndo() {\n        this.timeFrame = this.history.undo();\n        void this.dataSourceService.applyFilters();\n    }\n\n    // Reset the history storage and save a new initial value if provided\n    // Otherwise preserve the previous one\n    public zoomReset(value?: ITimeframe) {\n        this.timeFrame = this.history.restart(value);\n        void this.dataSourceService.applyFilters();\n    }\n\n    private setUpFiltering(): any {\n        this.dataSourceService.registerComponent({\n            timeframe: {\n                componentInstance: {\n                    getFilters: () => <IFilter<ITimeframe>>({\n                        type: \"ITimeframe\",\n                        value: this.timeFrame,\n                    }),\n                },\n            },\n        });\n\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\n            this.xScale.fixDomain([data.timeframe.value.startDatetime.toDate(), data.timeframe.value.endDatetime.toDate()]);\n            this.chartAssist.update(this.seriesSet);\n        });\n    }\n}\n\n/* Chart data */\nfunction getData(): Record<string, number[]> {\n    return {\n        \"Tex-lab-aus-2621\": [18, 27, 35, 33, 26, 50, 36, 47, 58, 66, 65, 50, 40, 31, 42, 62, 57, 99, 75, 55, 73, 69, 77, 57, 61, 68, 82, 81, 78, 67],\n        \"Cz-lab-brn-02\": [41, 50, 56, 40, 44, 35, 27, 42, 38, 23, 20, 13, 29, 42, 84, 93, 71, 60, 54, 79, 64, 49, 48, 59, 76, 63, 52, 84, 89, 80],\n    };\n}\n\nfunction buildTimeSeriesFromData(from: Moment, to: Moment, data: number[]): { x: Moment, y: number }[] {\n    const count = data.length;\n    if (!from || !to || count === 0) {\n        return [];\n    }\n\n    const interval = count > 1 ? to.diff(from) / (count - 1) : 0;\n    return data.map((y, i) => ({\n        x: from.clone().add(moment.duration(i * interval)),\n        y,\n    }));\n}\n","export default \"<nui-time-frame-bar [timeFrame]=\\\"timeFrame\\\"\\n                    (timeFrameChange)=\\\"updateTimeFrame($event)\\\"\\n                    [historyIndex]=\\\"history.index\\\"\\n                    [minDate]=\\\"fromDate\\\"\\n                    [maxDate]=\\\"toDate\\\"\\n                    (undo)=\\\"zoomUndo()\\\"\\n                    (clear)=\\\"zoomReset()\\\">\\n    <nui-icon icon=\\\"calendar\\\" class=\\\"pr-3\\\"></nui-icon>\\n    {{timeFrame | timeFrame}}\\n    <nui-quick-picker timeFrameSelection>\\n        <nui-time-frame-picker></nui-time-frame-picker>\\n    </nui-quick-picker>\\n</nui-time-frame-bar>\\n\\n<div class=\\\"nui-chart-layout p-3\\\">\\n    <div class=\\\"axis-label-left nui-text-small\\\"><strong i18n>Average CPU load (%)</strong></div>\\n    <div class=\\\"chart\\\">\\n        <nui-chart class=\\\"d-flex w-100 h-100\\\" [chart]=\\\"chart\\\"></nui-chart>\\n    </div>\\n    <div class=\\\"legend\\\">\\n        <nui-legend seriesUnitLabel=\\\"%\\\"\\n                    [active]=\\\"chartAssist.isLegendActive\\\"\\n                    [interactive]=\\\"true\\\"\\n                    (mouseleave)=\\\"chartAssist.resetVisibleSeries()\\\">\\n            <nui-legend-series *ngFor=\\\"let legendSeries of chartAssist.legendSeriesSet; trackBy: chartAssist.seriesTrackByFn\\\"\\n                               [descriptionPrimary]=\\\"legendSeries['name']\\\"\\n                               (mouseenter)=\\\"chartAssist.emphasizeSeries(legendSeries.id)\\\"\\n                               [seriesRenderState]=\\\"chartAssist.renderStatesIndex[legendSeries.id]?.state\\\"\\n                               [isSelected]=\\\"!chartAssist.isSeriesHidden(legendSeries.id)\\\"\\n                               (isSelectedChange)=\\\"chartAssist.toggleSeries(legendSeries.id, $event)\\\">\\n                <nui-rich-legend-tile [value]=\\\"chartAssist.getHighlightedValue(legendSeries, 'y')\\\"\\n                                      [backgroundColor]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\"\\n                                      [color]=\\\"chartAssist.palette.textColors.get(legendSeries.id)\\\">\\n                    <nui-chart-marker rightEdge\\n                                      [marker]=\\\"chartAssist.markers.get(legendSeries.id)\\\"\\n                                      [color]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\">\\n                    </nui-chart-marker>\\n                </nui-rich-legend-tile>\\n            </nui-legend-series>\\n        </nui-legend>\\n    </div>\\n</div>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule, Routes } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN, NuiBusyModule, NuiButtonModule, NuiCommonModule, NuiDialogModule, NuiDocsModule, NuiIconModule, NuiLayoutModule, NuiPopoverModule,\\n    NuiTimeFrameBarModule, NuiTimeFramePickerModule, NuiTooltipModule, SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\nimport { NuiChartsModule } from \\\"@nova-ui/charts\\\";\\n\\nimport { DemoCommonModule } from \\\"../common/demo-common.module\\\";\\n\\nimport { ChartDocsTimeFrameBarComponent } from \\\"./chart-docs-time-frame-bar.component\\\";\\nimport { TimeFrameBarBasicExampleComponent } from \\\"./time-frame-bar-basic/time-frame-bar-basic.example.component\\\";\\nimport { TimeFrameBarTestComponent } from \\\"./time-frame-bar-test/time-frame-bar-test.component\\\";\\n\\nconst exampleRoutes: Routes = [\\n    {\\n        path: \\\"\\\",\\n        component: ChartDocsTimeFrameBarComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.beta,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"example\\\",\\n        component: TimeFrameBarBasicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"test\\\",\\n        component: TimeFrameBarTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    declarations: [\\n        ChartDocsTimeFrameBarComponent,\\n        TimeFrameBarBasicExampleComponent,\\n        TimeFrameBarTestComponent,\\n    ],\\n    imports: [\\n        DemoCommonModule,\\n        NuiButtonModule,\\n        NuiBusyModule,\\n        NuiChartsModule,\\n        NuiCommonModule,\\n        NuiDialogModule,\\n        NuiDocsModule,\\n        NuiIconModule,\\n        NuiLayoutModule,\\n        NuiPopoverModule,\\n        NuiTimeFramePickerModule,\\n        NuiTimeFrameBarModule,\\n        NuiTooltipModule,\\n        RouterModule.forChild(exampleRoutes),\\n    ],\\n    providers: [\\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/) },\\n    ],\\n})\\nexport class ChartDocsTimeFrameBarModule {\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN, NuiBusyModule, NuiButtonModule, NuiCommonModule, NuiDialogModule, NuiDocsModule, NuiIconModule, NuiLayoutModule, NuiPopoverModule,\n    NuiTimeFrameBarModule, NuiTimeFramePickerModule, NuiTooltipModule, SrlcStage,\n} from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../common/demo-common.module\";\n\nimport { ChartDocsTimeFrameBarComponent } from \"./chart-docs-time-frame-bar.component\";\nimport { TimeFrameBarBasicExampleComponent } from \"./time-frame-bar-basic/time-frame-bar-basic.example.component\";\nimport { TimeFrameBarTestComponent } from \"./time-frame-bar-test/time-frame-bar-test.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsTimeFrameBarComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"example\",\n        component: TimeFrameBarBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"test\",\n        component: TimeFrameBarTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsTimeFrameBarComponent,\n        TimeFrameBarBasicExampleComponent,\n        TimeFrameBarTestComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        NuiButtonModule,\n        NuiBusyModule,\n        NuiChartsModule,\n        NuiCommonModule,\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiIconModule,\n        NuiLayoutModule,\n        NuiPopoverModule,\n        NuiTimeFramePickerModule,\n        NuiTimeFrameBarModule,\n        NuiTooltipModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsTimeFrameBarModule {\n}\n","export default \"import moment, { Moment } from \\\"moment/moment\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport { delay } from \\\"rxjs/operators\\\";\\n\\nenum DataInterval {\\n    Poll = 5,\\n    Hour = 60,\\n    // Day = 24 * 60,\\n    // Week = 7 * 24 * 60,\\n}\\n\\nexport class TimeFrameBarDataService {\\n    /* eslint-disable max-len */\\n    private factors = {\\n        \\\"day\\\": [42, 7, 63, 33, 10, 16, 57, 16, 88, 44, 35, 85, 46, 73, 29, 35, 51, 52, 100, 51, 40, 87, 42, 90, 75, 90, 70, 16, 4, 43, 18, 63, 28, 15, 86, 81, 48, 86, 91, 89, 15, 89, 66, 35, 65, 18, 59, 75, 69, 64, 55, 67, 60, 76, 29, 81, 87, 73, 10, 19, 29, 83, 16, 72, 80, 43, 28, 53, 38, 24, 88, 81, 14, 68, 80, 44, 72, 56, 89, 83, 6, 1, 1, 11, 66, 39, 42, 81, 31, 48, 11, 76, 41, 60, 40, 15, 75, 33, 90, 80, 37, 40, 39, 58, 69, 31, 61, 80, 85, 57, 38, 3, 45, 36, 71, 66, 36, 58, 82, 70, 90, 78, 33, 72, 98, 36, 32, 61, 44, 13, 22, 90, 66, 87, 55, 21, 63, 70, 41, 61, 19, 42, 65, 79, 17, 14, 85, 69, 79, 77, 99, 86, 5, 31, 94, 2, 37, 54, 79, 32, 63, 83, 64, 52, 59, 35, 18, 45, 58, 23, 58, 99, 61, 60, 78, 95, 63, 35, 27, 93, 46, 86, 51, 80, 73, 6, 66, 72, 96, 7, 90, 94, 3, 66, 1, 38, 30, 11, 58, 91, 84, 100, 90, 70, 51, 77, 56, 53, 49, 42, 84, 10, 76, 11, 66, 41, 38, 68, 24, 84, 89, 72, 74, 54, 29, 18, 36, 13, 17, 18, 82, 14, 50, 10, 47, 12, 1, 4, 63, 59, 62, 78, 83, 5, 25, 8, 59, 59, 28, 56, 35, 33, 31, 37, 5, 67, 34, 93, 25, 66, 69, 64, 23, 69, 60, 24, 26, 81, 88, 66, 80, 45, 91, 68, 83, 8, 83, 43, 96, 85, 8, 47, 67, 14, 64, 26, 96, 45],\\n        \\\"year\\\": [64, 70, 41, 96, 74, 38, 38, 79, 77, 24, 98, 78, 22, 90, 7, 42, 95, 76, 92, 86, 13, 5, 80, 6, 9, 90, 40, 94, 66, 12, 28, 7, 76, 74, 23, 79, 82, 9, 9, 84, 59, 92, 63, 15, 25, 18, 83, 35, 46, 14, 22, 84, 34, 17, 9, 25, 34, 89, 48, 80, 76, 38, 60, 43, 41, 88, 35, 32, 62, 80, 76, 64, 41, 49, 23, 61, 27, 56, 3, 88, 37, 24, 15, 88, 85, 18, 41, 74, 81, 13, 40, 10, 39, 30, 45, 21, 32, 46, 54, 8, 28, 19, 74, 87, 36, 43, 74, 15, 58, 24, 98, 14, 49, 96, 51, 83, 4, 4, 13, 72, 42, 62, 26, 80, 85, 46, 74, 60, 14, 5, 97, 16, 90, 84, 52, 10, 18, 26, 8, 49, 71, 34, 87, 32, 15, 46, 23, 10, 86, 7, 18, 51, 31, 72, 20, 43, 10, 91, 74, 51, 86, 89, 32, 79, 94, 5, 41, 16, 79, 66, 84, 24, 74, 78, 69, 85, 46, 57, 92, 92, 3, 14, 5, 12, 63, 1, 6, 37, 85, 79, 18, 88, 42, 8, 25, 94, 87, 7, 52, 16, 35, 43, 65, 63, 46, 38, 98, 55, 100, 14, 45, 50, 49, 90, 98, 47, 20, 83, 84, 84, 58, 79, 100, 19, 75, 94, 34, 5, 94, 29, 96, 80, 46, 33, 73, 82, 58, 68, 98, 100, 10, 46, 96, 87, 96, 5, 64, 53, 5, 7, 19, 65, 91, 78, 59, 14, 19, 12, 15, 92, 8, 15, 19, 99, 26, 25, 45, 29, 39, 1, 61, 74, 88, 27, 43, 1, 93, 75, 91, 97, 38, 39, 24, 94, 29, 18, 88, 56, 62, 7, 88, 13, 34, 21, 20, 41, 90, 95, 2, 17, 26, 4, 44, 70, 18, 65, 75, 62, 18, 46, 18, 73, 76, 95, 2, 30, 31, 77, 77, 80, 23, 51, 48, 42, 78, 65, 78, 56, 37, 46, 96, 72, 49, 48, 8, 45, 89, 42, 87, 28, 42, 53, 94, 73, 57, 30, 75, 53, 77, 62, 9, 71, 9, 48, 97, 92, 91, 24, 44, 83, 8, 86, 41, 6, 21, 45],\\n        \\\"century\\\": [85, 83, 87, 82, 77, 65, 67, 72, 75, 76, 82, 87, 91, 93, 94, 90, 84, 89, 86, 88, 86, 85, 82, 84, 81, 77, 77, 77, 80, 97, 18, 6, 25, 85, 90, 25, 72, 99, 61, 79, 62, 7, 50, 41, 40, 6, 60, 65, 1, 98, 90, 31, 57, 74, 50, 57, 68, 20, 12, 16, 33, 1, 32, 53, 76, 57, 89, 33, 48, 28, 89, 35, 15, 3, 33, 77, 10, 1, 36, 4, 36, 88, 26, 66, 50, 3, 66, 37, 77, 70, 9, 40, 20, 14, 55, 96, 88, 14, 9, 54],\\n    };\\n    /* eslint-enable max-len */\\n\\n    /* Chart data */\\n    private seriesValueFunctions: Record<string, (fs: [number, number, number]) => number> = {\\n        \\\"Tex-lab-aus-2621\\\": ([a, b, c]) => a + 0.1 * (b - 30) + (c - 50),\\n        \\\"Cz-lab-brn-02\\\": ([a, b, c]) => a + 0.01 * b * (b - 50) + 20 * Math.cos(c * 0.02 * Math.PI),\\n    };\\n\\n    public getChartData(from: Moment, to: Moment, delayInterval: number = 0): Observable<Record<string, { x: Moment, y: number }[]>> {\\n        const rules = this.seriesValueFunctions;\\n        const results: Record<string, { x: moment.Moment, y: number }[]> = {};\\n\\n        const duration = moment.duration(to.diff(from));\\n        const dataInterval = duration.asHours() > 12 ? DataInterval.Hour : DataInterval.Poll;\\n\\n        for (const seriesId of Object.keys(rules)) {\\n            results[seriesId] = this.getData(from, to, rules[seriesId], dataInterval);\\n        }\\n\\n        return of(results).pipe(delay(delayInterval));\\n    }\\n\\n    private getData(\\n        start: Moment,\\n        end: Moment,\\n        valueFn: (fs: [number, number, number]) => number,\\n        interval: DataInterval = DataInterval.Poll\\n    ): { x: moment.Moment, y: number }[] {\\n        const startCorrector = start.minutes() % interval;\\n        const currentDate = start.clone().subtract(startCorrector, \\\"minutes\\\").seconds(0); // rounds to pollInterval\\n        const endCorrector = interval - end.minutes() % interval;\\n        const endDate = end.clone().add(endCorrector, \\\"minutes\\\").seconds(0); // rounds to 5 minutes pollInterval\\n        const count = Math.ceil(moment.duration(endDate.diff(currentDate)).asMinutes() / interval);\\n        const results = [];\\n\\n        for (let i = 0; i < count; i++) {\\n            const fDay = this.factors.day[Math.ceil((60 * currentDate.hours() + currentDate.minutes()) / 5)];\\n            const fYear = this.factors.year[currentDate.dayOfYear()];\\n            const fCentury = this.factors.century[currentDate.year() % 100];\\n            results.push({\\n                x: currentDate.clone(),\\n                y: valueFn([fCentury, fYear, fDay]),\\n            });\\n            currentDate.add(interval, \\\"minutes\\\");\\n        }\\n\\n        return results;\\n    }\\n\\n}\\n\";","import { AfterContentInit, Component, OnDestroy } from \"@angular/core\";\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \"@nova-ui/bits\";\nimport {\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, ISetDomainEventPayload, LineAccessors, LinearScale,\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\nimport { Subscription } from \"rxjs\";\n\nimport { TimeFrameBarDataService } from \"./time-frame-bar-data.service\";\n\n@Component({\n    selector: \"nui-time-frame-bar-test\",\n    templateUrl: \"./time-frame-bar-test.component.html\",\n    providers: [NoopDataSourceService, HistoryStorage],\n})\nexport class TimeFrameBarTestComponent implements AfterContentInit, OnDestroy {\n    public fromDate = moment(\"2018-05-01 15:00:00\").subtract(2, \"days\");\n    public toDate = moment(\"2018-05-01 15:00:00\");\n\n    public chart = new Chart(new XYGrid());\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\n\n    public timeFrame: ITimeframe;\n    public busy: boolean;\n    public addDelay: boolean = true;\n\n    private xScale = new TimeScale(\"time-scale\");\n    private yScale = new LinearScale();\n    private accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\n    private renderer = new LineRenderer();\n    private filteringSubscription: Subscription;\n\n    private dataService = new TimeFrameBarDataService();\n\n    constructor(public history: HistoryStorage<ITimeframe>,\n        private dataSourceService: NoopDataSourceService<ITimeframe>) {\n    }\n\n    public ngAfterContentInit() {\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\n        this.chart.addPlugins(new ZoomPlugin());\n\n        this.filteringSubscription = this.setUpFiltering();\n\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\n            const payload = <ISetDomainEventPayload>event.data;\n            const newDomain = payload[this.xScale.id];\n\n            this.applyFilters(this.history.save({\n                startDatetime: moment(newDomain[0]),\n                endDatetime: moment(newDomain[1]),\n                selectedPresetId: undefined,\n            }));\n        });\n\n        this.applyFilters(this.history.save({\n            startDatetime: this.fromDate,\n            endDatetime: this.toDate,\n            selectedPresetId: undefined,\n        }));\n    }\n\n    public ngOnDestroy() {\n        if (this.filteringSubscription) {\n            this.filteringSubscription.unsubscribe();\n        }\n    }\n\n    public updateTimeFrame(value?: ITimeframe) {\n        this.applyFilters(this.history.restart(value));\n    }\n\n    public zoomUndo() {\n        this.applyFilters(this.history.undo());\n    }\n\n    private applyFilters(value: ITimeframe) {\n        this.busy = true;\n        this.timeFrame = value;\n        this.xScale.fixDomain([value.startDatetime.toDate(), value.endDatetime.toDate()]);\n        this.chart.updateDimensions();\n        void this.dataSourceService.applyFilters();\n    }\n\n    private setUpFiltering(): any {\n        this.dataSourceService.registerComponent({\n            timeframe: {\n                componentInstance: {\n                    getFilters: () => <IFilter<ITimeframe>>({\n                        type: \"ITimeframe\",\n                        value: this.timeFrame,\n                    }),\n                },\n            },\n        });\n\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\n            const start = data.timeframe.value.startDatetime;\n            const end = data.timeframe.value.endDatetime;\n            this.dataService.getChartData(start, end, this.addDelay ? 1000 : 0).subscribe((series) => {\n                this.chartAssist.update(Object.keys(series).map((key: string) => ({\n                    id: key,\n                    name: key,\n                    data: series[key],\n                    accessors: this.accessors,\n                    renderer: this.renderer,\n                    scales: { x: this.xScale, y: this.yScale },\n                })));\n                this.busy = false;\n            });\n\n        });\n    }\n}\n\n","var map = {\n\t\"./chart-docs-time-frame-bar.component.html\": \"dsON\",\n\t\"./chart-docs-time-frame-bar.component.ts\": \"oRth\",\n\t\"./chart-docs-time-frame-bar.module.ts\": \"KYwu\",\n\t\"./time-frame-bar-basic/time-frame-bar-basic.example.component.html\": \"EUdT\",\n\t\"./time-frame-bar-basic/time-frame-bar-basic.example.component.ts\": \"dO4p\",\n\t\"./time-frame-bar-test/time-frame-bar-data.service.ts\": \"Tkac\",\n\t\"./time-frame-bar-test/time-frame-bar-test.component.html\": \"oS9I\",\n\t\"./time-frame-bar-test/time-frame-bar-test.component.ts\": \"vG5J\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Xc7/\";","export default \"import { Component, OnDestroy, OnInit } from \\\"@angular/core\\\";\\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \\\"@nova-ui/bits\\\";\\nimport {\\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, IAccessors, IChartAssistSeries, ISetDomainEventPayload, LineAccessors, LinearScale,\\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\\n} from \\\"@nova-ui/charts\\\";\\nimport moment, { Moment } from \\\"moment/moment\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\n@Component({\\n    selector: \\\"nui-time-frame-bar-example\\\",\\n    templateUrl: \\\"./time-frame-bar-basic.example.component.html\\\",\\n    providers: [NoopDataSourceService, HistoryStorage],\\n})\\nexport class TimeFrameBarBasicExampleComponent implements OnInit, OnDestroy {\\n    private series = getData();\\n    public fromDate = moment(\\\"2018-05-01 15:00:00\\\").subtract(5.2, \\\"days\\\");\\n    public toDate = moment(\\\"2019-01-01 15:00:00\\\");\\n\\n    public chart = new Chart(new XYGrid());\\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\\n\\n    public timeFrame: ITimeframe;\\n\\n    private xScale = new TimeScale(\\\"time-scale\\\");\\n    private yScale = new LinearScale();\\n    private seriesSet: IChartAssistSeries<IAccessors>[] = [];\\n    private filteringSubscription: Subscription;\\n\\n    constructor(public history: HistoryStorage<ITimeframe>,\\n                private dataSourceService: NoopDataSourceService<ITimeframe>) {\\n    }\\n\\n    public ngOnInit() {\\n        const accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\\n        const renderer = new LineRenderer();\\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\\n        this.seriesSet = Object.keys(this.series).map((key: string) => ({\\n            id: key,\\n            name: key,\\n            data: buildTimeSeriesFromData(this.fromDate, this.toDate, this.series[key]),\\n            accessors,\\n            renderer,\\n            scales: { x: this.xScale, y: this.yScale },\\n        }));\\n\\n        this.timeFrame = this.history.save({\\n            startDatetime: this.fromDate,\\n            endDatetime: this.toDate,\\n            selectedPresetId: undefined,\\n        });\\n\\n        this.chart.addPlugins(new ZoomPlugin());\\n\\n        // Update Time Frame Bar when chart got zoomed\\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\\n            const payload = <ISetDomainEventPayload>event.data;\\n            const newDomain = payload[this.xScale.id];\\n            this.timeFrame = this.history.save({\\n                startDatetime: moment(newDomain[0]),\\n                endDatetime: moment(newDomain[1]),\\n                selectedPresetId: undefined,\\n            });\\n\\n            void this.dataSourceService.applyFilters();\\n        });\\n\\n        this.filteringSubscription = this.setUpFiltering();\\n\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        if (this.filteringSubscription) {\\n            this.filteringSubscription.unsubscribe();\\n        }\\n    }\\n\\n    public updateTimeFrame(value: ITimeframe) {\\n        this.timeFrame = this.history.restart(value);\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    // Use the history storage to go back one time frame\\n    public zoomUndo() {\\n        this.timeFrame = this.history.undo();\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    // Reset the history storage and save a new initial value if provided\\n    // Otherwise preserve the previous one\\n    public zoomReset(value?: ITimeframe) {\\n        this.timeFrame = this.history.restart(value);\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    private setUpFiltering(): any {\\n        this.dataSourceService.registerComponent({\\n            timeframe: {\\n                componentInstance: {\\n                    getFilters: () => <IFilter<ITimeframe>>({\\n                        type: \\\"ITimeframe\\\",\\n                        value: this.timeFrame,\\n                    }),\\n                },\\n            },\\n        });\\n\\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\\n            this.xScale.fixDomain([data.timeframe.value.startDatetime.toDate(), data.timeframe.value.endDatetime.toDate()]);\\n            this.chartAssist.update(this.seriesSet);\\n        });\\n    }\\n}\\n\\n/* Chart data */\\nfunction getData(): Record<string, number[]> {\\n    return {\\n        \\\"Tex-lab-aus-2621\\\": [18, 27, 35, 33, 26, 50, 36, 47, 58, 66, 65, 50, 40, 31, 42, 62, 57, 99, 75, 55, 73, 69, 77, 57, 61, 68, 82, 81, 78, 67],\\n        \\\"Cz-lab-brn-02\\\": [41, 50, 56, 40, 44, 35, 27, 42, 38, 23, 20, 13, 29, 42, 84, 93, 71, 60, 54, 79, 64, 49, 48, 59, 76, 63, 52, 84, 89, 80],\\n    };\\n}\\n\\nfunction buildTimeSeriesFromData(from: Moment, to: Moment, data: number[]): { x: Moment, y: number }[] {\\n    const count = data.length;\\n    if (!from || !to || count === 0) {\\n        return [];\\n    }\\n\\n    const interval = count > 1 ? to.diff(from) / (count - 1) : 0;\\n    return data.map((y, i) => ({\\n        x: from.clone().add(moment.duration(i * interval)),\\n        y,\\n    }));\\n}\\n\";","export default \"<h1>Time Frame Bar</h1>\\n\\n<p>\\n    This example shows the current way of implementing a chart with zooming capability and a time frame bar.\\n    We don't provide components that would encapsulate this logic, so it needs to be implemented from scratch like this. It takes advantage of the filtering\\n    session implementation to connect the filtering components on the page.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"time-frame-bar-basic\\\"\\n                     exampleTitle=\\\"Time Frame Bar\\\">\\n    <nui-time-frame-bar-example></nui-time-frame-bar-example>\\n</nui-example-wrapper>\\n\";","import moment, { Moment } from \"moment/moment\";\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\nenum DataInterval {\n    Poll = 5,\n    Hour = 60,\n    // Day = 24 * 60,\n    // Week = 7 * 24 * 60,\n}\n\nexport class TimeFrameBarDataService {\n    /* eslint-disable max-len */\n    private factors = {\n        \"day\": [42, 7, 63, 33, 10, 16, 57, 16, 88, 44, 35, 85, 46, 73, 29, 35, 51, 52, 100, 51, 40, 87, 42, 90, 75, 90, 70, 16, 4, 43, 18, 63, 28, 15, 86, 81, 48, 86, 91, 89, 15, 89, 66, 35, 65, 18, 59, 75, 69, 64, 55, 67, 60, 76, 29, 81, 87, 73, 10, 19, 29, 83, 16, 72, 80, 43, 28, 53, 38, 24, 88, 81, 14, 68, 80, 44, 72, 56, 89, 83, 6, 1, 1, 11, 66, 39, 42, 81, 31, 48, 11, 76, 41, 60, 40, 15, 75, 33, 90, 80, 37, 40, 39, 58, 69, 31, 61, 80, 85, 57, 38, 3, 45, 36, 71, 66, 36, 58, 82, 70, 90, 78, 33, 72, 98, 36, 32, 61, 44, 13, 22, 90, 66, 87, 55, 21, 63, 70, 41, 61, 19, 42, 65, 79, 17, 14, 85, 69, 79, 77, 99, 86, 5, 31, 94, 2, 37, 54, 79, 32, 63, 83, 64, 52, 59, 35, 18, 45, 58, 23, 58, 99, 61, 60, 78, 95, 63, 35, 27, 93, 46, 86, 51, 80, 73, 6, 66, 72, 96, 7, 90, 94, 3, 66, 1, 38, 30, 11, 58, 91, 84, 100, 90, 70, 51, 77, 56, 53, 49, 42, 84, 10, 76, 11, 66, 41, 38, 68, 24, 84, 89, 72, 74, 54, 29, 18, 36, 13, 17, 18, 82, 14, 50, 10, 47, 12, 1, 4, 63, 59, 62, 78, 83, 5, 25, 8, 59, 59, 28, 56, 35, 33, 31, 37, 5, 67, 34, 93, 25, 66, 69, 64, 23, 69, 60, 24, 26, 81, 88, 66, 80, 45, 91, 68, 83, 8, 83, 43, 96, 85, 8, 47, 67, 14, 64, 26, 96, 45],\n        \"year\": [64, 70, 41, 96, 74, 38, 38, 79, 77, 24, 98, 78, 22, 90, 7, 42, 95, 76, 92, 86, 13, 5, 80, 6, 9, 90, 40, 94, 66, 12, 28, 7, 76, 74, 23, 79, 82, 9, 9, 84, 59, 92, 63, 15, 25, 18, 83, 35, 46, 14, 22, 84, 34, 17, 9, 25, 34, 89, 48, 80, 76, 38, 60, 43, 41, 88, 35, 32, 62, 80, 76, 64, 41, 49, 23, 61, 27, 56, 3, 88, 37, 24, 15, 88, 85, 18, 41, 74, 81, 13, 40, 10, 39, 30, 45, 21, 32, 46, 54, 8, 28, 19, 74, 87, 36, 43, 74, 15, 58, 24, 98, 14, 49, 96, 51, 83, 4, 4, 13, 72, 42, 62, 26, 80, 85, 46, 74, 60, 14, 5, 97, 16, 90, 84, 52, 10, 18, 26, 8, 49, 71, 34, 87, 32, 15, 46, 23, 10, 86, 7, 18, 51, 31, 72, 20, 43, 10, 91, 74, 51, 86, 89, 32, 79, 94, 5, 41, 16, 79, 66, 84, 24, 74, 78, 69, 85, 46, 57, 92, 92, 3, 14, 5, 12, 63, 1, 6, 37, 85, 79, 18, 88, 42, 8, 25, 94, 87, 7, 52, 16, 35, 43, 65, 63, 46, 38, 98, 55, 100, 14, 45, 50, 49, 90, 98, 47, 20, 83, 84, 84, 58, 79, 100, 19, 75, 94, 34, 5, 94, 29, 96, 80, 46, 33, 73, 82, 58, 68, 98, 100, 10, 46, 96, 87, 96, 5, 64, 53, 5, 7, 19, 65, 91, 78, 59, 14, 19, 12, 15, 92, 8, 15, 19, 99, 26, 25, 45, 29, 39, 1, 61, 74, 88, 27, 43, 1, 93, 75, 91, 97, 38, 39, 24, 94, 29, 18, 88, 56, 62, 7, 88, 13, 34, 21, 20, 41, 90, 95, 2, 17, 26, 4, 44, 70, 18, 65, 75, 62, 18, 46, 18, 73, 76, 95, 2, 30, 31, 77, 77, 80, 23, 51, 48, 42, 78, 65, 78, 56, 37, 46, 96, 72, 49, 48, 8, 45, 89, 42, 87, 28, 42, 53, 94, 73, 57, 30, 75, 53, 77, 62, 9, 71, 9, 48, 97, 92, 91, 24, 44, 83, 8, 86, 41, 6, 21, 45],\n        \"century\": [85, 83, 87, 82, 77, 65, 67, 72, 75, 76, 82, 87, 91, 93, 94, 90, 84, 89, 86, 88, 86, 85, 82, 84, 81, 77, 77, 77, 80, 97, 18, 6, 25, 85, 90, 25, 72, 99, 61, 79, 62, 7, 50, 41, 40, 6, 60, 65, 1, 98, 90, 31, 57, 74, 50, 57, 68, 20, 12, 16, 33, 1, 32, 53, 76, 57, 89, 33, 48, 28, 89, 35, 15, 3, 33, 77, 10, 1, 36, 4, 36, 88, 26, 66, 50, 3, 66, 37, 77, 70, 9, 40, 20, 14, 55, 96, 88, 14, 9, 54],\n    };\n    /* eslint-enable max-len */\n\n    /* Chart data */\n    private seriesValueFunctions: Record<string, (fs: [number, number, number]) => number> = {\n        \"Tex-lab-aus-2621\": ([a, b, c]) => a + 0.1 * (b - 30) + (c - 50),\n        \"Cz-lab-brn-02\": ([a, b, c]) => a + 0.01 * b * (b - 50) + 20 * Math.cos(c * 0.02 * Math.PI),\n    };\n\n    public getChartData(from: Moment, to: Moment, delayInterval: number = 0): Observable<Record<string, { x: Moment, y: number }[]>> {\n        const rules = this.seriesValueFunctions;\n        const results: Record<string, { x: moment.Moment, y: number }[]> = {};\n\n        const duration = moment.duration(to.diff(from));\n        const dataInterval = duration.asHours() > 12 ? DataInterval.Hour : DataInterval.Poll;\n\n        for (const seriesId of Object.keys(rules)) {\n            results[seriesId] = this.getData(from, to, rules[seriesId], dataInterval);\n        }\n\n        return of(results).pipe(delay(delayInterval));\n    }\n\n    private getData(\n        start: Moment,\n        end: Moment,\n        valueFn: (fs: [number, number, number]) => number,\n        interval: DataInterval = DataInterval.Poll\n    ): { x: moment.Moment, y: number }[] {\n        const startCorrector = start.minutes() % interval;\n        const currentDate = start.clone().subtract(startCorrector, \"minutes\").seconds(0); // rounds to pollInterval\n        const endCorrector = interval - end.minutes() % interval;\n        const endDate = end.clone().add(endCorrector, \"minutes\").seconds(0); // rounds to 5 minutes pollInterval\n        const count = Math.ceil(moment.duration(endDate.diff(currentDate)).asMinutes() / interval);\n        const results = [];\n\n        for (let i = 0; i < count; i++) {\n            const fDay = this.factors.day[Math.ceil((60 * currentDate.hours() + currentDate.minutes()) / 5)];\n            const fYear = this.factors.year[currentDate.dayOfYear()];\n            const fCentury = this.factors.century[currentDate.year() % 100];\n            results.push({\n                x: currentDate.clone(),\n                y: valueFn([fCentury, fYear, fDay]),\n            });\n            currentDate.add(interval, \"minutes\");\n        }\n\n        return results;\n    }\n\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-chart-docs-time-frame-bar\",\n    templateUrl: \"./chart-docs-time-frame-bar.component.html\",\n})\nexport class ChartDocsTimeFrameBarComponent {\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-chart-docs-time-frame-bar\\\",\\n    templateUrl: \\\"./chart-docs-time-frame-bar.component.html\\\",\\n})\\nexport class ChartDocsTimeFrameBarComponent {\\n}\\n\";","export default \"<charts-test-harness>\\n    <div class=\\\"nui-time-frame-bar-test\\\">\\n        <div class=\\\"m-5\\\" nui-busy [busy]=\\\"busy\\\" style=\\\"border: 1px solid lightgrey;\\\">\\n            <nui-time-frame-bar [timeFrame]=\\\"timeFrame\\\"\\n                                (timeFrameChange)=\\\"updateTimeFrame($event)\\\"\\n                                [historyIndex]=\\\"history.index\\\"\\n                                [minDate]=\\\"fromDate\\\"\\n                                [maxDate]=\\\"toDate\\\"\\n                                (undo)=\\\"zoomUndo()\\\"\\n                                (clear)=\\\"updateTimeFrame()\\\"\\n                                style=\\\"display: block; border-bottom: 1px solid lightgrey;\\\"\\n                                class=\\\"time-frame-bar\\\">\\n                <nui-icon icon=\\\"calendar\\\" class=\\\"pr-3\\\"></nui-icon>\\n                {{timeFrame | timeFrame}}\\n                <nui-quick-picker timeFrameSelection>\\n                    <nui-time-frame-picker></nui-time-frame-picker>\\n                </nui-quick-picker>\\n            </nui-time-frame-bar>\\n            <div class=\\\"nui-chart-layout p-3\\\">\\n                <div class=\\\"axis-label-left nui-text-small\\\"><strong i18n>Average CPU load (%)</strong></div>\\n                <div class=\\\"chart\\\">\\n                    <nui-chart class=\\\"w-100\\\" [chart]=\\\"chart\\\"></nui-chart>\\n                </div>\\n                <div class=\\\"legend\\\">\\n                    <nui-legend seriesUnitLabel=\\\"%\\\"\\n                                [active]=\\\"chartAssist.isLegendActive\\\"\\n                                [interactive]=\\\"true\\\"\\n                                (mouseleave)=\\\"chartAssist.resetVisibleSeries()\\\">\\n                        <nui-legend-series *ngFor=\\\"let legendSeries of chartAssist.legendSeriesSet; trackBy: chartAssist.seriesTrackByFn\\\"\\n                                           [descriptionPrimary]=\\\"legendSeries['name']\\\"\\n                                           (mouseenter)=\\\"chartAssist.emphasizeSeries(legendSeries.id)\\\"\\n                                           [seriesRenderState]=\\\"chartAssist.renderStatesIndex[legendSeries.id]?.state\\\"\\n                                           [isSelected]=\\\"!chartAssist.isSeriesHidden(legendSeries.id)\\\"\\n                                           (isSelectedChange)=\\\"chartAssist.toggleSeries(legendSeries.id, $event)\\\">\\n                            <nui-rich-legend-tile [value]=\\\"chartAssist.getHighlightedValue(legendSeries, 'y')\\\"\\n                                                  [backgroundColor]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\"\\n                                                  [color]=\\\"chartAssist.palette.textColors.get(legendSeries.id)\\\">\\n                                <nui-chart-marker rightEdge\\n                                                  [marker]=\\\"chartAssist.markers.get(legendSeries.id)\\\"\\n                                                  [color]=\\\"chartAssist.palette.standardColors.get(legendSeries.id)\\\">\\n                                </nui-chart-marker>\\n                            </nui-rich-legend-tile>\\n                        </nui-legend-series>\\n                    </nui-legend>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"p-5\\\">\\n            <input id=\\\"delay\\\" name=\\\"delay\\\" type=\\\"checkbox\\\" [checked]=\\\"addDelay\\\" (change)=\\\"addDelay = !addDelay\\\" />\\n            <label for=\\\"delay\\\" class=\\\"pl-2\\\">Add delay to server requests</label>\\n        </div>\\n    </div>\\n</charts-test-harness>\\n\";","export default \"import { AfterContentInit, Component, OnDestroy } from \\\"@angular/core\\\";\\nimport { HistoryStorage, IFilter, IFilteringOutputs, ITimeframe, NoopDataSourceService } from \\\"@nova-ui/bits\\\";\\nimport {\\n    Chart, ChartAssist, getAutomaticDomainWithIncludedInterval, ISetDomainEventPayload, LineAccessors, LinearScale,\\n    LineRenderer, SET_DOMAIN_EVENT, TimeScale, XYGrid, ZoomPlugin,\\n} from \\\"@nova-ui/charts\\\";\\nimport moment from \\\"moment/moment\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { TimeFrameBarDataService } from \\\"./time-frame-bar-data.service\\\";\\n\\n@Component({\\n    selector: \\\"nui-time-frame-bar-test\\\",\\n    templateUrl: \\\"./time-frame-bar-test.component.html\\\",\\n    providers: [NoopDataSourceService, HistoryStorage],\\n})\\nexport class TimeFrameBarTestComponent implements AfterContentInit, OnDestroy {\\n    public fromDate = moment(\\\"2018-05-01 15:00:00\\\").subtract(2, \\\"days\\\");\\n    public toDate = moment(\\\"2018-05-01 15:00:00\\\");\\n\\n    public chart = new Chart(new XYGrid());\\n    public chartAssist: ChartAssist = new ChartAssist(this.chart);\\n\\n    public timeFrame: ITimeframe;\\n    public busy: boolean;\\n    public addDelay: boolean = true;\\n\\n    private xScale = new TimeScale(\\\"time-scale\\\");\\n    private yScale = new LinearScale();\\n    private accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\\n    private renderer = new LineRenderer();\\n    private filteringSubscription: Subscription;\\n\\n    private dataService = new TimeFrameBarDataService();\\n\\n    constructor(public history: HistoryStorage<ITimeframe>,\\n        private dataSourceService: NoopDataSourceService<ITimeframe>) {\\n    }\\n\\n    public ngAfterContentInit() {\\n        this.yScale.domainCalculator = getAutomaticDomainWithIncludedInterval([0, 100]);\\n        this.chart.addPlugins(new ZoomPlugin());\\n\\n        this.filteringSubscription = this.setUpFiltering();\\n\\n        this.chart.getEventBus().getStream(SET_DOMAIN_EVENT).subscribe((event) => {\\n            const payload = <ISetDomainEventPayload>event.data;\\n            const newDomain = payload[this.xScale.id];\\n\\n            this.applyFilters(this.history.save({\\n                startDatetime: moment(newDomain[0]),\\n                endDatetime: moment(newDomain[1]),\\n                selectedPresetId: undefined,\\n            }));\\n        });\\n\\n        this.applyFilters(this.history.save({\\n            startDatetime: this.fromDate,\\n            endDatetime: this.toDate,\\n            selectedPresetId: undefined,\\n        }));\\n    }\\n\\n    public ngOnDestroy() {\\n        if (this.filteringSubscription) {\\n            this.filteringSubscription.unsubscribe();\\n        }\\n    }\\n\\n    public updateTimeFrame(value?: ITimeframe) {\\n        this.applyFilters(this.history.restart(value));\\n    }\\n\\n    public zoomUndo() {\\n        this.applyFilters(this.history.undo());\\n    }\\n\\n    private applyFilters(value: ITimeframe) {\\n        this.busy = true;\\n        this.timeFrame = value;\\n        this.xScale.fixDomain([value.startDatetime.toDate(), value.endDatetime.toDate()]);\\n        this.chart.updateDimensions();\\n        void this.dataSourceService.applyFilters();\\n    }\\n\\n    private setUpFiltering(): any {\\n        this.dataSourceService.registerComponent({\\n            timeframe: {\\n                componentInstance: {\\n                    getFilters: () => <IFilter<ITimeframe>>({\\n                        type: \\\"ITimeframe\\\",\\n                        value: this.timeFrame,\\n                    }),\\n                },\\n            },\\n        });\\n\\n        return this.dataSourceService.outputsSubject.subscribe((data: IFilteringOutputs) => {\\n            const start = data.timeframe.value.startDatetime;\\n            const end = data.timeframe.value.endDatetime;\\n            this.dataService.getChartData(start, end, this.addDelay ? 1000 : 0).subscribe((series) => {\\n                this.chartAssist.update(Object.keys(series).map((key: string) => ({\\n                    id: key,\\n                    name: key,\\n                    data: series[key],\\n                    accessors: this.accessors,\\n                    renderer: this.renderer,\\n                    scales: { x: this.xScale, y: this.yScale },\\n                })));\\n                this.busy = false;\\n            });\\n\\n        });\\n    }\\n}\\n\\n\";"]}