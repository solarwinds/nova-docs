(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"7BBB":function(e,t,a){var o={"./chart-docs-scales.component.html":"QKvx","./chart-docs-scales.component.ts":"Nmns","./chart-docs-scales.module.ts":"Goil","./domains/chart-docs-domains.component.html":"c7pr","./domains/chart-docs-domains.component.ts":"dNNE","./domains/chart-docs-domains.module.ts":"Z/rz","./domains/fixed-domains/fixed-domains.example.component.html":"VIrZ","./domains/fixed-domains/fixed-domains.example.component.ts":"vfx1","./formatters/chart-docs-formatters.component.html":"WdGD","./formatters/chart-docs-formatters.component.ts":"zmJ9","./formatters/chart-docs-formatters.module.ts":"Dzs2","./formatters/tick-formatter/tick-formatter.example.component.html":"nhCc","./formatters/tick-formatter/tick-formatter.example.component.ts":"dkyL"};function n(e){var t=r(e);return a(t)}function r(e){if(!a.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}n.keys=function(){return Object.keys(o)},n.resolve=r,e.exports=n,n.id="7BBB"},eqoo:function(e,t,a){"use strict";a.r(t),a.d(t,"ChartDocsScalesModule",(function(){return i}));var o=a("tyNb"),n=a("Rr1A"),r=a("gKry"),s=a("fXoL");const c=[{path:"",component:(()=>{class e{constructor(){this.scaleDefinition="const xScale = new LinearScale();\n...",this.scaleWithId='const yScale = new LinearScale("percentile");\n...'}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Hb({type:e,selectors:[["nui-chart-docs-scales"]],decls:74,vars:2,consts:[["href","../additional-documentation/advanced-usage/scales/domains.html","target","_parent"],["href","../additional-documentation/advanced-usage/scales/formatters.html","target","_parent"],["href","../classes/Scale.html","target","_blank"],["href","../additional-documentation/advanced-usage/renderers.html","target","_parent"],["href","https://github.com/d3/d3-scale#d3-scale","target","_blank"],["href","../interfaces/IChartSeries.html","target","_blank"],["href","../additional-documentation/advanced-usage/basics.html","target","_parent"],["href","../interfaces/IScale.html","target","_blank"],["href","../classes/LinearScale.html","target","_blank"]],template:function(e,t){1&e&&(s.Tb(0,"h1"),s.Kc(1,"Scales"),s.Sb(),s.Tb(2,"h4"),s.Kc(3,"Subtopics"),s.Sb(),s.Tb(4,"ol"),s.Tb(5,"li"),s.Tb(6,"a",0),s.Kc(7,"Domains"),s.Sb(),s.Sb(),s.Tb(8,"li"),s.Tb(9,"a",1),s.Kc(10,"Formatters"),s.Sb(),s.Sb(),s.Sb(),s.Tb(11,"h1"),s.Kc(12,"Overview"),s.Sb(),s.Tb(13,"p"),s.Tb(14,"code"),s.Tb(15,"a",2),s.Kc(16,"Scale"),s.Sb(),s.Sb(),s.Kc(17," is the abstract projection of your domain specific data value boundaries to screen pixel range. Generally speaking, it lets you to convert any data value into pixel based coordinates on the screen and vice versa. Because of that scales are extremely handy when you build your own "),s.Tb(18,"a",3),s.Kc(19,"Renderer"),s.Sb(),s.Kc(20,". Nova scale is an extended version of "),s.Tb(21,"a",4),s.Kc(22,"D3 Scale"),s.Sb(),s.Kc(23,".\n"),s.Sb(),s.Tb(24,"p"),s.Kc(25," And, they are also used for tick generation and tick label formatting. But, in addition to formatting for tick labels, a scale can have the whole set of "),s.Tb(26,"a",1),s.Kc(27,"Formatters"),s.Sb(),s.Kc(28," to be used for various purposes.\n"),s.Sb(),s.Tb(29,"h2"),s.Kc(30,"Principles"),s.Sb(),s.Tb(31,"p"),s.Kc(32," Every scale is defined by its "),s.Tb(33,"strong"),s.Kc(34,"domain"),s.Sb(),s.Kc(35," and "),s.Tb(36,"strong"),s.Kc(37,"range"),s.Sb(),s.Kc(38,". The range will be set by the chart itself and will represent the amount of screen space that is available for rendering. Meanwhile, the domain is controlled by a data provider (it's you) and allows for plenty of possibilities. Some of those possiblities are described on the dedicated "),s.Tb(39,"a",0),s.Kc(40,"Domains"),s.Sb(),s.Kc(41," page.\n"),s.Sb(),s.Tb(42,"h2"),s.Kc(43,"Usage"),s.Sb(),s.Tb(44,"p"),s.Kc(45," As a user of the chart framework you will usually need to provide a couple of scales with your "),s.Tb(46,"code"),s.Tb(47,"a",5),s.Kc(48,"IChartSeries"),s.Sb(),s.Sb(),s.Kc(49,". Don't know how to do it? You may find it helpful to start with the "),s.Tb(50,"a",6),s.Kc(51,"Chart Basics"),s.Sb(),s.Kc(52," page first.\n"),s.Sb(),s.Tb(53,"p"),s.Kc(54," But, if you're ready to create a scale, just instantiate any class that implements the "),s.Tb(55,"code"),s.Tb(56,"a",7),s.Kc(57,"IScale"),s.Sb(),s.Sb(),s.Kc(58," interface. Let's use "),s.Tb(59,"code"),s.Tb(60,"a",8),s.Kc(61,"LinearScale"),s.Sb(),s.Sb(),s.Kc(62," as an example:\n"),s.Sb(),s.Tb(63,"pre"),s.Kc(64),s.Sb(),s.Tb(65,"h2"),s.Kc(66,"Scale ID"),s.Sb(),s.Tb(67,"p"),s.Kc(68," Scales are reusable and can be shared between multiple charts. Scales are identified by the value of their "),s.Tb(69,"code"),s.Kc(70,"id"),s.Sb(),s.Kc(71," field. It can be passed as a parameter on scale instantiation, otherwise it will be autogenerated.\n"),s.Sb(),s.Tb(72,"pre"),s.Kc(73),s.Sb()),2&e&&(s.Bb(64),s.Lc(t.scaleDefinition),s.Bb(9),s.Lc(t.scaleWithId))},encapsulation:2}),e})(),data:{srlc:{stage:n.R.beta}}},{path:"domains",loadChildren:()=>a.e(26).then(a.bind(null,"3q4r")).then(e=>e.ChartDocsDomainsModule)},{path:"formatters",loadChildren:()=>a.e(27).then(a.bind(null,"82q9")).then(e=>e.ChartDocsFormattersModule)}];let i=(()=>{class e{}return e.\u0275mod=s.Lb({type:e}),e.\u0275inj=s.Kb({factory:function(t){return new(t||e)},providers:[{provide:n.e,useFactory:()=>a("7BBB")}],imports:[[r.X,n.w,o.e.forChild(c)]]}),e})()}}]);