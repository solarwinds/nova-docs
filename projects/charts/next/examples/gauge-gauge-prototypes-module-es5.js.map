{"version":3,"sources":["webpack:///examples/components/demo/development/gauge/component-prototype/gauge-component-prototype.component.less","webpack:///examples/components/demo/development/gauge/component-prototype/gauge-component-prototype.component.ts","webpack:///examples/components/demo/development/gauge/chart-prototype/gauge-test-page.component.html","webpack:///examples/components/demo/development/gauge/chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component.html","webpack:///examples/components/demo/development/gauge/chart-prototype/radial/radial-gauge-chart-prototype.component.html","webpack:///examples/components/demo/development/gauge/chart-prototype/gauge-test-page.component.ts","webpack:///examples/components/demo/development/gauge/chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component.html","webpack:///examples/components/demo/development/gauge/chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component.ts","webpack:///examples/components/demo/development/gauge/chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component.less","webpack:///examples/components/demo/development/gauge/chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component.less","webpack:///examples/components/demo/development/gauge/gauge-prototypes.module.ts","webpack:///examples/components/demo/development/gauge/chart-prototype/radial/radial-gauge-chart-prototype.component.less","webpack:///examples/components/demo/development/gauge/chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component.ts","webpack:///examples/components/demo/development/gauge/component-prototype/gauge-component-prototype.component.html","webpack:///examples/components/demo/development/gauge/chart-prototype/radial/radial-gauge-chart-prototype.component.ts"],"names":["GaugeComponentPrototypeComponent","_viewContainerRef","overlay","overlayPositionBuilder","scrollStrategyOptions","value","_thickness","thresholds","error","warning","val","positionStrategy","apply","templatePortal","templatePortalContent","positions","overlayX","overlayY","originX","originY","flexibleConnectedTo","gaugeWithContent","control","withPositions","withFlexibleDimensions","withPush","overlayRef","create","scrollStrategy","close","attach","selector","template","GaugeTestPageComponent","maxValue","thickness","LinearGaugeChartHorizontalPrototypeComponent","gaugeService","max","changes","firstChange","chartAssist","chart","getGrid","config","dimension","height","updateDimensions","update","updateSeriesSet","seriesSet","grid","Horizontal","assembleSeriesSet","routes","path","component","data","srlc","hideIndicator","GaugePrototypesModule","declarations","imports","forChild","LinearGaugeChartVerticalPrototypeComponent","width","Vertical","RadialGaugeChartPrototypeComponent","annularWidth","updateAnnularWidth","contentPlugin","addPlugin","labelConfig","gridMargin","top","right","bottom","left","Radial","setThresholdLabelFormatter","d","forEach","series","renderer"],"mappings":"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","file":"gauge-gauge-prototypes-module-es5.js","sourcesContent":["export default \".radial-gauge__inner-content {\\n  font-weight: 600;\\n  font-family: \\\"Comic Sans MS\\\";\\n  font-size: 42px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhdWdlLWNvbXBvbmVudC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxnQkFBQTtFQUNBLDRCQUFBO0VBQ0EsZUFBQTtBQURKIiwiZmlsZSI6ImdhdWdlLWNvbXBvbmVudC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4ucmFkaWFsLWdhdWdlX19pbm5lci1jb250ZW50IHtcbiAgICBmb250LXdlaWdodDogQG51aS1mb250LXdlaWdodC1zZW1pYm9sZDtcbiAgICBmb250LWZhbWlseTogXCJDb21pYyBTYW5zIE1TXCI7XG4gICAgZm9udC1zaXplOiA0MnB4O1xufVxuIl19 */\";","import { ConnectionPositionPair, Overlay, OverlayPositionBuilder, PositionStrategy, ScrollStrategyOptions } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport { AfterViewInit, Component, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { GaugeComponent } from \"@nova-ui/charts\";\n\n/** @ignore */\n@Component({\n    selector: \"gauge-component-prototype\",\n    templateUrl: \"./gauge-component-prototype.component.html\",\n    styleUrls: [\"./gauge-component-prototype.component.less\"],\n})\nexport class GaugeComponentPrototypeComponent implements AfterViewInit {\n    public value = 42;\n    private _thickness = 30;\n\n    public get thickness() {\n        return this._thickness;\n    }\n\n    public set thickness(val: number) {\n        this._thickness = val;\n        if (this.positionStrategy) {\n            this.positionStrategy.apply();\n        }\n    }\n\n    public thresholds = {\n        error: 90,\n        warning: 65,\n    };\n\n    public positionStrategy: PositionStrategy;\n\n    public templatePortal: TemplatePortal;\n\n    @ViewChild(\"templatePortalContent\") templatePortalContent: TemplateRef<any>;\n    @ViewChild(\"withConnectedContent\") gaugeWithContent: GaugeComponent;\n\n    constructor(private _viewContainerRef: ViewContainerRef,\n                private overlay: Overlay,\n                private overlayPositionBuilder: OverlayPositionBuilder,\n                private scrollStrategyOptions: ScrollStrategyOptions) {\n    }\n\n    ngAfterViewInit(): void {\n        this.templatePortal = new TemplatePortal(this.templatePortalContent, this._viewContainerRef);\n        const positions: ConnectionPositionPair[] = [\n            {\n                overlayX: \"center\",\n                overlayY: \"center\",\n                originX: \"center\",\n                originY: \"center\",\n            },\n        ];\n        this.positionStrategy = this.overlayPositionBuilder\n            .flexibleConnectedTo(this.gaugeWithContent.control)\n            .withPositions(positions)\n            .withFlexibleDimensions(true)\n            .withPush(true);\n\n        const overlayRef = this.overlay.create({\n            positionStrategy: this.positionStrategy,\n            scrollStrategy: this.scrollStrategyOptions.close(),\n        });\n        overlayRef.attach(this.templatePortal);\n    }\n}\n","export default \"<charts-test-harness>\\n    <div class=\\\"d-flex\\\">\\n        <radial-gauge-chart-prototype [value]=\\\"value\\\" [annularWidth]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" [max]=\\\"maxValue\\\"></radial-gauge-chart-prototype>\\n        <linear-gauge-vertical-chart-prototype class=\\\"ml-5\\\" [value]=\\\"value\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" [max]=\\\"maxValue\\\"></linear-gauge-vertical-chart-prototype>\\n        <linear-gauge-horizontal-chart-prototype class=\\\"ml-5\\\" [value]=\\\"value\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" [max]=\\\"maxValue\\\"></linear-gauge-horizontal-chart-prototype>\\n    </div>\\n\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"valueInput\\\">\\n            Value\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n               [(ngModel)]=\\\"value\\\"\\n               [minValue]=\\\"0\\\"\\n               [maxValue]=\\\"maxValue\\\"\\n               customBoxWidth=\\\"75px\\\"\\n               name=\\\"valueInput\\\"></nui-textbox-number>\\n    </div>\\n    <div class=\\\"mb-2\\\">\\n        <label for=\\\"thicknessInput\\\">\\n            Thickness\\n        </label>\\n        <br />\\n        <nui-textbox-number type=\\\"number\\\"\\n               [(ngModel)]=\\\"thickness\\\"\\n               [minValue]=\\\"10\\\"\\n               [maxValue]=\\\"30\\\"\\n               customBoxWidth=\\\"75px\\\"\\n               name=\\\"thicknessInput\\\"></nui-textbox-number>\\n    </div>\\n</charts-test-harness>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n\\n    <nui-chart-donut-content style=\\\"position: absolute;\\\"\\n                             [plugin]=\\\"contentPlugin\\\">\\n        <div class=\\\"h-100 w-100 d-flex flex-column justify-content-center align-items-center text-center\\\">\\n            <div class=\\\"d-inline-block\\\" nuiZoomContent [zoomRatio]=\\\"0.65\\\">\\n                {{value | number:'1.0-0'}}\\n            </div>\\n            <div class=\\\"content-label\\\">Network Latency</div>\\n            <div class=\\\"content-label\\\">(ms)</div>\\n        </div>\\n    </nui-chart-donut-content>\\n</div>\\n\";","import { Component } from \"@angular/core\";\nimport { GAUGE_THICKNESS_DEFAULT, IGaugeThreshold } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-test-page\",\n    templateUrl: \"./gauge-test-page.component.html\",\n})\nexport class GaugeTestPageComponent {\n    public value = 95;\n    public maxValue = 200;\n    public thickness = GAUGE_THICKNESS_DEFAULT;\n    public thresholds: IGaugeThreshold[] = [\n        { value: 100 },\n        { value: 112 },\n        { value: 125 },\n        { value: 150 },\n        { value: 187 },\n        { value: 200 },\n    ];\n\n    constructor() {\n        // this.thresholds = new Array(200).fill(null).map((e, i) => ({ value: i }));\n        // this.thresholds = [{ value: 187 }/* , { value: 50 }, { value: 75 },\n        // { value: 100 }, { value: 125 }, { value: 150 }, { value: 175 }, { value: 200 } */];\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-chart class=\\\"chart d-block\\\" [chart]=\\\"chartAssist.chart\\\"></nui-chart>\\n</div>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    BarHorizontalGridConfig,\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeService,\n    GAUGE_THICKNESS_DEFAULT,\n    HorizontalBarAccessors,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeThreshold,\n    linearGaugeGridConfig,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-horizontal-chart-prototype\",\n    templateUrl: \"./linear-gauge-horizontal-chart-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-horizontal-chart-prototype.component.less\"],\n})\nexport class LinearGaugeChartHorizontalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public value = 42;\n    @Input() public max: number = 200;\n    @Input() public thickness = GAUGE_THICKNESS_DEFAULT;\n    @Input() public thresholds: IGaugeThreshold[];\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    constructor(private gaugeService: GaugeService) { }\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeChartHorizontalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.value && !changes.value.firstChange)) {\n            if (changes.thickness) {\n                this.chartAssist.chart.getGrid().config().dimension.height(this.thickness);\n                this.chartAssist.chart.updateDimensions();\n            }\n            this.chartAssist.update(this.gaugeService.updateSeriesSet(this.value, this.max, this.thresholds, this.seriesSet));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.seriesSet = this.gaugeService.assembleSeriesSet(this.value, this.max, this.thresholds, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS1ob3Jpem9udGFsLWNoYXJ0LXByb3RvdHlwZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUFESiIsImZpbGUiOiJsaW5lYXItZ2F1Z2UtaG9yaXpvbnRhbC1jaGFydC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIHdpZHRoOiAyMDBweDtcbn1cbiJdfQ== */\";","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVhci1nYXVnZS12ZXJ0aWNhbC1jaGFydC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FBREoiLCJmaWxlIjoibGluZWFyLWdhdWdlLXZlcnRpY2FsLWNoYXJ0LXByb3RvdHlwZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jaGFydCB7XG4gICAgaGVpZ2h0OiAyMDBweDtcbn1cbiJdfQ== */\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiCommonModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { GaugeTestPageComponent } from \"./chart-prototype/gauge-test-page.component\";\nimport { LinearGaugeChartHorizontalPrototypeComponent } from \"./chart-prototype/horizontal/linear-gauge-horizontal-chart-prototype.component\";\nimport { RadialGaugeChartPrototypeComponent } from \"./chart-prototype/radial/radial-gauge-chart-prototype.component\";\nimport { LinearGaugeChartVerticalPrototypeComponent } from \"./chart-prototype/vertical/linear-gauge-vertical-chart-prototype.component\";\nimport { GaugeComponentPrototypeComponent } from \"./component-prototype/gauge-component-prototype.component\";\n\nconst routes: Routes = [\n    {\n        path: \"chart\",\n        component: GaugeTestPageComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: \"component\",\n        component: GaugeComponentPrototypeComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        GaugeComponentPrototypeComponent,\n        LinearGaugeChartHorizontalPrototypeComponent,\n        LinearGaugeChartVerticalPrototypeComponent,\n        RadialGaugeChartPrototypeComponent,\n        GaugeTestPageComponent,\n    ],\n    imports: [\n        NuiCommonModule,\n        NuiTextboxModule,\n        DemoCommonModule,\n        NuiChartsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class GaugePrototypesModule {\n}\n","export default \".chart {\\n  width: 280px;\\n  height: 280px;\\n}\\n.content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlhbC1nYXVnZS1jaGFydC1wcm90b3R5cGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtBQURKO0FBSUE7RUFDSSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0NBQUE7QUFGSiIsImZpbGUiOiJyYWRpYWwtZ2F1Z2UtY2hhcnQtcHJvdG90eXBlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjgwcHg7XG4gICAgaGVpZ2h0OiAyODBweDtcbn1cblxuLmNvbnRlbnQtbGFiZWwge1xuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6IHZhcigtLW51aS1jb2xvci10ZXh0LXNlY29uZGFyeSk7XG59XG4iXX0= */\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    BarGridConfig,\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeService,\n    GAUGE_THICKNESS_DEFAULT,\n    HorizontalBarAccessors,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeThreshold,\n    linearGaugeGridConfig,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"linear-gauge-vertical-chart-prototype\",\n    templateUrl: \"./linear-gauge-vertical-chart-prototype.component.html\",\n    styleUrls: [\"./linear-gauge-vertical-chart-prototype.component.less\"],\n})\nexport class LinearGaugeChartVerticalPrototypeComponent implements OnChanges, OnInit {\n    @Input() public value = 42;\n    @Input() public max: number = 200;\n    @Input() public thickness = GAUGE_THICKNESS_DEFAULT;\n    @Input() public thresholds: IGaugeThreshold[];\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    constructor(private gaugeService: GaugeService) { }\n\n    public ngOnChanges(changes: ComponentChanges<LinearGaugeChartVerticalPrototypeComponent>) {\n        if ((changes.thickness && !changes.thickness.firstChange) || (changes.value && !changes.value.firstChange)) {\n            if (changes.thickness) {\n                this.chartAssist.chart.getGrid().config().dimension.width(this.thickness);\n                this.chartAssist.chart.updateDimensions();\n            }\n            this.chartAssist.update(this.gaugeService.updateSeriesSet(this.value, this.max, this.thresholds, this.seriesSet));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical, this.thickness) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n\n        this.seriesSet = this.gaugeService.assembleSeriesSet(this.value, this.max, this.thresholds, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"horizontal\\\"></nui-gauge>\\n</div>\\n<div class=\\\"d-flex\\\">\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"radial\\\"></nui-gauge>\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"radial\\\" #withConnectedContent></nui-gauge>\\n    <nui-gauge [value]=\\\"value\\\" [max]=\\\"100\\\" [thickness]=\\\"thickness\\\" [thresholds]=\\\"thresholds\\\" mode=\\\"radial\\\"></nui-gauge>\\n</div>\\n\\n<div>\\n    <label for=\\\"valueInput\\\">\\n        Value\\n    </label>\\n    <br/>\\n    <input type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" [(ngModel)]=\\\"value\\\" id=\\\"valueInput\\\">\\n</div>\\n\\n<div>\\n    <label for=\\\"thicknessInput\\\">\\n        Thickness\\n    </label>\\n    <br/>\\n    <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" [(ngModel)]=\\\"thickness\\\" id=\\\"thicknessInput\\\">\\n</div>\\n\\n<ng-template #templatePortalContent>\\n    <span class=\\\"radial-gauge__inner-content\\\">\\n        {{value}}\\n    </span>\\n</ng-template>\\n\";","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { ComponentChanges } from \"@nova-ui/bits\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    GaugeMode,\n    GaugeService,\n    GAUGE_THICKNESS_DEFAULT,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeThreshold,\n    IRadialRendererConfig,\n    radial,\n    RadialGaugeThresholdLabelsPlugin,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"radial-gauge-chart-prototype\",\n    templateUrl: \"./radial-gauge-chart-prototype.component.html\",\n    styleUrls: [\"./radial-gauge-chart-prototype.component.less\"],\n})\nexport class RadialGaugeChartPrototypeComponent implements OnChanges, OnInit {\n    @Input() public value = 42;\n    @Input() public max: number = 200;\n    @Input() public annularWidth = GAUGE_THICKNESS_DEFAULT;\n    @Input() public thresholds: IGaugeThreshold[];\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    constructor(private gaugeService: GaugeService) { }\n\n    public ngOnChanges(changes: ComponentChanges<RadialGaugeChartPrototypeComponent>) {\n        if ((changes.annularWidth && !changes.annularWidth.firstChange) || (changes.value && !changes.value.firstChange)) {\n            if (changes.annularWidth) {\n                this.updateAnnularWidth();\n            }\n            this.chartAssist.update(this.gaugeService.updateSeriesSet(this.value, this.max, this.thresholds, this.seriesSet));\n        }\n    }\n\n    public ngOnInit() {\n        const grid = radialGrid();\n        this.chartAssist = new ChartAssist(new Chart(grid), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        const labelConfig = {\n            gridMargin: { top: 40, right: 40, bottom: 40, left: 40 },\n        };\n        this.chartAssist.chart.addPlugin(new RadialGaugeThresholdLabelsPlugin(labelConfig));\n\n        this.seriesSet = this.gaugeService.assembleSeriesSet(this.value, this.max, this.thresholds, GaugeMode.Radial);\n        this.seriesSet = this.gaugeService.setThresholdLabelFormatter((d: string) => `${d}MS`, this.seriesSet);\n\n        this.updateAnnularWidth();\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private updateAnnularWidth() {\n        this.seriesSet.forEach(series => {\n            (series.renderer.config as IRadialRendererConfig).annularWidth = this.annularWidth;\n        });\n    }\n}\n"]}