{"version":3,"sources":["./examples/components/demo/development/chart-collection/chart-collection-test/chart-collection-test.component.ts","./examples/components/demo/development/chart-collection/chart-collection-example.module.ts","./examples/components/demo/development/chart-collection/chart-collection-test/chart-collection-test.component.html"],"names":[],"mappings":"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","file":"chart-collection-chart-collection-example-module-es2015.js","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, OnInit, QueryList, ViewChildren } from \"@angular/core\";\nimport {\n    Chart, ChartAssist, ChartComponent, IAccessors, IChart, IChartAssistSeries, LineAccessors, LinearScale, LineRenderer, Scales, TimeScale, XYGrid\n} from \"@nova-ui/charts\";\n\nimport { DataGenerator } from \"../../../../../data-generator\";\n\ninterface IMyChart {\n    chart: IChart;\n    chartAssist: ChartAssist;\n    scales: Scales;\n    renderer: LineRenderer;\n    accessors: LineAccessors;\n}\n\n/**\n * This is here just to test a prototype of angular component, that will use new chart core\n *\n * @ignore\n */\n@Component({\n    selector: \"nui-chart-collection-test\",\n    templateUrl: \"./chart-collection-test.component.html\",\n})\nexport class ChartCollectionTestComponent implements OnInit, AfterViewInit {\n    @ViewChildren(ChartComponent) charts: QueryList<ChartComponent>;\n\n    public myCharts: IMyChart[] = [];\n    private chartCount = 2;\n\n    constructor(private changeDetection: ChangeDetectorRef) {\n        for (let i = 0; i < this.chartCount; i++) {\n            const chart = new Chart(new XYGrid());\n\n            const myChart = {\n                chart,\n                chartAssist: new ChartAssist(chart),\n                scales: { x: new TimeScale(\"x\"), y: new LinearScale() },\n                renderer: new LineRenderer(),\n                accessors: new LineAccessors(),\n            };\n            this.myCharts.push(myChart);\n        }\n    }\n\n    public ngOnInit() {\n    }\n\n    public ngAfterViewInit() {\n        this.myCharts.forEach((myChart, index: number) => {\n            myChart.chartAssist.update(this.generateChartAssistSeriesSet(myChart, 4, index));\n        });\n        this.changeDetection.detectChanges();\n    }\n\n    private generateChartAssistSeriesSet(myChart: IMyChart, dataSeriesCount: number, index: number): IChartAssistSeries<IAccessors>[] {\n        const timeLineSeriesSet = this.generateDataSeriesSet(dataSeriesCount, index);\n\n        return timeLineSeriesSet.map(dataSeries => ({\n            ...dataSeries,\n            scales: myChart.scales,\n            renderer: myChart.renderer,\n            accessors: myChart.accessors,\n            showInLegend: true,\n        }));\n    }\n\n    private generateDataSeriesSet(dataSeriesCount: number, chartIndex: number) {\n        const chartNumber = chartIndex + 1;\n        return Array.from(Array(dataSeriesCount).keys()).map((i) => {\n            const seriesNumber = i + 1;\n            return {\n                id: `series-${chartNumber}-${seriesNumber}`,\n                name: `Series ${chartNumber}-${seriesNumber}`,\n                data: DataGenerator.mockTimeLineData(seriesNumber * 10),\n            };\n        });\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NuiDividerModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { ChartCollectionTestComponent } from \"./chart-collection-test/chart-collection-test.component\";\n\nconst collectionRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartCollectionTestComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartCollectionTestComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        NuiChartsModule,\n        NuiDividerModule,\n        RouterModule.forChild(collectionRoutes),\n    ],\n})\nexport class ChartCollectionExampleModule {\n}\n","export default \"<div [style.min-height]=\\\"150\\\" *ngFor=\\\"let myChart of myCharts; let i = index\\\">\\n    <div class=\\\"d-flex w-100 h-100\\\">\\n        <nui-chart class=\\\"w-100\\\" nuiChartCollectionId=\\\"1\\\"\\n                   [chart]=\\\"myChart.chart\\\"></nui-chart>\\n    </div>\\n    <nui-divider *ngIf=\\\"myCharts.length - 1 > i\\\"></nui-divider>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}