{"version":3,"sources":["webpack:///examples/components/demo/chart-types/gauge/donut-with-content/donut-gauge-with-content-example.component.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?b693","webpack:///examples/components/demo/chart-types/gauge/donut-basic/donut-gauge-basic-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.less?62ae","webpack:///examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/chart-docs-gauge.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-content/donut-gauge-with-content-example.component.less?dbd0","webpack:///examples/components/demo/chart-types/gauge/visual-test/gauge-visual-test.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-basic/donut-gauge-basic-example.component.less?a351","webpack:///examples/components/demo/chart-types/gauge/visual-test/vertical/vertical-gauge-tester.component.less?65a4","webpack:///examples/components/demo/chart-types/gauge/visual-test/donut/donut-gauge-tester.component.ts","webpack:///examples/components/demo/chart-types/gauge/donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.ts","webpack:///examples/components/demo/chart-types/gauge/visual-test/horizontal/horizontal-gauge-tester.component.less?e589","webpack:///examples/components/demo/chart-types/gauge/donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.less?26ec","webpack:///examples/components/demo/chart-types/gauge/chart-docs-gauge.module.ts"],"names":["DonutGaugeWithContentExampleComponent","initialValue","gaugeConfig","getGaugeConfig","chartAssist","contentPlugin","chart","addPlugin","seriesSet","assembleSeriesSet","Donut","update","value","updateSeriesSet","max","thresholds","enableThresholdMarkers","selector","template","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","DonutGaugeBasicExampleComponent","VerticalGaugeTesterComponent","grid","Vertical","ChartDocsGaugeComponent","GaugeVisualTestComponent","lowValue","mediumValue","highValue","HorizontalGaugeTesterComponent","Horizontal","DonutGaugeTesterComponent","size","DonutGaugeWithThresholdMarkersExampleComponent","exampleRoutes","path","component","data","showThemeSwitcher","ChartDocsGaugeModule","declarations","imports","forChild","providers","provide","useFactory"],"mappings":"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","file":"gauge-chart-docs-gauge-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-content-example\",\n    templateUrl: \"./donut-gauge-with-content-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-content-example.component.less\"],\n})\nexport class DonutGaugeWithContentExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit() {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the plugin for the inner content\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number) {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: [100, 158],\n            enableThresholdMarkers: true,\n        };\n    }\n}\n","var map = {\n\t\"./chart-docs-gauge.component.html\": \"ZWN/\",\n\t\"./chart-docs-gauge.component.ts\": \"2DII\",\n\t\"./chart-docs-gauge.module.ts\": \"ZDgL\",\n\t\"./donut-basic/donut-gauge-basic-example.component.html\": \"R/Os\",\n\t\"./donut-basic/donut-gauge-basic-example.component.less\": \"ZVh5\",\n\t\"./donut-basic/donut-gauge-basic-example.component.ts\": \"qaJP\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.html\": \"2Th4\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.less\": \"MnH5\",\n\t\"./donut-with-content/donut-gauge-with-content-example.component.ts\": \"4fWi\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.html\": \"yMj0\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.less\": \"3me9\",\n\t\"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component.ts\": \"k4Bf\",\n\t\"./visual-test/donut/donut-gauge-tester.component.html\": \"3Isn\",\n\t\"./visual-test/donut/donut-gauge-tester.component.less\": \"WISq\",\n\t\"./visual-test/donut/donut-gauge-tester.component.ts\": \"wITR\",\n\t\"./visual-test/gauge-visual-test.component.html\": \"m1aH\",\n\t\"./visual-test/gauge-visual-test.component.ts\": \"d56P\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.html\": \"CqTf\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.less\": \"QoLo\",\n\t\"./visual-test/horizontal/horizontal-gauge-tester.component.ts\": \"Nchi\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.html\": \"OzOS\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.less\": \"rphd\",\n\t\"./visual-test/vertical/vertical-gauge-tester.component.ts\": \"WxU7\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"AVdE\";","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-basic-example\",\n    templateUrl: \"./donut-gauge-basic-example.component.html\",\n    styleUrls: [\"./donut-gauge-basic-example.component.less\"],\n})\nexport class DonutGaugeBasicExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit() {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Assembling the series\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number) {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n        };\n    }\n}\n","export default \".content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQ0FBQTtBQURKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJAbm92YS11aS9iaXRzL3Nkay9sZXNzL251aS1mcmFtZXdvcmstdmFyaWFibGVzXCI7XG5cbi5jb250ZW50LWxhYmVsIHtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1udWktY29sb3ItdGV4dC1zZWNvbmRhcnkpO1xufVxuIl19 */\";","import { Component, Input, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"vertical-gauge-tester\",\n    templateUrl: \"./vertical-gauge-tester.component.html\",\n    styleUrls: [\"./vertical-gauge-tester.component.less\"],\n})\nexport class VerticalGaugeTesterComponent implements OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Vertical) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n        this.chartAssist.chart.addPlugin(new LinearGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Vertical);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-chart-docs-gauge\",\n    templateUrl: \"./chart-docs-gauge.component.html\",\n})\nexport class ChartDocsGaugeComponent {\n}\n","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n.content-label {\\n  line-height: 14px;\\n  font-size: 11px;\\n  font-weight: 400;\\n  text-transform: uppercase;\\n  color: var(--nui-color-text-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtY29udGVudC1leGFtcGxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFESjtBQUlBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLHNDQUFBO0FBRkoiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC1jb250ZW50LWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgd2lkdGg6IDI1MHB4O1xufVxuXG4uY29udGVudC1sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogdmFyKC0tbnVpLWNvbG9yLXRleHQtc2Vjb25kYXJ5KTtcbn1cbiJdfQ== */\";","import { Component } from \"@angular/core\";\nimport { IGaugeConfig } from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"gauge-visual-test\",\n    templateUrl: \"./gauge-visual-test.component.html\",\n})\nexport class GaugeVisualTestComponent {\n    public lowValue = 42;\n    public mediumValue = 130;\n    public highValue = 178;\n\n    public getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n            thresholds: [100, 158],\n            enableThresholdMarkers: true,\n        };\n    }\n }\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    linearGaugeGridConfig,\n    LinearGaugeLabelsPlugin,\n    stack,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"horizontal-gauge-tester\",\n    templateUrl: \"./horizontal-gauge-tester.component.html\",\n    styleUrls: [\"./horizontal-gauge-tester.component.less\"],\n})\nexport class HorizontalGaugeTesterComponent implements OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n\n    public chartAssist: ChartAssist;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit() {\n        const grid = new XYGrid(linearGaugeGridConfig(GaugeMode.Horizontal) as XYGridConfig);\n        const chart = new Chart(grid);\n\n        this.chartAssist = new ChartAssist(chart, stack);\n        this.chartAssist.chart.addPlugin(new LinearGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Horizontal);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","export default \".chart {\\n  height: 200px;\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6ImRvbnV0LWdhdWdlLWJhc2ljLWV4YW1wbGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuIl19 */\";","export default \".chart {\\n  height: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2FsLWdhdWdlLXRlc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESiIsImZpbGUiOiJ2ZXJ0aWNhbC1nYXVnZS10ZXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiQG5vdmEtdWkvYml0cy9zZGsvbGVzcy9udWktZnJhbWV3b3JrLXZhcmlhYmxlc1wiO1xuXG4uY2hhcnQge1xuICAgIGhlaWdodDogMjAwcHg7XG59XG4iXX0= */\";","import { Component, Input, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    ChartDonutContentPlugin,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-tester\",\n    templateUrl: \"./donut-gauge-tester.component.html\",\n    styleUrls: [\"./donut-gauge-tester.component.less\"],\n})\nexport class DonutGaugeTesterComponent implements OnInit {\n    @Input() public gaugeConfig: IGaugeConfig;\n    @Input() public size = 250;\n\n    public chartAssist: ChartAssist;\n    public contentPlugin: ChartDonutContentPlugin;\n    public seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit() {\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n        this.contentPlugin = new ChartDonutContentPlugin();\n        this.chartAssist.chart.addPlugin(this.contentPlugin);\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n        this.chartAssist.update(this.seriesSet);\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart,\n    ChartAssist,\n    DonutGaugeLabelsPlugin,\n    GaugeMode,\n    GaugeUtil,\n    IAccessors,\n    IChartAssistSeries,\n    IDataSeries,\n    IGaugeConfig,\n    radial,\n    radialGrid\n} from \"@nova-ui/charts\";\n\n@Component({\n    selector: \"donut-gauge-with-threshold-markers-example\",\n    templateUrl: \"./donut-gauge-with-threshold-markers-example.component.html\",\n    styleUrls: [\"./donut-gauge-with-threshold-markers-example.component.less\"],\n})\nexport class DonutGaugeWithThresholdMarkersExampleComponent implements OnInit {\n    public chartAssist: ChartAssist;\n    public gaugeConfig: IGaugeConfig;\n\n    private seriesSet: IChartAssistSeries<IAccessors>[];\n\n    public ngOnInit() {\n        // Setting up the gauge config\n        const initialValue = 128;\n        this.gaugeConfig = this.getGaugeConfig(initialValue);\n\n        // Creating the chart\n        this.chartAssist = new ChartAssist(new Chart(radialGrid()), radial);\n\n        // Adding the labels plugin\n        this.chartAssist.chart.addPlugin(new DonutGaugeLabelsPlugin());\n\n        // Assembling the series set\n        this.seriesSet = GaugeUtil.assembleSeriesSet(this.gaugeConfig, GaugeMode.Donut);\n\n        // Updating the chart\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    public onValueChange(value: number) {\n        // Updating the gauge config\n        this.gaugeConfig = this.getGaugeConfig(value);\n\n        // Updating the series set with the new config\n        this.seriesSet = GaugeUtil.updateSeriesSet(this.seriesSet, this.gaugeConfig);\n\n        // Updating the chart with the updated series set\n        this.chartAssist.update(this.seriesSet);\n    }\n\n    private getGaugeConfig(value: number): IGaugeConfig {\n        return {\n            value,\n            max: 200,\n\n            // Enabling the thresholds\n            thresholds: [100, 158],\n\n            // Enabling the threshold markers\n            enableThresholdMarkers: true,\n\n            // ** Optional color accessor override **\n            // quantityColorAccessor: (data: any, i: number, series: number[], dataSeries: IDataSeries<IAccessors>) => {\n            //     if (this.gaugeConfig?.thresholds && this.gaugeConfig.thresholds[1] <= data.value) {\n            //         return \"purple\";\n            //     }\n            //     if (this.gaugeConfig?.thresholds && this.gaugeConfig.thresholds[0] <= data.value) {\n            //         return \"pink\";\n            //     }\n            //     return \"green\";\n            // },\n        };\n    }\n}\n","export default \".chart {\\n  width: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQURKIiwiZmlsZSI6Imhvcml6b250YWwtZ2F1Z2UtdGVzdGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIkBub3ZhLXVpL2JpdHMvc2RrL2xlc3MvbnVpLWZyYW1ld29yay12YXJpYWJsZXNcIjtcblxuLmNoYXJ0IHtcbiAgICB3aWR0aDogMjAwcHg7XG59XG4iXX0= */\";","export default \".chart {\\n  height: 250px;\\n  width: 250px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbnV0LWdhdWdlLXdpdGgtdGhyZXNob2xkLW1hcmtlcnMtZXhhbXBsZS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiZG9udXQtZ2F1Z2Utd2l0aC10aHJlc2hvbGQtbWFya2Vycy1leGFtcGxlLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXJ0IHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbn1cbiJdfQ== */\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiCommonModule, NuiDocsModule, NuiFormFieldModule, NuiIconModule, NuiMessageModule, NuiTextboxModule } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { DemoCommonModule } from \"../../common/demo-common.module\";\n\nimport { ChartDocsGaugeComponent } from \"./chart-docs-gauge.component\";\nimport { GaugeVisualTestComponent } from \"./visual-test/gauge-visual-test.component\";\nimport { HorizontalGaugeTesterComponent } from \"./visual-test/horizontal/horizontal-gauge-tester.component\";\nimport { DonutGaugeTesterComponent } from \"./visual-test/donut/donut-gauge-tester.component\";\nimport { VerticalGaugeTesterComponent } from \"./visual-test/vertical/vertical-gauge-tester.component\";\nimport { DonutGaugeBasicExampleComponent } from \"./donut-basic/donut-gauge-basic-example.component\";\nimport { DonutGaugeWithContentExampleComponent } from \"./donut-with-content/donut-gauge-with-content-example.component\";\nimport { DonutGaugeWithThresholdMarkersExampleComponent } from \"./donut-with-threshold-markers/donut-gauge-with-threshold-markers-example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsGaugeComponent,\n        data: {\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"visual-test\",\n        component: GaugeVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-basic\",\n        component: DonutGaugeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-threshold-markers\",\n        component: DonutGaugeWithThresholdMarkersExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"donut-with-content\",\n        component: DonutGaugeWithContentExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsGaugeComponent,\n        GaugeVisualTestComponent,\n        HorizontalGaugeTesterComponent,\n        DonutGaugeTesterComponent,\n        DonutGaugeBasicExampleComponent,\n        DonutGaugeWithContentExampleComponent,\n        DonutGaugeWithThresholdMarkersExampleComponent,\n        VerticalGaugeTesterComponent,\n    ],\n    imports: [\n        DemoCommonModule,\n        FormsModule,\n        NuiChartsModule,\n        NuiCommonModule,\n        NuiFormFieldModule,\n        NuiIconModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsGaugeModule {\n}\n"]}