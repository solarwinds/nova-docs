{"version":3,"sources":["./examples/components/demo/chart-types/spark/chart-docs-spark.module.ts","./examples/components/demo/chart-types/spark/chart-docs-spark.component.ts","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?2aee","webpack:///./examples/components/demo/chart-types/spark/spark-chart-stroke-test/area-spark-minimal-test.component.less?3db3","./examples/components/demo/chart-types/spark/spark-chart-legend/spark-chart-legend.example.component.ts","./examples/components/demo/chart-types/spark/spark-chart-multiple/spark-chart-multiple.example.component.ts","./examples/components/demo/chart-types/spark/spark-chart-test/spark-chart-test.component.ts","./examples/components/demo/chart-types/spark/spark-chart-stroke-test/area-spark-minimal-test.component.ts","./examples/components/demo/chart-types/spark/spark-chart-table/spark-chart-table.example.component.ts","./examples/components/demo/chart-types/spark/spark-chart-basic/spark-chart-basic.example.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACI;AACU;AACqD;AAC1D;AAEqB;AACmC;AACG;AACM;AACP;AACF;AAClB;AAExF,MAAM,aAAa,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAuB;QAClC,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,OAAO,EAAE,uDAAS,CAAC,IAAI;aAC1B;YACD,iBAAiB,EAAE,IAAI;SAC1B;KACJ;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,sHAA+B;QAC1C,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,yHAAgC;QAC3C,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,+HAAkC;QAC7C,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,uHAA+B;QAC1C,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,qGAAuB;QAClC,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;CACJ,CAAC;IAwBW,oBAAoB,SAApB,oBAAoB;CAChC;AADY,oBAAoB;IAtBhC,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,mFAAuB;YACvB,sHAA+B;YAC/B,yHAAgC;YAChC,+HAAkC;YAClC,uHAA+B;YAC/B,qGAAuB;YACvB,yHAA6B;SAChC;QACD,OAAO,EAAE;YACL,0DAAW;YACX,+DAAe;YACf,2DAAa;YACb,8DAAgB;YAChB,4DAAc;YACd,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;SACvC;QACD,SAAS,EAAE;YACP,EAAE,OAAO,EAAE,6DAAe,EAAE,UAAU,EAAE,GAAG,EAAE,CAAO,2BAAgE,EAAE;SACzH;KACJ,CAAC;GACW,oBAAoB,CAChC;AADgC;;;;;;;;;;;;;;;;;;;;AC9FS;IAM7B,uBAAuB,SAAvB,uBAAuB;;QACzB,sBAAiB,GAAG;IAC3B,CAAC;QACM,6BAAwB,GAAG;IAClC,CAAC;QACM,qBAAgB,GAAG;;OAEvB,CAAC;IACR,CAAC;CAAA;AARY,uBAAuB;IAJnC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,6FAAgD;KACnD,CAAC;GACW,uBAAuB,CAQnC;AARmC;;;;;;;;;;;;ACNpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;ACrCA;AAAe,kFAAmB,8DAA8D,+DAA+D,iBAAiB,iBAAiB,GAAG,+CAA+C,miBAAmiB,E;;;;;;;;;;;;;;;;;;;;;;ACApuB;AAC+F;AAC9G;IAMtB,gCAAgC,SAAhC,gCAAgC;IAGlC,QAAQ;QACX,oBAAoB;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,gEAAgB,EAAE,CAAC;QAE1C,MAAM,SAAS,GAAG,IAAI,6DAAa,EAAE,CAAC;QACtC,MAAM,QAAQ,GAAG,IAAI,4DAAY,EAAE,CAAC;QACpC,MAAM,MAAM,GAAc;YACtB,CAAC,EAAE,IAAI,yDAAS,EAAE;YAClB,CAAC,EAAE,IAAI,2DAAW,EAAE;SACvB,CAAC;QAEF,MAAM,SAAS,GAAmC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,iCAC9D,CAAC,KACJ,SAAS;YACT,QAAQ;YACR,MAAM,IACR,CAAC,CAAC;QAEJ,+CAA+C;QAC/C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;CACJ;AAxBY,gCAAgC;IAJ5C,+DAAS,CAAC;QACP,QAAQ,EAAE,gCAAgC;QAC1C,uGAA0D;KAC7D,CAAC;GACW,gCAAgC,CAwB5C;AAxB4C;AA0B7C,gBAAgB;AAChB,SAAS,OAAO;IACZ,MAAM,MAAM,GAAG,sBAAsB,CAAC;IAEtC,OAAO,CAAC;YACJ,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACtDiD;AAC0F;AACzG;IAMtB,kCAAkC,SAAlC,kCAAkC;IAGpC,QAAQ;QACX,oBAAoB;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,gEAAgB,EAAE,CAAC;QAE1C,gGAAgG;QAChG,MAAM,SAAS,GAAG,IAAI,6DAAa,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACvG,MAAM,QAAQ,GAAG,IAAI,4DAAY,EAAE,CAAC;QAEpC,MAAM,SAAS,GAAyC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,iCACpE,CAAC,KACJ,SAAS;YACT,QAAQ,EACR,MAAM,EAAE;gBACJ,+GAA+G;gBAC/G,8DAA8D;gBAC9D,CAAC,EAAE,IAAI,yDAAS,CAAC,WAAW,CAAC;gBAC7B,CAAC,EAAE,IAAI,2DAAW,EAAE;aACvB,IACH,CAAC,CAAC;QAEJ,+CAA+C;QAC/C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;CACJ;AA1BY,kCAAkC;IAJ9C,+DAAS,CAAC;QACP,QAAQ,EAAE,kCAAkC;QAC5C,yGAA4D;KAC/D,CAAC;GACW,kCAAkC,CA0B9C;AA1B8C;AA4B/C,gBAAgB;AAChB,SAAS,OAAO;IACZ,MAAM,MAAM,GAAG,sBAAsB,CAAC;IAEtC,OAAO;QACH;YACI,EAAE,EAAE,gBAAgB;YACpB,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;QACD;YACI,EAAE,EAAE,gBAAgB;YACpB,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;QACD;YACI,EAAE,EAAE,gBAAgB;YACpB,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;KACJ,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC1FiD;AAGzB;AACsB;IAMlC,uBAAuB,SAAvB,uBAAuB;;QACxB,WAAM,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAClF,iBAAY,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,aAAQ,GAAG,oDAAM,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAElC,WAAM,GAAG,IAAI,yDAAS,EAAE,CAAC;QACzB,aAAQ,GAAG,IAAI,4DAAY,EAAE,CAAC;QAC9B,YAAO,GAAG,IAAI,4DAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,cAAS,GAAG,IAAI,6DAAa,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC5D,gBAAW,GAAqB,IAAI,gEAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAqD1F,CAAC;IAhDU,QAAQ;QACX,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAEM,YAAY,CAAC,KAAa;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAEO,MAAM,CAAC,KAAiB;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAEO,aAAa,CAAC,UAAwB;QAC1C,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;QACvC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAEO,sBAAsB,CAAC,KAAiB;QAC5C,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,UAAoB,EAAE,CAAS,EAAE,EAAE;YACjD,MAAM,WAAW,GAAG,IAAI,2DAAW,EAAE,CAAC;YACtC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,mEAAmE;YACnG,WAAW,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,MAAM,WAAW,GAAc;gBAC3B,CAAC,EAAE,IAAI,CAAC,MAAM;gBACd,CAAC,EAAE,WAAW;aACjB,CAAC;YACF,OAAO;gBACH,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;gBACd,IAAI,EAAE,eAAe,CAAC,GAAG,CAAC,EAAE;gBAC5B,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC9B,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACY,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,OAAO,CAAC,UAAoB;QAChC,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,KAAa,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC;YACjD,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;YACvC,CAAC,EAAE,KAAK;SACX,CAAC,CAAC,CAAC;IACR,CAAC;CAEJ;AA9DY,uBAAuB;IAJnC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,6FAAgD;KACnD,CAAC;GACW,uBAAuB,CA8DnC;AA9DmC;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AAazB;AACU;IAOtB,6BAA6B,SAA7B,6BAA6B;IAG/B,QAAQ;QACX,MAAM,UAAU,GAAG,IAAI,4DAAY,EAAE,CAAC;QACtC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;QACvC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;QACpC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;QACtC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;QAC1C,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACxC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;QAC/B,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QACtC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;QACpC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvC,8FAA8F;QAC9F,MAAM,IAAI,GAAG,IAAI,sDAAM,CAAC,UAAU,CAAC,CAAC;QAEpC,wGAAwG;QACxG,IAAI,CAAC,KAAK,GAAG,IAAI,qDAAK,CAAC,IAAI,CAAC,CAAC;QAE7B,yGAAyG;QACzG,MAAM,SAAS,GAAG,4EAAoB,EAAE,CAAC;QACzC,MAAM,QAAQ,GAAG,IAAI,4DAAY,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QACtD,MAAM,MAAM,GAAc;YACtB,CAAC,EAAE,IAAI,yDAAS,EAAE;YAClB,CAAC,EAAE,IAAI,2DAAW,EAAE;SACvB,CAAC;QAEF,0BAA0B;QAC1B,MAAM,SAAS,GAAmC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,iCAC9D,CAAC,KACJ,SAAS;YACT,QAAQ;YACR,MAAM,IACR,CAAC,CAAC;QAEJ,oFAAoF;QACpF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;CACJ;AA3CY,6BAA6B;IALzC,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,oGAAuD;;KAE1D,CAAC;GACW,6BAA6B,CA2CzC;AA3CyC;AA6C1C,gBAAgB;AAChB,SAAS,OAAO;IACZ,MAAM,MAAM,GAAG,sBAAsB,CAAC;IAEtC,OAAO,CAAC;YACJ,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC3FiD;AAGzB;AACU;IAMtB,+BAA+B,SAA/B,+BAA+B;;QACjC,qBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACrC,eAAU,GAAU,EAAE,CAAC;IA+ClC,CAAC;IA7CU,QAAQ;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAEO,iBAAiB;QACrB,MAAM,QAAQ,GAAG,IAAI,4DAAY,EAAE,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAS,EAAE,EAAE;;YAC7C,qBAAqB;YACrB,MAAM,WAAW,GAAG,IAAI,gEAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAEvD,0EAA0E;YAC1E,qEAAqE;YACrE,MAAM,SAAS,GAAG,IAAI,6DAAa,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,IAAI,2DAAW,EAAE,CAAC;YACjC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAc;gBACtB,+GAA+G;gBAC/G,8DAA8D;gBAC9D,CAAC,EAAE,IAAI,yDAAS,CAAC,WAAW,CAAC;gBAC7B,CAAC,EAAE,MAAM;aACZ,CAAC;YAEF,eAAe;YACf,MAAM,UAAU,GAAuC;gBACnD,EAAE,EAAE,gBAAgB,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,IAAI,EAAE,CAAC,CAAC,GAAG;gBACX,SAAS;gBACT,QAAQ;gBACR,MAAM;aACT,CAAC;YAEF,+CAA+C;YAC/C,WAAW,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAEjC,+GAA+G;YAC/G,MAAM,aAAa,GAAG,IAAI,kEAAkB,EAAE,CAAC;YAC/C,iBAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,0CAAE,SAAS,CAAC,aAAa,EAAE;YAEtD,6BAA6B;YAC7B,MAAM,GAAG,mCAAQ,CAAC,KAAE,WAAW,EAAE,aAAa,GAAE,CAAC;YACjD,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAjDY,+BAA+B;IAJ3C,+DAAS,CAAC;QACP,QAAQ,EAAE,+BAA+B;QACzC,sGAAyD;KAC5D,CAAC;GACW,+BAA+B,CAiD3C;AAjD2C;AAmD5C,gBAAgB;AAChB,SAAS,OAAO;IACZ,MAAM,MAAM,GAAG,sBAAsB,CAAC;IACtC,OAAO;QACH;YACI,IAAI,EAAE,kBAAkB;YACxB,GAAG,EAAE;gBACD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;QACD;YACI,IAAI,EAAE,eAAe;YACrB,GAAG,EAAE;gBACD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;KACJ,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;AChGiD;AAGzB;AACU;IAMtB,+BAA+B,SAA/B,+BAA+B;IAGjC,QAAQ;QACX,2EAA2E;QAC3E,MAAM,UAAU,GAAG,4EAAoB,CAAC,IAAI,4DAAY,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC1E,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;QAE/B,8FAA8F;QAC9F,MAAM,IAAI,GAAG,IAAI,sDAAM,CAAC,UAAU,CAAC,CAAC;QAEpC,uGAAuG;QACvG,IAAI,CAAC,KAAK,GAAG,IAAI,qDAAK,CAAC,IAAI,CAAC,CAAC;QAE7B,yGAAyG;QACzG,MAAM,SAAS,GAAG,IAAI,6DAAa,EAAE,CAAC;QACtC,MAAM,QAAQ,GAAG,IAAI,4DAAY,EAAE,CAAC;QACpC,MAAM,MAAM,GAAc;YACtB,CAAC,EAAE,IAAI,yDAAS,EAAE;YAClB,CAAC,EAAE,IAAI,2DAAW,EAAE;SACvB,CAAC;QAEF,0BAA0B;QAC1B,MAAM,SAAS,GAAmC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,iCAC9D,CAAC,KACJ,SAAS;YACT,QAAQ;YACR,MAAM,IACR,CAAC,CAAC;QAEJ,oFAAoF;QACpF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;CACJ;AAjCY,+BAA+B;IAJ3C,+DAAS,CAAC;QACP,QAAQ,EAAE,+BAA+B;QACzC,sGAAyD;KAC5D,CAAC;GACW,+BAA+B,CAiC3C;AAjC2C;AAmC5C,gBAAgB;AAChB,SAAS,OAAO;IACZ,MAAM,MAAM,GAAG,sBAAsB,CAAC;IAEtC,OAAO,CAAC;YACJ,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ,CAAC,CAAC;AACP,CAAC","file":"spark-chart-docs-spark-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiMessageModule, NuiTableModule, SrlcStage } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { ChartDocsSparkComponent } from \"./chart-docs-spark.component\";\nimport { SparkChartBasicExampleComponent } from \"./spark-chart-basic/spark-chart-basic.example.component\";\nimport { SparkChartLegendExampleComponent } from \"./spark-chart-legend/spark-chart-legend.example.component\";\nimport { SparkChartMultipleExampleComponent } from \"./spark-chart-multiple/spark-chart-multiple.example.component\";\nimport { AreaSparkMinimalTestComponent } from \"./spark-chart-stroke-test/area-spark-minimal-test.component\";\nimport { SparkChartTableExampleComponent } from \"./spark-chart-table/spark-chart-table.example.component\";\nimport { SparkChartTestComponent } from \"./spark-chart-test/spark-chart-test.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsSparkComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"basic\",\n        component: SparkChartBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"legend\",\n        component: SparkChartLegendExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"multiple\",\n        component: SparkChartMultipleExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"table\",\n        component: SparkChartTableExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"test\",\n        component: SparkChartTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsSparkComponent,\n        SparkChartBasicExampleComponent,\n        SparkChartLegendExampleComponent,\n        SparkChartMultipleExampleComponent,\n        SparkChartTableExampleComponent,\n        SparkChartTestComponent,\n        AreaSparkMinimalTestComponent,\n    ],\n    imports: [\n        FormsModule,\n        NuiChartsModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTableModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsSparkModule {\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-chart-docs-spark\",\n    templateUrl: \"./chart-docs-spark.component.html\",\n})\nexport class ChartDocsSparkComponent {\n    public gridConfiguration = `public chart = new Chart(new XYGrid(new SparkChartGridConfig(false, false)));\n...`;\n    public scaleInstantiationWithId = `const scale = new TimeScale(\"example-scale-id\");\n...`;\n    public collectionIdHtml = `<div *ngFor=\"let s of chartAssist.sparks\">\n    <nui-chart class=\"d-flex\" [chart]=\"s.chart\" nuiChartCollectionId=\"example-collection-id\"></nui-chart>\n</div>`;\n}\n","var map = {\n\t\"./chart-docs-spark.component.html\": \"VXYK\",\n\t\"./chart-docs-spark.component.ts\": \"aEDV\",\n\t\"./chart-docs-spark.module.ts\": \"WWui\",\n\t\"./spark-chart-basic/spark-chart-basic.example.component.html\": \"VU9g\",\n\t\"./spark-chart-basic/spark-chart-basic.example.component.ts\": \"9WrG\",\n\t\"./spark-chart-legend/spark-chart-legend.example.component.html\": \"kBhg\",\n\t\"./spark-chart-legend/spark-chart-legend.example.component.ts\": \"VUb8\",\n\t\"./spark-chart-multiple/spark-chart-multiple.example.component.html\": \"O2Lm\",\n\t\"./spark-chart-multiple/spark-chart-multiple.example.component.ts\": \"4T4B\",\n\t\"./spark-chart-stroke-test/area-spark-minimal-test.component.html\": \"Voir\",\n\t\"./spark-chart-stroke-test/area-spark-minimal-test.component.less\": \"Z35r\",\n\t\"./spark-chart-stroke-test/area-spark-minimal-test.component.ts\": \"BCaa\",\n\t\"./spark-chart-table/spark-chart-table.example.component.html\": \"xLy/\",\n\t\"./spark-chart-table/spark-chart-table.example.component.ts\": \"MhnZ\",\n\t\"./spark-chart-test/spark-chart-test.component.html\": \"k9+c\",\n\t\"./spark-chart-test/spark-chart-test.component.ts\": \"zT5C\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"FbsN\";","export default \".chart-container {\\n  border-left: 1px solid var(--nui-color-line-strong, #999);\\n  border-right: 1px solid var(--nui-color-line-strong, #999);\\n  height: 42px;\\n  width: 150px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyZWEtc3BhcmstbWluaW1hbC10ZXN0LmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseURBQUE7RUFDQSwwREFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiYXJlYS1zcGFyay1taW5pbWFsLXRlc3QuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQtY29udGFpbmVyIHtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHZhcigtLW51aS1jb2xvci1saW5lLXN0cm9uZywgIzk5OSk7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgdmFyKC0tbnVpLWNvbG9yLWxpbmUtc3Ryb25nLCAjOTk5KTtcbiAgICBoZWlnaHQ6IDQycHg7XG4gICAgd2lkdGg6IDE1MHB4O1xufVxuIl19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { IChartSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale } from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-legend-example\",\n    templateUrl: \"./spark-chart-legend.example.component.html\",\n})\nexport class SparkChartLegendExampleComponent implements OnInit {\n    public chartAssist: SparkChartAssist;\n\n    public ngOnInit() {\n        // spark chart setup\n        this.chartAssist = new SparkChartAssist();\n\n        const accessors = new LineAccessors();\n        const renderer = new LineRenderer();\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // chart assist needs to be used to update data\n        this.chartAssist.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [{\n        id: \"1\",\n        name: \"Series 1\",\n        data: [\n            { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 85 },\n            { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n            { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n            { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n            { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n            { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n            { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 30 },\n            { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n            { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n            { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { IChartAssistSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale } from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-multiple-example\",\n    templateUrl: \"./spark-chart-multiple.example.component.html\",\n})\nexport class SparkChartMultipleExampleComponent implements OnInit {\n    public chartAssist: SparkChartAssist;\n\n    public ngOnInit() {\n        // spark chart setup\n        this.chartAssist = new SparkChartAssist();\n\n        // providing chartAssist colors and markers to LineAccessors will share them with the line chart\n        const accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\n        const renderer = new LineRenderer();\n\n        const seriesSet: IChartAssistSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales: {\n                // using the same scale id for the x-axes is necessary to achieve synchronized hover interaction between charts\n                // - sharing the same instance of the scale would work as well\n                x: new TimeScale(\"shared-id\"),\n                y: new LinearScale(),\n            },\n        }));\n\n        // chart assist needs to be used to update data\n        this.chartAssist.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [\n        {\n            id: \"spark-series-1\",\n            name: \"Tex-lab-aus-2621\",\n            data: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 85 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 30 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            ],\n        },\n        {\n            id: \"spark-series-2\",\n            name: \"Cz-lab-brn-02\",\n            data: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 93 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 71 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 85 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 54 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 79 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 64 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 49 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 70 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 59 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 76 },\n            ],\n        },\n        {\n            id: \"spark-series-3\",\n            name: \"Ua-lab-kie-03\",\n            data: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 60 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 75 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 42 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 84 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 41 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 50 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 56 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 44 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 75 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 48 },\n            ],\n        },\n    ];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart, ChartPalette, IChartAssistSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale, XYGridConfig,\n} from \"@nova-ui/charts\";\nimport moment, { Moment } from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-test\",\n    templateUrl: \"./spark-chart-test.component.html\",\n})\nexport class SparkChartTestComponent implements OnInit {\n    private colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"black\", \"white\"];\n    private initialInput = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]];\n    private baseDate = moment([2016, 11, 25]);\n\n    private xScale = new TimeScale();\n    private renderer = new LineRenderer();\n    private palette = new ChartPalette(this.colors);\n    private accessors = new LineAccessors(this.palette.standardColors);\n    public chartAssist: SparkChartAssist = new SparkChartAssist(true, true, this.palette);\n\n    public input: string;\n    public chart: Chart;\n\n    public ngOnInit() {\n        this.input = JSON.stringify(this.initialInput);\n        this.configureGrid(this.chartAssist.gridConfig);\n        this.configureGrid(this.chartAssist.lastGridConfig);\n        this.update(this.initialInput);\n    }\n\n    public inputChanged(value: string) {\n        this.update(JSON.parse(value));\n    }\n\n    private update(input: number[][]) {\n        const seriesSet = this.generateSparkSeriesSet(input);\n        this.chartAssist.update(seriesSet);\n    }\n\n    private configureGrid(gridConfig: XYGridConfig) {\n        gridConfig.dimension.autoWidth = false;\n        gridConfig.dimension.width(400);\n    }\n\n    private generateSparkSeriesSet(input: number[][]): IChartAssistSeries<ILineAccessors>[] {\n        return input.map((seriesData: number[], i: number) => {\n            const sparkYScale = new LinearScale();\n            sparkYScale.fixDomain([0, 26]); // spark chart height is 26px (36px - 5px top - 5px bottom padding)\n            sparkYScale.formatters.value = v => (Number(v).toPrecision(4));\n            const sparkScales: IXYScales = {\n                x: this.xScale,\n                y: sparkYScale,\n            };\n            return {\n                id: `${i + 1}`,\n                name: `dev-aus-vm-0${i + 1}`,\n                accessors: this.accessors,\n                data: this.getData(seriesData),\n                scales: sparkScales,\n                renderer: this.renderer,\n            } as IChartAssistSeries<ILineAccessors>;\n        });\n    }\n\n    private getData(seriesData: number[]): { x: Moment, y: number }[] {\n        return seriesData.map((value: number, i: number) => ({\n            x: this.baseDate.clone().add(i, \"days\"),\n            y: value,\n        }));\n    }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    AreaRenderer,\n    Chart,\n    IChart,\n    IChartSeries,\n    ILineAccessors,\n    IXYScales,\n    LinearScale,\n    stackedAreaAccessors,\n    TimeScale,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-area-spark-minimal-test\",\n    templateUrl: \"./area-spark-minimal-test.component.html\",\n    styleUrls: [\"./area-spark-minimal-test.component.less\"],\n})\nexport class AreaSparkMinimalTestComponent implements OnInit {\n    public chart: IChart;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.axis.left.visible = false;\n        gridConfig.axis.bottom.visible = false;\n        gridConfig.axis.top.visible = false;\n        gridConfig.axis.right.visible = false;\n        gridConfig.borders.bottom.visible = false;\n        gridConfig.dimension.padding.bottom = 0;\n        gridConfig.interactive = false;\n        gridConfig.dimension.margin.right = 0;\n        gridConfig.dimension.margin.bottom = 0;\n        gridConfig.dimension.margin.top = 0;\n        gridConfig.dimension.margin.left = 0;\n        gridConfig.axis.left.gridTicks = false;\n\n        // Create an x-y grid by passing the spark chart grid config as an argument to the constructor\n        const grid = new XYGrid(gridConfig);\n\n        // Instantiate the chart using the configured spark chart grid as an argument to the chart's constructor\n        this.chart = new Chart(grid);\n\n        // Generate line accessors, x-y scales, and a line renderer to be included in the IChartSeries collection\n        const accessors = stackedAreaAccessors();\n        const renderer = new AreaRenderer({ strokeWidth: 0 });\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        // Assemble the series set\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // Invoke the chart's update method with the IChartSeries collection as the argument\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [{\n        id: \"1\",\n        name: \"Series 1\",\n        data: [\n            { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 62 },\n            { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n            { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n            { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n            { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n            { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n            { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 69 },\n            { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n            { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n            { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            { x: moment(\"2018-11-21T15:06:12.413Z\", format), y: 68 },\n            { x: moment(\"2018-12-05T06:49:39.310Z\", format), y: 82 },\n            { x: moment(\"2018-12-18T22:33:06.206Z\", format), y: 81 },\n            { x: moment(\"2019-01-01T14:16:33.103Z\", format), y: 78 },\n            { x: moment(\"2019-01-15T06:00:00.000Z\", format), y: 90 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartPopoverPlugin, IChartAssistSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-table-example\",\n    templateUrl: \"./spark-chart-table.example.component.html\",\n})\nexport class SparkChartTableExampleComponent implements OnInit {\n    public displayedColumns = [\"name\", \"chart\"];\n    public dataSource: any[] = [];\n\n    public ngOnInit() {\n        this.generateTableData();\n    }\n\n    private generateTableData() {\n        const renderer = new LineRenderer();\n\n        this.dataSource = getData().map((d, i: number) => {\n            // Chart assist setup\n            const chartAssist = new SparkChartAssist(false, false);\n\n            // using a new accessors instance for each spark allows for the sequential\n            // color provider within to provide the same color for each sparkline\n            const accessors = new LineAccessors();\n            const yScale = new LinearScale();\n            yScale.formatters.value = v => (Number(v).toPrecision(4));\n            const scales: IXYScales = {\n                // using the same scale id for the x-axes is necessary to achieve synchronized hover interaction between charts\n                // - sharing the same instance of the scale would work as well\n                x: new TimeScale(\"shared-id\"),\n                y: yScale,\n            };\n\n            // series setup\n            const dataSeries: IChartAssistSeries<ILineAccessors> = {\n                id: `spark-series-${i + 1}`,\n                name: d.node,\n                data: d.cpu,\n                accessors,\n                renderer,\n                scales,\n            };\n\n            // chart assist needs to be used to update data\n            chartAssist.update([dataSeries]);\n\n            // popover plugin must be added after the initial update as the spark chart assist creates the sparks on update\n            const popoverPlugin = new ChartPopoverPlugin();\n            chartAssist.sparks[0].chart?.addPlugin(popoverPlugin);\n\n            // assembly of table row data\n            const row = { ...d, chartAssist, popoverPlugin };\n            return row;\n        });\n    }\n}\n\n/* Chart data */\nfunction getData(): any[] {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n    return [\n        {\n            node: \"Tex-lab-aus-2621\",\n            cpu: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 85 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 30 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            ],\n        },\n        {\n            node: \"Cz-lab-brn-02\",\n            cpu: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 93 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 71 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 85 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 54 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 79 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 64 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 49 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 70 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 59 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 76 },\n            ],\n        },\n    ];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart, IChart, IChartSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, sparkChartGridConfig, TimeScale, XYGrid, XYGridConfig\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-basic-example\",\n    templateUrl: \"./spark-chart-basic.example.component.html\",\n})\nexport class SparkChartBasicExampleComponent implements OnInit {\n    public chart: IChart;\n\n    public ngOnInit() {\n        // This grid configuration is what turns a regular chart into a spark chart\n        const gridConfig = sparkChartGridConfig(new XYGridConfig(), false, false);\n        gridConfig.interactive = false;\n\n        // Create an x-y grid by passing the spark chart grid config as an argument to the constructor\n        const grid = new XYGrid(gridConfig);\n\n        // Instantiate the chart using the configured sprk chart grid as an argument to the chart's constructor\n        this.chart = new Chart(grid);\n\n        // Generate line accessors, x-y scales, and a line renderer to be included in the IChartSeries collection\n        const accessors = new LineAccessors();\n        const renderer = new LineRenderer();\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        // Assemble the series set\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // Invoke the chart's update method with the IChartSeries collection as the argument\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [{\n        id: \"1\",\n        name: \"Series 1\",\n        data: [\n            { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 62 },\n            { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n            { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n            { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n            { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n            { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n            { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 69 },\n            { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n            { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n            { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            { x: moment(\"2018-11-21T15:06:12.413Z\", format), y: 68 },\n            { x: moment(\"2018-12-05T06:49:39.310Z\", format), y: 82 },\n            { x: moment(\"2018-12-18T22:33:06.206Z\", format), y: 81 },\n            { x: moment(\"2019-01-01T14:16:33.103Z\", format), y: 78 },\n            { x: moment(\"2019-01-15T06:00:00.000Z\", format), y: 90 },\n        ],\n    }];\n}\n"],"sourceRoot":"webpack:///"}