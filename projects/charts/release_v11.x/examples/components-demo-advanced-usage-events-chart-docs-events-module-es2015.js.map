{"version":3,"sources":["webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?e95e","./examples/components/demo/advanced-usage/events/chart-docs-events.component.ts","./examples/components/demo/advanced-usage/events/events-basic/events-basic-example.component.ts","./examples/components/demo/advanced-usage/events/event-sampler/event-sampler.component.ts","./examples/components/demo/advanced-usage/events/chart-docs-events.module.ts","webpack:///./examples/components/demo/advanced-usage/events/event-sampler/event-sampler.component.less?e820"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;;;;;;;;AC7B0C;IAM7B,wBAAwB,SAAxB,wBAAwB;CAAI;AAA5B,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,8FAAiD;KACpD,CAAC;GACW,wBAAwB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACNyD;AAGrE;AACU;IAOtB,2BAA2B,SAA3B,2BAA2B;IAIpC,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAHjD,UAAK,GAAG,IAAI,qDAAK,CAAC,IAAI,sDAAM,EAAE,CAAC,CAAC;IAIvC,CAAC;IAEM,QAAQ;QACX,MAAM,SAAS,GAAG,IAAI,6DAAa,EAAE,CAAC;QACtC,MAAM,QAAQ,GAAG,IAAI,4DAAY,EAAE,CAAC;QAEpC,MAAM,MAAM,GAAc;YACtB,CAAC,EAAE,IAAI,yDAAS,EAAE;YAClB,CAAC,EAAE,IAAI,2DAAW,EAAE;SACvB,CAAC;QAEF,MAAM,SAAS,GAAmC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,iCAC9D,CAAC,KACJ,SAAS;YACT,QAAQ;YACR,MAAM,IACR,CAAC,CAAC;QAEJ,sCAAsC;QACtC,qIAAqI;QACrI,wDAAwD;QACxD,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,wEAAwB,CAAC,CAAC,SAAS,CAAC,CAAC,KAAkB,EAAE,EAAE;YAC1F,oBAAoB;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YACnD,wIAAwI;YACxI,kCAAkC;YAClC,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;CACJ;;YA/CiC,+DAAiB;;AAWtC,2BAA2B;IALvC,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,iGAAoD;QACpD,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAClD,CAAC;mFAKyC,+DAAiB;GAJ/C,2BAA2B,CAoCvC;AApCuC;AAsCxC,gBAAgB;AAChB,SAAS,OAAO;IACZ,MAAM,MAAM,GAAG,sBAAsB,CAAC;IAEtC,OAAO;QACH;YACI,EAAE,EAAE,UAAU;YACd,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;QACD;YACI,EAAE,EAAE,UAAU;YACd,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE;gBACF,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;gBACxD,EAAE,CAAC,EAAE,oDAAM,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;aAC3D;SACJ;KACJ,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EgH;AAyCxF;AACM;AACU;AAQzC,IAAK,SAIJ;AAJD,WAAK,SAAS;IACV,uCAA0B;IAC1B,uCAA0B;IAC1B,0BAAa;AACjB,CAAC,EAJI,SAAS,KAAT,SAAS,QAIb;IA2BY,qBAAqB,SAArB,qBAAqB;IAmF9B,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAlF9C,gBAAW,GAAG,EAAE,CAAC;QACR,iBAAY,GAAG;YAC3B;gBACI,EAAE,EAAE,kEAAkB;gBACtB,IAAI,EAAE,oBAAoB;aAC7B;YACD;gBACI,EAAE,EAAE,wEAAwB;gBAC5B,IAAI,EAAE,0BAA0B;gBAChC,gBAAgB,EAAE,CAAC,+DAAe,CAAC,KAAK,EAAE,+DAAe,CAAC,SAAS,CAAC;aACvE;YACD;gBACI,EAAE,EAAE,6EAA6B;gBACjC,IAAI,EAAE,+BAA+B;gBACrC,gBAAgB,EAAE,CAAC,+DAAe,CAAC,KAAK,EAAE,+DAAe,CAAC,SAAS,CAAC;aACvE;YACD;gBACI,EAAE,EAAE,4EAA4B;gBAChC,IAAI,EAAE,8BAA8B;gBACpC,gBAAgB,EAAE,CAAC,+DAAe,CAAC,KAAK,EAAE,+DAAe,CAAC,KAAK,CAAC;aACnE;YACD;gBACI,EAAE,EAAE,0EAA0B;gBAC9B,IAAI,EAAE,4BAA4B;gBAClC,gBAAgB,EAAE,CAAC,+DAAe,CAAC,SAAS,CAAC;aAChD;YACD;gBACI,EAAE,EAAE,sEAAsB;gBAC1B,IAAI,EAAE,wBAAwB;gBAC9B,gBAAgB,EAAE,CAAC,+DAAe,CAAC,SAAS,CAAC;aAChD;YACD;gBACI,EAAE,EAAE,wEAAwB;gBAC5B,IAAI,EAAE,0BAA0B;gBAChC,gBAAgB,EAAE,CAAC,+DAAe,CAAC,KAAK,CAAC;aAC5C;YACD;gBACI,EAAE,EAAE,uEAAuB;gBAC3B,IAAI,EAAE,yBAAyB;gBAC/B,gBAAgB,EAAE,CAAC,+DAAe,CAAC,KAAK,CAAC;aAC5C;YACD;gBACI,EAAE,EAAE,uEAAuB;gBAC3B,IAAI,EAAE,yBAAyB;aAClC;YACD;gBACI,EAAE,EAAE,yEAAyB;gBAC7B,IAAI,EAAE,2BAA2B;aACpC;SACJ,CAAC;QAEK,kBAAa,GAAe,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACjD,4BAAuB,GAAG,EAAE,CAAC;QAE7B,eAAU,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;QAE1E,eAAU,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,kBAAa,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1E,WAAM,GAAG;YACZ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACrB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YACrB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC1B,CAAC;IAoBF,CAAC;IAVM,mBAAmB,CAAC,aAAyB;QAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACrH,CAAC;IAEM,uBAAuB,CAAC,IAAqB;QAChD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;IACxC,CAAC;IAKD,QAAQ;QACJ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,IAAI,4DAAY,CAAC,IAAI,mEAAmB,CAAS,uDAAS,CAAC,IAAI,CAAC,aAAa,EAAE,kEAAkB,CAAC,CAAC,CAAC,CAAC;QAEpH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEM,eAAe,CAAC,SAAoB;QACvC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,UAAU;QACd,MAAM,EAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,eAAe,EAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7G,IAAI,CAAC,WAAW,GAAG,IAAI,2DAAW,CAAC,IAAI,qDAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,sEAAsB,EAAE,CAAC,CAAC;QAE/D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAEO,gBAAgB;QACpB,kDAAI,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAkB,EAAE,EAAE;gBACvF,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAE;oBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,uBAAuB,KAAK,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE;wBAC5F,2BAA2B,CAAC,KAAK,EAAE,YAAY,EAAE,4EAA4E,CAAC,CAAC;wBAC/H,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;qBACtC;iBACJ;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,WAAW;QACf,IAAI,SAAS,GACyB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACrH,4FAA4F;QAC5F,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAM,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAChG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAEO,gBAAgB,CACpB,UAAoB,EACpB,aAAuB,EACvB,aAA+C;QAE/C,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1C,EAAE,EAAE,WAAW;YACf,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;YAChG,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACtB,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,kBAAkB,CAAC,SAAoB;QAC3C,MAAM,CAAC,GAA6C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAClF,IAAI,MAAM,GAAuD;YAC7D,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE;YACtB,SAAS,EAAE,CAAC,CAAC,gBAAgB,EAAE;YAC/B,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE;YAC9B,MAAM,EAAE,CAAC,CAAC,aAAa,EAAE;SAC5B,CAAC;QAEF,IAAI,CAAC,CAAC,eAAe,EAAE;YACnB,MAAM,GAAG,gCAAI,MAAM,KAAE,eAAe,EAAE,CAAC,CAAC,eAAe,GAAoC,CAAC;SAC/F;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,aAAa,CAAC,SAAoB;QACtC,MAAM,UAAU,GAAgE;YAC5E,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;gBACpB,eAAe,EAAE,mEAAmB;gBACpC,YAAY,EAAE,uDAAO;gBACrB,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,2DAAW,CAAC,EAAC,iBAAiB,EAAE,IAAI,oEAAoB,CAAC,GAAG,CAAC,EAAC,CAAC;gBAC3F,gBAAgB,EAAE,GAAG,EAAE,CAAC,oEAAY,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;gBAC5E,aAAa,EAAE,yDAAS;aAC3B;YACD,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;gBACpB,YAAY,EAAE,GAAG,EAAE,CAAC,+DAAO,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;gBAC5C,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,2DAAW,CAAC,EAAC,iBAAiB,EAAE,IAAI,0EAA0B,CAAC,GAAG,CAAC,EAAC,CAAC;gBACjG,gBAAgB,EAAE,GAAG,EAAE;oBACnB,MAAM,SAAS,GAAG,oEAAY,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBAC7E,SAAS,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC5F,OAAO,SAAS,CAAC;gBACrB,CAAC;gBACD,aAAa,EAAE,GAAG,EAAE,CAAC,iEAAS,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;aAClD;YACD,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACd,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,sDAAM,EAAE;gBAChC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,4DAAY,CAAC;oBACrC,mBAAmB,EAAE,IAAI,mFAAmC,EAAE;oBAC9D,iBAAiB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;iBACxD,CAAC;gBACF,gBAAgB,EAAE,GAAG,EAAE;oBACnB,MAAM,SAAS,GAAG,IAAI,6DAAa,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACjE,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACnC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;oBAChC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;oBACpC,OAAO,SAAS,CAAC;gBACrB,CAAC;gBACD,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC;oBAClB,CAAC,EAAE,IAAI,yDAAS,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC7C,CAAC,EAAE,IAAI,2DAAW,EAAE;iBACvB,CAAC;aACL;SACJ,CAAC;QAEF,OAAO,UAAU,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;CAEJ;;YAlSiC,+DAAiB;;AAkFtC,qBAAqB;IAPjC,+DAAS,CAAC;QACP,QAAQ,EAAE,yBAAyB;QACnC,0FAA6C;QAE7C,aAAa,EAAE,+DAAiB,CAAC,QAAQ;QACzC,eAAe,EAAE,qEAAuB,CAAC,MAAM;;KAClD,CAAC;mFAoFsC,+DAAiB;GAnF5C,qBAAqB,CAgNjC;AAhNiC;AAkNlC,SAAS,2BAA2B,CAAC,GAAwB,EAAE,QAAgB,EAAE,WAAmB;IAChG,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE;QACpB,IAAI,IAAI,KAAK,QAAQ,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;SAC3B;aAAM,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YACtC,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;SACjE;KACJ;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC5SwC;AACc;AAGhC;AAC2B;AAEuB;AACO;AACY;AAE5F,MAAM,aAAa,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qFAAwB;QACnC,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,OAAO,EAAE,uDAAS,CAAC,IAAI;aAC1B;YACD,iBAAiB,EAAE,IAAI;SAC1B;KACJ;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,wGAA2B;QACtC,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,4FAAqB;QAChC,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;CACJ,CAAC;IAqBW,qBAAqB,SAArB,qBAAqB;CAAI;AAAzB,qBAAqB;IAnBjC,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,qFAAwB;YACxB,wGAA2B;YAC3B,4FAAqB;SACxB;QACD,OAAO,EAAE;YACL,6DAAe;YACf,+DAAiB;YACjB,+DAAe;YACf,2DAAa;YACb,8DAAgB;YAChB,6DAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;SACvC;QACD,SAAS,EAAE;YACP,EAAE,OAAO,EAAE,6DAAe,EAAE,UAAU,EAAE,GAAG,EAAE,CAAO,2BAAgE,EAAE;SACzH;KACJ,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;AC7DlC;AAAe,4FAA6B,kBAAkB,uBAAuB,GAAG,+CAA+C,ubAAub,E","file":"components-demo-advanced-usage-events-chart-docs-events-module-es2015.js","sourcesContent":["var map = {\n\t\"./chart-docs-events.component.html\": \"5wfK\",\n\t\"./chart-docs-events.component.ts\": \"SjNZ\",\n\t\"./chart-docs-events.module.ts\": \"aZDi\",\n\t\"./event-sampler/event-sampler.component.html\": \"unPA\",\n\t\"./event-sampler/event-sampler.component.less\": \"TdBD\",\n\t\"./event-sampler/event-sampler.component.ts\": \"qSaD\",\n\t\"./events-basic/events-basic-example.component.html\": \"6jeb\",\n\t\"./events-basic/events-basic-example.component.ts\": \"f8zi\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Z/G6\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-chart-docs-events\",\n    templateUrl: \"./chart-docs-events.component.html\",\n})\nexport class ChartDocsEventsComponent { }\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport {\n    Chart, IChartEvent, IChartSeries, ILineAccessors, INTERACTION_VALUES_EVENT, IXYScales, LineAccessors, LinearScale, LineRenderer, TimeScale, XYGrid\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-chart-events-basic\",\n    templateUrl: \"./events-basic-example.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EventsBasicExampleComponent implements OnInit {\n    public chart = new Chart(new XYGrid());\n    public payload: string;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    public ngOnInit() {\n        const accessors = new LineAccessors();\n        const renderer = new LineRenderer();\n\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // - subscribe to a chosen chart event\n        // - unsubscribing is not necessary as the chart will be destroyed when the component used to place it on the page will be destroyed;\n        //   the subscription will be unsubscribed automatically\n        this.chart.getEventBus().getStream(INTERACTION_VALUES_EVENT).subscribe((event: IChartEvent) => {\n            // process the event\n            this.payload = JSON.stringify(event.data, null, 4);\n            // in case of using a OnPush change detection strategy you need to detectChanges manually as the event is internal to this component and\n            // wouldn't cause the UI to update\n            this.changeDetectorRef.detectChanges();\n        });\n\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [\n        {\n            id: \"series-1\",\n            name: \"Series 1\",\n            data: [\n                { x: moment(\"2016-12-25T15:14:29.909Z\", format), y: 30 },\n                { x: moment(\"2016-12-27T15:14:29.909Z\", format), y: 95 },\n                { x: moment(\"2016-12-29T15:14:29.909Z\", format), y: 15 },\n                { x: moment(\"2016-12-31T15:14:29.909Z\", format), y: 60 },\n                { x: moment(\"2017-01-03T15:14:29.909Z\", format), y: 35 },\n            ],\n        },\n        {\n            id: \"series-2\",\n            name: \"Series 2\",\n            data: [\n                { x: moment(\"2016-12-25T15:14:29.909Z\", format), y: 60 },\n                { x: moment(\"2016-12-27T15:14:29.909Z\", format), y: 40 },\n                { x: moment(\"2016-12-29T15:14:29.909Z\", format), y: 70 },\n                { x: moment(\"2016-12-31T15:14:29.909Z\", format), y: 45 },\n                { x: moment(\"2017-01-03T15:14:29.909Z\", format), y: 90 },\n            ],\n        },\n    ];\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport {\n    BandScale,\n    barAccessors,\n    barGrid,\n    BarHighlightStrategy,\n    BarRenderer,\n    barScales,\n    BarSeriesHighlightStrategy,\n    Chart,\n    ChartAssist,\n    ChartPalette,\n    CHART_PALETTE_CS_S,\n    CHART_VIEW_STATUS_EVENT,\n    HIGHLIGHT_DATA_POINT_EVENT,\n    HIGHLIGHT_SERIES_EVENT,\n    IAccessors,\n    IBarAccessors,\n    IChartEvent,\n    IChartMarker,\n    IChartSeries,\n    IGrid,\n    InteractionLabelPlugin,\n    InteractionType,\n    INTERACTION_DATA_POINTS_EVENT,\n    INTERACTION_DATA_POINT_EVENT,\n    INTERACTION_SERIES_EVENT,\n    INTERACTION_VALUES_EVENT,\n    IValueProvider,\n    LineAccessors,\n    LinearScale,\n    LineRenderer,\n    LineSelectSeriesInteractionStrategy,\n    MappedValueProvider,\n    MOUSE_ACTIVE_EVENT,\n    Renderer,\n    Scales,\n    SELECT_DATA_POINT_EVENT,\n    SERIES_STATE_CHANGE_EVENT,\n    stackedPreprocessor,\n    XYGrid\n} from \"@nova-ui/charts\";\nimport each from \"lodash/each\";\nimport zipObject from \"lodash/zipObject\";\n\ninterface IEventInfo {\n    id: string;\n    name: string;\n    interactionTypes?: string[];\n}\n\nenum ChartType {\n    StackedBar = \"Stacked Bar\",\n    GroupedBar = \"Grouped Bar\",\n    Line = \"Line\",\n}\n\ntype SeriesProcessor<T = IAccessors> = (series: IChartSeries<T>[], isVisible: (chartSeries: IChartSeries<T>) => boolean) => IChartSeries<T>[];\n\ninterface IChartTools<T = IAccessors> {\n    seriesProcessor?: SeriesProcessor<T>;\n    gridFunction: () => IGrid;\n    rendererFunction: () => Renderer<IAccessors>;\n    accessorFunction: (colors?: IValueProvider<string>, markers?: IValueProvider<IChartMarker>) => T;\n    scaleFunction: () => Scales;\n}\n\nexport interface IChartAttributes<T = IAccessors> {\n    seriesProcessor?: SeriesProcessor<T>;\n    grid: IGrid;\n    renderer: Renderer<IAccessors>;\n    accessors: T;\n    scales: Scales;\n}\n\n@Component({\n    selector: \"nui-chart-event-sampler\",\n    templateUrl: \"./event-sampler.component.html\",\n    styleUrls: [\"./event-sampler.component.less\"],\n    encapsulation: ViewEncapsulation.Emulated,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EventSamplerComponent implements OnInit {\n    public parsedEvent = {};\n    public readonly eventFilters = [\n        {\n            id: MOUSE_ACTIVE_EVENT,\n            name: \"MOUSE_ACTIVE_EVENT\",\n        },\n        {\n            id: INTERACTION_VALUES_EVENT,\n            name: \"INTERACTION_VALUES_EVENT\",\n            interactionTypes: [InteractionType.Click, InteractionType.MouseMove],\n        },\n        {\n            id: INTERACTION_DATA_POINTS_EVENT,\n            name: \"INTERACTION_DATA_POINTS_EVENT\",\n            interactionTypes: [InteractionType.Click, InteractionType.MouseMove],\n        },\n        {\n            id: INTERACTION_DATA_POINT_EVENT,\n            name: \"INTERACTION_DATA_POINT_EVENT\",\n            interactionTypes: [InteractionType.Click, InteractionType.Hover],\n        },\n        {\n            id: HIGHLIGHT_DATA_POINT_EVENT,\n            name: \"HIGHLIGHT_DATA_POINT_EVENT\",\n            interactionTypes: [InteractionType.MouseMove],\n        },\n        {\n            id: HIGHLIGHT_SERIES_EVENT,\n            name: \"HIGHLIGHT_SERIES_EVENT\",\n            interactionTypes: [InteractionType.MouseMove],\n        },\n        {\n            id: INTERACTION_SERIES_EVENT,\n            name: \"INTERACTION_SERIES_EVENT\",\n            interactionTypes: [InteractionType.Click],\n        },\n        {\n            id: SELECT_DATA_POINT_EVENT,\n            name: \"SELECT_DATA_POINT_EVENT\",\n            interactionTypes: [InteractionType.Click],\n        },\n        {\n            id: CHART_VIEW_STATUS_EVENT,\n            name: \"CHART_VIEW_STATUS_EVENT\",\n        },\n        {\n            id: SERIES_STATE_CHANGE_EVENT,\n            name: \"SERIES_STATE_CHANGE_EVENT\",\n        },\n    ];\n\n    public selectedEvent: IEventInfo = this.eventFilters[0];\n    public selectedInteractionType = \"\";\n\n    public chartTypes = [ChartType.GroupedBar, ChartType.StackedBar, ChartType.Line];\n    public selectedChartType: ChartType;\n    public categories = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\n    public subCategories = [\"down\", \"critical\", \"warning\", \"unknown\", \"ok\", \"other\"];\n    public values = [\n        [24, 16, 7, 6, 97, 4],\n        [13, 8, 5, 17, 5, 25],\n        [97, 41, 24, 6, 7, 6],\n        [45, 87, 23, 48, 24, 9],\n    ];\n    public valueAccessor: (i: number, j: number) => number;\n    public chartAssist: ChartAssist;\n    public palette: ChartPalette;\n\n    private accessors: IBarAccessors | IAccessors;\n    private renderer: Renderer<IAccessors>;\n    private scales: Scales;\n    private seriesProcessor?: SeriesProcessor<IBarAccessors> | SeriesProcessor;\n\n    public onEventFilterChange(selectedEvent: IEventInfo) {\n        this.selectedEvent = selectedEvent;\n        this.selectedInteractionType = this.selectedEvent.interactionTypes ? this.selectedEvent.interactionTypes[0] : \"\";\n    }\n\n    public onInteractionTypeChange(type: InteractionType) {\n        this.selectedInteractionType = type;\n    }\n\n    constructor(private changeDetector: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.valueAccessor = (i, j) => this.values[j][i];\n        this.palette = new ChartPalette(new MappedValueProvider<string>(zipObject(this.subCategories, CHART_PALETTE_CS_S)));\n\n        this.updateChartType(this.chartTypes[0]);\n    }\n\n    public updateChartType(chartType: ChartType) {\n        this.selectedChartType = chartType;\n        this.buildChart();\n        this.subscribeToChart();\n        this.updateChart();\n    }\n\n    private buildChart() {\n        const {grid, accessors, renderer, scales, seriesProcessor} = this.getChartAttributes(this.selectedChartType);\n\n        this.chartAssist = new ChartAssist(new Chart(grid));\n        this.chartAssist.palette = this.palette;\n\n        this.chartAssist.chart.addPlugin(new InteractionLabelPlugin());\n\n        this.renderer = renderer;\n        this.accessors = accessors;\n        this.scales = scales;\n        this.seriesProcessor = seriesProcessor;\n    }\n\n    private subscribeToChart() {\n        each(this.eventFilters, filter => {\n            this.chartAssist.chart.getEventBus().getStream(filter.id).subscribe((event: IChartEvent) => {\n                if (this.selectedEvent.id === filter.id) {\n                    if (!event.data.interactionType || this.selectedInteractionType === event.data.interactionType) {\n                        recursivelyReplacePropValue(event, \"dataSeries\", \"<< IChartSeries info is available here (replaced in output for brevity) >>\");\n                        this.parsedEvent = event;\n                        this.changeDetector.markForCheck();\n                    }\n                }\n            });\n        });\n    }\n\n    private updateChart(): void {\n        let seriesSet: IChartSeries<IAccessors>[]\n            | IChartSeries<IBarAccessors>[] = this.buildChartSeries(this.categories, this.subCategories, this.valueAccessor);\n        // TODO: Refactor this to be able to pass different types of seriesSet to get rid of the any\n        seriesSet = this.seriesProcessor ? this.seriesProcessor(<any>seriesSet, () => true) : seriesSet;\n        this.chartAssist.update(seriesSet);\n    }\n\n    private buildChartSeries(\n        categories: string[],\n        subCategories: string[],\n        valueAccessor: (i: number, j: number) => number\n    ): IChartSeries<IBarAccessors>[] | IChartSeries<IAccessors>[] {\n        return subCategories.map((subCategory, i) => ({\n            id: subCategory,\n            name: subCategory,\n            data: categories.map((xCategory, j) => ({category: xCategory, value: valueAccessor(i, j) || 0})),\n            accessors: this.accessors,\n            renderer: this.renderer,\n            scales: this.scales,\n        }));\n    }\n\n    private getChartAttributes(chartType: ChartType): IChartAttributes | IChartAttributes<IBarAccessors> {\n        const t: IChartTools | IChartTools<IBarAccessors> = this.getChartTools(chartType);\n        let result: IChartAttributes | IChartAttributes<IBarAccessors> = {\n            grid: t.gridFunction(),\n            accessors: t.accessorFunction(),\n            renderer: t.rendererFunction(),\n            scales: t.scaleFunction(),\n        };\n\n        if (t.seriesProcessor) {\n            result = {...result, seriesProcessor: t.seriesProcessor} as IChartAttributes<IBarAccessors>;\n        }\n        return result;\n    }\n\n    private getChartTools(chartType: ChartType): IChartTools<IBarAccessors> | IChartTools {\n        const chartTools: Record<ChartType, IChartTools<IBarAccessors> | IChartTools> = {\n            [ChartType.StackedBar]: {\n                seriesProcessor: stackedPreprocessor,\n                gridFunction: barGrid,\n                rendererFunction: () => new BarRenderer({highlightStrategy: new BarHighlightStrategy(\"x\")}),\n                accessorFunction: () => barAccessors(undefined, this.palette.standardColors),\n                scaleFunction: barScales,\n            },\n            [ChartType.GroupedBar]: {\n                gridFunction: () => barGrid({grouped: true}),\n                rendererFunction: () => new BarRenderer({highlightStrategy: new BarSeriesHighlightStrategy(\"x\")}),\n                accessorFunction: () => {\n                    const accessors = barAccessors({grouped: true}, this.palette.standardColors);\n                    accessors.data.category = (data, i, series, dataSeries) => [data.category, dataSeries.name];\n                    return accessors;\n                },\n                scaleFunction: () => barScales({grouped: true}),\n            },\n            [ChartType.Line]: {\n                gridFunction: () => new XYGrid(),\n                rendererFunction: () => new LineRenderer({\n                    interactionStrategy: new LineSelectSeriesInteractionStrategy(),\n                    markerInteraction: { enabled: true, clickable: true },\n                }),\n                accessorFunction: () => {\n                    const accessors = new LineAccessors(this.palette.standardColors);\n                    accessors.data.x = d => d.category;\n                    accessors.data.y = d => d.value;\n                    accessors.data.value = d => d.value;\n                    return accessors;\n                },\n                scaleFunction: () => ({\n                    x: new BandScale().fixDomain(this.categories),\n                    y: new LinearScale(),\n                }),\n            },\n        };\n\n        return chartTools[chartType];\n    }\n\n}\n\nfunction recursivelyReplacePropValue(obj: Record<string, any>, property: string, replacement: string): void {\n    for (const prop in obj) {\n        if (prop === property) {\n            obj[prop] = replacement;\n        } else if (typeof obj[prop] === \"object\") {\n            recursivelyReplacePropValue(obj[prop], property, replacement);\n        }\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, NuiMessageModule, NuiSelectModule, SrlcStage\n} from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { ChartDocsEventsComponent } from \"./chart-docs-events.component\";\nimport { EventSamplerComponent } from \"./event-sampler/event-sampler.component\";\nimport { EventsBasicExampleComponent } from \"./events-basic/events-basic-example.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsEventsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"basic\",\n        component: EventsBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"event-sampler\",\n        component: EventSamplerComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsEventsComponent,\n        EventsBasicExampleComponent,\n        EventSamplerComponent,\n    ],\n    imports: [\n        NuiButtonModule,\n        NuiCheckboxModule,\n        NuiChartsModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiSelectModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsEventsModule { }\n","export default \".sampler-output__container {\\n  height: 660px;\\n  overflow-y: scroll;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50LXNhbXBsZXIuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0VBQ0Esa0JBQUE7QUFESiIsImZpbGUiOiJldmVudC1zYW1wbGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQHNhbXBsZXItb3V0cHV0LWNvbnRhaW5lci1oZWlnaHQ6IDY2MHB4O1xuXG4uc2FtcGxlci1vdXRwdXRfX2NvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiBAc2FtcGxlci1vdXRwdXQtY29udGFpbmVyLWhlaWdodDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG4iXX0= */\";"],"sourceRoot":"webpack:///"}