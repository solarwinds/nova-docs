{"version":3,"sources":["webpack:///examples/components/demo/chart-types/spark/chart-docs-spark.module.ts","webpack:///examples/components/demo/chart-types/spark/chart-docs-spark.component.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?2aee","webpack:///examples/components/demo/chart-types/spark/spark-chart-stroke-test/area-spark-minimal-test.component.less?3db3","webpack:///examples/components/demo/chart-types/spark/spark-chart-legend/spark-chart-legend.example.component.ts","webpack:///examples/components/demo/chart-types/spark/spark-chart-multiple/spark-chart-multiple.example.component.ts","webpack:///examples/components/demo/chart-types/spark/spark-chart-test/spark-chart-test.component.ts","webpack:///examples/components/demo/chart-types/spark/spark-chart-stroke-test/area-spark-minimal-test.component.ts","webpack:///examples/components/demo/chart-types/spark/spark-chart-table/spark-chart-table.example.component.ts","webpack:///examples/components/demo/chart-types/spark/spark-chart-basic/spark-chart-basic.example.component.ts"],"names":["exampleRoutes","path","component","data","beta","showThemeSwitcher","ChartDocsSparkModule","declarations","imports","forChild","providers","provide","useFactory","ChartDocsSparkComponent","gridConfiguration","scaleInstantiationWithId","collectionIdHtml","selector","template","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","SparkChartLegendExampleComponent","chartAssist","accessors","renderer","scales","x","y","seriesSet","getData","d","update","format","name","SparkChartMultipleExampleComponent","palette","standardColors","markers","SparkChartTestComponent","colors","initialInput","baseDate","xScale","input","JSON","stringify","configureGrid","gridConfig","lastGridConfig","value","parse","generateSparkSeriesSet","dimension","autoWidth","width","seriesData","i","sparkYScale","fixDomain","formatters","v","Number","toPrecision","sparkScales","clone","add","AreaSparkMinimalTestComponent","axis","left","visible","bottom","top","right","borders","padding","interactive","margin","gridTicks","grid","chart","strokeWidth","SparkChartTableExampleComponent","displayedColumns","dataSource","generateTableData","yScale","dataSeries","node","cpu","popoverPlugin","sparks","addPlugin","row","SparkChartBasicExampleComponent"],"mappings":"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","file":"spark-chart-docs-spark-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiMessageModule, NuiTableModule, SrlcStage } from \"@nova-ui/bits\";\nimport { NuiChartsModule } from \"@nova-ui/charts\";\n\nimport { ChartDocsSparkComponent } from \"./chart-docs-spark.component\";\nimport { SparkChartBasicExampleComponent } from \"./spark-chart-basic/spark-chart-basic.example.component\";\nimport { SparkChartLegendExampleComponent } from \"./spark-chart-legend/spark-chart-legend.example.component\";\nimport { SparkChartMultipleExampleComponent } from \"./spark-chart-multiple/spark-chart-multiple.example.component\";\nimport { AreaSparkMinimalTestComponent } from \"./spark-chart-stroke-test/area-spark-minimal-test.component\";\nimport { SparkChartTableExampleComponent } from \"./spark-chart-table/spark-chart-table.example.component\";\nimport { SparkChartTestComponent } from \"./spark-chart-test/spark-chart-test.component\";\n\nconst exampleRoutes: Routes = [\n    {\n        path: \"\",\n        component: ChartDocsSparkComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"basic\",\n        component: SparkChartBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"legend\",\n        component: SparkChartLegendExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"multiple\",\n        component: SparkChartMultipleExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"table\",\n        component: SparkChartTableExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"test\",\n        component: SparkChartTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        ChartDocsSparkComponent,\n        SparkChartBasicExampleComponent,\n        SparkChartLegendExampleComponent,\n        SparkChartMultipleExampleComponent,\n        SparkChartTableExampleComponent,\n        SparkChartTestComponent,\n        AreaSparkMinimalTestComponent,\n    ],\n    imports: [\n        FormsModule,\n        NuiChartsModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        NuiTableModule,\n        RouterModule.forChild(exampleRoutes),\n    ],\n    providers: [\n        { provide: DEMO_PATH_TOKEN, useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/) },\n    ],\n})\nexport class ChartDocsSparkModule {\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-chart-docs-spark\",\n    templateUrl: \"./chart-docs-spark.component.html\",\n})\nexport class ChartDocsSparkComponent {\n    public gridConfiguration = `public chart = new Chart(new XYGrid(new SparkChartGridConfig(false, false)));\n...`;\n    public scaleInstantiationWithId = `const scale = new TimeScale(\"example-scale-id\");\n...`;\n    public collectionIdHtml = `<div *ngFor=\"let s of chartAssist.sparks\">\n    <nui-chart class=\"d-flex\" [chart]=\"s.chart\" nuiChartCollectionId=\"example-collection-id\"></nui-chart>\n</div>`;\n}\n","var map = {\n\t\"./chart-docs-spark.component.html\": \"VXYK\",\n\t\"./chart-docs-spark.component.ts\": \"aEDV\",\n\t\"./chart-docs-spark.module.ts\": \"WWui\",\n\t\"./spark-chart-basic/spark-chart-basic.example.component.html\": \"VU9g\",\n\t\"./spark-chart-basic/spark-chart-basic.example.component.ts\": \"9WrG\",\n\t\"./spark-chart-legend/spark-chart-legend.example.component.html\": \"kBhg\",\n\t\"./spark-chart-legend/spark-chart-legend.example.component.ts\": \"VUb8\",\n\t\"./spark-chart-multiple/spark-chart-multiple.example.component.html\": \"O2Lm\",\n\t\"./spark-chart-multiple/spark-chart-multiple.example.component.ts\": \"4T4B\",\n\t\"./spark-chart-stroke-test/area-spark-minimal-test.component.html\": \"Voir\",\n\t\"./spark-chart-stroke-test/area-spark-minimal-test.component.less\": \"Z35r\",\n\t\"./spark-chart-stroke-test/area-spark-minimal-test.component.ts\": \"BCaa\",\n\t\"./spark-chart-table/spark-chart-table.example.component.html\": \"xLy/\",\n\t\"./spark-chart-table/spark-chart-table.example.component.ts\": \"MhnZ\",\n\t\"./spark-chart-test/spark-chart-test.component.html\": \"k9+c\",\n\t\"./spark-chart-test/spark-chart-test.component.ts\": \"zT5C\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"FbsN\";","export default \".chart-container {\\n  border-left: 1px solid var(--nui-color-line-strong, #999);\\n  border-right: 1px solid var(--nui-color-line-strong, #999);\\n  height: 42px;\\n  width: 150px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyZWEtc3BhcmstbWluaW1hbC10ZXN0LmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseURBQUE7RUFDQSwwREFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoiYXJlYS1zcGFyay1taW5pbWFsLXRlc3QuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQtY29udGFpbmVyIHtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHZhcigtLW51aS1jb2xvci1saW5lLXN0cm9uZywgIzk5OSk7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgdmFyKC0tbnVpLWNvbG9yLWxpbmUtc3Ryb25nLCAjOTk5KTtcbiAgICBoZWlnaHQ6IDQycHg7XG4gICAgd2lkdGg6IDE1MHB4O1xufVxuIl19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { IChartSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale } from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-legend-example\",\n    templateUrl: \"./spark-chart-legend.example.component.html\",\n})\nexport class SparkChartLegendExampleComponent implements OnInit {\n    public chartAssist: SparkChartAssist;\n\n    public ngOnInit() {\n        // spark chart setup\n        this.chartAssist = new SparkChartAssist();\n\n        const accessors = new LineAccessors();\n        const renderer = new LineRenderer();\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // chart assist needs to be used to update data\n        this.chartAssist.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [{\n        id: \"1\",\n        name: \"Series 1\",\n        data: [\n            { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 85 },\n            { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n            { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n            { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n            { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n            { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n            { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 30 },\n            { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n            { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n            { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { IChartAssistSeries, ILineAccessors, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale } from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-multiple-example\",\n    templateUrl: \"./spark-chart-multiple.example.component.html\",\n})\nexport class SparkChartMultipleExampleComponent implements OnInit {\n    public chartAssist: SparkChartAssist;\n\n    public ngOnInit() {\n        // spark chart setup\n        this.chartAssist = new SparkChartAssist();\n\n        // providing chartAssist colors and markers to LineAccessors will share them with the line chart\n        const accessors = new LineAccessors(this.chartAssist.palette.standardColors, this.chartAssist.markers);\n        const renderer = new LineRenderer();\n\n        const seriesSet: IChartAssistSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales: {\n                // using the same scale id for the x-axes is necessary to achieve synchronized hover interaction between charts\n                // - sharing the same instance of the scale would work as well\n                x: new TimeScale(\"shared-id\"),\n                y: new LinearScale(),\n            },\n        }));\n\n        // chart assist needs to be used to update data\n        this.chartAssist.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [\n        {\n            id: \"spark-series-1\",\n            name: \"Tex-lab-aus-2621\",\n            data: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 85 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 30 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            ],\n        },\n        {\n            id: \"spark-series-2\",\n            name: \"Cz-lab-brn-02\",\n            data: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 93 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 71 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 85 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 54 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 79 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 64 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 49 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 70 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 59 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 76 },\n            ],\n        },\n        {\n            id: \"spark-series-3\",\n            name: \"Ua-lab-kie-03\",\n            data: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 60 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 75 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 42 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 84 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 41 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 50 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 56 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 44 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 75 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 48 },\n            ],\n        },\n    ];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart, ChartPalette, IChartAssistSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale, XYGridConfig,\n} from \"@nova-ui/charts\";\nimport moment, { Moment } from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-test\",\n    templateUrl: \"./spark-chart-test.component.html\",\n})\nexport class SparkChartTestComponent implements OnInit {\n    private colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"black\", \"white\"];\n    private initialInput = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]];\n    private baseDate = moment([2016, 11, 25]);\n\n    private xScale = new TimeScale();\n    private renderer = new LineRenderer();\n    private palette = new ChartPalette(this.colors);\n    private accessors = new LineAccessors(this.palette.standardColors);\n    public chartAssist: SparkChartAssist = new SparkChartAssist(true, true, this.palette);\n\n    public input: string;\n    public chart: Chart;\n\n    public ngOnInit() {\n        this.input = JSON.stringify(this.initialInput);\n        this.configureGrid(this.chartAssist.gridConfig);\n        this.configureGrid(this.chartAssist.lastGridConfig);\n        this.update(this.initialInput);\n    }\n\n    public inputChanged(value: string) {\n        this.update(JSON.parse(value));\n    }\n\n    private update(input: number[][]) {\n        const seriesSet = this.generateSparkSeriesSet(input);\n        this.chartAssist.update(seriesSet);\n    }\n\n    private configureGrid(gridConfig: XYGridConfig) {\n        gridConfig.dimension.autoWidth = false;\n        gridConfig.dimension.width(400);\n    }\n\n    private generateSparkSeriesSet(input: number[][]): IChartAssistSeries<ILineAccessors>[] {\n        return input.map((seriesData: number[], i: number) => {\n            const sparkYScale = new LinearScale();\n            sparkYScale.fixDomain([0, 26]); // spark chart height is 26px (36px - 5px top - 5px bottom padding)\n            sparkYScale.formatters.value = v => (Number(v).toPrecision(4));\n            const sparkScales: IXYScales = {\n                x: this.xScale,\n                y: sparkYScale,\n            };\n            return {\n                id: `${i + 1}`,\n                name: `dev-aus-vm-0${i + 1}`,\n                accessors: this.accessors,\n                data: this.getData(seriesData),\n                scales: sparkScales,\n                renderer: this.renderer,\n            } as IChartAssistSeries<ILineAccessors>;\n        });\n    }\n\n    private getData(seriesData: number[]): { x: Moment, y: number }[] {\n        return seriesData.map((value: number, i: number) => ({\n            x: this.baseDate.clone().add(i, \"days\"),\n            y: value,\n        }));\n    }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    AreaRenderer,\n    Chart,\n    IChart,\n    IChartSeries,\n    ILineAccessors,\n    IXYScales,\n    LinearScale,\n    stackedAreaAccessors,\n    TimeScale,\n    XYGrid,\n    XYGridConfig\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-area-spark-minimal-test\",\n    templateUrl: \"./area-spark-minimal-test.component.html\",\n    styleUrls: [\"./area-spark-minimal-test.component.less\"],\n})\nexport class AreaSparkMinimalTestComponent implements OnInit {\n    public chart: IChart;\n\n    public ngOnInit() {\n        const gridConfig = new XYGridConfig();\n        gridConfig.axis.left.visible = false;\n        gridConfig.axis.bottom.visible = false;\n        gridConfig.axis.top.visible = false;\n        gridConfig.axis.right.visible = false;\n        gridConfig.borders.bottom.visible = false;\n        gridConfig.dimension.padding.bottom = 0;\n        gridConfig.interactive = false;\n        gridConfig.dimension.margin.right = 0;\n        gridConfig.dimension.margin.bottom = 0;\n        gridConfig.dimension.margin.top = 0;\n        gridConfig.dimension.margin.left = 0;\n        gridConfig.axis.left.gridTicks = false;\n\n        // Create an x-y grid by passing the spark chart grid config as an argument to the constructor\n        const grid = new XYGrid(gridConfig);\n\n        // Instantiate the chart using the configured spark chart grid as an argument to the chart's constructor\n        this.chart = new Chart(grid);\n\n        // Generate line accessors, x-y scales, and a line renderer to be included in the IChartSeries collection\n        const accessors = stackedAreaAccessors();\n        const renderer = new AreaRenderer({ strokeWidth: 0 });\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        // Assemble the series set\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // Invoke the chart's update method with the IChartSeries collection as the argument\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [{\n        id: \"1\",\n        name: \"Series 1\",\n        data: [\n            { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 62 },\n            { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n            { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n            { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n            { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n            { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n            { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 69 },\n            { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n            { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n            { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            { x: moment(\"2018-11-21T15:06:12.413Z\", format), y: 68 },\n            { x: moment(\"2018-12-05T06:49:39.310Z\", format), y: 82 },\n            { x: moment(\"2018-12-18T22:33:06.206Z\", format), y: 81 },\n            { x: moment(\"2019-01-01T14:16:33.103Z\", format), y: 78 },\n            { x: moment(\"2019-01-15T06:00:00.000Z\", format), y: 90 },\n        ],\n    }];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    ChartPopoverPlugin, IChartAssistSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, SparkChartAssist, TimeScale\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-table-example\",\n    templateUrl: \"./spark-chart-table.example.component.html\",\n})\nexport class SparkChartTableExampleComponent implements OnInit {\n    public displayedColumns = [\"name\", \"chart\"];\n    public dataSource: any[] = [];\n\n    public ngOnInit() {\n        this.generateTableData();\n    }\n\n    private generateTableData() {\n        const renderer = new LineRenderer();\n\n        this.dataSource = getData().map((d, i: number) => {\n            // Chart assist setup\n            const chartAssist = new SparkChartAssist(false, false);\n\n            // using a new accessors instance for each spark allows for the sequential\n            // color provider within to provide the same color for each sparkline\n            const accessors = new LineAccessors();\n            const yScale = new LinearScale();\n            yScale.formatters.value = v => (Number(v).toPrecision(4));\n            const scales: IXYScales = {\n                // using the same scale id for the x-axes is necessary to achieve synchronized hover interaction between charts\n                // - sharing the same instance of the scale would work as well\n                x: new TimeScale(\"shared-id\"),\n                y: yScale,\n            };\n\n            // series setup\n            const dataSeries: IChartAssistSeries<ILineAccessors> = {\n                id: `spark-series-${i + 1}`,\n                name: d.node,\n                data: d.cpu,\n                accessors,\n                renderer,\n                scales,\n            };\n\n            // chart assist needs to be used to update data\n            chartAssist.update([dataSeries]);\n\n            // popover plugin must be added after the initial update as the spark chart assist creates the sparks on update\n            const popoverPlugin = new ChartPopoverPlugin();\n            chartAssist.sparks[0].chart?.addPlugin(popoverPlugin);\n\n            // assembly of table row data\n            const row = { ...d, chartAssist, popoverPlugin };\n            return row;\n        });\n    }\n}\n\n/* Chart data */\nfunction getData(): any[] {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n    return [\n        {\n            node: \"Tex-lab-aus-2621\",\n            cpu: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 85 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 30 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            ],\n        },\n        {\n            node: \"Cz-lab-brn-02\",\n            cpu: [\n                { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 93 },\n                { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 71 },\n                { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 85 },\n                { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 54 },\n                { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 79 },\n                { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 64 },\n                { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 49 },\n                { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 70 },\n                { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 59 },\n                { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 76 },\n            ],\n        },\n    ];\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n    Chart, IChart, IChartSeries, ILineAccessors, IXYScales, LineAccessors, LinearScale, LineRenderer, sparkChartGridConfig, TimeScale, XYGrid, XYGridConfig\n} from \"@nova-ui/charts\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-spark-chart-basic-example\",\n    templateUrl: \"./spark-chart-basic.example.component.html\",\n})\nexport class SparkChartBasicExampleComponent implements OnInit {\n    public chart: IChart;\n\n    public ngOnInit() {\n        // This grid configuration is what turns a regular chart into a spark chart\n        const gridConfig = sparkChartGridConfig(new XYGridConfig(), false, false);\n        gridConfig.interactive = false;\n\n        // Create an x-y grid by passing the spark chart grid config as an argument to the constructor\n        const grid = new XYGrid(gridConfig);\n\n        // Instantiate the chart using the configured sprk chart grid as an argument to the chart's constructor\n        this.chart = new Chart(grid);\n\n        // Generate line accessors, x-y scales, and a line renderer to be included in the IChartSeries collection\n        const accessors = new LineAccessors();\n        const renderer = new LineRenderer();\n        const scales: IXYScales = {\n            x: new TimeScale(),\n            y: new LinearScale(),\n        };\n\n        // Assemble the series set\n        const seriesSet: IChartSeries<ILineAccessors>[] = getData().map(d => ({\n            ...d,\n            accessors,\n            renderer,\n            scales,\n        }));\n\n        // Invoke the chart's update method with the IChartSeries collection as the argument\n        this.chart.update(seriesSet);\n    }\n}\n\n/* Chart data */\nfunction getData() {\n    const format = \"YYYY-MM-DDTHH:mm:ssZ\";\n\n    return [{\n        id: \"1\",\n        name: \"Series 1\",\n        data: [\n            { x: moment(\"2018-07-08T01:51:43.448Z\", format), y: 62 },\n            { x: moment(\"2018-07-21T17:35:10.344Z\", format), y: 57 },\n            { x: moment(\"2018-08-04T09:18:37.241Z\", format), y: 99 },\n            { x: moment(\"2018-08-18T01:02:04.137Z\", format), y: 75 },\n            { x: moment(\"2018-08-31T16:45:31.034Z\", format), y: 55 },\n            { x: moment(\"2018-09-14T08:28:57.931Z\", format), y: 73 },\n            { x: moment(\"2018-09-28T00:12:24.827Z\", format), y: 69 },\n            { x: moment(\"2018-10-11T15:55:51.724Z\", format), y: 77 },\n            { x: moment(\"2018-10-25T07:39:18.620Z\", format), y: 57 },\n            { x: moment(\"2018-11-07T23:22:45.517Z\", format), y: 61 },\n            { x: moment(\"2018-11-21T15:06:12.413Z\", format), y: 68 },\n            { x: moment(\"2018-12-05T06:49:39.310Z\", format), y: 82 },\n            { x: moment(\"2018-12-18T22:33:06.206Z\", format), y: 81 },\n            { x: moment(\"2019-01-01T14:16:33.103Z\", format), y: 78 },\n            { x: moment(\"2019-01-15T06:00:00.000Z\", format), y: 90 },\n        ],\n    }];\n}\n"]}