{"version":3,"sources":["./demo/src/components/demo/wizard-v2/wizard-restore-state/wizard-restore-state.example.component.ts","./demo/src/components/demo/wizard-v2/wizard-restore-state/wizard-restore-state.example.component.html","webpack:///./demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.ts?d1db","webpack:///./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.html?d6c5","webpack:///./demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.html?dbfe","webpack:///./demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.html?dd4c","./demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.less","webpack:///./demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts?e9ed","webpack:///./demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.html?03b1","webpack:///./demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.html?03cc","webpack:///./demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.ts?0aee","webpack:///./demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.ts?0f3d","webpack:///./demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.html?12b3","./demo/src/components/demo/wizard-v2/wizard.module.ts","./demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.ts","./demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.html","./demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.html","./demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.ts","./demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.html","./demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.ts","./demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.less","./demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.html","./demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.ts","webpack:///./demo/src/components/demo/wizard-v2/wizard-step-change-example/wizard-step-change-example.component.html?3aba","webpack:///./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.ts?3cbd","webpack:///./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom.component.html?3e2a","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?161e","webpack:///./demo/src/components/demo/wizard-v2/wizard.module.ts?4cbf","webpack:///./demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.ts?534a","webpack:///./demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.html?53d2","webpack:///./demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html?5648","webpack:///./demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.ts?58bc","./demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts","./demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html","./demo/src/components/demo/wizard-v2/wizard-step-change-example/wizard-step-change-example.component.ts","./demo/src/components/demo/wizard-v2/wizard-step-change-example/wizard-step-change-example.component.html","webpack:///./demo/src/components/demo/wizard-v2/wizard-restore-state/wizard-restore-state.example.component.html?82dc","./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.ts","./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom.component.html","./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.html","webpack:///./demo/src/components/demo/wizard-v2/index.ts?880a","webpack:///./demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html?8d8c","webpack:///./demo/src/components/demo/wizard-v2/wizard-restore-state/wizard-restore-state.example.component.ts?9275","./demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.ts","./demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.html","webpack:///./demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.ts?99b3","./demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts","./demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html","./demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom.component.less","webpack:///./demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts?a995","webpack:///./demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.ts?ae33","webpack:///./demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.html?b378","./demo/src/components/demo/wizard-v2/index.ts","./demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.ts","./demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.html","webpack:///./demo/src/components/demo/wizard-v2/wizard-step-change-example/wizard-step-change-example.component.ts?cf50","./demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.html","./demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.ts"],"names":[],"mappings":"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","file":"demo-wizard-v2-wizard-module-es2015.js","sourcesContent":["import { Component, Inject, OnDestroy, OnInit, TemplateRef, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { DialogService, NuiDialogRef, WizardStepV2Component, IWizardState } from \"@nova-ui/bits\";\nimport isEqual from \"lodash/isEqual\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { IWizardStepConfig } from \"../wizard-dynamic/wizard-dynamic.example.component\";\n\n@Component({\n    selector: \"nui-wizard-restore-state-example\",\n    templateUrl: \"./wizard-restore-state.example.component.html\",\n})\nexport class WizardRestoreStateExampleComponent implements OnInit, OnDestroy {\n    public form: FormGroup;\n    public activeDialog: NuiDialogRef;\n    public state: IWizardState;\n    public dynamicSteps: IWizardStepConfig[] = [];\n    public awesome: boolean = false;\n\n    private destroy$: Subject<any> = new Subject();\n\n    @ViewChild(\"dynamicTemplate1\") public template1: TemplateRef<string>;\n    @ViewChild(\"dynamicTemplate2\") public template2: TemplateRef<string>;\n\n    constructor(private formBuilder: FormBuilder,\n                @Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit(): void {\n        this.form = new FormGroup({\n            \"personDetails\": this.formBuilder.group({\n                \"name\": [\n                    \"\",\n                    [Validators.required, Validators.minLength(3)],\n                ],\n                \"privacy\": [false, [Validators.requiredTrue]],\n            }),\n            \"organization\": this.formBuilder.group({\n                \"title\": [\"\", [Validators.required]],\n                \"date\": [\"\", [Validators.required]],\n                \"createDynamicStep1\": [false],\n                \"createDynamicStep2\": [false],\n            }),\n            \"contactDetails\": this.formBuilder.group({\n                \"email\": [\"\", [Validators.required, Validators.email]],\n                \"options\": [\"\"],\n            }),\n        });\n\n        this.form.get([\"organization\", \"createDynamicStep1\"])?.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(changes => {\n                this.handleDynamicSteps(\"I was created dynamically!\", this.template1, changes);\n            });\n\n        this.form.get([\"organization\", \"createDynamicStep2\"])?.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(changes => {\n                this.handleDynamicSteps(\"Another dynamic step\", this.template2, changes);\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public openDialog(content: TemplateRef<string>): void {\n        this.activeDialog = this.dialogService.open(content, {size: \"lg\"});\n    }\n\n    public closeDialog(): void {\n        this.activeDialog.close();\n    }\n\n    public saveState(state: IWizardState): void {\n        this.state = state;\n    }\n\n    public completeWizard(step: WizardStepV2Component): void {\n        step.completed = true;\n        this.activeDialog.close();\n    }\n\n    public resetStep(step: WizardStepV2Component): void {\n        step.reset();\n    }\n\n    private validateStep(formGroup: string): void {\n        this.form.get(formGroup)?.markAllAsTouched();\n    }\n\n    private handleDynamicSteps(title: string, template: TemplateRef<string>, controlValue: boolean) {\n        const newStep: IWizardStepConfig = { title: title, templateRef: template };\n        const index = this.dynamicSteps.findIndex(step => isEqual(step, newStep));\n\n        controlValue\n            ? this.dynamicSteps.push({...newStep})\n            : this.dynamicSteps.splice(index, 1);\n    }\n}\n","<ng-template #dialogWizard>\n    <nui-dialog-header i18n-title\n                       title=\"Restore Wizard State\"\n                       (closed)=\"closeDialog()\">\n    </nui-dialog-header>\n    <form class=\"dialog-body compact-mode\"\n          [formGroup]=\"form\"\n          *ngIf=\"form\">\n        <nui-wizard-horizontal\n            linear\n            [state]=\"state\"\n            (finished)=\"saveState($event)\"\n        >\n            <nui-wizard-step-v2 label=\"Person Details\"\n                                formGroupName=\"personDetails\"\n                                [stepControl]=\"form.get(['personDetails'])\">\n                <nui-form-field [control]=\"form.get(['personDetails','name'])\"\n                                class=\"d-block mb-4 mt-4\"\n                                i18n-caption\n                                caption=\"Name\">\n                    <nui-textbox formControlName=\"name\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['personDetails','name'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <nui-form-field [control]=\"form.get(['personDetails','privacy'])\">\n                    <nui-checkbox formControlName=\"privacy\" [value]=\"true\">\n                        Privacy Policy\n                    </nui-checkbox>\n\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['personDetails','privacy'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <ng-template wizardStepFooter>\n                    <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                    <ng-container *ngTemplateOutlet=\"wizardNext; context: { form: 'personDetails' }\"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2 label=\"Organization\"\n                                formGroupName=\"organization\"\n                                [stepControl]=\"form.get(['organization'])\">\n                <nui-form-field [control]=\"form.get(['organization', 'title'])\"\n                                class=\"d-block mb-4\"\n                                i18n-caption\n                                caption=\"Organization\">\n                    <nui-textbox formControlName=\"title\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['organization','title'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n                </nui-form-field>\n                <nui-form-field caption=\"Date\"\n                                class=\"d-block mb-4\"\n                                [control]=\"form.get(['organization','date'])\">\n                    <nui-date-picker formControlName=\"date\" i18n></nui-date-picker>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['organization','date'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n                </nui-form-field>\n                <nui-form-field [control]=\"form.get(['organization','createDynamicStep1'])\" class=\"d-block\">\n                    <nui-checkbox formControlName=\"createDynamicStep1\" [value]=\"true\">\n                        Add first step dynamically\n                    </nui-checkbox>\n                </nui-form-field>\n                <nui-form-field [control]=\"form.get(['organization','createDynamicStep2'])\" class=\"d-block\">\n                    <nui-checkbox formControlName=\"createDynamicStep2\" [value]=\"true\">\n                        Add second step dynamically\n                    </nui-checkbox>\n                </nui-form-field>\n                    <ng-template wizardStepFooter>\n                        <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                        <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                        <ng-container *ngTemplateOutlet=\"wizardNext; context: { form: 'organization' }\"></ng-container>\n                    </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2 *ngFor=\"let step of dynamicSteps\">\n                <ng-template wizardStepLabel>{{step.title}}</ng-template>\n                <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n                <ng-template wizardStepFooter>\n                    <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                    <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2 formGroupName=\"contactDetails\"\n                                [stepControl]=\"form.get(['contactDetails'])\"\n                                #finalStep>\n\n                <ng-template wizardStepLabel>\n                    <span>Contact Details</span>\n                </ng-template>\n\n                <nui-form-field [control]=\"form.get(['contactDetails','email'])\"\n                                class=\"d-block mb-4 mt-4\"\n                                i18n-caption\n                                caption=\"Email\">\n                    <nui-textbox type=\"email\" formControlName=\"email\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['contactDetails','email'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n\n                    <nui-validation-message for=\"email\"\n                                            *ngIf=\"form.get(['contactDetails','email'])?.errors?.email\"\n                                            i18n>\n                        Invalid email\n                    </nui-validation-message>\n                </nui-form-field>\n\n                <nui-form-field caption=\"Select\"\n                    [control]=\"form.get(['contactDetails','options'])\">\n                    <nui-select-v2 formControlName=\"options\">\n                        <nui-select-v2-option value=\"Item 1\">Item 1</nui-select-v2-option>\n                        <nui-select-v2-option value=\"Item 2\">Item 2</nui-select-v2-option>\n                    </nui-select-v2>\n                </nui-form-field>\n\n                    <ng-template wizardStepFooter>\n                        <button nui-button\n                                type=\"button\"\n                                displayStyle=\"destructive\"\n                                (click)=\"resetStep(finalStep)\">\n                            Reset step\n                        </button>\n                        <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                        <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                        <button type=\"button\"\n                                nui-button\n                                displayStyle=\"primary\"\n                                [disabled]=\"form.get(['contactDetails','email']).invalid\"\n                                (click)=\"completeWizard(finalStep)\"\n                        >\n                            Finish\n                        </button>\n                    </ng-template>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardPrevious>\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext let-form=\"form\">\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                        (click)=\"validateStep(form)\"\n                >Next</button>\n            </ng-template>\n\n            <ng-template #wizardCancel>\n                <button type=\"button\" nui-button displayStyle=\"action\" (click)=\"closeDialog()\">\n                    Cancel\n                </button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </form>\n</ng-template>\n\n<ng-template #dynamicTemplate1>\n    <p i18n>Hi! I was created dynamically, because you've checked the checkbox on the previous step! Uncheck it to hide me!</p>\n</ng-template>\n\n<ng-template #dynamicTemplate2>\n    <p i18n>This is another template rendered dynamically!</p>\n    <button type=\"button\" nui-button class=\"mb-3\" (click)=\"awesome = !awesome\">Click if you're awesome</button>\n    <nui-message *ngIf=\"awesome\" type=\"ok\">You are awesome!</nui-message>\n</ng-template>\n\n<button nui-button type=\"button\" (click)=\"openDialog(dialogWizard)\" i18n> Open dialog wizard</button>\n","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    TemplateRef,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\n\\nimport {IWizardStepConfig } from \\\"../wizard-dynamic/wizard-dynamic.example.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-remove-step-example\\\",\\n    templateUrl: \\\"./wizard-remove-step-example.component.html\\\",\\n})\\nexport class WizardRemoveStepExampleComponent implements AfterViewInit {\\n    public steps: IWizardStepConfig[] = [];\\n\\n    @ViewChild(\\\"normalStep\\\") normalStep: TemplateRef<string>;\\n\\n    public ngAfterViewInit(): void {\\n        this.addStep(this.normalStep, $localize `Normal step`);\\n    }\\n\\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\\n        this.steps.push({title: title ?? `Dynamic Step`, templateRef: templateRef});\\n    }\\n\\n    public removeStep(index: number): void {\\n        this.steps.splice(index, 1);\\n    }\\n}\\n\";","export default \"<form [formGroup]=\\\"formGroup\\\">\\n    <nui-wizard-custom [linear]=\\\"true\\\" #wizard>\\n        <!-- Overview content-->\\n        <ng-container summary>\\n            <h2>Overview</h2>\\n            <nui-progress [show]=\\\"true\\\"\\n                          [stacked]=\\\"true\\\"\\n                          [percent]=\\\"progress| number: '1.0-0'\\\"\\n                          [showNumber]=\\\"true\\\">\\n            </nui-progress>\\n            <p>Step {{selectedIndex+1}} out of {{steps}} steps</p>\\n            <p>Name: {{formGroup.get(['personDetails', 'name'])?.value || \\\"Not provided\\\"}}</p>\\n            <p>Symptoms:\\n                <ng-container [ngSwitch]=\\\"formGroup.get(['personDetails','symptoms'])?.value\\\">\\n                    <ng-container *ngSwitchCase=\\\"true\\\">\\n                        {{ formGroup.get(['diseaseDetails','date']).valid ? \\\"Since \\\" + formGroup.get(['diseaseDetails','date'])?.value.format('D MMM YYYY') : \\\"Yes\\\" }}\\n                    </ng-container>\\n                    <ng-container *ngSwitchCase=\\\"false\\\" i18n>No</ng-container>\\n                    <ng-container *ngSwitchDefault i18n>Unknown</ng-container>\\n                </ng-container>\\n            </p>\\n            <p>Email: {{formGroup.get(['contactDetails', 'email'])?.value || \\\"Not provided\\\"}}</p>\\n        </ng-container>\\n\\n        <!--  content of the 1st step -->\\n        <nui-wizard-step-v2 i18n-label label=\\\"Person Details\\\"\\n                            formGroupName=\\\"personDetails\\\" [stepControl]=\\\"formGroup.get(['personDetails'])\\\">\\n            <!-- content of the current step -->\\n            <nui-form-field [control]=\\\"formGroup.get(['personDetails','name'])\\\" i18n-caption\\n                            caption=\\\"Name\\\">\\n                <nui-textbox formControlName=\\\"name\\\"></nui-textbox>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['personDetails','name'])?.errors?.required\\\"\\n                                        i18n>\\n                    This is required\\n                </nui-validation-message>\\n                <nui-validation-message for=\\\"minlength\\\"\\n                                        *ngIf=\\\"formGroup.get(['personDetails','name'])?.errors?.minlength\\\"\\n                                        i18n>\\n                    Minimum length is 3\\n                </nui-validation-message>\\n            </nui-form-field>\\n\\n            <nui-form-field [control]=\\\"formGroup.get(['personDetails','symptoms'])\\\" i18n-caption\\n                            caption=\\\"Do you have Covid ?\\\">\\n                <nui-checkbox formControlName=\\\"symptoms\\\" [indeterminate]=\\\"formGroup.get(['personDetails','symptoms'])?.pristine\\\" i18n>\\n                    Diseases symptoms\\n                </nui-checkbox>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['personDetails','symptoms'])?.errors?.required\\\"\\n                                        i18n>\\n                    This is required\\n                </nui-validation-message>\\n            </nui-form-field>\\n\\n            <!-- content of the footer -->\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <!--  content of the optional step -->\\n        <nui-wizard-step-v2 *ngIf=\\\"formGroup.get(['personDetails','symptoms'])?.value\\\"\\n                            i18n-label label=\\\"Disease Details\\\"\\n                            formGroupName=\\\"diseaseDetails\\\" [stepControl]=\\\"formGroup.get(['diseaseDetails'])\\\">\\n            <ng-template wizardStepLabel i18n>Disease Details for your Symptoms</ng-template>\\n            <nui-form-field [control]=\\\"formGroup.get(['diseaseDetails','date'])\\\" i18n-caption\\n                            caption=\\\"When did you noticed your first symptoms ?\\\">\\n                <nui-date-picker formControlName=\\\"date\\\" i18n></nui-date-picker>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['diseaseDetails','date'])?.errors?.required\\\"\\n                                        i18n>\\n                    Date when disease manifested is required\\n                </nui-validation-message>\\n            </nui-form-field>\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <!--  content of the 2nd step -->\\n        <nui-wizard-step-v2 i18n-label label=\\\"Contact Details\\\"\\n                            formGroupName=\\\"contactDetails\\\" [stepControl]=\\\"formGroup.get(['contactDetails'])\\\">\\n            <!-- content of the current step -->\\n            <nui-form-field [control]=\\\"formGroup.get(['contactDetails','email'])\\\" i18n-caption\\n                            caption=\\\"Email\\\">\\n                <nui-textbox type=\\\"email\\\" formControlName=\\\"email\\\"></nui-textbox>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['contactDetails','email'])?.errors?.required\\\"\\n                                        i18n>\\n                    This is required\\n                </nui-validation-message>\\n\\n                <nui-validation-message for=\\\"email\\\"\\n                                        *ngIf=\\\"formGroup.get(['contactDetails','email'])?.errors?.email\\\"\\n                                        i18n>\\n                    Invalid email\\n                </nui-validation-message>\\n            </nui-form-field>\\n            <nui-form-field [control]=\\\"formGroup.get(['contactDetails','phone'])\\\" i18n-caption\\n                            caption=\\\"Phone\\\">\\n                <nui-textbox type=\\\"email\\\" formControlName=\\\"phone\\\"></nui-textbox>\\n            </nui-form-field>\\n\\n            <!-- content of the footer -->\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <!--  content of the final step -->\\n        <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n            <span i18n>Thanks for your feedback and take care</span>!\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <button type=\\\"button\\\" nui-button (click)=\\\"wizard.reset()\\\">Reset</button>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <ng-template #wizardPrevious>\\n            <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">Back</button>\\n        </ng-template>\\n\\n        <ng-template #wizardNext>\\n            <button nuiWizardNext\\n                    type=\\\"button\\\"\\n                    nui-button\\n                    displayStyle=\\\"primary\\\"\\n                    icon=\\\"caret-right\\\"\\n                    iconRight=\\\"true\\\"\\n                    (click)=\\\"validate(wizard.selected)\\\"\\n            >Next\\n            </button>\\n        </ng-template>\\n    </nui-wizard-custom>\\n</form>\\n\";","export default \"<nui-wizard-horizontal>\\n\\n    <!--  content of the 1st step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the first step of our horizontal wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <div class=\\\"custom-footer step_1\\\">\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                <button nui-button type=\\\"button\\\" icon=\\\"add\\\" i18n>Custom button 1</button>\\n                <span i18n>This is some custom content added in the footer for our first step</span>\\n            </div>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the final step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>!\\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\\n        <ng-template wizardStepFooter>\\n            <div class=\\\"custom-footer step_2\\\">\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <button nui-button type=\\\"button\\\" icon=\\\"remove\\\" i18n>Custom button 2</button>\\n                <span i18n>This is some custom content added in the footer for out second step</span>\\n            </div>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n\";","export default \"<h2>Layout</h2>\\n<h3>Horizontal Layout Wizard</h3>\\n<p>\\n    To use the horizontal wizard component, place a <code>nui-wizard-horizontal</code> element in your template and include one or more\\n    <code><a href=\\\"../components/WizardStepComponent.html\\\" target=\\\"_blank\\\">nui-wizard-step-v2</a></code> elements as children of the\\n    <code>nui-wizard-horizontal</code> element.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-horizontal-layout\\\" exampleTitle=\\\"Horizontal Layout Wizard\\\">\\n    <nui-wizard-horizontal-example></nui-wizard-horizontal-example>\\n</nui-example-wrapper>\\n\\n<h3>Vertical Layout Wizard</h3>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-vertical-layout\\\" exampleTitle=\\\"Vertical Layout Wizard\\\">\\n    <nui-wizard-vertical-example></nui-wizard-vertical-example>\\n</nui-example-wrapper>\\n\\n<h3>Usage with a dialog</h3>\\n<p>You can pass an existing wizard component as content of the dialog window. </p>\\n<p>You should insert wizard component in dialog body. </p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-dialog\\\" exampleTitle=\\\"wizard in dialog\\\">\\n    <nui-wizard-v2-dialog-example></nui-wizard-v2-dialog-example>\\n</nui-example-wrapper>\\n\\n<h3>Busy step</h3>\\n<p>You can make your step busy to forbid actions.</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-busy\\\" exampleTitle=\\\"wizard step busy\\\">\\n    <nui-wizard-v2-busy-example></nui-wizard-v2-busy-example>\\n</nui-example-wrapper>\\n\\n<h3>Custom footer</h3>\\n<p>Customizing the footer layout content and style for each step is quite easy, as you can see in the example below:</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-custom-footer\\\" exampleTitle=\\\"Wizard with Custom Footer\\\">\\n    <nui-wizard-custom-footer-example></nui-wizard-custom-footer-example>\\n</nui-example-wrapper>\\n\\n<h3>Adding step dynamically</h3>\\n<p>You are able to add wizard steps dynamically.</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-dynamic\\\" exampleTitle=\\\"wizard add dynamic step\\\">\\n    <nui-wizard-dynamic-example></nui-wizard-dynamic-example>\\n</nui-example-wrapper>\\n\\n<h3>Removing step</h3>\\n<p>You are able to remove steps by index.</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-remove-step\\\" exampleTitle=\\\"wizard remove step\\\">\\n    <nui-wizard-remove-step-example></nui-wizard-remove-step-example>\\n</nui-example-wrapper>\\n\\n<h3>Custom Layout Wizard</h3>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-custom-layout\\\" exampleTitle=\\\"Custom Layout Wizard\\\">\\n    <nui-wizard-custom-example></nui-wizard-custom-example>\\n</nui-example-wrapper>\\n\\n<h3>Async Form Validation</h3>\\n<p>\\n    To handle async validation check 'PENDING' status of WizardV2Step stepControl\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-async-form-validation\\\" exampleTitle=\\\"Async Form Validation\\\">\\n    <nui-wizard-async-form-validation-example></nui-wizard-async-form-validation-example>\\n</nui-example-wrapper>\\n\\n<h3>Restore Wizard State</h3>\\n<p>\\n    To restore wizard state you need to pass previous wizard steps as input\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-restore-state\\\" exampleTitle=\\\"Restore Wizard State\\\">\\n    <nui-wizard-restore-state-example></nui-wizard-restore-state-example>\\n</nui-example-wrapper>\\n\\n<h3>Wizard Step Change Event Example</h3>\\n<p>\\n    You are able to subscribe when the selected step has changed.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-step-change-example\\\" exampleTitle=\\\"Wizard Step Change\\\">\\n    <nui-wizard-step-change-example></nui-wizard-step-change-example>\\n</nui-example-wrapper>\\n\";","export default \".example-container {\\n    border: 1px red solid;\\n}\\n\";","export default \"import {AfterViewInit, Component, TemplateRef, ViewChild} from \\\"@angular/core\\\";\\n\\nexport interface IWizardStepConfig {\\n    title: string;\\n    templateRef: TemplateRef<string>;\\n}\\n\\n@Component({\\n    selector: \\\"nui-wizard-dynamic-example\\\",\\n    templateUrl: \\\"./wizard-dynamic.example.component.html\\\",\\n})\\nexport class WizardDynamicExampleComponent implements AfterViewInit {\\n    public enableDynamicStepWithButton = false;\\n    public steps: IWizardStepConfig[] = [];\\n\\n    @ViewChild(\\\"dynamicTemplate1\\\") dynamicTemplate1: TemplateRef<string>;\\n\\n    public ngAfterViewInit(): void {\\n        this.addStep(this.dynamicTemplate1, $localize `My first dynamic step`);\\n    }\\n\\n    public toggleStep() {\\n        this.enableDynamicStepWithButton = !this.enableDynamicStepWithButton;\\n    }\\n\\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\\n        this.steps.push({title: title ?? `Dynamic Step ${this.steps.length + 1}`, templateRef: templateRef});\\n    }\\n}\\n\";","export default \"<nui-wizard-vertical>\\n\\n    <!--  content of the 1st step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the first step of our vertical wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the 2nd step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Second step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the second step of our vertical wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the final step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>!\\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-vertical>\\n\";","export default \"<ng-template #dialogWizard>\\n    <div nui-busy [busy]=\\\"busy\\\">\\n        <div class=\\\"busy-content\\\">\\n            <nui-dialog-header i18n-title title=\\\"Wizard dialog\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n            <div class=\\\"dialog-body compact-mode\\\">\\n                <nui-wizard-horizontal>\\n\\n                    <!--  content of the 1st step -->\\n                    <nui-wizard-step-v2>\\n                        <!-- define the label which is displayed on the header stepper -->\\n                        <ng-template wizardStepLabel>Completed</ng-template>\\n\\n                        <!-- content of the current step -->\\n                        <span i18n>This is the first step of our horizontal wizard</span>.\\n\\n                        <!-- content of the footer -->\\n                        <ng-template wizardStepFooter>\\n                            <button type=\\\"button\\\" nui-button (click)=\\\"toggleBusy()\\\">\\n                                Toggle busy\\n                            </button>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <!--  content of the 2nd step -->\\n                    <nui-wizard-step-v2>\\n                        <!-- define the label which is displayed on the header stepper -->\\n                        <ng-template wizardStepLabel>Active</ng-template>\\n\\n                        <!-- content of the current step -->\\n                        <span i18n>This is the second step of our horizontal wizard</span>.\\n\\n                        <!-- content of the footer -->\\n                        <ng-template wizardStepFooter>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <!--  content of the 3rd step -->\\n                    <nui-wizard-step-v2>\\n                        <!-- define the label which is displayed on the header stepper -->\\n                        <ng-template wizardStepLabel>Not visited</ng-template>\\n\\n                        <!-- content of the current step -->\\n                        <span i18n>This is the third step of our horizontal wizard</span>.\\n\\n                        <!-- content of the footer -->\\n                        <ng-template wizardStepFooter>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <!--  content of the final step -->\\n                    <nui-wizard-step-v2>\\n                        <ng-template wizardStepLabel>Summary</ng-template>\\n                        <span i18n>We finally reached our last step</span>!\\n                        <ng-template wizardStepFooter>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <ng-template #wizardCancel>\\n                        <button type=\\\"button\\\" displayStyle=\\\"action\\\" nui-button (click)=\\\"closeDialog()\\\">\\n                            Cancel\\n                        </button>\\n                    </ng-template>\\n\\n                    <ng-template #wizardPrevious>\\n                        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                            Previous\\n                        </button>\\n                    </ng-template>\\n\\n                    <ng-template #wizardNext>\\n                        <button nuiWizardNext\\n                                type=\\\"button\\\"\\n                                nui-button\\n                                displayStyle=\\\"primary\\\"\\n                                icon=\\\"caret-right\\\"\\n                                iconRight=\\\"true\\\"\\n                        >Next</button>\\n                    </ng-template>\\n                </nui-wizard-horizontal>\\n            </div>\\n        </div>\\n        <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Data is loading from remote server...\\\"></nui-spinner>\\n    </div>\\n</ng-template>\\n\\n<button nui-button type=\\\"button\\\"\\n        (click)=\\\"openDialog(dialogWizard)\\\"\\n        i18n>\\n    Open dialog wizard\\n</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-vertical-example\\\",\\n    templateUrl: \\\"./wizard-vertical-example.component.html\\\",\\n})\\nexport class WizardVerticalExampleComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-horizontal-example\\\",\\n    templateUrl: \\\"./wizard-horizontal-example.component.html\\\",\\n})\\nexport class WizardHorizontalExampleComponent {}\\n\";","export default \"<div nui-busy [busy]=\\\"busy\\\" class=\\\"example-container\\\">\\n    <div class=\\\"busy-content\\\">\\n        <nui-wizard-horizontal>\\n\\n            <!--  content of the 1st step -->\\n            <nui-wizard-step-v2>\\n                <!-- define the label which is displayed on the header stepper -->\\n                <ng-template wizardStepLabel>Make step busy</ng-template>\\n\\n                <!-- content of the current step -->\\n                <p i18n>Welcome!</p>\\n\\n                <!-- content of the footer -->\\n                <ng-template wizardStepFooter>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <!--  content of the 2nd step -->\\n            <nui-wizard-step-v2>\\n                <!-- define the label which is displayed on the header stepper -->\\n                <ng-template wizardStepLabel>Final</ng-template>\\n\\n                <!-- content of the current step -->\\n                <nui-checkbox name=\\\"nui-demo-checkbox\\\"\\n                              i18n-title\\n                              title=\\\"Check box with help text\\\"\\n                              i18n-hint\\n                              hint=\\\"This is some help text\\\"\\n                              required=\\\"true\\\"\\n                              [value]=\\\"false\\\"\\n                              i18n>Check box with help text\\n                </nui-checkbox>\\n                <nui-checkbox name=\\\"nui-demo-checkbox-plain\\\"\\n                              [checked]=\\\"true\\\"\\n                              [value]=\\\"false\\\"\\n                              i18n>Plain checkbox\\n                </nui-checkbox>\\n\\n                <!-- content of the footer -->\\n                <ng-template wizardStepFooter>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <ng-template #wizardPrevious>\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-template>\\n\\n            <ng-template #wizardNext>\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                >Next</button>\\n            </ng-template>\\n        </nui-wizard-horizontal>\\n    </div>\\n    <nui-spinner id=\\\"nui-demo-spinner\\\" size=\\\"large\\\" i18n-message message=\\\"Data is loading from remote server...\\\"></nui-spinner>\\n</div>\\n\\n<button nui-button type=\\\"button\\\" id=\\\"nui-demo-busy-button\\\" (click)=\\\"toggleStepBusy()\\\" i18n>Toggle busy on current step</button>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDatePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    NuiRadioModule,\n    NuiSpinnerModule,\n    NuiTextboxModule,\n    NuiValidationMessageModule,\n    NuiWizardV2Module,\n    SrlcStage,\n    NuiSelectV2Module,\n} from \"@nova-ui/bits\";\n\nimport {\n    WizardBusyExampleComponent,\n    WizardCustomComponent,\n    WizardCustomExampleComponent,\n    WizardCustomFooterExampleComponent,\n    WizardDialogExampleComponent,\n    WizardDocsComponent,\n    WizardDynamicExampleComponent,\n    WizardHorizontalExampleComponent,\n    WizardRemoveStepExampleComponent,\n    WizardVerticalExampleComponent,\n    WizardAsyncFormValidationExampleComponent,\n    WizardRestoreStateExampleComponent,\n    WizardStepChangeExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: WizardDocsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.alpha,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        NuiTextboxModule,\n        NuiRadioModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiValidationMessageModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n        NuiWizardV2Module,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        NuiProgressModule,\n        NuiDatePickerModule,\n        NuiSelectV2Module,\n    ],\n    declarations: [\n        WizardDocsComponent,\n        WizardHorizontalExampleComponent,\n        WizardVerticalExampleComponent,\n        WizardCustomExampleComponent,\n        WizardCustomComponent,\n        WizardDialogExampleComponent,\n        WizardBusyExampleComponent,\n        WizardCustomFooterExampleComponent,\n        WizardDynamicExampleComponent,\n        WizardRemoveStepExampleComponent,\n        WizardAsyncFormValidationExampleComponent,\n        WizardRestoreStateExampleComponent,\n        WizardStepChangeExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class WizardModule {}\n","import {\n    AfterViewInit,\n    Component,\n    TemplateRef,\n    ViewChild,\n} from \"@angular/core\";\n\nimport {IWizardStepConfig } from \"../wizard-dynamic/wizard-dynamic.example.component\";\n\n@Component({\n    selector: \"nui-wizard-remove-step-example\",\n    templateUrl: \"./wizard-remove-step-example.component.html\",\n})\nexport class WizardRemoveStepExampleComponent implements AfterViewInit {\n    public steps: IWizardStepConfig[] = [];\n\n    @ViewChild(\"normalStep\") normalStep: TemplateRef<string>;\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.normalStep, $localize `Normal step`);\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\n        this.steps.push({title: title ?? `Dynamic Step`, templateRef: templateRef});\n    }\n\n    public removeStep(index: number): void {\n        this.steps.splice(index, 1);\n    }\n}\n","<nui-wizard-horizontal #wizard>\n    <nui-wizard-step-v2 *ngFor=\"let step of steps; let i = index; let isLast = last\">\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\n        <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n        <ng-template wizardStepFooter>\n            <ng-container *ngIf=\"i !== 0\">\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-container>\n            <ng-container *ngIf=\"!isLast\">\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                >Next</button>\n            </ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicStep>\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\n    </ng-template>\n\n    <ng-template #normalStep>\n        <p i18n>Hi! You can add next step dynamically</p>\n\n        <button nui-button type=\"button\" (click)=\"addStep(dynamicStep)\">\n            Add dynamic step w/template\n        </button>\n\n    </ng-template>\n</nui-wizard-horizontal>\n<div class=\"d-flex\">\n    <div class=\"\">\n        <span class=\"nui-textbox--bold\" [ngStyle]=\"{ 'font-weight': 'bold' }\">Step index to remove</span> <br>\n        <nui-textbox-number [minValue]=\"1\" #number></nui-textbox-number>\n    </div>\n    <button class=\"ml-3 h-25 align-self-end\"\n            displayStyle=\"destructive\"\n            nui-button type=\"button\"\n            [disabled]=\"+number.value < 1\"\n            (click)=\"removeStep(+number.value)\"\n            i18n>\n        Remove step dynamically\n    </button>\n</div>\n","<nui-wizard-horizontal>\n\n    <!--  content of the 1st step -->\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <!-- content of the current step -->\n        <span i18n>This is the first step of our horizontal wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the final step -->\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>!\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-horizontal-example\",\n    templateUrl: \"./wizard-horizontal-example.component.html\",\n})\nexport class WizardHorizontalExampleComponent {}\n","<div nui-busy [busy]=\"busy\" class=\"example-container\">\n    <div class=\"busy-content\">\n        <nui-wizard-horizontal>\n\n            <!--  content of the 1st step -->\n            <nui-wizard-step-v2>\n                <!-- define the label which is displayed on the header stepper -->\n                <ng-template wizardStepLabel>Make step busy</ng-template>\n\n                <!-- content of the current step -->\n                <p i18n>Welcome!</p>\n\n                <!-- content of the footer -->\n                <ng-template wizardStepFooter>\n                    <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <!--  content of the 2nd step -->\n            <nui-wizard-step-v2>\n                <!-- define the label which is displayed on the header stepper -->\n                <ng-template wizardStepLabel>Final</ng-template>\n\n                <!-- content of the current step -->\n                <nui-checkbox name=\"nui-demo-checkbox\"\n                              i18n-title\n                              title=\"Check box with help text\"\n                              i18n-hint\n                              hint=\"This is some help text\"\n                              required=\"true\"\n                              [value]=\"false\"\n                              i18n>Check box with help text\n                </nui-checkbox>\n                <nui-checkbox name=\"nui-demo-checkbox-plain\"\n                              [checked]=\"true\"\n                              [value]=\"false\"\n                              i18n>Plain checkbox\n                </nui-checkbox>\n\n                <!-- content of the footer -->\n                <ng-template wizardStepFooter>\n                    <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardPrevious>\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext>\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                >Next</button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </div>\n    <nui-spinner id=\"nui-demo-spinner\" size=\"large\" i18n-message message=\"Data is loading from remote server...\"></nui-spinner>\n</div>\n\n<button nui-button type=\"button\" id=\"nui-demo-busy-button\" (click)=\"toggleStepBusy()\" i18n>Toggle busy on current step</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-wizard-v2-busy-example\",\n    templateUrl: \"./wizard-busy.example.component.html\",\n    styleUrls: [\"./wizard-busy.example.component.less\"],\n})\nexport class WizardBusyExampleComponent  {\n    public busy: boolean;\n\n    public toggleStepBusy() {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n}\n","export default \".custom-footer {\\n    width: 100%;\\n    padding: 10px;\\n    border: 5px transparent solid;\\n    color: white;\\n\\n    &.step_1 {\\n        border-color: red;\\n        button {\\n            float: left;\\n        }\\n    }\\n\\n    &.step_2 {\\n        border-color: green;\\n        button {\\n            float: right;\\n        }\\n    }\\n\\n    button {\\n        min-width: 100px;\\n    }\\n}\\n\";","<nui-wizard-horizontal>\n\n    <!--  content of the 1st step -->\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <!-- content of the current step -->\n        <span i18n>This is the first step of our horizontal wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <div class=\"custom-footer step_1\">\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                <button nui-button type=\"button\" icon=\"add\" i18n>Custom button 1</button>\n                <span i18n>This is some custom content added in the footer for our first step</span>\n            </div>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the final step -->\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>!\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\n        <ng-template wizardStepFooter>\n            <div class=\"custom-footer step_2\">\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <button nui-button type=\"button\" icon=\"remove\" i18n>Custom button 2</button>\n                <span i18n>This is some custom content added in the footer for out second step</span>\n            </div>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-custom-footer-example\",\n    templateUrl: \"./wizard-custom-footer-example.component.html\",\n    styleUrls: [\"./wizard-custom-footer-example.component.less\"],\n})\nexport class WizardCustomFooterExampleComponent {}\n","export default \"<nui-wizard-horizontal #wizard (selectionChange)=\\\"onSelectionChange($event)\\\">\\n    <nui-wizard-step-v2 *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\\n        <ng-container *ngTemplateOutlet=\\\"step.templateRef\\\"></ng-container>\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngIf=\\\"i !== 0\\\">\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!isLast\\\">\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                >Next</button>\\n            </ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #dynamicStep>\\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\\n    </ng-template>\\n\\n    <ng-template #normalStep>\\n        <p i18n>Hi! You can add next step dynamically</p>\\n\\n        <button nui-button type=\\\"button\\\" (click)=\\\"addStep(dynamicStep)\\\">\\n            Add dynamic step\\n        </button>\\n\\n    </ng-template>\\n</nui-wizard-horizontal>\\n\\n\";","export default \"import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from \\\"@angular/cdk/stepper\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    Component,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation,\\n} from \\\"@angular/core\\\";\\nimport { FormBuilder, FormGroup, Validators } from \\\"@angular/forms\\\";\\nimport { wizardAnimations, WizardDirective, WizardStepV2Component } from \\\"@nova-ui/bits\\\";\\nimport { tap } from \\\"rxjs/operators\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-custom\\\",\\n    templateUrl: \\\"wizard-custom.component.html\\\",\\n    styleUrls: [\\\"wizard-custom.component.less\\\"],\\n    host: {\\n        \\\"class\\\": \\\"nui-wizard-custom-layout\\\",\\n        \\\"aria-orientation\\\": \\\"horizontal\\\",\\n    },\\n    animations: [wizardAnimations.horizontalStepTransition],\\n    providers: [\\n        {provide: WizardDirective, useExisting: WizardCustomComponent},\\n        {provide: CdkStepper, useExisting: WizardCustomComponent},\\n    ],\\n    encapsulation: ViewEncapsulation.None,\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class WizardCustomComponent extends WizardDirective {}\\n\\n@Component({\\n    selector: \\\"nui-wizard-custom-example\\\",\\n    templateUrl: \\\"./wizard-custom-example.component.html\\\",\\n    styleUrls: [\\\"wizard-custom.component.less\\\"],\\n    providers: [{\\n        provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false},\\n    }],\\n})\\nexport class WizardCustomExampleComponent implements OnInit, AfterViewInit {\\n    public formGroup: FormGroup;\\n    public steps: number = 1;\\n    public selectedIndex: number = 0;\\n    public progress: number;\\n\\n    @ViewChild(\\\"wizard\\\") wizard: WizardCustomComponent;\\n\\n    constructor(private formBuilder: FormBuilder) {}\\n\\n    ngOnInit() {\\n        this.formGroup = new FormGroup({\\n            \\\"personDetails\\\": this.formBuilder.group({\\n                \\\"name\\\": [\\\"\\\", [Validators.required, Validators.minLength(3)]],\\n                \\\"symptoms\\\": [undefined, Validators.required],\\n            }),\\n            \\\"diseaseDetails\\\": this.formBuilder.group({\\n                \\\"date\\\": [\\\"\\\", Validators.required],\\n            }),\\n            \\\"contactDetails\\\": this.formBuilder.group({\\n                \\\"email\\\": [\\\"\\\", [Validators.required, Validators.email]],\\n                \\\"phone\\\": [\\\"\\\"],\\n            }),\\n        });\\n    }\\n\\n    ngAfterViewInit() {\\n        const update = (selectedIndex?: number, steps?: number) => {\\n            setTimeout(() => {\\n                if (steps) {\\n                    this.steps = steps;\\n                }\\n                if (selectedIndex !== undefined && selectedIndex >= 0) {\\n                    this.selectedIndex = selectedIndex;\\n                }\\n                this.progress = 100 * (1 + this.selectedIndex) / this.steps;\\n            });\\n        };\\n\\n        this.wizard.selectionChange.pipe(\\n            tap(i => {\\n                update(i.selectedIndex);\\n            })\\n        ).subscribe();\\n\\n        this.wizard.steps.changes.pipe(\\n            tap(c => {\\n                update(undefined, c.length);\\n            })\\n        ).subscribe();\\n    }\\n\\n    validate(step: WizardStepV2Component) {\\n        // mark all fields from current step as touched\\n        // in order to display the validation messages\\n        Object.keys((step.stepControl as FormGroup)?.controls || {})\\n            .forEach(key => {\\n                const field = this.wizard.selected.stepControl.get(key);\\n                field?.markAsTouched();\\n            });\\n    }\\n}\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row custom-header\\\">\\n        <div class=\\\"col-9 p-0\\\">\\n            <div class=\\\"nui-wizard-horizontal-header-container\\\">\\n                <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n                    <wizard-step-header\\n                        class=\\\"nui-wizard-horizontal-header\\\"\\n                        (click)=\\\"step.select()\\\"\\n                        (keydown)=\\\"_onKeydown($event)\\\"\\n                        [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                        [id]=\\\"_getStepLabelId(i)\\\"\\n                        [attr.aria-posinset]=\\\"i + 1\\\"\\n                        [attr.aria-setsize]=\\\"steps.length\\\"\\n                        [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                        [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                        [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                        [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                        [index]=\\\"i\\\"\\n                        [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                        [label]=\\\"step.label || step.stepLabel\\\"\\n                        [selected]=\\\"selectedIndex === i\\\"\\n                        [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                        [optional]=\\\"step.optional\\\"\\n                        [errorMessage]=\\\"step.errorMessage\\\"\\n                        [disableRipple]=\\\"disableRipple\\\">\\n                    </wizard-step-header>\\n                    <div *ngIf=\\\"!isLast\\\" class=\\\"nui-wizard-horizontal-line\\\"></div>\\n                </ng-container>\\n            </div>\\n            <div class=\\\"nui-wizard-horizontal-content-container\\\">\\n                <h2>\\n                    <ng-container *ngIf=\\\"selected.stepLabel\\\" [ngTemplateOutlet]=\\\"selected.stepLabel.template\\\"></ng-container>\\n                    <ng-container *ngIf=\\\"!selected.stepLabel\\\">{{selected.label}}</ng-container>\\n                </h2>\\n                <div *ngFor=\\\"let step of steps; let i = index\\\"\\n                     [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n                     class=\\\"nui-wizard-horizontal-content\\\" role=\\\"tabpanel\\\"\\n                     [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n                     (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n                     [id]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n                    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-3 custom-summary\\\">\\n            <ng-content select=[summary]></ng-content>\\n            <div *ngIf=\\\"selected.stepFooter\\\" class=\\\"row nui-wizard-horizontal-footer-container\\\">\\n                <wizard-footer [footer]=\\\"selected.stepFooter\\\"></wizard-footer>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","var map = {\n\t\"./index.ts\": \"iAoM\",\n\t\"./wizard-async-validation-form/wizard-async-form-validation.example.component.html\": \"jYwr\",\n\t\"./wizard-async-validation-form/wizard-async-form-validation.example.component.ts\": \"qZWR\",\n\t\"./wizard-busy/wizard-busy.example.component.html\": \"ErOQ\",\n\t\"./wizard-busy/wizard-busy.example.component.less\": \"5iu2\",\n\t\"./wizard-busy/wizard-busy.example.component.ts\": \"rjNf\",\n\t\"./wizard-custom-footer/wizard-custom-footer-example.component.html\": \"2/6m\",\n\t\"./wizard-custom-footer/wizard-custom-footer-example.component.less\": \"LiSh\",\n\t\"./wizard-custom-footer/wizard-custom-footer-example.component.ts\": \"WLwN\",\n\t\"./wizard-custom-layout/wizard-custom-example.component.html\": \"1sWM\",\n\t\"./wizard-custom-layout/wizard-custom-example.component.ts\": \"PL0w\",\n\t\"./wizard-custom-layout/wizard-custom.component.html\": \"PipA\",\n\t\"./wizard-custom-layout/wizard-custom.component.less\": \"nrQw\",\n\t\"./wizard-dialog/wizard-dialog.example.component.html\": \"A8yM\",\n\t\"./wizard-dialog/wizard-dialog.example.component.ts\": \"mbMD\",\n\t\"./wizard-docs/wizard-docs.component.html\": \"3Uzl\",\n\t\"./wizard-docs/wizard-docs.component.ts\": \"U0rU\",\n\t\"./wizard-dynamic/wizard-dynamic.example.component.html\": \"Vkgm\",\n\t\"./wizard-dynamic/wizard-dynamic.example.component.ts\": \"6e2i\",\n\t\"./wizard-horizontal-layout/wizard-horizontal-example.component.html\": \"s3gB\",\n\t\"./wizard-horizontal-layout/wizard-horizontal-example.component.ts\": \"Dz05\",\n\t\"./wizard-remove-step/wizard-remove-step-example.component.html\": \"U9Jp\",\n\t\"./wizard-remove-step/wizard-remove-step-example.component.ts\": \"0dsp\",\n\t\"./wizard-restore-state/wizard-restore-state.example.component.html\": \"gtxr\",\n\t\"./wizard-restore-state/wizard-restore-state.example.component.ts\": \"knXS\",\n\t\"./wizard-step-change-example/wizard-step-change-example.component.html\": \"OrrU\",\n\t\"./wizard-step-change-example/wizard-step-change-example.component.ts\": \"z1B6\",\n\t\"./wizard-vertical-layout/wizard-vertical-example.component.html\": \"A7H6\",\n\t\"./wizard-vertical-layout/wizard-vertical-example.component.ts\": \"Cu7f\",\n\t\"./wizard.module.ts\": \"TL+W\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Ptpp\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiBusyModule,\\n    NuiButtonModule,\\n    NuiCheckboxModule,\\n    NuiDatePickerModule,\\n    NuiDialogModule,\\n    NuiDocsModule,\\n    NuiFormFieldModule,\\n    NuiMessageModule,\\n    NuiProgressModule,\\n    NuiRadioModule,\\n    NuiSpinnerModule,\\n    NuiTextboxModule,\\n    NuiValidationMessageModule,\\n    NuiWizardV2Module,\\n    SrlcStage,\\n    NuiSelectV2Module,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    WizardBusyExampleComponent,\\n    WizardCustomComponent,\\n    WizardCustomExampleComponent,\\n    WizardCustomFooterExampleComponent,\\n    WizardDialogExampleComponent,\\n    WizardDocsComponent,\\n    WizardDynamicExampleComponent,\\n    WizardHorizontalExampleComponent,\\n    WizardRemoveStepExampleComponent,\\n    WizardVerticalExampleComponent,\\n    WizardAsyncFormValidationExampleComponent,\\n    WizardRestoreStateExampleComponent,\\n    WizardStepChangeExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: WizardDocsComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.alpha,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiMessageModule,\\n        NuiDocsModule,\\n        NuiTextboxModule,\\n        NuiRadioModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiValidationMessageModule,\\n        NuiFormFieldModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        RouterModule.forChild(routes),\\n        NuiWizardV2Module,\\n        NuiSpinnerModule,\\n        NuiBusyModule,\\n        NuiProgressModule,\\n        NuiDatePickerModule,\\n        NuiSelectV2Module,\\n    ],\\n    declarations: [\\n        WizardDocsComponent,\\n        WizardHorizontalExampleComponent,\\n        WizardVerticalExampleComponent,\\n        WizardCustomExampleComponent,\\n        WizardCustomComponent,\\n        WizardDialogExampleComponent,\\n        WizardBusyExampleComponent,\\n        WizardCustomFooterExampleComponent,\\n        WizardDynamicExampleComponent,\\n        WizardRemoveStepExampleComponent,\\n        WizardAsyncFormValidationExampleComponent,\\n        WizardRestoreStateExampleComponent,\\n        WizardStepChangeExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class WizardModule {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-v2-example\\\",\\n    templateUrl: \\\"./wizard-docs.component.html\\\",\\n})\\nexport class WizardDocsComponent {}\\n\";","export default \"<nui-wizard-horizontal #wizard>\\n    <nui-wizard-step-v2 *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\\n        <ng-container *ngTemplateOutlet=\\\"step.templateRef\\\"></ng-container>\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngIf=\\\"i !== 0\\\">\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!isLast\\\">\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                >Next</button>\\n            </ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #dynamicStep>\\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\\n    </ng-template>\\n\\n    <ng-template #normalStep>\\n        <p i18n>Hi! You can add next step dynamically</p>\\n\\n        <button nui-button type=\\\"button\\\" (click)=\\\"addStep(dynamicStep)\\\">\\n            Add dynamic step w/template\\n        </button>\\n\\n    </ng-template>\\n</nui-wizard-horizontal>\\n<div class=\\\"d-flex\\\">\\n    <div class=\\\"\\\">\\n        <span class=\\\"nui-textbox--bold\\\" [ngStyle]=\\\"{ 'font-weight': 'bold' }\\\">Step index to remove</span> <br>\\n        <nui-textbox-number [minValue]=\\\"1\\\" #number></nui-textbox-number>\\n    </div>\\n    <button class=\\\"ml-3 h-25 align-self-end\\\"\\n            displayStyle=\\\"destructive\\\"\\n            nui-button type=\\\"button\\\"\\n            [disabled]=\\\"+number.value < 1\\\"\\n            (click)=\\\"removeStep(+number.value)\\\"\\n            i18n>\\n        Remove step dynamically\\n    </button>\\n</div>\\n\";","export default \"<nui-wizard-horizontal #wizardComponent>\\n    <!--Static step-->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Normal step\\\">\\n        <p i18n>Hi! You can add next step dynamically</p>\\n\\n        <button nui-button type=\\\"button\\\" (click)=\\\"addStep(dynamicTemplate2)\\\">\\n            Add dynamic step w/template\\n        </button>\\n\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <nui-wizard-step-v2 *ngIf=\\\"enableDynamicStepWithButton\\\" i18n-label label=\\\"Added dynamically\\\">\\n        <ng-template wizardStepLabel>Dynamic w/button</ng-template>\\n        <p i18n>Hi! I'm dynamic step that can be enabled/disabled programmatically via the toggle button under the wizard !</p>\\n\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-container *ngTemplateOutlet=\\\"dynamicStepWithTemplate\\\" ngProjectAs=\\\"nui-wizard-step-v2\\\"></ng-container>\\n    <ng-template #dynamicStepWithTemplate>\\n        <nui-wizard-step-v2>\\n            <ng-template wizardStepLabel>Dynamic w/template</ng-template>\\n            <p i18n>Hi! I'm dynamic step added automatically !</p>\\n\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n    </ng-template>\\n\\n    <nui-wizard-step-v2 *ngFor=\\\"let step of steps\\\">\\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\\n        <ng-container *ngTemplateOutlet=\\\"step.templateRef\\\"></ng-container>\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #dynamicTemplate1>\\n        <p i18n>Hi! I'm dynamic step added automatically during ngAfterViewInit of this wizard using a TemplateRef!</p>\\n    </ng-template>\\n\\n    <ng-template #dynamicTemplate2>\\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\\n    </ng-template>\\n\\n\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n<div>\\n    <button nui-button type=\\\"button\\\" (click)=\\\"toggleStep()\\\">\\n        {{!enableDynamicStepWithButton ? \\\"Enable\\\" : \\\"Disable\\\" }} dynamic step w/button\\n    </button>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-custom-footer-example\\\",\\n    templateUrl: \\\"./wizard-custom-footer-example.component.html\\\",\\n    styleUrls: [\\\"./wizard-custom-footer-example.component.less\\\"],\\n})\\nexport class WizardCustomFooterExampleComponent {}\\n\";","import {AfterViewInit, Component, TemplateRef, ViewChild} from \"@angular/core\";\n\nexport interface IWizardStepConfig {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: \"nui-wizard-dynamic-example\",\n    templateUrl: \"./wizard-dynamic.example.component.html\",\n})\nexport class WizardDynamicExampleComponent implements AfterViewInit {\n    public enableDynamicStepWithButton = false;\n    public steps: IWizardStepConfig[] = [];\n\n    @ViewChild(\"dynamicTemplate1\") dynamicTemplate1: TemplateRef<string>;\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.dynamicTemplate1, $localize `My first dynamic step`);\n    }\n\n    public toggleStep() {\n        this.enableDynamicStepWithButton = !this.enableDynamicStepWithButton;\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\n        this.steps.push({title: title ?? `Dynamic Step ${this.steps.length + 1}`, templateRef: templateRef});\n    }\n}\n","<nui-wizard-horizontal #wizardComponent>\n    <!--Static step-->\n    <nui-wizard-step-v2 i18n-label label=\"Normal step\">\n        <p i18n>Hi! You can add next step dynamically</p>\n\n        <button nui-button type=\"button\" (click)=\"addStep(dynamicTemplate2)\">\n            Add dynamic step w/template\n        </button>\n\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <nui-wizard-step-v2 *ngIf=\"enableDynamicStepWithButton\" i18n-label label=\"Added dynamically\">\n        <ng-template wizardStepLabel>Dynamic w/button</ng-template>\n        <p i18n>Hi! I'm dynamic step that can be enabled/disabled programmatically via the toggle button under the wizard !</p>\n\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-container *ngTemplateOutlet=\"dynamicStepWithTemplate\" ngProjectAs=\"nui-wizard-step-v2\"></ng-container>\n    <ng-template #dynamicStepWithTemplate>\n        <nui-wizard-step-v2>\n            <ng-template wizardStepLabel>Dynamic w/template</ng-template>\n            <p i18n>Hi! I'm dynamic step added automatically !</p>\n\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n    </ng-template>\n\n    <nui-wizard-step-v2 *ngFor=\"let step of steps\">\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\n        <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicTemplate1>\n        <p i18n>Hi! I'm dynamic step added automatically during ngAfterViewInit of this wizard using a TemplateRef!</p>\n    </ng-template>\n\n    <ng-template #dynamicTemplate2>\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\n    </ng-template>\n\n\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n<div>\n    <button nui-button type=\"button\" (click)=\"toggleStep()\">\n        {{!enableDynamicStepWithButton ? \"Enable\" : \"Disable\" }} dynamic step w/button\n    </button>\n</div>\n","import {\n    AfterViewInit,\n    Component,\n    TemplateRef,\n    ViewChild,\n} from \"@angular/core\";\n\nimport {IWizardStepConfig } from \"../wizard-dynamic/wizard-dynamic.example.component\";\nimport {StepperSelectionEvent} from \"@angular/cdk/stepper\";\nimport {ToastService} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-wizard-step-change-example\",\n    templateUrl: \"./wizard-step-change-example.component.html\",\n})\nexport class WizardStepChangeExampleComponent implements AfterViewInit {\n    public steps: IWizardStepConfig[] = [];\n\n    @ViewChild(\"normalStep\") normalStep: TemplateRef<string>;\n\n    constructor(private toastService: ToastService) {\n    }\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.normalStep, $localize `Normal step`);\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string): void {\n        this.steps.push({title: title ?? `Dynamic Step`, templateRef: templateRef});\n    }\n\n\n    public onSelectionChange($event: StepperSelectionEvent): void {\n        this.toastService.info({\n            title: $localize `Selected step changed.`,\n            message: $localize `You moved from step with index ${$event.previouslySelectedIndex} to step with index ${$event.selectedIndex}`,\n            options: {\n                timeOut: 5000,\n                extendedTimeOut: 2000,\n            },\n        });\n    }\n}\n","<nui-wizard-horizontal #wizard (selectionChange)=\"onSelectionChange($event)\">\n    <nui-wizard-step-v2 *ngFor=\"let step of steps; let i = index; let isLast = last\">\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\n        <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n        <ng-template wizardStepFooter>\n            <ng-container *ngIf=\"i !== 0\">\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-container>\n            <ng-container *ngIf=\"!isLast\">\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                >Next</button>\n            </ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicStep>\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\n    </ng-template>\n\n    <ng-template #normalStep>\n        <p i18n>Hi! You can add next step dynamically</p>\n\n        <button nui-button type=\"button\" (click)=\"addStep(dynamicStep)\">\n            Add dynamic step\n        </button>\n\n    </ng-template>\n</nui-wizard-horizontal>\n\n","export default \"<ng-template #dialogWizard>\\n    <nui-dialog-header i18n-title\\n                       title=\\\"Restore Wizard State\\\"\\n                       (closed)=\\\"closeDialog()\\\">\\n    </nui-dialog-header>\\n    <form class=\\\"dialog-body compact-mode\\\"\\n          [formGroup]=\\\"form\\\"\\n          *ngIf=\\\"form\\\">\\n        <nui-wizard-horizontal\\n            linear\\n            [state]=\\\"state\\\"\\n            (finished)=\\\"saveState($event)\\\"\\n        >\\n            <nui-wizard-step-v2 label=\\\"Person Details\\\"\\n                                formGroupName=\\\"personDetails\\\"\\n                                [stepControl]=\\\"form.get(['personDetails'])\\\">\\n                <nui-form-field [control]=\\\"form.get(['personDetails','name'])\\\"\\n                                class=\\\"d-block mb-4 mt-4\\\"\\n                                i18n-caption\\n                                caption=\\\"Name\\\">\\n                    <nui-textbox formControlName=\\\"name\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['personDetails','name'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n                </nui-form-field>\\n\\n                <nui-form-field [control]=\\\"form.get(['personDetails','privacy'])\\\">\\n                    <nui-checkbox formControlName=\\\"privacy\\\" [value]=\\\"true\\\">\\n                        Privacy Policy\\n                    </nui-checkbox>\\n\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['personDetails','privacy'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n                </nui-form-field>\\n\\n                <ng-template wizardStepFooter>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardNext; context: { form: 'personDetails' }\\\"></ng-container>\\n                </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <nui-wizard-step-v2 label=\\\"Organization\\\"\\n                                formGroupName=\\\"organization\\\"\\n                                [stepControl]=\\\"form.get(['organization'])\\\">\\n                <nui-form-field [control]=\\\"form.get(['organization', 'title'])\\\"\\n                                class=\\\"d-block mb-4\\\"\\n                                i18n-caption\\n                                caption=\\\"Organization\\\">\\n                    <nui-textbox formControlName=\\\"title\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['organization','title'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n                </nui-form-field>\\n                <nui-form-field caption=\\\"Date\\\"\\n                                class=\\\"d-block mb-4\\\"\\n                                [control]=\\\"form.get(['organization','date'])\\\">\\n                    <nui-date-picker formControlName=\\\"date\\\" i18n></nui-date-picker>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['organization','date'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n                </nui-form-field>\\n                <nui-form-field [control]=\\\"form.get(['organization','createDynamicStep1'])\\\" class=\\\"d-block\\\">\\n                    <nui-checkbox formControlName=\\\"createDynamicStep1\\\" [value]=\\\"true\\\">\\n                        Add first step dynamically\\n                    </nui-checkbox>\\n                </nui-form-field>\\n                <nui-form-field [control]=\\\"form.get(['organization','createDynamicStep2'])\\\" class=\\\"d-block\\\">\\n                    <nui-checkbox formControlName=\\\"createDynamicStep2\\\" [value]=\\\"true\\\">\\n                        Add second step dynamically\\n                    </nui-checkbox>\\n                </nui-form-field>\\n                    <ng-template wizardStepFooter>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardNext; context: { form: 'organization' }\\\"></ng-container>\\n                    </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <nui-wizard-step-v2 *ngFor=\\\"let step of dynamicSteps\\\">\\n                <ng-template wizardStepLabel>{{step.title}}</ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"step.templateRef\\\"></ng-container>\\n                <ng-template wizardStepFooter>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <nui-wizard-step-v2 formGroupName=\\\"contactDetails\\\"\\n                                [stepControl]=\\\"form.get(['contactDetails'])\\\"\\n                                #finalStep>\\n\\n                <ng-template wizardStepLabel>\\n                    <span>Contact Details</span>\\n                </ng-template>\\n\\n                <nui-form-field [control]=\\\"form.get(['contactDetails','email'])\\\"\\n                                class=\\\"d-block mb-4 mt-4\\\"\\n                                i18n-caption\\n                                caption=\\\"Email\\\">\\n                    <nui-textbox type=\\\"email\\\" formControlName=\\\"email\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['contactDetails','email'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n\\n                    <nui-validation-message for=\\\"email\\\"\\n                                            *ngIf=\\\"form.get(['contactDetails','email'])?.errors?.email\\\"\\n                                            i18n>\\n                        Invalid email\\n                    </nui-validation-message>\\n                </nui-form-field>\\n\\n                <nui-form-field caption=\\\"Select\\\"\\n                    [control]=\\\"form.get(['contactDetails','options'])\\\">\\n                    <nui-select-v2 formControlName=\\\"options\\\">\\n                        <nui-select-v2-option value=\\\"Item 1\\\">Item 1</nui-select-v2-option>\\n                        <nui-select-v2-option value=\\\"Item 2\\\">Item 2</nui-select-v2-option>\\n                    </nui-select-v2>\\n                </nui-form-field>\\n\\n                    <ng-template wizardStepFooter>\\n                        <button nui-button\\n                                type=\\\"button\\\"\\n                                displayStyle=\\\"destructive\\\"\\n                                (click)=\\\"resetStep(finalStep)\\\">\\n                            Reset step\\n                        </button>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                        <button type=\\\"button\\\"\\n                                nui-button\\n                                displayStyle=\\\"primary\\\"\\n                                [disabled]=\\\"form.get(['contactDetails','email']).invalid\\\"\\n                                (click)=\\\"completeWizard(finalStep)\\\"\\n                        >\\n                            Finish\\n                        </button>\\n                    </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <ng-template #wizardPrevious>\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-template>\\n\\n            <ng-template #wizardNext let-form=\\\"form\\\">\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                        (click)=\\\"validateStep(form)\\\"\\n                >Next</button>\\n            </ng-template>\\n\\n            <ng-template #wizardCancel>\\n                <button type=\\\"button\\\" nui-button displayStyle=\\\"action\\\" (click)=\\\"closeDialog()\\\">\\n                    Cancel\\n                </button>\\n            </ng-template>\\n        </nui-wizard-horizontal>\\n    </form>\\n</ng-template>\\n\\n<ng-template #dynamicTemplate1>\\n    <p i18n>Hi! I was created dynamically, because you've checked the checkbox on the previous step! Uncheck it to hide me!</p>\\n</ng-template>\\n\\n<ng-template #dynamicTemplate2>\\n    <p i18n>This is another template rendered dynamically!</p>\\n    <button type=\\\"button\\\" nui-button class=\\\"mb-3\\\" (click)=\\\"awesome = !awesome\\\">Click if you're awesome</button>\\n    <nui-message *ngIf=\\\"awesome\\\" type=\\\"ok\\\">You are awesome!</nui-message>\\n</ng-template>\\n\\n<button nui-button type=\\\"button\\\" (click)=\\\"openDialog(dialogWizard)\\\" i18n> Open dialog wizard</button>\\n\";","import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from \"@angular/cdk/stepper\";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { wizardAnimations, WizardDirective, WizardStepV2Component } from \"@nova-ui/bits\";\nimport { tap } from \"rxjs/operators\";\n\n@Component({\n    selector: \"nui-wizard-custom\",\n    templateUrl: \"wizard-custom.component.html\",\n    styleUrls: [\"wizard-custom.component.less\"],\n    host: {\n        \"class\": \"nui-wizard-custom-layout\",\n        \"aria-orientation\": \"horizontal\",\n    },\n    animations: [wizardAnimations.horizontalStepTransition],\n    providers: [\n        {provide: WizardDirective, useExisting: WizardCustomComponent},\n        {provide: CdkStepper, useExisting: WizardCustomComponent},\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WizardCustomComponent extends WizardDirective {}\n\n@Component({\n    selector: \"nui-wizard-custom-example\",\n    templateUrl: \"./wizard-custom-example.component.html\",\n    styleUrls: [\"wizard-custom.component.less\"],\n    providers: [{\n        provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false},\n    }],\n})\nexport class WizardCustomExampleComponent implements OnInit, AfterViewInit {\n    public formGroup: FormGroup;\n    public steps: number = 1;\n    public selectedIndex: number = 0;\n    public progress: number;\n\n    @ViewChild(\"wizard\") wizard: WizardCustomComponent;\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            \"personDetails\": this.formBuilder.group({\n                \"name\": [\"\", [Validators.required, Validators.minLength(3)]],\n                \"symptoms\": [undefined, Validators.required],\n            }),\n            \"diseaseDetails\": this.formBuilder.group({\n                \"date\": [\"\", Validators.required],\n            }),\n            \"contactDetails\": this.formBuilder.group({\n                \"email\": [\"\", [Validators.required, Validators.email]],\n                \"phone\": [\"\"],\n            }),\n        });\n    }\n\n    ngAfterViewInit() {\n        const update = (selectedIndex?: number, steps?: number) => {\n            setTimeout(() => {\n                if (steps) {\n                    this.steps = steps;\n                }\n                if (selectedIndex !== undefined && selectedIndex >= 0) {\n                    this.selectedIndex = selectedIndex;\n                }\n                this.progress = 100 * (1 + this.selectedIndex) / this.steps;\n            });\n        };\n\n        this.wizard.selectionChange.pipe(\n            tap(i => {\n                update(i.selectedIndex);\n            })\n        ).subscribe();\n\n        this.wizard.steps.changes.pipe(\n            tap(c => {\n                update(undefined, c.length);\n            })\n        ).subscribe();\n    }\n\n    validate(step: WizardStepV2Component) {\n        // mark all fields from current step as touched\n        // in order to display the validation messages\n        Object.keys((step.stepControl as FormGroup)?.controls || {})\n            .forEach(key => {\n                const field = this.wizard.selected.stepControl.get(key);\n                field?.markAsTouched();\n            });\n    }\n}\n","<div class=\"container\">\n    <div class=\"row custom-header\">\n        <div class=\"col-9 p-0\">\n            <div class=\"nui-wizard-horizontal-header-container\">\n                <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last\">\n                    <wizard-step-header\n                        class=\"nui-wizard-horizontal-header\"\n                        (click)=\"step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\n                        [id]=\"_getStepLabelId(i)\"\n                        [attr.aria-posinset]=\"i + 1\"\n                        [attr.aria-setsize]=\"steps.length\"\n                        [attr.aria-controls]=\"_getStepContentId(i)\"\n                        [attr.aria-selected]=\"selectedIndex == i\"\n                        [attr.aria-label]=\"step.ariaLabel || null\"\n                        [attr.aria-labelledby]=\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\"\n                        [index]=\"i\"\n                        [state]=\"_getIndicatorType(i, step.state)\"\n                        [label]=\"step.label || step.stepLabel\"\n                        [selected]=\"selectedIndex === i\"\n                        [active]=\"step.completed || selectedIndex === i || !linear\"\n                        [optional]=\"step.optional\"\n                        [errorMessage]=\"step.errorMessage\"\n                        [disableRipple]=\"disableRipple\">\n                    </wizard-step-header>\n                    <div *ngIf=\"!isLast\" class=\"nui-wizard-horizontal-line\"></div>\n                </ng-container>\n            </div>\n            <div class=\"nui-wizard-horizontal-content-container\">\n                <h2>\n                    <ng-container *ngIf=\"selected.stepLabel\" [ngTemplateOutlet]=\"selected.stepLabel.template\"></ng-container>\n                    <ng-container *ngIf=\"!selected.stepLabel\">{{selected.label}}</ng-container>\n                </h2>\n                <div *ngFor=\"let step of steps; let i = index\"\n                     [attr.tabindex]=\"selectedIndex === i ? 0 : null\"\n                     class=\"nui-wizard-horizontal-content\" role=\"tabpanel\"\n                     [@stepTransition]=\"_getAnimationDirection(i)\"\n                     (@stepTransition.done)=\"_animationDone.next($event)\"\n                     [id]=\"_getStepContentId(i)\"\n                     [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n                     [attr.aria-expanded]=\"selectedIndex === i\">\n                    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3 custom-summary\">\n            <ng-content select=[summary]></ng-content>\n            <div *ngIf=\"selected.stepFooter\" class=\"row nui-wizard-horizontal-footer-container\">\n                <wizard-footer [footer]=\"selected.stepFooter\"></wizard-footer>\n            </div>\n        </div>\n    </div>\n</div>\n","<form [formGroup]=\"formGroup\">\n    <nui-wizard-custom [linear]=\"true\" #wizard>\n        <!-- Overview content-->\n        <ng-container summary>\n            <h2>Overview</h2>\n            <nui-progress [show]=\"true\"\n                          [stacked]=\"true\"\n                          [percent]=\"progress| number: '1.0-0'\"\n                          [showNumber]=\"true\">\n            </nui-progress>\n            <p>Step {{selectedIndex+1}} out of {{steps}} steps</p>\n            <p>Name: {{formGroup.get(['personDetails', 'name'])?.value || \"Not provided\"}}</p>\n            <p>Symptoms:\n                <ng-container [ngSwitch]=\"formGroup.get(['personDetails','symptoms'])?.value\">\n                    <ng-container *ngSwitchCase=\"true\">\n                        {{ formGroup.get(['diseaseDetails','date']).valid ? \"Since \" + formGroup.get(['diseaseDetails','date'])?.value.format('D MMM YYYY') : \"Yes\" }}\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"false\" i18n>No</ng-container>\n                    <ng-container *ngSwitchDefault i18n>Unknown</ng-container>\n                </ng-container>\n            </p>\n            <p>Email: {{formGroup.get(['contactDetails', 'email'])?.value || \"Not provided\"}}</p>\n        </ng-container>\n\n        <!--  content of the 1st step -->\n        <nui-wizard-step-v2 i18n-label label=\"Person Details\"\n                            formGroupName=\"personDetails\" [stepControl]=\"formGroup.get(['personDetails'])\">\n            <!-- content of the current step -->\n            <nui-form-field [control]=\"formGroup.get(['personDetails','name'])\" i18n-caption\n                            caption=\"Name\">\n                <nui-textbox formControlName=\"name\"></nui-textbox>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['personDetails','name'])?.errors?.required\"\n                                        i18n>\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message for=\"minlength\"\n                                        *ngIf=\"formGroup.get(['personDetails','name'])?.errors?.minlength\"\n                                        i18n>\n                    Minimum length is 3\n                </nui-validation-message>\n            </nui-form-field>\n\n            <nui-form-field [control]=\"formGroup.get(['personDetails','symptoms'])\" i18n-caption\n                            caption=\"Do you have Covid ?\">\n                <nui-checkbox formControlName=\"symptoms\" [indeterminate]=\"formGroup.get(['personDetails','symptoms'])?.pristine\" i18n>\n                    Diseases symptoms\n                </nui-checkbox>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['personDetails','symptoms'])?.errors?.required\"\n                                        i18n>\n                    This is required\n                </nui-validation-message>\n            </nui-form-field>\n\n            <!-- content of the footer -->\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <!--  content of the optional step -->\n        <nui-wizard-step-v2 *ngIf=\"formGroup.get(['personDetails','symptoms'])?.value\"\n                            i18n-label label=\"Disease Details\"\n                            formGroupName=\"diseaseDetails\" [stepControl]=\"formGroup.get(['diseaseDetails'])\">\n            <ng-template wizardStepLabel i18n>Disease Details for your Symptoms</ng-template>\n            <nui-form-field [control]=\"formGroup.get(['diseaseDetails','date'])\" i18n-caption\n                            caption=\"When did you noticed your first symptoms ?\">\n                <nui-date-picker formControlName=\"date\" i18n></nui-date-picker>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['diseaseDetails','date'])?.errors?.required\"\n                                        i18n>\n                    Date when disease manifested is required\n                </nui-validation-message>\n            </nui-form-field>\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <!--  content of the 2nd step -->\n        <nui-wizard-step-v2 i18n-label label=\"Contact Details\"\n                            formGroupName=\"contactDetails\" [stepControl]=\"formGroup.get(['contactDetails'])\">\n            <!-- content of the current step -->\n            <nui-form-field [control]=\"formGroup.get(['contactDetails','email'])\" i18n-caption\n                            caption=\"Email\">\n                <nui-textbox type=\"email\" formControlName=\"email\"></nui-textbox>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['contactDetails','email'])?.errors?.required\"\n                                        i18n>\n                    This is required\n                </nui-validation-message>\n\n                <nui-validation-message for=\"email\"\n                                        *ngIf=\"formGroup.get(['contactDetails','email'])?.errors?.email\"\n                                        i18n>\n                    Invalid email\n                </nui-validation-message>\n            </nui-form-field>\n            <nui-form-field [control]=\"formGroup.get(['contactDetails','phone'])\" i18n-caption\n                            caption=\"Phone\">\n                <nui-textbox type=\"email\" formControlName=\"phone\"></nui-textbox>\n            </nui-form-field>\n\n            <!-- content of the footer -->\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <!--  content of the final step -->\n        <nui-wizard-step-v2 i18n-label label=\"Final step\">\n            <span i18n>Thanks for your feedback and take care</span>!\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <button type=\"button\" nui-button (click)=\"wizard.reset()\">Reset</button>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <ng-template #wizardPrevious>\n            <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">Back</button>\n        </ng-template>\n\n        <ng-template #wizardNext>\n            <button nuiWizardNext\n                    type=\"button\"\n                    nui-button\n                    displayStyle=\"primary\"\n                    icon=\"caret-right\"\n                    iconRight=\"true\"\n                    (click)=\"validate(wizard.selected)\"\n            >Next\n            </button>\n        </ng-template>\n    </nui-wizard-custom>\n</form>\n","export default \"export * from \\\"./wizard-docs/wizard-docs.component\\\";\\nexport * from \\\"./wizard-horizontal-layout/wizard-horizontal-example.component\\\";\\nexport * from \\\"./wizard-vertical-layout/wizard-vertical-example.component\\\";\\nexport * from \\\"./wizard-custom-layout/wizard-custom-example.component\\\";\\nexport * from \\\"./wizard-busy/wizard-busy.example.component\\\";\\nexport * from \\\"./wizard-dialog/wizard-dialog.example.component\\\";\\nexport * from \\\"./wizard-custom-footer/wizard-custom-footer-example.component\\\";\\nexport * from \\\"./wizard-dynamic/wizard-dynamic.example.component\\\";\\nexport * from \\\"./wizard-remove-step/wizard-remove-step-example.component\\\";\\nexport * from \\\"./wizard-async-validation-form/wizard-async-form-validation.example.component\\\";\\nexport * from \\\"./wizard-restore-state/wizard-restore-state.example.component\\\";\\nexport * from \\\"./wizard-step-change-example/wizard-step-change-example.component\\\"\\n\";","export default \"<div nui-busy [busy]=\\\"busy\\\">\\n    <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\n        <nui-wizard-horizontal linear #wizard>\\n            <nui-wizard-step-v2 label=\\\"Person Details\\\"\\n                                formGroupName=\\\"personDetails\\\"\\n                                [stepControl]=\\\"form.get(['personDetails'])\\\">\\n                <nui-form-field [control]=\\\"form.get(['personDetails','name'])\\\"\\n                                i18n-caption\\n                                caption=\\\"Name\\\">\\n                    <nui-textbox formControlName=\\\"name\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['user','name'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n\\n                    <ng-template wizardStepFooter>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                    </ng-template>\\n                </nui-form-field>\\n\\n            </nui-wizard-step-v2>\\n\\n            <nui-wizard-step-v2 formGroupName=\\\"contactDetails\\\"\\n                                [stepControl]=\\\"form.get(['contactDetails'])\\\">\\n\\n                <ng-template wizardStepLabel>\\n                    <span (click)=\\\"onNextClick(wizard.selected)\\\">Contact Details</span>\\n                </ng-template>\\n\\n                <nui-form-field [control]=\\\"form.get(['contactDetails','email'])\\\"\\n                                i18n-caption\\n                                caption=\\\"Email\\\">\\n                    <nui-textbox type=\\\"email\\\" formControlName=\\\"email\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['contactDetails','email'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n\\n                    <nui-validation-message for=\\\"email\\\"\\n                                            *ngIf=\\\"form.get(['contactDetails','email'])?.errors?.email\\\"\\n                                            i18n>\\n                        Invalid email\\n                    </nui-validation-message>\\n\\n                    <ng-template wizardStepFooter>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                    </ng-template>\\n                </nui-form-field>\\n            </nui-wizard-step-v2>\\n\\n            <ng-template #wizardPrevious>\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-template>\\n\\n            <ng-template #wizardNext>\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                        (click)=\\\"onNextClick(wizard.selected)\\\"\\n                >Next</button>\\n            </ng-template>\\n        </nui-wizard-horizontal>\\n    </form>\\n\\n    <nui-spinner size=\\\"large\\\"\\n                 i18n-message\\n                 message=\\\"Async Validation is firing...\\\">\\n    </nui-spinner>\\n</div>\\n\";","export default \"import { Component, Inject, OnDestroy, OnInit, TemplateRef, ViewChild } from \\\"@angular/core\\\";\\nimport { FormBuilder, FormGroup, Validators } from \\\"@angular/forms\\\";\\nimport { DialogService, NuiDialogRef, WizardStepV2Component, IWizardState } from \\\"@nova-ui/bits\\\";\\nimport isEqual from \\\"lodash/isEqual\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport { takeUntil } from \\\"rxjs/operators\\\";\\nimport { IWizardStepConfig } from \\\"../wizard-dynamic/wizard-dynamic.example.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-restore-state-example\\\",\\n    templateUrl: \\\"./wizard-restore-state.example.component.html\\\",\\n})\\nexport class WizardRestoreStateExampleComponent implements OnInit, OnDestroy {\\n    public form: FormGroup;\\n    public activeDialog: NuiDialogRef;\\n    public state: IWizardState;\\n    public dynamicSteps: IWizardStepConfig[] = [];\\n    public awesome: boolean = false;\\n\\n    private destroy$: Subject<any> = new Subject();\\n\\n    @ViewChild(\\\"dynamicTemplate1\\\") public template1: TemplateRef<string>;\\n    @ViewChild(\\\"dynamicTemplate2\\\") public template2: TemplateRef<string>;\\n\\n    constructor(private formBuilder: FormBuilder,\\n                @Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit(): void {\\n        this.form = new FormGroup({\\n            \\\"personDetails\\\": this.formBuilder.group({\\n                \\\"name\\\": [\\n                    \\\"\\\",\\n                    [Validators.required, Validators.minLength(3)],\\n                ],\\n                \\\"privacy\\\": [false, [Validators.requiredTrue]],\\n            }),\\n            \\\"organization\\\": this.formBuilder.group({\\n                \\\"title\\\": [\\\"\\\", [Validators.required]],\\n                \\\"date\\\": [\\\"\\\", [Validators.required]],\\n                \\\"createDynamicStep1\\\": [false],\\n                \\\"createDynamicStep2\\\": [false],\\n            }),\\n            \\\"contactDetails\\\": this.formBuilder.group({\\n                \\\"email\\\": [\\\"\\\", [Validators.required, Validators.email]],\\n                \\\"options\\\": [\\\"\\\"],\\n            }),\\n        });\\n\\n        this.form.get([\\\"organization\\\", \\\"createDynamicStep1\\\"])?.valueChanges\\n            .pipe(takeUntil(this.destroy$))\\n            .subscribe(changes => {\\n                this.handleDynamicSteps(\\\"I was created dynamically!\\\", this.template1, changes);\\n            });\\n\\n        this.form.get([\\\"organization\\\", \\\"createDynamicStep2\\\"])?.valueChanges\\n            .pipe(takeUntil(this.destroy$))\\n            .subscribe(changes => {\\n                this.handleDynamicSteps(\\\"Another dynamic step\\\", this.template2, changes);\\n            });\\n    }\\n\\n    ngOnDestroy(): void {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public openDialog(content: TemplateRef<string>): void {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"lg\\\"});\\n    }\\n\\n    public closeDialog(): void {\\n        this.activeDialog.close();\\n    }\\n\\n    public saveState(state: IWizardState): void {\\n        this.state = state;\\n    }\\n\\n    public completeWizard(step: WizardStepV2Component): void {\\n        step.completed = true;\\n        this.activeDialog.close();\\n    }\\n\\n    public resetStep(step: WizardStepV2Component): void {\\n        step.reset();\\n    }\\n\\n    private validateStep(formGroup: string): void {\\n        this.form.get(formGroup)?.markAllAsTouched();\\n    }\\n\\n    private handleDynamicSteps(title: string, template: TemplateRef<string>, controlValue: boolean) {\\n        const newStep: IWizardStepConfig = { title: title, templateRef: template };\\n        const index = this.dynamicSteps.findIndex(step => isEqual(step, newStep));\\n\\n        controlValue\\n            ? this.dynamicSteps.push({...newStep})\\n            : this.dynamicSteps.splice(index, 1);\\n    }\\n}\\n\";","import { Component, Inject, TemplateRef, ViewChild } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService, WizardComponent } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-wizard-v2-dialog-example\",\n    templateUrl: \"./wizard-dialog.example.component.html\",\n})\nexport class WizardDialogExampleComponent {\n    @ViewChild(\"wizardComponent\") wizardComponent: WizardComponent;\n\n    public busy: boolean = false;\n    public activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public vegetables = [$localize `Cabbage`, $localize `Potato`, $localize `Tomato`, $localize `Carrot`];\n    public selectedVegetables = [$localize `Potato`, $localize `Tomato`];\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public valuesChanged(values: any[]) {\n        this.selectedVegetables = [...values];\n    }\n\n    public openDialog(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {\n            size: \"lg\",\n            windowClass: \"active-dialog\",\n        });\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public toggleBusy() {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n}\n","<ng-template #dialogWizard>\n    <div nui-busy [busy]=\"busy\">\n        <div class=\"busy-content\">\n            <nui-dialog-header i18n-title title=\"Wizard dialog\" (closed)=\"closeDialog()\"></nui-dialog-header>\n            <div class=\"dialog-body compact-mode\">\n                <nui-wizard-horizontal>\n\n                    <!--  content of the 1st step -->\n                    <nui-wizard-step-v2>\n                        <!-- define the label which is displayed on the header stepper -->\n                        <ng-template wizardStepLabel>Completed</ng-template>\n\n                        <!-- content of the current step -->\n                        <span i18n>This is the first step of our horizontal wizard</span>.\n\n                        <!-- content of the footer -->\n                        <ng-template wizardStepFooter>\n                            <button type=\"button\" nui-button (click)=\"toggleBusy()\">\n                                Toggle busy\n                            </button>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <!--  content of the 2nd step -->\n                    <nui-wizard-step-v2>\n                        <!-- define the label which is displayed on the header stepper -->\n                        <ng-template wizardStepLabel>Active</ng-template>\n\n                        <!-- content of the current step -->\n                        <span i18n>This is the second step of our horizontal wizard</span>.\n\n                        <!-- content of the footer -->\n                        <ng-template wizardStepFooter>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <!--  content of the 3rd step -->\n                    <nui-wizard-step-v2>\n                        <!-- define the label which is displayed on the header stepper -->\n                        <ng-template wizardStepLabel>Not visited</ng-template>\n\n                        <!-- content of the current step -->\n                        <span i18n>This is the third step of our horizontal wizard</span>.\n\n                        <!-- content of the footer -->\n                        <ng-template wizardStepFooter>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <!--  content of the final step -->\n                    <nui-wizard-step-v2>\n                        <ng-template wizardStepLabel>Summary</ng-template>\n                        <span i18n>We finally reached our last step</span>!\n                        <ng-template wizardStepFooter>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <ng-template #wizardCancel>\n                        <button type=\"button\" displayStyle=\"action\" nui-button (click)=\"closeDialog()\">\n                            Cancel\n                        </button>\n                    </ng-template>\n\n                    <ng-template #wizardPrevious>\n                        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                            Previous\n                        </button>\n                    </ng-template>\n\n                    <ng-template #wizardNext>\n                        <button nuiWizardNext\n                                type=\"button\"\n                                nui-button\n                                displayStyle=\"primary\"\n                                icon=\"caret-right\"\n                                iconRight=\"true\"\n                        >Next</button>\n                    </ng-template>\n                </nui-wizard-horizontal>\n            </div>\n        </div>\n        <nui-spinner size=\"large\" i18n-message message=\"Data is loading from remote server...\"></nui-spinner>\n    </div>\n</ng-template>\n\n<button nui-button type=\"button\"\n        (click)=\"openDialog(dialogWizard)\"\n        i18n>\n    Open dialog wizard\n</button>\n","export default \"import { Component, Inject, TemplateRef, ViewChild } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService, WizardComponent } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-v2-dialog-example\\\",\\n    templateUrl: \\\"./wizard-dialog.example.component.html\\\",\\n})\\nexport class WizardDialogExampleComponent {\\n    @ViewChild(\\\"wizardComponent\\\") wizardComponent: WizardComponent;\\n\\n    public busy: boolean = false;\\n    public activeDialog: NuiDialogRef;\\n\\n    constructor(\\n        @Inject(DialogService) private dialogService: DialogService,\\n        @Inject(ToastService) private toastService: ToastService\\n    ) {}\\n\\n    public vegetables = [$localize `Cabbage`, $localize `Potato`, $localize `Tomato`, $localize `Carrot`];\\n    public selectedVegetables = [$localize `Potato`, $localize `Tomato`];\\n\\n    public isChecked(vegetable: string): boolean {\\n        return this.selectedVegetables.indexOf(vegetable) > -1;\\n    }\\n\\n    public valuesChanged(values: any[]) {\\n        this.selectedVegetables = [...values];\\n    }\\n\\n    public openDialog(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {\\n            size: \\\"lg\\\",\\n            windowClass: \\\"active-dialog\\\",\\n        });\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public toggleBusy() {\\n        this.busy = !this.busy;\\n        setTimeout(() => {\\n            this.busy = false;\\n        }, 3000);\\n    }\\n}\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { of } from \"rxjs\";\nimport { delay, take } from \"rxjs/operators\";\nimport { WizardHorizontalComponent, WizardStepV2Component } from \"@nova-ui/bits\";\n\nconst fakeAsyncValidator = (c: FormControl) => of(null).pipe(delay(4000));\n\n@Component({\n    selector: \"nui-wizard-async-form-validation-example\",\n    templateUrl: \"./wizard-async-form-validation.example.component.html\",\n})\nexport class WizardAsyncFormValidationExampleComponent implements OnInit {\n    public busy: boolean;\n\n    public form: FormGroup;\n\n    @ViewChild(\"wizard\") wizard: WizardHorizontalComponent;\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit(): void {\n        this.form = new FormGroup({\n            \"personDetails\": this.formBuilder.group({\n                \"name\": [\n                    \"\",\n                    [Validators.required, Validators.minLength(3)],\n                    [fakeAsyncValidator],\n                ],\n            }),\n            \"contactDetails\": this.formBuilder.group({\n                \"email\": [\"\", [Validators.required, Validators.email]],\n                \"phone\": [\"\"],\n            }),\n        });\n    }\n\n    public onNextClick(selected: WizardStepV2Component): void {\n        const { stepControl } = selected;\n\n        if (stepControl.status !== \"PENDING\") {\n            stepControl.markAllAsTouched();\n\n            return;\n        }\n\n        this.busy = true;\n        stepControl.statusChanges\n            .pipe(take(1))\n            .subscribe((status) => {\n                if (status === \"VALID\") {\n                    this.wizard.next();\n                    this.busy = false;\n                }\n            });\n    }\n}\n","<div nui-busy [busy]=\"busy\">\n    <form [formGroup]=\"form\" *ngIf=\"form\">\n        <nui-wizard-horizontal linear #wizard>\n            <nui-wizard-step-v2 label=\"Person Details\"\n                                formGroupName=\"personDetails\"\n                                [stepControl]=\"form.get(['personDetails'])\">\n                <nui-form-field [control]=\"form.get(['personDetails','name'])\"\n                                i18n-caption\n                                caption=\"Name\">\n                    <nui-textbox formControlName=\"name\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['user','name'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n\n                    <ng-template wizardStepFooter>\n                        <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                    </ng-template>\n                </nui-form-field>\n\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2 formGroupName=\"contactDetails\"\n                                [stepControl]=\"form.get(['contactDetails'])\">\n\n                <ng-template wizardStepLabel>\n                    <span (click)=\"onNextClick(wizard.selected)\">Contact Details</span>\n                </ng-template>\n\n                <nui-form-field [control]=\"form.get(['contactDetails','email'])\"\n                                i18n-caption\n                                caption=\"Email\">\n                    <nui-textbox type=\"email\" formControlName=\"email\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['contactDetails','email'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n\n                    <nui-validation-message for=\"email\"\n                                            *ngIf=\"form.get(['contactDetails','email'])?.errors?.email\"\n                                            i18n>\n                        Invalid email\n                    </nui-validation-message>\n\n                    <ng-template wizardStepFooter>\n                        <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                    </ng-template>\n                </nui-form-field>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardPrevious>\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext>\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                        (click)=\"onNextClick(wizard.selected)\"\n                >Next</button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </form>\n\n    <nui-spinner size=\"large\"\n                 i18n-message\n                 message=\"Async Validation is firing...\">\n    </nui-spinner>\n</div>\n","export default \"@import (reference) \\\"../../../../../../src/styles/nui-framework-variables\\\";\\n@import (reference) \\\"../../../../../../src/styles/mixins.less\\\";\\n\\n.nui-wizard-custom-layout{\\n    .container {\\n        border: @nui-line-default solid;\\n        .setCssVariable(border-color, nui-color-line-default);\\n    }\\n\\n    .nui-wizard-step-header {\\n        border: @nui-line-default solid;\\n        border-radius: 5px;\\n\\n        .setCssVariable(border-color, nui-color-line-default);\\n        .setCssVariable(background, nui-color-bg-content);\\n\\n        padding: 0 8px;\\n    }\\n\\n    .nui-wizard-step-header-selected {\\n        .setCssVariable(background-color, nui-color-active);\\n\\n        color: @nui-color-text-light;\\n        border-color: transparent;\\n\\n        svg path {\\n            fill: @nui-color-text-inverse;\\n        }\\n    }\\n\\n    .custom-header {\\n        .nui-wizard-horizontal-header-container {\\n            border-top: none;\\n\\n            .nui-wizard-horizontal-line {\\n                margin: 0;\\n            }\\n        }\\n\\n        //.nui-wizard-horizontal-content-container {\\n        //    padding: 0;\\n        //}\\n\\n        .custom-summary {\\n            border-left: @nui-line-default @nui-color-line-default solid;\\n        }\\n    }\\n\\n    .nui-wizard-footer {\\n        border: none;\\n        justify-content: space-between;\\n\\n        button {\\n            min-width: 0;\\n            margin: 0;\\n        }\\n    }\\n}\\n\";","export default \"import { Component, OnInit, ViewChild } from \\\"@angular/core\\\";\\nimport { FormBuilder, FormControl, FormGroup, Validators } from \\\"@angular/forms\\\";\\nimport { of } from \\\"rxjs\\\";\\nimport { delay, take } from \\\"rxjs/operators\\\";\\nimport { WizardHorizontalComponent, WizardStepV2Component } from \\\"@nova-ui/bits\\\";\\n\\nconst fakeAsyncValidator = (c: FormControl) => of(null).pipe(delay(4000));\\n\\n@Component({\\n    selector: \\\"nui-wizard-async-form-validation-example\\\",\\n    templateUrl: \\\"./wizard-async-form-validation.example.component.html\\\",\\n})\\nexport class WizardAsyncFormValidationExampleComponent implements OnInit {\\n    public busy: boolean;\\n\\n    public form: FormGroup;\\n\\n    @ViewChild(\\\"wizard\\\") wizard: WizardHorizontalComponent;\\n\\n    constructor(private formBuilder: FormBuilder) {}\\n\\n    ngOnInit(): void {\\n        this.form = new FormGroup({\\n            \\\"personDetails\\\": this.formBuilder.group({\\n                \\\"name\\\": [\\n                    \\\"\\\",\\n                    [Validators.required, Validators.minLength(3)],\\n                    [fakeAsyncValidator],\\n                ],\\n            }),\\n            \\\"contactDetails\\\": this.formBuilder.group({\\n                \\\"email\\\": [\\\"\\\", [Validators.required, Validators.email]],\\n                \\\"phone\\\": [\\\"\\\"],\\n            }),\\n        });\\n    }\\n\\n    public onNextClick(selected: WizardStepV2Component): void {\\n        const { stepControl } = selected;\\n\\n        if (stepControl.status !== \\\"PENDING\\\") {\\n            stepControl.markAllAsTouched();\\n\\n            return;\\n        }\\n\\n        this.busy = true;\\n        stepControl.statusChanges\\n            .pipe(take(1))\\n            .subscribe((status) => {\\n                if (status === \\\"VALID\\\") {\\n                    this.wizard.next();\\n                    this.busy = false;\\n                }\\n            });\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-v2-busy-example\\\",\\n    templateUrl: \\\"./wizard-busy.example.component.html\\\",\\n    styleUrls: [\\\"./wizard-busy.example.component.less\\\"],\\n})\\nexport class WizardBusyExampleComponent  {\\n    public busy: boolean;\\n\\n    public toggleStepBusy() {\\n        this.busy = !this.busy;\\n        setTimeout(() => {\\n            this.busy = false;\\n        }, 3000);\\n    }\\n}\\n\";","export default \"<nui-wizard-horizontal>\\n\\n    <!--  content of the 1st step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the first step of our horizontal wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the final step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>!\\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n\";","export * from \"./wizard-docs/wizard-docs.component\";\nexport * from \"./wizard-horizontal-layout/wizard-horizontal-example.component\";\nexport * from \"./wizard-vertical-layout/wizard-vertical-example.component\";\nexport * from \"./wizard-custom-layout/wizard-custom-example.component\";\nexport * from \"./wizard-busy/wizard-busy.example.component\";\nexport * from \"./wizard-dialog/wizard-dialog.example.component\";\nexport * from \"./wizard-custom-footer/wizard-custom-footer-example.component\";\nexport * from \"./wizard-dynamic/wizard-dynamic.example.component\";\nexport * from \"./wizard-remove-step/wizard-remove-step-example.component\";\nexport * from \"./wizard-async-validation-form/wizard-async-form-validation.example.component\";\nexport * from \"./wizard-restore-state/wizard-restore-state.example.component\";\nexport * from \"./wizard-step-change-example/wizard-step-change-example.component\"\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-wizard-v2-example\",\n    templateUrl: \"./wizard-docs.component.html\",\n})\nexport class WizardDocsComponent {}\n","<h2>Layout</h2>\n<h3>Horizontal Layout Wizard</h3>\n<p>\n    To use the horizontal wizard component, place a <code>nui-wizard-horizontal</code> element in your template and include one or more\n    <code><a href=\"../components/WizardStepComponent.html\" target=\"_blank\">nui-wizard-step-v2</a></code> elements as children of the\n    <code>nui-wizard-horizontal</code> element.\n</p>\n<nui-example-wrapper filenamePrefix=\"wizard-horizontal-layout\" exampleTitle=\"Horizontal Layout Wizard\">\n    <nui-wizard-horizontal-example></nui-wizard-horizontal-example>\n</nui-example-wrapper>\n\n<h3>Vertical Layout Wizard</h3>\n<nui-example-wrapper filenamePrefix=\"wizard-vertical-layout\" exampleTitle=\"Vertical Layout Wizard\">\n    <nui-wizard-vertical-example></nui-wizard-vertical-example>\n</nui-example-wrapper>\n\n<h3>Usage with a dialog</h3>\n<p>You can pass an existing wizard component as content of the dialog window. </p>\n<p>You should insert wizard component in dialog body. </p>\n<nui-example-wrapper filenamePrefix=\"wizard-dialog\" exampleTitle=\"wizard in dialog\">\n    <nui-wizard-v2-dialog-example></nui-wizard-v2-dialog-example>\n</nui-example-wrapper>\n\n<h3>Busy step</h3>\n<p>You can make your step busy to forbid actions.</p>\n<nui-example-wrapper filenamePrefix=\"wizard-busy\" exampleTitle=\"wizard step busy\">\n    <nui-wizard-v2-busy-example></nui-wizard-v2-busy-example>\n</nui-example-wrapper>\n\n<h3>Custom footer</h3>\n<p>Customizing the footer layout content and style for each step is quite easy, as you can see in the example below:</p>\n<nui-example-wrapper filenamePrefix=\"wizard-custom-footer\" exampleTitle=\"Wizard with Custom Footer\">\n    <nui-wizard-custom-footer-example></nui-wizard-custom-footer-example>\n</nui-example-wrapper>\n\n<h3>Adding step dynamically</h3>\n<p>You are able to add wizard steps dynamically.</p>\n<nui-example-wrapper filenamePrefix=\"wizard-dynamic\" exampleTitle=\"wizard add dynamic step\">\n    <nui-wizard-dynamic-example></nui-wizard-dynamic-example>\n</nui-example-wrapper>\n\n<h3>Removing step</h3>\n<p>You are able to remove steps by index.</p>\n<nui-example-wrapper filenamePrefix=\"wizard-remove-step\" exampleTitle=\"wizard remove step\">\n    <nui-wizard-remove-step-example></nui-wizard-remove-step-example>\n</nui-example-wrapper>\n\n<h3>Custom Layout Wizard</h3>\n<nui-example-wrapper filenamePrefix=\"wizard-custom-layout\" exampleTitle=\"Custom Layout Wizard\">\n    <nui-wizard-custom-example></nui-wizard-custom-example>\n</nui-example-wrapper>\n\n<h3>Async Form Validation</h3>\n<p>\n    To handle async validation check 'PENDING' status of WizardV2Step stepControl\n</p>\n<nui-example-wrapper filenamePrefix=\"wizard-async-form-validation\" exampleTitle=\"Async Form Validation\">\n    <nui-wizard-async-form-validation-example></nui-wizard-async-form-validation-example>\n</nui-example-wrapper>\n\n<h3>Restore Wizard State</h3>\n<p>\n    To restore wizard state you need to pass previous wizard steps as input\n</p>\n<nui-example-wrapper filenamePrefix=\"wizard-restore-state\" exampleTitle=\"Restore Wizard State\">\n    <nui-wizard-restore-state-example></nui-wizard-restore-state-example>\n</nui-example-wrapper>\n\n<h3>Wizard Step Change Event Example</h3>\n<p>\n    You are able to subscribe when the selected step has changed.\n</p>\n<nui-example-wrapper filenamePrefix=\"wizard-step-change-example\" exampleTitle=\"Wizard Step Change\">\n    <nui-wizard-step-change-example></nui-wizard-step-change-example>\n</nui-example-wrapper>\n","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    TemplateRef,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\n\\nimport {IWizardStepConfig } from \\\"../wizard-dynamic/wizard-dynamic.example.component\\\";\\nimport {StepperSelectionEvent} from \\\"@angular/cdk/stepper\\\";\\nimport {ToastService} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-step-change-example\\\",\\n    templateUrl: \\\"./wizard-step-change-example.component.html\\\",\\n})\\nexport class WizardStepChangeExampleComponent implements AfterViewInit {\\n    public steps: IWizardStepConfig[] = [];\\n\\n    @ViewChild(\\\"normalStep\\\") normalStep: TemplateRef<string>;\\n\\n    constructor(private toastService: ToastService) {\\n    }\\n\\n    public ngAfterViewInit(): void {\\n        this.addStep(this.normalStep, $localize `Normal step`);\\n    }\\n\\n    public addStep(templateRef: TemplateRef<string>, title?: string): void {\\n        this.steps.push({title: title ?? `Dynamic Step`, templateRef: templateRef});\\n    }\\n\\n\\n    public onSelectionChange($event: StepperSelectionEvent): void {\\n        this.toastService.info({\\n            title: $localize `Selected step changed.`,\\n            message: $localize `You moved from step with index ${$event.previouslySelectedIndex} to step with index ${$event.selectedIndex}`,\\n            options: {\\n                timeOut: 5000,\\n                extendedTimeOut: 2000,\\n            },\\n        });\\n    }\\n}\\n\";","<nui-wizard-vertical>\n\n    <!--  content of the 1st step -->\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <!-- content of the current step -->\n        <span i18n>This is the first step of our vertical wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the 2nd step -->\n    <nui-wizard-step-v2 i18n-label label=\"Second step\">\n        <!-- content of the current step -->\n        <span i18n>This is the second step of our vertical wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the final step -->\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>!\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-vertical>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-vertical-example\",\n    templateUrl: \"./wizard-vertical-example.component.html\",\n})\nexport class WizardVerticalExampleComponent {}\n"],"sourceRoot":"webpack:///"}