!function(){var e,o,c,n,t,i,a,b,l,s,u,r,h,p,d,m,g,x,k,v,f;function C(e,o){return o||(o=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(o)}}))}function V(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function U(e,o){for(var c=0;c<o.length;c++){var n=o[c];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function F(e,o,c){return o&&U(e.prototype,o),c&&U(e,c),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{"+Uf0":function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},"19SM":function(e,o,c){var n={"./checkbox-group-basic/checkbox-group-basic.example.component.html":"dmI9","./checkbox-group-basic/checkbox-group-basic.example.component.ts":"Z7g5","./checkbox-group-docs/checkbox-group-docs.example.component.html":"lGTv","./checkbox-group-docs/checkbox-group-docs.example.component.ts":"+Uf0","./checkbox-group-in-form/checkbox-group-in-form.example.component.html":"NvPO","./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":"Y7Yd","./checkbox-group-inline/checkbox-group-inline.example.component.html":"FsbB","./checkbox-group-inline/checkbox-group-inline.example.component.ts":"8Z72","./checkbox-group-justified/checkbox-group-justified.example.component.html":"JoKC","./checkbox-group-justified/checkbox-group-justified.example.component.ts":"EiW/","./checkbox-group-test/checkbox-group-test.component.html":"Ut/2","./checkbox-group-test/checkbox-group-test.component.ts":"fuQ5","./checkbox-group-visual-test/checkbox-group-visual-test.component.html":"j3x3","./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":"EFDT","./checkbox-group.module.ts":"JpOM","./index.ts":"FDVP"};function t(e){var o=i(e);return c(o)}function i(e){if(!c.o(n,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}t.keys=function(){return Object.keys(n)},t.resolve=i,e.exports=t,t.id="19SM"},"8Z72":function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},EFDT:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},"EiW/":function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},FDVP:function(e,o,c){"use strict";c.r(o),o.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},FsbB:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},JoKC:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},JpOM:function(e,o,c){"use strict";c.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'},NvPO:function(e,o,c){"use strict";c.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},"Ut/2":function(e,o,c){"use strict";c.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group-in-form-example id="nui-demo-checkbox-group-part-of-form"></nui-checkbox-group-in-form-example>\n    </div>\n</div>\n'},Y7Yd:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},Z7g5:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},dMfj:function(U,O,T){"use strict";T.r(O),T.d(O,"CheckboxGroupModule",function(){return be});var D=T("3Pt+"),G=T("tyNb"),R=T("b5Xb"),y=T("fXoL"),w=T("s1l0"),P=T("ofXK"),$=T("Oh8U"),j=T("6urz");function B(e,o){1&e&&(y.Vb(0,"nui-message",7),y.Vb(1,"b"),y.Zb(2,8),y.Ub(),y.Ub()),2&e&&y.vc("allowDismiss",!0)}function z(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",9),y.Rc(1),y.Ub()),2&e){var c=o.$implicit;y.vc("value",c),y.Db(1),y.Tc(" ",c," ")}}var I,S=((I=function(){function i(t,a){V(this,i),this.formBuilder=t,this.toastService=a,this.cabbage=$localize(e||(e=C(["Cabbage"]))),this.potato=$localize(o||(o=C(["Potato"]))),this.tomato=$localize(c||(c=C(["Tomato"]))),this.carrot=$localize(n||(n=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}return F(i,[{key:"ngOnInit",value:function(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[D.u.required,D.u.minLength(3)])})}},{key:"onSubmit",value:function(){console.log(this.myForm),this.toastService.success({message:$localize(t||(t=C(["Your form is valid!"])))})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),i}()).\u0275fac=function(e){return new(e||I)(y.Pb(D.c),y.Pb(R.Pb))},I.\u0275cmp=y.Jb({type:I,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){return[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],$localize(i||(i=C([":\u241f71c77bb8cecdf11ec3eead24dd1ba506573fa9cd\u241f935187492052582731:Submit"]))),["type","critical",3,"allowDismiss"],$localize(a||(a=C([":\u241faaf9b8331666795542f417fe39c78014513ca737\u241f3498101055154698277:Select minimum 3 checkboxes!"]))),[3,"value"]]},template:function(e,o){1&e&&(y.Vb(0,"form",0),y.jc("submit",function(){return o.onSubmit()}),y.Vb(1,"div",1),y.Pc(2,B,3,1,"nui-message",2),y.Vb(3,"nui-checkbox-group",3),y.Pc(4,z,2,2,"nui-checkbox",4),y.Ub(),y.Ub(),y.Vb(5,"button",5),y.Zb(6,6),y.Ub(),y.Ub()),2&e&&(y.vc("formGroup",o.myForm),y.Db(2),y.vc("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),y.Db(2),y.vc("ngForOf",o.vegetables),y.Db(1),y.vc("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[D.v,D.n,D.h,P.q,w.a,D.m,D.f,D.t,P.p,j.a,$.a],encapsulation:2}),I);function E(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",12),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}function M(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",13),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("hint",n.hints.indexOf(c)>=0?n.hints[n.hints.indexOf(c)]:null)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}var N,J=((N=function(){function e(o){V(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return F(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||N)(y.Pb(D.c))},N.\u0275cmp=y.Jb({type:N,selectors:[["nui-checkbox-group-test-example"]],decls:22,vars:24,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["id","nui-demo-checkbox-group-part-of-form"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(y.Vb(0,"div",0),y.Vb(1,"div",1),y.Vb(2,"nui-checkbox-group",2),y.Pc(3,E,2,3,"nui-checkbox",3),y.Vb(4,"nui-checkbox",4),y.Rc(5),y.Ub(),y.Ub(),y.Ub(),y.Vb(6,"div",5),y.Vb(7,"nui-checkbox-group",6),y.Pc(8,M,2,4,"nui-checkbox",7),y.Ub(),y.Ub(),y.Vb(9,"div",5),y.Vb(10,"form",8),y.Vb(11,"nui-checkbox-group",9),y.Vb(12,"nui-checkbox",10),y.Rc(13),y.Ub(),y.Vb(14,"nui-checkbox",10),y.Rc(15),y.Ub(),y.Vb(16,"nui-checkbox",10),y.Rc(17),y.Ub(),y.Vb(18,"nui-checkbox",10),y.Rc(19),y.Ub(),y.Ub(),y.Ub(),y.Ub(),y.Vb(20,"div",1),y.Qb(21,"nui-checkbox-group-in-form-example",11),y.Ub(),y.Ub()),2&e&&(y.Db(2),y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables),y.Db(1),y.vc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),y.Db(1),y.Sc(o.disabledOne),y.Db(2),y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables),y.Db(2),y.vc("formGroup",o.testForm),y.Db(2),y.vc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),y.Db(1),y.Tc(" ",o.vegetables[0],""),y.Db(1),y.vc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),y.Db(1),y.Tc(" ",o.vegetables[1],""),y.Db(1),y.vc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),y.Db(1),y.Tc(" ",o.vegetables[2],""),y.Db(1),y.vc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),y.Db(1),y.Tc(" ",o.vegetables[3],""))},directives:[w.a,P.p,$.a,D.v,D.n,D.h,D.m,D.f,S],encapsulation:2}),N),Q=T("CVg4");function q(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",2),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}var L,A=((L=function(){function e(o){V(this,e),this.toastService=o,this.cabbage=$localize(b||(b=C(["Cabbage"]))),this.potato=$localize(l||(l=C(["Potato"]))),this.tomato=$localize(s||(s=C(["Tomato"]))),this.carrot=$localize(u||(u=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}return F(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}},{key:"onValueChange",value:function(e){this.toastService.success({message:$localize(r||(r=C(["Selected checkboxes: "])))+e})}}]),e}()).\u0275fac=function(e){return new(e||L)(y.Pb(R.Pb))},L.\u0275cmp=y.Jb({type:L,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){var e;return[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],["hint",e=$localize(h||(h=C([":\u241fba785d6cbb33a003a3ce1d20077ba67264374284\u241f829155627086234075:This is some help text"]))),3,"value","checked",4,"ngFor","ngForOf"],["hint",e,3,"value","checked"]]},template:function(e,o){1&e&&(y.Vb(0,"nui-checkbox-group",0),y.jc("valuesChange",function(e){return o.onValueChange(e)}),y.Pc(1,q,2,3,"nui-checkbox",1),y.Ub()),2&e&&(y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables))},directives:[w.a,P.p,$.a],encapsulation:2}),L);function Y(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",2),y.Rc(1),y.Ub()),2&e){var c=o.$implicit;y.vc("value",c),y.Db(1),y.Tc(" ",c," ")}}var Z,_=((Z=function e(){V(this,e),this.cabbage=$localize(p||(p=C(["Cabbage"]))),this.potato=$localize(d||(d=C(["Potato"]))),this.tomato=$localize(m||(m=C(["Tomato"]))),this.carrot=$localize(g||(g=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}).\u0275fac=function(e){return new(e||Z)},Z.\u0275cmp=y.Jb({type:Z,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&(y.Vb(0,"nui-checkbox-group",0),y.Pc(1,Y,2,2,"nui-checkbox",1),y.Ub()),2&e&&(y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables))},directives:[w.a,P.p,$.a],encapsulation:2}),Z);function K(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",2),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("hint",n.hints.indexOf(c)>=0?n.hints[n.hints.indexOf(c)]:null)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}var H,X=((H=function(){function e(){V(this,e),this.cabbage=$localize(x||(x=C(["Cabbage"]))),this.potato=$localize(k||(k=C(["Potato"]))),this.tomato=$localize(v||(v=C(["Tomato"]))),this.carrot=$localize(f||(f=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}return F(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||H)},H.\u0275cmp=y.Jb({type:H,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(y.Vb(0,"nui-checkbox-group",0),y.Pc(1,K,2,4,"nui-checkbox",1),y.Ub()),2&e&&(y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables))},directives:[w.a,P.p,$.a],encapsulation:2}),H);function W(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",17),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}function ee(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",18),y.Rc(1),y.Ub()),2&e){var c=o.$implicit;y.vc("value",c),y.Db(1),y.Tc(" ",c," ")}}function oe(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",19),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}function ce(e,o){if(1&e&&(y.Vb(0,"nui-checkbox",20),y.Rc(1),y.Ub()),2&e){var c=o.$implicit,n=y.nc();y.vc("value",c)("checked",n.isChecked(c)),y.Db(1),y.Tc(" ",c," ")}}var ne,te,ie,ae=[{path:"",component:(te=function e(){V(this,e)},te.\u0275fac=function(e){return new(e||te)},te.\u0275cmp=y.Jb({type:te,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&(y.Vb(0,"h2"),y.Rc(1,"Required Modules"),y.Ub(),y.Vb(2,"ul"),y.Vb(3,"li"),y.Vb(4,"code"),y.Rc(5,"NuiCheckboxModule"),y.Ub(),y.Ub(),y.Ub(),y.Vb(6,"h2"),y.Rc(7,"Basic Usage"),y.Ub(),y.Vb(8,"p"),y.Rc(9," The "),y.Vb(10,"code"),y.Rc(11,"<nui-checkbox-group>"),y.Ub(),y.Rc(12," component is used for combining "),y.Vb(13,"code"),y.Rc(14,"<nui-checkbox>"),y.Ub(),y.Rc(15," components into a group. Use the "),y.Vb(16,"code"),y.Rc(17,"name"),y.Ub(),y.Rc(18,' input to set the "name" attribute for the inner '),y.Vb(19,"code"),y.Rc(20,"<nui-checkbox>"),y.Ub(),y.Rc(21," input elements. To get the values of the "),y.Vb(22,"code"),y.Rc(23,"<nui-checkbox>"),y.Ub(),y.Rc(24," child components use the "),y.Vb(25,"code"),y.Rc(26,"values"),y.Ub(),y.Rc(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),y.Vb(28,"code"),y.Rc(29,"(valuesChange)"),y.Ub(),y.Rc(30," output.\n"),y.Ub(),y.Vb(31,"nui-example-wrapper",0),y.Qb(32,"nui-checkbox-group-basic-example"),y.Ub(),y.Vb(33,"h2"),y.Rc(34,"Inline"),y.Ub(),y.Vb(35,"p"),y.Rc(36," Use the "),y.Vb(37,"code"),y.Rc(38,"nui-checkbox-group-inline"),y.Ub(),y.Rc(39," class to display checkbox group inline.\n"),y.Ub(),y.Vb(40,"nui-example-wrapper",1),y.Qb(41,"nui-checkbox-group-inline-example"),y.Ub(),y.Vb(42,"h2"),y.Rc(43,"Part of Form"),y.Ub(),y.Vb(44,"p"),y.Vb(45,"code"),y.Rc(46,"<nui-checkbox-group>"),y.Ub(),y.Rc(47," can be used in reactive forms.\n"),y.Ub(),y.Vb(48,"nui-example-wrapper",2),y.Qb(49,"nui-checkbox-group-in-form-example"),y.Ub(),y.Vb(50,"h2"),y.Rc(51,"Justified"),y.Ub(),y.Vb(52,"p"),y.Rc(53," To justify "),y.Vb(54,"code"),y.Rc(55,"<nui-checkbox>"),y.Ub(),y.Rc(56," to the width of "),y.Vb(57,"code"),y.Rc(58,"<nui-checkbox-group>"),y.Ub(),y.Rc(59," (or simply parent element, in case "),y.Vb(60,"code"),y.Rc(61,"<nui-checkbox>"),y.Ub(),y.Rc(62," is used not as a part of "),y.Vb(63,"code"),y.Rc(64,"<nui-checkbox-group>"),y.Ub(),y.Rc(65,"), add "),y.Vb(66,"code"),y.Rc(67,"nui-checkbox--justified"),y.Ub(),y.Rc(68," class to the "),y.Vb(69,"code"),y.Rc(70,"<nui-checkbox>"),y.Ub(),y.Rc(71,".\n"),y.Ub(),y.Vb(72,"nui-example-wrapper",3),y.Qb(73,"nui-checkbox-group-justified-example"),y.Ub())},directives:[Q.a,A,_,S,X],encapsulation:2}),te),data:{srlc:{stage:R.Jb.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(ne=function(){function e(o){V(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return F(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}(),ne.\u0275fac=function(e){return new(e||ne)(y.Pb(D.c))},ne.\u0275cmp=y.Jb({type:ne,selectors:[["nui-checkbox-group-visual-test"]],decls:42,vars:28,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","enabledCheckboxGroup"],[3,"value","disabled","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","disabledCheckboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"],[3,"value","checked"]],template:function(e,o){1&e&&(y.Vb(0,"div",0),y.Vb(1,"div",1),y.Vb(2,"div",2),y.Vb(3,"h3"),y.Rc(4,"Basic Checkbox-Group with Hint Text"),y.Ub(),y.Vb(5,"nui-checkbox-group",3),y.Pc(6,W,2,3,"nui-checkbox",4),y.Vb(7,"nui-checkbox",5),y.Rc(8),y.Ub(),y.Ub(),y.Qb(9,"hr"),y.Ub(),y.Vb(10,"div",2),y.Vb(11,"h3"),y.Rc(12,"Inline Checkbox-Group"),y.Ub(),y.Vb(13,"nui-checkbox-group",6),y.Pc(14,ee,2,2,"nui-checkbox",7),y.Ub(),y.Qb(15,"hr"),y.Ub(),y.Qb(16,"div",8),y.Vb(17,"div",2),y.Vb(18,"h3"),y.Rc(19,"Justified Checkbox-Group"),y.Ub(),y.Vb(20,"nui-checkbox-group",9),y.Pc(21,oe,2,3,"nui-checkbox",10),y.Ub(),y.Qb(22,"hr"),y.Ub(),y.Vb(23,"div",2),y.Vb(24,"h3"),y.Rc(25,"Disabled checkboxes within the form"),y.Ub(),y.Vb(26,"form",11),y.Vb(27,"nui-checkbox-group",12),y.Vb(28,"nui-checkbox",13),y.Rc(29),y.Ub(),y.Vb(30,"nui-checkbox",13),y.Rc(31),y.Ub(),y.Vb(32,"nui-checkbox",13),y.Rc(33),y.Ub(),y.Vb(34,"nui-checkbox",13),y.Rc(35),y.Ub(),y.Ub(),y.Ub(),y.Ub(),y.Ub(),y.Vb(36,"div",14),y.Vb(37,"h3"),y.Rc(38,"Disabled checkboxes within the disabled form"),y.Ub(),y.Vb(39,"form",11),y.Vb(40,"nui-checkbox-group",15),y.Pc(41,ce,2,3,"nui-checkbox",16),y.Ub(),y.Ub(),y.Ub(),y.Ub()),2&e&&(y.Db(5),y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables),y.Db(1),y.vc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),y.Db(1),y.Sc(o.disabledOne),y.Db(5),y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables),y.Db(6),y.vc("values",o.selectedVegetables),y.Db(1),y.vc("ngForOf",o.vegetables),y.Db(5),y.vc("formGroup",o.testForm),y.Db(2),y.vc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),y.Db(1),y.Tc(" ",o.vegetables[0],""),y.Db(1),y.vc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),y.Db(1),y.Tc(" ",o.vegetables[1],""),y.Db(1),y.vc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),y.Db(1),y.Tc(" ",o.vegetables[2],""),y.Db(1),y.vc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),y.Db(1),y.Tc(" ",o.vegetables[3],""),y.Db(4),y.vc("formGroup",o.testForm),y.Db(2),y.vc("ngForOf",o.vegetables))},directives:[w.a,P.p,$.a,D.v,D.n,D.h,D.m,D.f],encapsulation:2}),ne),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:J,data:{srlc:{hideIndicator:!0}}}],be=((ie=function e(){V(this,e)}).\u0275fac=function(e){return new(e||ie)},ie.\u0275mod=y.Nb({type:ie}),ie.\u0275inj=y.Mb({providers:[{provide:R.f,useFactory:function(){return T("19SM")}}],imports:[[R.w,R.G,D.j,D.s,R.v,G.f.forChild(ae)],G.f]}),ie)},dmI9:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},fuQ5:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},j3x3:function(e,o,c){"use strict";c.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="enabledCheckboxGroup">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <h3>Disabled checkboxes within the disabled form</h3>\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="disabledCheckboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},lGTv:function(e,o,c){"use strict";c.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'}}])}();