import{b as c}from"./chunk-NMGECF46.js";import{a as d}from"./chunk-FEEMFRND.js";import{g as h}from"./chunk-7HICAA52.js";import{Aa as m,Ib as p,Ob as i,Pb as t,Qb as l,ob as o,qc as e,rc as s}from"./chunk-7UJBXEVU.js";var v=(()=>{class n{getRepeatPropKey(a){return a}static{this.\u0275fac=function(r){return new(r||n)}}static{this.\u0275cmp=m({type:n,selectors:[["nui-virtual-viewport-manager-docs"]],decls:63,vars:2,consts:[["href","../interfaces/IVirtualPageConfig.html","target","_blank"],["href","../interfaces/IVirtualViewportResetOptions.html","target","_blank"],["type","warning",3,"allowDismiss"],["filenamePrefix","repeat-with-viewport-manager","exampleTitle","Repeat with ViewportManager and Search"]],template:function(r,x){r&1&&(i(0,"p")(1,"code"),e(2,"VirtualViewportManager"),t(),e(3," provides a mechanism for sequencing the rendered range stream emitted from the "),i(4,"code"),e(5,"CDK Viewport"),t(),e(6,` into distinct page ranges.
`),t(),i(7,"h2"),e(8,"Basic Usage"),t(),i(9,"p"),e(10,"To use "),i(11,"code"),e(12,"VirtualViewportManager"),t(),e(13," do the following:"),t(),i(14,"ol")(15,"li"),e(16," Add "),i(17,"code"),e(18,"VirtualViewportManager"),t(),e(19," to the providers of your parent component. "),t(),i(20,"li"),e(21," Register the filtering components on the dataSource via "),i(22,"code"),e(23,"this.dataSource.registerFilter()"),t(),e(24,". "),t(),i(25,"li"),e(26," Set up the "),i(27,"code"),e(28,"VirtualViewportManager"),t(),e(29," listener in the "),i(30,"code"),e(31,"AfterViewInit"),t(),e(32," lifecycle hook. Invoke viewport.observeNextPage$() with "),i(33,"a",0),e(34,"IVirtualPageConfig"),t(),e(35," to start observing/responding to next page events. "),t(),i(36,"li"),e(37," Reset the viewport on search events by invoking viewport.reset() with "),i(38,"a",1),e(39,"IVirtualViewportResetOptions"),t(),e(40,". "),t()(),i(41,"h2"),e(42,"Repeat with VirtualViewportManager and Search Example"),t(),i(43,"p")(44,"code"),e(45,"nui-repeat"),t(),e(46," allows you to manage the virtual viewport by exposing its "),i(47,"code"),e(48),t(),e(49," property. In comparison to the non-filtered virtual/infinite scroll usage, if the user filters the results in some way, say with a search box, we need to reset progress on our "),i(50,"code"),e(51,"VirtualViewportManager"),t(),e(52,". In the following example, when the data is refreshed with the filtered results, the viewport manager's progress is reset in the "),i(53,"code"),e(54,"doSearch"),t(),e(55," method. "),l(56,"br"),i(57,"nui-message",2)(58,"strong"),e(59,"Important: "),t(),e(60," For virtual scroll to function correctly, the nui-repeat element must have a defined height. See the template file in the example source expander below for how to do this. "),t()(),i(61,"nui-example-wrapper",3),l(62,"nui-repeat-with-viewport-manager-example"),t()),r&2&&(o(48),s(x.getRepeatPropKey("viewportRef")),o(9),p("allowDismiss",!1))},dependencies:[h,d,c],encapsulation:2})}}return n})();export{v as a};
