import{a as z}from"./chunk-KE43ZPXC.js";import{a as E}from"./chunk-P4ZJC4VO.js";import{a as S}from"./chunk-VSBQTVY2.js";import{a as s}from"./chunk-VKYWWAMO.js";import{a as p}from"./chunk-WO2AN4JT.js";import{a as h}from"./chunk-LGFQV5NV.js";import{a as c}from"./chunk-GA7EIBYE.js";import{a as x}from"./chunk-6L4XBQEX.js";import{a as w}from"./chunk-FR46SLB3.js";import{a as u}from"./chunk-QQL5MW5N.js";import{a as f}from"./chunk-QBRNZMHO.js";import{a as m}from"./chunk-F4IOFFDB.js";import{a as d}from"./chunk-QJBAWTAM.js";import{g as r}from"./chunk-7HICAA52.js";import{Aa as l,Ob as i,Pb as e,Qb as n,qc as t}from"./chunk-7UJBXEVU.js";var V=(()=>{class a{static{this.\u0275fac=function(o){return new(o||a)}}static{this.\u0275cmp=l({type:a,selectors:[["nui-wizard-v2-example"]],decls:145,vars:0,consts:[["href","../components/WizardStepComponent.html","target","_blank"],["filenamePrefix","wizard-horizontal","exampleTitle","Horizontal Layout Wizard"],["filenamePrefix","wizard-with-confirmation-dialog-on-cancel","exampleTitle","Wizard with confirmation dialog on cancel"],["filenamePrefix","wizard-dialog","exampleTitle","wizard in dialog"],["filenamePrefix","wizard-busy","exampleTitle","wizard step busy"],["filenamePrefix","wizard-dynamic","exampleTitle","wizard add dynamic step"],["filenamePrefix","wizard-remove-step","exampleTitle","wizard remove step"],["filenamePrefix","wizard-async-form-validation","exampleTitle","Async Form Validation"],["filenamePrefix","wizard-with-custom-icons","exampleTitle","Wizard with custom icons"],["filenamePrefix","wizard-custom-footer","exampleTitle","Wizard with Custom Footer"],["filenamePrefix","wizard-restore-state","exampleTitle","Restore Wizard State"],["filenamePrefix","wizard-step-change","exampleTitle","Wizard Step Change"],["filenamePrefix","wizard-responsive-header","exampleTitle","Wizard Header Responsiveness"],["filenamePrefix","wizard-tooltip","exampleTitle","Wizard Tooltip"]],template:function(o,g){o&1&&(i(0,"h2"),t(1,"Layout"),e(),i(2,"h3"),t(3,"Horizontal Layout Wizard"),e(),i(4,"p"),t(5," To use the horizontal wizard component, place a "),i(6,"code"),t(7,"nui-wizard-horizontal"),e(),t(8," element in your template and include one or more "),i(9,"code")(10,"a",0),t(11,"nui-wizard-step-v2"),e()(),t(12," elements as children of the "),i(13,"code"),t(14,"nui-wizard-horizontal"),e(),t(15,` element.
`),e(),i(16,"nui-example-wrapper",1),n(17,"nui-wizard-horizontal-example"),e(),i(18,"h3"),t(19,"Wizard with confirmation dialog"),e(),i(20,"p"),t(21," It may be a good idea to ask a user whether they really want to quit a wizard, e.g.if they decide to hit `Cancel` while some of the wizard step fields are already filled in. This example reflects this use case and shows how one can add a confirmation dialog to make a user decide whether they really want to quit or stay where they are and continue.\n"),e(),i(22,"nui-example-wrapper",2),n(23,"nui-wizard-with-confirmation-dialog-on-cancel-example"),e(),i(24,"h3"),t(25,"Usage with a dialog"),e(),i(26,"p"),t(27,` You can pass an existing wizard component as content of the dialog window. You should insert wizard component in dialog body.
`),e(),i(28,"nui-example-wrapper",3),n(29,"nui-wizard-v2-dialog-example"),e(),i(30,"h3"),t(31,"Busy step"),e(),i(32,"p"),t(33,"You can make your step busy to forbid actions."),e(),i(34,"nui-example-wrapper",4),n(35,"nui-wizard-v2-busy-example"),e(),i(36,"h3"),t(37,"Adding step dynamically"),e(),i(38,"p"),t(39,` You are able to add wizard steps dynamically. The dynamic step can be enabled/disabled programmatically by clicking the "Enable/Disable step w/button" under the wizard.
`),e(),i(40,"nui-example-wrapper",5),n(41,"nui-wizard-dynamic-example"),e(),i(42,"h3"),t(43,"Removing step"),e(),i(44,"p"),t(45,"You are able to remove steps by index."),e(),i(46,"nui-example-wrapper",6),n(47,"nui-wizard-remove-step-example"),e(),i(48,"h3"),t(49,"Async Form Validation"),e(),i(50,"p"),t(51,` To handle async validation check 'PENDING' status of WizardV2Step stepControl
`),e(),i(52,"nui-example-wrapper",7),n(53,"nui-wizard-async-form-validation-example"),e(),i(54,"h3"),t(55,"Wizard with custom step state icons"),e(),i(56,"p"),t(57," The wizard step can be in four different states: "),i(58,"code"),t(59,"initial"),e(),t(60,", "),i(61,"code"),t(62,"selected"),e(),t(63,", "),i(64,"code"),t(65,"completed"),e(),t(66,", and "),i(67,"code"),t(68,"error"),e(),t(69,`. For each of these steps there is a corresponding icon in the header for a certain step, which dynamically changes along with the step state change. It is possible to override the default set of step state icons and their colors, and there are two ways of doing that.
`),e(),i(70,"ol")(71,"li"),t(72,"Global"),e(),i(73,"li"),t(74,"Step Specific"),e()(),i(75,"p")(76,"u"),t(77,"Global"),e()(),i(78,"p"),t(79," Nova provides you with the "),i(80,"code"),t(81,"WIZARD_CONFIG"),e(),t(82,` injection token, which allows you to override the default wizard settings in a global context. For instance, set the necessary icons settings with this token on a module level to allow all wizards within a module to receive the same icon configuration.
`),e(),i(83,"p")(84,"u"),t(85,"Step Specific"),e()(),i(86,"p"),t(87," Use the "),i(88,"code"),t(89,"stepIconsConfig"),e(),t(90," input of the "),i(91,"code"),t(92,"nui-wizard-step-v2"),e(),t(93,` component to pass the step icons config specifically to this step. It will override the global settings for this particular step.
`),e(),i(94,"nui-example-wrapper",8),n(95,"nui-wizard-with-custom-icons-example"),e(),i(96,"h3"),t(97,"Custom footer"),e(),i(98,"p"),t(99,` Customizing the footer layout content and style for each step is quite easy, as you can see in the example below:
`),e(),i(100,"nui-example-wrapper",9),n(101,"nui-wizard-custom-footer-example"),e(),i(102,"h3"),t(103,"Restore Wizard State"),e(),i(104,"p"),t(105,` To restore the wizard state you need to pass previous wizard steps as input. See the example below. You can press the "Reset step" button on the last step in the wizard. After that close the dialog and open the wizard again. You will see that all steps except the last are restored.
`),e(),i(106,"nui-example-wrapper",10),n(107,"nui-wizard-restore-state-example"),e(),i(108,"h3"),t(109,"Wizard Step Change Event Example"),e(),i(110,"p"),t(111,"You are able to subscribe when the selected step has changed."),e(),i(112,"nui-example-wrapper",11),n(113,"nui-wizard-step-change-example"),e(),i(114,"h3"),t(115,"Responsive Header"),e(),i(116,"p"),t(117,` This example shows how Wizard V2 handles the multiple steps. When there are a lot of steps in the wizard the step header can overflow the headers container. If this happens, Wizard V2 switches to the responsive mode and put the overflown items into overflow components, which indicate how many items are there hidden. You can try navigating through the items and resizing the browser window to see how this responsive behavior works.
`),e(),i(118,"nui-example-wrapper",12),n(119,"nui-wizard-responsive-header-example"),e(),i(120,"h3"),t(121,"Wizard Tooltip"),e(),i(122,"p"),t(123,` We always show tooltip for string label. If you use custom template for label or don't want to see tooltip you could define it inside content projection.
`),e(),i(124,"nui-example-wrapper",13),n(125,"nui-wizard-tooltip-example"),e(),i(126,"h2"),t(127,"Keyboard interaction"),e(),i(128,"ul")(129,"li")(130,"code"),t(131,"TAB/SHIFT+TAB"),e(),t(132," for focusing on the next/previous tabbable element "),e(),i(133,"li")(134,"code"),t(135,"LEFT_ARROW/RIGHT_ARROW"),e(),t(136," for navigation on the previous/next step header "),e(),i(137,"li")(138,"code"),t(139,"HOME/END"),e(),t(140," for focusing on the first/last step header"),e(),i(141,"li")(142,"code"),t(143,"ENTER, SPACE"),e(),t(144," to select the step"),e()())},dependencies:[r,m,d,s,p,h,c,x,w,u,f,z,E,S],encapsulation:2})}}return a})();export{V as a};
