import{a as S}from"./chunk-ZS5QG5HR.js";import{a as x}from"./chunk-YGVTJFKE.js";import{a as u}from"./chunk-2ZUUWMDZ.js";import{b as h}from"./chunk-5QK4DVEK.js";import{a as f}from"./chunk-FX44M5BJ.js";import{a as s}from"./chunk-FEEMFRND.js";import{c as d,g as p}from"./chunk-7HICAA52.js";import{Aa as r,Ib as m,Ob as t,Pb as i,Qb as n,ob as o,qc as e,uc as c}from"./chunk-7UJBXEVU.js";var A=(()=>{class a{constructor(){this.subclassCode=`
@Injectable()
export class MyNewClass extends ClientSideDataSource<ExampleItem> {
    constructor(@Inject(SearchService) searchService: SearchService) {
        super(searchService);
    }
}`}static{this.\u0275fac=function(l){return new(l||a)}}static{this.\u0275cmp=r({type:a,selectors:[["nui-client-side-data-source-docs"]],decls:91,vars:5,consts:[["target","_blank","href","https://cp.solarwinds.com/display/NU/Filtered+view+communication+mechanism"],["type","critical"],["title","Ahead of Time"],["language","typescript",3,"code"],["filenamePrefix","client-side-basic","exampleTitle","Basic Client Side"],["href","https://angular.io/guide/dependency-injection-providers#alternative-class-providers"],["filenamePrefix","client-side-custom-search","exampleTitle","Client-Side Custom Search"],["filenamePrefix","client-side-delayed","exampleTitle","Client Side Delayed"],["filenamePrefix","client-side-filtering","exampleTitle","Manually Composed Filtering Layout"],["href","../injectables/ListService.html","target","_blank"],["filenamePrefix","client-side-with-selection","exampleTitle","Client-Side Filtering With Selection"]],template:function(l,g){l&1&&(t(0,"h2"),e(1,"Client Side Data Source"),i(),t(2,"p"),e(3," The main responsibility of a data source is to process one or more filters (e.g. pagination, sorting, search, etc.) from any filtering components before exposing the data to a presentation layer. The "),t(4,"code"),e(5,"ClientSideDataSource"),i(),e(6,` aims to allow filtering components to be independent from the main presentation component by allowing each of them to communicate to the service how they each individually want to filter the data. The presentation component can then ask for the pre-filtered data via the service.
`),i(),t(7,"span"),e(8,"Filtering components can be registered with the service in the following manner:"),i(),t(9,"ul")(10,"li"),e(11," use "),t(12,"code"),e(13),i(),e(14," to set components that will be part of filtering process "),i(),t(15,"li"),e(16," implement "),t(17,"code"),e(18,"getFilteredData"),i(),e(19," in your own service or use existing from "),t(20,"code"),e(21,"ClientSideDataSource"),i()(),t(22,"li"),e(23,"use it by subscribing to output and applying newly received data"),i()(),t(24,"p"),e(25," Visualization of data flow is available "),t(26,"a",0),e(27,"here"),i(),e(28,`.
`),i(),t(29,"nui-message",1)(30,"strong"),e(31,"Warning:"),i(),e(32," If you are planning on using "),t(33,"abbr",2),e(34,"AoT"),i(),e(35," compilation, avoid "),t(36,"b"),e(37,"directly"),i(),e(38," providing "),t(39,"code"),e(40,"ClientSideDataSource"),i(),e(41,". The search service inside "),t(42,"code"),e(43,"ClientSideDataSource"),i(),e(44," will not be populated under AoT compilation (JIT compilation will work normally). A simple work around is to create a simple class, have it inherit/extend "),t(45,"code"),e(46,"ClientSideDataSource"),i(),e(47,", and then provide that."),n(48,"br"),t(49,"p"),n(50,"nui-example-code",3),i()(),t(51,"nui-example-wrapper",4),n(52,"nui-client-side-basic-data-source-example"),i(),t(53,"h2"),e(54,"Custom Search"),i(),t(55,"p"),e(56," If needed to fully or partially override logic of "),t(57,"code"),e(58,"SearchService"),i(),e(59,", you can easily provide a new class extended from "),t(60,"code"),e(61,"SearchService"),i(),e(62," using Angular DI on the Component level using "),t(63,"a",5),e(64,"Alternative class provider"),i(),e(65,`.
`),i(),t(66,"p"),e(67,"This example shows how to do case-sensitive search."),i(),t(68,"nui-example-wrapper",6),n(69,"nui-client-side-custom-search-example"),i(),t(70,"h2"),e(71,"Delayed Search"),i(),t(72,"p"),e(73,"The rxjs pipe function can be used to introduce a delay or debounce."),i(),t(74,"nui-example-wrapper",7),n(75,"nui-client-side-delayed-data-source-example"),i(),t(76,"h2"),e(77,"Filtering"),i(),t(78,"p"),e(79,` Here we're combining several components to implement filter panel. For more information please see inline comments.
`),i(),t(80,"nui-example-wrapper",8),n(81,"nui-client-side-filtering-data-source-example"),i(),t(82,"h2"),e(83,"Selection"),i(),t(84,"p")(85,"code")(86,"a",9),e(87,"ListService"),i()(),e(88,` helps with selection handling, both for the repeat and the selector.
`),i(),t(89,"nui-example-wrapper",10),n(90,"nui-client-side-with-selection-example"),i()),l&2&&(o(13),c(" this.dataSourceService.componentTree = ","{"," search: ","{","...","}"," ","}","; "),o(37),m("code",g.subclassCode))},dependencies:[p,d,s,u,S,f,h,x],encapsulation:2})}}return a})();export{A as a};
