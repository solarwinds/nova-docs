import{a as o}from"./chunk-4L72GWWF.js";import{a as c}from"./chunk-IHUUHWP5.js";import{a as s}from"./chunk-QTTHQQBH.js";import{a as p}from"./chunk-DPN7J5IL.js";import{a as h}from"./chunk-7Y43G26R.js";import{a as d}from"./chunk-BXWUM4C2.js";import{g as m}from"./chunk-7HICAA52.js";import{Aa as r,Ob as t,Pb as n,Qb as i,qc as e}from"./chunk-7UJBXEVU.js";var b=(()=>{class a{static{this.\u0275fac=function(l){return new(l||a)}}static{this.\u0275cmp=r({type:a,selectors:[["nui-search-docs-example"]],decls:90,vars:0,consts:[["filenamePrefix","search-basic","exampleTitle","Basic Usage"],["filenamePrefix","search-placeholder","exampleTitle","Placeholder"],["filenamePrefix","search-invalid-state","exampleTitle","Invalid state"],["filenamePrefix","search-input-change","exampleTitle","Initial Value and Input Change"],["filenamePrefix","search-focus-change","exampleTitle","Capture Focus and Focus Change"],["filenamePrefix","search-on-search-cancel","exampleTitle","On Search and On Cancel"]],template:function(l,x){l&1&&(t(0,"h2"),e(1,"Required Modules"),n(),t(2,"ul")(3,"li")(4,"code"),e(5,"NuiSearchModule"),n()()(),t(6,"h1"),e(7,"Basic Usage"),n(),t(8,"p"),e(9," To use the search component add an "),t(10,"code"),e(11,"<nui-search>"),n(),e(12," to your template."),i(13,"br"),t(14,"b"),e(15,"Note:"),n(),t(16,"code"),e(17,"<nui-search>"),n(),e(18,` min-width is 180px and max-width is 400px.
`),n(),t(19,"nui-example-wrapper",0),i(20,"nui-search-basic-example"),n(),t(21,"h1"),e(22,"Placeholder"),n(),t(23,"p"),e(24," To set the placeholder (string that will be placed as a watermark inside of the search when it's empty) for the "),t(25,"code"),e(26,"<nui-search>"),n(),e(27," use the "),t(28,"code"),e(29,"placeholder"),n(),e(30,` input.
`),n(),t(31,"nui-example-wrapper",1),i(32,"nui-search-placeholder-example"),n(),t(33,"h1"),e(34,"Invalid State"),n(),t(35,"p"),e(36,` To manually set the search component to an invalid value state, pass true to the isInErrorState input. Note that this input is only about styling.
`),n(),t(37,"nui-example-wrapper",2),i(38,"nui-search-error-state-example"),n(),t(39,"h1"),e(40,"Initial Value and Input Change"),n(),t(41,"p"),e(42," To subscribe to value change in "),t(43,"code"),e(44,"<nui-search>"),n(),e(45," you can use the "),t(46,"code"),e(47,"(inputChanged)"),n(),e(48," output which emits "),t(49,"code"),e(50,"string"),n(),e(51," when input field value is changed. Optionally, you can set an initial value via the "),t(52,"code"),e(53,"value"),n(),e(54,` input.
`),n(),t(55,"nui-example-wrapper",3),i(56,"nui-search-input-change-example"),n(),t(57,"h1"),e(58,"Capture Focus and Focus Change"),n(),t(59,"p"),e(60," There is a possibility to focus search programmatically. To focus the search pass true to the "),t(61,"code"),e(62,"captureFocus"),n(),e(63," input. Also there is a "),t(64,"code"),e(65,"(focusChange)"),n(),e(66," output that is fired on external focus changes (e.g. initiated by user via UI). Use it if you bind an external input to "),t(67,"code"),e(68,"captureFocus"),n(),e(69,` input for matching them both.
`),n(),t(70,"nui-example-wrapper",4),i(71,"nui-search-focus-change-example"),n(),t(72,"h1"),e(73,"On Search and On Cancel"),n(),t(74,"p"),e(75," There are two outputs "),t(76,"code"),e(77,"(search)"),n(),e(78," and "),t(79,"code"),e(80,"(cancel)"),n(),e(81,". "),t(82,"code"),e(83,"(cancel)"),n(),e(84," event is fired on each 'cancel' button click, clears the value and emits it. "),t(85,"code"),e(86,"(search)"),n(),e(87,` event is fired when 'search' button is clicked or on Enter keypress and emits value of the search.
`),n(),t(88,"nui-example-wrapper",5),i(89,"nui-search-on-search-cancel"),n())},dependencies:[m,o,c,s,p,h,d],encapsulation:2})}}return a})();export{b as a};
