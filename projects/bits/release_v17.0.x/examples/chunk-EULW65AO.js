import{a as x}from"./chunk-5QORAY57.js";import{a as u}from"./chunk-KHYE62XP.js";import{a as f}from"./chunk-2O6OGQ6C.js";import{d as g}from"./chunk-CS3TUESQ.js";import{a as S}from"./chunk-Q3IGHIKW.js";import{b as E}from"./chunk-XW5VWMO5.js";import{a as p}from"./chunk-2SOMYRYO.js";import{a as c}from"./chunk-G3FEAQDY.js";import{a as h}from"./chunk-QDJ6BSS3.js";import{c as s,g as d}from"./chunk-7HICAA52.js";import{Aa as l,Ib as m,Ob as t,Pb as i,Qb as n,ob as r,qc as e}from"./chunk-7UJBXEVU.js";var N=(()=>{class a{constructor(){this.initialSetupCode=`
// our module where we want to use tree features
import { CdkTreeModule } from "@angular/cdk/tree";

@NgModule({
    imports: [
        CdkTreeModule,
        // other modules that we might need
    ],
    declarations: [ /* our module declaration */],
    exports:      [ /* our exports */ ],
})
export class MyModule {}`.replace(`\r
`,"<br/>")}static{this.\u0275fac=function(o){return new(o||a)}}static{this.\u0275cmp=l({type:a,selectors:[["nui-tree-docs-example"]],decls:134,vars:1,consts:[["language","typescript",3,"code"],["href","https://material.angular.io/cdk/tree/overview","target","_blank"],["filenamePrefix","basic","exampleTitle","Basic Usage"],["filenamePrefix","styling","exampleTitle","Styling"],["filenamePrefix","lazy","exampleTitle","Lazy loading"],["href","https://github.com/angular/components/blob/master/src/cdk/collections/selection-model.ts"],["filenamePrefix","checkbox","exampleTitle","Checkbox"],["filenamePrefix","checkbox-lazy","exampleTitle","Checkbox with Lazy Loading"],["filenamePrefix","leaf-pagination","exampleTitle","Pagination on the leaf nodes"],["filenamePrefix","with-additional-content","exampleTitle","Tree With Additional Content"],["filenamePrefix","load-more","exampleTitle","Tree Load More Nodes"],["href","../injectables/DataSourceService.html","target","_blank"],["filenamePrefix","show-all-dialog","exampleTitle","Tree With show all in dialog"]],template:function(o,w){o&1&&(t(0,"p"),e(1,` The Angular CDK Tree module provides a way to easily and declaratively create Tree interfaces.
`),i(),t(2,"p"),e(3," To get started, import "),t(4,"code"),e(5,"CdkTreeModule"),i(),e(6," into the NgModule where you want to use "),t(7,"code"),e(8,"cdk-tree"),i(),e(9,` features:
`),i(),n(10,"nui-example-code",0),t(11,"p"),e(12," For more details on the implementation of the @angular/cdk/tree, check the documentation "),t(13,"a",1),e(14,"here"),i()(),t(15,"h2"),e(16,"Required Modules"),i(),t(17,"ul")(18,"li"),e(19,"Angular CDK's "),t(20,"code"),e(21,"CdkTreeModule"),i()()(),t(22,"h2"),e(23,"Basic Usage"),i(),t(24,"p"),e(25," This example shows how easy it is to create a "),t(26,"code"),e(27,"cdk-tree"),i(),e(28," element. Our examples are using "),t(29,"code"),e(30,"nui-expander"),i(),e(31," css styles which we recommend to use. To add "),t(32,"code"),e(33,"nui-expander"),i(),e(34," styles, add "),t(35,"code"),e(36,".expander()"),i(),e(37," mixin to the component styles. In the result, appropriate css classes are generated which are used in the examples. For example "),t(38,"code"),e(39,".nui-tree__body"),i(),e(40," applies dotted line to the body of branch, or "),t(41,"code"),e(42,".nui-tree_header"),i(),e(43," applies "),t(44,"code"),e(45,"cursor: pointer"),i(),e(46,`. Look into examples to find more css classes or extend existing css rules to achieve your goal.
`),i(),t(47,"nui-example-wrapper",2),n(48,"nui-tree-basic-example"),i(),t(49,"h2"),e(50,"Tree Styling"),i(),t(51,"p"),e(52," To apply unique styles for the particular node, provide icon/css class/etc. to this node in the "),t(53,"code"),e(54,"dataSource"),i(),e(55,`, and use it as usually in the template of component. Check the source code below:
`),i(),t(56,"nui-example-wrapper",3),n(57,"nui-tree-styling-example"),i(),t(58,"h2"),e(59,"Tree Lazy-loading"),i(),t(60,"p"),e(61," To implement lazy-loading on "),t(62,"code"),e(63,"CdkTree"),i(),e(64," component branches, use "),t(65,"code"),e(66,"renderNodeChanges"),i(),e(67," method, in order to synchronize data-source with DOM representation after an asynchronous operation has finished. Pay attention to the "),t(68,"code"),e(69,"isLoading"),i(),e(70,` flag into yours node objects while implementing lazy-loading.
`),i(),t(71,"nui-example-wrapper",4),n(72,"nui-tree-lazy-example"),i(),t(73,"h2"),e(74,"Tree with checkboxes"),i(),t(75,"p"),e(76," For handling state of checkboxes "),t(77,"a",5),e(78,"SelectionModel"),i(),e(79," is used. You can easily grab all the selected items using "),t(80,"code"),e(81,"SelectionModel.selected"),i(),e(82," or subscribe to the changes using "),t(83,"code"),e(84,"SelectionModel.changed"),i(),e(85,`. Check one of the checkboxes to see it in action. This example also shows how to implement "indeterminate" state of checkbox for branches.
`),i(),t(86,"nui-example-wrapper",6),n(87,"nui-tree-checkbox-example"),i(),t(88,"h2"),e(89,"Tree with Checkboxes and Lazy Loading"),i(),t(90,"p"),e(91,` In case some selectable options are to be lazy loaded, it is possible to load additional selectable options asynchronously, while still be able to track the selection properly. In the following example there are several places where some additional options are being loaded on demand. Once triggered, if the parent selectable node is selected, all the lazy-loaded selectables will get selected once they're loaded.
`),i(),t(92,"nui-example-wrapper",7),n(93,"nui-tree-checkbox-lazy"),i(),t(94,"h2"),e(95,"Tree with Pagination on Leaf nodes"),i(),t(96,"p"),e(97,` If you have many items on leaf nodes, you might be interested in loading the data by parts. You can use pagination as one of the options for such a purpose.
`),i(),t(98,"p"),e(99,` The example below shows how to do that. In terms of this example, it's assumed that an API can return a necessary set of data for the node by it's identificator. When you expand the node, it will load the first page and then will display a paginator. At this point, on the first data fetch, an API should return a total amount of items to pass it to the paginator.
`),i(),t(100,"p"),e(101," It's also recommended to use "),t(102,"code"),e(103,"nui-paginator"),i(),e(104,` for handling the pagination.
`),i(),t(105,"nui-example-wrapper",8),n(106,"nui-tree-leaf-pagination-example"),i(),t(107,"h2"),e(108,"Tree With Additional Elements"),i(),t(109,"p"),e(110,` To customize tree nodes, add any template. Below you see several typical cases with adding additional templates (menu, tag) into the tree.
`),i(),t(111,"nui-example-wrapper",9),n(112,"nui-tree-with-additional-content-example"),i(),t(113,"h2"),e(114,"Tree Load More Nodes"),i(),t(115,"p"),e(116,'The example below shows how to load data in portions using "Load More"'),i(),t(117,"nui-example-wrapper",10),n(118,"nui-tree-load-more-example"),i(),t(119,"h2"),e(120,"Tree With show all in dialog"),i(),t(121,"p"),e(122," It's possible the case when there're too many items on the leaf node. In this case, it's also possible to display all the items on the separate screen. For example, inside the "),t(123,"code"),e(124,"nui-dialog"),i(),e(125,`.
`),i(),t(126,"p"),e(127," Current example uses Nova test BE service to get the data. It can send the data by some portions for a certain criteria. In this current example, there're 3 nodes that fetch the data per location, the service is implementing Nova "),t(128,"code")(129,"a",11),e(130,"DataSourceService"),i()(),e(131,`.
`),i(),t(132,"nui-example-wrapper",12),n(133,"nui-tree-show-all-dialog-example"),i()),o&2&&(r(10),m("code",w.initialSetupCode))},dependencies:[d,s,p,c,h,x,u,f,g,S,E],encapsulation:2})}}return a})();export{N as a};
