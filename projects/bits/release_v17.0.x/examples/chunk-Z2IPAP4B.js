import{a as C}from"./chunk-5EGXOSDN.js";import{a as b}from"./chunk-54FZFJPJ.js";import{a as T}from"./chunk-YWUUVED6.js";import{a as h}from"./chunk-TH3ONNGK.js";import{a as S}from"./chunk-W3UKO3X6.js";import{a as E}from"./chunk-QVEGJHGF.js";import{a as f}from"./chunk-ZQ75Y7NM.js";import{a as v}from"./chunk-CM5FN76R.js";import{a as g}from"./chunk-QPZTZXGZ.js";import{a as y}from"./chunk-WTPCDJKA.js";import{a as w}from"./chunk-QP7LQ57T.js";import{a as p}from"./chunk-KAZBBB3F.js";import{a as c}from"./chunk-6GSF5HV4.js";import{a as x}from"./chunk-RAHQODB6.js";import{a as u}from"./chunk-GJFO74EO.js";import{a as s}from"./chunk-LE7PH44S.js";import{g as d}from"./chunk-BCBJTPRO.js";import{Qb as o,Wb as i,Xb as t,Yb as n,nb as l,yc as e,zb as r}from"./chunk-MC3BMXIX.js";var H=(()=>{class a{static{this.\u0275fac=function(m){return new(m||a)}}static{this.\u0275cmp=r({type:a,selectors:[["nui-select-v2-docs-example"]],standalone:!1,decls:430,vars:8,consts:[["href","../components/ComboboxV2Component.html","target","_blank"],["filenamePrefix","select-v2-basic","exampleTitle","Basic Usage"],["filenamePrefix","select-v2-getting-value","exampleTitle","Getting value"],["href","https://angular.io/guide/reactive-forms#replacing-a-form-control-value","target","_blank"],["filenamePrefix","select-v2-setting-value","exampleTitle","Setting value"],["type","info",3,"allowDismiss"],["filenamePrefix","select-v2-customize-options","exampleTitle","Customize Options"],["filenamePrefix","select-v2-custom-content","exampleTitle","Custom Content"],["filenamePrefix","select-v2-grouped-items","exampleTitle","Grouped Options"],["href","../components/FormFieldComponent.html","target","_blank"],["filenamePrefix","select-v2-reactive-form-field","exampleTitle","Reactive form field"],["href","https://material.angular.io/cdk/scrolling/overview#virtual-scrolling","target","_blank"],["href","https://material.angular.io/cdk/scrolling/api"],["type","warning",3,"allowDismiss"],["filenamePrefix","select-v2-virtual-scroll","exampleTitle","Virtual Scroll"],["filenamePrefix","select-v2-disabled","exampleTitle","Disabled Mode"],["filenamePrefix","select-v2-error","exampleTitle","Error state"],["filenamePrefix","select-v2-styling","exampleTitle","Styling"],["filenamePrefix","select-v2-inline","exampleTitle","Inline"],["href","https://material.angular.io/cdk/overlay/api#OverlayConfig"],["filenamePrefix","select-v2-overlay-config","exampleTitle","Overlay configuration"],["filenamePrefix","select-v2-custom-control","exampleTitle","Custom Control"],["filenamePrefix","select-v2-color-picker","exampleTitle","Color Picker"]],template:function(m,V){m&1&&(i(0,"p"),e(1," The "),i(2,"code"),e(3,"<nui-select-v2>"),t(),e(4,` component allows users to select item(s) from a list.
`),t(),i(5,"p"),e(6," Select component is a perfect fit for simple cases or if your options list is small enough. Otherwise consider using "),i(7,"code")(8,"a",0),e(9,"Combobox Component"),t()(),e(10,`.
`),t(),i(11,"p"),e(12,` However, it's recommended to use Select component in case you need input customization.
`),t(),i(13,"h2"),e(14,"Required Modules"),t(),i(15,"ul")(16,"li")(17,"code"),e(18,"NuiSelectV2Module"),t()()(),i(19,"h2"),e(20,"Basic Usage"),t(),i(21,"p"),e(22," To use "),i(23,"code"),e(24,"<nui-select-v2>"),t(),e(25," wrap each option within a "),i(26,"code"),e(27,"<select-v2-option>"),t(),e(28," instance. "),i(29,"code"),e(30,"<select-v2-option>"),t(),e(31," has the "),i(32,"code"),e(33,"value"),t(),e(34," input so that it's "),i(35,"strong"),e(36,"unique"),t(),e(37,` for each option.
`),t(),i(38,"p"),e(39," You can use a "),i(40,"code"),e(41,"string"),t(),e(42," or an "),i(43,"code"),e(44,"object"),t(),e(45," as a "),i(46,"code"),e(47,"value"),t(),e(48,". In some cases, e.g. if using "),i(49,"em"),e(50,"Grouped items"),t(),e(51,", it's recommended to use "),i(52,"code"),e(53,"object"),t(),e(54," and provide some id's, because you can have the same option title in the different groups and it's necessary to distinguish them somehow. Also, using "),i(55,"code"),e(56,"string"),t(),e(57," may cause "),i(58,"code"),e(59,"i18n"),t(),e(60,` issues as far as the same value is used for model and displaying on the view.
`),t(),i(61,"p"),e(62," Wrap all of the options inside a "),i(63,"code"),e(64,"<nui-select-v2>"),t(),e(65,` instance as a content projection for the dropdown.
`),t(),i(66,"p"),e(67," You can put pretty much anything inside a "),i(68,"code"),e(69,"<nui-select-v2>"),t(),e(70," dropdown. For example, if you need the dropdown to display some info text, you can project "),i(71,"em"),e(72,"standard HTML"),t(),e(73," into the dropdown and it will be shown as "),i(74,"em"),e(75,"standard HTML"),t(),e(76,` rather than a select option.
`),t(),i(77,"nui-example-wrapper",1),n(78,"nui-select-v2-basic-example"),t(),i(79,"h2"),e(80,"Getting and setting the select value"),t(),i(81,"h3"),e(82,"Getting a Value"),t(),i(83,"p"),e(84,"You can use the following ways to get a value from a select component:"),t(),i(85,"ul")(86,"li"),e(87,"Access the "),i(88,"code"),e(89,"value"),t(),e(90," property on the component"),t(),i(91,"li"),e(92," Bind to the "),i(93,"code"),e(94,"valueSelected"),t(),e(95," output - emits the selected value "),t()(),i(96,"nui-example-wrapper",2),n(97,"nui-select-v2-getting-value-example"),t(),i(98,"h3"),e(99,"Setting a Value"),t(),i(100,"p"),e(101," To set a value for a select, you can use either the "),i(102,"code"),e(103,"value"),t(),e(104," input or the reactive form control "),i(105,"code")(106,"a",3),e(107,"setValue"),t()(),e(108,` method, to provide an option from the list.
`),t(),i(109,"nui-example-wrapper",4),n(110,"nui-select-v2-setting-value-example"),t(),i(111,"h2"),e(112,"Customize Options"),t(),i(113,"p"),e(114," It's possible to use a custom template for the "),i(115,"code"),e(116,"option"),t(),e(117,"s in the list. You can use pretty much any layout for the options by putting the template inside a "),i(118,"code"),e(119,"<select-v2-option>"),t(),e(120,` instance.
`),t(),i(121,"p"),e(122," Also, it's possible to use custom template instead of default select input. For that "),i(123,"code"),e(124,"[displayValueTemplate]"),t(),e(125,` input is used.
`),t(),i(126,"nui-message",5)(127,"p")(128,"strong"),e(129,"Note:"),t(),e(130," In this example "),i(131,"code"),e(132,"[displayValueContext]"),t(),e(133," property of "),i(134,"code"),e(135,"select-v2-option"),t(),e(136," element is used to pass a context to custom input template. "),t(),e(137," All you put in "),i(138,"code"),e(139,"[displayValueContext]"),t(),e(140," input will be passed to custom template "),i(141,"code"),e(142,"#customTemplate"),t(),e(143,` as a context in the example.
`),t(),i(144,"nui-example-wrapper",6),n(145,"nui-select-v2-customize-options-example"),t(),i(146,"h2"),e(147,"Custom Content and Styling"),t(),i(148,"p"),e(149," You can use custom content for either "),i(150,"code"),e(151,"option"),t(),e(152," or select input or dropdown content. "),n(153,"br"),e(154," To use custom content on select input use "),i(155,"code"),e(156,"[displayValueContext]"),t(),e(157," input which takes "),i(158,"code"),e(159,"templateRef"),t(),e(160," for the desired input. "),n(161,"br"),e(162," Note that you can use "),i(163,"code"),e(164,"[displayValueContext]"),t(),e(165," input on "),i(166,"code"),e(167,"nui-select-v2-option"),t(),e(168," option element to pass a context for custom input."),n(169,"br"),e(170," To use some HTML in the dropdown just pass it as a content projection to "),i(171,"code"),e(172,"nui-select-v2"),t(),e(173,` together with options.
`),t(),i(174,"p"),e(175," For styling the elements you can just apply desired styles to an element you want to change visual representation."),n(176,"br"),e(177," In this example, "),i(178,"code"),e(179,".less"),t(),e(180,` styles are used, you can check styles in the code inspector.
`),t(),i(181,"nui-example-wrapper",7),n(182,"nui-select-v2-custom-content-example"),t(),i(183,"h2"),e(184,"Grouped Options"),t(),i(185,"p"),e(186," If you want to group options you can wrap them in a "),i(187,"code"),e(188,"<nui-select-v2-option-group>"),t(),e(189,` instance. You can also provide a header for a group (optionally).
`),t(),i(190,"p"),e(191," To use default styles for a header (as in the example below), apply "),i(192,"code"),e(193,".nui-select-v2-option-group--header"),t(),e(194,` class to the header.
`),t(),i(195,"nui-message",5)(196,"strong"),e(197,"Note:"),t(),e(198,` Technically you can use any template instead of, or in addition to, the header.
`),t(),i(199,"nui-example-wrapper",8),n(200,"nui-select-v2-grouped-items-example"),t(),i(201,"h2"),e(202,"Using With Reactive Forms"),t(),i(203,"p"),e(204," To use "),i(205,"code"),e(206,"nui-select-v2"),t(),e(207," with reactive forms, create a "),i(208,"code"),e(209,"FormControl"),t(),e(210," that represents the form model. Then, bind "),i(211,"code"),e(212,"nui-select-v2"),t(),e(213,` to this form element.
`),t(),i(214,"nui-message",5)(215,"strong"),e(216,"Note:"),t(),e(217," It's recommended to use the "),i(218,"code")(219,"a",9),e(220,"<nui-form-field>"),t()(),e(221,` component as a wrapper if you are going to use validation, captions, labels, etc.
`),t(),i(222,"nui-example-wrapper",10),n(223,"nui-select-v2-reactive-form-field-example"),t(),i(224,"h2"),e(225,"Virtual Scroll"),t(),i(226,"p"),e(227," The options dropdown can use virtual scroll. For that, wrap the options list in a "),i(228,"code")(229,"a",11),e(230,"cdk-virtual-scroll-viewport"),t()(),e(231,". You can adjust virtual scroll container to your needs according to "),i(232,"a",12),e(233,"Virtual Scroll API"),t(),e(234,`.
`),t(),i(235,"nui-message",13)(236,"p")(237,"strong"),e(238,"Warning:"),t(),e(239," All the items inside a dropdown "),i(240,"strong"),e(241,"must"),t(),e(242," be of the same height! "),t(),e(243," You should set "),i(244,"code"),e(245,"itemSize"),t(),e(246," property of "),i(247,"code"),e(248,"cdk-virtual-scroll-viewport"),t(),e(249," to the "),i(250,"strong"),e(251,"exact"),t(),e(252,` value of an option height. Otherwise, some features may not work.
`),t(),i(253,"nui-example-wrapper",14),n(254,"nui-select-v2-virtual-scroll-example"),t(),i(255,"h2"),e(256,"Disabled Mode"),t(),i(257,"p"),e(258," It is possible to disable either the entire "),i(259,"code"),e(260,"select-v2"),t(),e(261," or one or more "),i(262,"code"),e(263,"select-v2-option"),t(),e(264,"s. To do that, set the "),i(265,"code"),e(266,"isDisabled"),t(),e(267,` input to true on the appropriate component.
`),t(),i(268,"nui-example-wrapper",15),n(269,"nui-select-v2-disabled-example"),t(),i(270,"h2"),e(271,"Error State"),t(),i(272,"p"),e(273," The "),i(274,"code"),e(275,"isInErrorState"),t(),e(276,` input is used to set/change the visual validation state of the component. This can be used in custom situations in which you need to manually indicate that the component is in error state.
`),t(),i(277,"nui-message",13)(278,"strong"),e(279,"Note:"),t(),e(280," If you want to use a select as a form field with validation, consider using the "),i(281,"code")(282,"a",9),e(283,"nui-form-field"),t()(),e(284," component. For information about that, see the "),i(285,"strong"),e(286,"Using With Reactive Forms"),t(),e(287,` section.
`),t(),i(288,"nui-example-wrapper",16),n(289,"nui-select-v2-error-example"),t(),i(290,"h2"),e(291,"Styling"),t(),i(292,"p"),e(293," To style the select's dropdown simply use "),i(294,"code"),e(295,"overlayConfig"),t(),e(296," input and fill in its "),i(297,"code"),e(298,"panelClass"),t(),e(299,` property with the global CSS class with the desired styles.
`),t(),i(300,"nui-example-wrapper",17),n(301,"nui-select-v2-styling-example"),t(),i(302,"h2"),e(303,"Inline Display Mode"),t(),i(304,"p"),e(305," To put a select in inline display mode, add necessary styles to the component. For example, you can add bootstrap "),i(306,"code"),e(307,"d-inline-flex"),t(),e(308,` style.
`),t(),i(309,"nui-example-wrapper",18),n(310,"nui-select-v2-inline-example"),t(),i(311,"h2"),e(312,"Overlay configuration"),t(),i(313,"p"),e(314," To adjust "),i(315,"code"),e(316,"SelectComponent"),t(),e(317,"'s popup overlay properties, such as "),i(318,"code"),e(319,"width"),t(),e(320,", "),i(321,"code"),e(322,"height"),t(),e(323," or other, set the "),i(324,"code"),e(325,"overlayConfig"),t(),e(326," input in accordance with Angular CDK Overlay Config "),i(327,"a",19),e(328,"interface"),t(),n(329,"br"),i(330,"mark"),e(331,"NOTE: in case you need to set the "),i(332,"code"),e(333,"width"),t(),e(334," using the overlay config make sure to disable the automatic width synchronization, which is enabled by default. This can be done by setting the "),i(335,"code"),e(336,"syncWidth"),t(),e(337," input to "),i(338,"code"),e(339,"false"),t()(),i(340,"nui-message",5)(341,"strong"),e(342,"Note:"),t(),e(343," Select-v2 and Combobox-v2 contain default "),i(344,"code"),e(345,"with-popup-styles"),t(),e(346," (you can import it "),i(347,"code"),e(348,"POPUP_STYLES_CLASS"),t(),e(349," from "),i(350,"code"),e(351,"@nova-ui/bits"),t(),e(352,") class which styles the popup according to the Nova Design Language. Setting custom styles through the global classes using the `panelClass` will override the default styles of the overlay. If you want to preserve default overlay styles please consider adding the "),i(353,"code"),e(354,"with-popup-styles"),t(),e(355," class when setting styles using the "),i(356,"code"),e(357,"overlayConfig"),t(),e(358,". Please see the example below. "),t()(),i(359,"nui-example-wrapper",20),n(360,"nui-select-v2-overlay-config-example"),t(),i(361,"h2"),e(362,"Custom Dropdown Control"),t(),i(363,"p"),e(364," The "),i(365,"code"),e(366,"manualDropdownControl"),t(),e(367," input gives you total control over opening and closing the dropdown. When set to "),i(368,"code"),e(369,"true"),t(),e(370,`, the default behavior of the dropdown is blocked, and you can provide your own behavior.
`),t(),i(371,"nui-message",5)(372,"strong"),e(373,"Note:"),t(),e(374," The "),i(375,"code"),e(376,"clickOutsideDropdown"),t(),e(377,` output can be used to close the dropdown manually on clicks outside both the host element and the dropdown.
`),t(),i(378,"nui-message",5)(379,"strong"),e(380,"Note:"),t(),e(381," In order for keyboard navigation work as you open the dropdown you have to manually set focus to the "),i(382,"code"),e(383,"inputElement"),t(),e(384," in case you are triggering the dropdown outside the host element. For that, you can do "),i(385,"code"),e(386,"select.inputElement.nativeElement.focus()"),t()(),i(387,"nui-example-wrapper",21),n(388,"nui-select-v2-custom-control-example"),t(),i(389,"h2"),e(390,"Color Picker"),t(),i(391,"p")(392,"code"),e(393,"nui-select-v2"),t(),e(394," can be customized in a number of ways, including such a popular use case like color picker. The example below is purely based on "),i(395,"code"),e(396,"select-v2"),t(),e(397," and "),i(398,"code"),e(399,"select-v2-option"),t(),e(400,` components, and only requires adding some css. Check the example below.
`),t(),i(401,"nui-example-wrapper",22),n(402,"nui-select-v2-color-picker"),t(),i(403,"h2"),e(404,"Keyboard interaction"),t(),i(405,"p")(406,"code"),e(407,"<nui-select-v2>"),t(),e(408,` comes with built-in accessibility features:
`),t(),i(409,"ul")(410,"li")(411,"code"),e(412,"TAB/Shift+TAB"),t(),e(413," for focusing the component."),t(),i(414,"li")(415,"code"),e(416,"ARROW UP/ARROW DOWN"),t(),e(417," for navigation inside an option list. "),t(),i(418,"li")(419,"code"),e(420,"PAGE UP/PAGE DOWN"),t(),e(421," for navigation inside the list to top/bottom. "),t(),i(422,"li")(423,"code"),e(424,"ENTER"),t(),e(425," to select an option."),t(),i(426,"li")(427,"code"),e(428,"ESC"),t(),e(429," to close the dropdown."),t()()),m&2&&(l(126),o("allowDismiss",!1),l(69),o("allowDismiss",!1),l(19),o("allowDismiss",!1),l(21),o("allowDismiss",!1),l(42),o("allowDismiss",!1),l(63),o("allowDismiss",!1),l(31),o("allowDismiss",!1),l(7),o("allowDismiss",!1))},dependencies:[d,s,p,c,x,u,h,S,E,f,v,g,y,w,C,b,T],styles:["[_nghost-%COMP%]   .select-container[_ngcontent-%COMP%]{margin:0}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]{padding-left:40px}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:disc}"]})}}return a})();export{H as a};
