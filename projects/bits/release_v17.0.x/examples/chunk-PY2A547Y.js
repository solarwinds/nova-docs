import{a as u}from"./chunk-J7AGDAJW.js";import{a as s}from"./chunk-ITWHME4E.js";import{a as p}from"./chunk-63ZNBOYU.js";import{a as d}from"./chunk-7XER4ZSN.js";import{a as c}from"./chunk-KKIJU3H2.js";import{a as h}from"./chunk-FWHRDTNN.js";import{a as r}from"./chunk-D7WWY464.js";import{g as m}from"./chunk-7HICAA52.js";import{Aa as l,Ob as t,Pb as i,Qb as n,qc as e}from"./chunk-7UJBXEVU.js";var A=(()=>{class o{static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=l({type:o,selectors:[["nui-chips-docs-example"]],decls:151,vars:0,consts:[["href","../interfaces/IChipsItemsSource.html#source","target","_blank"],["filenamePrefix","basic-chips","exampleTitle","Basic Usage"],["href","../interfaces/IChipsGroup.html#source","target","_blank"],["filenamePrefix","grouped-chips","exampleTitle","Grouped Data"],["filenamePrefix","vertical-flat-chips","exampleTitle","Vertical Flat Data"],["filenamePrefix","vertical-grouped-chips","exampleTitle","Vertical Grouped Data"],["filenamePrefix","autohide-chips","exampleTitle","Autohide"],["filenamePrefix","chips-overflow","exampleTitle","Overflow"],["href","../additional-documentation/nova-styles/tag.html","target","_blank"],["filenamePrefix","custom-css","exampleTitle","Custom Css"]],template:function(a,f){a&1&&(t(0,"h2"),e(1,"Required Modules"),i(),t(2,"ul")(3,"li")(4,"code"),e(5,"NuiChipsModule"),i()()(),t(6,"h2"),e(7,"Basic Usage"),i(),t(8,"p"),e(9," To implement basic "),t(10,"code"),e(11,"nui-chips"),i(),e(12," you need to pass "),t(13,"code"),e(14,"[itemsSource]"),i(),e(15," property to "),t(16,"code"),e(17,"nui-chips"),i(),e(18,". As it has flat data structure you need to pass your array of items to "),t(19,"code"),e(20,"flatItems"),i(),e(21," key of your itemsSource object because it has "),t(22,"a",0),e(23,"IChipsItemsSource"),i(),e(24," type. Also you need to pass method to "),t(25,"code"),e(26,"(chipRemoved)"),i(),e(27,` output which will handle removing chips and some other functionality if you need it.
`),i(),t(28,"p"),e(29,' Another thing is that by default there is a link which says "Clear All" and by clicking it you can remove all the chips. To make that happen pass method to '),t(30,"code"),e(31,"(removeAll)"),i(),e(32," output and clear your itemsSource.You can modify the link text by setting the "),t(33,"code"),e(34,"[removeAllLinkText]"),i(),e(35," input, or you can turn the feature off by passing false to the "),t(36,"code"),e(37,"[allowRemoveAll]"),i(),e(38,` input.
`),i(),t(39,"nui-example-wrapper",1),n(40,"nui-basic-chips-example"),i(),t(41,"h2"),e(42,"Grouped Data"),i(),t(43,"p"),e(44," Implementing chips with grouped data is similar to implementing basic "),t(45,"code"),e(46,"nui-chips"),i(),e(47," with flat data. You need to pass data as an array of "),t(48,"a",2),e(49,"IChipsGroup"),i(),e(50," and set the "),t(51,"code"),e(52,"(chipRemoved)"),i(),e(53," output and "),t(54,"code"),e(55,"(removeAll)"),i(),e(56,` if you need it.
`),i(),t(57,"nui-example-wrapper",3),n(58,"nui-grouped-chips-example"),i(),t(59,"h2"),e(60,"Vertical Orientation"),i(),t(61,"p"),e(62," Implementing vertical chips is the same as implementing horizontal, you only need to pass additional properties such as "),t(63,"code"),e(64,'orientation="vertical"'),i(),e(65," and "),t(66,"code"),e(67,"[title]"),i(),e(68,`.
`),i(),t(69,"nui-example-wrapper",4),n(70,"nui-vertical-flat-chips-example"),i(),t(71,"nui-example-wrapper",5),n(72,"nui-vertical-grouped-chips-example"),i(),t(73,"h2"),e(74,"Autohide"),i(),t(75,"p"),e(76," You can reserve space for the component when the itemsSource is empty by passing "),t(77,"code"),e(78,'[autoHide]="false"'),i(),e(79,` so that when the itemsSource is empty then there will remain some space at the position where component was. Default value is true.
`),i(),t(80,"nui-example-wrapper",6),n(81,"nui-autohide-chips-example"),i(),t(82,"h2"),e(83,"Overflow"),i(),t(84,"p"),e(85," This example shows how to handle chips overflow by adding a counter at the end of the second row, which indicates the number of chips which are overflowed instead of creating a new row. For that, you need to add "),t(86,"code"),e(87,"#overflowCounterLabel"),i(),e(88," which marks the area with counter and popover for incorporating it into "),t(89,"code"),e(90,"nui-chips"),i(),e(91," as Content Projection. Set property "),t(92,"code"),e(93,"overflow"),i(),e(94," to "),t(95,"code"),e(96,"true"),i(),e(97," and add handler for the "),t(98,"code"),e(99,"chipsOverflowed"),i(),e(100," Output to get overflowed items. Set overflowed items to the new property which would be as data source of overflowed chips for the "),t(101,"code"),e(102,"nui-chips-overflow"),i(),e(103," component. Add a "),t(104,"code"),e(105,"nui-chips-overflowed__counter"),i(),e(106," class with styles for counter (see inside chips-overflow.example.component.ts file)"),t(107,"code"),e(108,"overflowLinesNumber"),i(),e(109,` is used for limitation of chips rows, 1 by default. You can change it for you own needs.
`),i(),t(110,"nui-example-wrapper",7),n(111,"nui-chips-overflow-example"),i(),t(112,"h2"),e(113,"Custom Css"),i(),t(114,"p"),e(115,"To use custom styling for chips use "),t(116,"code"),e(117,"customClass"),i(),e(118," property."),i(),t(119,"p"),e(120," You can do that for separate "),t(121,"code"),e(122,"nui-chip"),i(),e(123,", "),t(124,"code"),e(125,"nui-chips"),i(),e(126," set or "),t(127,"code"),e(128,"nui-chips"),i(),e(129,` group.
`),i(),t(130,"p"),e(131," It's also possible to use "),t(132,"a",8),e(133,"Nui Tag"),i(),e(134," classes width styles for chips. To do that, just pass the related style to "),t(135,"code"),e(136,"customClass"),i(),e(137,`.
`),i(),t(138,"p"),e(139," To unset "),t(140,"code"),e(141,"max-width"),i(),e(142," on the chip, pass "),t(143,"code"),e(144,"unlimited-width"),i(),e(145," to "),t(146,"code"),e(147,"customClass"),i(),e(148,`.
`),i(),t(149,"nui-example-wrapper",9),n(150,"nui-chips-custom-css-example"),i())},dependencies:[m,r,s,d,c,h,u,p],encapsulation:2})}}return o})();export{A as a};
