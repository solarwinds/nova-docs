import{a as c}from"./chunk-ZFF5KKNL.js";import{c as m}from"./chunk-MYP46YE5.js";import{g as o}from"./chunk-7HICAA52.js";import{Aa as r,Ob as i,Pb as t,Qb as l,qc as e}from"./chunk-7UJBXEVU.js";var u=(()=>{class n{static{this.\u0275fac=function(a){return new(a||n)}}static{this.\u0275cmp=r({type:n,selectors:[["nui-data-filter-example"]],decls:97,vars:0,consts:[["href","../interfaces/IFilteringParticipants.html","target","_blank"],["href","../injectables/LocalFilteringDataSource.html","target","_blank"],["target","_blank","href","https://cp.solarwinds.com/pages/viewpage.action?spaceKey=NU&title=Filterable+Datasources"],["filenamePrefix","data-filter-basic","exampleTitle","Basic Usage"],["filenamePrefix","data-filter-isolated","exampleTitle","Isolated Filters"]],template:function(a,d){a&1&&(i(0,"p")(1,"code"),e(2,"DataFilterService"),t(),e(3,` provides a mechanism of filtering data in hierarchical components.
`),t(),i(4,"h2"),e(5,"Basic Usage"),t(),i(6,"p"),e(7,"To use "),i(8,"code"),e(9,"DataFilterService"),t(),e(10," do following steps:"),t(),i(11,"ol")(12,"li"),e(13," Provide "),i(14,"code"),e(15,"DataFilterService"),t(),e(16," into providers of your parent and child components. "),t(),i(17,"li"),e(18," Register filters using "),i(19,"code"),e(20,"this.filterService.registerFilter()"),t(),e(21," function and pass "),i(22,"a",0)(23,"code"),e(24,"IFilteringParticipants"),t()(),e(25," as a parameter. "),t(),i(26,"li"),e(27," Call "),i(28,"code"),e(29,"this.filterService.applyFilters()"),t(),e(30," function to apply filters on components which are used for filtering. "),t(),i(31,"li"),e(32," Create custom "),i(33,"code"),e(34,"DataSource"),t(),e(35," (in our case we are extending "),i(36,"a",1)(37,"code"),e(38,"LocalFilteringDataSource"),t()(),e(39,") and inside that service inject "),i(40,"code"),e(41,"DataFilterService"),t(),e(42," and subscribe to "),i(43,"code"),e(44,"this.filterService.filteringSubject"),t(),e(45," in constructor of your "),i(46,"code"),e(47,"DataSource"),t(),e(48," service. "),i(49,"code"),e(50,"this.filterService.filteringSubject"),t(),e(51," will be emitted when "),i(52,"code"),e(53,"this.filterService.applyFilters()"),t(),e(54," will be called in your component. "),t(),i(55,"li"),e(56," Perform filtering in your "),i(57,"code"),e(58,"DataSource"),t(),e(59," service. To make this happen in your custom "),i(60,"code"),e(61,"DataSource"),t(),e(62," use "),i(63,"code"),e(64,"this.filterService.getFilters()"),t(),e(65," function to get filter state of your component. You can see it in action in the example below (in "),i(66,"code"),e(67,"getFilteredData"),t(),e(68," function in "),i(69,"code"),e(70,"DataSource"),t(),e(71,"). "),t()(),i(72,"p"),e(73," More details about multi-level filtering mechanism are available "),i(74,"a",2),e(75,"here"),t(),e(76,`.
`),t(),i(77,"nui-example-wrapper",3),l(78,"nui-data-filter-basic-example"),t(),i(79,"h2"),e(80,"Isolated Filters"),t(),i(81,"p"),e(82," In this example you can see two components with "),i(83,"code"),e(84,"nui-search"),t(),e(85," which are independent from each other. This is possible because of properly created component tree. Each component has its own "),i(86,"code"),e(87,"DataFilterService"),t(),e(88,". This "),i(89,"code"),e(90,"DataFilterService"),t(),e(91," has reference to its parent and doesn't have any references to sibling components. It happens because in the example below we injected "),i(92,"code"),e(93,"DataFilterService"),t(),e(94,` in providers of each component and Angular creates correct DI tree.
`),t(),i(95,"nui-example-wrapper",4),l(96,"nui-data-filter-isolated-example"),t())},dependencies:[o,m,c],encapsulation:2})}}return n})();export{u as a};
