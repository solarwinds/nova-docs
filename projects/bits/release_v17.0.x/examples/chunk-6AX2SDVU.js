import{a as x}from"./chunk-2HTL5ITC.js";import{a as u}from"./chunk-D2WGUSKI.js";import{a as d}from"./chunk-FEEMFRND.js";import{g as s}from"./chunk-7HICAA52.js";import{Aa as r,Ib as o,Ob as i,Pb as t,Qb as m,ob as a,qc as e}from"./chunk-7UJBXEVU.js";var g=(()=>{class n{static{this.\u0275fac=function(l){return new(l||n)}}static{this.\u0275cmp=r({type:n,selectors:[["nui-textbox-number-docs-example"]],decls:147,vars:2,consts:[["type","warning",3,"allowDismiss"],["filenamePrefix","textbox-number-basic","exampleTitle","Basic usage"],["href","https://angular.io/api/forms/ControlValueAccessor","target","_blank"],["href","https://www.w3schools.com/tags/att_input_name.asp#:~:text=The%20name%20attribute%20specifies%20the,after%20a%20form%20is%20submitted.","target","_blank"],["type","info",3,"allowDismiss"],["href","../components/TextboxNumberComponent.html#info","target","_parent"],["href","../components/TextboxComponent.html","target","_blank"],["filenamePrefix","textbox-number-min-max","exampleTitle","min/max value defined"]],template:function(l,c){l&1&&(i(0,"h2"),e(1,"Required Modules"),t(),i(2,"ul")(3,"li")(4,"code"),e(5,"NuiTextboxModule"),t()()(),i(6,"h2"),e(7,"Basic Usage"),t(),i(8,"p"),e(9," To use the textbox number component, add an "),i(10,"code"),e(11,"<nui-textbox-number>"),t(),e(12," to your template. By default, the "),i(13,"code"),e(14,"value"),t(),e(15,` input is set to 0. However, if you want the component to show a zero as soon as its rendered on the DOM, initialize the input explicitly.
`),t(),i(16,"nui-message",0)(17,"strong"),e(18,"Note:"),t(),e(19," The example uses the default value of "),i(20,"code"),e(21,"1"),t(),e(22," for the "),i(23,"code"),e(24,"step"),t(),e(25," input, so if you manually type in a floating point value, the increment/decrement buttons will still increment by "),i(26,"code"),e(27,"1"),t(),e(28,". To have your implementation increment/decrement by fractional values, set the "),i(29,"code"),e(30,"step"),t(),e(31," input to the desired floating point interval--"),i(32,"code"),e(33,"0.1"),t(),e(34,` for example.
`),t(),i(35,"nui-example-wrapper",1),m(36,"nui-textbox-number-basic-example"),t(),i(37,"h2"),e(38,"Inputs"),t(),i(39,"ul")(40,"li")(41,"code"),e(42,"value"),t(),e(43," - Value corresponding to the "),i(44,"code")(45,"a",2),e(46,"ControlValueAccessor"),t()(),e(47," interface on the Angular forms API. Use banana-in-a-box notation or the "),i(48,"code"),e(49,"valueChange"),t(),e(50," output to receive updates. Defaults to "),i(51,"code"),e(52,"0"),t(),e(53,". "),t(),i(54,"li")(55,"code"),e(56,"minValue"),t(),e(57,"- Set the minimum allowed value for the input field. See the Min/Max section on this page for a live example. "),t(),i(58,"li")(59,"code"),e(60,"maxValue"),t(),e(61," - Set the maximum allowed value for the input field. See the Min/Max section on this page for a live example. "),t(),i(62,"li")(63,"code"),e(64,"step"),t(),e(65," - Step by which the value is incremented/decremented on click of the up/down buttons. Note this can be set to a floating point value in addition to integers. Default is "),i(66,"code"),e(67,"1"),t(),e(68,". "),t(),i(69,"li")(70,"code"),e(71,"stepPrecision"),t(),e(72," - The decimal precision to use for rounding each step increase/decrease when clicking the up/down buttons. Default is "),i(73,"code"),e(74,"10"),t(),e(75,". "),t(),i(76,"li")(77,"code"),e(78,"placeholder"),t(),e(79," - Set the string to use as a placeholder for the text box. Default is "),i(80,"code"),e(81,'""'),t(),e(82,". "),t(),i(83,"li")(84,"code"),e(85,"customBoxWidth"),t(),e(86," - Set a custom width in "),i(87,"code"),e(88,"px"),t(),e(89," for the input field. "),t(),i(90,"li")(91,"code"),e(92,"disabled"),t(),e(93," - Disable the field. Default is "),i(94,"code"),e(95,"false"),t(),e(96,". "),t(),i(97,"li")(98,"code"),e(99,"readonly"),t(),e(100," - Make the input read-only. Default is "),i(101,"code"),e(102,"false"),t(),e(103,". "),t(),i(104,"li")(105,"code"),e(106,"name"),t(),e(107," - Set the value of the HTML input element's "),i(108,"code")(109,"a",3),e(110,"name"),t()(),e(111," attribute. "),t()(),i(112,"h2"),e(113,"Outputs"),t(),i(114,"ul")(115,"li")(116,"code"),e(117,"blurred"),t(),e(118," - Use this output to get the value of the input field when it is focused out. "),t(),i(119,"li")(120,"code"),e(121,"valueChange"),t(),e(122," - Use this output to get the value of the input field when it changes. "),t()(),i(123,"nui-message",4),e(124," For additional information about the above inputs and outputs, please take a look at the "),i(125,"a",5),e(126,"API tab"),t(),e(127," on this page. For usage examples of corresponding inputs on a similar component, visit the documentation page for the "),i(128,"code")(129,"a",6),e(130,"<nui-textbox>"),t()(),e(131,` component.
`),t(),i(132,"h2"),e(133,"Min/Max Value Defined"),t(),i(134,"p"),e(135," To define min/max value for "),i(136,"code"),e(137,"<nui-textbox-number>"),t(),e(138,", use the "),i(139,"code"),e(140,"minValue"),t(),e(141," and "),i(142,"code"),e(143,"maxValue"),t(),e(144,` inputs. In the following example, the min is set to 1 and the max is set to 10.
`),t(),i(145,"nui-example-wrapper",7),m(146,"nui-textbox-number-min-max-example"),t()),l&2&&(a(16),o("allowDismiss",!1),a(107),o("allowDismiss",!1))},dependencies:[d,s,x,u],styles:["[_nghost-%COMP%]   ul[_ngcontent-%COMP%]{padding-left:40px}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:disc}"]})}}return n})();export{g as a};
