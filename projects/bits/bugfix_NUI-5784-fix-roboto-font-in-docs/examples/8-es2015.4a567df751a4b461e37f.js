(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"++gK":function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from "@angular/core";\nimport { DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-basic-filter-group",\n    templateUrl: "./basic-filter-group.component.html",\n    styleUrls: ["./basic-filter-group.component.less"],\n})\nexport class BasicFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n'},"+1oT":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n} from "@nova-ui/bits";\nimport {\n    BehaviorSubject,\n    Subject,\n} from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./search-list-data";\nimport { SearchListDataSource } from "./search-list-data-source.service";\nimport {\n    IServer,\n    IServerFilters,\n} from "./types";\n\n@Component({\n    selector: "app-search-list",\n    templateUrl: "./search-list.component.html",\n    styleUrls: ["./search-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: SearchListDataSource,\n        },\n    ],\n})\nexport class SearchListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: SearchListDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.listItems$.next(data.repeat?.itemsSource || []);\n\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},"+54s":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewTableWithPaginationDataSource,\n} from "./filtered-view-table-with-pagination-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-table-with-pagination",\n    styleUrls: ["./filtered-view-table-with-pagination.component.less"],\n    templateUrl: "./filtered-view-table-with-pagination.component.html",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithPaginationDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithPaginationComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithPaginationDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},"+AwD":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\nimport {\n    BehaviorSubject,\n    Subject,\n} from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "../filtered-view-list-with-pagination-data";\nimport { FilteredViewListWithPaginationDataSource } from "../filtered-view-list-with-pagination-data-source.service";\nimport {\n    IServer,\n    IServerFilters,\n} from "../types";\n\n@Component({\n    selector: "app-filtered-view-list-with-pagination-list",\n    templateUrl: "./filtered-view-list.component.html",\n    styleUrls: ["./filtered-view-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithPaginationDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.listItems$.next(data.repeat?.itemsSource || []);\n\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n'},"+Chp":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},"+IDW":function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTableComponent } from "./filtered-view-table/filtered-view-table.component";\nimport { FilteredViewWithTableComponent } from "./filtered-view-with-table.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewWithTableComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewWithTableComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewWithTableModule {}\n'},"+OQe":function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},"+PcG":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    ISelection,\n    LocalFilteringDataSource,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\nimport { Subscription } from "rxjs";\n\nimport { IFilterGroupOption } from "../public-api";\n// import { ListCompositeComponent } from "../list/list.component";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "nui-item-picker-composite",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerCompositeComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public filteringState: IFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            total: undefined,\n        },\n    };\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    public page: number = 1;\n\n    // @ViewChild("list", {static: false}) listComposite: ListCompositeComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as LocalFilteringDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    async ngAfterViewInit() {\n        this.changeDetection.markForCheck();\n\n        // this.dataSource.registerComponent(this.listComposite.getFilterComponents());\n\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: IFilteringOutputs) => {\n            this.filteringState = data;\n        });\n\n        await this.dataSource.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},"+YmI":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},"+dDe":function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},"+iXi":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},"/Am9":function(e,t,n){"use strict";n.r(t),t.default='import { ScrollingModule } from "@angular/cdk/scrolling";\nimport { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTableWithVirtualScrollComponent } from "./filtered-view-table-with-virtual-scroll.component";\nimport { FilteredViewTableComponent } from "./filtered-view-table/filtered-view-table.component";\n\n@NgModule({\n    imports: [\n        ScrollingModule,\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithVirtualScrollModule {}\n'},"/CNV":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},"/L5X":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n'},"/eeP":function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="nui-filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="nui-filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="nui-filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},"044v":function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},"09/n":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},"0g3k":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-filtered-view-with-table-table__container {\n    overflow: auto;\n}\n\n'},"11ST":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n} from "@nova-ui/bits";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subscription } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\ninterface ExampleItem {\n    color: string;\n    status: string;\n}\n\ninterface CustomTemplateFilterGroupOption extends IFilterGroupOption {\n    icon: string;\n}\n\ninterface CustomTemplateFilterGroupItem extends IFilterGroupItem {\n    count: number;\n    allFilterOptions: CustomTemplateFilterGroupOption[];\n}\n\nconst RANDOM_ARRAY = [\n    {color: "regular-azure", status: "Critical"},\n    {color: "regular-black", status: "Warning"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-yellow", status: "Critical"},\n    {color: "regular-yellow", status: "Warning"},\n    {color: "regular-black", status: "Up"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-azure", status: "Up"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-azure", status: "Critical"},\n];\n\n@Component({\n    selector: "app-custom-template-filter-group-composite-example",\n    templateUrl: "custom-template-filter-group.example.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n})\nexport class CustomTemplateFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: CustomTemplateFilterGroupItem[] = [\n        {\n            id: "color",\n            title: "Color",\n            count: 4,\n            allFilterOptions: [\n                {\n                    icon: "copy",\n                    value: "azure",\n                    displayValue: "Azure",\n                }, {\n                    icon: "clock",\n                    value: "black",\n                    displayValue: "Black",\n                }, {\n                    icon: "status_up",\n                    value: "blue",\n                    displayValue: "Blue",\n                }, {\n                    icon: "signal-0",\n                    value: "yellow",\n                    displayValue: "Yellow",\n                },\n            ],\n            selectedFilterValues: ["azure"],\n        }, {\n            id: "status",\n            title: "Status",\n            count: 3,\n            allFilterOptions: [\n                {\n                    icon: "status_warning",\n                    value: "warning",\n                    displayValue: "Warning",\n                }, {\n                    icon: "status_critical",\n                    value: "critical",\n                    displayValue: "Critical",\n                },\n                {\n                    icon: "status_up",\n                    value: "up",\n                    displayValue: "Up",\n                },\n            ],\n            selectedFilterValues: ["critical"],\n        },\n    ];\n\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n\n    private outputsSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n    }\n\n    ngAfterViewInit(): void {\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.filteringState = data;\n            // get counts of filters\n            this.recalculateCounts(data);\n        });\n        this.dataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.dataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value];\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n}\n'},"1CEw":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},"1Cjs":function(e,t,n){"use strict";n.r(t),t.default='<ng-container *ngIf="dataSourceTree">\n    <cdk-tree [dataSource]="dataSourceTree" [treeControl]="treeControl">\n        <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="nui-tree__leaf">\n            <button nui-button displayStyle="action" type="button" disabled></button>\n            {{node.name}}\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node *cdkTreeNodeDef="let node; when: hasChild" class="nui-tree">\n            <div class="nui-tree__header" cdkTreeNodeToggle>\n                <nui-icon class="nui-tree__header-icon" icon="{{treeControl.isExpanded(node) ? \'triangle-down\' : \'triangle-right\'}}"></nui-icon>\n                <span class="nui-tree__header-title">{{ node.name }}</span>\n            </div>\n            <div class="nui-tree__body"\n                 [class.nui-tree__body--collapsed]="!treeControl.isExpanded(node)"\n                 [@expandedState]="treeControl.isExpanded(node) ? \'expanded\' : \'collapsed\'">\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</ng-container>\n'},"1DFb":function(e,t,n){"use strict";n.r(t),t.default='import { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    ISortedItem,\n    nameof,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    debounceTime,\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-virtual-scroll-data";\nimport { TableWithVirtualScrollDataSource } from "./table-with-virtual-scroll-data-source.service";\nimport { IServer, IServerFilters } from "./types";\n\n@Component({\n    selector: "app-table-with-virtual-scroll",\n    templateUrl: "./table-with-virtual-scroll.component.html",\n    styleUrls: ["./table-with-virtual-scroll.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: TableWithVirtualScrollDataSource,\n        },\n    ],\n})\nexport class TableWithVirtualScrollComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: "name",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = ["name"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            virtualScroll: {componentInstance: this.viewportManager},\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => !this.items.length || this.items.length < this.totalItems),\n                tap(() => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                switchMap(() => this.dataSource.outputsSubject.pipe(\n                    tap((data: IFilteringOutputs) => {\n                        // update the list of items to be rendered\n                        const items = data.repeat?.itemsSource || [];\n\n                        // after receiving data we need to append it to our previous fetched results\n                        this.items = this.items.concat(items);\n                        this.totalItems = data.paginator?.total || 0;\n                        this.changeDetection.detectChanges();\n                    })\n                )\n            ),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n'},"1Nfc":function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},"1YTC":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewTableWithVirtualScrollDataSource,\n} from "./filtered-view-table-with-virtual-scroll-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-table-with-virtual-scroll",\n    styleUrls: ["./filtered-view-table-with-virtual-scroll.component.less"],\n    templateUrl: "./filtered-view-table-with-virtual-scroll.component.html",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithVirtualScrollDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithVirtualScrollComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},"1xBS":function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerCompositeComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerCompositeComponent,\n    ],\n    exports: [\n        ItemPickerCompositeComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerCompositeModule {}\n'},"1ycH":function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},"2NPs":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    ListService,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    RepeatSelectionMode,\n    SearchComponent,\n    SelectionType,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\nimport {\n    Subject,\n} from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from "./selection-list-data";\nimport {\n    IServer,\n    IServerFilters,\n} from "./types";\n\n@Component({\n    selector: "app-selection-list",\n    templateUrl: "./selection-list.component.html",\n    styleUrls: ["./selection-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: ClientSideDataSource,\n        },\n    ],\n})\nexport class SelectionListComponent implements AfterViewInit, OnDestroy {\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private listService: ListService\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                this.filteringState = { ...this.filteringState, ...data };\n                this.filteringState = this.listService.updateSelectionState(this.filteringState);\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n\n    public onSelectorOutput(selectionType: SelectionType) {\n        this.filteringState = this.listService.applySelector(selectionType, this.filteringState);\n    }\n\n    public onRepeatOutput(selectedItems: IServer[]) {\n        this.filteringState = this.listService.selectItems(selectedItems, RepeatSelectionMode.multi, this.filteringState);\n    }\n}\n'},"2Nvw":function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},"2XiK":function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},"2bW1":function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 400;\n\n"},"2dld":function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},"2orZ":function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.r(t),"function"==typeof Symbol&&null!=Symbol.iterator&&Symbol,"function"==typeof Symbol&&null!=Symbol.asyncIterator&&Symbol;var r="function"==typeof Symbol&&null!=Symbol.toStringTag?Symbol.toStringTag:"@@toStringTag";function o(e,t){for(var n,i=/\r\n|[\n\r]/g,r=1,o=t+1;(n=i.exec(e.body))&&n.index<t;)r+=1,o=t+1-(n.index+n[0].length);return{line:r,column:o}}function a(e,t){var n=e.locationOffset.column-1,i=s(n)+e.body,r=t.line-1,o=t.line+(e.locationOffset.line-1),a=t.column+(1===t.line?n:0),c="".concat(e.name,":").concat(o,":").concat(a,"\n"),u=i.split(/\r\n|[\n\r]/g),p=u[r];if(p.length>120){for(var d=Math.floor(a/80),m=a%80,f=[],h=0;h<p.length;h+=80)f.push(p.slice(h,h+80));return c+l([["".concat(o),f[0]]].concat(f.slice(1,d+1).map((function(e){return["",e]})),[[" ",s(m-1)+"^"],["",f[d+1]]]))}return c+l([["".concat(o-1),u[r-1]],["".concat(o),p],["",s(a-1)+"^"],["".concat(o+1),u[r+1]]])}function l(e){var t=e.filter((function(e){return void 0!==e[1]})),n=Math.max.apply(Math,t.map((function(e){return e[0].length})));return t.map((function(e){var t,i=e[1];return s(n-(t=e[0]).length)+t+(i?" | "+i:" |")})).join("\n")}function s(e){return Array(e+1).join(" ")}function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?p(e):t}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e){var t="function"==typeof Map?new Map:void 0;return(d=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return m(e,arguments,g(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),h(n,e)})(e)}function m(e,t,n){return(m=f()?Reflect.construct:function(e,t,n){var i=[null];i.push.apply(i,t);var r=new(Function.bind.apply(e,i));return n&&h(r,n.prototype),r}).apply(null,arguments)}function f(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(c,e);var t,n,l,s=(t=c,n=f(),function(){var e,i=g(t);if(n){var r=g(this).constructor;e=Reflect.construct(i,arguments,r)}else e=i.apply(this,arguments);return u(this,e)});function c(e,t,n,r,a,l,d){var m,f,h,g,b;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),b=s.call(this,e);var v,S=Array.isArray(t)?0!==t.length?t:void 0:t?[t]:void 0,w=n;!w&&S&&(w=null===(v=S[0].loc)||void 0===v?void 0:v.source);var y,I=r;!I&&S&&(I=S.reduce((function(e,t){return t.loc&&e.push(t.loc.start),e}),[])),I&&0===I.length&&(I=void 0),r&&n?y=r.map((function(e){return o(n,e)})):S&&(y=S.reduce((function(e,t){return t.loc&&e.push(o(t.loc.source,t.loc.start)),e}),[]));var C,F=d;if(null==F&&null!=l){var x=l.extensions;"object"==i(C=x)&&null!==C&&(F=x)}return Object.defineProperties(p(b),{name:{value:"GraphQLError"},message:{value:e,enumerable:!0,writable:!0},locations:{value:null!==(m=y)&&void 0!==m?m:void 0,enumerable:null!=y},path:{value:null!=a?a:void 0,enumerable:null!=a},nodes:{value:null!=S?S:void 0},source:{value:null!==(f=w)&&void 0!==f?f:void 0},positions:{value:null!==(h=I)&&void 0!==h?h:void 0},originalError:{value:l},extensions:{value:null!==(g=F)&&void 0!==g?g:void 0,enumerable:null!=F}}),null!=l&&l.stack?(Object.defineProperty(p(b),"stack",{value:l.stack,writable:!0,configurable:!0}),u(b)):(Error.captureStackTrace?Error.captureStackTrace(p(b),c):Object.defineProperty(p(b),"stack",{value:Error().stack,writable:!0,configurable:!0}),b)}return(l=[{key:"toString",value:function(){return function(e){var t,n=e.message;if(e.nodes)for(var i=0,r=e.nodes;i<r.length;i++){var l=r[i];l.loc&&(n+="\n\n"+a((t=l.loc).source,o(t.source,t.start)))}else if(e.source&&e.locations)for(var s=0,c=e.locations;s<c.length;s++)n+="\n\n"+a(e.source,c[s]);return n}(this)}},{key:r,get:function(){return"Object"}}])&&function(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(c.prototype,l),c}(d(Error));function v(e,t,n){return new b("Syntax Error: ".concat(n),void 0,e,[t])}var S=Object.freeze({NAME:"Name",DOCUMENT:"Document",OPERATION_DEFINITION:"OperationDefinition",VARIABLE_DEFINITION:"VariableDefinition",SELECTION_SET:"SelectionSet",FIELD:"Field",ARGUMENT:"Argument",FRAGMENT_SPREAD:"FragmentSpread",INLINE_FRAGMENT:"InlineFragment",FRAGMENT_DEFINITION:"FragmentDefinition",VARIABLE:"Variable",INT:"IntValue",FLOAT:"FloatValue",STRING:"StringValue",BOOLEAN:"BooleanValue",NULL:"NullValue",ENUM:"EnumValue",LIST:"ListValue",OBJECT:"ObjectValue",OBJECT_FIELD:"ObjectField",DIRECTIVE:"Directive",NAMED_TYPE:"NamedType",LIST_TYPE:"ListType",NON_NULL_TYPE:"NonNullType",SCHEMA_DEFINITION:"SchemaDefinition",OPERATION_TYPE_DEFINITION:"OperationTypeDefinition",SCALAR_TYPE_DEFINITION:"ScalarTypeDefinition",OBJECT_TYPE_DEFINITION:"ObjectTypeDefinition",FIELD_DEFINITION:"FieldDefinition",INPUT_VALUE_DEFINITION:"InputValueDefinition",INTERFACE_TYPE_DEFINITION:"InterfaceTypeDefinition",UNION_TYPE_DEFINITION:"UnionTypeDefinition",ENUM_TYPE_DEFINITION:"EnumTypeDefinition",ENUM_VALUE_DEFINITION:"EnumValueDefinition",INPUT_OBJECT_TYPE_DEFINITION:"InputObjectTypeDefinition",DIRECTIVE_DEFINITION:"DirectiveDefinition",SCHEMA_EXTENSION:"SchemaExtension",SCALAR_TYPE_EXTENSION:"ScalarTypeExtension",OBJECT_TYPE_EXTENSION:"ObjectTypeExtension",INTERFACE_TYPE_EXTENSION:"InterfaceTypeExtension",UNION_TYPE_EXTENSION:"UnionTypeExtension",ENUM_TYPE_EXTENSION:"EnumTypeExtension",INPUT_OBJECT_TYPE_EXTENSION:"InputObjectTypeExtension"}),w=n("4bb0"),y=Object.freeze({SOF:"<SOF>",EOF:"<EOF>",BANG:"!",DOLLAR:"$",AMP:"&",PAREN_L:"(",PAREN_R:")",SPREAD:"...",COLON:":",EQUALS:"=",AT:"@",BRACKET_L:"[",BRACKET_R:"]",BRACE_L:"{",PIPE:"|",BRACE_R:"}",NAME:"Name",INT:"Int",FLOAT:"Float",STRING:"String",BLOCK_STRING:"BlockString",COMMENT:"Comment"}),I=n("CySa");function C(e,t){if(!Boolean(e))throw new Error(t)}var F=function(){function e(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GraphQL request",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{line:1,column:1};"string"==typeof e||C(0,"Body must be a string. Received: ".concat(Object(I.a)(e),".")),this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||C(0,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||C(0,"column in locationOffset is 1-indexed and must be positive.")}var t;return(t=[{key:r,get:function(){return"Source"}}])&&function(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}(e.prototype,t),e}(),x=Object.freeze({QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION"}),O=n("HpFd"),V=function(){function e(e){var t=new w.b(y.SOF,0,0,0,0,null);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}var t=e.prototype;return t.advance=function(){return this.lastToken=this.token,this.token=this.lookahead()},t.lookahead=function(){var e=this.token;if(e.kind!==y.EOF)do{var t;e=null!==(t=e.next)&&void 0!==t?t:e.next=k(this,e)}while(e.kind===y.COMMENT);return e},e}();function D(e){return isNaN(e)?y.EOF:e<127?JSON.stringify(String.fromCharCode(e)):'"\\u'.concat(("00"+e.toString(16).toUpperCase()).slice(-4),'"')}function k(e,t){for(var n=e.source,i=n.body,r=i.length,o=t.end;o<r;){var a=i.charCodeAt(o),l=e.line,s=1+o-e.lineStart;switch(a){case 65279:case 9:case 32:case 44:++o;continue;case 10:++o,++e.line,e.lineStart=o;continue;case 13:10===i.charCodeAt(o+1)?o+=2:++o,++e.line,e.lineStart=o;continue;case 33:return new w.b(y.BANG,o,o+1,l,s,t);case 35:return T(n,o,l,s,t);case 36:return new w.b(y.DOLLAR,o,o+1,l,s,t);case 38:return new w.b(y.AMP,o,o+1,l,s,t);case 40:return new w.b(y.PAREN_L,o,o+1,l,s,t);case 41:return new w.b(y.PAREN_R,o,o+1,l,s,t);case 46:if(46===i.charCodeAt(o+1)&&46===i.charCodeAt(o+2))return new w.b(y.SPREAD,o,o+3,l,s,t);break;case 58:return new w.b(y.COLON,o,o+1,l,s,t);case 61:return new w.b(y.EQUALS,o,o+1,l,s,t);case 64:return new w.b(y.AT,o,o+1,l,s,t);case 91:return new w.b(y.BRACKET_L,o,o+1,l,s,t);case 93:return new w.b(y.BRACKET_R,o,o+1,l,s,t);case 123:return new w.b(y.BRACE_L,o,o+1,l,s,t);case 124:return new w.b(y.PIPE,o,o+1,l,s,t);case 125:return new w.b(y.BRACE_R,o,o+1,l,s,t);case 34:return 34===i.charCodeAt(o+1)&&34===i.charCodeAt(o+2)?M(n,o,l,s,t,e):P(n,o,l,s,t);case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(n,o,a,l,s,t);case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 95:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:return N(n,o,l,s,t)}throw v(n,o,G(a))}return new w.b(y.EOF,r,r,e.line,1+o-e.lineStart,t)}function G(e){return e<32&&9!==e&&10!==e&&13!==e?"Cannot contain the invalid character ".concat(D(e),"."):39===e?"Unexpected single quote character ('), did you mean to use a double quote (\")?":"Cannot parse the unexpected character ".concat(D(e),".")}function T(e,t,n,i,r){var o,a=e.body,l=t;do{o=a.charCodeAt(++l)}while(!isNaN(o)&&(o>31||9===o));return new w.b(y.COMMENT,t,l,n,i,r,a.slice(t+1,l))}function E(e,t,n,i,r,o){var a=e.body,l=n,s=t,c=!1;if(45===l&&(l=a.charCodeAt(++s)),48===l){if((l=a.charCodeAt(++s))>=48&&l<=57)throw v(e,s,"Invalid number, unexpected digit after 0: ".concat(D(l),"."))}else s=_(e,s,l),l=a.charCodeAt(s);if(46===l&&(c=!0,l=a.charCodeAt(++s),s=_(e,s,l),l=a.charCodeAt(s)),69!==l&&101!==l||(c=!0,43!==(l=a.charCodeAt(++s))&&45!==l||(l=a.charCodeAt(++s)),s=_(e,s,l),l=a.charCodeAt(s)),46===l||function(e){return 95===e||e>=65&&e<=90||e>=97&&e<=122}(l))throw v(e,s,"Invalid number, expected digit but got: ".concat(D(l),"."));return new w.b(c?y.FLOAT:y.INT,t,s,i,r,o,a.slice(t,s))}function _(e,t,n){var i=e.body,r=t,o=n;if(o>=48&&o<=57){do{o=i.charCodeAt(++r)}while(o>=48&&o<=57);return r}throw v(e,r,"Invalid number, expected digit but got: ".concat(D(o),"."))}function P(e,t,n,i,r){for(var o,a,l,s,c=e.body,u=t+1,p=u,d=0,m="";u<c.length&&!isNaN(d=c.charCodeAt(u))&&10!==d&&13!==d;){if(34===d)return m+=c.slice(p,u),new w.b(y.STRING,t,u+1,n,i,r,m);if(d<32&&9!==d)throw v(e,u,"Invalid character within String: ".concat(D(d),"."));if(++u,92===d){switch(m+=c.slice(p,u-1),d=c.charCodeAt(u)){case 34:m+='"';break;case 47:m+="/";break;case 92:m+="\\";break;case 98:m+="\b";break;case 102:m+="\f";break;case 110:m+="\n";break;case 114:m+="\r";break;case 116:m+="\t";break;case 117:var f=(o=c.charCodeAt(u+1),a=c.charCodeAt(u+2),l=c.charCodeAt(u+3),s=c.charCodeAt(u+4),R(o)<<12|R(a)<<8|R(l)<<4|R(s));if(f<0){var h=c.slice(u+1,u+5);throw v(e,u,"Invalid character escape sequence: \\u".concat(h,"."))}m+=String.fromCharCode(f),u+=4;break;default:throw v(e,u,"Invalid character escape sequence: \\".concat(String.fromCharCode(d),"."))}p=++u}}throw v(e,u,"Unterminated string.")}function M(e,t,n,i,r,o){for(var a=e.body,l=t+3,s=l,c=0,u="";l<a.length&&!isNaN(c=a.charCodeAt(l));){if(34===c&&34===a.charCodeAt(l+1)&&34===a.charCodeAt(l+2))return u+=a.slice(s,l),new w.b(y.BLOCK_STRING,t,l+3,n,i,r,Object(O.a)(u));if(c<32&&9!==c&&10!==c&&13!==c)throw v(e,l,"Invalid character within String: ".concat(D(c),"."));10===c?(++l,++o.line,o.lineStart=l):13===c?(10===a.charCodeAt(l+1)?l+=2:++l,++o.line,o.lineStart=l):92===c&&34===a.charCodeAt(l+1)&&34===a.charCodeAt(l+2)&&34===a.charCodeAt(l+3)?(u+=a.slice(s,l)+'"""',s=l+=4):++l}throw v(e,l,"Unterminated string.")}function R(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function N(e,t,n,i,r){for(var o=e.body,a=o.length,l=t+1,s=0;l!==a&&!isNaN(s=o.charCodeAt(l))&&(95===s||s>=48&&s<=57||s>=65&&s<=90||s>=97&&s<=122);)++l;return new w.b(y.NAME,t,l,n,i,r,o.slice(t,l))}function j(e,t){return new L(e,t).parseDocument()}function A(e,t){var n=new L(e,t);n.expectToken(y.SOF);var i=n.parseValueLiteral(!1);return n.expectToken(y.EOF),i}function W(e,t){var n=new L(e,t);n.expectToken(y.SOF);var i=n.parseTypeReference();return n.expectToken(y.EOF),i}n.d(t,"parse",(function(){return j})),n.d(t,"parseValue",(function(){return A})),n.d(t,"parseType",(function(){return W})),n.d(t,"Parser",(function(){return L}));var L=function(){function e(e,t){var n=function(e){return e instanceof F}(e)?e:new F(e);this._lexer=new V(n),this._options=t}var t=e.prototype;return t.parseName=function(){var e=this.expectToken(y.NAME);return{kind:S.NAME,value:e.value,loc:this.loc(e)}},t.parseDocument=function(){var e=this._lexer.token;return{kind:S.DOCUMENT,definitions:this.many(y.SOF,this.parseDefinition,y.EOF),loc:this.loc(e)}},t.parseDefinition=function(){if(this.peek(y.NAME))switch(this._lexer.token.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"schema":case"scalar":case"type":case"interface":case"union":case"enum":case"input":case"directive":return this.parseTypeSystemDefinition();case"extend":return this.parseTypeSystemExtension()}else{if(this.peek(y.BRACE_L))return this.parseOperationDefinition();if(this.peekDescription())return this.parseTypeSystemDefinition()}throw this.unexpected()},t.parseOperationDefinition=function(){var e=this._lexer.token;if(this.peek(y.BRACE_L))return{kind:S.OPERATION_DEFINITION,operation:"query",name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet(),loc:this.loc(e)};var t,n=this.parseOperationType();return this.peek(y.NAME)&&(t=this.parseName()),{kind:S.OPERATION_DEFINITION,operation:n,name:t,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}},t.parseOperationType=function(){var e=this.expectToken(y.NAME);switch(e.value){case"query":return"query";case"mutation":return"mutation";case"subscription":return"subscription"}throw this.unexpected(e)},t.parseVariableDefinitions=function(){return this.optionalMany(y.PAREN_L,this.parseVariableDefinition,y.PAREN_R)},t.parseVariableDefinition=function(){var e=this._lexer.token;return{kind:S.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(y.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(y.EQUALS)?this.parseValueLiteral(!0):void 0,directives:this.parseDirectives(!0),loc:this.loc(e)}},t.parseVariable=function(){var e=this._lexer.token;return this.expectToken(y.DOLLAR),{kind:S.VARIABLE,name:this.parseName(),loc:this.loc(e)}},t.parseSelectionSet=function(){var e=this._lexer.token;return{kind:S.SELECTION_SET,selections:this.many(y.BRACE_L,this.parseSelection,y.BRACE_R),loc:this.loc(e)}},t.parseSelection=function(){return this.peek(y.SPREAD)?this.parseFragment():this.parseField()},t.parseField=function(){var e,t,n=this._lexer.token,i=this.parseName();return this.expectOptionalToken(y.COLON)?(e=i,t=this.parseName()):t=i,{kind:S.FIELD,alias:e,name:t,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(y.BRACE_L)?this.parseSelectionSet():void 0,loc:this.loc(n)}},t.parseArguments=function(e){return this.optionalMany(y.PAREN_L,e?this.parseConstArgument:this.parseArgument,y.PAREN_R)},t.parseArgument=function(){var e=this._lexer.token,t=this.parseName();return this.expectToken(y.COLON),{kind:S.ARGUMENT,name:t,value:this.parseValueLiteral(!1),loc:this.loc(e)}},t.parseConstArgument=function(){var e=this._lexer.token;return{kind:S.ARGUMENT,name:this.parseName(),value:(this.expectToken(y.COLON),this.parseValueLiteral(!0)),loc:this.loc(e)}},t.parseFragment=function(){var e=this._lexer.token;this.expectToken(y.SPREAD);var t=this.expectOptionalKeyword("on");return!t&&this.peek(y.NAME)?{kind:S.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1),loc:this.loc(e)}:{kind:S.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}},t.parseFragmentDefinition=function(){var e,t=this._lexer.token;return this.expectKeyword("fragment"),!0===(null===(e=this._options)||void 0===e?void 0:e.experimentalFragmentVariables)?{kind:S.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(t)}:{kind:S.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(t)}},t.parseFragmentName=function(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()},t.parseValueLiteral=function(e){var t=this._lexer.token;switch(t.kind){case y.BRACKET_L:return this.parseList(e);case y.BRACE_L:return this.parseObject(e);case y.INT:return this._lexer.advance(),{kind:S.INT,value:t.value,loc:this.loc(t)};case y.FLOAT:return this._lexer.advance(),{kind:S.FLOAT,value:t.value,loc:this.loc(t)};case y.STRING:case y.BLOCK_STRING:return this.parseStringLiteral();case y.NAME:switch(this._lexer.advance(),t.value){case"true":return{kind:S.BOOLEAN,value:!0,loc:this.loc(t)};case"false":return{kind:S.BOOLEAN,value:!1,loc:this.loc(t)};case"null":return{kind:S.NULL,loc:this.loc(t)};default:return{kind:S.ENUM,value:t.value,loc:this.loc(t)}}case y.DOLLAR:if(!e)return this.parseVariable()}throw this.unexpected()},t.parseStringLiteral=function(){var e=this._lexer.token;return this._lexer.advance(),{kind:S.STRING,value:e.value,block:e.kind===y.BLOCK_STRING,loc:this.loc(e)}},t.parseList=function(e){var t=this,n=this._lexer.token;return{kind:S.LIST,values:this.any(y.BRACKET_L,(function(){return t.parseValueLiteral(e)}),y.BRACKET_R),loc:this.loc(n)}},t.parseObject=function(e){var t=this,n=this._lexer.token;return{kind:S.OBJECT,fields:this.any(y.BRACE_L,(function(){return t.parseObjectField(e)}),y.BRACE_R),loc:this.loc(n)}},t.parseObjectField=function(e){var t=this._lexer.token,n=this.parseName();return this.expectToken(y.COLON),{kind:S.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e),loc:this.loc(t)}},t.parseDirectives=function(e){for(var t=[];this.peek(y.AT);)t.push(this.parseDirective(e));return t},t.parseDirective=function(e){var t=this._lexer.token;return this.expectToken(y.AT),{kind:S.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e),loc:this.loc(t)}},t.parseTypeReference=function(){var e,t=this._lexer.token;return this.expectOptionalToken(y.BRACKET_L)?(e=this.parseTypeReference(),this.expectToken(y.BRACKET_R),e={kind:S.LIST_TYPE,type:e,loc:this.loc(t)}):e=this.parseNamedType(),this.expectOptionalToken(y.BANG)?{kind:S.NON_NULL_TYPE,type:e,loc:this.loc(t)}:e},t.parseNamedType=function(){var e=this._lexer.token;return{kind:S.NAMED_TYPE,name:this.parseName(),loc:this.loc(e)}},t.parseTypeSystemDefinition=function(){var e=this.peekDescription()?this._lexer.lookahead():this._lexer.token;if(e.kind===y.NAME)switch(e.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}throw this.unexpected(e)},t.peekDescription=function(){return this.peek(y.STRING)||this.peek(y.BLOCK_STRING)},t.parseDescription=function(){if(this.peekDescription())return this.parseStringLiteral()},t.parseSchemaDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");var n=this.parseDirectives(!0),i=this.many(y.BRACE_L,this.parseOperationTypeDefinition,y.BRACE_R);return{kind:S.SCHEMA_DEFINITION,description:t,directives:n,operationTypes:i,loc:this.loc(e)}},t.parseOperationTypeDefinition=function(){var e=this._lexer.token,t=this.parseOperationType();this.expectToken(y.COLON);var n=this.parseNamedType();return{kind:S.OPERATION_TYPE_DEFINITION,operation:t,type:n,loc:this.loc(e)}},t.parseScalarTypeDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");var n=this.parseName(),i=this.parseDirectives(!0);return{kind:S.SCALAR_TYPE_DEFINITION,description:t,name:n,directives:i,loc:this.loc(e)}},t.parseObjectTypeDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");var n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseDirectives(!0),o=this.parseFieldsDefinition();return{kind:S.OBJECT_TYPE_DEFINITION,description:t,name:n,interfaces:i,directives:r,fields:o,loc:this.loc(e)}},t.parseImplementsInterfaces=function(){var e;if(!this.expectOptionalKeyword("implements"))return[];if(!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacySDLImplementsInterfaces)){var t=[];this.expectOptionalToken(y.AMP);do{t.push(this.parseNamedType())}while(this.expectOptionalToken(y.AMP)||this.peek(y.NAME));return t}return this.delimitedMany(y.AMP,this.parseNamedType)},t.parseFieldsDefinition=function(){var e;return!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacySDLEmptyFields)&&this.peek(y.BRACE_L)&&this._lexer.lookahead().kind===y.BRACE_R?(this._lexer.advance(),this._lexer.advance(),[]):this.optionalMany(y.BRACE_L,this.parseFieldDefinition,y.BRACE_R)},t.parseFieldDefinition=function(){var e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),i=this.parseArgumentDefs();this.expectToken(y.COLON);var r=this.parseTypeReference(),o=this.parseDirectives(!0);return{kind:S.FIELD_DEFINITION,description:t,name:n,arguments:i,type:r,directives:o,loc:this.loc(e)}},t.parseArgumentDefs=function(){return this.optionalMany(y.PAREN_L,this.parseInputValueDef,y.PAREN_R)},t.parseInputValueDef=function(){var e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(y.COLON);var i,r=this.parseTypeReference();this.expectOptionalToken(y.EQUALS)&&(i=this.parseValueLiteral(!0));var o=this.parseDirectives(!0);return{kind:S.INPUT_VALUE_DEFINITION,description:t,name:n,type:r,defaultValue:i,directives:o,loc:this.loc(e)}},t.parseInterfaceTypeDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");var n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseDirectives(!0),o=this.parseFieldsDefinition();return{kind:S.INTERFACE_TYPE_DEFINITION,description:t,name:n,interfaces:i,directives:r,fields:o,loc:this.loc(e)}},t.parseUnionTypeDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");var n=this.parseName(),i=this.parseDirectives(!0),r=this.parseUnionMemberTypes();return{kind:S.UNION_TYPE_DEFINITION,description:t,name:n,directives:i,types:r,loc:this.loc(e)}},t.parseUnionMemberTypes=function(){return this.expectOptionalToken(y.EQUALS)?this.delimitedMany(y.PIPE,this.parseNamedType):[]},t.parseEnumTypeDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");var n=this.parseName(),i=this.parseDirectives(!0),r=this.parseEnumValuesDefinition();return{kind:S.ENUM_TYPE_DEFINITION,description:t,name:n,directives:i,values:r,loc:this.loc(e)}},t.parseEnumValuesDefinition=function(){return this.optionalMany(y.BRACE_L,this.parseEnumValueDefinition,y.BRACE_R)},t.parseEnumValueDefinition=function(){var e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),i=this.parseDirectives(!0);return{kind:S.ENUM_VALUE_DEFINITION,description:t,name:n,directives:i,loc:this.loc(e)}},t.parseInputObjectTypeDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");var n=this.parseName(),i=this.parseDirectives(!0),r=this.parseInputFieldsDefinition();return{kind:S.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:n,directives:i,fields:r,loc:this.loc(e)}},t.parseInputFieldsDefinition=function(){return this.optionalMany(y.BRACE_L,this.parseInputValueDef,y.BRACE_R)},t.parseTypeSystemExtension=function(){var e=this._lexer.lookahead();if(e.kind===y.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)},t.parseSchemaExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");var t=this.parseDirectives(!0),n=this.optionalMany(y.BRACE_L,this.parseOperationTypeDefinition,y.BRACE_R);if(0===t.length&&0===n.length)throw this.unexpected();return{kind:S.SCHEMA_EXTENSION,directives:t,operationTypes:n,loc:this.loc(e)}},t.parseScalarTypeExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");var t=this.parseName(),n=this.parseDirectives(!0);if(0===n.length)throw this.unexpected();return{kind:S.SCALAR_TYPE_EXTENSION,name:t,directives:n,loc:this.loc(e)}},t.parseObjectTypeExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");var t=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),r=this.parseFieldsDefinition();if(0===n.length&&0===i.length&&0===r.length)throw this.unexpected();return{kind:S.OBJECT_TYPE_EXTENSION,name:t,interfaces:n,directives:i,fields:r,loc:this.loc(e)}},t.parseInterfaceTypeExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");var t=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),r=this.parseFieldsDefinition();if(0===n.length&&0===i.length&&0===r.length)throw this.unexpected();return{kind:S.INTERFACE_TYPE_EXTENSION,name:t,interfaces:n,directives:i,fields:r,loc:this.loc(e)}},t.parseUnionTypeExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");var t=this.parseName(),n=this.parseDirectives(!0),i=this.parseUnionMemberTypes();if(0===n.length&&0===i.length)throw this.unexpected();return{kind:S.UNION_TYPE_EXTENSION,name:t,directives:n,types:i,loc:this.loc(e)}},t.parseEnumTypeExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");var t=this.parseName(),n=this.parseDirectives(!0),i=this.parseEnumValuesDefinition();if(0===n.length&&0===i.length)throw this.unexpected();return{kind:S.ENUM_TYPE_EXTENSION,name:t,directives:n,values:i,loc:this.loc(e)}},t.parseInputObjectTypeExtension=function(){var e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");var t=this.parseName(),n=this.parseDirectives(!0),i=this.parseInputFieldsDefinition();if(0===n.length&&0===i.length)throw this.unexpected();return{kind:S.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:n,fields:i,loc:this.loc(e)}},t.parseDirectiveDefinition=function(){var e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(y.AT);var n=this.parseName(),i=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");var o=this.parseDirectiveLocations();return{kind:S.DIRECTIVE_DEFINITION,description:t,name:n,arguments:i,repeatable:r,locations:o,loc:this.loc(e)}},t.parseDirectiveLocations=function(){return this.delimitedMany(y.PIPE,this.parseDirectiveLocation)},t.parseDirectiveLocation=function(){var e=this._lexer.token,t=this.parseName();if(void 0!==x[t.value])return t;throw this.unexpected(e)},t.loc=function(e){var t;if(!0!==(null===(t=this._options)||void 0===t?void 0:t.noLocation))return new w.a(e,this._lexer.lastToken,this._lexer.source)},t.peek=function(e){return this._lexer.token.kind===e},t.expectToken=function(e){var t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t;throw v(this._lexer.source,t.start,"Expected ".concat(Q(e),", found ").concat(B(t),"."))},t.expectOptionalToken=function(e){var t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t},t.expectKeyword=function(e){var t=this._lexer.token;if(t.kind!==y.NAME||t.value!==e)throw v(this._lexer.source,t.start,'Expected "'.concat(e,'", found ').concat(B(t),"."));this._lexer.advance()},t.expectOptionalKeyword=function(e){var t=this._lexer.token;return t.kind===y.NAME&&t.value===e&&(this._lexer.advance(),!0)},t.unexpected=function(e){var t=null!=e?e:this._lexer.token;return v(this._lexer.source,t.start,"Unexpected ".concat(B(t),"."))},t.any=function(e,t,n){this.expectToken(e);for(var i=[];!this.expectOptionalToken(n);)i.push(t.call(this));return i},t.optionalMany=function(e,t,n){if(this.expectOptionalToken(e)){var i=[];do{i.push(t.call(this))}while(!this.expectOptionalToken(n));return i}return[]},t.many=function(e,t,n){this.expectToken(e);var i=[];do{i.push(t.call(this))}while(!this.expectOptionalToken(n));return i},t.delimitedMany=function(e,t){this.expectOptionalToken(e);var n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n},e}();function B(e){var t=e.value;return Q(e.kind)+(null!=t?' "'.concat(t,'"'):"")}function Q(e){return function(e){return e===y.BANG||e===y.DOLLAR||e===y.AMP||e===y.PAREN_L||e===y.PAREN_R||e===y.SPREAD||e===y.COLON||e===y.EQUALS||e===y.AT||e===y.BRACKET_L||e===y.BRACKET_R||e===y.BRACE_L||e===y.PIPE||e===y.BRACE_R}(e)?'"'.concat(e,'"'):e}},"3EhY":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},"3IUN":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},"3VjK":function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},"3WPx":function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},"3Wc+":function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},"3XHf":function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},"3rpt":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},"3xx8":function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},"4/WI":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-search-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-search-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-search-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-search-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n'},"4GQX":function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},"4LSg":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    DialogService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n} from "@nova-ui/bits";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupCompositeDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { IFilterGroupItem } from "./public-api";\n\ninterface ExampleItem {\n    color: string;\n    name: string;\n}\n\nconst RANDOM_ARRAY = [\n    {color: "yellow", name: "banana"},\n    {color: "orange", name: "orange"},\n    {color: "violet", name: "plum"},\n    {color: "blue", name: "blueberry"},\n    {color: "brown", name: "potato"},\n    {color: "red", name: "apple"},\n    {color: "green", name: "pear"},\n    {color: "black", name: "blackcurrant"},\n    {color: "white", name: "coconut"},\n    {color: "magenta", name: "mulberry"},\n    {color: "apricot", name: "peach"},\n    {color: "olive", name: "olive"},\n    {color: "carmine", name: "grapefruit"},\n    {color: "coral", name: "pomegranate"},\n    {color: "corn", name: "corn"},\n];\n\n@Component({\n    selector: "app-dialog-filter-group-composite-example",\n    templateUrl: "dialog-filter-group.example.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n})\nexport class DialogFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "color",\n            title: "Color",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: "yellow",\n                    displayValue: "Yellow",\n                    count: 1,\n                }, {\n                    value: "orange",\n                    displayValue: "Orange",\n                    count: 1,\n                }, {\n                    value: "violet",\n                    displayValue: "Violet",\n                    count: 1,\n                }, {\n                    value: "blue",\n                    displayValue: "Blue",\n                    count: 1,\n                }, {\n                    value: "brown",\n                    displayValue: "Brown",\n                    count: 1,\n                }, {\n                    value: "red",\n                    displayValue: "Red",\n                    count: 1,\n                }, {\n                    value: "green",\n                    displayValue: "Green",\n                    count: 1,\n                }, {\n                    value: "black",\n                    displayValue: "Black",\n                    count: 1,\n                }, {\n                    value: "white",\n                    displayValue: "White",\n                    count: 1,\n                }, {\n                    value: "magenta",\n                    displayValue: "Magenta",\n                    count: 1,\n                }, {\n                    value: "apricot",\n                    displayValue: "Apricot",\n                    count: 1,\n                }, {\n                    value: "olive",\n                    displayValue: "Olive",\n                    count: 1,\n                }, {\n                    value: "carmine",\n                    displayValue: "Carmine",\n                    count: 1,\n                }, {\n                    value: "coral",\n                    displayValue: "Coral",\n                    count: 1,\n                }, {\n                    value: "corn",\n                    displayValue: "Corn",\n                    count: 1,\n                },\n            ],\n            selectedFilterValues: [],\n            itemsToDisplay: 10,\n        }, {\n            id: "name",\n            title: "Fruits and Vegetables",\n            expanded: false,\n            allFilterOptions: [\n                {\n                    value: "banana",\n                    displayValue: "Banana",\n                    count: 1,\n                }, {\n                    value: "orange",\n                    displayValue: "Orange",\n                    count: 1,\n                }, {\n                    value: "plum",\n                    displayValue: "Plum",\n                    count: 1,\n                }, {\n                    value: "blueberry",\n                    displayValue: "Blueberry",\n                    count: 1,\n                }, {\n                    value: "potato",\n                    displayValue: "Potato",\n                    count: 1,\n                }, {\n                    value: "apple",\n                    displayValue: "Apple",\n                    count: 1,\n                }, {\n                    value: "pear",\n                    displayValue: "Pear",\n                    count: 1,\n                }, {\n                    value: "blackcurrant",\n                    displayValue: "Blackcurrant",\n                    count: 1,\n                }, {\n                    value: "coconut",\n                    displayValue: "Coconut",\n                    count: 1,\n                }, {\n                    value: "mulberry",\n                    displayValue: "Mulberry",\n                    count: 1,\n                }, {\n                    value: "peach",\n                    displayValue: "Peach",\n                    count: 1,\n                }, {\n                    value: "olive",\n                    displayValue: "Olive",\n                    count: 1,\n                }, {\n                    value: "grapefruit",\n                    displayValue: "Grapefruit",\n                    count: 1,\n                }, {\n                    value: "pomegranate",\n                    displayValue: "Pomegranate",\n                    count: 1,\n                }, {\n                    value: "corn",\n                    displayValue: "Corn",\n                    count: 1,\n                },\n            ],\n            selectedFilterValues: [],\n            itemsToDisplay: 10,\n        },\n    ];\n\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        name: [],\n    };\n\n    private outputsSubscription: Subscription;\n    private dialogSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>,\n                @Inject(DialogService) private dialogService: DialogService,\n                private filterGroupService: FilterGroupService) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n    }\n\n    ngAfterViewInit(): void {\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.filteringState = data;\n            // get counts of filters\n            this.recalculateCounts(data);\n        });\n        this.dataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.dataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    public handleFilterDialog(filterGroupItem: IFilterGroupItem) {\n        const dialogRef = this.dialogService.open(FilterGroupCompositeDialogComponent);\n        dialogRef.componentInstance.title = "Filter dialog";\n        dialogRef.componentInstance.itemPickerOptions = filterGroupItem.allFilterOptions;\n        dialogRef.componentInstance.selectedValues = filterGroupItem.selectedFilterValues;\n        this.dialogSubscription = dialogRef.componentInstance.dialogClosed.subscribe((selectedValues: string[]) => {\n            filterGroupItem.selectedFilterValues = selectedValues;\n            filterGroupItem = this.filterGroupService.appendHiddenFilters(filterGroupItem);\n            this.dataSourceService.applyFilters();\n        });\n    }\n\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value];\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n}\n'},"4P08":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},"4UJX":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.nui-filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},"4ZP6":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},"4bb0":function(e,t,n){"use strict";var i=n("fU3e");function r(e){var t=e.prototype.toJSON;"function"==typeof t||function(e,t){if(!Boolean(0))throw new Error("Unexpected invariant triggered.")}(),e.prototype.inspect=t,i.a&&(e.prototype[i.a]=t)}n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return l}));var o=function(){function e(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}return e.prototype.toJSON=function(){return{start:this.start,end:this.end}},e}();r(o);var a=function(){function e(e,t,n,i,r,o,a){this.kind=e,this.start=t,this.end=n,this.line=i,this.column=r,this.value=a,this.prev=o,this.next=null}return e.prototype.toJSON=function(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}},e}();function l(e){return null!=e&&"string"==typeof e.kind}r(a)},"4dU6":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},"4l1j":function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from "@angular/core";\nimport { DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-dialog-filter-group",\n    templateUrl: "./dialog-filter-group.component.html",\n    styleUrls: ["./dialog-filter-group.component.less"],\n})\nexport class DialogFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n'},"4qB0":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},"4wxC":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from "../filtered-view-with-table-data";\nimport { IServer } from "../types";\n\n@Component({\n    selector: "app-filtered-view-with-table-table",\n    templateUrl: "./filtered-view-table.component.html",\n    styleUrls: ["./filtered-view-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},5460:function(e,t,n){"use strict";n.r(t),t.default='import { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    nameof,\n    TableComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    CUSTOM_SCROLL_ITEMS_PER_PAGE,\n    RESULTS_PER_PAGE,\n} from "../filtered-view-table-with-custom-virtual-scroll-data";\nimport { FilteredViewTableWithCustomVirtualScrollDataSource } from "../filtered-view-table-with-custom-virtual-scroll-data-source.service";\nimport { IServer, IServerFilters } from "../types";\n\nimport { VirtualScrollCustomStrategyService } from "./virtual-scroll-custom-strategy.service";\n\n@Component({\n    selector: "app-filtered-view-table-with-custom-virtual-scroll-table",\n    templateUrl: "./filtered-view-table.component.html",\n    styleUrls: ["./filtered-view-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        VirtualViewportManager,\n        VirtualScrollCustomStrategyService,\n        {\n            provide: CUSTOM_SCROLL_ITEMS_PER_PAGE,\n            useValue: RESULTS_PER_PAGE,\n        },\n    ],\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private previouslyLoadedCount: number;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithCustomVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private customVirtualScrollStrategyService: VirtualScrollCustomStrategyService,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: {componentInstance: this.customVirtualScrollStrategyService },\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport);\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                let items = data.repeat?.itemsSource || [];\n\n                // number of fetched items from our data source\n                const fetchedItemsCount = items.length;\n\n                // number of useful items after eliminating the leftovers;\n                // leftovers appear when we reach the end of all our data\n                // since we\'re keep requesting the same page multiple times\n                // waiting for new items to be added between subsequent requests\n                const usefulItemsCount = fetchedItemsCount < this.pageSize\n                    ? this.previouslyLoadedCount - fetchedItemsCount\n                    : fetchedItemsCount;\n\n                items = items.slice(0, usefulItemsCount);\n\n                this.previouslyLoadedCount = items.length;\n\n                // append current useful items we need to append it to our previous fetched results\n                this.items = this.items.concat(items);\n\n                this.customVirtualScrollStrategyService.prepareNextPage(fetchedItemsCount);\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n            this.customVirtualScrollStrategyService.reset();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n'},"55+8":function(e,t,n){"use strict";n.r(t),t.default='<div class="d-flex">\n    <div class="p-0 col-4 schematic-docs-example__files">\n        <h2 class="mt-4">Source files</h2>\n        <div *ngFor="let item of componentSources | keyvalue">\n            <nui-expander [header]="item.key"\n                          icon="group">\n                <nui-recursive-object-view [object]="item.value"\n                                           [objectTemplate]="objectTemplate"\n                                           [notObjectTemplate]="notObjectTemplate">\n                    {{item.key}}\n                </nui-recursive-object-view>\n            </nui-expander>\n        </div>\n    </div>\n\n    <div class="col-8">\n        <h2 class="mt-4">Source code</h2>\n        <nui-expander [disabled]="!selectedFile"\n                      [open]="isSelectedFileOpen()"\n                      (openChange)="onSelectedFileOpenChange($event)">\n            <div nuiExpanderHeader>\n                <h5 class="m-0">\n                    Selected file:\n                    <span class="schematic-docs-example__selected-file">{{ selectedFile ? selectedFile : "None" }}</span>\n                </h5>\n            </div>\n            <div class="nui-source-inspector-code">\n                <nui-example-code *ngIf="shouldCodeRender">{{ getSource(selectedFile) }}</nui-example-code>\n            </div>\n        </nui-expander>\n    </div>\n</div>\n\n<h2 class="mt-4">Example</h2>\n<ng-content></ng-content>\n\n<ng-template #objectTemplate\n             let-item="item">\n    <nui-icon icon="xml-file"></nui-icon>\n    {{ item.key }}\n</ng-template>\n\n<ng-template #notObjectTemplate\n             let-key="item">\n    <button nui-button\n            class="mw-100"\n            type="button"\n            displayStyle="action"\n            icon="xml-file"\n            (click)="selectFile(key)">\n        {{ key }}\n    </button>\n</ng-template>\n'},"58SR":function(e,t,n){"use strict";n.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "schematics-docs-outlet",\n    template: `<router-outlet></router-outlet>`,\n})\nexport class ListSchematicsOutletComponent {}\n'},"5Nyv":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},"5uay":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},"60T+":function(e,t,n){"use strict";n.r(t),t.default='<div nui-busy [busy]="isBusy">\n    <nui-spinner size="large" i18n-message message="Loading..."></nui-spinner>\n    <div class="d-flex flex-row">\n        <nui-sorter class="app-paginated-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-paginated-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="!isBusy && (listItems$ | async).length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-paginated-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="filteringState.repeat?.itemsSource">\n        </nui-repeat>\n    </div>\n\n    <div class="d-flex flex-row">\n        <nui-paginator class="app-paginated-list-paginator"\n                       [(page)]="page"\n                       [pageSize]="pageSize"\n                       [pageSizeSet]="[10,20,30,40]"\n                       [total]="filteringState.paginator?.total"\n                       (pagerAction)="applyFilters()">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},"6D6Z":function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./filtered-view-table-with-virtual-scroll-data";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithVirtualScrollDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},"6N8/":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},"6Ntk":function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-custom-virtual-scroll-data";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithCustomVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE))\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithCustomVirtualScrollDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},"6dHs":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},"6oEQ":function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-virtual-scroll-table #child></app-filtered-view-table-with-virtual-scroll-table>\n        </div>\n    </nui-panel>\n</div>\n'},"6pWu":function(e,t,n){"use strict";n.r(t),t.default='<div class="app-table-with-custom-virtual-scroll__container">\n    <div class="app-table-with-custom-virtual-scroll-searchable__search">\n        <nui-search [value]="searchTerm"\n                    (search)="onSearch()"\n                    (cancel)="onSearchCancel()">\n        </nui-search>\n    </div>\n\n    <cdk-virtual-scroll-viewport class="app-table-with-custom-virtual-scroll-scrolling-container" tableStickyHeader #viewportRef [itemSize]="rowHeight">\n    <table nui-table [dataSource]="items | sliceRange: viewportRef.getRenderedRange()"\n           [sortable]="true"\n           [sortedColumn]="sortedColumn"\n           (sortOrderChanged)="sortData($event)">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]="displayedColumns"\n                         [cdkVirtualForOf]="items">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class="app-table-with-custom-virtual-scroll-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                         item(s).\n                    </div>\n                    <div class="d-flex justify-content-center">\n                        <button btn\n                                nui-button\n                                i18n\n                                type="button"\n                                size="default"\n                                displayStyle="action"\n                                (click)="applyFilters(false)">\n                            Load another {{pageSize}} items\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n'},"6pyY":function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},"6wsH":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},"7+8p":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-filtered-view-list-with-pagination-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-filtered-view-list-with-pagination-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-list-with-pagination-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-list-with-pagination-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-filtered-view-list-with-pagination-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n'},"7BzB":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewTableWithVirtualScrollSelectionDataSource,\n} from "./filtered-view-table-with-virtual-scroll-selection-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-table-with-virtual-scroll-selection",\n    styleUrls: ["./filtered-view-table-with-virtual-scroll-selection.component.less"],\n    templateUrl: "./filtered-view-table-with-virtual-scroll-selection.component.html",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithVirtualScrollSelectionDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithVirtualScrollSelectionComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollSelectionDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},"7Cc+":function(e,t,n){"use strict";n.r(t),t.default='import { Inject, Injectable } from "@angular/core";\nimport { DataSourceService, IFilters } from "@nova-ui/bits";\n\nimport { FakeHTTPService } from "../fake-http.service";\n\nimport { ExampleItem, ICustomDSFilteredData } from "./public-api";\n\n@Injectable()\nexport class FilterGroupCustomDataSourceService extends DataSourceService<ExampleItem> {\n    constructor(@Inject(FakeHTTPService) public httpService: FakeHTTPService) {\n        super();\n    }\n\n    // Emitting current filters to \'server\' via http service, to get filtered data \'ICustomDSFilteredData\'\n    public async getFilteredData(filters: IFilters): Promise<ICustomDSFilteredData> {\n        return await this.httpService.getData(filters);\n    }\n}\n'},"7CiJ":function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class SearchListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value ?? { start : 0, end: 0};\n        const params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start))\n\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = SearchListDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},"7Cvy":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-table-with-pagination__container {\n    overflow: auto;\n}\n\n.app-table-with-pagination-searchable__search {\n    max-width: 350px;\n    margin-bottom: @nui-space-xs;\n    margin-left: auto;\n}\n\n.app-table-with-pagination-scrolling-footer {\n    height: 28px;\n}\n'},"7NX1":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-filtered-view-table-with-pagination-table__container {\n    overflow: auto;\n}\n\n.app-filtered-view-table-with-pagination-table-scrolling-footer {\n    height: 28px;\n}\n'},"7Ud5":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-selection-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-selection-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-selection-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-selection-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-selection-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n'},"7X3U":function(e,t,n){"use strict";n.r(t),t.default='<div>\n    <div class="d-flex flex-row">\n        <nui-sorter class="app-basic-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-basic-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="filteringState.repeat?.itemsSource.length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-basic-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="filteringState.repeat?.itemsSource">\n        </nui-repeat>\n    </div>\n\n    <div class="d-flex flex-row">\n        <nui-paginator class="app-basic-list-paginator"\n                       [(page)]="page"\n                       [pageSize]="pageSize"\n                       [pageSizeSet]="[10,20,30,40]"\n                       [total]="filteringState.paginator?.total"\n                       (pagerAction)="applyFilters()">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},"7p01":function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-list-with-pagination-list #child></app-filtered-view-list-with-pagination-list>\n        </div>\n    </nui-panel>\n</div>\n'},"7rYE":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-filtered-view-with-list-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-filtered-view-with-list-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-with-list-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-with-list-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-filtered-view-with-list-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n'},"7smG":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-pagination-data";\nimport { TableWithPaginationDataSource } from "./table-with-pagination-data-source.service";\nimport { IServer, IServerFilters } from "./types";\n\n@Component({\n    selector: "app-table-with-pagination",\n    templateUrl: "./table-with-pagination.component.html",\n    styleUrls: ["./table-with-pagination.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithPaginationDataSource,\n        },\n    ],\n})\nexport class TableWithPaginationComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: "name",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = ["name"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithPaginationDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},"839b":function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},"86lC":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins.less";;\n\n.nui-filter-group-composite {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},"8ZMy":function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},"8hGT":function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewListComponent } from "./filtered-view-list/filtered-view-list.component";\nimport { FilteredViewWithListComponent } from "./filtered-view-with-list.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewWithListComponent,\n        FilteredViewListComponent,\n    ],\n    exports: [\n        FilteredViewWithListComponent,\n        FilteredViewListComponent,\n    ],\n})\n\nexport class FilteredViewWithListModule {}\n'},"91J8":function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./filtered-view-table-with-virtual-scroll-selection-data";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithVirtualScrollSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithVirtualScrollSelectionDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithVirtualScrollSelectionDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},"9Nf6":function(e,t,n){"use strict";n.r(t),t.default='/*\nCLI commands used to generate the current examples:\n\nng g "./schematics/src/collection.json":list --force --path=demo/src/schematics/list --prefix=app\n --name=basic-list --selectionMode=none --dataSource=none --pagingMode=pagination\n\nng g "./schematics/src/collection.json":list --force --path=demo/src/schematics/list --prefix=app\n --name=selection-list --selectionMode=multi --dataSource=none --pagingMode=pagination\n\nng g "./schematics/src/collection.json":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\n--name=search-list --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-search=true --enable-sort=false\n\nng g "./schematics/src/collection.json":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\n --name=virtual-scroll-list --selectionMode=none --dataSource=serverSide --pagingMode=virtualScroll\n\nng g "./schematics/src/collection.json":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\n --name=paginated-list --selectionMode=none --dataSource=serverSide --pagingMode=pagination\n*/\nimport { Component } from "@angular/core";\n\nimport { SchematicsDocsComponentType } from "../utils/schematic-docs-cli-option/schematic-docs-cli-option.component";\n\n@Component({\n    selector: "nui-list-schematics-docs-example",\n    templateUrl: "list-schematic.example.component.html",\n    providers: [{provide: SchematicsDocsComponentType, useValue: SchematicsDocsComponentType.list }],\n})\nexport class ListSchematicExampleComponent {\n}\n'},"9VPQ":function(e,t,n){"use strict";n.r(t),t.default='<div class="app-filtered-view-with-table-table__container">\n    <table nui-table [dataSource]="items">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},"9aig":function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"@angular-extensions/model/model","title":"Generates filtered-view component","type":"object","properties":{"path":{"type":"string","format":"path","description":"The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.","visible":false},"project":{"type":"string","description":"The name of the project","$default":{"$source":"projectName"}},"name":{"type":"string","description":"The name of the component","$default":{"$source":"argv","index":0},"x-prompt":"What name would you like to use for the component?"},"prefix":{"type":"string","description":"The prefix to apply to the generated component selector","alias":"p","oneOf":[{"maxLength":0},{"minLength":1,"format":"html-selector"}]},"flat":{"type":"boolean","description":"When true, creates the new files at the top level of the current project","default":false},"skipImport":{"type":"boolean","description":"When true, does not import this component into the owning NgModule","default":false},"selector":{"type":"string","format":"html-selector","description":"The HTML selector to use for this component"},"module":{"type":"string","description":"The declaring NgModule","alias":"m"},"export":{"type":"boolean","default":false,"description":"When true, the declaring NgModule exports this component"},"lintFix":{"type":"boolean","default":false,"description":"When true, applies lint fixes after generating the component"},"chips":{"type":"boolean","default":true,"description":"When true, incorporates chips for filter groups"},"presentationType":{"description":"Presentation type to be used for the filter results","type":"string","default":"list","enum":["list","table"],"x-prompt":{"message":"Which presentation type would you like to use for the filter results?","type":"list","items":[{"value":"list","label":"List"},{"value":"table","label":"Table"}]}},"pagingMode":{"description":"Paging mode to be used","type":"string","default":"virtualScroll","enum":["none","pagination","virtualScroll"],"x-prompt":{"message":"What paging mode would you like the filtered result to use?","type":"list","items":[{"value":"pagination","label":"Pagination"},{"value":"virtualScroll","label":"Virtual Scroll"},{"value":"none","label":"None"}]}},"dataSource":{"type":"string","default":"serverSide","enum":["clientSide","serverSide","custom","none"],"x-prompt":{"message":"What is the source of your data?","type":"list","items":[{"value":"clientSide","label":"The generated data source will retrieve data locally from a client side source."},{"value":"serverSide","label":"The generated data source will retrieve data remotely from a server side API."},{"value":"custom","label":"No data source will be generated, allowing you to create one from scratch."},{"value":"none","label":"No data source will be generated and no accommodations for a data source, e.g. sorting or search, will be added to the generated code."}]}},"enableSearch":{"type":"boolean","description":"When true, enables the search functionality to the list","default":true},"enableSort":{"type":"boolean","description":"When true, enables the search functionality to the list","default":true},"virtualScrollStrategy":{"type":"string","default":"standard","description":"Strategy used for the virtual scroll","enum":["standard","custom"]},"selectionMode":{"description":"Selection mode to be used for the list","type":"string","default":"none","enum":["none","multi","single","singleWithRequiredSelection","radio","radioWithNonRequiredSelection"],"x-prompt":{"message":"What selection mode would you like to use?","type":"list","items":[{"value":"none","label":"None (Selection Disabled)"},{"value":"multi","label":"Multi-Select (Checkboxes)"},{"value":"radio","label":"Radio Buttons"},{"value":"radioWithNonRequiredSelection","label":"Radio Buttons with Deselection Allowed"},{"value":"singleWithRequiredSelection","label":"Single-Select with No Radio Buttons"},{"value":"single","label":"Single-Select with No Radio Buttons and Deselection Allowed"}]}}},"additionalProperties":false,"required":["name","prefix","presentationType"]}')},"9lw4":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-basic-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-basic-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-basic-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-basic-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-basic-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n'},"9oUP":function(e,t,n){"use strict";n.r(t),t.default='import { Component } from "@angular/core";\nconst layoutSchema = require("../../../schematics/src/layout/schema.json");\nconst tableSchema = require("../../../schematics/src/table/schema.json");\nconst addSchema = require("../../../schematics/src/ng-add/schema.json");\n\n@Component({\n    selector: "schematics-docs",\n    templateUrl: "./schematics-docs.component.html",\n})\nexport class SchematicsDocsComponent {\n    public layoutJsonScheme: any = {};\n    public tableJsonScheme: any = {};\n    public addJsonScheme: any = {};\n    objectKeys = Object.keys;\n\n    constructor() {\n        this.schemaObjectFiller(layoutSchema.properties, "layout");\n        this.schemaObjectFiller(tableSchema.properties, "table");\n        this.schemaObjectFiller(addSchema.properties, "add");\n    }\n\n    private schemaObjectFiller(props: any, name: string) {\n        const object = (this as any)[`${name}JsonScheme`];\n        for (const prop of this.objectKeys(props)) {\n            object[prop] = {\n                "description": props[prop].description,\n                "type": props[prop].type,\n            };\n            if (props[prop].enum) { object[prop].enum = props[prop].enum; }\n            if (props[prop].default) { object[prop].default = props[prop].default; }\n            if (props[prop].alias) { object[prop].alias = props[prop].alias; }\n        }\n    }\n}\n'},A7CT:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n}\n'},"AQ+Z":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-filtered-view-list-with-virtual-scroll-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n        // it is very important to have a height for virtual scroll\n        height: 300px;\n    }\n\n    .app-filtered-view-list-with-virtual-scroll-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-list-with-virtual-scroll-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-list-with-virtual-scroll-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n}\n'},As4l:function(e,t,n){var i=n("IqJI"),r=n("BJBO"),o=n("bim0"),a=n("/Qyy"),l=o((function(e,t){if(null==e)return[];var n=t.length;return n>1&&a(e,t[0],t[1])?t=[]:n>2&&a(t[0],t[1],t[2])&&(t=[t[0]]),r(e,i(t,1),[])}));e.exports=l},AxCf:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.nui-filter-group-composite-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},B3r8:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},B63D:function(e,t,n){"use strict";n.r(t),t.default='import { IServer, ServerStatus } from "./types";\n// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: "FOCUS-SVR-12345",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-ASD123",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-DSA331",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-JKS212",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "ABERN-SVR-ATQU9404",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-433AAD",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-098331",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-GHJ882",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LLK001",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-KKJ998",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-RRR001",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LKJF12",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-882JJS",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-7733KK",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-JSHNSA",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-KKAEQWE",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-123KKNPQ",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-RRF231",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n];\n'},BOmQ:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},BqN7:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},Bx8s:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},"CA+9":function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},CB1G:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},CjjH:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n'},Cnf3:function(e,t,n){"use strict";n.r(t),t.default='<ng-template #customCheckboxTemplate let-checkbox="checkbox">\n    <div class="d-flex align-items-center">\n        <nui-icon class="mr-2" [icon]="checkbox.icon"></nui-icon>\n        <span class="mr-2">{{checkbox.displayValue}}</span>\n    </div>\n</ng-template>\n\n<ng-template #customExpanderTemplate let-expander="expander">\n    <div class="d-flex align-items-center">\n        <span class="mr-2">\n            <b>{{expander.title}}</b>\n        </span>\n        <span class="mr-2" *ngIf="!expander.expanded">{{expander.count}}</span>\n    </div>\n</ng-template>\n\n<ng-template #emptyListTemplate>\n    <div class="d-flex flex-column align-items-center">\n        <nui-image [isWatermark]="true" image="no-data-to-show"></nui-image>\n        <p class="nui-text-small">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-custom-template-filter-groups-wrapper>\n            <app-custom-template-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                        [filterGroupItem]="filterGroupItem"\n                                        [checkboxTemplateRef]="customCheckboxTemplate"\n                                        [expanderTemplateRef]="customExpanderTemplate"\n                                        (filterChanged)="changeFilters($event)"></app-custom-template-filter-group>\n        </app-custom-template-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf="hasItems(); else emptyListTemplate">\n            <nui-repeat id="nui-composites-demo-repeat"\n                        [itemsSource]="filteringState.repeat.itemsSource"\n                        [repeatItemTemplateRef]="listRepeatItemTemplate"\n                        paddingSize="normal">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n'},CySa:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n("fU3e");function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){return function e(t,n){switch(r(t)){case"string":return JSON.stringify(t);case"function":return t.name?"[function ".concat(t.name,"]"):"[function]";case"object":return null===t?"null":function(t,n){if(-1!==n.indexOf(t))return"[Circular]";var r=[].concat(n,[t]),o=function(e){var t=e[String(i.a)];return"function"==typeof t?t:"function"==typeof e.inspect?e.inspect:void 0}(t);if(void 0!==o){var a=o.call(t);if(a!==t)return"string"==typeof a?a:e(a,r)}else if(Array.isArray(t))return function(t,n){if(0===t.length)return"[]";if(n.length>2)return"[Array]";for(var i=Math.min(10,t.length),r=t.length-i,o=[],a=0;a<i;++a)o.push(e(t[a],n));return 1===r?o.push("... 1 more item"):r>1&&o.push("... ".concat(r," more items")),"["+o.join(", ")+"]"}(t,r);return function(t,n){var i=Object.keys(t);return 0===i.length?"{}":n.length>2?"["+function(e){var t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){var n=e.constructor.name;if("string"==typeof n&&""!==n)return n}return t}(t)+"]":"{ "+i.map((function(i){return i+": "+e(t[i],n)})).join(", ")+" }"}(t,r)}(t,n);default:return String(t)}}(e,[])}},DL7H:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport { NuiButtonModule, NuiCheckboxModule, NuiDialogModule, NuiExpanderModule } from "@nova-ui/bits";\n\nimport { BasicFilterGroupCompositeComponent } from "./basic-filter-group.component";\nimport { FilterGroupCompositeDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { BasicFilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerCompositeModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiButtonModule,\n        NuiDialogModule,\n        ItemPickerCompositeModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n    ],\n    declarations: [\n        BasicFilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        BasicFilterGroupCompositeComponent,\n    ],\n    exports: [\n        BasicFilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        BasicFilterGroupCompositeComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class BasicFilterGroupCompositeModule {\n}\n'},DgNP:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},DiWk:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},DjXf:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},DqLo:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"SchematicsNovaAdd","title":"ng-add schematic for bits","type":"object","description":"bootstraps a project for bits consumption","properties":{"project":{"type":"string","description":"The name of the project.","$default":{"$source":"projectName"}},"skipProviders":{"type":"boolean","description":"Skip provider imports","default":false},"skipCss":{"type":"boolean","description":"Skip importing css & setting styles","default":false},"skipTsConfig":{"type":"boolean","description":"Skip updating the tsconfig","default":false},"skipAngularLocalize":{"type":"boolean","description":"Skip invoking \'ng add\' for @angular/localize","default":false}},"required":[]}')},Dsru:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},DwQz:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 400;\n\n"},E5YZ:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},EHgo:function(e,t,n){"use strict";n.r(t),t.default='import { IServer, ServerStatus } from "./types";\n\n// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: "FOCUS-SVR-12345",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-ASD123",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-DSA331",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-JKS212",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "ABERN-SVR-ATQU9404",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-433AAD",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-098331",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-GHJ882",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LLK001",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-KKJ998",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-RRR001",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LKJF12",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-882JJS",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-7733KK",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-JSHNSA",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-KKAEQWE",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-123KKNPQ",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-RRF231",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n];\n'},ESaf:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.nui-schematic-docs-examples {\n    margin-top: @nui-space-sm\n}\n'},"Eb/p":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},ElU7:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},EwAg:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewListWithPaginationDataSource,\n} from "./filtered-view-list-with-pagination-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-list-with-pagination",\n    styleUrls: ["./filtered-view-list-with-pagination.component.less"],\n    templateUrl: "./filtered-view-list-with-pagination.component.html",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewListWithPaginationDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListWithPaginationComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithPaginationDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},F5NE:function(e,t,n){"use strict";n.r(t),t.default='import { IServer, ServerStatus } from "./types";\n\n// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: "FOCUS-SVR-12345",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-ASD123",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-DSA331",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-JKS212",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "ABERN-SVR-ATQU9404",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-433AAD",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-098331",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-GHJ882",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LLK001",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-KKJ998",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-RRR001",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LKJF12",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-882JJS",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-7733KK",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-JSHNSA",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-KKAEQWE",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-123KKNPQ",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-RRF231",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n];\n'},FDJh:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins.less";\n\n.nui-filter-group-composite {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},FHC4:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "mixins/expander-base";\n\n:host {\n    .app-filtered-view-with-list-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-filtered-view-with-list-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-with-list-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-filtered-view-with-list-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-filtered-view-with-list-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n\n.nui-tree {\n    .expander();\n\n    &__body {\n        &--collapsed {\n            overflow: hidden;\n        }\n    }\n\n    &__leaf {\n        display: flex;\n        align-items: center;\n    }\n\n    &__invisible {\n        display: none;\n    }\n}\n'},FXCW:function(e,t,n){"use strict";n.r(t),t.default='/*\nCLI commands used to generate the current examples:\n\nng g "./schematics/src/collection.json":table --force --path=demo/src/schematics/table --prefix=app\n --name=basic-table --dataSource=clientSide --enable-search=false --enable-sort=false --pagingMode=pagination\n\nng g "./schematics/src/collection.json":table --force --path=demo/src/schematics/table --prefix=app\n --name=table-with-sort --dataSource=serverSide --enable-search=false --enable-sort=true --pagingMode=pagination\n\nng g "./schematics/src/collection.json":table --force --path=demo/src/schematics/table --prefix=app\n --name=table-with-search --dataSource=serverSide --enable-search=true --enable-sort=false --pagingMode=pagination\n\nng g "./schematics/src/collection.json":table --lint-fix --force --path=demo/src/schematics/table\n --name=table-with-pagination --prefix=app --dataSource=serverSide --pagingMode=pagination\n\nng g "./schematics/src/collection.json":table --lint-fix --force\n--name=table-with-selection  --path=demo/src/schematics/table --prefix=app --dataSource=serverSide --pagingMode=pagination --selectionMode=multi\n\nng g "./schematics/src/collection.json":table --lint-fix --force --path=demo/src/schematics/table --prefix=app\n --name=table-with-virtual-scroll --dataSource=serverSide --pagingMode=virtualScroll\n*/\nimport { Component } from "@angular/core";\n\nimport { SchematicsDocsComponentType } from "../utils/schematic-docs-cli-option/schematic-docs-cli-option.component";\n\n@Component({\n    selector: "nui-table-schematics-docs-example",\n    templateUrl: "table-schematic-example.component.html",\n    providers: [{provide: SchematicsDocsComponentType, useValue: SchematicsDocsComponentType.table }],\n})\nexport class TableSchematicExampleComponent {\n}\n'},"Fj+O":function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./filtered-view-table-with-custom-virtual-scroll-data";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithCustomVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithCustomVirtualScrollDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithCustomVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},FtKX:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport { NuiCheckboxModule, NuiExpanderModule, NuiPopoverModule } from "@nova-ui/bits";\n\nimport { CustomDataSourceFilterGroupCompositeComponent } from "./custom-data-source-filter-group.component";\nimport { CustomDataSourceFilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        CustomDataSourceFilterGroupsWrapperComponent,\n        CustomDataSourceFilterGroupCompositeComponent,\n    ],\n    exports: [\n        CustomDataSourceFilterGroupsWrapperComponent,\n        CustomDataSourceFilterGroupCompositeComponent,\n    ],\n})\n\nexport class CustomDataSourceFilterGroupCompositeModule {}\n'},FzcI:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-item-picker-composite">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},"GK/z":function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISelection,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-selection-data";\nimport { TableWithSelectionDataSource } from "./table-with-selection-data-source.service";\nimport { IServer, IServerFilters } from "./types";\n\n@Component({\n    selector: "app-table-with-selection",\n    templateUrl: "./table-with-selection.component.html",\n    styleUrls: ["./table-with-selection.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithSelectionDataSource,\n        },\n    ],\n})\nexport class TableWithSelectionComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: "name",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = ["name"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    // row selection\n    public selectedItems: IServer[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: ["ABERN-SVR-ATQU9404"],\n        exclude: [],\n    };\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithSelectionDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        // do something with the selection\n\n        // make component aware of the new selection value\n        // so it\'s displayed correctly\n        this.changeDetection.detectChanges();\n    }\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackBy(index: number, item: IServer) {\n        return item.name;\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},GQaK:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},GRWK:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-virtual-scroll-data";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE))\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithVirtualScrollDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},GRf4:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},GewB:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},GmLD:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithSortDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start))\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithSortDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},"H+UG":function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"@angular-extensions/model/model","title":"Generates filter-group component","type":"object","properties":{"path":{"type":"string","format":"path","description":"The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.","visible":false},"project":{"type":"string","description":"The name of the project","$default":{"$source":"projectName"}},"name":{"type":"string","description":"The name of the component","$default":{"$source":"argv","index":0},"x-prompt":"What name would you like to use for the component?"},"prefix":{"type":"string","description":"The prefix to apply to the generated component selector","alias":"p","oneOf":[{"maxLength":0},{"minLength":1,"format":"html-selector"}]},"flat":{"type":"boolean","description":"When true, creates the new files at the top level of the current project","default":false},"skipImport":{"type":"boolean","description":"When true, does not import this component into the owning NgModule","default":false},"selector":{"type":"string","format":"html-selector","description":"The HTML selector to use for this component"},"module":{"type":"string","description":"The declaring NgModule","alias":"m"},"export":{"type":"boolean","default":false,"description":"When true, the declaring NgModule exports this component"},"lintFix":{"type":"boolean","default":false,"description":"When true, applies lint fixes after generating the component"}},"additionalProperties":true,"required":["name"]}')},H14Q:function(e,t,n){"use strict";n.r(t),t.default='<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">{{selection | json}}</span>\n</div>\n<div class="app-filtered-view-table-with-selection-table__container">\n    <div class="app-filtered-view-table-with-selection-table-searchable__search">\n        <nui-search [value]="searchTerm"\n                    (search)="onSearch()"\n                    (cancel)="onSearchCancel()">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]="items"\n           [sortable]="true"\n           [sortedColumn]="sortedColumn"\n           (sortOrderChanged)="sortData($event)"\n           [(selection)]="selection"\n           (selectionChange)="onSelectionChanged($event)"\n           [selectable]="true"\n           [trackBy]="trackBy">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns" [rowObject]="row"></tr>\n    </table>\n\n    <footer class="app-filtered-view-table-with-selection-table-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},HA5u:function(e,t,n){"use strict";n.r(t),t.default='<div nui-busy [busy]="isBusy">\n    <nui-spinner size="large" i18n-message message="Loading..."></nui-spinner>\n    <div class="d-flex flex-row">\n        <nui-search class="d-flex justify-content-end app-search-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="!isBusy && (listItems$ | async).length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-search-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="filteringState.repeat?.itemsSource">\n        </nui-repeat>\n    </div>\n\n    <div class="d-flex flex-row">\n        <nui-paginator class="app-search-list-paginator"\n                       [(page)]="page"\n                       [pageSize]="pageSize"\n                       [pageSizeSet]="[10,20,30,40]"\n                       [total]="filteringState.paginator?.total"\n                       (pagerAction)="applyFilters()">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},HJ1J:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "nui-filter-group-composite-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\n\nexport class FilterGroupCompositeDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: IFilterGroupOption[]) {\n        this.selectedValues = selection.map(item => item.value);\n    }\n}\n'},HLGg:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SorterDirection,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-sort-data";\nimport { TableWithSortDataSource } from "./table-with-sort-data-source.service";\nimport { IServer, IServerFilters } from "./types";\n\n@Component({\n    selector: "app-table-with-sort",\n    templateUrl: "./table-with-sort.component.html",\n    styleUrls: ["./table-with-sort.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithSortDataSource,\n        },\n    ],\n})\nexport class TableWithSortComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: "name",\n        direction: SorterDirection.ascending,\n    };\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithSortDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},HgG7:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 400;\n\n"},HpFd:function(e,t,n){"use strict";function i(e){var t=e.split(/\r\n|[\n\r]/g),n=function(e){for(var t,n=!0,i=!0,r=0,o=null,a=0;a<e.length;++a)switch(e.charCodeAt(a)){case 13:10===e.charCodeAt(a+1)&&++a;case 10:n=!1,i=!0,r=0;break;case 9:case 32:++r;break;default:i&&!n&&(null===o||r<o)&&(o=r),i=!1}return null!==(t=o)&&void 0!==t?t:0}(e);if(0!==n)for(var i=1;i<t.length;i++)t[i]=t[i].slice(n);for(var o=0;o<t.length&&r(t[o]);)++o;for(var a=t.length;a>o&&r(t[a-1]);)--a;return t.slice(o,a).join("\n")}function r(e){for(var t=0;t<e.length;++t)if(" "!==e[t]&&"\t"!==e[t])return!1;return!0}function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=-1===e.indexOf("\n"),r=" "===e[0]||"\t"===e[0],o='"'===e[e.length-1],a="\\"===e[e.length-1],l=!i||o||a||n,s="";return!l||i&&r||(s+="\n"+t),s+=t?e.replace(/\n/g,"\n"+t):e,l&&(s+="\n"),'"""'+s.replace(/"""/g,'\\"""')+'"""'}n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}))},HvoV:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-basic-table__container {\n    overflow: auto;\n}\n\n'},I6Ka:function(e,t,n){e.exports=n("gSNO").Observable},IE32:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},IFBI:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-selection-table #child></app-filtered-view-table-with-selection-table>\n        </div>\n    </nui-panel>\n</div>\n'},IJza:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="nui-filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="nui-filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="nui-filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},IQI7:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-filtered-view-table-with-custom-virtual-scroll-table__container {\n    height: 400px;\n    border-color: lightgray;\n    overflow: auto;\n}\n\n.app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container {\n    height: 300px;\n}\n\n.app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer {\n    height: 28px;\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n}\n'},IicS:function(e,t,n){"use strict";n.r(t),t.default='import { IFilteringOutputs, IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n\n\nexport interface ExampleItem {\n    color: string;\n    status: string;\n}\n\nexport interface ICustomDSFilteredData {\n    filterGroupItems?: IFilterGroupItem[];\n    filteringState?: IFilteringOutputs;\n}\n'},InPD:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},IsRT:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.nui-filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},J2tR:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},JFia:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},JKDL:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},JNPp:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},JNgL:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\nimport {\n    RESULTS_PER_PAGE,\n} from "./virtual-scroll-list-data";\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class VirtualScrollListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value ?? { start : 0, end: 0};\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE))\n\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = VirtualScrollListDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},JRWH:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},JSmO:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},"Jh/2":function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Apollo } from "apollo-angular";\nimport { DocumentNode } from "graphql";\nimport gql from "graphql-tag";\nimport isArray from "lodash/isArray";\nimport isPlainObject from "lodash/isPlainObject";\nimport {\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersCollection,\n    ISubregion,\n    ITreeNode,\n} from "./types";\n\nconst nameFieldsProperties = ["name", "code", "__typename"];\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewWithTreeDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private apollo: Apollo\n    ) {\n        super();\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.Subregion;\n\n                return {\n                    tree: { itemsSource: this.buildTree(itemsSource) },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<ISubregion> {\n        const mainRequest = this.apollo.query<ISubregion>({query: this.generateQuery(filters)});\n\n        return mainRequest.pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(mainResponse => mainResponse.data),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({} as ISubregion);\n            })\n        );\n    }\n\n    private generateQuery(filters: IServerFilters): DocumentNode {\n        let languages = "";\n        let currencies = "";\n        let subregion = "";\n\n        filters.language?.value.forEach(i => languages += `{officialLanguages_some: {name: "${i}"}},`);\n        filters.currency?.value.forEach(i => currencies += `{currencies_some: {code: "${i}"}},`);\n        filters.subregion?.value.forEach(i => subregion += `{name: "${i}"},`);\n\n        const queryString = `query {\n          Subregion(filter: {AND: [{region: {name: "Americas"}}], ${subregion ? "OR: [" + subregion + "]" : ""}}) {\n            name,\n            countries${languages || currencies ? "(filter: {AND: [" + languages + currencies + "]})" : ""} {\n              name,\n              population,\n              officialLanguages {\n                name\n              },\n              currencies {\n                code\n              }\n            }\n          }\n        }`;\n\n        return gql`${queryString}`;\n    }\n\n    private buildTree(value: any): ITreeNode[] {\n        const data: ITreeNode[] = [];\n\n        for (const k in value) {\n            if (value.hasOwnProperty(k) && k !== "__typename") {\n                const nodeValue: ITreeNode = value[k];\n                const node: ITreeNode = {} as ITreeNode;\n\n                if (isArray(nodeValue)) {\n                    node.name = `${k}`;\n                    node.children = this.buildTree(nodeValue);\n                } else if (isPlainObject(nodeValue)) {\n                    node.name = nodeValue.name || nodeValue.code || `${k}`;\n                    const hasChildren = Object.keys(nodeValue).filter((key: any) => !nameFieldsProperties.includes(key)).length;\n                    if (hasChildren) {\n                        node.children = this.buildTree(nodeValue);\n                    }\n                } else {\n                    if (!nameFieldsProperties.includes(k)) {\n                        node.name = `${k}`;\n                        node.children = [{name: nodeValue}];\n                    }\n                }\n\n                if (Object.keys(node).length) {\n                    data.push(node);\n                }\n            }\n        }\n\n        return data;\n    }\n\n}\n'},JstY:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},K088:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},KFmY:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},KIPM:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},KKwP:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-group-composite" *ngIf="hasFilterOptions()">\n    <nui-expander [open]="filterGroupItem?.expanded" (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="nui-filter-group-composite__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group\n            [values]="filterGroupItem.selectedFilterValues"\n            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)"\n                          class="nui-checkbox--justified">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between nui-filter-group-composite__checkbox">\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="nui-filter-group-composite__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},KWxe:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { BasicFilterGroupCompositeComponent } from "../basic-filter-group.component";\n\n@Component({\n    selector: "app-basic-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\n\nexport class BasicFilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(BasicFilterGroupCompositeComponent) filterGroups: QueryList<BasicFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: BasicFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},KXSm:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},KdL1:function(e,t,n){"use strict";n.r(t),t.default='import { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    ISelection,\n    nameof,\n    TableComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "../filtered-view-table-with-virtual-scroll-selection-data";\nimport { FilteredViewTableWithVirtualScrollSelectionDataSource } from "../filtered-view-table-with-virtual-scroll-selection-data-source.service";\nimport { IServer, IServerFilters } from "../types";\n\n@Component({\n    selector: "app-filtered-view-table-with-virtual-scroll-selection-table",\n    templateUrl: "./filtered-view-table.component.html",\n    styleUrls: ["./filtered-view-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    // row selection\n    public selectedItems: IServer[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: ["ABERN-SVR-ATQU9404"],\n        exclude: [],\n    };\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollSelectionDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: {componentInstance: this.viewportManager},\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => !this.items.length || this.items.length < this.totalItems),\n                tap(() => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                switchMap(() => this.dataSource.outputsSubject.pipe(\n                    tap((data: IFilteringOutputs) => {\n                        // update the list of items to be rendered\n                        const items = data.repeat?.itemsSource || [];\n\n                        // after receiving data we need to append it to our previous fetched results\n                        this.items = this.items.concat(items);\n                        this.totalItems = data.paginator?.total || 0;\n                        this.changeDetection.detectChanges();\n                    })\n                )\n            ),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        // do something with the selection\n\n        // make component aware of the new selection value\n        // so it\'s displayed correctly\n        this.changeDetection.detectChanges();\n    }\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackBy(index: number, item: IServer) {\n        return item.name;\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n'},KjZp:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},KnOw:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},Kvzu:function(e,t,n){"use strict";n.r(t),t.default='import { ArrayDataSource } from "@angular/cdk/collections";\nimport { NestedTreeControl } from "@angular/cdk/tree";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n} from "@angular/core";\nimport {\n    DataSourceService, expand,\n    IMenuItem,\n    INovaFilteringOutputs,\n} from "@nova-ui/bits";\nimport {\n    Subject,\n} from "rxjs";\nimport { takeUntil, tap } from "rxjs/operators";\n\nimport { FilteredViewWithTreeDataSource } from "../filtered-view-with-tree-data-source.service";\nimport {\n    IServer,\n} from "../types";\n\n@Component({\n    selector: "app-filtered-view-tree",\n    templateUrl: "./filtered-view-tree.component.html",\n    styleUrls: ["./filtered-view-tree.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [expand],\n})\nexport class FilteredViewTreeComponent implements OnDestroy, AfterViewInit {\n\n    treeControl = new NestedTreeControl<any>((node) => node.children);\n    dataSourceTree: ArrayDataSource<any>;\n\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n    public items: IServer[] = [];\n    public filteringState: INovaFilteringOutputs = {};\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewWithTreeDataSource<IServer>,\n        private cdRef: ChangeDetectorRef\n    ) {\n    }\n\n    async ngAfterViewInit() {\n        this.dataSource.outputsSubject.pipe(\n            tap((data: any) => {\n                // update the list of items to be rendered\n                this.dataSourceTree = new ArrayDataSource(data.tree.itemsSource);\n                this.cdRef.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    hasChild = (_: number, node: any) => !!node.children && node.children.length > 0;\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},KwWX:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTableWithSelectionComponent } from "./filtered-view-table-with-selection.component";\nimport { FilteredViewTableComponent } from "./filtered-view-table/filtered-view-table.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithSelectionModule {}\n'},"L+8p":function(e,t,n){"use strict";n.r(t),t.default='<h5>{{name}}</h5>\n<div [ngSwitch]="name">\n    <ng-container *ngSwitchCase="\'selectionMode\'">\n        <p>\n            This string option allows you to select whether to enable selection and, if so, what type. Default is <code>none</code>.\n            The values currently supported for this option are listed{{forComponent ? "" : " below for each type of component"}}:\n        </p>\n        <ng-container *ngTemplateOutlet="helpRenderer;context:{tpl: selectionModeTpl, types: [componentType.list, componentType.table]}"></ng-container>\n        <ng-template #selectionModeTpl let-type=type>\n            <ul>\n                <li>\n                    <nui-expander [open]="false" header="none">\n                        <p>Table rows are not selectable.</p>\n                    </nui-expander>\n                </li>\n                <li>\n                    <nui-expander [open]="false" header="multi">\n                        <p>This option enables the possibility to select one or more rows in the {{forComponent ? forComponent : "component"}}.</p>\n                        <ng-container *ngIf="type == componentType.table">\n                            <p>To give users the ability to select rows, do the following:</p>\n                            <ol>\n                                <li>\n                                    Set the <code>selectable</code> input to <code>true</code>.\n                                </li>\n                                <li>\n                                    Bind a trackBy handler to the\n                                    <code><a href="https://material.angular.io/cdk/table/overview#connecting-the-table-to-a-data-source" target="_blank">trackBy</a></code>\n                                    property inherited from\n                                    <code><a href="https://material.angular.io/cdk/table/overview" target="_blank">CdkTable</a></code>.\n                                    The trackBy handler should return a value that uniquely identifies each item in the table.\n                                    <br>\n                                    <strong>Note:</strong> When <code>trackBy</code> is used, the\n                                    <code><a href="../interfaces/ISelection.html" target="_blank">ISelection</a></code> will consist\n                                    of the <code>trackBy</code> property values only and will not contain entire representations of the selected\n                                    objects. As a result, it may be beneficial to keep a separate index that maps the selected item IDs\n                                    to the corresponding objects.\n                                </li>\n                                <li>\n                                    Pass the row object to <code>nui-row</code> using the <code>rowObject</code> input.\n                                </li>\n                                <li>\n                                    Bind to the selection event using the <code>(rowsSelected)</code> output. The event\'s payload is an\n                                    <code><a href="../interfaces/ISelection.html" target="_blank">ISelection</a></code>\n                                    object which should be converted to selected items by calling the <code>getSelectedItems</code>\n                                    function on the\n                                    <code><a href="../injectables/SelectorService.html" target="_blank">SelectorService</a></code>.\n                                </li>\n                            </ol>\n                            <p>\n                                <b>Note 1:</b>To preselect rows in a table or to programmatically change the selection you can use the\n                                <code>selection</code> input which is of type\n                                <code><a href="../interfaces/ISelection.html" target="_blank">ISelection</a></code>.\n                            </p>\n                            <p>\n                                <b>Note 2:</b> If you need to use <code>nui-paginator</code> with row selection, you need to pass the total number\n                                of items on all pages into the <code>totalItems</code> input.\n                            </p>\n                            <nui-message [allowDismiss]=false type="warning">\n                                <p>\n                                    <strong>Important:</strong> When working with data that\'s coming across the wire, it\'s necessary\n                                    to bind a <code>trackBy</code> handler as mentioned above. This will allow selection tracking to be based on\n                                    the identifier returned by the <code>trackBy</code> handler. If a <code>trackBy</code> is not provided, comparisons to\n                                    determine whether items are selected will be based on object reference which of course\n                                    won\'t work with items coming from a backend.\n                                </p>\n                                Take a look at the source on the "Selection" tab example to see how.\n                            </nui-message>\n                        </ng-container>\n                    </nui-expander>\n                </li>\n                <li *ngIf="type == componentType.list">\n                    <nui-expander [open]="false" header="radio">\n                        <p>Enables single-selection with deselection not allowed.</p>\n                    </nui-expander>\n                </li>\n                <li *ngIf="type == componentType.list">\n                    <nui-expander [open]="false" header="single">\n                        <p>Enables single-selection with no radio buttons and deselection allowed.</p>\n                    </nui-expander>\n                </li>\n                <li *ngIf="type == componentType.list">\n                    <nui-expander [open]="false" header="singleWithRequiredSelection">\n                        <p>Enables single-selection with no radio buttons and deselection not allowed.</p>\n                    </nui-expander>\n                </li>\n                <li *ngIf="type == componentType.list">\n                    <nui-expander [open]="false" header="radioWithNonRequiredSelection">\n                        <p>Enables single-selection with deselection allowed.</p>\n                    </nui-expander>\n                </li>\n            </ul>\n        </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'pagingMode\'">\n        <p>\n            This string option allows you to select the paging mode of the data presentation. Default is\n            <code>virtualScroll</code>. The values currently supported for this option are:\n        </p>\n        <ul>\n            <li>\n                <nui-expander [open]="false" header="virtualScroll">\n                    <p>\n                        This setting allows us to use\n                        <a href="https://material.angular.io/cdk/scrolling/overview">CDK Virtual Scroll</a>\n                        by setting <code>pagingMode</code> to <code>virtualScroll</code>.\n                    </p>\n                    <ng-container *ngTemplateOutlet="helpRenderer;context:{tpl: pagingModeVSTpl, types: [componentType.list, componentType.table]}"></ng-container>\n                    <ng-template #pagingModeVSTpl let-type=type>\n                        <ng-container *ngIf="type == componentType.list">\n                            <p>\n                                The <code>nui-repeat</code> used inside this schematic allows you to manage the\n                                virtual viewport by exposing its <code>{{getRepeatPropKey(\'viewportRef\')}}</code>\n                                property which is an instance of\n                                <code><a href="https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport">CdkVirtualScrollViewport</a></code>.\n                                The example below uses Nova\'s\n                                <code><a href="/injectables/VirtualViewportManager.html">VirtualViewportManager</a></code>\n                                to handle the viewport management duties via the\n                                <code>{{getRepeatPropKey(\'viewportRef\')}}</code> property.\n                            </p>\n                        </ng-container>\n                        <ng-container *ngIf="type == componentType.table">\n                            The <code>nui-table</code> used inside this schematic API is using\n                            <a href="../directives/TableVirtualScrollLinearDirective.html#info">nui table virtual scroll directive</a>. It makes it possible to\n                            load items in chunks. The amount of items loaded per fetch can be configured by setting the <code>range</code> variable.\n\n                            <nui-message [allowDismiss]=false type="warning">\n                                The following examples use custom Nova <a href="../directives/TableVirtualScrollLinearDirective.html#info">TableVirtualScrollLinearDirective</a> to perform scrolling\n                                based on scrolling indexes within the virtual scroll viewport. Customers are free to create their own directive and\\or scrolling strategy if they want\n                                custom behavior.\n                            </nui-message>\n                            <nui-message [allowDismiss]=false type="warning">\n                                There are some known <strong>technical limitations</strong>:<br />\n                                <ol>\n                                    <li>\n                                        Data for the table should be provided in a DataSource service\n                                    </li>\n                                    <li>\n                                        Each datasource should have a page counter, to enable items prefetching (in case the viewport size is larger that the chosen items per page selected)\n                                    </li>\n                                    <li>\n                                        <a href="https://github.com/angular/components/issues/10113">Angular doesn\'t subport virtual scrolling over a list of items whose size is\n                                            not known and needs to be measured</a>\n                                    </li>\n                                    <li>\n                                        When CDK Viewport is used in context of non-visible dom elements (eg: Tabs, Accordion) virtual scroll will not work properly.\n                                        The solution is not do initiate the viewport until it is visible using *ngIf, *ngSwitch.\n                                    </li>\n                                </ol>\n                            </nui-message>\n                        </ng-container>\n\n                        <ng-container *ngIf="type == componentType.table">\n                            <p>\n                                To make the scrolling working with <code>nui-table</code> start with declaring the following variables:<br /><br />\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.vars}}</nui-example-code><br />\n\n                            <p>\n                                Import <a href="../injectables/VirtualViewportManager.html" target="_blank">VirtualViewportManager</a>\n                                (provides a mechanism for sequencing the rendered range stream emitted from the CDK Viewport into distinct page ranges):<br />\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.viewportManagerImport}}</nui-example-code><br />\n                            <p>\n                                Provide VirtualViewportManager on a component level providers:<br />\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.provideViewport}}</nui-example-code><br />\n\n                            <p>\n                                Inject VirtualViewportManager type in the constructor:<br />\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.injectViewport}}</nui-example-code><br />\n\n                            <p>\n                                Use the Angular ViewChild decorator to get a reference to the scrolling viewport (CdkVirtualScrollViewport):<br />\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.viewChildren}}</nui-example-code><br />\n\n                            <p>\n                                Register the virtual scroll filter on dataSource:\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.registerScroll}}</nui-example-code><br />\n\n                            <p>\n                                Optionally, subscribe to the <code>busy</code> state changes:\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.oninitSubscribeBusy}}</nui-example-code><br />\n                            <p>\n                                Start setting up the <code>ngAfterViewInit()</code> lifecycle hook:<br />\n                            </p>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.ngAfterViewInitStart}}</nui-example-code><br />\n\n                            Setting up the viewportManager listener and dataSource handler in the <code>ngAfterViewInit</code>:\n                            <ol>\n                                <li>Use the <strong>setViewport</strong> method to initialize <code>VirtualViewportManager</code>.</li>\n                                <li>Chain the <strong>observeNextPage$</strong> method with the required parameters (<a href="../interfaces/IVirtualPageConfig.html">IVirtualPageConfig)</a>.</li>\n                                <li>\n                                    <b><i>Optional</i></b> You may like to ignore <code>VirtualViewportManager</code> emissions when the <code>totalItems</code> number is reached.\n                                    To do this, you can use the RxJS <code>filter</code> operator as in example.<br />\n                                    <b>Note:</b> <code>VirtualViewportManager</code> has its own mechanism of stopping when the length of the last received page is less than the page size requested. <br />\n                                    In the example, we use the <code>filter</code> operator to avoid making the additional requests when the dataset\'s last page has enough data.\n                                </li>\n                                <li>Finally, call <code>datasource.applyFilters()</code> to trigger fetching of the data.</li>\n                                <li>\n                                    To avoid having two listeners (the next page observer and the data source\'s outputsSubject), we can combine them together into one stream <br />\n                                    with the RxJS <code>switchMap</code> operator. In the example, we map to an inner subscription which contains all new data related operations: <br />\n                                    <code>totalItems</code> update, assigning new data, and triggering the change detector. <br />\n                                    <b>Alternative</b>: You can subscribe to the <code>this.dataSource.outputsSubject</code>code> in the ngOnInit method using the same RxJS pipe operators.\n                                </li>\n                            </ol>\n                            <nui-example-code language="typescript">{{tableScrollingSetup.ngAfterViewInitViewport}}</nui-example-code><br />\n                        </ng-container>\n                    </ng-template>\n                    <p>\n                        Although the generated code of the schematic already takes care of basic setup\n                        steps, please make sure while customizing this feature for your own use case to\n                        do the following on the component:\n                    </p>\n                    <ol>\n                        <li *ngIf="for(componentType.list)">\n                            <strong>For <code>list</code>\'s only</strong>: set the <code>itemSize</code> component input to a valid value. It\'s\n                            mandatory to have this input set as there is a technical limitation on the\n                            Angular side. If the input is omitted, you\'ll see this error message in the\n                            console output:\n                            <mark>\n                                "ERROR: To use virtual scroll feature please set correct value to the\n                                \'itemSize\' input!"\n                            </mark>\n                        </li>\n                        <li>\n                            Set the <code>height</code> of the component element (either through a\n                            css/less file or inline in the ng-container). This sets the viewport for the\n                            virtual scroll. If this action is omitted, the viewport will have a height of\n                            <code>0px</code> and no content will be visible on the page.\n                        </li>\n                    </ol>\n\n                    <nui-message [allowDismiss]="false" type="warning">\n                        <ol>\n                            <li>\n                                If the user filters the results in some way, say with a search box, make sure to\n                                reset progress on the VirtualViewportManager before applying the filters.\n                            </li>\n                            <li>\n                                Due to a <a href="https://github.com/angular/components/issues/13981" target="_blank">known\n                                CDK issue</a>,\n                                make sure that the <code>nui-repeat</code> component hosting the virtual scroll is\n                                visible\n                                in order for the virtual scroll functionality to work properly.\n                            </li>\n                        </ol>\n                    </nui-message>\n                </nui-expander>\n            </li>\n            <li>\n                <nui-expander [open]="false" header="pagination">\n                    Data is displayed using standard pagination with a <code>nui-paginator</code> component.\n                    <p>\n                        To enable pagination, do the following:\n                    </p>\n                    <ol>\n                        <li>\n                            Provide a service that performs filtering (pagination is considered to be a form of\n                            filtering in Nova). There is a default service, <a target="_blank" href="../injectables/ClientSideDataSource.html">\n                            <code>ClientSideDataSource</code></a>, which provides default methods for working with\n                            filters. In case you need something special (such as filtering on a back-end or more complex\n                            sorting capability), you may extend this service and override its methods.\n                        </li>\n                        <li>\n                            In your component\'s constructor, provide an initial dataset via the <code>setData</code>\n                            method\n                            of\n                            <a target="_blank" href="../injectables/ClientSideDataSource.html">\n                                <code>ClientSideDataSource</code></a>.\n                        </li>\n                        <li>\n                            Get the paginator component via <code>@ViewChild</code>.\n                        </li>\n                        <li>\n                            In your component\'s <code>ngAfterViewInit</code>, pass the paginator to the\n                            <code>componentTree</code>\n                            property of <code>ClientSideDataSource</code>. Then, invoke the\n                            <code>applyFilters</code>\n                            method of\n                            <a target="_blank" href="../injectables/ClientSideDataSource.html">\n                                <code>ClientSideDataSource</code></a>. And, lastly, subscribe to\n                            <code>outputsSubject</code> on\n                            <a target="_blank" href="../injectables/ClientSideDataSource.html">\n                                <code>ClientSideDataSource</code></a> which will return an <a target="_blank"\n                                                                                                  href="../interfaces/INovaFilteringOutputs.html">\n                            <code>INovaFilteringOutputs</code></a> object after each change in pagination.\n                        </li>\n                        <li>\n                            In the <code>outputsSubject</code> subscription handler, overwrite your\n                            <code>dataSource</code>\n                            with the\n                            <code>itemsSource</code> you receive and pass the number of pages to the paginator\'s\n                            <code>total</code> input.\n                        </li>\n                        <li>\n                            Bind to the paginator\'s <code>pagerAction</code> output, and invoke the\n                            <code>applyFilters</code> method of\n                            <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n                            in the output handler.\n                        </li>\n                        <li>\n                            Unsubscribe from the <code>outputsSubject</code> in your component\'s\n                            <code>ngOnDestroy</code>\n                            method.\n                        </li>\n                    </ol>\n                </nui-expander>\n            </li>\n            <li>\n                <nui-expander [open]="false" header="none">\n                    All data is displayed at once.\n                </nui-expander>\n            </li>\n        </ul>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'dataSource\'">\n        <p>\n            This string option allows you to select the way data is retrieved for displaying in the {{forComponent ? forComponent : "component"}}.\n            Default is <code>serverSide</code>. The values currently supported for this option are:\n        </p>\n        <nui-expander [open]="false" header="serverSide">\n            The generated data source will retrieve data remotely from a server side API, usually achieved by extending\n            the\n            <a target="_blank" href="../injectables/DataSourceService.html"><code>DataSourceService</code></a> class.\n            <nui-message [allowDismiss]="false" type="info">\n                When this option is chosen, the schematic automatically generates a loading indicator\n                (<code>nui-busy</code>) which is displayed as an overlay on the list during data\n                retrieval.\n            </nui-message>\n        </nui-expander>\n        <nui-expander [open]="false" header="custom">\n            <p>No data source will be generated, allowing you to create one from scratch.</p>\n        </nui-expander>\n        <nui-expander [open]="false" header="clientSide">\n            Generated data source will retrieve data locally from a client side source, usually via the\n            <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n            class.\n        </nui-expander>\n        <nui-expander [open]="false" header="none">\n            No data source will be generated and no data source related features\n            such as sorting or search will be added to the generated code.\n        </nui-expander>\n        <div>\n            <p>\n                For additional information on how the data source setup is done please consult the paragraphs below:\n            </p>\n            <nui-expander [open]="false" header="DataSource Setup">\n                <p>Both local and remote setup are feasible for custom data sources, while the remote setup is feasible\n                    for\n                    the <code>serverSide</code> option.</p>\n                <nui-expander [open]="false" header="Remote DataSource Setup">\n                    <div>\n                        <p>\n                            To make component work with remote backend, it\'s advised to use the Nova\n                            <code>DataSourceService</code>\n                            which can be imported from\n                            <code>"@nova-ui/bits"</code>.\n                        </p>\n                        <p>Create the <code>@Injectable</code> class that extends the data source service mentioned\n                            above.\n                        </p>\n                        <nui-example-code language="typescript">{{dataSourceSetup.extendDS}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            Define the following fields to work with the data source.<br/>\n                            <mark><sup><strong>Hint!</strong></sup> The list below is a required minimum. Feel free to\n                                define other fields required to work with your API.\n                            </mark>\n                        </p>\n                        <br/>\n                        <code><b>url</b></code> - This is where you store your API url. <br/>\n                        <code><b>cache</b></code> - This is where you store the cached list data. Because we fetch the\n                        data\n                        in chunks, every time a user fetches a new chunk of data\n                        it is appended to that array immediately, and then the updated array is sent to the list.<br/>\n                        <code><sup>(Optional)</sup><b>busy</b></code> - This sets the busy state. The state is\n                        considered\n                        busy only when the data is being fetched, and it\'s used to display loading indicator\n                        components on the view while the data is being fetched. This is optional.\n                        <mark>Consult with your UX team about using busy state and busy components in your list</mark>\n                        .\n                        <nui-example-code language="typescript">{{dataSourceSetup.defineFields}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            Create a method that will fetch the data and perhaps convert the response to an expected\n                            format.\n                            It should have two parameters, <code>start</code>\n                            and <code>end</code>, which are the current values of the scrolling indices within the\n                            scrolling\n                            viewport. The calculation <code>end - start</code> will give you the number\n                            of items to fetch. If your API supports returning data by page, the <code>page</code>\n                            variable\n                            will be useful in that case, but if not, use the <code>end</code> index\n                            as the starting point for the next chunk of data.<br/>\n                            Next, prepare the URI to be fetched. It can, and probably will, vary by API implementation.\n                            Your\n                            goal here is to return the requested number of items.\n                        </p>\n                        <nui-example-code language="typescript">{{fetch}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            Afterwards, when you get the data back as a response, convert the returned dataset into the\n                            structure expected by the\n                            component. The received data will be concatenated with <code>this.cache</code>,\n                            so\n                            the dataset must be in the format expected by the\n                            list\'s <code>dataSource</code> input in order to render the items correctly.\n                        </p>\n                        <nui-example-code language="typescript">{{dataSourceSetup.getData}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            The next step will be to implement the <code>getFilteredData</code> method of the <code>DataSourceService</code>.\n                            This method is called whenever the\n                            <code>applyFilters</code> method of current data source is called in the code, so this is\n                            where\n                            data operations will be triggered.\n                            Optionally, notify the <code>busy</code> observable to toggle the busy state to "on". Then,\n                            retrieve the <code>virtualScroll</code> from the available filters\n                            passed into the method as an argument. The <code>virtualScroll</code> filter is registered\n                            with\n                            the data source farther down in the code listing of the list implementation.<br/><br/>\n\n                            From the <code>virtualScroll</code> filter you can retrieve the <code>start</code> and\n                            <code>end</code> indices for the scrolling viewport.\n                            Use them to fetch to correct amount of data. Then, update the cache with the items you just\n                            got\n                            from the server, and return the data in the format that would\n                            contain AT LEAST the total number of items the API is able to return and the list\'s cached\n                            data.\n                        </p>\n                        <nui-example-code language="typescript">{{dataSourceSetup.getFilteredData}}</nui-example-code>\n                        <br/>\n\n                        <p>All data source preparation steps are finished at this point.</p>\n                    </div>\n                </nui-expander>\n                <nui-expander [open]="false" header="Local DataSource Setup">\n                    <p>\n                        To make the component work with a local API it\'s advised\n                        to extend <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n                        which can be imported from <code>"@nova-ui/bits"</code>.\n                    </p>\n                </nui-expander>\n            </nui-expander>\n        </div>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'enableSearch\'">\n        <p>\n            This boolean option allows you to enable/disable search functionality. Default is\n            <code>true</code>.\n        </p>\n        <p>\n            To subscribe to the search events, use search\'s <code>onSearch</code> or <code>inputChange</code>\n            (and, if needed, <code>onSearchCancel</code>) hooks to invoke the <code>applyFilters</code>\n            method of the <a target="_blank" href="../injectables/DataSourceService.html"><code>DataSourceService</code></a>\n            class\n            in order to perform the actual search.\n        </p>\n        <nui-message [allowDismiss]="false" type="warning">\n            <ol>\n                <li>\n                    For remote data sources, which usually extend or use directly <a target="_blank" href="../injectables/ServerSideDataSource.html">\n                    <code>ServerSideDataSource</code></a>, if you want searches to be performed as the user types, it\'s advised to\n                    add a debounce to the filtering to avoid stressing out the backend API by using\n                    <code>pipe(debounceTime(Integer_Value))</code> between search subscriptions.\n                </li>\n                <li>\n                    For local data sources, which usually extend or use directly <a target="_blank" href="../injectables/ClientSideDataSource.html">\n                    <code>ClientSideDataSource</code></a>, you can use the <code>setSearchProperties</code> method of\n                    <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n                    to specify which columns the search should apply to; if not set, the search will be performed on all columns.\n                </li>\n            </ol>\n        </nui-message>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'enableSort\'">\n        <p>\n            This boolean option allows you to enable/disable sorting functionality. Default is\n            <code>true</code>.\n        </p>\n        <ng-container *ngIf="for(componentType.table)">\n            <p>To use sorting in a table you need to:</p>\n            <ol>\n                <li>Set <code>[sortable]="true"</code> on <code>nui-table</code>.</li>\n                <li>Get table component via <code>@ViewChild</code>.</li>\n                <li>Set up the filtering component tree. To get table filtering components use <code>getFilterComponents()</code>\n                    function of table component.\n                    This will give filtering mechanism an ability to receive data for sorting at the moment you\'ll call\n                    <code>applyFilters</code> method of <a target="_blank"\n                                                           href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>.\n                </li>\n                <li>Set <code>[isColumnSortingDisabled]="true"</code> on the table-header-cell to prevent table from\n                    sorting by this property.\n                </li>\n                <li>Subscribe to <code>outputsSubject</code> on <a target="_blank"\n                                                                   href="../injectables/ClientSideDataSource.html">\n                    <code>ClientSideDataSource</code></a> which will return you <a target="_blank"\n                                                                                       href="../interfaces/INovaFilteringOutputs.html">\n                    <code>INovaFilteringOutputs</code></a> object after each change of sorting.\n                </li>\n                <li>In the <code>outputsSubject</code> subscription handler, overwrite your <code>dataSource</code> with\n                    the <code>itemsSource</code> you receive.\n                </li>\n                <li>On <code>(sortOrderChanged)</code> event call <code>applyFilters</code> method of\n                    <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>.\n                    <code>(sortOrderChanged)</code> event will emit you <a target="_blank"\n                                                                           href="../interfaces/ISortedItem.html">\n                        <code>ISortedItem</code></a> object.\n                </li>\n                <li>Unsubscribe from the <code>outputsSubject</code> in your component\'s <code>ngOnDestroy</code>\n                    method.\n                </li>\n            </ol>\n            <nui-message [allowDismiss]="false" type="info">\n                <ul>\n                    <li>\n                        If you need to apply a more complicated sorting algorithm, you can extend\n                        <code>ClientSideDataSource</code> and override its sorting methods.\n                    </li>\n                    <li>\n                        If you need to sort some column by default (or programmatically), you can do that by passing <a\n                        target="_blank" href="../interfaces/ISortedItem.html">\n                        <code>ISortedItem</code></a> to <code>[sortingColumn]</code> input of the table.\n                    </li>\n                </ul>\n            </nui-message>\n        </ng-container>\n    </ng-container>\n\n    <ng-container *ngSwitchCase="\'chips\'">\n        <p>\n            This boolean option allows you to enable/disable chips functionality. Default is\n            <code>true</code>.\n        </p>\n    </ng-container>\n\n    <ng-container *ngSwitchDefault>\n        <ng-content></ng-content>\n    </ng-container>\n</div>\n\n<ng-template #helpRenderer let-types=types let-tpl=tpl>\n    <ng-container [ngSwitch]="forComponent ? forComponent : \'shared\'">\n        <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet="tpl;context:{type: forComponent}"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase="\'shared\'">\n            <ul>\n                <li *ngFor="let type of types">\n                    <nui-expander [open]="false" header="{{type}}">\n                        <ng-container *ngTemplateOutlet="tpl;context:{type: type}"></ng-container>\n                    </nui-expander>\n                </li>\n            </ul>\n        </ng-container>\n    </ng-container>\n</ng-template>\n'},LCrf:function(e,t,n){"use strict";n.r(t),t.default='import { ScrollingModule } from "@angular/cdk/scrolling";\nimport { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTableWithCustomVirtualScrollComponent } from "./filtered-view-table-with-custom-virtual-scroll.component";\nimport { FilteredViewTableComponent } from "./filtered-view-table/filtered-view-table.component";\n\n@NgModule({\n    imports: [\n        ScrollingModule,\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithCustomVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithCustomVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithCustomVirtualScrollModule {}\n'},LHP3:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},M7Gr:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-table-with-custom-virtual-scroll__container {\n    height: 400px;\n    border-color: lightgray;\n    overflow: auto;\n}\n\n.app-table-with-custom-virtual-scroll-searchable__search {\n    max-width: 350px;\n    margin-bottom: @nui-space-xs;\n    margin-left: auto;\n}\n\n.app-table-with-custom-virtual-scroll-scrolling-container {\n    height: 300px;\n}\n\n.app-table-with-custom-virtual-scroll-scrolling-footer {\n    height: 28px;\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n}\n'},MGdW:function(e,t,n){"use strict";n.r(t),t.default='import { Component, Input, OnInit } from "@angular/core";\n\n@Component({\n    selector: "nui-schematic-json",\n    template: `\n        <div>\n            <code>Schema.json <b>options:</b></code>\n        </div>\n        <div *ngFor="let item of schemaViewData | keyvalue"\n                class="d-inline-block p-2">\n            <nui-popover [template]="popoverWithBasicUsage"\n                            placement="top">\n                <span class="nui-text-default--hoverable">{{item.key}}</span>\n            </nui-popover>\n            <ng-template #popoverWithBasicUsage>\n                <div *ngFor="let field of fieldsToDisplay">\n                    <ng-container *ngIf="item.value[field] !== undefined">\n                        <div class="nui-text-default">\n                            <i style="font-weight: bold">{{ field }}: </i> <span>{{item.value[field]}}</span>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-template>\n        </div>\n    `,\n})\nexport class SchematicJsonComponent implements OnInit {\n    // Folder from where schema.json should be taken\n    @Input() schematicFolderName: string;\n\n    public schemaViewData: any = {};\n    public fieldsToDisplay: Array<string> = ["description", "type", "enum", "alias", "default"];\n\n    ngOnInit() {\n       const schemaJson = require(`../../../../schematics/src/${this.schematicFolderName}/schema.json`);\n       this.fillViewData(schemaJson.properties);\n    }\n\n    private fillViewData(schemaJsonFields: any) {\n        Object.keys(schemaJsonFields).forEach(fieldName => {\n            const { description, type, enum: enumField, default: defaultField, alias: aliasField } = schemaJsonFields[fieldName];\n            this.schemaViewData[fieldName] = {\n                description,\n                type,\n                enum: enumField && enumField.join(", "),\n                default: defaultField,\n                alias: aliasField,\n            };\n        });\n    }\n}\n'},MOcu:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    LocalFilteringDataSource,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\nimport {\n    Subject,\n} from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from "../filtered-view-with-list-data";\nimport {\n    IServer,\n    IServerFilters,\n} from "../types";\n\n@Component({\n    selector: "app-filtered-view-with-list-list",\n    templateUrl: "./filtered-view-list.component.html",\n    styleUrls: ["./filtered-view-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListComponent implements AfterViewInit, OnDestroy {\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n'},Mheg:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="nui-filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="nui-filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="nui-filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},Mk1R:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-with-table-table #child></app-filtered-view-with-table-table>\n        </div>\n    </nui-panel>\n</div>\n'},Mkoz:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},Ml33:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 400;\n\n"},MstA:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},MtIq:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-filtered-view-table-with-selection-table__container {\n    overflow: auto;\n}\n\n.app-filtered-view-table-with-selection-table-searchable__search {\n    max-width: 350px;\n    margin-bottom: @nui-space-xs;\n    margin-left: auto;\n}\n\n.app-filtered-view-table-with-selection-table-scrolling-footer {\n    height: 28px;\n}\n'},NIVI:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},NMLx:function(e,t,n){"use strict";n.r(t),t.default='<h1>\n    bits schematics\n</h1>\n<div>\n    All schematics work in similar way. To use them, you can call it by first doing <code>ng add @nova-ui/bits</code>\n    then <code>ng g @nova-ui/bits:SCHEMATICNAME</code> and add option, available for each schematic.\n    <b>Note:</b> for most of the schematics, name can be set without specifying option, just type it as the first argument in command line.\n</div>\n\n<div>\n    <h2>Ng-add schematic guide</h2>\n    <p>Bootstraps nova-composites for consumption in your project. Adds it package.json and does <code>npm install</code>.</p>\n    <div *ngFor="let key of objectKeys(addJsonScheme)">\n        <nui-expander [header]="key">\n            <div><i>Description: </i><span>{{addJsonScheme[key].description}}</span></div>\n            <div><i>Type: </i><span>{{addJsonScheme[key].type}}</span></div>\n            <div *ngIf="addJsonScheme[key].enum"><i>Enum: </i><span>{{addJsonScheme[key].enum}}</span></div>\n            <div *ngIf="addJsonScheme[key].alias"><i>Alias: </i><span>{{addJsonScheme[key].alias}}</span></div>\n            <div *ngIf="addJsonScheme[key].default"><i>Default: </i><span>{{addJsonScheme[key].default}}</span></div>\n        </nui-expander>\n    </div>\n</div>\n<div>\n    <h2>Layout schematic guide</h2>\n    <p>Use <code>ng g @nova-ui/bits:layout</code> to generate basic layout example that can be used in you project out of the box.</p>\n    <p>Use the following options in the command line to modify schematic\'s execution:</p>\n    <div *ngFor="let key of objectKeys(layoutJsonScheme)">\n        <nui-expander [header]="key">\n            <div><i>Description: </i><span>{{layoutJsonScheme[key].description}}</span></div>\n            <div><i>Type: </i><span>{{layoutJsonScheme[key].type}}</span></div>\n            <div *ngIf="layoutJsonScheme[key].enum"><i>Enum: </i><span>{{layoutJsonScheme[key].enum}}</span></div>\n            <div *ngIf="layoutJsonScheme[key].alias"><i>Alias: </i><span>{{layoutJsonScheme[key].alias}}</span></div>\n            <div *ngIf="layoutJsonScheme[key].default"><i>Default: </i><span>{{layoutJsonScheme[key].default}}</span></div>\n        </nui-expander>\n    </div>\n</div>\n<div>\n    <h2>Table schematic guide</h2>\n    <p>In your command line, type <code>ng g @nova-ui/bits:table</code>to generate table.</p>\n    <div *ngFor="let key of objectKeys(tableJsonScheme)">\n        <nui-expander [header]="key">\n            <div><i>Description: </i><span>{{tableJsonScheme[key].description}}</span></div>\n            <div><i>Type: </i><span>{{tableJsonScheme[key].type}}</span></div>\n            <div *ngIf="tableJsonScheme[key].enum"><i>Enum: </i><span>{{tableJsonScheme[key].enum}}</span></div>\n            <div *ngIf="tableJsonScheme[key].alias"><i>Alias: </i><span>{{tableJsonScheme[key].alias}}</span></div>\n            <div *ngIf="tableJsonScheme[key].default"><i>Default: </i><span>{{tableJsonScheme[key].default}}</span></div>\n        </nui-expander>\n    </div>\n</div>\n'},NNrF:function(e,t,n){"use strict";n.r(t),t.default='import { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    nameof,\n    TableComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "../filtered-view-table-with-virtual-scroll-data";\nimport { FilteredViewTableWithVirtualScrollDataSource } from "../filtered-view-table-with-virtual-scroll-data-source.service";\nimport { IServer, IServerFilters } from "../types";\n\n@Component({\n    selector: "app-filtered-view-table-with-virtual-scroll-table",\n    templateUrl: "./filtered-view-table.component.html",\n    styleUrls: ["./filtered-view-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: {componentInstance: this.viewportManager},\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => !this.items.length || this.items.length < this.totalItems),\n                tap(() => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                switchMap(() => this.dataSource.outputsSubject.pipe(\n                    tap((data: IFilteringOutputs) => {\n                        // update the list of items to be rendered\n                        const items = data.repeat?.itemsSource || [];\n\n                        // after receiving data we need to append it to our previous fetched results\n                        this.items = this.items.concat(items);\n                        this.totalItems = data.paginator?.total || 0;\n                        this.changeDetection.detectChanges();\n                    })\n                )\n            ),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n'},Njt5:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},NseG:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},NuWa:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"SchematicsNovaTableComponent","title":"Generates table component","type":"object","description":"Adds a table","properties":{"name":{"type":"string","description":"The name of the component.","$default":{"$source":"argv","index":0}},"path":{"type":"string","format":"path","description":"The path to create the service.","visible":false},"project":{"type":"string","description":"The name of the project.","$default":{"$source":"projectName"}},"prefix":{"type":"string","description":"The prefix to apply to the generated component selector.","alias":"p","oneOf":[{"maxLength":0},{"minLength":1,"format":"html-selector"}]},"flat":{"type":"boolean","description":"When true, creates the new files at the top level of the current project.","default":false},"skipImport":{"type":"boolean","description":"When true, does not import this component into the owning NgModule.","default":false},"selector":{"type":"string","format":"html-selector","description":"The HTML selector to use for this component."},"export":{"type":"boolean","default":false,"description":"When true, the declaring NgModule exports this component."},"lintFix":{"type":"boolean","default":false,"description":"When true, applies lint fixes after generating the component."},"module":{"type":"string","description":"Allows specification of the declaring module.","alias":"m"},"enableSearch":{"type":"boolean","description":"When true, enables the search functionality for the list","default":true},"enableSort":{"type":"boolean","description":"When true, enables the search functionality for the list","default":true},"dataSource":{"type":"string","default":"serverSide","x-prompt":{"message":"What is the source of your data?","type":"list","items":[{"value":"clientSide","label":"The generated data source will retrieve data locally from a client side source."},{"value":"serverSide","label":"The generated data source will retrieve data remotely from a server side API."},{"value":"custom","label":"No data source will be generated, allowing you to create one from scratch."},{"value":"none","label":"No data source will be generated and no accommodations for a data source, e.g. sorting or search, will be added to the generated code."}]}},"dataSourceName":{"type":"string","description":"Specifies the datasource class name"},"pagingMode":{"description":"Paging mode to be used for the table","type":"string","default":"virtualScroll","enum":["none","pagination","virtualScroll"],"x-prompt":{"message":"What paging mode would you like the list to use?","type":"list","items":[{"value":"pagination","label":"Pagination"},{"value":"virtualScroll","label":"Virtual Scroll"},{"value":"none","label":"None"}]}},"selectionMode":{"description":"Selection mode to be used for the table","type":"string","default":"none","enum":["none","multi"],"x-prompt":{"message":"What selection mode would you like the table to use?","type":"list","items":[{"value":"none","label":"None (Selection Disabled)"},{"value":"multi","label":"Multi-Select (Checkboxes)"}]}},"virtualScrollStrategy":{"type":"string","default":"standard","description":"Strategy used for the virtual scroll","enum":["standard","custom"]}},"required":["name"]}')},O9VB:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="nui-filter-group-composite">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="nui-filter-group-composite__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between nui-filter-group-composite__checkbox">\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="nui-filter-group-composite__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},OAdA:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},OeWh:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTableWithPaginationComponent } from "./filtered-view-table-with-pagination.component";\nimport { FilteredViewTableComponent } from "./filtered-view-table/filtered-view-table.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithPaginationComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithPaginationComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithPaginationModule {}\n'},Ono3:function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},PF98:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},PLiY:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-filtered-view-table-with-virtual-scroll-selection-table__container {\n    height: 400px;\n    border-color: lightgray;\n    overflow: auto;\n}\n\n.app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container {\n    height: 300px;\n}\n\n.app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer {\n    height: 28px;\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n}\n'},PLo1:function(e,t,n){"use strict";n.r(t),t.default='import { Component, Inject, Input, Optional } from "@angular/core";\nimport { RepeatComponent } from "@nova-ui/bits";\n\nexport enum SchematicsDocsComponentType {\n    "list" = "list",\n    "table" = "table",\n}\n\n@Component({\n    selector: "nui-schematic-cli-option",\n    templateUrl: "./schematic-docs-cli-option.component.html",\n})\nexport class SchematicsDocsCliOptionComponent {\n    @Input() name: string;\n\n    public componentType = SchematicsDocsComponentType;\n\n    public fetch = `fetchURI = "\\${this.url\\}/?page=\\${end / (end - start)}&results=\\${end - start}"`;\n\n    public dataSourceSetup = {\n        extendDS:\n            `@Injectable()\nexport class RandomuserTableDataSource extends DataSourceService<ITableModel> {\n    constructor(private searchService: SearchService) {\n        super();\n    }\n}`,\n        defineFields:\n            `private readonly url = "https://yourserver.com/api";\nprivate cache = Array.from<ITableModel>({ length: 0 });\npublic busy = new BehaviorSubject(false);`,\n        getData:\n            `public async getData(start: number = 0, end: number= 20): Promise<INovaFilteringOutputs> {\n    let response: IRandomuserResponse = null;\n    try {\n        response = await\n                    (await fetch("this.fetchURI"))\n                        .json();\n                            return {\n                                users: response.results.map((result: IRandomuserResults, i: number) => ({\n                                    no: this.cache.length + i + 1,\n                                    nameTitle: result.name.title,\n                                    nameFirst: result.name.first,\n                                    nameLast: result.name.last,\n                                    gender: result.gender,\n                                    country: result.location.country,\n                                    city: result.location.city,\n                                    postcode: result.location.postcode,\n                                    email: result.email,\n                                    cell: result.cell,\n                                })),\n                                total: response.results.length,\n                                start: start,\n                            } as UsersQueryResponse;\n    } catch (e) {\n        console.error("Error responding from server. Please visit https://https://randomuser.me/ to see if it\'s available");\n    }\n}`,\n        getFilteredData:\n            `public async getFilteredData(filters: INovaFilters): Promise<INovaFilteringOutputs> {\n    this.busy.next(true);\n    const virtualScrollFilter = filters.virtualScroll && filters.virtualScroll.value;\n    const start = virtualScrollFilter ? filters.virtualScroll.value.start : 0;\n    const end = virtualScrollFilter ? filters.virtualScroll.value.end : 0;\n\n    this.getData(start, end).then((response: UsersQueryResponse) => {\n        if (!response) { return; }\n\n        this.cache = this.cache.concat(response.users);\n        this.dataSubject.next(this.cache);\n        this.busy.next(false);\n    });\n\n    return {\n        repeat: {\n            itemsSource: this.cache,\n        },\n        totalItems: 200,\n    }\n}`,\n    };\n\n    public tableScrollingSetup = {\n        vars:\n            `\n// will store the table data received from the server\npublic totalItems: number = 0;\npublic isBusy: boolean = false;\n\n// number of items to be fetched for each request\npublic pageSize: number = 40;\n\nprivate onDestroy$: Subject<void> = new Subject<void>();\n\n// stores the cached table data dynamically changed after every request from the server\n// this value is set to the dataSource input of the nui-table.\npublic items: IServer[] = [];\n\n// define the array of columns for the table\n// the table data from the datasource to the users var must come in the very same format.\npublic displayedColumns = ["name", "location", "status"];\n\n// datasource that you inject, or instantiate in constructor\nprivate dataSource: TableWithVirtualScrollDataSource;\n`,\n        viewportManagerImport: `import { VirtualViewportManager } from "@nova-ui/bits";`,\n        viewChildren:\n            `\n@ViewChild(CdkVirtualScrollViewport, { static: false }) viewport: CdkVirtualScrollViewport;\n`,\n        provideViewport:\n            `\n@Component({\n    //\n    providers: [VirtualViewportManager]\n})\n`,\n        injectViewport:\n            `\nconstructor(private viewportManager: VirtualViewportManager) {}\n`,\n        oninitSubscribeBusy:\n            `\nngOnInit(): void {\n    this.dataSource.busy.subscribe(busy => {\n        this._isBusy = busy;\n    });\n}`,\n        registerScroll:\n            `private registerVirtualScroll() {\n    this.dataSource.registerComponent({\n        virtualScroll: { componentInstance: this.viewportManager },\n    });\n }`,\n        ngAfterViewInitStart:\n            `ngAfterViewInit(): void {\n    this.registerVirtualScroll();\n}`,\n        ngAfterViewInitViewport:\n            `this.viewportManager\n    // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n    .setViewport(this.viewport)\n    // Note: Initializing the stream with the desired page size, based on which\n    // VirtualViewportManager will perform the observations and will emit\n    // distinct ranges with step equal to provided pageSize\n    .observeNextPage$({pageSize: this.range}).pipe(\n    // Note: In case we know the total number of items we can stop the stream when dataset end is reached\n    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n    filter(range => this.totalItems ? this.totalItems >= range.end : true),\n    tap(() => this.dataSource.applyFilters()),\n    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n    switchMap(() => this.dataSource.outputsSubject.pipe(\n        tap((outputs: IFilteringOutputs) => {\n            this._totalItems = outputs.totalItems;\n            this.users = outputs.repeat.itemsSource || [];\n            this.cd.detectChanges();\n        })\n    )),\n    takeUntil(this.onDestroy$)\n).subscribe();\n        `,\n\n    };\n\n    public constructor(\n        @Optional() @Inject(SchematicsDocsComponentType) public forComponent?: SchematicsDocsComponentType\n    ) {}\n\n    public getRepeatPropKey(key: keyof RepeatComponent): string {\n        return key;\n    }\n\n    public for(forComponent: SchematicsDocsComponentType) {\n        return this.forComponent === forComponent || !this.forComponent;\n    }\n}\n'},POA8:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="nui-filter-group-composite">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="nui-filter-group-composite__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between nui-filter-group-composite__checkbox">\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="nui-filter-group-composite__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},PjTQ:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},Pql0:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed\nexport const RESULTS_PER_PAGE = 400;\n\n"},PuLH:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},Q1A2:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},Q3QL:function(e,t,n){"use strict";n.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "schematics-docs-outlet",\n    template: `<router-outlet></router-outlet>`,\n})\nexport class FilteredViewSchematicOutletComponent {}\n'},QCiz:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start))\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithPaginationDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},QjXX:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n"},QoBA:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start))\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithSelectionDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},R805:function(e,t,n){"use strict";n.r(t),t.default='import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    LocalFilteringDataSource,\n    RepeatSelectionMode,\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker-composite",\n    templateUrl: "./item-picker.component.html",\n    styleUrls: ["./item-picker.component.less"],\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class ItemPickerCompositeComponent implements OnInit {\n    @Input() itemPickerOptions: IFilterGroupOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<IFilterGroupOption[]> = new EventEmitter();\n\n    public selectionMode = RepeatSelectionMode.multi;\n    public selectedOptions: IFilterGroupOption[] = [];\n\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as LocalFilteringDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selectedOptions = this.getSelectedOptions();\n    }\n\n    public onSelection(selection: IFilterGroupOption[]) {\n        this.selectedOptions = selection;\n        this.selectionChanged.emit(selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},Rblx:function(e,t,n){"use strict";(function(e){var i,r=n("XNbM");i="undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:e;var o=Object(r.a)(i);t.a=o}).call(this,n("Ono3")(e))},RdtY:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 20;\n\n"},Rlx7:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {FilteredViewWithTreeDataSource} from "./filtered-view-with-tree-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-with-tree",\n    styleUrls: ["./filtered-view-with-tree.component.less"],\n    templateUrl: "./filtered-view-with-tree.component.html",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewWithTreeDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewWithTreeComponent implements AfterViewInit {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "subregion",\n            title: "Subregion",\n            allFilterOptions: [\n                {\n                    value: "Caribbean",\n                    displayValue: "Caribbean",\n                },\n                {\n                    value: "South America",\n                    displayValue: "South America",\n                },\n                {\n                    value: "Central America",\n                    displayValue: "Central America",\n                },\n                {\n                    value: "Northern America",\n                    displayValue: "Northern America",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n        {\n            id: "language",\n            title: "Language",\n            allFilterOptions: [\n                {\n                    value: "English",\n                    displayValue: "English",\n                },\n                {\n                    value: "Dutch",\n                    displayValue: "Dutch",\n                },\n                {\n                    value: "French",\n                    displayValue: "French",\n                },\n                {\n                    value: "Spanish",\n                    displayValue: "Spanish",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n\n        {\n            id: "currency",\n            title: "Currency",\n            allFilterOptions: [\n                {\n                    value: "USD",\n                    displayValue: "USD",\n                },\n                {\n                    value: "EUR",\n                    displayValue: "EUR",\n                },\n                {\n                    value: "CAD",\n                    displayValue: "CAD",\n                },\n                {\n                    value: "MXN",\n                    displayValue: "MXN",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewWithTreeDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.dataSource.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n}\n'},RuTH:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewListWithVirtualScrollComponent } from "./filtered-view-list-with-virtual-scroll.component";\nimport { FilteredViewListComponent } from "./filtered-view-list/filtered-view-list.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewListWithVirtualScrollComponent,\n        FilteredViewListComponent,\n    ],\n    exports: [\n        FilteredViewListWithVirtualScrollComponent,\n        FilteredViewListComponent,\n    ],\n})\n\nexport class FilteredViewListWithVirtualScrollModule {}\n'},"S++F":function(e,t,n){"use strict";n.r(t),t.default='import { InjectionToken } from "@angular/core";\n// number of results to be displayed\nexport const RESULTS_PER_PAGE = 400;\n\nexport const CUSTOM_SCROLL_ITEMS_PER_PAGE: InjectionToken<number> = new InjectionToken("CUSTOM_SCROLL_ITEMS_PER_PAGE");\n\n'},SAL7:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},SLtx:function(e,t,n){var i={"./filter-group/basic-filter-group/basic-filter-group.component.html":"rLrJ","./filter-group/basic-filter-group/basic-filter-group.component.less":"a7Bm","./filter-group/basic-filter-group/basic-filter-group.component.ts":"++gK","./filter-group/basic-filter-group/basic-filter-group.example.component.html":"qySb","./filter-group/basic-filter-group/basic-filter-group.example.component.ts":"dU2W","./filter-group/basic-filter-group/basic-filter-group.module.ts":"DL7H","./filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.html":"XQZC","./filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.less":"xNVA","./filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.ts":"v6Y1","./filter-group/basic-filter-group/filter-group.service.ts":"iqZ0","./filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"Mheg","./filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"cjkH","./filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"KWxe","./filter-group/basic-filter-group/item-picker/item-picker.component.html":"FzcI","./filter-group/basic-filter-group/item-picker/item-picker.component.ts":"+PcG","./filter-group/basic-filter-group/item-picker/item-picker.module.ts":"1xBS","./filter-group/basic-filter-group/public-api.ts":"JstY","./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.html":"POA8","./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.less":"yJSH","./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.ts":"dotL","./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.html":"z4Zp","./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.ts":"eGNB","./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module.ts":"FtKX","./filter-group/custom-data-source-filter-group/custom-data-source.service.ts":"7Cc+","./filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"IJza","./filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"IsRT","./filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"j6qz","./filter-group/custom-data-source-filter-group/public-api.ts":"IicS","./filter-group/custom-template-filter-group/custom-template-filter-group.component.html":"KKwP","./filter-group/custom-template-filter-group/custom-template-filter-group.component.less":"FDJh","./filter-group/custom-template-filter-group/custom-template-filter-group.component.ts":"ikUd","./filter-group/custom-template-filter-group/custom-template-filter-group.example.component.html":"Cnf3","./filter-group/custom-template-filter-group/custom-template-filter-group.example.component.ts":"11ST","./filter-group/custom-template-filter-group/custom-template-filter-group.module.ts":"TbAP","./filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"/eeP","./filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"kB7/","./filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"Ylzm","./filter-group/custom-template-filter-group/public-api.ts":"mNg8","./filter-group/dialog-filter-group/dialog-filter-group.component.html":"O9VB","./filter-group/dialog-filter-group/dialog-filter-group.component.less":"86lC","./filter-group/dialog-filter-group/dialog-filter-group.component.ts":"4l1j","./filter-group/dialog-filter-group/dialog-filter-group.example.component.html":"lbJS","./filter-group/dialog-filter-group/dialog-filter-group.example.component.ts":"4LSg","./filter-group/dialog-filter-group/dialog-filter-group.module.ts":"qJmK","./filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.html":"pMK3","./filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.less":"AxCf","./filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.ts":"HJ1J","./filter-group/dialog-filter-group/filter-group.service.ts":"iSy2","./filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"v9Ac","./filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"4UJX","./filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"ps42","./filter-group/dialog-filter-group/item-picker/item-picker.component.html":"tYdv","./filter-group/dialog-filter-group/item-picker/item-picker.component.less":"A7CT","./filter-group/dialog-filter-group/item-picker/item-picker.component.ts":"R805","./filter-group/dialog-filter-group/item-picker/item-picker.module.ts":"TP7L","./filter-group/dialog-filter-group/public-api.ts":"JFia","./filter-group/fake-http.service.ts":"pdtU","./filter-group/filter-group-schematic.example.component.html":"qB8J","./filter-group/filter-group-schematic.example.component.ts":"oTZL","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html":"LHP3","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.less":"oXt4","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"SRy3","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.html":"OAdA","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.less":"WGgR","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.ts":"eYtq","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.module.ts":"ly3e","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.service.ts":"DgNP","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"2Nvw","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"6dHs","./filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"+OQe","./filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.html":"gXYj","./filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.ts":"09/n","./filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.module.ts":"xSAm","./filtered-view/filtered-view-list-with-pagination/filter-group/public-api.ts":"KjZp","./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data-source.service.ts":"n4zJ","./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data.ts":"aUPd","./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.html":"7p01","./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.less":"SAL7","./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.ts":"EwAg","./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module.ts":"UGky","./filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.html":"ZntZ","./filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.less":"7+8p","./filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.ts":"+AwD","./filtered-view/filtered-view-list-with-pagination/types.ts":"w2P6","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html":"qsEd","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less":"WykG","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"fYM0","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.html":"s/Hs","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.less":"YOIU","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.ts":"TZcx","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.module.ts":"NseG","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.service.ts":"B3r8","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"sJsX","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"5Nyv","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"BqN7","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.html":"hGg6","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts":"UzMU","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts":"kPhL","./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/public-api.ts":"WgN6","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data-source.service.ts":"dIUo","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data.ts":"DwQz","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.html":"T+q4","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.less":"ElU7","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.ts":"k0Wp","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module.ts":"RuTH","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.html":"Wh60","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.less":"AQ+Z","./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.ts":"ahUQ","./filtered-view/filtered-view-list-with-virtual-scroll/types.ts":"6wsH","./filtered-view/filtered-view-schematic.example.component.html":"vBlX","./filtered-view/filtered-view-schematic.example.component.ts":"ZiEL","./filtered-view/filtered-view-schematics.outlet.component.ts":"Q3QL","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html":"Z6Ls","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less":"l26G","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"xjXR","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.html":"qKGI","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.less":"zj11","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.ts":"xoO0","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.module.ts":"3WPx","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.service.ts":"fVNE","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"gUw7","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"Uu2Q","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"ZI8E","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.html":"wUF7","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.ts":"moRG","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.module.ts":"XdAP","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/public-api.ts":"jlaB","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data-source.service.ts":"Fj+O","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data.ts":"WnLD","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.html":"ysPG","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.less":"fvIy","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.ts":"t308","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module.ts":"LCrf","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.html":"uL2T","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.less":"IQI7","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.ts":"5460","./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/virtual-scroll-custom-strategy.service.ts":"sR+Z","./filtered-view/filtered-view-table-with-custom-virtual-scroll/types.ts":"Dsru","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html":"3XHf","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.less":"ogse","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"kdya","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.html":"Xk9r","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.less":"X9+r","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.ts":"K088","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.module.ts":"lUkS","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.service.ts":"cfR4","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"2XiK","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"3IUN","./filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"+dDe","./filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.html":"suM6","./filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.ts":"x3h5","./filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.module.ts":"IE32","./filtered-view/filtered-view-table-with-pagination/filter-group/public-api.ts":"E5YZ","./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data-source.service.ts":"fg5F","./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data.ts":"miN9","./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.html":"yRPo","./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.less":"sYm+","./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.ts":"+54s","./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module.ts":"OeWh","./filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.html":"mgTo","./filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.less":"7NX1","./filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.ts":"iaSc","./filtered-view/filtered-view-table-with-pagination/types.ts":"JSmO","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html":"CA+9","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.less":"JRWH","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"Z/qg","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.html":"vsjg","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.less":"r44w","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.ts":"6pyY","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.module.ts":"aMpo","./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.service.ts":"b+Es","./filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"uO4V","./filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"a2sS","./filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"8ZMy","./filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.html":"3VjK","./filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.ts":"PuLH","./filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.module.ts":"f1X4","./filtered-view/filtered-view-table-with-selection/filter-group/public-api.ts":"839b","./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data-source.service.ts":"Yvdn","./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data.ts":"RdtY","./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.html":"IFBI","./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.less":"6N8/","./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.ts":"iQ8n","./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module.ts":"KwWX","./filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.html":"H14Q","./filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.less":"MtIq","./filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.ts":"busm","./filtered-view/filtered-view-table-with-selection/types.ts":"4dU6","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html":"1Nfc","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.less":"DjXf","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"044v","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.html":"4GQX","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.less":"+iXi","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.ts":"ntbi","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.module.ts":"rHCs","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.service.ts":"opqG","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"sjIk","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"JNPp","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"l1iH","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.html":"Bx8s","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.ts":"+YmI","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.module.ts":"1ycH","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/public-api.ts":"ymHj","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data-source.service.ts":"91J8","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data.ts":"2bW1","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.html":"VIkb","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.less":"kiga","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.ts":"7BzB","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module.ts":"TUL3","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.html":"ca/e","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.less":"PLiY","./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.ts":"KdL1","./filtered-view/filtered-view-table-with-virtual-scroll-selection/types.ts":"1CEw","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html":"2dld","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less":"VcDJ","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"dzoy","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.html":"doNG","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.less":"Njt5","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.ts":"CB1G","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.module.ts":"z+Y8","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.service.ts":"3Wc+","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"PF98","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"5uay","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"v/Kl","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.html":"3xx8","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts":"rthe","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts":"b9pE","./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/public-api.ts":"KnOw","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data-source.service.ts":"6D6Z","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data.ts":"Ml33","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.html":"6oEQ","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.less":"nYsj","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.ts":"1YTC","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module.ts":"/Am9","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.html":"USHt","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.less":"m5qS","./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.ts":"NNrF","./filtered-view/filtered-view-table-with-virtual-scroll/types.ts":"Eb/p","./filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.html":"id5M","./filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.less":"KFmY","./filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"lXXV","./filtered-view/filtered-view-with-list/filter-group/filter-group.component.html":"KIPM","./filtered-view/filtered-view-with-list/filter-group/filter-group.component.less":"+Chp","./filtered-view/filtered-view-with-list/filter-group/filter-group.component.ts":"KXSm","./filtered-view/filtered-view-with-list/filter-group/filter-group.module.ts":"YosE","./filtered-view/filtered-view-with-list/filter-group/filter-group.service.ts":"ccRT","./filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"Mkoz","./filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"YZbZ","./filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"xMM6","./filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.html":"sfBt","./filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.ts":"NIVI","./filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.module.ts":"ZsT8","./filtered-view/filtered-view-with-list/filter-group/public-api.ts":"mO+w","./filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.html":"UbGp","./filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.less":"7rYE","./filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.ts":"MOcu","./filtered-view/filtered-view-with-list/filtered-view-with-list-data.ts":"je8h","./filtered-view/filtered-view-with-list/filtered-view-with-list.component.html":"VKNs","./filtered-view/filtered-view-with-list/filtered-view-with-list.component.less":"DiWk","./filtered-view/filtered-view-with-list/filtered-view-with-list.component.ts":"X6N9","./filtered-view/filtered-view-with-list/filtered-view-with-list.module.ts":"8hGT","./filtered-view/filtered-view-with-list/types.ts":"x/bl","./filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.html":"r2Ey","./filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.less":"i5hK","./filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.ts":"UuGP","./filtered-view/filtered-view-with-table/filter-group/filter-group.component.html":"p5xQ","./filtered-view/filtered-view-with-table/filter-group/filter-group.component.less":"/CNV","./filtered-view/filtered-view-with-table/filter-group/filter-group.component.ts":"vWCP","./filtered-view/filtered-view-with-table/filter-group/filter-group.module.ts":"cgMu","./filtered-view/filtered-view-with-table/filter-group/filter-group.service.ts":"vAp9","./filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"J2tR","./filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"PjTQ","./filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"MstA","./filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.html":"GQaK","./filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.ts":"3EhY","./filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.module.ts":"m5yS","./filtered-view/filtered-view-with-table/filter-group/public-api.ts":"GRf4","./filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.html":"9VPQ","./filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.less":"0g3k","./filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.ts":"4wxC","./filtered-view/filtered-view-with-table/filtered-view-with-table-data.ts":"syvg","./filtered-view/filtered-view-with-table/filtered-view-with-table.component.html":"Mk1R","./filtered-view/filtered-view-with-table/filtered-view-with-table.component.less":"iMyP","./filtered-view/filtered-view-with-table/filtered-view-with-table.component.ts":"f9lG","./filtered-view/filtered-view-with-table/filtered-view-with-table.module.ts":"+IDW","./filtered-view/filtered-view-with-table/types.ts":"4ZP6","./filtered-view/filtered-view-with-tree/filter-group/filter-group.component.html":"koMX","./filtered-view/filtered-view-with-tree/filter-group/filter-group.component.less":"GewB","./filtered-view/filtered-view-with-tree/filter-group/filter-group.component.ts":"Q1A2","./filtered-view/filtered-view-with-tree/filter-group/filter-group.module.ts":"b6NC","./filtered-view/filtered-view-with-tree/filter-group/filter-group.service.ts":"gwcX","./filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html":"bB8M","./filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less":"j9M9","./filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts":"rDi6","./filtered-view/filtered-view-with-tree/filter-group/public-api.ts":"uz4p","./filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.html":"1Cjs","./filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.less":"FHC4","./filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.ts":"Kvzu","./filtered-view/filtered-view-with-tree/filtered-view-with-tree-data-source.service.ts":"Jh/2","./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.html":"pxDw","./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.less":"k1r5","./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.ts":"Rlx7","./filtered-view/filtered-view-with-tree/filtered-view-with-tree.module.ts":"aUZi","./filtered-view/filtered-view-with-tree/types.ts":"zQdh","./list/basic-list/basic-list-data.ts":"F5NE","./list/basic-list/basic-list.component.html":"7X3U","./list/basic-list/basic-list.component.less":"9lw4","./list/basic-list/basic-list.component.ts":"nFdp","./list/basic-list/types.ts":"/L5X","./list/list-schematic.example.component.html":"XkEQ","./list/list-schematic.example.component.ts":"9Nf6","./list/list-schematics-outlet.component.ts":"58SR","./list/paginated-list/paginated-list-data-source.service.ts":"beMN","./list/paginated-list/paginated-list-data.ts":"z63J","./list/paginated-list/paginated-list.component.html":"60T+","./list/paginated-list/paginated-list.component.less":"oMWy","./list/paginated-list/paginated-list.component.ts":"hJD7","./list/paginated-list/types.ts":"4P08","./list/search-list/search-list-data-source.service.ts":"7CiJ","./list/search-list/search-list-data.ts":"gg9E","./list/search-list/search-list.component.html":"HA5u","./list/search-list/search-list.component.less":"4/WI","./list/search-list/search-list.component.ts":"+1oT","./list/search-list/types.ts":"x9IJ","./list/selection-list/selection-list-data.ts":"EHgo","./list/selection-list/selection-list.component.html":"Y3uV","./list/selection-list/selection-list.component.less":"7Ud5","./list/selection-list/selection-list.component.ts":"2NPs","./list/selection-list/types.ts":"CjjH","./list/virtual-scroll-list/types.ts":"BOmQ","./list/virtual-scroll-list/virtual-scroll-list-data-source.service.ts":"JNgL","./list/virtual-scroll-list/virtual-scroll-list-data.ts":"HgG7","./list/virtual-scroll-list/virtual-scroll-list.component.html":"uJ/f","./list/virtual-scroll-list/virtual-scroll-list.component.less":"gQUx","./list/virtual-scroll-list/virtual-scroll-list.component.ts":"prgC","./schematic.module.ts":"u6o/","./schematics-docs.component.html":"NMLx","./schematics-docs.component.ts":"9oUP","./table/basic-table/basic-table-data.ts":"B63D","./table/basic-table/basic-table.component.html":"zK64","./table/basic-table/basic-table.component.less":"HvoV","./table/basic-table/basic-table.component.ts":"mdGB","./table/basic-table/types.ts":"UF/I","./table/table-schematic-example.component.html":"o+Q1","./table/table-schematic-example.component.ts":"FXCW","./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data-source.service.ts":"6Ntk","./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data.ts":"S++F","./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.html":"6pWu","./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.less":"M7Gr","./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.ts":"kehG","./table/table-with-custom-virtual-scroll/types.ts":"3rpt","./table/table-with-custom-virtual-scroll/virtual-scroll-custom-strategy.service.ts":"t8CO","./table/table-with-pagination/table-with-pagination-data-source.service.ts":"QCiz","./table/table-with-pagination/table-with-pagination-data.ts":"vKyT","./table/table-with-pagination/table-with-pagination.component.html":"vI/I","./table/table-with-pagination/table-with-pagination.component.less":"7Cvy","./table/table-with-pagination/table-with-pagination.component.ts":"7smG","./table/table-with-pagination/types.ts":"4qB0","./table/table-with-search/table-with-search-data-source.service.ts":"mOP6","./table/table-with-search/table-with-search-data.ts":"QjXX","./table/table-with-search/table-with-search.component.html":"iJN3","./table/table-with-search/table-with-search.component.less":"ruFn","./table/table-with-search/table-with-search.component.ts":"WwhD","./table/table-with-search/types.ts":"JKDL","./table/table-with-selection/table-with-selection-data-source.service.ts":"QoBA","./table/table-with-selection/table-with-selection-data.ts":"TB1y","./table/table-with-selection/table-with-selection.component.html":"ZRSx","./table/table-with-selection/table-with-selection.component.less":"s0pq","./table/table-with-selection/table-with-selection.component.ts":"GK/z","./table/table-with-selection/types.ts":"InPD","./table/table-with-sort/table-with-sort-data-source.service.ts":"GmLD","./table/table-with-sort/table-with-sort-data.ts":"zlEe","./table/table-with-sort/table-with-sort.component.html":"dpz/","./table/table-with-sort/table-with-sort.component.less":"kI1d","./table/table-with-sort/table-with-sort.component.ts":"HLGg","./table/table-with-sort/types.ts":"WcOH","./table/table-with-virtual-scroll/table-with-virtual-scroll-data-source.service.ts":"GRWK","./table/table-with-virtual-scroll/table-with-virtual-scroll-data.ts":"Pql0","./table/table-with-virtual-scroll/table-with-virtual-scroll.component.html":"gQGH","./table/table-with-virtual-scroll/table-with-virtual-scroll.component.less":"c1fU","./table/table-with-virtual-scroll/table-with-virtual-scroll.component.ts":"1DFb","./table/table-with-virtual-scroll/types.ts":"lDWl","./utils/recursive-object-view.component.ts":"sz9x","./utils/schematic-docs-cli-option/schematic-docs-cli-option.component.html":"L+8p","./utils/schematic-docs-cli-option/schematic-docs-cli-option.component.ts":"PLo1","./utils/schematic-docs-command/schematic-docs-command.component.html":"rXZs","./utils/schematic-docs-command/schematic-docs-command.component.ts":"eudf","./utils/schematic-docs-example/schematic-docs-example.component.html":"55+8","./utils/schematic-docs-example/schematic-docs-example.component.less":"qrx0","./utils/schematic-docs-example/schematic-docs-example.component.ts":"xu+P","./utils/schematic-docs-page/schematic-docs-page.component.html":"WPVD","./utils/schematic-docs-page/schematic-docs-page.component.less":"ESaf","./utils/schematic-docs-page/schematic-docs-page.component.ts":"mYQz","./utils/schematic-json.component.ts":"MGdW"};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=o,e.exports=r,r.id="SLtx"},SRy3:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},"T+q4":function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-list-with-virtual-scroll-list #child></app-filtered-view-list-with-virtual-scroll-list>\n        </div>\n    </nui-panel>\n</div>\n'},TB1y:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n"},TP7L:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport { NuiRepeatModule } from "@nova-ui/bits";\n\nimport { ItemPickerCompositeComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiRepeatModule,\n    ],\n    declarations: [\n        ItemPickerCompositeComponent,\n    ],\n    exports: [\n        ItemPickerCompositeComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerCompositeModule {\n}\n'},TUL3:function(e,t,n){"use strict";n.r(t),t.default='import { ScrollingModule } from "@angular/cdk/scrolling";\nimport { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTableWithVirtualScrollSelectionComponent } from "./filtered-view-table-with-virtual-scroll-selection.component";\nimport { FilteredViewTableComponent } from "./filtered-view-table/filtered-view-table.component";\n\n@NgModule({\n    imports: [\n        ScrollingModule,\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithVirtualScrollSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithVirtualScrollSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithVirtualScrollSelectionModule {}\n'},TZcx:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},TbAP:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport { NuiCheckboxModule, NuiExpanderModule, NuiPopoverModule } from "@nova-ui/bits";\n\nimport { CustomTemplateFilterGroupCompositeComponent } from "./custom-template-filter-group.component";\nimport { CustomTemplateFilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        CustomTemplateFilterGroupsWrapperComponent,\n        CustomTemplateFilterGroupCompositeComponent,\n    ],\n    exports: [\n        CustomTemplateFilterGroupsWrapperComponent,\n        CustomTemplateFilterGroupCompositeComponent,\n    ],\n})\n\nexport class CustomTemplateFilterGroupCompositeModule {\n}\n'},"UF/I":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},UGky:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewListWithPaginationComponent } from "./filtered-view-list-with-pagination.component";\nimport { FilteredViewListComponent } from "./filtered-view-list/filtered-view-list.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewListWithPaginationComponent,\n        FilteredViewListComponent,\n    ],\n    exports: [\n        FilteredViewListWithPaginationComponent,\n        FilteredViewListComponent,\n    ],\n})\n\nexport class FilteredViewListWithPaginationModule {}\n'},USHt:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-filtered-view-table-with-virtual-scroll-table__container">\n    <cdk-virtual-scroll-viewport class="app-filtered-view-table-with-virtual-scroll-table-scrolling-container" tableStickyHeader #viewportRef [itemSize]="rowHeight">\n    <table nui-table [dataSource]="items | sliceRange: viewportRef.getRenderedRange()">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]="displayedColumns"\n                         [cdkVirtualForOf]="items">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class="app-filtered-view-table-with-virtual-scroll-table-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                    <div class="d-flex pt-3 pb-3">\n                        <ng-container i18n *ngIf="items.length !== totalItems; else endOfData">, scroll down for more.</ng-container>\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n'},UbGp:function(e,t,n){"use strict";n.r(t),t.default='<div>\n    <div class="d-flex flex-row">\n        <nui-sorter class="app-filtered-view-with-list-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-filtered-view-with-list-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="filteringState.repeat?.itemsSource.length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-filtered-view-with-list-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="filteringState.repeat?.itemsSource">\n        </nui-repeat>\n    </div>\n\n    <div class="d-flex flex-row">\n        <nui-paginator class="app-filtered-view-with-list-list-paginator"\n                       [(page)]="page"\n                       [pageSize]="pageSize"\n                       [pageSizeSet]="[10,20,30,40]"\n                       [total]="filteringState.paginator?.total"\n                       (pagerAction)="applyFilters()">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},Uu2Q:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},UuGP:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},UzMU:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},VIkb:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-virtual-scroll-selection-table #child></app-filtered-view-table-with-virtual-scroll-selection-table>\n        </div>\n    </nui-panel>\n</div>\n'},VKNs:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-with-list-list #child></app-filtered-view-with-list-list>\n        </div>\n    </nui-panel>\n</div>\n'},VcDJ:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},WGgR:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},WPVD:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-schematic-docs-page">\n    <h1>{{ schematicHeading | titlecase }} Schematic</h1>\n    <ng-content select="[schematicSummary]"></ng-content>\n    <h2 class="mt-4">API</h2>\n    <div>\n        <p>\n            Use the following command to generate a {{ schematicHeading | titlecase }}:\n            <code>ng g @nova-ui/bits:{{ schematicFolderName }} --name=%name_of_component% --p=%prefix_for_component_selector%</code>\n        </p>\n        <p>\n            The schematic generates styles with a reference to files that are stored in\n            <code>node_modules/@nova-ui/bits/sdk/less</code>. You can provide this path in your project\'s\n            <code>angular.json</code> to make these references work:\n        </p>\n        <p>\n            <nui-example-code>\n                {{ angularJsonStylePreprocOptions }}\n            </nui-example-code>\n        </p>\n        <nui-schematic-json [schematicFolderName]="schematicFolderName"></nui-schematic-json>\n    </div>\n\n    <div class="nui-schematic-docs-examples">\n        <ng-content select="[schematicExamples]"></ng-content>\n    </div>\n</div>\n'},WcOH:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},WgN6:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},Wh60:function(e,t,n){"use strict";n.r(t),t.default='<div nui-busy [busy]="isBusy">\n    <nui-spinner size="large" i18n-message message="Loading..."></nui-spinner>\n    <div class="d-flex flex-row">\n        <nui-sorter class="app-filtered-view-list-with-virtual-scroll-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-filtered-view-list-with-virtual-scroll-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="!isBusy && (listItems$ | async).length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-filtered-view-list-with-virtual-scroll-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="listItems$ | async"\n                    [virtualScroll]="true"\n                    [itemSize]="30">\n        </nui-repeat>\n    </div>\n\n    <footer class="app-filtered-view-list-with-virtual-scroll-list-scrolling-footer">\n        <div class="d-flex justify-content-center align-items-center">\n            <div class="p-1 d-flex">\n                <div class="d-flex pt-3 pb-3" i18n>\n                    Showing {{(listItems$ | async).length}} of {{ totalItems }}.\n                </div>\n                <div class="d-flex pt-3 pb-3">\n                    <ng-container i18n *ngIf="(listItems$ | async).length !== totalItems; else endOfData">, scroll down for more.</ng-container>\n                    <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                </div>\n            </div>\n        </div>\n    </footer>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},WnLD:function(e,t,n){"use strict";n.r(t),t.default='import { InjectionToken } from "@angular/core";\n// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 400;\n\nexport const CUSTOM_SCROLL_ITEMS_PER_PAGE: InjectionToken<number> = new InjectionToken("CUSTOM_SCROLL_ITEMS_PER_PAGE");\n\n'},WpAY:function(e,t,n){var i={"./filter-group/schema.json":"H+UG","./filtered-view/schema.json":"9aig","./layout/schema.json":"mz2x","./list/schema.json":"nlFB","./ng-add/schema.json":"DqLo","./ng-update/schema.json":"Xi1w","./table/schema.json":"NuWa"};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=o,e.exports=r,r.id="WpAY"},WwhD:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./table-with-search-data";\nimport { TableWithSearchDataSource } from "./table-with-search-data-source.service";\nimport { IServer, IServerFilters } from "./types";\n\n@Component({\n    selector: "app-table-with-search",\n    templateUrl: "./table-with-search.component.html",\n    styleUrls: ["./table-with-search.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithSearchDataSource,\n        },\n    ],\n})\nexport class TableWithSearchComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = ["name"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithSearchDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},WykG:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},X6N9:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport { LOCAL_DATA } from "./filtered-view-with-list-data";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-with-list",\n    styleUrls: ["./filtered-view-with-list.component.less"],\n    templateUrl: "./filtered-view-with-list.component.html",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewWithListComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n        // here we use ClientSideDataSource since the data we\'re working with is static (RANDOM_ARRAY)\n        // if you have a dynamic data source, you need to extend DataSourceService for your custom filtering behavior\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},"X9+r":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},XNbM:function(e,t,n){"use strict";function i(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return i}))},XQZC:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-group-composite-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="nui-filter-group-composite-dialog__body">\n        <nui-item-picker-composite\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></nui-item-picker-composite>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},XdAP:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},Xi1w:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"SchematicsNovaUpdate","title":"ng-update schematic for bits","type":"object","description":"updates a bits project","properties":{"project":{"type":"string","description":"The name of the project.","$default":{"$source":"projectName"}},"skipProviders":{"type":"boolean","description":"Skip provider imports","default":false},"skipCss":{"type":"boolean","description":"Skip importing css & setting styles","default":false},"skipTsConfig":{"type":"boolean","description":"Skip updating the tsconfig","default":false}},"required":[]}')},Xk9r:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},XkEQ:function(e,t,n){"use strict";n.r(t),t.default='<nui-schematic-docs-page schematicFolderName="list">\n    <div schematicSummary>\n        <p>\n            The List schematic provides the ability to create a generic list that can cover a majority of use cases for a list.\n            Its main responsibility is to integrate the functionality of the <code>nui-repeat</code> component with other components\n            commonly used with a list such as <code>nui-selector</code>, <code>nui-search</code>, <code>nui-paginator</code>, and\n            <code>nui-sorter</code>.\n        </p>\n        <h2>Notable Command Line Options</h2>\n        <nui-schematic-cli-option name="selectionMode"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="pagingMode"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="dataSource"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="enableSearch"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="enableSort"></nui-schematic-cli-option>\n    </div>\n    <nui-tab-group schematicExamples>\n        <nui-tab heading="Basic">\n            <h2>Basic Usage</h2>\n            <p>\n                This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to\n                provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the\n                <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n                service, which can be extended with custom filtering behavior.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=basic-list --p=app</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="basic-list">\n                <app-basic-list></app-basic-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Selection">\n            <h2>List with Selection</h2>\n            <p>\n                Selection is facilitated by the\n                <a target="_blank" href="../injectables/ListService.html"><code>ListService</code></a>\n                and can be enabled by running the CLI command with the <code>selectionMode</code> option\n                set to one of the selection-enabling values listed under <strong>Notable Command Line Options</strong> section above.\n                The initial selection can be set using the <code>selection</code> input of\n                the <code>nui-repeat</code>. Selection changes can be intercepted using the\n                <code>selectionChange</code> output of the <code>nui-repeat</code>.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=selection-list --p=app\n                <strong>--selectionMode=multi</strong></nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="selection-list">\n                <app-selection-list></app-selection-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Search">\n            <h2>Search Properties</h2>\n            <p>\n                To specify fields for search, pass a properties array to the <code>setSearchProperties</code> method\n                exposed by the <a target="_blank" href="../injectables/ClientSideDataSource.html">\n                    <code>ClientSideDataSource</code></a> service.\n                If no properties are specified, the search will be performed on all fields.\n            </p>\n            <nui-schematic-docs-command>\n                ng g @nova-ui/bits:list --name=search-list --p=app --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-sort=false\n                <strong>--enable-search=true</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="search-list">\n                <app-search-list></app-search-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Pagination">\n            <h2>Pagination</h2>\n            <p>\n                This example shows how to add pagination to <code>nui-repeat</code> with a remote data source.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=paginated-list --p=app --pagingMode=pagination --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="paginated-list">\n                <app-paginated-list></app-paginated-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Virtual Scroll">\n            <h2>Virtual Scroll</h2>\n            <p>\n                This example shows how to add virtual scroll to <code>nui-repeat</code> with a remote data source.\n            </p>\n            <nui-message [allowDismiss]="false" type="warning">\n                Since the example makes use of search and sorting filters, it\'s important to note that\n                the viewport manager\'s paging progress must be reset each time the data is refreshed with\n                new filtered results. The reset invocation can be seen in the\n                <code>virtual-scroll-list.component.ts:doSearch</code> method.\n            </nui-message>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=scrollable-list --p=app --pagingMode=virtualScroll --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="virtual-scroll-list">\n                <app-virtual-scroll-list></app-virtual-scroll-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n\n'},Y3uV:function(e,t,n){"use strict";n.r(t),t.default='<div>\n    <div class="d-flex flex-row">\n        <nui-selector class="app-selection-list-selector"\n                      [checkboxStatus]="filteringState.selector?.selectorState?.checkboxStatus"\n                      [items]="filteringState.selector?.selectorState?.selectorItems"\n                      (selectionChange)="onSelectorOutput($event)">\n        </nui-selector>\n        <nui-sorter class="app-selection-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-selection-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="filteringState.repeat?.itemsSource.length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-selection-list-repeat"\n                    selectionMode="multi"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="filteringState.repeat?.itemsSource"\n                    (selectionChange)="onRepeatOutput($event)">\n        </nui-repeat>\n    </div>\n\n    <div class="d-flex flex-row">\n        <nui-paginator class="app-selection-list-paginator"\n                       [(page)]="page"\n                       [pageSize]="pageSize"\n                       [pageSizeSet]="[10,20,30,40]"\n                       [total]="filteringState.paginator?.total"\n                       (pagerAction)="applyFilters()">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},YOIU:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},YZbZ:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},Ylzm:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { CustomTemplateFilterGroupCompositeComponent } from "../custom-template-filter-group.component";\n\n@Component({\n    selector: "app-custom-template-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\n\nexport class CustomTemplateFilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(CustomTemplateFilterGroupCompositeComponent) filterGroups: QueryList<CustomTemplateFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomTemplateFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},YosE:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},Yvdn:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        if (filters.search?.value) {\n            params = params.set("searchField", "name");\n            params = params.set("searchContent", filters.search?.value ?? "");\n        }\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithSelectionDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithSelectionDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},"Z/qg":function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},Z6Ls:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},ZI8E:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},ZRSx:function(e,t,n){"use strict";n.r(t),t.default='<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">{{selection | json}}</span>\n</div>\n<div class="app-table-with-selection__container">\n    <div class="app-table-with-selection-searchable__search">\n        <nui-search [value]="searchTerm"\n                    (search)="onSearch()"\n                    (cancel)="onSearchCancel()">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]="items"\n           [sortable]="true"\n           [sortedColumn]="sortedColumn"\n           (sortOrderChanged)="sortData($event)"\n           [(selection)]="selection"\n           (selectionChange)="onSelectionChanged($event)"\n           [selectable]="true"\n           [trackBy]="trackBy">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns" [rowObject]="row"></tr>\n    </table>\n\n    <footer class="app-table-with-selection-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},ZiEL:function(e,t,n){"use strict";n.r(t),t.default='/*\nCLI commands used to generate the current examples:\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app\n --name=filtered-view-with-list --presentationType=list --dataSource=none --pagingMode=pagination --selectionMode=none\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app\n --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide --pagingMode=pagination --selectionMode=none\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n --name=filtered-view-list-with-virtual-scroll --presentationType=list --dataSource=serverSide --selectionMode=none\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=pagination\n --name=filtered-view-with-table --presentationType=table --dataSource=none --enableSort=false --enableSearch=false --selectionMode=none\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=pagination \\\n --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false --selectionMode=none\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --presentationType=table\n--name=filtered-view-table-with-selection --dataSource=serverSide --pagingMode=pagination --selectionMode=multi\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false --selectionMode=none\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n--name=filtered-view-table-with-virtual-scroll-selection --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false\n--selectionMode=multi\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n--name=filtered-view-table-with-virtual-scroll-selection --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false\n--selectionMode=multi\n\n\nng g "./schematics/src/collection.json":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n --name=filtered-view-table-with-custom-virtual-scroll --presentationType=table --dataSource=serverSide  --enableSort=false --enableSearch=false\n --virtualScrollStrategy=custom --selectionMode=none\n*/\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "schematics-docs-example",\n    templateUrl: "./filtered-view-schematic.example.component.html",\n})\nexport class FilteredViewSchematicExampleComponent {}\n'},ZntZ:function(e,t,n){"use strict";n.r(t),t.default='<div nui-busy [busy]="isBusy">\n    <nui-spinner size="large" i18n-message message="Loading..."></nui-spinner>\n    <div class="d-flex flex-row">\n        <nui-sorter class="app-filtered-view-list-with-pagination-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-filtered-view-list-with-pagination-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="!isBusy && (listItems$ | async).length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-filtered-view-list-with-pagination-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="filteringState.repeat?.itemsSource">\n        </nui-repeat>\n    </div>\n\n    <div class="d-flex flex-row">\n        <nui-paginator class="app-filtered-view-list-with-pagination-list-paginator"\n                       [(page)]="page"\n                       [pageSize]="pageSize"\n                       [pageSizeSet]="[10,20,30,40]"\n                       [total]="filteringState.paginator?.total"\n                       (pagerAction)="applyFilters()">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},ZsT8:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},a2sS:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},a7Bm:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins.less";\n\n.nui-filter-group-composite {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},aMpo:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},aUPd:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\n"},aUZi:function(e,t,n){"use strict";n.r(t),t.default='import { CdkTreeModule } from "@angular/cdk/tree";\nimport { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiChipsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupModule } from "./filter-group/filter-group.module";\nimport { FilteredViewTreeComponent } from "./filtered-view-tree/filtered-view-tree.component";\nimport { FilteredViewWithTreeComponent } from "./filtered-view-with-tree.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        NuiIconModule,\n        NuiButtonModule,\n        NuiExpanderModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n        CdkTreeModule,\n    ],\n    declarations: [\n        FilteredViewWithTreeComponent,\n        FilteredViewTreeComponent,\n    ],\n    exports: [\n        FilteredViewWithTreeComponent,\n        FilteredViewTreeComponent,\n    ],\n})\n\nexport class FilteredViewWithTreeModule {}\n'},ahUQ:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport {\n    BehaviorSubject,\n    Subject,\n} from "rxjs";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "../filtered-view-list-with-virtual-scroll-data";\nimport { FilteredViewListWithVirtualScrollDataSource } from "../filtered-view-list-with-virtual-scroll-data-source.service";\nimport {\n    IServer,\n    IServerFilters,\n} from "../types";\n\n@Component({\n    selector: "app-filtered-view-list-with-virtual-scroll-list",\n    templateUrl: "./filtered-view-list.component.html",\n    styleUrls: ["./filtered-view-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithVirtualScrollDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.repeat.viewportRef)\n\n            // Note: Initializing the stream with the desired page size, based on which\n            // ViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({pageSize: RESULTS_PER_PAGE})\n                .pipe(\n                    // Since we know the total number of items we can stop the stream when dataset end is reached\n                    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                    filter(() => {\n                        const items = this.listItems$.getValue();\n                        return !items.length || items.length < this.totalItems;\n                    }),\n                    tap(() => this.applyFilters(false)),\n                    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                    switchMap(() => this.dataSource.outputsSubject.pipe(\n                        tap((data: IFilteringOutputs) => {\n                            // update the list of items to be rendered\n                            const items = data.repeat?.itemsSource || [];\n\n                            // after receiving data we need to append it to our previous fetched results\n                            this.listItems$.next(this.listItems$.getValue().concat(items));\n\n                            this.totalItems = data.paginator?.total || 0;\n\n                            this.changeDetection.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.destroy$)\n            ).subscribe();\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.listItems$.next([]);\n            this.changeDetection.detectChanges();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n'},"b+Es":function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},b6NC:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},b9pE:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},bB8M:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},beMN:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class PaginatedListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value ?? { start : 0, end: 0};\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start))\n\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = PaginatedListDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},busm:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISelection,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "../filtered-view-table-with-selection-data";\nimport { FilteredViewTableWithSelectionDataSource } from "../filtered-view-table-with-selection-data-source.service";\nimport { IServer, IServerFilters } from "../types";\n\n@Component({\n    selector: "app-filtered-view-table-with-selection-table",\n    templateUrl: "./filtered-view-table.component.html",\n    styleUrls: ["./filtered-view-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: "name",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = ["name"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    // row selection\n    public selectedItems: IServer[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: ["ABERN-SVR-ATQU9404"],\n        exclude: [],\n    };\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithSelectionDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        // do something with the selection\n\n        // make component aware of the new selection value\n        // so it\'s displayed correctly\n        this.changeDetection.detectChanges();\n    }\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackBy(index: number, item: IServer) {\n        return item.name;\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},"c+bQ":function(e,t,n){var i=n("mzbm"),r=n("IqJI"),o=n("bim0"),a=n("nxZd"),l=o((function(e,t){return a(e)?i(e,r(t,1,a,!0)):[]}));e.exports=l},c1fU:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-table-with-virtual-scroll__container {\n    height: 400px;\n    border-color: lightgray;\n    overflow: auto;\n}\n\n.app-table-with-virtual-scroll-searchable__search {\n    max-width: 350px;\n    margin-bottom: @nui-space-xs;\n    margin-left: auto;\n}\n\n.app-table-with-virtual-scroll-scrolling-container {\n    height: 300px;\n}\n\n.app-table-with-virtual-scroll-scrolling-footer {\n    height: 28px;\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n}\n'},"ca/e":function(e,t,n){"use strict";n.r(t),t.default='<h2>Selection result</h2>\n<div class="flex-row-container">\n    <span class="flex-independent-row-item">{{selection | json}}</span>\n</div>\n<div class="app-filtered-view-table-with-virtual-scroll-selection-table__container">\n    <cdk-virtual-scroll-viewport class="app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container" tableStickyHeader #viewportRef [itemSize]="rowHeight">\n    <table nui-table [dataSource]="items | sliceRange: viewportRef.getRenderedRange()"\n           [(selection)]="selection"\n           (selectionChange)="onSelectionChanged($event)"\n           [selectable]="true"\n           [trackBy]="trackBy">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]="displayedColumns"\n                         [cdkVirtualForOf]="items">\n                <tr nui-row  [rowObject]="context"></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class="app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                    <div class="d-flex pt-3 pb-3">\n                        <ng-container i18n *ngIf="items.length !== totalItems; else endOfData">, scroll down for more.</ng-container>\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n'},ccRT:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},cfR4:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},cgMu:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},cjkH:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "mixins.less";\n@hidden-filters-block-height: 30px;\n\n.nui-filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        .setCssVariable(background-color, nui-color-bg-accordion_header);\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        .setCssVariable(color, nui-color-text-secondary);\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        .setCssVariable(color, nui-color-text-secondary);\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},dIUo:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./filtered-view-list-with-virtual-scroll-data";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewListWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        if (filters.search?.value) {\n            params = params.set("searchField", "name");\n            params = params.set("searchContent", filters.search?.value ?? "");\n        }\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewListWithVirtualScrollDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewListWithVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},dU2W:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n} from "@nova-ui/bits";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subscription } from "rxjs";\n\nimport { IFilterGroupItem } from "./public-api";\n\ninterface ExampleItem {\n    color: string;\n    status: string;\n}\n\nconst RANDOM_ARRAY = [\n    {color: "regular-azure", status: "Critical"},\n    {color: "regular-black", status: "Warning"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-yellow", status: "Critical"},\n    {color: "regular-yellow", status: "Warning"},\n    {color: "regular-black", status: "Up"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-azure", status: "Up"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-azure", status: "Critical"},\n];\n\n@Component({\n    selector: "app-basic-filter-group-composite-example",\n    templateUrl: "basic-filter-group.example.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n})\nexport class BasicFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "color",\n            title: "Color",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: "azure",\n                    displayValue: "Azure FilterGroup Basic Example",\n                    count: 3,\n                }, {\n                    value: "black",\n                    displayValue: "Black",\n                    count: 2,\n                }, {\n                    value: "blue",\n                    displayValue: "Blue FilterGroup Basic Example",\n                    count: 3,\n                }, {\n                    value: "yellow",\n                    displayValue: "Yellow",\n                    count: 2,\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "status",\n            title: "Status",\n            allFilterOptions: [\n                {\n                    value: "warning",\n                    displayValue: "Warning",\n                    count: 2,\n                }, {\n                    value: "critical",\n                    displayValue: "Critical",\n                    count: 2,\n                },\n                {\n                    value: "up",\n                    displayValue: "Up",\n                    count: 5,\n                },\n            ],\n            selectedFilterValues: [],\n        },\n        {\n            id: "vendor",\n            title: "Vendors",\n            allFilterOptions: [],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n\n    private outputsSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n    }\n\n    ngAfterViewInit(): void {\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.filteringState = data;\n            // get counts of filters\n            this.recalculateCounts(data);\n        });\n        this.dataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.dataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value];\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n}\n'},doNG:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},dotL:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from "@angular/core";\nimport { DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-custom-data-source-filter-group",\n    templateUrl: "./custom-data-source-filter-group.component.html",\n    styleUrls: ["./custom-data-source-filter-group.component.less"],\n})\nexport class CustomDataSourceFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n'},dpiu:function(e,t,n){"use strict";e.exports=function(e,t){t||(t={}),"function"==typeof t&&(t={cmp:t});var n,i="boolean"==typeof t.cycles&&t.cycles,r=t.cmp&&(n=t.cmp,function(e){return function(t,i){return n({key:t,value:e[t]},{key:i,value:e[i]})}}),o=[];return function e(t){if(t&&t.toJSON&&"function"==typeof t.toJSON&&(t=t.toJSON()),void 0!==t){if("number"==typeof t)return isFinite(t)?""+t:"null";if("object"!=typeof t)return JSON.stringify(t);var n,a;if(Array.isArray(t)){for(a="[",n=0;n<t.length;n++)n&&(a+=","),a+=e(t[n])||"null";return a+"]"}if(null===t)return"null";if(-1!==o.indexOf(t)){if(i)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var l=o.push(t)-1,s=Object.keys(t).sort(r&&r(t));for(a="",n=0;n<s.length;n++){var c=s[n],u=e(t[c]);u&&(a&&(a+=","),a+=JSON.stringify(c)+":"+u)}return o.splice(l,1),"{"+a+"}"}}(e)}},"dpz/":function(e,t,n){"use strict";n.r(t),t.default='<div class="app-table-with-sort__container">\n    <table nui-table [dataSource]="items"\n           [sortable]="true"\n           [sortedColumn]="sortedColumn"\n           (sortOrderChanged)="sortData($event)">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n\n    <footer class="app-table-with-sort-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},dzoy:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},eGNB:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, Inject, OnDestroy, QueryList, ViewChildren } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants, INovaFilteringOutputs } from "@nova-ui/bits";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subscription } from "rxjs";\n\nimport { CustomDataSourceFilterGroupCompositeComponent } from "./custom-data-source-filter-group.component";\nimport { FilterGroupCustomDataSourceService } from "./custom-data-source.service";\nimport { ICustomDSFilteredData, IFilterGroupItem } from "./public-api";\n\n@Component({\n    selector: "app-custom-data-source-filter-group-composite-example",\n    templateUrl: "custom-data-source-filter-group.example.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: FilterGroupCustomDataSourceService,\n    }],\n})\nexport class CustomDataSourceFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    @ViewChildren(CustomDataSourceFilterGroupCompositeComponent) filterGroups: QueryList<CustomDataSourceFilterGroupCompositeComponent>;\n\n    public filterGroupItems?: Array<IFilterGroupItem> = [];\n    public filteringState?: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n    private filterGroupSubscriptions: Array<Subscription> = [];\n\n    constructor(@Inject(DataSourceService) private filterGroupCustomDataSourceService: FilterGroupCustomDataSourceService) { }\n\n    ngAfterViewInit(): void {\n\n        this.filterGroupSubscriptions.push(\n            this.filterGroupCustomDataSourceService.outputsSubject.subscribe((filteredData: ICustomDSFilteredData) => {\n                this.filterGroupItems = filteredData.filterGroupItems;\n                this.filteringState = filteredData.filteringState;\n            })\n        );\n\n        this.filterGroupSubscriptions.push(\n            this.filterGroups.changes.subscribe(() => {\n                this.filterGroupCustomDataSourceService.registerComponent(this.getFilterComponents());\n            })\n        );\n        this.filterGroupCustomDataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.filterGroupCustomDataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomDataSourceFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n\n    ngOnDestroy() {\n        this.filterGroupSubscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n'},eYtq:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},eudf:function(e,t,n){"use strict";n.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-schematic-docs-command",\n    templateUrl: "./schematic-docs-command.component.html",\n})\nexport class SchematicsDocsCommandComponent {}\n'},f1X4:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},f9lG:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport { LOCAL_DATA } from "./filtered-view-with-table-data";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-with-table",\n    styleUrls: ["./filtered-view-with-table.component.less"],\n    templateUrl: "./filtered-view-with-table.component.html",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewWithTableComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n        // here we use ClientSideDataSource since the data we\'re working with is static (RANDOM_ARRAY)\n        // if you have a dynamic data source, you need to extend DataSourceService for your custom filtering behavior\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},fU3e:function(e,t,n){"use strict";var i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):void 0;t.a=i},fVNE:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},fYM0:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},fg5F:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithPaginationDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithPaginationDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},fvIy:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},gQGH:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-table-with-virtual-scroll__container">\n    <div class="app-table-with-virtual-scroll-searchable__search">\n        <nui-search [value]="searchTerm"\n                    (search)="onSearch()"\n                    (cancel)="onSearchCancel()">\n        </nui-search>\n    </div>\n\n    <cdk-virtual-scroll-viewport class="app-table-with-virtual-scroll-scrolling-container" tableStickyHeader #viewportRef [itemSize]="rowHeight">\n    <table nui-table [dataSource]="items | sliceRange: viewportRef.getRenderedRange()"\n           [sortable]="true"\n           [sortedColumn]="sortedColumn"\n           (sortOrderChanged)="sortData($event)">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]="displayedColumns"\n                         [cdkVirtualForOf]="items">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class="app-table-with-virtual-scroll-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                    <div class="d-flex pt-3 pb-3">\n                        <ng-container i18n *ngIf="items.length !== totalItems; else endOfData">, scroll down for more.</ng-container>\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n'},gQUx:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-virtual-scroll-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n        // it is very important to have a height for virtual scroll\n        height: 300px;\n    }\n\n    .app-virtual-scroll-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-virtual-scroll-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-virtual-scroll-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n}\n'},gSNO:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function o(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}Object.defineProperty(t,"__esModule",{value:!0}),t.Observable=void 0;var a=function(){return"function"==typeof Symbol},l=function(e){return a()&&Boolean(Symbol[e])},s=function(e){return l(e)?Symbol[e]:"@@"+e};a()&&!l("observable")&&(Symbol.observable=Symbol("observable"));var c=s("iterator"),u=s("observable"),p=s("species");function d(e,t){var n=e[t];if(null!=n){if("function"!=typeof n)throw new TypeError(n+" is not a function");return n}}function m(e){var t=e.constructor;return void 0!==t&&null===(t=t[p])&&(t=void 0),void 0!==t?t:C}function f(e){return e instanceof C}function h(e){h.log?h.log(e):setTimeout((function(){throw e}))}function g(e){Promise.resolve().then((function(){try{e()}catch(t){h(t)}}))}function b(e){var t=e._cleanup;if(void 0!==t&&(e._cleanup=void 0,t))try{if("function"==typeof t)t();else{var n=d(t,"unsubscribe");n&&n.call(t)}}catch(i){h(i)}}function v(e){e._observer=void 0,e._queue=void 0,e._state="closed"}function S(e,t,n){e._state="running";var i=e._observer;try{var r=d(i,t);switch(t){case"next":r&&r.call(i,n);break;case"error":if(v(e),!r)throw n;r.call(i,n);break;case"complete":v(e),r&&r.call(i)}}catch(o){h(o)}"closed"===e._state?b(e):"running"===e._state&&(e._state="ready")}function w(e,t,n){if("closed"!==e._state){if("buffering"!==e._state)return"ready"!==e._state?(e._state="buffering",e._queue=[{type:t,value:n}],void g((function(){return function(e){var t=e._queue;if(t){e._queue=void 0,e._state="ready";for(var n=0;n<t.length&&(S(e,t[n].type,t[n].value),"closed"!==e._state);++n);}}(e)}))):void S(e,t,n);e._queue.push({type:t,value:n})}}var y=function(){function e(t,n){i(this,e),this._cleanup=void 0,this._observer=t,this._queue=void 0,this._state="initializing";var r=new I(this);try{this._cleanup=n.call(void 0,r)}catch(o){r.error(o)}"initializing"===this._state&&(this._state="ready")}return o(e,[{key:"unsubscribe",value:function(){"closed"!==this._state&&(v(this),b(this))}},{key:"closed",get:function(){return"closed"===this._state}}]),e}(),I=function(){function e(t){i(this,e),this._subscription=t}return o(e,[{key:"next",value:function(e){w(this._subscription,"next",e)}},{key:"error",value:function(e){w(this._subscription,"error",e)}},{key:"complete",value:function(){w(this._subscription,"complete")}},{key:"closed",get:function(){return"closed"===this._subscription._state}}]),e}(),C=function(){function e(t){if(i(this,e),!(this instanceof e))throw new TypeError("Observable cannot be called as a function");if("function"!=typeof t)throw new TypeError("Observable initializer must be a function");this._subscriber=t}return o(e,[{key:"subscribe",value:function(e){return"object"==typeof e&&null!==e||(e={next:e,error:arguments[1],complete:arguments[2]}),new y(e,this._subscriber)}},{key:"forEach",value:function(e){var t=this;return new Promise((function(n,i){if("function"==typeof e)var r=t.subscribe({next:function(t){try{e(t,o)}catch(n){i(n),r.unsubscribe()}},error:i,complete:n});else i(new TypeError(e+" is not a function"));function o(){r.unsubscribe(),n()}}))}},{key:"map",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");return new(m(this))((function(n){return t.subscribe({next:function(t){try{t=e(t)}catch(i){return n.error(i)}n.next(t)},error:function(e){n.error(e)},complete:function(){n.complete()}})}))}},{key:"filter",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");return new(m(this))((function(n){return t.subscribe({next:function(t){try{if(!e(t))return}catch(i){return n.error(i)}n.next(t)},error:function(e){n.error(e)},complete:function(){n.complete()}})}))}},{key:"reduce",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");var n=m(this),i=arguments.length>1,r=!1,o=arguments[1],a=o;return new n((function(n){return t.subscribe({next:function(t){var o=!r;if(r=!0,!o||i)try{a=e(a,t)}catch(l){return n.error(l)}else a=t},error:function(e){n.error(e)},complete:function(){if(!r&&!i)return n.error(new TypeError("Cannot reduce an empty sequence"));n.next(a),n.complete()}})}))}},{key:"concat",value:function(){for(var e=this,t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];var r=m(this);return new r((function(t){var i,o=0;return function e(a){i=a.subscribe({next:function(e){t.next(e)},error:function(e){t.error(e)},complete:function(){o===n.length?(i=void 0,t.complete()):e(r.from(n[o++]))}})}(e),function(){i&&(i.unsubscribe(),i=void 0)}}))}},{key:"flatMap",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");var n=m(this);return new n((function(i){var r=[],o=t.subscribe({next:function(t){if(e)try{t=e(t)}catch(l){return i.error(l)}var o=n.from(t).subscribe({next:function(e){i.next(e)},error:function(e){i.error(e)},complete:function(){var e=r.indexOf(o);e>=0&&r.splice(e,1),a()}});r.push(o)},error:function(e){i.error(e)},complete:function(){a()}});function a(){o.closed&&0===r.length&&i.complete()}return function(){r.forEach((function(e){return e.unsubscribe()})),o.unsubscribe()}}))}},{key:u,value:function(){return this}}],[{key:"from",value:function(t){var n="function"==typeof this?this:e;if(null==t)throw new TypeError(t+" is not an object");var i=d(t,u);if(i){var r=i.call(t);if(Object(r)!==r)throw new TypeError(r+" is not an object");return f(r)&&r.constructor===n?r:new n((function(e){return r.subscribe(e)}))}if(l("iterator")&&(i=d(t,c)))return new n((function(e){g((function(){if(!e.closed){var n=!0,r=!1,o=void 0;try{for(var a,l=i.call(t)[Symbol.iterator]();!(n=(a=l.next()).done);n=!0)if(e.next(a.value),e.closed)return}catch(s){r=!0,o=s}finally{try{n||null==l.return||l.return()}finally{if(r)throw o}}e.complete()}}))}));if(Array.isArray(t))return new n((function(e){g((function(){if(!e.closed){for(var n=0;n<t.length;++n)if(e.next(t[n]),e.closed)return;e.complete()}}))}));throw new TypeError(t+" is not observable")}},{key:"of",value:function(){for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];var r="function"==typeof this?this:e;return new r((function(e){g((function(){if(!e.closed){for(var t=0;t<n.length;++t)if(e.next(n[t]),e.closed)return;e.complete()}}))}))}},{key:p,get:function(){return this}}]),e}();t.Observable=C,a()&&Object.defineProperty(C,Symbol("extensions"),{value:{symbol:u,hostReportError:h},configurable:!0})},gUw7:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},gXYj:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},gg9E:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\n"},gwcX:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},hGg6:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},hJD7:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\nimport {\n    BehaviorSubject,\n    Subject,\n} from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "./paginated-list-data";\nimport { PaginatedListDataSource } from "./paginated-list-data-source.service";\nimport {\n    IServer,\n    IServerFilters,\n} from "./types";\n\n@Component({\n    selector: "app-paginated-list",\n    templateUrl: "./paginated-list.component.html",\n    styleUrls: ["./paginated-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: PaginatedListDataSource,\n        },\n    ],\n})\nexport class PaginatedListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: PaginatedListDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.listItems$.next(data.repeat?.itemsSource || []);\n\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n'},i5hK:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},iJN3:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-table-with-search__container">\n    <div class="app-table-with-search-searchable__search">\n        <nui-search [value]="searchTerm"\n                    (search)="onSearch()"\n                    (cancel)="onSearchCancel()">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]="items">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n\n    <footer class="app-table-with-search-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},iMyP:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},iQ8n:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewTableWithSelectionDataSource,\n} from "./filtered-view-table-with-selection-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-table-with-selection",\n    styleUrls: ["./filtered-view-table-with-selection.component.less"],\n    templateUrl: "./filtered-view-table-with-selection.component.html",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithSelectionDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithSelectionComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithSelectionDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},iSy2:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},iaSc:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    nameof,\n    PaginatorComponent,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    RESULTS_PER_PAGE,\n} from "../filtered-view-table-with-pagination-data";\nimport { FilteredViewTableWithPaginationDataSource } from "../filtered-view-table-with-pagination-data-source.service";\nimport { IServer, IServerFilters } from "../types";\n\n@Component({\n    selector: "app-filtered-view-table-with-pagination-table",\n    templateUrl: "./filtered-view-table.component.html",\n    styleUrls: ["./filtered-view-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithPaginationDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},id5M:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},ikUd:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from "@angular/core";\nimport { DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-custom-template-filter-group",\n    templateUrl: "./custom-template-filter-group.component.html",\n    styleUrls: ["./custom-template-filter-group.component.less"],\n})\nexport class CustomTemplateFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n'},iqZ0:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},j6qz:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { CustomDataSourceFilterGroupCompositeComponent } from "../custom-data-source-filter-group.component";\n\n@Component({\n    selector: "app-custom-data-source-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\n\nexport class CustomDataSourceFilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(CustomDataSourceFilterGroupCompositeComponent) filterGroups: QueryList<CustomDataSourceFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomDataSourceFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},j9M9:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},je8h:function(e,t,n){"use strict";n.r(t),t.default='import { IServer, ServerStatus } from "./types";\n\n// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: "FOCUS-SVR-12345",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-ASD123",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-DSA331",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-JKS212",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "ABERN-SVR-ATQU9404",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-433AAD",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-098331",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-GHJ882",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LLK001",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-KKJ998",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-RRR001",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LKJF12",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-882JJS",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-7733KK",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-JSHNSA",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-KKAEQWE",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-123KKNPQ",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-RRF231",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n];\n'},jlaB:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},k0Wp:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewListWithVirtualScrollDataSource,\n} from "./filtered-view-list-with-virtual-scroll-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-list-with-virtual-scroll",\n    styleUrls: ["./filtered-view-list-with-virtual-scroll.component.less"],\n    templateUrl: "./filtered-view-list-with-virtual-scroll.component.html",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewListWithVirtualScrollDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListWithVirtualScrollComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithVirtualScrollDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},k1r5:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},"kB7/":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@hidden-filters-block-height: 30px;\n\n.nui-filter-groups-wrapper {\n    &__hidden-filters {\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n        background: @nui-color-bg-light-hover;\n        height: @hidden-filters-block-height;\n        padding-left: @nui-space-sm;\n        color: @nui-color-text-secondary;\n        margin-top: @nui-space-sm;\n    }\n    &__popover-hidden-filters {\n        color: @nui-color-text-secondary;\n        line-height: @nui-line-height-small;\n        font-size: @nui-font-size-small;\n    }\n}\n\n'},kI1d:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-table-with-sort__container {\n    overflow: auto;\n}\n\n.app-table-with-sort-scrolling-footer {\n    height: 28px;\n}\n'},kPhL:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},kdya:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},kehG:function(e,t,n){"use strict";n.r(t),t.default='import { CdkVirtualScrollViewport } from "@angular/cdk/scrolling";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISortedItem,\n    nameof,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    CUSTOM_SCROLL_ITEMS_PER_PAGE,\n    RESULTS_PER_PAGE,\n} from "./table-with-custom-virtual-scroll-data";\nimport { TableWithCustomVirtualScrollDataSource } from "./table-with-custom-virtual-scroll-data-source.service";\nimport { IServer, IServerFilters } from "./types";\nimport { VirtualScrollCustomStrategyService } from "./virtual-scroll-custom-strategy.service";\n\n@Component({\n    selector: "app-table-with-custom-virtual-scroll",\n    templateUrl: "./table-with-custom-virtual-scroll.component.html",\n    styleUrls: ["./table-with-custom-virtual-scroll.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        VirtualViewportManager,\n        VirtualScrollCustomStrategyService,\n        {\n            provide: CUSTOM_SCROLL_ITEMS_PER_PAGE,\n            useValue: RESULTS_PER_PAGE,\n        },\n        {\n            provide: DataSourceService,\n            useClass: TableWithCustomVirtualScrollDataSource,\n        },\n    ],\n})\nexport class TableWithCustomVirtualScrollComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: "name",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = ["name"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private previouslyLoadedCount: number;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithCustomVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private customVirtualScrollStrategyService: VirtualScrollCustomStrategyService,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            virtualScroll: {componentInstance: this.customVirtualScrollStrategyService },\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.viewport);\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                let items = data.repeat?.itemsSource || [];\n\n                // number of fetched items from our data source\n                const fetchedItemsCount = items.length;\n\n                // number of useful items after eliminating the leftovers;\n                // leftovers appear when we reach the end of all our data\n                // since we\'re keep requesting the same page multiple times\n                // waiting for new items to be added between subsequent requests\n                const usefulItemsCount = fetchedItemsCount < this.pageSize\n                    ? this.previouslyLoadedCount - fetchedItemsCount\n                    : fetchedItemsCount;\n\n                items = items.slice(0, usefulItemsCount);\n\n                this.previouslyLoadedCount = items.length;\n\n                // append current useful items we need to append it to our previous fetched results\n                this.items = this.items.concat(items);\n\n                this.customVirtualScrollStrategyService.prepareNextPage(fetchedItemsCount);\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n            this.customVirtualScrollStrategyService.reset();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n'},kiga:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},koMX:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},l1iH:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},l26G:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},lDWl:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},lUkS:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},lXXV:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},lbJS:function(e,t,n){"use strict";n.r(t),t.default='<ng-template #emptyListTemplate>\n    <div class="d-flex flex-column align-items-center">\n        <nui-image [isWatermark]="true" image="no-data-to-show"></nui-image>\n        <p class="nui-text-small">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-dialog-filter-groups-wrapper>\n            <app-dialog-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                        [filterGroupItem]="filterGroupItem"\n                                        (filterChanged)="changeFilters($event)"\n                                        (showAllButtonClicked)="handleFilterDialog(filterGroupItem)">\n            </app-dialog-filter-group>\n        </app-dialog-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf="hasItems(); else emptyListTemplate">\n            <nui-repeat id="nui-composites-demo-repeat"\n                        [itemsSource]="filteringState.repeat.itemsSource"\n                        [repeatItemTemplateRef]="listRepeatItemTemplate"\n                        paddingSize="normal">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n'},ly3e:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},m5qS:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-filtered-view-table-with-virtual-scroll-table__container {\n    height: 400px;\n    border-color: lightgray;\n    overflow: auto;\n}\n\n.app-filtered-view-table-with-virtual-scroll-table-scrolling-container {\n    height: 300px;\n}\n\n.app-filtered-view-table-with-virtual-scroll-table-scrolling-footer {\n    height: 28px;\n    .setCssVariable(background-color, nui-color-bg-transparent);\n    .setCssVariable(color, nui-color-text-secondary);\n}\n'},m5yS:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},mNg8:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},"mO+w":function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},mOP6:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport { Observable, of } from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithSearchDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        const params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start))\n            .set("searchField", "name")\n            .set("searchContent", filters.search?.value ?? "");\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithSearchDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n'},mYQz:function(e,t,n){"use strict";n.r(t),t.default='import { Component, Input, OnInit, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-schematic-docs-page",\n    templateUrl: "schematic-docs-page.component.html",\n    styleUrls: ["schematic-docs-page.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class SchematicDocsPageComponent implements OnInit {\n    @Input() schematicFolderName: string;\n    public schematicHeading: string;\n    public angularJsonStylePreprocOptions: string = `\n"stylePreprocessorOptions": {\n    "includePaths": [\n        "node_modules"\n    ]\n}`;\n\n    ngOnInit() {\n        this.schematicHeading = this.schematicFolderName.replace(/-/g, " ");\n    }\n}\n'},mdGB:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    INovaFilteringOutputs,\n    PaginatorComponent,\n    TableComponent,\n} from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from "./basic-table-data";\nimport { IServer } from "./types";\n\n@Component({\n    selector: "app-basic-table",\n    templateUrl: "./basic-table.component.html",\n    styleUrls: ["./basic-table.component.less"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: ClientSideDataSource,\n        },\n    ],\n})\nexport class BasicTableComponent implements OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = ["name", "location", "status"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n'},mgTo:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-filtered-view-table-with-pagination-table__container">\n    <table nui-table [dataSource]="items">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n\n    <footer class="app-filtered-view-table-with-pagination-table-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},miN9:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 20;\n\n"},moRG:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},mz2x:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"SchematicsNovaLayoutComponent","title":"Nova Layout Options Schema","type":"object","description":"Adds a layout","properties":{"path":{"type":"string","format":"path","description":"The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.","visible":false},"project":{"type":"string","description":"The name of the project","$default":{"$source":"projectName"}},"name":{"type":"string","description":"The name of the component","$default":{"$source":"argv","index":0},"x-prompt":"What name would you like to use for the component?"},"viewEncapsulation":{"description":"The view encapsulation strategy to use in the new component","enum":["Emulated","Native","None","ShadowDom"],"type":"string","default":"Emulated","alias":"v"},"changeDetection":{"description":"The change detection strategy to use in the new component","enum":["Default","OnPush"],"type":"string","default":"Default","alias":"c"},"prefix":{"type":"string","description":"The prefix to apply to the generated component selector","alias":"p","oneOf":[{"maxLength":0},{"minLength":1,"format":"html-selector"}]},"styleext":{"description":"The file extension to use for style files","type":"string","default":"less"},"flat":{"type":"boolean","description":"When true, creates the new files at the top level of the current project","default":false},"skipImport":{"type":"boolean","description":"When true, does not import this component into the owning NgModule","default":false},"selector":{"type":"string","format":"html-selector","description":"The HTML selector to use for this component"},"module":{"type":"string","description":"The declaring NgModule","alias":"m"},"export":{"type":"boolean","default":false,"description":"When true, the declaring NgModule exports this component"},"entryComponent":{"type":"boolean","default":false,"description":"When true, the new component is the entry component of the declaring NgModule"},"lintFix":{"type":"boolean","default":false,"description":"When true, applies lint fixes after generating the component"}}}')},n4zJ:function(e,t,n){"use strict";n.r(t),t.default='import { HttpClient, HttpParams } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from "@nova-ui/bits";\nimport _forEach from "lodash/forEach";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from "rxjs";\nimport {\n    catchError,\n    delay,\n    map,\n} from "rxjs/operators";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from "./types";\n\n// @TODO customize the backend API URL\nexport const API_URL = "http://nova-pg.swdev.local/api/v1/servers";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewListWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal "paginator"\n            .set("page", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set("pageSize", String(paging.end - paging.start));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set("filters", JSON.stringify(json));\n        }\n\n        if (filters.search?.value) {\n            params = params.set("searchField", "name");\n            params = params.set("searchContent", filters.search?.value ?? "");\n        }\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set("sortField", filters.sorter.value.sortBy);\n            params = params.set("sortOrder", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === "string[]" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewListWithPaginationDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don\'t need\n        let filterRequestParams = requestParams;\n        ["page", "pageSize", "sortField", "sortOrder"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get("filters") ?? "{}";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewListWithPaginationDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set("filters", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set("groupByField", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set("filters", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n'},nFdp:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from "@nova-ui/bits";\nimport {\n    Subject,\n} from "rxjs";\nimport {\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from "./basic-list-data";\nimport {\n    IServer,\n    IServerFilters,\n} from "./types";\n\n@Component({\n    selector: "app-basic-list",\n    templateUrl: "./basic-list.component.html",\n    styleUrls: ["./basic-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: ClientSideDataSource,\n        },\n    ],\n})\nexport class BasicListComponent implements AfterViewInit, OnDestroy {\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n'},nYsj:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},nlFB:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/schema","id":"SchematicsNovaListComponent","title":"Nova list Schema","type":"object","description":"Adds a list","properties":{"path":{"type":"string","format":"path","description":"The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.","visible":false},"project":{"type":"string","description":"The name of the project","$default":{"$source":"projectName"}},"name":{"type":"string","description":"The name of the component","$default":{"$source":"argv","index":0},"x-prompt":"What name would you like to use for the component?"},"prefix":{"type":"string","description":"The prefix to apply to the generated component selector","alias":"p","oneOf":[{"maxLength":0},{"minLength":1,"format":"html-selector"}]},"flat":{"type":"boolean","description":"When true, creates the new files at the top level of the current project","default":false},"skipImport":{"type":"boolean","description":"When true, does not import this component into the owning NgModule","default":false},"selector":{"type":"string","format":"html-selector","description":"The HTML selector to use for this component"},"module":{"type":"string","description":"The declaring NgModule","alias":"m"},"export":{"type":"boolean","default":false,"description":"When true, the declaring NgModule exports this component"},"lintFix":{"type":"boolean","default":false,"description":"When true, applies lint fixes after generating the component"},"selectionMode":{"description":"Selection mode to be used for the list","type":"string","default":"none","enum":["none","multi","single","singleWithRequiredSelection","radio","radioWithNonRequiredSelection"],"x-prompt":{"message":"What selection mode would you like the list to use?","type":"list","items":[{"value":"none","label":"None (Selection Disabled)"},{"value":"multi","label":"Multi-Select (Checkboxes)"},{"value":"radio","label":"Radio Buttons"},{"value":"radioWithNonRequiredSelection","label":"Radio Buttons with Deselection Allowed"},{"value":"singleWithRequiredSelection","label":"Single-Select with No Radio Buttons"},{"value":"single","label":"Single-Select with No Radio Buttons and Deselection Allowed"}]}},"pagingMode":{"description":"Paging mode to be used for the list","type":"string","default":"virtualScroll","enum":["none","pagination","virtualScroll"],"x-prompt":{"message":"What paging mode would you like the list to use?","type":"list","items":[{"value":"pagination","label":"Pagination"},{"value":"virtualScroll","label":"Virtual Scroll"},{"value":"none","label":"None"}]}},"enableSearch":{"type":"boolean","description":"When true, enables the search functionality for the list","default":true},"enableSort":{"type":"boolean","description":"When true, enables the search functionality for the list","default":true},"dataSource":{"type":"string","default":"serverSide","x-prompt":{"message":"What is the source of your data?","type":"list","items":[{"value":"clientSide","label":"The generated data source will retrieve data locally from a client side source."},{"value":"serverSide","label":"The generated data source will retrieve data remotely from a server side API."},{"value":"custom","label":"No data source will be generated, allowing you to create one from scratch."},{"value":"none","label":"No data source will be generated and no accommodations for a data source, e.g. sorting or search, will be added to the generated code."}]}},"dataSourceName":{"type":"string","description":"Specifies the datasource class name"}},"required":["name","selectionMode","pagingMode"]}')},ntbi:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},"o+Q1":function(e,t,n){"use strict";n.r(t),t.default='<nui-schematic-docs-page schematicFolderName="table">\n    <div schematicSummary>\n        <p>\n            The Table schematic provides the ability to create a generic table that can cover a majority of use cases.\n            Its main responsibility is to integrate the functionality of the <code>nui-table</code> component with other components\n            commonly used with a table such as <code>nui-search</code> and <code>nui-paginator</code>.\n        </p>\n        <h2>Notable Command Line Options</h2>\n        <nui-schematic-cli-option name="selectionMode"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="pagingMode"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="dataSource"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="enableSearch"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="enableSort"></nui-schematic-cli-option>\n    </div>\n    <nui-tab-group schematicExamples>\n        <nui-tab heading="Basic">\n            <h2>Basic Usage</h2>\n            <p>\n                This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to\n                provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the\n                <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n                service, which can be extended with custom filtering behavior.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=basic-table --enable-search=false --enable-sort=false</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="basic-table">\n                <app-basic-table></app-basic-table>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Sort">\n            <h2>Table Sorting</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=table-with-sort --enable-sort --enable-search=false</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="table-with-sort">\n                <app-table-with-sort></app-table-with-sort>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Search">\n            <h2>Table with Search</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=table-with-search --enable-search --enable-sort=false</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="table-with-search">\n                <app-table-with-search></app-table-with-search>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Pagination">\n            <h2>Pagination</h2>\n            <p>\n                This example shows how to add pagination to <code>nui-table</code> with a remote data source.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="table/table-with-pagination">\n                <app-table-with-pagination></app-table-with-pagination>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Selection">\n            <h2>Selection</h2>\n            <p>\n                This example shows how to add selection to <code>nui-table</code> with a remote data source.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide\n                <strong>--selectionMode=multi</strong></nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="table/table-with-selection">\n                <app-table-with-selection></app-table-with-selection>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Virtual Scroll" #vs>\n            <h2>Virtual Scroll</h2>\n            <p>\n                This example shows how to add virtual scroll to <code>nui-repeat</code> with a remote data source.\n            </p>\n            <nui-message [allowDismiss]="false" type="warning">\n                Since the example makes use of search and sorting filters, it\'s important to note that\n                the viewport manager\'s paging progress must be reset each time the data is refreshed with\n                new filtered results whenever the filters are changed.\n            </nui-message>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="table/table-with-virtual-scroll">\n                <app-table-with-virtual-scroll *ngIf="vs.active"></app-table-with-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Custom Virtual Scroll" #cvs>\n            <h2>Virtual Scroll with Custom Strategy</h2>\n            <nui-schematic-docs-command>\n                ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide\n                <strong>--virtualScrollStrategy=custom</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="table/table-with-custom-virtual-scroll">\n                <app-table-with-custom-virtual-scroll *ngIf="cvs.active"></app-table-with-custom-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n\n'},oMWy:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n:host {\n    .app-paginated-list-repeat {\n        margin: @nui-space-sm @nui-space-md;\n        width: 100%;\n    }\n\n    .app-paginated-list-selector {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-paginated-list-sorter {\n        flex-grow: 0;\n        margin-left: @nui-space-md;\n    }\n\n    .app-paginated-list-search {\n        flex-grow: 1;\n        margin-right: @nui-space-md;\n    }\n\n    .app-paginated-list-paginator {\n        flex-grow: 1;\n        margin: 0 @nui-space-md;\n    }\n}\n'},oTZL:function(e,t,n){"use strict";n.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-filter-group-composite-basic",\n    templateUrl: "filter-group-schematic.example.component.html",\n})\nexport class FilterGroupSchematicExampleComponent {\n    constructor() { }\n}\n'},oXt4:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},ogse:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-group-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},opqG:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},p5xQ:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},pMK3:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-group-composite-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="nui-filter-group-composite-dialog__body">\n        <app-item-picker-composite\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker-composite>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},pdtU:function(e,t,n){"use strict";n.r(t),t.default='import { Component, Inject, Injectable, OnDestroy, ViewChild } from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    IFilters,\n    LocalFilteringDataSource,\n    RepeatComponent\n} from "@nova-ui/bits";\nimport _get from "lodash/get";\nimport _isEmpty from "lodash/isEmpty";\nimport { Subject, Subscription } from "rxjs";\nimport { delay } from "rxjs/operators";\n\nimport { ExampleItem, ICustomDSFilteredData, IFilterGroupItem } from "./custom-data-source-filter-group/public-api";\n\nconst RANDOM_ARRAY = [\n    {color: "regular-azure", status: "Critical"},\n    {color: "regular-black", status: "Warning"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-yellow", status: "Critical"},\n    {color: "regular-yellow", status: "Warning"},\n    {color: "regular-black", status: "Up"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-azure", status: "Up"},\n    {color: "regular-blue", status: "Up"},\n    {color: "regular-azure", status: "Critical"},\n];\n\nconst filterGroupItems: IFilterGroupItem[] = [\n    {\n        id: "color",\n        title: "Color",\n        expanded: true,\n        allFilterOptions: [\n            {\n                value: "azure",\n                displayValue: "Azure",\n                count: 3,\n            }, {\n                value: "black",\n                displayValue: "Black",\n                count: 2,\n            }, {\n                value: "blue",\n                displayValue: "Blue",\n                count: 3,\n            }, {\n                value: "yellow",\n                displayValue: "Yellow",\n                count: 2,\n            },\n        ],\n        selectedFilterValues: [],\n    }, {\n        id: "status",\n        title: "Status",\n        allFilterOptions: [\n            {\n                value: "warning",\n                displayValue: "Warning",\n                count: 2,\n            }, {\n                value: "critical",\n                displayValue: "Critical",\n                count: 2,\n            },\n            {\n                value: "up",\n                displayValue: "Up",\n                count: 5,\n            },\n        ],\n        selectedFilterValues: [],\n    },\n    {\n        id: "vendor",\n        title: "Vendors",\n        allFilterOptions: [],\n        selectedFilterValues: [],\n    },\n];\n\n/** @ignore */\n@Injectable()\nexport class FakeHTTPService {\n    public receiveFilteredDataSubject: Subject<ICustomDSFilteredData> = new Subject<ICustomDSFilteredData>();\n    public getFilteredDataSubject: Subject<IFilters> = new Subject<IFilters>();\n\n    constructor() {}\n\n    public async getData(filters: IFilters): Promise<ICustomDSFilteredData> {\n        this.getFilteredDataSubject.next(filters);\n\n        return new Promise((resolve) => {\n            this.receiveFilteredDataSubject.subscribe((filteredData: ICustomDSFilteredData) => {\n                resolve(filteredData);\n            });\n        });\n    }\n\n    public receiveFilteredData(filteredData: ICustomDSFilteredData): void {\n        this.receiveFilteredDataSubject.next(filteredData);\n    }\n}\n\n/** @ignore */\n@Component({\n    selector: "nui-fake-filtering-datasource-backend-component",\n    template: ``,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n})\n// tslint:disable-next-line:component-class-suffix\nexport class FakeServer implements OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = filterGroupItems;\n    public filteringState: IFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n\n    private filterGroupSubscriptions: Array<Subscription> = [];\n\n    @ViewChild(RepeatComponent) filteringRepeat: RepeatComponent;\n\n    constructor(@Inject(DataSourceService) private dataSourceService: DataSourceService<ExampleItem>,\n                @Inject(FakeHTTPService) private httpService: FakeHTTPService) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n\n        this.filterGroupSubscriptions.push(\n            this.dataSourceService.outputsSubject.subscribe((filteringState: IFilteringOutputs) => {\n                this.filteringState = filteringState;\n                this.recalculateCounts(filteringState);\n            })\n        );\n\n        this.filterGroupSubscriptions.push(\n            this.httpService.getFilteredDataSubject\n                .pipe(delay(500))\n                .subscribe(async (filters: IFilters) => {\n                    this.filteringState = await this.dataSourceService.getFilteredData(filters);\n                    this.recalculateCounts(this.filteringState);\n                    this.sendFilteredData();\n                })\n        );\n    }\n\n    private sendFilteredData(): void {\n        this.httpService.receiveFilteredData({\n            filterGroupItems: this.filterGroupItems,\n            filteringState: this.filteringState,\n        });\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs): void {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n\n                if (!_isEmpty(counts)) {\n                    filterOption.count = counts[filterOption.value];\n                }\n            });\n        });\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, "filteringState.repeat.itemsSource"));\n    }\n\n    ngOnDestroy() {\n        this.filterGroupSubscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n'},prgC:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport {\n    BehaviorSubject,\n    Subject,\n} from "rxjs";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from "rxjs/operators";\n\nimport {\n    IServer,\n    IServerFilters,\n} from "./types";\nimport {\n    RESULTS_PER_PAGE,\n} from "./virtual-scroll-list-data";\nimport { VirtualScrollListDataSource } from "./virtual-scroll-list-data-source.service";\n\n@Component({\n    selector: "app-virtual-scroll-list",\n    templateUrl: "./virtual-scroll-list.component.html",\n    styleUrls: ["./virtual-scroll-list.component.less"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: VirtualScrollListDataSource,\n        },\n    ],\n})\nexport class VirtualScrollListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: "name",\n        },\n        {\n            title: $localize`Status`,\n            value: "status",\n        },\n        {\n            title: $localize`Location`,\n            value: "location",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: VirtualScrollListDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat\'s CDK Viewport Ref\n            .setViewport(this.repeat.viewportRef)\n\n            // Note: Initializing the stream with the desired page size, based on which\n            // ViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({pageSize: RESULTS_PER_PAGE})\n                .pipe(\n                    // Since we know the total number of items we can stop the stream when dataset end is reached\n                    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                    filter(() => {\n                        const items = this.listItems$.getValue();\n                        return !items.length || items.length < this.totalItems;\n                    }),\n                    tap(() => this.applyFilters(false)),\n                    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                    switchMap(() => this.dataSource.outputsSubject.pipe(\n                        tap((data: IFilteringOutputs) => {\n                            // update the list of items to be rendered\n                            const items = data.repeat?.itemsSource || [];\n\n                            // after receiving data we need to append it to our previous fetched results\n                            this.listItems$.next(this.listItems$.getValue().concat(items));\n\n                            this.totalItems = data.paginator?.total || 0;\n\n                            this.changeDetection.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.destroy$)\n            ).subscribe();\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>("search"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.listItems$.next([]);\n            this.changeDetection.detectChanges();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n'},ps42:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { DialogFilterGroupCompositeComponent } from "../dialog-filter-group.component";\n\n@Component({\n    selector: "app-dialog-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\n\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(DialogFilterGroupCompositeComponent) filterGroups: QueryList<DialogFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: DialogFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},pxDw:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-tree #child></app-filtered-view-tree>\n        </div>\n    </nui-panel>\n</div>\n'},qB8J:function(e,t,n){"use strict";n.r(t),t.default='<nui-schematic-docs-page schematicFolderName="filter-group">\n    <nui-tab-group schematicExamples>\n        <nui-tab heading="Basic usage">\n            <h2>Basic Usage</h2>\n            <p>Filter group depends heavily on the\n                <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a> service,\n                    so first and foremost please check out the documentation for\n                <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>.\n            </p>\n            <p>\n                This example contains all the files generated by the CLI command. The schematic will output a feature module,\n                a filter group composite and helper components: <code>filter-groups-wrapper</code>,  <code>filter-group-dialog</code>\n                and <code>item-picker</code>. Except for the wrapper, usage of these components may not be required by your implementation.\n            </p>\n            <p>Once you have scaffolded your filter group, follow these steps to add it to your application:</p>\n            <ol>\n                <li>\n                    In your template, place your composite(s) inside the wrapper component. The wrapper will register your composites with\n                    <a target="_blank" href="../injectables/ClientSideDataSource.html"><code>ClientSideDataSource</code></a>\n                    as well as hide and display a popover over filter groups with no existing values.\n                </li>\n                <li>\n                    Pass an <a target="_blank" href="../interfaces/IFilterGroupItem.html"><code>IFilterGroupItem</code></a> object to each <code>[filterGroupItem]</code> input.\n                </li>\n                <li>\n                    To receive new filtering state (<code>IFilteringOutputs</code>), bind to the <code>(filterChanged)</code> output\n                    and invoke the <code>applyFilters</code> method of\n                    <a target="_blank" href="../../../../../../nova-bits/develop/sdk/api-docs-ng2/injectables/ClientSideDataSource.html">\n                        <code>ClientSideDataSource</code>.\n                    </a>\n                </li>\n\n            </ol>\n            <p>\n                <b>Note:</b> If you provide a value for the count property in\n                <a target="_blank" href="../interfaces/IFilterGroupOption.html"><code>IFilterGroupOption</code></a>, counts\n                will be added to the checkbox template. To recalculate counts, you must implement a <code>recalculateCounts</code> method and\n                call it upon receiving filteringState <code>IFilteringOutputs</code>.\n            </p>\n\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=basic-filter-group --p=app</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="basic-filter-group">\n                <app-basic-filter-group-composite-example></app-basic-filter-group-composite-example>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Custom template">\n            <h2>Custom Component Templates</h2>\n            <p>\n                To use a custom <strong>checkbox</strong> or <strong>expander </strong> <code>ng-template</code>,\n                use the <code>[checkboxTemplateRef]</code> or <code>[expanderTemplateRef]</code> input of the filter group.\n            </p>\n            <p>\n                To pre-select filters, define <code>selectedFilterValues</code> for your\n                <a target="_blank" href="../interfaces/IFilterGroupItem.html"><code>IFilterGroupItem</code></a> objects.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=custom-template-filter-group --p=app\n                <span appendedText>with some manual adjustments that can be seen below</span>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="custom-template-filter-group">\n                <app-custom-template-filter-group-composite-example></app-custom-template-filter-group-composite-example>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading="Custom data source">\n            <h2>Custom Data Source</h2>\n            <p>To use Filter Group with a custom data source:</p>\n            <ol>\n                <li>\n                    Create a custom data source service that extends <code>DataSourceService</code> and implements a method called <code>getFilteredData</code>.\n                    This method will communicate with an HTTP service to fetch filtered data and emit it back to the filter group.\n                </li>\n                <li>\n                    Get a reference to your filter groups via <code>ViewChildren</code> and subscribe to their changes. In the callback, register\n                    components in your custom data service using the <code>registerComponent</code> method of<code>DataSourceService</code>.\n                </li>\n                <li>\n                    On filter change, have the custom data source service emit filters (<code>IFilters</code>) to the http service\n                    and receive a filtered data object (<code>ICustomDSFilteredData</code>) in return.\n                    The filtered data object consists of filterGroupItems (<code>IFilterGroupItem[]</code>) and filteringState (<code>IFilteringOutputs</code>).\n                </li>\n            </ol>\n            <p>\n                As implementations of the custom data source service may vary, other data may be passed from the filter group to the custom data source\n                in order for the custom data source to apply filters and return filtered data.\n            </p>\n\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=custom-data-source-filter-group --p=app\n                <span appendedText>with some manual adjustments that can be seen below</span>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="custom-data-source-filter-group">\n                <app-custom-data-source-filter-group-composite-example></app-custom-data-source-filter-group-composite-example>\n                <nui-fake-filtering-datasource-backend-component></nui-fake-filtering-datasource-backend-component>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n\n\n        <nui-tab heading="Collapse / Dialog">\n            <h2>Handle Multiple Filter Group Options</h2>\n            <p>\n                Only 10 filter group options are displayed by default. You can change this number by setting the <code>itemsToDisplay</code>\n                property of an <a target="_blank" href="../interfaces/IFilterGroupItem.html"><code>IFilterGroupItem</code></a>.\n            </p>\n            <p>\n                The remaining options will be replaced with a <strong>Show all</strong> button bound to the <code>(showAllButtonClicked)</code> output.\n                To display the hidden options, you can use the <code>FilterGroupCompositeDialogComponent</code> generated by the schematic:\n            </p>\n            <ol>\n                <li>\n                    Implement an item picker and place it in the dialog template. The example below uses a simple selectable list - to add more functionality,\n                    such as sorting and pagination, refer to the <a target="_blank" href="../additional-documentation/schematics/list.html">list schematic docs</a>.\n                </li>\n                <li>\n                    Add your dialog component to your module\'s <code>entryComponents</code>.\n                </li>\n                <li>\n                    Implement a handler for the <code>showAllButtonClicked</code> output.\n                    Use it to open the dialog, feed it the required parameters and update selection on <code>dialogClosed</code> event\n                    (refer to the <code>handleFilterDialog</code> method in the example).\n                </li>\n            </ol>\n\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=dialog-filter-group --p=app\n                <span appendedText>with some manual adjustments that can be seen below</span>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="dialog-filter-group">\n                <app-dialog-filter-group-composite-example></app-dialog-filter-group-composite-example>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n'},qJmK:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n    NuiSpinnerModule,\n} from "@nova-ui/bits";\n\nimport { DialogFilterGroupCompositeComponent } from "./dialog-filter-group.component";\nimport { FilterGroupCompositeDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerCompositeModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiDialogModule,\n        NuiSpinnerModule,\n        NuiButtonModule,\n        ItemPickerCompositeModule,\n        NuiPopoverModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        DialogFilterGroupCompositeComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        DialogFilterGroupCompositeComponent,\n    ],\n    providers: [FilterGroupService],\n    entryComponents: [FilterGroupCompositeDialogComponent],\n})\n\nexport class DialogFilterGroupCompositeModule {\n}\n'},qKGI:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},qlrW:function(e,t,n){var i=n("2orZ").parse;function r(e){return e.replace(/[\s,]+/g," ").trim()}var o={},a={},l=!0,s=!1;function c(e){var t=r(e);if(o[t])return o[t];var n=i(e,{experimentalFragmentVariables:s});if(!n||"Document"!==n.kind)throw new Error("Not a valid GraphQL document.");return n=function e(t,n){var i=Object.prototype.toString.call(t);if("[object Array]"===i)return t.map((function(t){return e(t,n)}));if("[object Object]"!==i)throw new Error("Unexpected input.");n&&t.loc&&delete t.loc,t.loc&&(delete t.loc.startToken,delete t.loc.endToken);var r,o,a,l=Object.keys(t);for(r in l)l.hasOwnProperty(r)&&(o=t[l[r]],"[object Object]"!==(a=Object.prototype.toString.call(o))&&"[object Array]"!==a||(t[l[r]]=e(o,!0)));return t}(n=function(e){for(var t,n={},i=[],o=0;o<e.definitions.length;o++){var s=e.definitions[o];if("FragmentDefinition"===s.kind){var c=s.name.value,u=r((t=s.loc).source.body.substring(t.start,t.end));a.hasOwnProperty(c)&&!a[c][u]?(l&&console.warn("Warning: fragment with name "+c+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"),a[c][u]=!0):a.hasOwnProperty(c)||(a[c]={},a[c][u]=!0),n[u]||(n[u]=!0,i.push(s))}else i.push(s)}return e.definitions=i,e}(n),!1),o[t]=n,n}function u(){for(var e=Array.prototype.slice.call(arguments),t=e[0],n="string"==typeof t?t:t[0],i=1;i<e.length;i++)n+=e[i]&&e[i].kind&&"Document"===e[i].kind?e[i].loc.source.body:e[i],n+=t[i];return c(n)}u.default=u,u.resetCaches=function(){o={},a={}},u.disableFragmentWarnings=function(){l=!1},u.enableExperimentalFragmentVariables=function(){s=!0},u.disableExperimentalFragmentVariables=function(){s=!1},e.exports=u},qrx0:function(e,t,n){"use strict";n.r(t),t.default=".schematic-docs-example {\n    &__files {\n        overflow-x: auto;\n    }\n\n    &__selected-file {\n        font-weight: bold;\n    }\n}\n.nui-source-inspector-code {\n    max-height: 600px;\n    overflow-y: auto;\n\n    .nui-example-code {\n        min-width: fit-content;\n    }\n}\n"},qsEd:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},qySb:function(e,t,n){"use strict";n.r(t),t.default='<ng-template #emptyListTemplate>\n    <div class="d-flex flex-column align-items-center">\n        <nui-image [isWatermark]="true" image="no-data-to-show"></nui-image>\n        <p class="nui-text-small">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-basic-filter-groups-wrapper>\n            <app-basic-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                        [filterGroupItem]="filterGroupItem"\n                                        (filterChanged)="changeFilters($event)"></app-basic-filter-group>\n        </app-basic-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf="hasItems(); else emptyListTemplate">\n            <nui-repeat id="nui-composites-demo-repeat"\n                        [itemsSource]="filteringState.repeat.itemsSource"\n                        [repeatItemTemplateRef]="listRepeatItemTemplate"\n                        paddingSize="normal">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n'},r2Ey:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-group-dialog">\n    <nui-dialog-header [title]="title" (closed)="closeDialog()"></nui-dialog-header>\n    <div class="filter-group-dialog__body">\n        <app-item-picker\n            [itemPickerOptions]="itemPickerOptions"\n            [selectedValues]="selectedValues"\n            (selectionChanged)="onSelectionChanged($event)"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type="button"\n                (click)="closeDialog()" i18n>\n            Cancel\n        </button>\n        <button nui-button type="button"\n                displayStyle="primary"\n                (click)="acceptDialogFilters()" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n'},r44w:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},rDi6:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) private dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},rHCs:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},rLrJ:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="nui-filter-group-composite">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="nui-filter-group-composite__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between nui-filter-group-composite__checkbox">\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block nui-filter-group-composite__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="nui-filter-group-composite__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},rXZs:function(e,t,n){"use strict";n.r(t),t.default='<nui-message [allowDismiss]="false" type="info">\n    This code has been generated using the following command:\n    <code>\n        <ng-content></ng-content>\n    </code>\n    <ng-content select="[appendedText]"></ng-content>\n</nui-message>\n'},rthe:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},ruFn:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-table-with-search__container {\n    overflow: auto;\n}\n\n.app-table-with-search-searchable__search {\n    max-width: 350px;\n    margin-bottom: @nui-space-xs;\n    margin-left: auto;\n}\n\n.app-table-with-search-scrolling-footer {\n    height: 28px;\n}\n'},"s/Hs":function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},s0pq:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-variables";\n@import (reference) "mixins";\n\n.icon-margin {\n    margin-right: @nui-space-xs;\n}\n\n.app-table-with-selection__container {\n    overflow: auto;\n}\n\n.app-table-with-selection-searchable__search {\n    max-width: 350px;\n    margin-bottom: @nui-space-xs;\n    margin-left: auto;\n}\n\n.app-table-with-selection-scrolling-footer {\n    height: 28px;\n}\n'},sJsX:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},"sR+Z":function(e,t,n){"use strict";n.r(t),t.default='import { ListRange } from "@angular/cdk/collections";\nimport {\n    Inject,\n    Injectable,\n} from "@angular/core";\nimport {\n    IFilter,\n    IFilterPub,\n} from "@nova-ui/bits";\n\nimport { CUSTOM_SCROLL_ITEMS_PER_PAGE } from "../filtered-view-table-with-custom-virtual-scroll-data";\n\n@Injectable()\nexport class VirtualScrollCustomStrategyService implements IFilterPub<IFilter<ListRange>> {\n    public itemsPerPage: number;\n\n    protected virtualScrollRange: ListRange;\n\n    constructor(@Inject(CUSTOM_SCROLL_ITEMS_PER_PAGE) itemsPerPage: number) {\n        this.itemsPerPage = itemsPerPage;\n        this.reset();\n    }\n\n    public getFilters(): IFilter<ListRange> {\n        return {\n            type: "virtualScroll",\n            value: this.virtualScrollRange,\n        };\n    }\n\n    public reset() {\n        this.virtualScrollRange = { start: 0, end: this.itemsPerPage };\n    }\n\n    public prepareNextPage(fetchedItemsCount: number) {\n        if (fetchedItemsCount < this.itemsPerPage) {\n            // keep requesting the same page if not all expected items per page were loaded\n        } else {\n            // advances "pagination" to the next pages\n            this.virtualScrollRange.start += this.itemsPerPage;\n            this.virtualScrollRange.end = this.virtualScrollRange.start + this.itemsPerPage;\n        }\n    }\n}\n'},"sYm+":function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.filter-panel__heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &-label {\n        text-transform: uppercase;\n        font-weight: @nui-font-weight-semibold;\n    }\n}\n\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\n'},sfBt:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},sjIk:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},suM6:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},syvg:function(e,t,n){"use strict";n.r(t),t.default='import { IServer, ServerStatus } from "./types";\n\n// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: "FOCUS-SVR-12345",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-ASD123",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-DSA331",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-JKS212",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "ABERN-SVR-ATQU9404",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-433AAD",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-098331",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-GHJ882",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LLK001",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-KKJ998",\n        location: "Kyiv",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-RRR001",\n        location: "Brno",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-LKJF12",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n    {\n        name: "Man-LT-882JJS",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-7733KK",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-JSHNSA",\n        location: "Austin",\n        status: ServerStatus.active,\n    },\n    {\n        name: "FOCUS-SVR-KKAEQWE",\n        location: "Kyiv",\n        status: ServerStatus.down,\n    },\n    {\n        name: "FOCUS-SVR-123KKNPQ",\n        location: "Brno",\n        status: ServerStatus.active,\n    },\n    {\n        name: "Man-LT-RRF231",\n        location: "Austin",\n        status: ServerStatus.down,\n    },\n];\n'},sz9x:function(e,t,n){"use strict";n.r(t),t.default='import {Component, Input, OnInit, TemplateRef} from "@angular/core";\nimport _isObject from "lodash/isObject";\nimport _sortBy from "lodash/sortBy";\n\n@Component({\n    selector: "nui-recursive-object-view",\n    template: `\n        <div class="ml-5" *ngFor="let key of orderOfKeys">\n            <div *ngIf="checkInstance(key); else notObject">\n                <nui-expander [header]="key" icon="group">\n                    <nui-recursive-object-view [object]="object[key]"\n                                               [objectTemplate]="objectTemplate"\n                                               [notObjectTemplate]="notObjectTemplate">\n                        <ng-container [ngTemplateOutlet]="objectTemplate"\n                                      [ngTemplateOutletContext]="{item: object[key]}"></ng-container>\n                    </nui-recursive-object-view>\n                </nui-expander>\n            </div>\n            <ng-template #notObject>\n                <ng-container [ngTemplateOutlet]="notObjectTemplate"\n                              [ngTemplateOutletContext]="{item: key}"></ng-container>\n            </ng-template>\n        </div>\n    `,\n})\nexport class RecursiveObjectViewComponent implements OnInit {\n    @Input() object: any;\n    @Input() objectTemplate: TemplateRef<string>;\n    @Input() notObjectTemplate: TemplateRef<string>;\n\n    public orderOfKeys: Array<string>;\n\n    ngOnInit() {\n        this.orderOfKeys = _sortBy(Object.keys(this.object), (key: string) => key.length);\n    }\n\n    public checkInstance(key: string) {\n        return _isObject(this.object[key]);\n    }\n}\n'},t308:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from "@angular/core";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from "@nova-ui/bits";\nimport _pull from "lodash/pull";\nimport { Subscription } from "rxjs";\n\nimport { FilterGroupComponent } from "./filter-group/filter-group.component";\nimport { IFilterGroupItem } from "./filter-group/public-api";\nimport {\n    FilteredViewTableWithCustomVirtualScrollDataSource,\n} from "./filtered-view-table-with-custom-virtual-scroll-data-source.service";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from "./types";\n\n@Component({\n    selector: "app-filtered-view-table-with-custom-virtual-scroll",\n    styleUrls: ["./filtered-view-table-with-custom-virtual-scroll.component.less"],\n    templateUrl: "./filtered-view-table-with-custom-virtual-scroll.component.html",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithCustomVirtualScrollDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithCustomVirtualScrollComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: "status",\n            title: "Status",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: "Down",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: "Active",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: "location",\n            title: "Location",\n            allFilterOptions: [\n                {\n                    value: "Austin",\n                    displayValue: "Austin",\n                },\n                {\n                    value: "Brno",\n                    displayValue: "Brno",\n                },\n                {\n                    value: "Bucharest",\n                    displayValue: "Bucharest",\n                },\n                {\n                    value: "Kyiv",\n                    displayValue: "Kyiv",\n                },\n                {\n                    value: "London",\n                    displayValue: "London",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild("child") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithCustomVirtualScrollDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n'},t8CO:function(e,t,n){"use strict";n.r(t),t.default='import { ListRange } from "@angular/cdk/collections";\nimport {\n    Inject,\n    Injectable,\n} from "@angular/core";\nimport {\n    IFilter,\n    IFilterPub,\n} from "@nova-ui/bits";\n\nimport { CUSTOM_SCROLL_ITEMS_PER_PAGE } from "./table-with-custom-virtual-scroll-data";\n\n@Injectable()\nexport class VirtualScrollCustomStrategyService implements IFilterPub<IFilter<ListRange>> {\n    public itemsPerPage: number;\n\n    protected virtualScrollRange: ListRange;\n\n    constructor(@Inject(CUSTOM_SCROLL_ITEMS_PER_PAGE) itemsPerPage: number) {\n        this.itemsPerPage = itemsPerPage;\n        this.reset();\n    }\n\n    public getFilters(): IFilter<ListRange> {\n        return {\n            type: "virtualScroll",\n            value: this.virtualScrollRange,\n        };\n    }\n\n    public reset() {\n        this.virtualScrollRange = { start: 0, end: this.itemsPerPage };\n    }\n\n    public prepareNextPage(fetchedItemsCount: number) {\n        if (fetchedItemsCount < this.itemsPerPage) {\n            // keep requesting the same page if not all expected items per page were loaded\n        } else {\n            // advances "pagination" to the next pages\n            this.virtualScrollRange.start += this.itemsPerPage;\n            this.virtualScrollRange.end = this.virtualScrollRange.start + this.itemsPerPage;\n        }\n    }\n}\n'},tYdv:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-item-picker-composite">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n\n    <div>\n        <div class="d-flex flex-row">\n            <nui-repeat class="app-list-repeat"\n                        [selectionMode]="selectionMode"\n                        [repeatItemTemplateRef]="listRepeatDefaultItemTemplate"\n                        [selection]="selectedOptions"\n                        [itemsSource]="itemPickerOptions"\n                        (selectionChange)="onSelection($event)">\n            </nui-repeat>\n        </div>\n    </div>\n\n</div>\n'},"u6o/":function(e,t,n){"use strict";n.r(t),t.default='import { ScrollingModule } from "@angular/cdk/scrolling";\nimport { CommonModule, DatePipe } from "@angular/common";\nimport { HttpClientModule } from "@angular/common/http";\nimport { NgModule } from "@angular/core";\nimport { Route, RouterModule, Routes } from "@angular/router";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiImageModule,\n    NuiMessageModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSelectorModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n    NuiTabsModule,\n    NuiToolbarModule,\n    SrlcStage,\n} from "@nova-ui/bits";\nimport { APOLLO_OPTIONS, ApolloModule } from "apollo-angular";\nimport { HttpLink, HttpLinkModule } from "apollo-angular-link-http";\nimport { InMemoryCache } from "apollo-cache-inmemory";\n\nimport { BasicFilterGroupExampleComponent } from "./filter-group/basic-filter-group/basic-filter-group.example.component";\nimport { BasicFilterGroupCompositeModule } from "./filter-group/basic-filter-group/basic-filter-group.module";\nimport { CustomDataSourceFilterGroupExampleComponent } from "./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component";\nimport { CustomDataSourceFilterGroupCompositeModule } from "./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module";\nimport { CustomTemplateFilterGroupExampleComponent } from "./filter-group/custom-template-filter-group/custom-template-filter-group.example.component";\nimport { CustomTemplateFilterGroupCompositeModule } from "./filter-group/custom-template-filter-group/custom-template-filter-group.module";\nimport { DialogFilterGroupExampleComponent } from "./filter-group/dialog-filter-group/dialog-filter-group.example.component";\nimport { DialogFilterGroupCompositeModule } from "./filter-group/dialog-filter-group/dialog-filter-group.module";\nimport { FakeHTTPService, FakeServer } from "./filter-group/fake-http.service";\nimport { FilterGroupSchematicExampleComponent } from "./filter-group/filter-group-schematic.example.component";\nimport { FilteredViewListWithPaginationComponent } from "./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component";\nimport { FilteredViewListWithPaginationModule } from "./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module";\nimport { FilteredViewListWithVirtualScrollComponent } from "./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component";\nimport { FilteredViewListWithVirtualScrollModule } from "./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module";\nimport { FilteredViewSchematicExampleComponent } from "./filtered-view/filtered-view-schematic.example.component";\nimport { FilteredViewSchematicOutletComponent } from "./filtered-view/filtered-view-schematics.outlet.component";\nimport { FilteredViewTableWithCustomVirtualScrollComponent } from "./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component";\nimport { FilteredViewTableWithCustomVirtualScrollModule } from "./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module";\nimport { FilteredViewTableWithPaginationComponent } from "./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component";\nimport { FilteredViewTableWithPaginationModule } from "./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module";\nimport { FilteredViewTableWithSelectionComponent } from "./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component";\nimport { FilteredViewTableWithSelectionModule } from "./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module";\nimport { FilteredViewTableWithVirtualScrollSelectionComponent } from "./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component";\nimport { FilteredViewTableWithVirtualScrollSelectionModule } from "./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module";\nimport { FilteredViewTableWithVirtualScrollComponent } from "./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component";\nimport { FilteredViewTableWithVirtualScrollModule } from "./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module";\nimport { FilteredViewWithListComponent } from "./filtered-view/filtered-view-with-list/filtered-view-with-list.component";\nimport { FilteredViewWithListModule } from "./filtered-view/filtered-view-with-list/filtered-view-with-list.module";\nimport { FilteredViewWithTableComponent } from "./filtered-view/filtered-view-with-table/filtered-view-with-table.component";\nimport { FilteredViewWithTableModule } from "./filtered-view/filtered-view-with-table/filtered-view-with-table.module";\nimport { FilteredViewWithTreeComponent } from "./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component";\nimport { FilteredViewWithTreeModule } from "./filtered-view/filtered-view-with-tree/filtered-view-with-tree.module";\nimport { BasicListComponent } from "./list/basic-list/basic-list.component";\nimport { ListSchematicExampleComponent } from "./list/list-schematic.example.component";\nimport { ListSchematicsOutletComponent } from "./list/list-schematics-outlet.component";\nimport { PaginatedListComponent } from "./list/paginated-list/paginated-list.component";\nimport { SearchListComponent } from "./list/search-list/search-list.component";\nimport { SelectionListComponent } from "./list/selection-list/selection-list.component";\nimport { VirtualScrollListComponent } from "./list/virtual-scroll-list/virtual-scroll-list.component";\nimport { SchematicsDocsComponent } from "./schematics-docs.component";\nimport { BasicTableComponent } from "./table/basic-table/basic-table.component";\nimport { TableSchematicExampleComponent } from "./table/table-schematic-example.component";\nimport { TableWithCustomVirtualScrollComponent } from "./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component";\nimport { TableWithPaginationComponent } from "./table/table-with-pagination/table-with-pagination.component";\nimport { TableWithSearchComponent } from "./table/table-with-search/table-with-search.component";\nimport { TableWithSelectionComponent } from "./table/table-with-selection/table-with-selection.component";\nimport { TableWithSortComponent } from "./table/table-with-sort/table-with-sort.component";\nimport { TableWithVirtualScrollComponent } from "./table/table-with-virtual-scroll/table-with-virtual-scroll.component";\nimport { RecursiveObjectViewComponent } from "./utils/recursive-object-view.component";\nimport { SchematicsDocsCliOptionComponent } from "./utils/schematic-docs-cli-option/schematic-docs-cli-option.component";\nimport { SchematicsDocsCommandComponent } from "./utils/schematic-docs-command/schematic-docs-command.component";\nimport { SchematicDocsExampleComponent } from "./utils/schematic-docs-example/schematic-docs-example.component";\nimport { SchematicDocsPageComponent } from "./utils/schematic-docs-page/schematic-docs-page.component";\nimport { SchematicJsonComponent } from "./utils/schematic-json.component";\n\nconst COUNTRIES_API = "https://countries-274616.ew.r.appspot.com/";\n\n\nenum FilteredViewRoutes {\n    Main = "",\n    List = "list",\n    ListPagination = "list-pagination",\n    ListVirtualScroll = "list-virtual-scroll",\n    Table = "table",\n    TablePagination = "table-pagination",\n    TablePaginationSelection = "table-pagination-selection",\n    TableVirtualScroll = "table-virtual-scroll",\n    TableVirtualScrollSelection = "table-virtual-scroll-selection",\n    TableVirtualScrollCustom = "table-virtual-scroll-custom",\n}\n\nconst FILTERED_VIEW_CHILD_ROUTES: (Route & { path: FilteredViewRoutes })[] = [\n    {\n        path: FilteredViewRoutes.Main,\n        component: FilteredViewSchematicExampleComponent,\n    },\n    {\n        path: FilteredViewRoutes.List,\n        component: FilteredViewWithListComponent,\n    },\n    {\n        path: FilteredViewRoutes.ListPagination,\n        component: FilteredViewListWithPaginationComponent,\n    },\n    {\n        path: FilteredViewRoutes.ListVirtualScroll,\n        component: FilteredViewListWithVirtualScrollComponent,\n    },\n    {\n        path: FilteredViewRoutes.Table,\n        component: FilteredViewWithTableComponent,\n    },\n    {\n        path: FilteredViewRoutes.TablePagination,\n        component: FilteredViewTableWithPaginationComponent,\n    },\n    {\n        path: FilteredViewRoutes.TablePaginationSelection,\n        component: FilteredViewTableWithSelectionComponent,\n    },\n    {\n        path: FilteredViewRoutes.TableVirtualScroll,\n        component: FilteredViewTableWithVirtualScrollComponent,\n    },\n    {\n        path: FilteredViewRoutes.TableVirtualScrollSelection,\n        component: FilteredViewTableWithVirtualScrollSelectionComponent,\n    },\n    {\n        path: FilteredViewRoutes.TableVirtualScrollCustom,\n        component: FilteredViewTableWithCustomVirtualScrollComponent,\n    },\n];\n\n\nconst staticRoutes: Routes = [\n    {\n        path: "",\n        component: SchematicsDocsComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "filtered-view",\n        component: FilteredViewSchematicOutletComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n        children: FILTERED_VIEW_CHILD_ROUTES,\n    },\n    {\n        path: "filter-group",\n        component: FilterGroupSchematicExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "list",\n        component: ListSchematicExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "list-outlet",\n        component: ListSchematicsOutletComponent,\n        children: [\n            {\n                path: "selection",\n                component: SelectionListComponent,\n            },\n            {\n                path: "vscroll",\n                component: VirtualScrollListComponent,\n            },\n        ],\n    },\n    {\n        path: "table",\n        component: TableSchematicExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "tree",\n        component: FilteredViewWithTreeComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        FakeServer,\n        FilteredViewSchematicOutletComponent,\n        ListSchematicsOutletComponent,\n        FilteredViewSchematicExampleComponent,\n        BasicFilterGroupExampleComponent,\n        CustomDataSourceFilterGroupExampleComponent,\n        CustomTemplateFilterGroupExampleComponent,\n        DialogFilterGroupExampleComponent,\n        FilterGroupSchematicExampleComponent,\n        BasicListComponent,\n        SearchListComponent,\n        SelectionListComponent,\n        ListSchematicExampleComponent,\n        TableSchematicExampleComponent,\n        RecursiveObjectViewComponent,\n        SchematicJsonComponent,\n        SchematicsDocsComponent,\n        SchematicsDocsCommandComponent,\n        SchematicDocsExampleComponent,\n        SchematicDocsPageComponent,\n        SchematicsDocsCliOptionComponent,\n        VirtualScrollListComponent,\n        PaginatedListComponent,\n        TableWithVirtualScrollComponent,\n        TableWithPaginationComponent,\n        BasicTableComponent,\n        TableWithSortComponent,\n        TableWithSearchComponent,\n        TableWithSelectionComponent,\n        TableWithCustomVirtualScrollComponent,\n    ],\n    imports: [\n        CommonModule,\n        ApolloModule,\n        HttpLinkModule,\n        NuiExpanderModule,\n        NuiMessageModule,\n        NuiPaginatorModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSelectorModule,\n        NuiToolbarModule,\n        NuiCheckboxModule,\n        NuiTabsModule,\n        NuiSpinnerModule,\n        NuiPanelModule,\n        NuiTableModule,\n        NuiDialogModule,\n        NuiBusyModule,\n        NuiIconModule,\n        RouterModule.forChild(staticRoutes),\n        FilteredViewWithTableModule,\n        BasicFilterGroupCompositeModule,\n        CustomDataSourceFilterGroupCompositeModule,\n        CustomTemplateFilterGroupCompositeModule,\n        DialogFilterGroupCompositeModule,\n        NuiDocsModule,\n        NuiButtonModule,\n        NuiImageModule,\n        HttpClientModule,\n        NuiPopoverModule,\n        ScrollingModule,\n        NuiProgressModule,\n        FilteredViewTableWithPaginationModule,\n        FilteredViewTableWithVirtualScrollModule,\n        FilteredViewListWithVirtualScrollModule,\n        FilteredViewListWithPaginationModule,\n        FilteredViewWithListModule,\n        FilteredViewWithTableModule,\n        FilteredViewWithTreeModule,\n        NuiDividerModule,\n        FilteredViewTableWithSelectionModule,\n        FilteredViewTableWithCustomVirtualScrollModule,\n        FilteredViewTableWithVirtualScrollSelectionModule,\n    ],\n    providers: [\n        DatePipe,\n        FakeHTTPService,\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n        {\n            provide: APOLLO_OPTIONS,\n            useFactory: (httpLink: HttpLink) => ({\n                cache: new InMemoryCache(),\n                link: httpLink.create({\n                    uri: COUNTRIES_API,\n                }),\n            }),\n            deps: [HttpLink],\n        },\n    ],\n})\nexport class SchematicModule {\n}\n'},"uJ/f":function(e,t,n){"use strict";n.r(t),t.default='<div nui-busy [busy]="isBusy">\n    <nui-spinner size="large" i18n-message message="Loading..."></nui-spinner>\n    <div class="d-flex flex-row">\n        <nui-sorter class="app-virtual-scroll-list-sorter"\n                    [itemsSource]="sorterItems"\n                    [selectedItem]="sortBy"\n                    [sortDirection]="initialSortDirection"\n                    (sorterAction)="onSorterAction($event)">\n        </nui-sorter>\n        <nui-search class="d-flex justify-content-end app-virtual-scroll-list-search"\n                    (search)="onSearch()"\n                    (cancel)="onCancelSearch()">\n        </nui-search>\n    </div>\n\n    <div class="d-flex flex-row">\n        <ng-container *ngIf="!isBusy && (listItems$ | async).length === 0">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class="app-virtual-scroll-list-repeat"\n                    selectionMode="none"\n                    [itemConfig]="itemConfig"\n                    [repeatItemTemplateRef]="listRepeatItemTemplate"\n                    [selection]="filteringState.repeat?.selectedItems"\n                    [itemsSource]="listItems$ | async"\n                    [virtualScroll]="true"\n                    [itemSize]="30">\n        </nui-repeat>\n    </div>\n\n    <footer class="app-virtual-scroll-list-scrolling-footer">\n        <div class="d-flex justify-content-center align-items-center">\n            <div class="p-1 d-flex">\n                <div class="d-flex pt-3 pb-3" i18n>\n                    Showing {{(listItems$ | async).length}} of {{ totalItems }}\n                </div>\n                <div class="d-flex pt-3 pb-3">\n                    <ng-container i18n *ngIf="(listItems$ | async).length !== totalItems; else endOfData">, scroll down for more.</ng-container>\n                    <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                </div>\n            </div>\n        </div>\n    </footer>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div class="container">\n        <div class="row">\n            <div *ngFor="let field of item | keyvalue" class="col-sm">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n'},uL2T:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-filtered-view-table-with-custom-virtual-scroll-table__container">\n    <cdk-virtual-scroll-viewport class="app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container" tableStickyHeader #viewportRef [itemSize]="rowHeight">\n    <table nui-table [dataSource]="items | sliceRange: viewportRef.getRenderedRange()">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell [style.width.%]="30" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]="displayedColumns"\n                         [cdkVirtualForOf]="items">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class="app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                         item(s).\n                    </div>\n                    <div class="d-flex justify-content-center">\n                        <button btn\n                                nui-button\n                                i18n\n                                type="button"\n                                size="default"\n                                displayStyle="action"\n                                (click)="applyFilters(false)">\n                            Load another {{pageSize}} items\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n'},uO4V:function(e,t,n){"use strict";n.r(t),t.default='<div class="filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},uz4p:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},"v/Kl":function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},v6Y1:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "nui-filter-group-composite-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\n\nexport class FilterGroupCompositeDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},v9Ac:function(e,t,n){"use strict";n.r(t),t.default='<div class="nui-filter-groups-wrapper">\n    <ng-content></ng-content>\n    <div *ngIf="emptyFilterGroupsExist()"\n         class="nui-filter-groups-wrapper__hidden-filters d-flex align-items-center">\n        <nui-popover [template]="hiddenFiltersPopover">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class="nui-filter-groups-wrapper__popover-hint" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size="small"></nui-divider>\n    <span class="nui-filter-groups-wrapper__popover-hidden-filters">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n'},vAp9:function(e,t,n){"use strict";n.r(t),t.default='import { Injectable } from "@angular/core";\nimport _difference from "lodash/difference";\nimport _flatten from "lodash/flatten";\n\nimport { IFilterGroupItem, IFilterGroupOption } from "./public-api";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n'},vBlX:function(e,t,n){"use strict";n.r(t),t.default='<nui-schematic-docs-page schematicFolderName="filtered-view">\n    <div schematicSummary>\n        <p>\n            The Filtered View schematic provides the ability to create a generic filtered view that can cover many use cases\n            for filtering a set of data. Its main responsibility is to integrate a filter group panel with a list or table view\n            that displays the filtered data.\n        </p>\n        <h2>Notable Command Line Options</h2>\n        <nui-schematic-cli-option name="presentationType">\n            <p>\n                This string option allows you to select how the filtered data will be presented to the user. The values currently supported\n                for this option are <code>table</code> and <code>list</code>. The default value is <code>list</code>.\n            </p>\n        </nui-schematic-cli-option>\n        <nui-schematic-cli-option name="selectionMode"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="pagingMode"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="dataSource"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="enableSearch"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="enableSort"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name="chips"></nui-schematic-cli-option>\n    </div>\n    <nui-tab-group schematicExamples>\n        <nui-tab heading="List">\n            <h2>Filtered View with List</h2>\n            <p>\n                This example shows the output of the CLI command without any modifications.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-with-list --presentationType=list</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-with-list">\n                <app-filtered-view-with-list></app-filtered-view-with-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="List with Pagination">\n            <h2>List with Pagination</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide\n                <strong>--pagingMode=pagination</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-list-with-pagination">\n                <app-filtered-view-list-with-pagination></app-filtered-view-list-with-pagination>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="List with Virtual Scroll">\n            <h2>List with Virtual Scroll</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-virtual-scroll --presentationType=list --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-list-with-virtual-scroll">\n                <app-filtered-view-list-with-virtual-scroll></app-filtered-view-list-with-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Table">\n            <h2>Filtered View with Table</h2>\n            <p>\n                This example shows the output of the CLI command shown below.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --name=filtered-view-with-table --p=app <strong>--presentationType=table</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-with-table">\n                <app-filtered-view-with-table></app-filtered-view-with-table>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Table with Pagination">\n            <h2>Table with Pagination</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=pagination</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-table-with-pagination">\n                <app-filtered-view-table-with-pagination></app-filtered-view-table-with-pagination>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Table with Selection">\n            <h2>Table with Selection</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-selection --presentationType=table --dataSource=serverSide --pagingMode=pagination\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-table-with-selection">\n                <app-filtered-view-table-with-selection></app-filtered-view-table-with-selection>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Table with Virtual Scroll" #vs>\n            <h2>Table with Virtual Scroll</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-table-with-virtual-scroll">\n                <app-filtered-view-table-with-virtual-scroll *ngIf="vs.active"></app-filtered-view-table-with-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Table with Virtual Scroll and Selection" #vss>\n            <h2>Table with Virtual Scroll and Selection</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-table-with-virtual-scroll-selection">\n                <app-filtered-view-table-with-virtual-scroll-selection *ngIf="vss.active"></app-filtered-view-table-with-virtual-scroll-selection>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Table with Custom Virtual Scroll" #cvs>\n            <h2>Table with Custom Virtual Scroll</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll --virtualScrollStrategy=custom</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-table-with-custom-virtual-scroll">\n                <app-filtered-view-table-with-custom-virtual-scroll *ngIf="cvs.active"></app-filtered-view-table-with-custom-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading="Tree" #tree>\n            <h2>Tree</h2>\n            <nui-schematic-docs-example exampleFolderName="filtered-view-with-tree">\n                <app-filtered-view-with-tree *ngIf="tree.active"></app-filtered-view-with-tree>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n'},"vI/I":function(e,t,n){"use strict";n.r(t),t.default='<div class="app-table-with-pagination__container">\n    <div class="app-table-with-pagination-searchable__search">\n        <nui-search [value]="searchTerm"\n                    (search)="onSearch()"\n                    (cancel)="onSearchCancel()">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]="items"\n           [sortable]="true"\n           [sortedColumn]="sortedColumn"\n           (sortOrderChanged)="sortData($event)">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n\n    <footer class="app-table-with-pagination-scrolling-footer">\n        <div *ngIf="isBusy; else defaultText">\n            <nui-progress [show]="true" [compactMode]="true"></nui-progress>\n            <div class="d-flex justify-content-center align-items-center">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class="d-flex justify-content-center align-items-center">\n                <div class="p-1 d-flex">\n                    <div class="d-flex pt-3 pb-3" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},vKyT:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n"},vWCP:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},vsjg:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="hasFilterOptions()"\n     class="filter-group">\n    <nui-expander [open]="filterGroupItem?.expanded"\n                  (openChange)="onOpenChanged($event)">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class="filter-group__header">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet="expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}"></ng-container>\n        </div>\n        <nui-checkbox-group [values]="filterGroupItem.selectedFilterValues"\n                            (valuesChange)="onValueChanged($event)">\n            <nui-checkbox *ngFor="let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()"\n                          class="nui-checkbox--justified"\n                          [value]="filterOption.value"\n                          [checked]="isChecked(filterOption.value)">\n                <ng-template #defaultCheckboxes>\n                    <div class="d-flex justify-content-between filter-group__checkbox">\n                        <span class="d-inline-block filter-group__checkbox-value">{{filterOption.displayValue}}</span>\n                        <span class="d-inline-block filter-group__checkbox-count">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class="filter-group__show-more-link"\n           *ngIf="filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()"\n           (click)="showFilterDialog()">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n'},w2P6:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},wUF7:function(e,t,n){"use strict";n.r(t),t.default='<div class="item-picker">\n    <ng-template #listRepeatDefaultItemTemplate let-item="item">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n'},"x/bl":function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n'},x3h5:function(e,t,n){"use strict";n.r(t),t.default='import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from "@angular/core";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: "app-item-picker",\n    templateUrl: "./item-picker.component.html",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: ["value"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n'},x9IJ:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\nexport enum ServerStatus {\n    active = "Active",\n    down = "Down",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we\'ve received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n'},xMM6:function(e,t,n){"use strict";n.r(t),t.default='import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from "@angular/core";\nimport { DataSourceService, IFilteringParticipants } from "@nova-ui/bits";\nimport _isEmpty from "lodash/isEmpty";\n\nimport { FilterGroupComponent } from "../filter-group.component";\n\n@Component({\n    selector: "app-filter-groups-wrapper",\n    templateUrl: "filter-groups-wrapper.component.html",\n    styleUrls: ["filter-groups-wrapper.component.less"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {"=1": $localize `1 hidden filter.`, "other": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(", ");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n'},xNVA:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n\n.nui-filter-group-composite-dialog {\n    &__body {\n        margin: @nui-space-sm 0 @nui-space-sm 0;\n    }\n}\n'},xSAm:function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\n\nimport { ItemPickerComponent } from "./item-picker.component";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n'},xjXR:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from "@angular/core";\nimport { ISelection, NuiActiveDialog, SelectorService } from "@nova-ui/bits";\n\nimport { IFilterGroupOption } from "../public-api";\n\n@Component({\n    selector: "app-filter-group-dialog",\n    templateUrl: "./filter-group-dialog.component.html",\n    styleUrls: ["./filter-group-dialog.component.less"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n'},xoO0:function(e,t,n){"use strict";n.r(t),t.default='import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from "@angular/core";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from "@nova-ui/bits";\nimport _orderBy from "lodash/orderBy";\nimport { Subject } from "rxjs";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from "./public-api";\n\n@Component({\n    selector: "app-filter-group",\n    templateUrl: "./filter-group.component.html",\n    styleUrls: ["./filter-group.component.less"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, "value", "asc");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: "string[]",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n'},"xu+P":function(e,t,n){"use strict";n.r(t),t.default='import { Component, Inject, Input, OnInit, Optional, SkipSelf, ViewEncapsulation } from "@angular/core";\nimport _set from "lodash/set";\n\nimport { DEMO_PATH_TOKEN } from "../../../../../src/constants/path.constant";\n\n@Component({\n    selector: "nui-schematic-docs-example",\n    templateUrl: "schematic-docs-example.component.html",\n    styleUrls: ["schematic-docs-example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class SchematicDocsExampleComponent implements OnInit {\n    @Input() exampleFolderName: string;\n    public componentSources: string[];\n    public shouldCodeRender: boolean;\n\n    private fileExtensionsRegex = /.*\\.(ts|html|less)$/;\n    private rawData: any = {};\n\n    private _selectedFile: string;\n    private selectedFileOpen: boolean;\n\n    get selectedFile() {\n        return this._selectedFile;\n    }\n\n    set selectedFile(value: string) {\n        this._selectedFile = value;\n        // TODO Remove when NUI-2704 is finished\n        this.shouldCodeRender = false;\n        setTimeout(() => {\n            this.shouldCodeRender = true;\n        }, 100);\n    }\n\n    constructor(@SkipSelf() @Optional() @Inject(DEMO_PATH_TOKEN) private context: any) {}\n\n    ngOnInit() {\n        this.componentSources = this.getSourcesByFilenamePrefix(this.exampleFolderName);\n    }\n\n    public getSource(fileName: string) {\n        return this.rawData[fileName];\n    }\n\n    public selectFile(name: string) {\n        this.selectedFile = name;\n        this.selectedFileOpen = true;\n    }\n\n    public isSelectedFileOpen(): boolean {\n        return this.selectedFileOpen;\n    }\n\n    public onSelectedFileOpenChange(event: boolean) {\n        this.selectedFileOpen = event;\n    }\n\n    private getSourcesByFilenamePrefix(prefix: string) {\n        const matchingFilePaths = this.context.keys().filter((filePath: string) => {\n            const prefixIndex = filePath.indexOf(prefix);\n            const nextChar = prefixIndex !== -1 ? filePath[prefixIndex + prefix.length] : undefined;\n            return prefixIndex !== -1 && (nextChar === "." || nextChar === "/");\n        });\n\n        return matchingFilePaths.reduce((dataset: any, fileName: any) => {\n            const fileObj = this.getFileData(fileName);\n            const splitPath = fileName.substr(fileName.indexOf(prefix)).split("/");\n            const pathToSourceCode = [];\n\n            this.rawData[splitPath[splitPath.length - 1]] = fileObj;\n\n            for (let i = splitPath.length; i > 0; i--) {\n                const shifted = splitPath.shift();\n                pathToSourceCode.push(shifted);\n            }\n            return _set(dataset, pathToSourceCode, fileObj);\n        }, {});\n    }\n\n    private getFileData(fileName: string) {\n        let fileContent = "";\n        const regExResultArray = this.fileExtensionsRegex.exec(fileName);\n        if (regExResultArray) {\n            fileContent = this.context(fileName).default;\n\n            const extension = <string>fileName.split(".").pop();\n            if (extension === "less") {\n                fileContent = fileContent.replace(\n                    /@import \\(reference\\) "([\\w-]+\\/){0,}([\\w-]+)(\\.less)?"/g,\n                    `@import (reference) "@nova-ui/bits/sdk/less/$1$2"`\n                );\n            }\n        }\n\n        return fileContent;\n    }\n\n}\n'},yGmq:function(e,t,n){"use strict";n.r(t);var i=n("Hw5D"),r=n("Yvf7"),o=n("FBrc"),a=n("Fk62"),l=n("U04U"),s=n("Ub9n"),c=n("bb6g"),u=n("CySa"),p=n("4bb0"),d={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},m=Object.freeze({});function f(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d,i=void 0,r=Array.isArray(e),o=[e],a=-1,l=[],s=void 0,c=void 0,f=void 0,g=[],b=[],v=e;do{var S=++a===o.length,w=S&&0!==l.length;if(S){if(c=0===b.length?void 0:g[g.length-1],s=f,f=b.pop(),w){if(r)s=s.slice();else{for(var y={},I=0,C=Object.keys(s);I<C.length;I++){var F=C[I];y[F]=s[F]}s=y}for(var x=0,O=0;O<l.length;O++){var V=l[O][0],D=l[O][1];r&&(V-=x),r&&null===D?(s.splice(V,1),x++):s[V]=D}}a=i.index,o=i.keys,l=i.edits,r=i.inArray,i=i.prev}else{if(c=f?r?a:o[a]:void 0,null==(s=f?f[c]:v))continue;f&&g.push(c)}var k,G=void 0;if(!Array.isArray(s)){if(!Object(p.c)(s))throw new Error("Invalid AST Node: ".concat(Object(u.a)(s),"."));var T=h(t,s.kind,S);if(T){if((G=T.call(t,s,c,f,g,b))===m)break;if(!1===G){if(!S){g.pop();continue}}else if(void 0!==G&&(l.push([c,G]),!S)){if(!Object(p.c)(G)){g.pop();continue}s=G}}}void 0===G&&w&&l.push([c,s]),S?g.pop():(i={inArray:r,index:a,keys:o,edits:l,prev:i},o=(r=Array.isArray(s))?s:null!==(k=n[s.kind])&&void 0!==k?k:[],a=-1,l=[],f&&b.push(f),f=s)}while(void 0!==i);return 0!==l.length&&(v=l[l.length-1][1]),v}function h(e,t,n){var i=e[t];if(i){if(!n&&"function"==typeof i)return i;var r=n?i.leave:i.enter;if("function"==typeof r)return r}else{var o=n?e.leave:e.enter;if(o){if("function"==typeof o)return o;var a=o[t];if("function"==typeof a)return a}}}var g=Object.setPrototypeOf,b=void 0===g?function(e,t){return e.__proto__=t,e}:g,v=function(e){function t(n){void 0===n&&(n="Invariant Violation");var i=e.call(this,"number"==typeof n?"Invariant Violation: "+n+" (see https://github.com/apollographql/invariant-packages)":n)||this;return i.framesToPop=1,i.name="Invariant Violation",b(i,t.prototype),i}return Object(c.c)(t,e),t}(Error);function S(e,t){if(!e)throw new v(t)}function w(e){return function(){return console[e].apply(console,arguments)}}!function(e){e.warn=w("warn"),e.error=w("error")}(S||(S={}));var y={env:{}};if("object"==typeof process)y=process;else try{Function("stub","process = stub")(y)}catch(Gb){}var I=n("dpiu"),C=n.n(I),F=Object.prototype,x=F.toString,O=F.hasOwnProperty,V=new Map;function D(e,t){try{return function e(t,n){if(t===n)return!0;var i=x.call(t);if(i!==x.call(n))return!1;switch(i){case"[object Array]":if(t.length!==n.length)return!1;case"[object Object]":if(k(t,n))return!0;var r=Object.keys(t),o=Object.keys(n),a=r.length;if(a!==o.length)return!1;for(var l=0;l<a;++l)if(!O.call(n,r[l]))return!1;for(l=0;l<a;++l){var s=r[l];if(!e(t[s],n[s]))return!1}return!0;case"[object Error]":return t.name===n.name&&t.message===n.message;case"[object Number]":if(t!=t)return n!=n;case"[object Boolean]":case"[object Date]":return+t==+n;case"[object RegExp]":case"[object String]":return t==""+n;case"[object Map]":case"[object Set]":if(t.size!==n.size)return!1;if(k(t,n))return!0;for(var c=t.entries(),u="[object Map]"===i;;){var p=c.next();if(p.done)break;var d=p.value,m=d[0],f=d[1];if(!n.has(m))return!1;if(u&&!e(f,n.get(m)))return!1}return!0}return!1}(e,t)}finally{V.clear()}}function k(e,t){var n=V.get(e);if(n){if(n.has(t))return!0}else V.set(e,n=new Set);return n.add(t),!1}function G(e,t,n,i){if(function(e){return"IntValue"===e.kind}(n)||function(e){return"FloatValue"===e.kind}(n))e[t.value]=Number(n.value);else if(function(e){return"BooleanValue"===e.kind}(n)||function(e){return"StringValue"===e.kind}(n))e[t.value]=n.value;else if(function(e){return"ObjectValue"===e.kind}(n)){var r={};n.fields.map((function(e){return G(r,e.name,e.value,i)})),e[t.value]=r}else if(function(e){return"Variable"===e.kind}(n))e[t.value]=(i||{})[n.name.value];else if(function(e){return"ListValue"===e.kind}(n))e[t.value]=n.values.map((function(e){var n={};return G(n,t,e,i),n[t.value]}));else if(function(e){return"EnumValue"===e.kind}(n))e[t.value]=n.value;else{if(!function(e){return"NullValue"===e.kind}(n))throw new v(17);e[t.value]=null}}var T=["connection","include","skip","client","rest","export"];function E(e,t,n){if(n&&n.connection&&n.connection.key){if(n.connection.filter&&n.connection.filter.length>0){var i=n.connection.filter?n.connection.filter:[];i.sort();var r=t,o={};return i.forEach((function(e){o[e]=r[e]})),n.connection.key+"("+JSON.stringify(o)+")"}return n.connection.key}var a=e;if(t){var l=C()(t);a+="("+l+")"}return n&&Object.keys(n).forEach((function(e){-1===T.indexOf(e)&&(n[e]&&Object.keys(n[e]).length?a+="@"+e+"("+JSON.stringify(n[e])+")":a+="@"+e)})),a}function _(e,t){if(e.arguments&&e.arguments.length){var n={};return e.arguments.forEach((function(e){return G(n,e.name,e.value,t)})),n}return null}function P(e){return e.alias?e.alias.value:e.name.value}function M(e){return"Field"===e.kind}function R(e){return"InlineFragment"===e.kind}function N(e){return e&&"id"===e.type&&"boolean"==typeof e.generated}function j(e,t){return void 0===t&&(t=!1),Object(c.a)({type:"id",generated:t},"string"==typeof e?{id:e,typename:void 0}:e)}function A(e,t){if(e.directives&&e.directives.length){var n={};return e.directives.forEach((function(e){n[e.name.value]=_(e,t)})),n}return null}function W(e,t){return void 0===t&&(t={}),(n=e.directives,n?n.filter(Q).map((function(e){var t=e.arguments;S(t&&1===t.length,14);var n=t[0];S(n.name&&"if"===n.name.value,15);var i=n.value;return S(i&&("Variable"===i.kind||"BooleanValue"===i.kind),16),{directive:e,ifArgument:n}})):[]).every((function(e){var n=e.directive,i=e.ifArgument,r=!1;return"Variable"===i.value.kind?S(void 0!==(r=t[i.value.name.value]),13):r=i.value.value,"skip"===n.name.value?!r:r}));var n}function L(e,t){return function(e){var t=[];return f(e,{Directive:function(e){t.push(e.name.value)}}),t}(t).some((function(t){return e.indexOf(t)>-1}))}function B(e){return e&&L(["client"],e)&&L(["export"],e)}function Q(e){var t=e.name.value;return"skip"===t||"include"===t}function U(e,t){var n=t,i=[];return e.definitions.forEach((function(e){if("OperationDefinition"===e.kind)throw new v(11);"FragmentDefinition"===e.kind&&i.push(e)})),void 0===n&&(S(1===i.length,12),n=i[0].name.value),Object(c.a)(Object(c.a)({},e),{definitions:Object(c.f)([{kind:"OperationDefinition",operation:"query",selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:n}}]}}],e.definitions)})}function $(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return t.forEach((function(t){null!=t&&Object.keys(t).forEach((function(n){e[n]=t[n]}))})),e}function z(e){return S(e&&"Document"===e.kind,2),S(e.definitions.filter((function(e){return"FragmentDefinition"!==e.kind})).map((function(e){if("OperationDefinition"!==e.kind)throw new v(3);return e})).length<=1,4),e}function q(e){return z(e),e.definitions.filter((function(e){return"OperationDefinition"===e.kind}))[0]}function H(e){return e.definitions.filter((function(e){return"OperationDefinition"===e.kind&&e.name})).map((function(e){return e.name.value}))[0]||null}function K(e){return e.definitions.filter((function(e){return"FragmentDefinition"===e.kind}))}function J(e){var t;z(e);for(var n=0,i=e.definitions;n<i.length;n++){var r=i[n];if("OperationDefinition"===r.kind){var o=r.operation;if("query"===o||"mutation"===o||"subscription"===o)return r}"FragmentDefinition"!==r.kind||t||(t=r)}if(t)return t;throw new v(10)}function X(e){void 0===e&&(e=[]);var t={};return e.forEach((function(e){t[e.name.value]=e})),t}function Y(e){if(e&&e.variableDefinitions&&e.variableDefinitions.length){var t=e.variableDefinitions.filter((function(e){return e.defaultValue})).map((function(e){var t={};return G(t,e.variable.name,e.defaultValue),t}));return $.apply(void 0,Object(c.f)([{}],t))}return{}}function Z(e,t,n){var i=0;return e.forEach((function(n,r){t.call(this,n,r,e)&&(e[i++]=n)}),n),e.length=i,e}var ee={kind:"Field",name:{kind:"Name",value:"__typename"}};function te(e){return function e(t,n){return t.selectionSet.selections.every((function(t){return"FragmentSpread"===t.kind&&e(n[t.name.value],n)}))}(q(e)||function(e){S("Document"===e.kind,7),S(e.definitions.length<=1,8);var t=e.definitions[0];return S("FragmentDefinition"===t.kind,9),t}(e),X(K(e)))?null:e}function ne(e){return function(t){return e.some((function(e){return e.name&&e.name===t.name.value||e.test&&e.test(t)}))}}function ie(e,t){var n=Object.create(null),i=[],r=Object.create(null),o=[],a=te(f(t,{Variable:{enter:function(e,t,i){"VariableDefinition"!==i.kind&&(n[e.name.value]=!0)}},Field:{enter:function(t){if(e&&t.directives&&e.some((function(e){return e.remove}))&&t.directives&&t.directives.some(ne(e)))return t.arguments&&t.arguments.forEach((function(e){"Variable"===e.value.kind&&i.push({name:e.value.name.value})})),t.selectionSet&&function e(t){var n=[];return t.selections.forEach((function(t){(M(t)||R(t))&&t.selectionSet?e(t.selectionSet).forEach((function(e){return n.push(e)})):"FragmentSpread"===t.kind&&n.push(t)})),n}(t.selectionSet).forEach((function(e){o.push({name:e.name.value})})),null}},FragmentSpread:{enter:function(e){r[e.name.value]=!0}},Directive:{enter:function(t){if(ne(e)(t))return null}}}));return a&&Z(i,(function(e){return!n[e.name]})).length&&(a=function(e,t){var n=function(e){return function(t){return e.some((function(e){return t.value&&"Variable"===t.value.kind&&t.value.name&&(e.name===t.value.name.value||e.test&&e.test(t))}))}}(e);return te(f(t,{OperationDefinition:{enter:function(t){return Object(c.a)(Object(c.a)({},t),{variableDefinitions:t.variableDefinitions.filter((function(t){return!e.some((function(e){return e.name===t.variable.name.value}))}))})}},Field:{enter:function(t){if(e.some((function(e){return e.remove}))){var i=0;if(t.arguments.forEach((function(e){n(e)&&(i+=1)})),1===i)return null}}},Argument:{enter:function(e){if(n(e))return null}}}))}(i,a)),a&&Z(o,(function(e){return!r[e.name]})).length&&(a=function(e,t){function n(t){if(e.some((function(e){return e.name===t.name.value})))return null}return te(f(t,{FragmentSpread:{enter:n},FragmentDefinition:{enter:n}}))}(o,a)),a}var re={test:function(e){var t="connection"===e.name.value;return t&&(!e.arguments||e.arguments.some((function(e){return"key"===e.name.value}))),t}};function oe(e){return"query"===J(e).operation?e:f(e,{OperationDefinition:{enter:function(e){return Object(c.a)(Object(c.a)({},e),{operation:"query"})}}})}var ae="function"==typeof WeakMap&&!("object"==typeof navigator&&"ReactNative"===navigator.product),le=Object.prototype.toString;function se(e){return("undefined"!=typeof process?"production":"development")===e}function ce(e){try{return e()}catch(t){console.error&&console.error(t)}}function ue(e){return e.errors&&e.errors.length}var pe=Object.prototype.hasOwnProperty;function de(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return me(e)}function me(e){var t=e[0]||{},n=e.length;if(n>1){var i=[];t=ge(t,i);for(var r=1;r<n;++r)t=he(t,e[r],i)}return t}function fe(e){return null!==e&&"object"==typeof e}function he(e,t,n){return fe(t)&&fe(e)?(Object.isExtensible&&!Object.isExtensible(e)&&(e=ge(e,n)),Object.keys(t).forEach((function(i){var r=t[i];if(pe.call(e,i)){var o=e[i];r!==o&&(e[i]=he(ge(o,n),r,n))}else e[i]=r})),e):t}function ge(e,t){return null!==e&&"object"==typeof e&&t.indexOf(e)<0&&(e=Array.isArray(e)?e.slice(0):Object(c.a)({__proto__:Object.getPrototypeOf(e)},e),t.push(e)),e}var be=n("I6Ka"),ve=n.n(be).a;function Se(e){return e.request.length<=1}function we(e,t){return t?t(e):ve.of()}function ye(e){return"function"==typeof e?new xe(e):e}function Ie(){return new xe((function(){return ve.of()}))}function Ce(e){return 0===e.length?Ie():e.map(ye).reduce((function(e,t){return e.concat(t)}))}function Fe(e,t,n){var i=ye(t),r=ye(n||new xe(we));return Se(i)&&Se(r)?new xe((function(t){return e(t)?i.request(t)||ve.of():r.request(t)||ve.of()})):new xe((function(t,n){return e(t)?i.request(t,n)||ve.of():r.request(t,n)||ve.of()}))}Error;var xe=function(){function e(e){e&&(this.request=e)}return e.prototype.split=function(t,n,i){return this.concat(Fe(t,n,i||new e(we)))},e.prototype.concat=function(e){return function(e,t){var n=ye(e);if(Se(n))return n;var i=ye(t);return Se(i)?new xe((function(e){return n.request(e,(function(e){return i.request(e)||ve.of()}))||ve.of()})):new xe((function(e,t){return n.request(e,(function(e){return i.request(e,t)||ve.of()}))||ve.of()}))}(this,e)},e.prototype.request=function(e,t){throw new v(1)},e.empty=Ie,e.from=Ce,e.split=Fe,e.execute=Oe,e}();function Oe(e,t){return e.request(function(e,t){var n=Object(c.a)({},e);return Object.defineProperty(t,"setContext",{enumerable:!1,value:function(e){n="function"==typeof e?Object(c.a)({},n,e(n)):Object(c.a)({},n,e)}}),Object.defineProperty(t,"getContext",{enumerable:!1,value:function(){return Object(c.a)({},n)}}),Object.defineProperty(t,"toKey",{enumerable:!1,value:function(){return function(e){return JSON.stringify([e.operationName,e.query,e.variables])}(t)}}),t}(t.context,function(e){var t={variables:e.variables||{},extensions:e.extensions||{},operationName:e.operationName,query:e.query};return t.operationName||(t.operationName="string"!=typeof t.query?H(t.query):""),t}(function(e){for(var t=["query","operationName","variables","extensions","context"],n=0,i=Object.keys(e);n<i.length;n++)if(t.indexOf(i[n])<0)throw new v(2);return e}(t))))||ve.of()}var Ve=n("Rblx"),De=function(e){return e[e.loading=1]="loading",e[e.setVariables=2]="setVariables",e[e.fetchMore=3]="fetchMore",e[e.refetch=4]="refetch",e[e.poll=6]="poll",e[e.ready=7]="ready",e[e.error=8]="error",e}({});function ke(e){return e<7}var Ge=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Object(c.c)(t,e),t.prototype[Ve.a]=function(){return this},t.prototype["@@observable"]=function(){return this},t}(ve);function Te(e){return Array.isArray(e)&&e.length>0}var Ee=function(e){function t(n){var i,r,o=n.graphQLErrors,a=n.networkError,l=n.errorMessage,s=n.extraInfo,c=e.call(this,l)||this;return c.graphQLErrors=o||[],c.networkError=a||null,c.message=l||(r="",Te((i=c).graphQLErrors)&&i.graphQLErrors.forEach((function(e){r+="GraphQL error: "+(e?e.message:"Error message not found.")+"\n"})),i.networkError&&(r+="Network error: "+i.networkError.message+"\n"),r=r.replace(/\n$/,"")),c.extraInfo=s,c.__proto__=t.prototype,c}return Object(c.c)(t,e),t}(Error),_e=function(e){return e[e.normal=1]="normal",e[e.refetch=2]="refetch",e[e.poll=3]="poll",e}({}),Pe=function(e){function t(t){var n=t.queryManager,i=t.options,r=t.shouldSubscribe,o=void 0===r||r,a=e.call(this,(function(e){return a.onSubscribe(e)}))||this;a.observers=new Set,a.subscriptions=new Set,a.isTornDown=!1,a.options=i,a.variables=i.variables||{},a.queryId=n.generateQueryId(),a.shouldSubscribe=o;var l=q(i.query);return a.queryName=l&&l.name&&l.name.value,a.queryManager=n,a}return Object(c.c)(t,e),t.prototype.result=function(){var e=this;return new Promise((function(t,n){var i={next:function(n){t(n),e.observers.delete(i),e.observers.size||e.queryManager.removeQuery(e.queryId),setTimeout((function(){r.unsubscribe()}),0)},error:n},r=e.subscribe(i)}))},t.prototype.currentResult=function(){var e=this.getCurrentResult();return void 0===e.data&&(e.data={}),e},t.prototype.getCurrentResult=function(){if(this.isTornDown){var e=this.lastResult;return{data:!this.lastError&&e&&e.data||void 0,error:this.lastError,loading:!1,networkStatus:De.error}}var t,n,i,r=this.queryManager.getCurrentQueryResult(this),o=r.data,a=r.partial,l=this.queryManager.queryStore.get(this.queryId),s=this.options.fetchPolicy,u="network-only"===s||"no-cache"===s;if(l){var p=l.networkStatus;if(void 0===(i=this.options.errorPolicy)&&(i="none"),(n=l)&&(n.networkError||"none"===i&&Te(n.graphQLErrors)))return{data:void 0,loading:!1,networkStatus:p,error:new Ee({graphQLErrors:l.graphQLErrors,networkError:l.networkError})};l.variables&&(this.options.variables=Object(c.a)(Object(c.a)({},this.options.variables),l.variables),this.variables=this.options.variables),t={data:o,loading:ke(p),networkStatus:p},l.graphQLErrors&&"all"===this.options.errorPolicy&&(t.errors=l.graphQLErrors)}else{var d=u||a&&"cache-only"!==s;t={data:o,loading:d,networkStatus:d?De.loading:De.ready}}return a||this.updateLastResult(Object(c.a)(Object(c.a)({},t),{stale:!1})),Object(c.a)(Object(c.a)({},t),{partial:a})},t.prototype.isDifferentFromLastResult=function(e){var t=this.lastResultSnapshot;return!(t&&e&&t.networkStatus===e.networkStatus&&t.stale===e.stale&&D(t.data,e.data))},t.prototype.getLastResult=function(){return this.lastResult},t.prototype.getLastError=function(){return this.lastError},t.prototype.resetLastResults=function(){delete this.lastResult,delete this.lastResultSnapshot,delete this.lastError,this.isTornDown=!1},t.prototype.resetQueryStoreErrors=function(){var e=this.queryManager.queryStore.get(this.queryId);e&&(e.networkError=null,e.graphQLErrors=[])},t.prototype.refetch=function(e){var t=this.options.fetchPolicy;return"cache-only"===t?Promise.reject(new v(1)):("no-cache"!==t&&"cache-and-network"!==t&&(t="network-only"),D(this.variables,e)||(this.variables=Object(c.a)(Object(c.a)({},this.variables),e)),D(this.options.variables,this.variables)||(this.options.variables=Object(c.a)(Object(c.a)({},this.options.variables),this.variables)),this.queryManager.fetchQuery(this.queryId,Object(c.a)(Object(c.a)({},this.options),{fetchPolicy:t}),_e.refetch))},t.prototype.fetchMore=function(e){var t=this;S(e.updateQuery,2);var n=Object(c.a)(Object(c.a)({},e.query?e:Object(c.a)(Object(c.a)(Object(c.a)({},this.options),e),{variables:Object(c.a)(Object(c.a)({},this.variables),e.variables)})),{fetchPolicy:"network-only"}),i=this.queryManager.generateQueryId();return this.queryManager.fetchQuery(i,n,_e.normal,this.queryId).then((function(r){return t.updateQuery((function(t){return e.updateQuery(t,{fetchMoreResult:r.data,variables:n.variables})})),t.queryManager.stopQuery(i),r}),(function(e){throw t.queryManager.stopQuery(i),e}))},t.prototype.subscribeToMore=function(e){var t=this,n=this.queryManager.startGraphQLSubscription({query:e.document,variables:e.variables}).subscribe({next:function(n){var i=e.updateQuery;i&&t.updateQuery((function(e,t){return i(e,{subscriptionData:n,variables:t.variables})}))},error:function(t){e.onError&&e.onError(t)}});return this.subscriptions.add(n),function(){t.subscriptions.delete(n)&&n.unsubscribe()}},t.prototype.setOptions=function(e){var t=this.options.fetchPolicy;this.options=Object(c.a)(Object(c.a)({},this.options),e),e.pollInterval?this.startPolling(e.pollInterval):0===e.pollInterval&&this.stopPolling();var n=e.fetchPolicy;return this.setVariables(this.options.variables,t!==n&&("cache-only"===t||"standby"===t||"network-only"===n),e.fetchResults)},t.prototype.setVariables=function(e,t,n){return void 0===t&&(t=!1),void 0===n&&(n=!0),this.isTornDown=!1,e=e||this.variables,!t&&D(e,this.variables)?this.observers.size&&n?this.result():Promise.resolve():(this.variables=this.options.variables=e,this.observers.size?this.queryManager.fetchQuery(this.queryId,this.options):Promise.resolve())},t.prototype.updateQuery=function(e){var t=this.queryManager,n=t.getQueryWithPreviousResult(this.queryId),i=n.previousResult,r=n.variables,o=n.document,a=ce((function(){return e(i,{variables:r})}));a&&(t.dataStore.markUpdateQueryResult(o,r,a),t.broadcastQueries())},t.prototype.stopPolling=function(){this.queryManager.stopPollingQuery(this.queryId),this.options.pollInterval=void 0},t.prototype.startPolling=function(e){Ne(this),this.options.pollInterval=e,this.queryManager.startPollingQuery(this.options,this.queryId)},t.prototype.updateLastResult=function(e){var t=this.lastResult;return this.lastResult=e,this.lastResultSnapshot=this.queryManager.assumeImmutableResults?e:function e(t,n){switch(le.call(t)){case"[object Array]":if(n.has(t))return n.get(t);var i=t.slice(0);return n.set(t,i),i.forEach((function(t,r){i[r]=e(t,n)})),i;case"[object Object]":if(n.has(t))return n.get(t);var r=Object.create(Object.getPrototypeOf(t));return n.set(t,r),Object.keys(t).forEach((function(i){r[i]=e(t[i],n)})),r;default:return t}}(e,new Map),t},t.prototype.onSubscribe=function(e){var t=this;try{var n=e._subscription._observer;n&&!n.error&&(n.error=Me)}catch(r){}var i=!this.observers.size;return this.observers.add(e),e.next&&this.lastResult&&e.next(this.lastResult),e.error&&this.lastError&&e.error(this.lastError),i&&this.setUpQuery(),function(){t.observers.delete(e)&&!t.observers.size&&t.tearDownQuery()}},t.prototype.setUpQuery=function(){var e=this,t=this.queryManager,n=this.queryId;this.shouldSubscribe&&t.addObservableQuery(n,this),this.options.pollInterval&&(Ne(this),t.startPollingQuery(this.options,n));var i=function(t){e.updateLastResult(Object(c.a)(Object(c.a)({},e.lastResult),{errors:t.graphQLErrors,networkStatus:De.error,loading:!1})),Re(e.observers,"error",e.lastError=t)};t.observeQuery(n,this.options,{next:function(n){if(e.lastError||e.isDifferentFromLastResult(n)){var i=e.updateLastResult(n),r=e.options,o=r.query,a=r.variables,l=r.fetchPolicy;t.transform(o).hasClientExports?t.getLocalState().addExportedVariables(o,a).then((function(r){var a=e.variables;e.variables=e.options.variables=r,!n.loading&&i&&"cache-only"!==l&&t.transform(o).serverQuery&&!D(a,r)?e.refetch():Re(e.observers,"next",n)})):Re(e.observers,"next",n)}},error:i}).catch(i)},t.prototype.tearDownQuery=function(){var e=this.queryManager;this.isTornDown=!0,e.stopPollingQuery(this.queryId),this.subscriptions.forEach((function(e){return e.unsubscribe()})),this.subscriptions.clear(),e.removeObservableQuery(this.queryId),e.stopQuery(this.queryId),this.observers.clear()},t}(Ge);function Me(e){}function Re(e,t,n){var i=[];e.forEach((function(e){return e[t]&&i.push(e)})),i.forEach((function(e){return e[t](n)}))}function Ne(e){var t=e.options.fetchPolicy;S("cache-first"!==t&&"cache-only"!==t,3)}var je=function(){function e(){this.store={}}return e.prototype.getStore=function(){return this.store},e.prototype.get=function(e){return this.store[e]},e.prototype.initMutation=function(e,t,n){this.store[e]={mutation:t,variables:n||{},loading:!0,error:null}},e.prototype.markMutationError=function(e,t){var n=this.store[e];n&&(n.loading=!1,n.error=t)},e.prototype.markMutationResult=function(e){var t=this.store[e];t&&(t.loading=!1,t.error=null)},e.prototype.reset=function(){this.store={}},e}(),Ae=function(){function e(){this.store={}}return e.prototype.getStore=function(){return this.store},e.prototype.get=function(e){return this.store[e]},e.prototype.initQuery=function(e){var t=this.store[e.queryId];S(!t||t.document===e.document||D(t.document,e.document),19);var n=!1,i=null;e.storePreviousVariables&&t&&t.networkStatus!==De.loading&&(D(t.variables,e.variables)||(n=!0,i=t.variables));var r=[];t&&t.graphQLErrors&&(r=t.graphQLErrors),this.store[e.queryId]={document:e.document,variables:e.variables,previousVariables:i,networkError:null,graphQLErrors:r,networkStatus:n?De.setVariables:e.isPoll?De.poll:e.isRefetch?De.refetch:De.loading,metadata:e.metadata},"string"==typeof e.fetchMoreForQueryId&&this.store[e.fetchMoreForQueryId]&&(this.store[e.fetchMoreForQueryId].networkStatus=De.fetchMore)},e.prototype.markQueryResult=function(e,t,n){this.store&&this.store[e]&&(this.store[e].networkError=null,this.store[e].graphQLErrors=Te(t.errors)?t.errors:[],this.store[e].previousVariables=null,this.store[e].networkStatus=De.ready,"string"==typeof n&&this.store[n]&&(this.store[n].networkStatus=De.ready))},e.prototype.markQueryError=function(e,t,n){this.store&&this.store[e]&&(this.store[e].networkError=t,this.store[e].networkStatus=De.error,"string"==typeof n&&this.markQueryResultClient(n,!0))},e.prototype.markQueryResultClient=function(e,t){var n=this.store&&this.store[e];n&&(n.networkError=null,n.previousVariables=null,t&&(n.networkStatus=De.ready))},e.prototype.stopQuery=function(e){delete this.store[e]},e.prototype.reset=function(e){var t=this;Object.keys(this.store).forEach((function(n){e.indexOf(n)<0?t.stopQuery(n):t.store[n].networkStatus=De.loading}))},e}(),We=function(){function e(e){var t=e.client,n=e.resolvers,i=e.fragmentMatcher;this.cache=e.cache,t&&(this.client=t),n&&this.addResolvers(n),i&&this.setFragmentMatcher(i)}return e.prototype.addResolvers=function(e){var t=this;this.resolvers=this.resolvers||{},Array.isArray(e)?e.forEach((function(e){t.resolvers=de(t.resolvers,e)})):this.resolvers=de(this.resolvers,e)},e.prototype.setResolvers=function(e){this.resolvers={},this.addResolvers(e)},e.prototype.getResolvers=function(){return this.resolvers||{}},e.prototype.runResolvers=function(e){var t=e.document,n=e.remoteResult,i=e.context,r=e.variables,o=e.onlyRunForcedResolvers,a=void 0!==o&&o;return Object(c.b)(this,void 0,void 0,(function(){return Object(c.d)(this,(function(e){return t?[2,this.resolveDocument(t,n.data,i,r,this.fragmentMatcher,a).then((function(e){return Object(c.a)(Object(c.a)({},n),{data:e.result})}))]:[2,n]}))}))},e.prototype.setFragmentMatcher=function(e){this.fragmentMatcher=e},e.prototype.getFragmentMatcher=function(){return this.fragmentMatcher},e.prototype.clientQuery=function(e){return L(["client"],e)&&this.resolvers?e:null},e.prototype.serverQuery=function(e){return this.resolvers?function(e){z(e);var t=ie([{test:function(e){return"client"===e.name.value},remove:!0}],e);return t&&(t=f(t,{FragmentDefinition:{enter:function(e){if(e.selectionSet&&e.selectionSet.selections.every((function(e){return M(e)&&"__typename"===e.name.value})))return null}}})),t}(e):e},e.prototype.prepareContext=function(e){void 0===e&&(e={});var t=this.cache;return Object(c.a)(Object(c.a)({},e),{cache:t,getCacheKey:function(e){if(t.config)return t.config.dataIdFromObject(e);S(!1,6)}})},e.prototype.addExportedVariables=function(e,t,n){return void 0===t&&(t={}),void 0===n&&(n={}),Object(c.b)(this,void 0,void 0,(function(){return Object(c.d)(this,(function(i){return e?[2,this.resolveDocument(e,this.buildRootValueFromCache(e,t)||{},this.prepareContext(n),t).then((function(e){return Object(c.a)(Object(c.a)({},t),e.exportedVariables)}))]:[2,Object(c.a)({},t)]}))}))},e.prototype.shouldForceResolvers=function(e){var t=!1;return f(e,{Directive:{enter:function(e){if("client"===e.name.value&&e.arguments&&(t=e.arguments.some((function(e){return"always"===e.name.value&&"BooleanValue"===e.value.kind&&!0===e.value.value}))))return m}}}),t},e.prototype.buildRootValueFromCache=function(e,t){return this.cache.diff({query:oe(e),variables:t,returnPartialData:!0,optimistic:!1}).result},e.prototype.resolveDocument=function(e,t,n,i,r,o){return void 0===n&&(n={}),void 0===i&&(i={}),void 0===r&&(r=function(){return!0}),void 0===o&&(o=!1),Object(c.b)(this,void 0,void 0,(function(){var a,l,s,u,p,d,m,f,h;return Object(c.d)(this,(function(g){var b;return a=J(e),l=K(e),s=X(l),p=(u=a.operation)?(b=u).charAt(0).toUpperCase()+b.slice(1):"Query",m=(d=this).cache,f=d.client,h={fragmentMap:s,context:Object(c.a)(Object(c.a)({},n),{cache:m,client:f}),variables:i,fragmentMatcher:r,defaultOperationType:p,exportedVariables:{},onlyRunForcedResolvers:o},[2,this.resolveSelectionSet(a.selectionSet,t,h).then((function(e){return{result:e,exportedVariables:h.exportedVariables}}))]}))}))},e.prototype.resolveSelectionSet=function(e,t,n){return Object(c.b)(this,void 0,void 0,(function(){var i,r,o,a,l=this;return Object(c.d)(this,(function(s){return i=n.fragmentMap,r=n.context,o=n.variables,a=[t],[2,Promise.all(e.selections.map((function(e){return Object(c.b)(l,void 0,void 0,(function(){var l;return Object(c.d)(this,(function(s){return W(e,o)?M(e)?[2,this.resolveField(e,t,n).then((function(t){var n;void 0!==t&&a.push(((n={})[P(e)]=t,n))}))]:(R(e)?l=e:S(l=i[e.name.value],7),l&&l.typeCondition&&n.fragmentMatcher(t,l.typeCondition.name.value,r)?[2,this.resolveSelectionSet(l.selectionSet,t,n).then((function(e){a.push(e)}))]:[2]):[2]}))}))}))).then((function(){return me(a)}))]}))}))},e.prototype.resolveField=function(e,t,n){return Object(c.b)(this,void 0,void 0,(function(){var i,r,o,a,l,s,u,p,d,m=this;return Object(c.d)(this,(function(c){return i=n.variables,r=e.name.value,o=P(e),a=r!==o,l=t[o]||t[r],s=Promise.resolve(l),n.onlyRunForcedResolvers&&!this.shouldForceResolvers(e)||(u=t.__typename||n.defaultOperationType,(p=this.resolvers&&this.resolvers[u])&&(d=p[a?r:o])&&(s=Promise.resolve(d(t,_(e,i),n.context,{field:e,fragmentMap:n.fragmentMap})))),[2,s.then((function(t){return void 0===t&&(t=l),e.directives&&e.directives.forEach((function(e){"export"===e.name.value&&e.arguments&&e.arguments.forEach((function(e){"as"===e.name.value&&"StringValue"===e.value.kind&&(n.exportedVariables[e.value.value]=t)}))})),e.selectionSet?null==t?t:Array.isArray(t)?m.resolveSubSelectedArray(e,t,n):e.selectionSet?m.resolveSelectionSet(e.selectionSet,t,n):void 0:t}))]}))}))},e.prototype.resolveSubSelectedArray=function(e,t,n){var i=this;return Promise.all(t.map((function(t){return null===t?null:Array.isArray(t)?i.resolveSubSelectedArray(e,t,n):e.selectionSet?i.resolveSelectionSet(e.selectionSet,t,n):void 0})))},e}();function Le(e){var t=new Set,n=null;return new Ge((function(i){return t.add(i),n=n||e.subscribe({next:function(e){t.forEach((function(t){return t.next&&t.next(e)}))},error:function(e){t.forEach((function(t){return t.error&&t.error(e)}))},complete:function(){t.forEach((function(e){return e.complete&&e.complete()}))}}),function(){t.delete(i)&&!t.size&&n&&(n.unsubscribe(),n=null)}}))}var Be=Object.prototype.hasOwnProperty,Qe=function(){function e(e){var t=e.link,n=e.queryDeduplication,i=void 0!==n&&n,r=e.store,o=e.onBroadcast,a=void 0===o?function(){}:o,l=e.ssrMode,s=void 0!==l&&l,c=e.clientAwareness,u=void 0===c?{}:c,p=e.localState,d=e.assumeImmutableResults;this.mutationStore=new je,this.queryStore=new Ae,this.clientAwareness={},this.idCounter=1,this.queries=new Map,this.fetchQueryRejectFns=new Map,this.transformCache=new(ae?WeakMap:Map),this.inFlightLinkObservables=new Map,this.pollingInfoByQueryId=new Map,this.link=t,this.queryDeduplication=i,this.dataStore=r,this.onBroadcast=a,this.clientAwareness=u,this.localState=p||new We({cache:r.getCache()}),this.ssrMode=s,this.assumeImmutableResults=!!d}return e.prototype.stop=function(){var e=this;this.queries.forEach((function(t,n){e.stopQueryNoBroadcast(n)})),this.fetchQueryRejectFns.forEach((function(e){e(new v(8))}))},e.prototype.mutate=function(e){var t=e.mutation,n=e.variables,i=e.optimisticResponse,r=e.updateQueries,o=e.refetchQueries,a=void 0===o?[]:o,l=e.awaitRefetchQueries,s=void 0!==l&&l,u=e.update,p=e.errorPolicy,d=void 0===p?"none":p,m=e.fetchPolicy,f=e.context,h=void 0===f?{}:f;return Object(c.b)(this,void 0,void 0,(function(){var e,o,l,p=this;return Object(c.d)(this,(function(f){switch(f.label){case 0:return S(t,9),S(!m||"no-cache"===m,10),e=this.generateQueryId(),t=this.transform(t).document,this.setQuery(e,(function(){return{document:t}})),n=this.getVariables(t,n),this.transform(t).hasClientExports?[4,this.localState.addExportedVariables(t,n,h)]:[3,2];case 1:n=f.sent(),f.label=2;case 2:return o=function(){var e={};return r&&p.queries.forEach((function(t,n){var i=t.observableQuery;if(i){var o=i.queryName;o&&Be.call(r,o)&&(e[n]={updater:r[o],query:p.queryStore.get(n)})}})),e},this.mutationStore.initMutation(e,t,n),this.dataStore.markMutationInit({mutationId:e,document:t,variables:n,updateQueries:o(),update:u,optimisticResponse:i}),this.broadcastQueries(),l=this,[2,new Promise((function(r,p){var f,g;l.getObservableFromLink(t,Object(c.a)(Object(c.a)({},h),{optimisticResponse:i}),n,!1).subscribe({next:function(i){ue(i)&&"none"===d?g=new Ee({graphQLErrors:i.errors}):(l.mutationStore.markMutationResult(e),"no-cache"!==m&&l.dataStore.markMutationResult({mutationId:e,result:i,document:t,variables:n,updateQueries:o(),update:u}),f=i)},error:function(t){l.mutationStore.markMutationError(e,t),l.dataStore.markMutationComplete({mutationId:e,optimisticResponse:i}),l.broadcastQueries(),l.setQuery(e,(function(){return{document:null}})),p(new Ee({networkError:t}))},complete:function(){if(g&&l.mutationStore.markMutationError(e,g),l.dataStore.markMutationComplete({mutationId:e,optimisticResponse:i}),l.broadcastQueries(),g)p(g);else{"function"==typeof a&&(a=a(f));var t=[];Te(a)&&a.forEach((function(e){if("string"==typeof e)l.queries.forEach((function(n){var i=n.observableQuery;i&&i.queryName===e&&t.push(i.refetch())}));else{var n={query:e.query,variables:e.variables,fetchPolicy:"network-only"};e.context&&(n.context=e.context),t.push(l.query(n))}})),Promise.all(s?t:[]).then((function(){l.setQuery(e,(function(){return{document:null}})),"ignore"===d&&f&&ue(f)&&delete f.errors,r(f)}))}}})}))]}}))}))},e.prototype.fetchQuery=function(e,t,n,i){return Object(c.b)(this,void 0,void 0,(function(){var r,o,a,l,s,u,p,d,m,f,h,g,b,v,S,w,y=this;return Object(c.d)(this,(function(I){switch(I.label){case 0:return o=void 0===(r=t.metadata)?null:r,l=void 0===(a=t.fetchPolicy)?"cache-first":a,u=void 0===(s=t.context)?{}:s,p=this.transform(t.query).document,d=this.getVariables(p,t.variables),this.transform(p).hasClientExports?[4,this.localState.addExportedVariables(p,d,u)]:[3,2];case 1:d=I.sent(),I.label=2;case 2:if(t=Object(c.a)(Object(c.a)({},t),{variables:d}),h=f="network-only"===l||"no-cache"===l,f||(g=this.dataStore.getCache().diff({query:p,variables:d,returnPartialData:!0,optimistic:!1}),h=!g.complete||"cache-and-network"===l,m=g.result),b=h&&"cache-only"!==l&&"standby"!==l,L(["live"],p)&&(b=!0),v=this.idCounter++,S="no-cache"!==l?this.updateQueryWatch(e,p,t):void 0,this.setQuery(e,(function(){return{document:p,lastRequestId:v,invalidated:!0,cancel:S}})),this.invalidate(i),this.queryStore.initQuery({queryId:e,document:p,storePreviousVariables:b,variables:d,isPoll:n===_e.poll,isRefetch:n===_e.refetch,metadata:o,fetchMoreForQueryId:i}),this.broadcastQueries(),b){if(w=this.fetchRequest({requestId:v,queryId:e,document:p,options:t,fetchMoreForQueryId:i}).catch((function(t){throw t.hasOwnProperty("graphQLErrors")?t:(v>=y.getQuery(e).lastRequestId&&(y.queryStore.markQueryError(e,t,i),y.invalidate(e),y.invalidate(i),y.broadcastQueries()),new Ee({networkError:t}))})),"cache-and-network"!==l)return[2,w];w.catch((function(){}))}return this.queryStore.markQueryResultClient(e,!b),this.invalidate(e),this.invalidate(i),this.transform(p).hasForcedResolvers?[2,this.localState.runResolvers({document:p,remoteResult:{data:m},context:u,variables:d,onlyRunForcedResolvers:!0}).then((function(n){return y.markQueryResult(e,n,t,i),y.broadcastQueries(),n}))]:(this.broadcastQueries(),[2,{data:m}])}}))}))},e.prototype.markQueryResult=function(e,t,n,i){var r=n.variables,o=n.errorPolicy;"no-cache"===n.fetchPolicy?this.setQuery(e,(function(){return{newData:{result:t.data,complete:!0}}})):this.dataStore.markQueryResult(t,this.getQuery(e).document,r,i,"ignore"===o||"all"===o)},e.prototype.queryListenerForObserver=function(e,t,n){var i=this;function r(e,t){if(n[e])try{n[e](t)}catch(i){}}return function(n,o){if(i.invalidate(e,!1),n){var a=i.getQuery(e),l=a.observableQuery,s=a.document,c=l?l.options.fetchPolicy:t.fetchPolicy;if("standby"!==c){var u=ke(n.networkStatus),p=l&&l.getLastResult();if(!u||t.returnPartialData||!o&&n.previousVariables||p&&p.networkStatus!==n.networkStatus&&t.notifyOnNetworkStatusChange||"cache-only"===c||"cache-and-network"===c){var d=Te(n.graphQLErrors),m=l&&l.options.errorPolicy||t.errorPolicy||"none";if("none"===m&&d||n.networkError)return r("error",new Ee({graphQLErrors:n.graphQLErrors,networkError:n.networkError}));try{var f=void 0,h=void 0;if(o)"no-cache"!==c&&"network-only"!==c&&i.setQuery(e,(function(){return{newData:null}})),f=o.result,h=!o.complete;else{var g=l&&l.getLastError();if(p&&p.data&&("none"===m||(g&&g.graphQLErrors)===n.graphQLErrors))f=p.data,h=!1;else{var b=i.dataStore.getCache().diff({query:s,variables:n.previousVariables||n.variables,returnPartialData:!0,optimistic:!0});f=b.result,h=!b.complete}}var v=h&&!(t.returnPartialData||"cache-only"===c),S={data:v?p&&p.data:f,loading:u,networkStatus:n.networkStatus,stale:v};"all"===m&&d&&(S.errors=n.graphQLErrors),r("next",S)}catch(w){r("error",new Ee({networkError:w}))}}}}}},e.prototype.transform=function(e){var t,n=this.transformCache;if(!n.has(e)){var i=this.dataStore.getCache(),r=i.transformDocument(e),o=(t=i.transformForLink(r),ie([re],z(t))),a=this.localState.clientQuery(r),l=this.localState.serverQuery(o),s={document:r,hasClientExports:B(r),hasForcedResolvers:this.localState.shouldForceResolvers(r),clientQuery:a,serverQuery:l,defaultVars:Y(q(r))},c=function(e){e&&!n.has(e)&&n.set(e,s)};c(e),c(r),c(a),c(l)}return n.get(e)},e.prototype.getVariables=function(e,t){return Object(c.a)(Object(c.a)({},this.transform(e).defaultVars),t)},e.prototype.watchQuery=function(e,t){void 0===t&&(t=!0),S("standby"!==e.fetchPolicy,11),e.variables=this.getVariables(e.query,e.variables),void 0===e.notifyOnNetworkStatusChange&&(e.notifyOnNetworkStatusChange=!1);var n=Object(c.a)({},e);return new Pe({queryManager:this,options:n,shouldSubscribe:t})},e.prototype.query=function(e){var t=this;return S(e.query,12),S("Document"===e.query.kind,13),S(!e.returnPartialData,14),S(!e.pollInterval,15),new Promise((function(n,i){var r=t.watchQuery(e,!1);t.fetchQueryRejectFns.set("query:"+r.queryId,i),r.result().then(n,i).then((function(){return t.fetchQueryRejectFns.delete("query:"+r.queryId)}))}))},e.prototype.generateQueryId=function(){return String(this.idCounter++)},e.prototype.stopQueryInStore=function(e){this.stopQueryInStoreNoBroadcast(e),this.broadcastQueries()},e.prototype.stopQueryInStoreNoBroadcast=function(e){this.stopPollingQuery(e),this.queryStore.stopQuery(e),this.invalidate(e)},e.prototype.addQueryListener=function(e,t){this.setQuery(e,(function(e){return e.listeners.add(t),{invalidated:!1}}))},e.prototype.updateQueryWatch=function(e,t,n){var i=this,r=this.getQuery(e).cancel;return r&&r(),this.dataStore.getCache().watch({query:t,variables:n.variables,optimistic:!0,previousResult:function(){var t=null,n=i.getQuery(e).observableQuery;if(n){var r=n.getLastResult();r&&(t=r.data)}return t},callback:function(t){i.setQuery(e,(function(){return{invalidated:!0,newData:t}}))}})},e.prototype.addObservableQuery=function(e,t){this.setQuery(e,(function(){return{observableQuery:t}}))},e.prototype.removeObservableQuery=function(e){var t=this.getQuery(e).cancel;this.setQuery(e,(function(){return{observableQuery:null}})),t&&t()},e.prototype.clearStore=function(){this.fetchQueryRejectFns.forEach((function(e){e(new v(16))}));var e=[];return this.queries.forEach((function(t,n){t.observableQuery&&e.push(n)})),this.queryStore.reset(e),this.mutationStore.reset(),this.dataStore.reset()},e.prototype.resetStore=function(){var e=this;return this.clearStore().then((function(){return e.reFetchObservableQueries()}))},e.prototype.reFetchObservableQueries=function(e){var t=this;void 0===e&&(e=!1);var n=[];return this.queries.forEach((function(i,r){var o=i.observableQuery;if(o){var a=o.options.fetchPolicy;o.resetLastResults(),"cache-only"===a||!e&&"standby"===a||n.push(o.refetch()),t.setQuery(r,(function(){return{newData:null}})),t.invalidate(r)}})),this.broadcastQueries(),Promise.all(n)},e.prototype.observeQuery=function(e,t,n){return this.addQueryListener(e,this.queryListenerForObserver(e,t,n)),this.fetchQuery(e,t)},e.prototype.startQuery=function(e,t,n){return this.addQueryListener(e,n),this.fetchQuery(e,t).catch((function(){})),e},e.prototype.startGraphQLSubscription=function(e){var t=this,n=e.query,i=e.fetchPolicy,r=e.variables;n=this.transform(n).document,r=this.getVariables(n,r);var o=function(e){return t.getObservableFromLink(n,{},e,!1).map((function(r){if(i&&"no-cache"===i||(t.dataStore.markSubscriptionResult(r,n,e),t.broadcastQueries()),ue(r))throw new Ee({graphQLErrors:r.errors});return r}))};if(this.transform(n).hasClientExports){var a=this.localState.addExportedVariables(n,r).then(o);return new Ge((function(e){var t=null;return a.then((function(n){return t=n.subscribe(e)}),e.error),function(){return t&&t.unsubscribe()}}))}return o(r)},e.prototype.stopQuery=function(e){this.stopQueryNoBroadcast(e),this.broadcastQueries()},e.prototype.stopQueryNoBroadcast=function(e){this.stopQueryInStoreNoBroadcast(e),this.removeQuery(e)},e.prototype.removeQuery=function(e){this.fetchQueryRejectFns.delete("query:"+e),this.fetchQueryRejectFns.delete("fetchRequest:"+e),this.getQuery(e).subscriptions.forEach((function(e){return e.unsubscribe()})),this.queries.delete(e)},e.prototype.getCurrentQueryResult=function(e,t){void 0===t&&(t=!0);var n=e.options,i=n.variables,r=n.query,o=n.fetchPolicy,a=n.returnPartialData,l=e.getLastResult(),s=this.getQuery(e.queryId).newData;if(s&&s.complete)return{data:s.result,partial:!1};if("no-cache"===o||"network-only"===o)return{data:void 0,partial:!1};var c=this.dataStore.getCache().diff({query:r,variables:i,previousResult:l?l.data:void 0,returnPartialData:!0,optimistic:t}),u=c.complete;return{data:u||a?c.result:void 0,partial:!u}},e.prototype.getQueryWithPreviousResult=function(e){var t;if("string"==typeof e){var n=this.getQuery(e).observableQuery;S(n,17),t=n}else t=e;var i=t.options,r=i.variables,o=i.query;return{previousResult:this.getCurrentQueryResult(t,!1).data,variables:r,document:o}},e.prototype.broadcastQueries=function(){var e=this;this.onBroadcast(),this.queries.forEach((function(t,n){t.invalidated&&t.listeners.forEach((function(i){i&&i(e.queryStore.get(n),t.newData)}))}))},e.prototype.getLocalState=function(){return this.localState},e.prototype.getObservableFromLink=function(e,t,n,i){var r,o=this;void 0===i&&(i=this.queryDeduplication);var a=this.transform(e).serverQuery;if(a){var l=this.inFlightLinkObservables,s=this.link,u={query:a,variables:n,operationName:H(a)||void 0,context:this.prepareContext(Object(c.a)(Object(c.a)({},t),{forceFetch:!i}))};if(t=u.context,i){var p=l.get(a)||new Map;l.set(a,p);var d=JSON.stringify(n);if(!(r=p.get(d))){p.set(d,r=Le(Oe(s,u)));var m=function(){p.delete(d),p.size||l.delete(a),f.unsubscribe()},f=r.subscribe({next:m,error:m,complete:m})}}else r=Le(Oe(s,u))}else r=Ge.of({data:{}}),t=this.prepareContext(t);var h=this.transform(e).clientQuery;return h&&(r=function(e,i){return new Ge((function(i){var r=i.next,a=i.error,l=i.complete,s=0,c=!1,u={next:function(e){++s,new Promise((function(i){i(o.localState.runResolvers({document:h,remoteResult:e,context:t,variables:n}))})).then((function(e){--s,r&&r.call(i,e),c&&u.complete()}),(function(e){--s,a&&a.call(i,e)}))},error:function(e){a&&a.call(i,e)},complete:function(){c=!0,s||l&&l.call(i)}},p=e.subscribe(u);return function(){return p.unsubscribe()}}))}(r)),r},e.prototype.fetchRequest=function(e){var t,n,i=this,r=e.requestId,o=e.queryId,a=e.document,l=e.options,s=e.fetchMoreForQueryId,c=l.variables,u=l.errorPolicy,p=void 0===u?"none":u,d=l.fetchPolicy;return new Promise((function(e,u){var m=i.getObservableFromLink(a,l.context,c),f="fetchRequest:"+o;i.fetchQueryRejectFns.set(f,u);var h=function(){i.fetchQueryRejectFns.delete(f),i.setQuery(o,(function(e){e.subscriptions.delete(g)}))},g=m.map((function(e){if(r>=i.getQuery(o).lastRequestId&&(i.markQueryResult(o,e,l,s),i.queryStore.markQueryResult(o,e,s),i.invalidate(o),i.invalidate(s),i.broadcastQueries()),"none"===p&&Te(e.errors))return u(new Ee({graphQLErrors:e.errors}));if("all"===p&&(n=e.errors),s||"no-cache"===d)t=e.data;else{var m=i.dataStore.getCache().diff({variables:c,query:a,optimistic:!1,returnPartialData:!0});(m.complete||l.returnPartialData)&&(t=m.result)}})).subscribe({error:function(e){h(),u(e)},complete:function(){h(),e({data:t,errors:n,loading:!1,networkStatus:De.ready,stale:!1})}});i.setQuery(o,(function(e){e.subscriptions.add(g)}))}))},e.prototype.getQuery=function(e){return this.queries.get(e)||{listeners:new Set,invalidated:!1,document:null,newData:null,lastRequestId:1,observableQuery:null,subscriptions:new Set}},e.prototype.setQuery=function(e,t){var n=this.getQuery(e),i=Object(c.a)(Object(c.a)({},n),t(n));this.queries.set(e,i)},e.prototype.invalidate=function(e,t){void 0===t&&(t=!0),e&&this.setQuery(e,(function(){return{invalidated:t}}))},e.prototype.prepareContext=function(e){void 0===e&&(e={});var t=this.localState.prepareContext(e);return Object(c.a)(Object(c.a)({},t),{clientAwareness:this.clientAwareness})},e.prototype.checkInFlight=function(e){var t=this.queryStore.get(e);return t&&t.networkStatus!==De.ready&&t.networkStatus!==De.error},e.prototype.startPollingQuery=function(e,t,n){var i=this,r=e.pollInterval;if(S(r,18),!this.ssrMode){var o=this.pollingInfoByQueryId.get(t);o||this.pollingInfoByQueryId.set(t,o={}),o.interval=r,o.options=Object(c.a)(Object(c.a)({},e),{fetchPolicy:"network-only"});var a=function(){var e=i.pollingInfoByQueryId.get(t);e&&(i.checkInFlight(t)?l():i.fetchQuery(t,e.options,_e.poll).then(l,l))},l=function(){var e=i.pollingInfoByQueryId.get(t);e&&(clearTimeout(e.timeout),e.timeout=setTimeout(a,e.interval))};n&&this.addQueryListener(t,n),l()}return t},e.prototype.stopPollingQuery=function(e){this.pollingInfoByQueryId.delete(e)},e}(),Ue=function(){function e(e){this.cache=e}return e.prototype.getCache=function(){return this.cache},e.prototype.markQueryResult=function(e,t,n,i,r){void 0===r&&(r=!1);var o=!ue(e);r&&ue(e)&&e.data&&(o=!0),!i&&o&&this.cache.write({result:e.data,dataId:"ROOT_QUERY",query:t,variables:n})},e.prototype.markSubscriptionResult=function(e,t,n){ue(e)||this.cache.write({result:e.data,dataId:"ROOT_SUBSCRIPTION",query:t,variables:n})},e.prototype.markMutationInit=function(e){var t,n=this;e.optimisticResponse&&(t="function"==typeof e.optimisticResponse?e.optimisticResponse(e.variables):e.optimisticResponse,this.cache.recordOptimisticTransaction((function(i){var r=n.cache;n.cache=i;try{n.markMutationResult({mutationId:e.mutationId,result:{data:t},document:e.document,variables:e.variables,updateQueries:e.updateQueries,update:e.update})}finally{n.cache=r}}),e.mutationId))},e.prototype.markMutationResult=function(e){var t=this;if(!ue(e.result)){var n=[{result:e.result.data,dataId:"ROOT_MUTATION",query:e.document,variables:e.variables}],i=e.updateQueries;i&&Object.keys(i).forEach((function(r){var o=i[r],a=o.query,l=o.updater,s=t.cache.diff({query:a.document,variables:a.variables,returnPartialData:!0,optimistic:!1}),c=s.result;if(s.complete){var u=ce((function(){return l(c,{mutationResult:e.result,queryName:H(a.document)||void 0,queryVariables:a.variables})}));u&&n.push({result:u,dataId:"ROOT_QUERY",query:a.document,variables:a.variables})}})),this.cache.performTransaction((function(t){n.forEach((function(e){return t.write(e)}));var i=e.update;i&&ce((function(){return i(t,e.result)}))}))}},e.prototype.markMutationComplete=function(e){e.optimisticResponse&&this.cache.removeOptimistic(e.mutationId)},e.prototype.markUpdateQueryResult=function(e,t,n){this.cache.write({result:n,dataId:"ROOT_QUERY",variables:t,query:e})},e.prototype.reset=function(){return this.cache.reset()},e}(),$e=function(){function e(e){var t=this;this.defaultOptions={},this.resetStoreCallbacks=[],this.clearStoreCallbacks=[];var n=e.cache,i=e.ssrMode,r=void 0!==i&&i,o=e.ssrForceFetchDelay,a=void 0===o?0:o,l=e.connectToDevTools,s=e.queryDeduplication,c=void 0===s||s,u=e.defaultOptions,p=e.assumeImmutableResults,d=void 0!==p&&p,m=e.resolvers,f=e.typeDefs,h=e.fragmentMatcher,g=e.name,b=e.version,S=e.link;if(!S&&m&&(S=xe.empty()),!S||!n)throw new v(4);this.link=S,this.cache=n,this.store=new Ue(n),this.disableNetworkFetches=r||a>0,this.queryDeduplication=c,this.defaultOptions=u||{},this.typeDefs=f,a&&setTimeout((function(){return t.disableNetworkFetches=!1}),a),this.watchQuery=this.watchQuery.bind(this),this.query=this.query.bind(this),this.mutate=this.mutate.bind(this),this.resetStore=this.resetStore.bind(this),this.reFetchObservableQueries=this.reFetchObservableQueries.bind(this),void 0!==l&&l&&"undefined"!=typeof window&&(window.__APOLLO_CLIENT__=this),this.version="2.6.10",this.localState=new We({cache:n,client:this,resolvers:m,fragmentMatcher:h}),this.queryManager=new Qe({link:this.link,store:this.store,queryDeduplication:c,ssrMode:r,clientAwareness:{name:g,version:b},localState:this.localState,assumeImmutableResults:d,onBroadcast:function(){t.devToolsHookCb&&t.devToolsHookCb({action:{},state:{queries:t.queryManager.queryStore.getStore(),mutations:t.queryManager.mutationStore.getStore()},dataWithOptimisticResults:t.cache.extract(!0)})}})}return e.prototype.stop=function(){this.queryManager.stop()},e.prototype.watchQuery=function(e){return this.defaultOptions.watchQuery&&(e=Object(c.a)(Object(c.a)({},this.defaultOptions.watchQuery),e)),!this.disableNetworkFetches||"network-only"!==e.fetchPolicy&&"cache-and-network"!==e.fetchPolicy||(e=Object(c.a)(Object(c.a)({},e),{fetchPolicy:"cache-first"})),this.queryManager.watchQuery(e)},e.prototype.query=function(e){return this.defaultOptions.query&&(e=Object(c.a)(Object(c.a)({},this.defaultOptions.query),e)),S("cache-and-network"!==e.fetchPolicy,5),this.disableNetworkFetches&&"network-only"===e.fetchPolicy&&(e=Object(c.a)(Object(c.a)({},e),{fetchPolicy:"cache-first"})),this.queryManager.query(e)},e.prototype.mutate=function(e){return this.defaultOptions.mutate&&(e=Object(c.a)(Object(c.a)({},this.defaultOptions.mutate),e)),this.queryManager.mutate(e)},e.prototype.subscribe=function(e){return this.queryManager.startGraphQLSubscription(e)},e.prototype.readQuery=function(e,t){return void 0===t&&(t=!1),this.cache.readQuery(e,t)},e.prototype.readFragment=function(e,t){return void 0===t&&(t=!1),this.cache.readFragment(e,t)},e.prototype.writeQuery=function(e){var t=this.cache.writeQuery(e);return this.queryManager.broadcastQueries(),t},e.prototype.writeFragment=function(e){var t=this.cache.writeFragment(e);return this.queryManager.broadcastQueries(),t},e.prototype.writeData=function(e){var t=this.cache.writeData(e);return this.queryManager.broadcastQueries(),t},e.prototype.__actionHookForDevTools=function(e){this.devToolsHookCb=e},e.prototype.__requestRaw=function(e){return Oe(this.link,e)},e.prototype.initQueryManager=function(){return this.queryManager},e.prototype.resetStore=function(){var e=this;return Promise.resolve().then((function(){return e.queryManager.clearStore()})).then((function(){return Promise.all(e.resetStoreCallbacks.map((function(e){return e()})))})).then((function(){return e.reFetchObservableQueries()}))},e.prototype.clearStore=function(){var e=this;return Promise.resolve().then((function(){return e.queryManager.clearStore()})).then((function(){return Promise.all(e.clearStoreCallbacks.map((function(e){return e()})))}))},e.prototype.onResetStore=function(e){var t=this;return this.resetStoreCallbacks.push(e),function(){t.resetStoreCallbacks=t.resetStoreCallbacks.filter((function(t){return t!==e}))}},e.prototype.onClearStore=function(e){var t=this;return this.clearStoreCallbacks.push(e),function(){t.clearStoreCallbacks=t.clearStoreCallbacks.filter((function(t){return t!==e}))}},e.prototype.reFetchObservableQueries=function(e){return this.queryManager.reFetchObservableQueries(e)},e.prototype.extract=function(e){return this.cache.extract(e)},e.prototype.restore=function(e){return this.cache.restore(e)},e.prototype.addResolvers=function(e){this.localState.addResolvers(e)},e.prototype.setResolvers=function(e){this.localState.setResolvers(e)},e.prototype.getResolvers=function(){return this.localState.getResolvers()},e.prototype.setLocalStateFragmentMatcher=function(e){this.localState.setFragmentMatcher(e)},e}(),ze=n("GAcG"),qe=n("un9+"),He=n("2g5S"),Ke=n("HbWZ"),Je=n("OTbb"),Xe=n("Y8if");function Ye(e){return new ze.a(t=>(e().then(e=>{t.closed||(t.next(e),t.complete())},e=>{t.closed||t.error(e)}),()=>t.unsubscribe()))}class Ze{constructor(e){this.zone=e,this.now=Date.now?Date.now:()=>+new Date}schedule(e,t=0,n){return this.zone.run(()=>qe.b.schedule(e,t,n))}}function et(e){return e[He.a]=()=>e,e}function tt(e,t){return e.pipe(Object(Je.b)(new Ze(t)))}class nt{constructor(e,t,n){this.obsQuery=e;const i=tt(Object(Ke.a)(et(this.obsQuery)),t);this.valueChanges=n.useInitialLoading?i.pipe(Object(Xe.a)(Object.assign(Object.assign({},this.obsQuery.getCurrentResult()),{error:void 0,partial:void 0,stale:!0}))):i,this.queryId=this.obsQuery.queryId}result(){return this.obsQuery.result()}currentResult(){return this.obsQuery.currentResult()}getLastResult(){return this.obsQuery.getLastResult()}getLastError(){return this.obsQuery.getLastError()}resetLastResults(){return this.obsQuery.resetLastResults()}refetch(e){return this.obsQuery.refetch(e)}fetchMore(e){return this.obsQuery.fetchMore(e)}subscribeToMore(e){return this.obsQuery.subscribeToMore(e)}updateQuery(e){return this.obsQuery.updateQuery(e)}stopPolling(){return this.obsQuery.stopPolling()}startPolling(e){return this.obsQuery.startPolling(e)}setOptions(e){return this.obsQuery.setOptions(e)}setVariables(e,t=!1,n=!0){return this.obsQuery.setVariables(e,t,n)}}const it=new s.s("[apollo-angular] options"),rt=new s.s("[apollo-angular] named options");class ot{constructor(e,t){this.ngZone=e,this._client=t}watchQuery(e){return new nt(this.ensureClient().watchQuery(Object.assign({},e)),this.ngZone,e)}query(e){return Ye(()=>this.ensureClient().query(Object.assign({},e)))}mutate(e){return Ye(()=>this.ensureClient().mutate(Object.assign({},e)))}subscribe(e,t){const n=Object(Ke.a)(et(this.ensureClient().subscribe(Object.assign({},e))));return t&&!0!==t.useZone?n:tt(n,this.ngZone)}getClient(){return this._client}setClient(e){if(this._client)throw new Error("Client has been already defined");this._client=e}ensureClient(){return this.checkInstance(),this._client}checkInstance(){if(!this._client)throw new Error("Client has not been defined yet")}}let at=(()=>{class e extends ot{constructor(e,t,n){if(super(e),this._ngZone=e,this.map=new Map,t&&this.createDefault(t),n&&"object"==typeof n)for(const i in n)n.hasOwnProperty(i)&&this.createNamed(i,n[i])}create(e,t){lt(t)?this.createDefault(e):this.createNamed(t,e)}default(){return this}use(e){return lt(e)?this.default():this.map.get(e)}createDefault(e){if(this.getClient())throw new Error("Apollo has been already created.");return this.setClient(new $e(e))}createNamed(e,t){if(this.map.has(e))throw new Error(`Client ${e} has been already created`);this.map.set(e,new ot(this._ngZone,new $e(t)))}removeClient(e){lt(e)?this._client=void 0:this.map.delete(e)}}return e.\u0275fac=function(t){return new(t||e)(s.hc(s.B),s.hc(it,8),s.hc(rt,8))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();function lt(e){return!e||"default"===e}const st=[at];let ct=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:st}),e})();var ut=n("HpFd"),pt={Name:function(e){return e.value},Variable:function(e){return"$"+e.name},Document:function(e){return mt(e.definitions,"\n\n")+"\n"},OperationDefinition:function(e){var t=e.operation,n=e.name,i=ht("(",mt(e.variableDefinitions,", "),")"),r=mt(e.directives," "),o=e.selectionSet;return n||r||i||"query"!==t?mt([t,mt([n,i]),r,o]," "):o},VariableDefinition:function(e){var t=e.directives;return e.variable+": "+e.type+ht(" = ",e.defaultValue)+ht(" ",mt(t," "))},SelectionSet:function(e){return ft(e.selections)},Field:function(e){var t=e.name,n=e.arguments,i=e.directives,r=e.selectionSet,o=ht("",e.alias,": ")+t,a=o+ht("(",mt(n,", "),")");return a.length>80&&(a=o+ht("(\n",gt(mt(n,"\n")),"\n)")),mt([a,mt(i," "),r]," ")},Argument:function(e){return e.name+": "+e.value},FragmentSpread:function(e){return"..."+e.name+ht(" ",mt(e.directives," "))},InlineFragment:function(e){var t=e.directives,n=e.selectionSet;return mt(["...",ht("on ",e.typeCondition),mt(t," "),n]," ")},FragmentDefinition:function(e){var t=e.typeCondition,n=e.variableDefinitions,i=e.directives,r=e.selectionSet;return"fragment ".concat(e.name).concat(ht("(",mt(n,", "),")")," ")+"on ".concat(t," ").concat(ht("",mt(i," ")," "))+r},IntValue:function(e){return e.value},FloatValue:function(e){return e.value},StringValue:function(e,t){var n=e.value;return e.block?Object(ut.b)(n,"description"===t?"":"  "):JSON.stringify(n)},BooleanValue:function(e){return e.value?"true":"false"},NullValue:function(){return"null"},EnumValue:function(e){return e.value},ListValue:function(e){return"["+mt(e.values,", ")+"]"},ObjectValue:function(e){return"{"+mt(e.fields,", ")+"}"},ObjectField:function(e){return e.name+": "+e.value},Directive:function(e){return"@"+e.name+ht("(",mt(e.arguments,", "),")")},NamedType:function(e){return e.name},ListType:function(e){return"["+e.type+"]"},NonNullType:function(e){return e.type+"!"},SchemaDefinition:dt((function(e){var t=e.operationTypes;return mt(["schema",mt(e.directives," "),ft(t)]," ")})),OperationTypeDefinition:function(e){return e.operation+": "+e.type},ScalarTypeDefinition:dt((function(e){return mt(["scalar",e.name,mt(e.directives," ")]," ")})),ObjectTypeDefinition:dt((function(e){var t=e.directives,n=e.fields;return mt(["type",e.name,ht("implements ",mt(e.interfaces," & ")),mt(t," "),ft(n)]," ")})),FieldDefinition:dt((function(e){var t=e.arguments,n=e.type,i=e.directives;return e.name+(vt(t)?ht("(\n",gt(mt(t,"\n")),"\n)"):ht("(",mt(t,", "),")"))+": "+n+ht(" ",mt(i," "))})),InputValueDefinition:dt((function(e){var t=e.directives;return mt([e.name+": "+e.type,ht("= ",e.defaultValue),mt(t," ")]," ")})),InterfaceTypeDefinition:dt((function(e){var t=e.directives,n=e.fields;return mt(["interface",e.name,ht("implements ",mt(e.interfaces," & ")),mt(t," "),ft(n)]," ")})),UnionTypeDefinition:dt((function(e){var t=e.types;return mt(["union",e.name,mt(e.directives," "),t&&0!==t.length?"= "+mt(t," | "):""]," ")})),EnumTypeDefinition:dt((function(e){var t=e.values;return mt(["enum",e.name,mt(e.directives," "),ft(t)]," ")})),EnumValueDefinition:dt((function(e){return mt([e.name,mt(e.directives," ")]," ")})),InputObjectTypeDefinition:dt((function(e){var t=e.fields;return mt(["input",e.name,mt(e.directives," "),ft(t)]," ")})),DirectiveDefinition:dt((function(e){var t=e.arguments,n=e.repeatable,i=e.locations;return"directive @"+e.name+(vt(t)?ht("(\n",gt(mt(t,"\n")),"\n)"):ht("(",mt(t,", "),")"))+(n?" repeatable":"")+" on "+mt(i," | ")})),SchemaExtension:function(e){var t=e.operationTypes;return mt(["extend schema",mt(e.directives," "),ft(t)]," ")},ScalarTypeExtension:function(e){return mt(["extend scalar",e.name,mt(e.directives," ")]," ")},ObjectTypeExtension:function(e){var t=e.directives,n=e.fields;return mt(["extend type",e.name,ht("implements ",mt(e.interfaces," & ")),mt(t," "),ft(n)]," ")},InterfaceTypeExtension:function(e){var t=e.directives,n=e.fields;return mt(["extend interface",e.name,ht("implements ",mt(e.interfaces," & ")),mt(t," "),ft(n)]," ")},UnionTypeExtension:function(e){var t=e.types;return mt(["extend union",e.name,mt(e.directives," "),t&&0!==t.length?"= "+mt(t," | "):""]," ")},EnumTypeExtension:function(e){var t=e.values;return mt(["extend enum",e.name,mt(e.directives," "),ft(t)]," ")},InputObjectTypeExtension:function(e){var t=e.fields;return mt(["extend input",e.name,mt(e.directives," "),ft(t)]," ")}};function dt(e){return function(t){return mt([t.description,e(t)],"\n")}}function mt(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return null!==(t=null==e?void 0:e.filter((function(e){return e})).join(n))&&void 0!==t?t:""}function ft(e){return ht("{\n",gt(mt(e,"\n")),"\n}")}function ht(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return null!=t&&""!==t?e+t+n:""}function gt(e){return ht("  ",e.replace(/\n/g,"\n  "))}function bt(e){return-1!==e.indexOf("\n")}function vt(e){return null!=e&&e.some(bt)}var St=function(e){var t=e.name,n=e.type;this.uri=e.uri,this.name=t,this.type=n},wt=function(e){return"undefined"!=typeof File&&e instanceof File||"undefined"!=typeof Blob&&e instanceof Blob||e instanceof St};function yt(e,t,n){var i;void 0===t&&(t=""),void 0===n&&(n=wt);var r=new Map;function o(e,t){var n=r.get(t);n?n.push.apply(n,e):r.set(t,e)}if(n(e))i=null,o([t],e);else{var a=t?t+".":"";if("undefined"!=typeof FileList&&e instanceof FileList)i=Array.prototype.map.call(e,(function(e,t){return o([""+a+t],e),null}));else if(Array.isArray(e))i=e.map((function(e,t){var i=yt(e,""+a+t,n);return i.files.forEach(o),i.clone}));else if(e&&e.constructor===Object)for(var l in i={},e){var s=yt(e[l],""+a+l,n);s.files.forEach(o),i[l]=s.clone}else i=e}return{clone:i,files:r}}class It extends xe{constructor(e,t){super(),this.httpClient=e,this.options=t,this.requester=e=>new ve(t=>{const n=e.getContext(),i=(e,t)=>function(...e){const t=e.find(e=>void 0!==e);return void 0===t?e[e.length-1]:t}(n[e],this.options[e],t),r=i("includeQuery",!0),o=i("includeExtensions",!1),a=i("method","POST"),l=i("uri","graphql"),s=i("withCredentials"),c=i("useMultipart"),u={method:a,url:"function"==typeof l?l(e):l,body:{operationName:e.operationName,variables:e.variables},options:{withCredentials:s,useMultipart:c,headers:this.options.headers}};var p,d;o&&(u.body.extensions=e.extensions),r&&(u.body.query=f(e.query,{leave:pt})),n.headers&&(u.options.headers=(d=n.headers,(p=u.options.headers)&&d?d.keys().reduce((e,t)=>e.set(t,d.getAll(t)),p):d||p));const m=((e,t,n)=>{const i=-1!==["POST","PUT","PATCH"].indexOf(e.method.toUpperCase()),r=e.body.length;let o,a=e.options&&e.options.useMultipart;if(a){if(r)return new ze.a(e=>e.error(new Error("File upload is not available when combined with Batching")));if(!i)return new ze.a(e=>e.error(new Error("File upload is not available when GET is used")));o=n(e.body),a=!!o.files.size}let l={};if(r){if(!i)return new ze.a(e=>e.error(new Error("Batching is not available for GET requests")));l={body:e.body}}else{const t=a?o.clone:e.body;l=i?{body:t}:{params:Object.keys(e.body).reduce((t,n)=>{const i=e.body[n];return t[n]=(e=>-1!==["variables","extensions"].indexOf(e.toLowerCase()))(n)?JSON.stringify(i):i,t},{})}}if(a&&i){const e=new FormData;e.append("operations",JSON.stringify(l.body));const t={},n=o.files;let i=0;n.forEach(e=>{t[++i]=e}),e.append("map",JSON.stringify(t)),i=0,n.forEach((t,n)=>{e.append(++i+"",n,n.name)}),l.body=e}return t.request(e.method,e.url,Object.assign(Object.assign({observe:"response",responseType:"json",reportProgress:!1},l),e.options))})(u,this.httpClient,yt).subscribe({next:n=>{e.setContext({response:n}),t.next(n.body)},error:e=>t.error(e),complete:()=>t.complete()});return()=>{m.closed||m.unsubscribe()}})}request(e){return this.requester(e)}}let Ct=(()=>{class e{constructor(e){this.httpClient=e}create(e){return new It(this.httpClient,e)}}return e.\u0275fac=function(t){return new(t||e)(s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();const Ft=[Ct];let xt=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:Ft}),e})();function Ot(e){return{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GeneratedClientQuery"},selectionSet:Vt(e)}]}}function Vt(e){if("number"==typeof e||"boolean"==typeof e||"string"==typeof e||null==e)return null;if(Array.isArray(e))return Vt(e[0]);var t=[];return Object.keys(e).forEach((function(n){var i=Vt(e[n]);t.push({kind:"Field",name:{kind:"Name",value:n},selectionSet:i||void 0})})),{kind:"SelectionSet",selections:t}}var Dt={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:null,variableDefinitions:null,directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:null,name:{kind:"Name",value:"__typename"},arguments:[],directives:[],selectionSet:null}]}}]},kt=function(){function e(){}return e.prototype.transformDocument=function(e){return e},e.prototype.transformForLink=function(e){return e},e.prototype.readQuery=function(e,t){return void 0===t&&(t=!1),this.read({query:e.query,variables:e.variables,optimistic:t})},e.prototype.readFragment=function(e,t){return void 0===t&&(t=!1),this.read({query:U(e.fragment,e.fragmentName),variables:e.variables,rootId:e.id,optimistic:t})},e.prototype.writeQuery=function(e){this.write({dataId:"ROOT_QUERY",result:e.data,query:e.query,variables:e.variables})},e.prototype.writeFragment=function(e){this.write({dataId:e.id,result:e.data,variables:e.variables,query:U(e.fragment,e.fragmentName)})},e.prototype.writeData=function(e){var t,n,i=e.id,r=e.data;if(void 0!==i){var o=null;try{o=this.read({rootId:i,optimistic:!1,query:Dt})}catch(s){}var a=o&&o.__typename||"__ClientData",l=Object.assign({__typename:a},r);this.writeFragment({id:i,fragment:(t=l,n=a,{kind:"Document",definitions:[{kind:"FragmentDefinition",typeCondition:{kind:"NamedType",name:{kind:"Name",value:n||"__FakeType"}},name:{kind:"Name",value:"GeneratedClientQuery"},selectionSet:Vt(t)}]}),data:l})}else this.writeQuery({query:Ot(r),data:r})},e}(),Gt=null,Tt={},Et=1,_t=Array,Pt=_t["@wry/context:Slot"]||function(){var e=function(){function e(){this.id=["slot",Et++,Date.now(),Math.random().toString(36).slice(2)].join(":")}return e.prototype.hasValue=function(){for(var e=Gt;e;e=e.parent)if(this.id in e.slots){var t=e.slots[this.id];if(t===Tt)break;return e!==Gt&&(Gt.slots[this.id]=t),!0}return Gt&&(Gt.slots[this.id]=Tt),!1},e.prototype.getValue=function(){if(this.hasValue())return Gt.slots[this.id]},e.prototype.withValue=function(e,t,n,i){var r,o=((r={__proto__:null})[this.id]=e,r),a=Gt;Gt={parent:a,slots:o};try{return t.apply(i,n)}finally{Gt=a}},e.bind=function(e){var t=Gt;return function(){var n=Gt;try{return Gt=t,e.apply(this,arguments)}finally{Gt=n}}},e.noContext=function(e,t,n){if(!Gt)return e.apply(n,t);var i=Gt;try{return Gt=null,e.apply(n,t)}finally{Gt=i}},e}();try{Object.defineProperty(_t,"@wry/context:Slot",{value:_t["@wry/context:Slot"]=e,enumerable:!1,writable:!1,configurable:!1})}finally{return e}}();function Mt(){}var Rt=function(){function e(e,t){void 0===e&&(e=1/0),void 0===t&&(t=Mt),this.max=e,this.dispose=t,this.map=new Map,this.newest=null,this.oldest=null}return e.prototype.has=function(e){return this.map.has(e)},e.prototype.get=function(e){var t=this.getEntry(e);return t&&t.value},e.prototype.getEntry=function(e){var t=this.map.get(e);if(t&&t!==this.newest){var n=t.older,i=t.newer;i&&(i.older=n),n&&(n.newer=i),t.older=this.newest,t.older.newer=t,t.newer=null,this.newest=t,t===this.oldest&&(this.oldest=i)}return t},e.prototype.set=function(e,t){var n=this.getEntry(e);return n?n.value=t:(n={key:e,value:t,newer:null,older:this.newest},this.newest&&(this.newest.newer=n),this.newest=n,this.oldest=this.oldest||n,this.map.set(e,n),n.value)},e.prototype.clean=function(){for(;this.oldest&&this.map.size>this.max;)this.delete(this.oldest.key)},e.prototype.delete=function(e){var t=this.map.get(e);return!!t&&(t===this.newest&&(this.newest=t.older),t===this.oldest&&(this.oldest=t.newer),t.newer&&(t.newer.older=t.older),t.older&&(t.older.newer=t.newer),this.map.delete(e),this.dispose(t.value,e),!0)},e}(),Nt=new Pt,jt=[],At=[];function Wt(e,t){if(!e)throw new Error(t||"assertion failure")}function Lt(e){switch(e.length){case 0:throw new Error("unknown value");case 1:return e[0];case 2:throw e[1]}}var Bt=function(){function e(t,n){this.fn=t,this.args=n,this.parents=new Set,this.childValues=new Map,this.dirtyChildren=null,this.dirty=!0,this.recomputing=!1,this.value=[],++e.count}return e.prototype.recompute=function(){if(Wt(!this.recomputing,"already recomputing"),function(e){var t=Nt.getValue();if(t)return e.parents.add(t),t.childValues.has(e)||t.childValues.set(e,[]),Ut(e)?qt(t,e):Ht(t,e),t}(this)||!Jt(this))return Ut(this)?(e=Xt(this),Nt.withValue(this,Qt,[this]),function(e){if("function"==typeof e.subscribe)try{Zt(e),e.unsubscribe=e.subscribe.apply(null,e.args)}catch(t){return e.setDirty(),!1}return!0}(this)&&function(e){e.dirty=!1,Ut(e)||zt(e)}(this),e.forEach(Jt),Lt(this.value)):Lt(this.value);var e},e.prototype.setDirty=function(){this.dirty||(this.dirty=!0,this.value.length=0,$t(this),Zt(this))},e.prototype.dispose=function(){var e=this;Xt(this).forEach(Jt),Zt(this),this.parents.forEach((function(t){t.setDirty(),Yt(t,e)}))},e.count=0,e}();function Qt(e){e.recomputing=!0,e.value.length=0;try{e.value[0]=e.fn.apply(null,e.args)}catch(t){e.value[1]=t}e.recomputing=!1}function Ut(e){return e.dirty||!(!e.dirtyChildren||!e.dirtyChildren.size)}function $t(e){e.parents.forEach((function(t){return qt(t,e)}))}function zt(e){e.parents.forEach((function(t){return Ht(t,e)}))}function qt(e,t){if(Wt(e.childValues.has(t)),Wt(Ut(t)),e.dirtyChildren){if(e.dirtyChildren.has(t))return}else e.dirtyChildren=At.pop()||new Set;e.dirtyChildren.add(t),$t(e)}function Ht(e,t){Wt(e.childValues.has(t)),Wt(!Ut(t));var n,i,r,o=e.childValues.get(t);0===o.length?e.childValues.set(t,t.value.slice(0)):(i=t.value,(r=(n=o).length)>0&&r===i.length&&n[r-1]===i[r-1]||e.setDirty()),Kt(e,t),Ut(e)||zt(e)}function Kt(e,t){var n=e.dirtyChildren;n&&(n.delete(t),0===n.size&&(At.length<100&&At.push(n),e.dirtyChildren=null))}function Jt(e){return 0===e.parents.size&&"function"==typeof e.reportOrphan&&!0===e.reportOrphan()}function Xt(e){var t=jt;return e.childValues.size>0&&(t=[],e.childValues.forEach((function(n,i){Yt(e,i),t.push(i)}))),Wt(null===e.dirtyChildren),t}function Yt(e,t){t.parents.delete(e),e.childValues.delete(t),Kt(e,t)}function Zt(e){var t=e.unsubscribe;"function"==typeof t&&(e.unsubscribe=void 0,t())}var en=function(){function e(e){this.weakness=e}return e.prototype.lookup=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.lookupArray(e)},e.prototype.lookupArray=function(e){var t=this;return e.forEach((function(e){return t=t.getChildTrie(e)})),t.data||(t.data=Object.create(null))},e.prototype.getChildTrie=function(t){var n=this.weakness&&function(e){switch(typeof e){case"object":if(null===e)break;case"function":return!0}return!1}(t)?this.weak||(this.weak=new WeakMap):this.strong||(this.strong=new Map),i=n.get(t);return i||n.set(t,i=new e(this.weakness)),i},e}(),tn=new en("function"==typeof WeakMap);function nn(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return tn.lookupArray(e)}var rn=new Set;function on(e,t){void 0===t&&(t=Object.create(null));var n=new Rt(t.max||Math.pow(2,16),(function(e){return e.dispose()})),i=!!t.disposable,r=t.makeCacheKey||nn;function o(){if(!i||Nt.hasValue()){var o=r.apply(null,arguments);if(void 0===o)return e.apply(null,arguments);var a=Array.prototype.slice.call(arguments),l=n.get(o);l?l.args=a:(l=new Bt(e,a),n.set(o,l),l.subscribe=t.subscribe,i&&(l.reportOrphan=function(){return n.delete(o)}));var s=l.recompute();return n.set(o,l),rn.add(n),Nt.hasValue()||(rn.forEach((function(e){return e.clean()})),rn.clear()),i?void 0:s}}return o.dirty=function(){var e=r.apply(null,arguments),t=void 0!==e&&n.get(e);t&&t.setDirty()},o}var an=!1;var ln=function(){function e(){}return e.prototype.ensureReady=function(){return Promise.resolve()},e.prototype.canBypassInit=function(){return!0},e.prototype.match=function(e,t,n){var i=n.store.get(e.id),r="ROOT_QUERY"===e.id;if(!i)return r;var o=i.__typename,a=void 0===o?r&&"Query":o;return a&&a===t||(!an,!0===se("test")||(an=!0),"heuristic")},e}(),sn=Object.prototype.hasOwnProperty,cn=function(){function e(e){var t=this;void 0===e&&(e=Object.create(null)),this.data=e,this.depend=on((function(e){return t.data[e]}),{disposable:!0,makeCacheKey:function(e){return e}})}return e.prototype.toObject=function(){return this.data},e.prototype.get=function(e){return this.depend(e),this.data[e]},e.prototype.set=function(e,t){t!==this.data[e]&&(this.data[e]=t,this.depend.dirty(e))},e.prototype.delete=function(e){sn.call(this.data,e)&&(delete this.data[e],this.depend.dirty(e))},e.prototype.clear=function(){this.replace(null)},e.prototype.replace=function(e){var t=this;e?(Object.keys(e).forEach((function(n){t.set(n,e[n])})),Object.keys(this.data).forEach((function(n){sn.call(e,n)||t.delete(n)}))):Object.keys(this.data).forEach((function(e){t.delete(e)}))},e}();function un(e){return new cn(e)}var pn=function(){function e(e){var t=this,n=void 0===e?{}:e,i=n.cacheKeyRoot,r=void 0===i?new en(ae):i,o=n.freezeResults,a=this.executeStoreQuery,l=this.executeSelectionSet,s=this.executeSubSelectedArray;this.freezeResults=void 0!==o&&o,this.executeStoreQuery=on((function(e){return a.call(t,e)}),{makeCacheKey:function(e){var t=e.rootValue,n=e.contextValue;if(n.store instanceof cn)return r.lookup(n.store,e.query,e.fragmentMatcher,JSON.stringify(e.variableValues),t.id)}}),this.executeSelectionSet=on((function(e){return l.call(t,e)}),{makeCacheKey:function(e){var t=e.rootValue,n=e.execContext;if(n.contextValue.store instanceof cn)return r.lookup(n.contextValue.store,e.selectionSet,n.fragmentMatcher,JSON.stringify(n.variableValues),t.id)}}),this.executeSubSelectedArray=on((function(e){return s.call(t,e)}),{makeCacheKey:function(e){var t=e.execContext;if(t.contextValue.store instanceof cn)return r.lookup(t.contextValue.store,e.field,e.array,JSON.stringify(t.variableValues))}})}return e.prototype.readQueryFromStore=function(e){return this.diffQueryAgainstStore(Object(c.a)(Object(c.a)({},e),{returnPartialData:!1})).result},e.prototype.diffQueryAgainstStore=function(e){var t,n=e.store,i=e.query,r=e.variables,o=e.previousResult,a=e.returnPartialData,l=void 0===a||a,s=e.rootId,c=void 0===s?"ROOT_QUERY":s,u=e.fragmentMatcherFunction,p=e.config;r=$({},Y((S((t=q(i))&&"query"===t.operation,6),t)),r);var d=this.executeStoreQuery({query:i,rootValue:{type:"id",id:c,generated:!0,typename:"Query"},contextValue:{store:n,dataIdFromObject:p&&p.dataIdFromObject,cacheRedirects:p&&p.cacheRedirects||{}},variableValues:r,fragmentMatcher:u}),m=d.missing&&d.missing.length>0;return m&&!l&&d.missing.forEach((function(e){if(!e.tolerable)throw new v(8)})),o&&D(o,d.result)&&(d.result=o),{result:d.result,complete:!m}},e.prototype.executeStoreQuery=function(e){var t=e.query,n=e.rootValue,i=e.contextValue,r=e.variableValues,o=e.fragmentMatcher,a=void 0===o?mn:o,l=J(t),s=X(K(t));return this.executeSelectionSet({selectionSet:l.selectionSet,rootValue:n,execContext:{query:t,fragmentMap:s,contextValue:i,variableValues:r,fragmentMatcher:a}})},e.prototype.executeSelectionSet=function(e){var t=this,n=e.selectionSet,i=e.rootValue,r=e.execContext,o=r.fragmentMap,a=r.contextValue,l=r.variableValues,s={result:null},u=[],p=a.store.get(i.id),d=p&&p.__typename||"ROOT_QUERY"===i.id&&"Query"||void 0;function m(e){var t;return e.missing&&(s.missing=s.missing||[],(t=s.missing).push.apply(t,e.missing)),e.result}return n.selections.forEach((function(e){var n;if(W(e,l))if(M(e)){var s=m(t.executeField(p,d,e,r));void 0!==s&&u.push(((n={})[P(e)]=s,n))}else{var f=void 0;if(R(e))f=e;else if(!(f=o[e.name.value]))throw new v(9);var h=f.typeCondition&&f.typeCondition.name.value,g=!h||r.fragmentMatcher(i,h,a);if(g){var b=t.executeSelectionSet({selectionSet:f.selectionSet,rootValue:i,execContext:r});"heuristic"===g&&b.missing&&(b=Object(c.a)(Object(c.a)({},b),{missing:b.missing.map((function(e){return Object(c.a)(Object(c.a)({},e),{tolerable:!0})}))})),u.push(m(b))}}})),s.result=me(u),s},e.prototype.executeField=function(e,t,n,i){var r=i.variableValues,o=i.contextValue,a=function(e,t,n,i,r,o){var a=o.directives,l=n;(i||a)&&(l=E(l,i,a));var s,c=void 0;if(e&&void 0===(c=e[l])&&r.cacheRedirects&&"string"==typeof t){var u=r.cacheRedirects[t];if(u){var p=u[n];p&&(c=p(e,i,{getCacheKey:function(e){var t=r.dataIdFromObject(e);return t&&j({id:t,typename:e.__typename})}}))}}return void 0===c?{result:c,missing:[{object:e,fieldName:l,tolerable:!1}]}:(null!=(s=c)&&"object"==typeof s&&"json"===s.type&&(c=c.json),{result:c})}(e,t,n.name.value,_(n,r),o,{resultKey:P(n),directives:A(n,r)});return Array.isArray(a.result)?this.combineExecResults(a,this.executeSubSelectedArray({field:n,array:a.result,execContext:i})):n.selectionSet?null==a.result?a:this.combineExecResults(a,this.executeSelectionSet({selectionSet:n.selectionSet,rootValue:a.result,execContext:i})):(dn(n,a.result),a)},e.prototype.combineExecResults=function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return t.forEach((function(t){t.missing&&(e=e||[]).push.apply(e,t.missing)})),{result:t.pop().result,missing:e}},e.prototype.executeSubSelectedArray=function(e){var t,n=this,i=e.field,r=e.array,o=e.execContext;function a(e){return e.missing&&(t=t||[]).push.apply(t,e.missing),e.result}return{result:r=r.map((function(e){return null===e?null:Array.isArray(e)?a(n.executeSubSelectedArray({field:i,array:e,execContext:o})):i.selectionSet?a(n.executeSelectionSet({selectionSet:i.selectionSet,rootValue:e,execContext:o})):(dn(i,e),e)})),missing:t}},e}();function dn(e,t){if(!e.selectionSet&&N(t))throw new v(10)}function mn(){return!0}var fn=function(){function e(e){void 0===e&&(e=Object.create(null)),this.data=e}return e.prototype.toObject=function(){return this.data},e.prototype.get=function(e){return this.data[e]},e.prototype.set=function(e,t){this.data[e]=t},e.prototype.delete=function(e){this.data[e]=void 0},e.prototype.clear=function(){this.data=Object.create(null)},e.prototype.replace=function(e){this.data=e||Object.create(null)},e}(),hn=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type="WriteError",t}return Object(c.c)(t,e),t}(Error),gn=function(){function e(){}return e.prototype.writeQueryToStore=function(e){var t=e.query,n=e.result,i=e.store,r=void 0===i?un():i;return this.writeResultToStore({dataId:"ROOT_QUERY",result:n,document:t,store:r,variables:e.variables,dataIdFromObject:e.dataIdFromObject,fragmentMatcherFunction:e.fragmentMatcherFunction})},e.prototype.writeResultToStore=function(e){var t=e.dataId,n=e.result,i=e.document,r=e.store,o=void 0===r?un():r,a=e.variables,l=e.dataIdFromObject,s=e.fragmentMatcherFunction,c=q(i);try{return this.writeSelectionSetToStore({result:n,dataId:t,selectionSet:c.selectionSet,context:{store:o,processedData:{},variables:$({},Y(c),a),dataIdFromObject:l,fragmentMap:X(K(i)),fragmentMatcherFunction:s}})}catch(u){throw function(e,t){var n=new hn("Error writing result to store for query:\n "+JSON.stringify(t));return n.message+="\n"+e.message,n.stack=e.stack,n}(u,i)}},e.prototype.writeSelectionSetToStore=function(e){var t=this,n=e.result,i=e.dataId,r=e.context,o=r.variables,a=r.store,l=r.fragmentMap;return e.selectionSet.selections.forEach((function(e){var a;if(W(e,o))if(M(e)){var s=P(e),c=n[s];void 0!==c?t.writeFieldToStore({dataId:i,value:c,field:e,context:r}):e.directives&&e.directives.length&&(e.directives.some((function(e){return e.name&&"defer"===e.name.value})),e.directives.some((function(e){return e.name&&"client"===e.name.value})))}else{var u=void 0;R(e)?u=e:S(u=(l||{})[e.name.value],3);var p=!0;if(r.fragmentMatcherFunction&&u.typeCondition){var d=i||"self",m=j({id:d,typename:void 0}),f={store:new fn((a={},a[d]=n,a)),cacheRedirects:{}},h=r.fragmentMatcherFunction(m,u.typeCondition.name.value,f);se("production"),p=!!h}p&&t.writeSelectionSetToStore({result:n,selectionSet:u.selectionSet,dataId:i,context:r})}})),a},e.prototype.writeFieldToStore=function(e){var t,n,i,r=e.field,o=e.value,a=e.dataId,l=e.context,s=l.dataIdFromObject,u=l.store,p=function(e,t){var n=null;e.directives&&(n={},e.directives.forEach((function(e){n[e.name.value]={},e.arguments&&e.arguments.forEach((function(i){return G(n[e.name.value],i.name,i.value,t)}))})));var i=null;return e.arguments&&e.arguments.length&&(i={},e.arguments.forEach((function(e){return G(i,e.name,e.value,t)}))),E(e.name.value,i,n)}(r,l.variables);if(r.selectionSet&&null!==o)if(Array.isArray(o))n=this.processArrayValue(o,a+"."+p,r.selectionSet,l);else{var d=a+"."+p,m=!0;if(bn(d)||(d="$"+d),s){var f=s(o);S(!f||!bn(f),4),(f||"number"==typeof f&&0===f)&&(d=f,m=!1)}vn(d,r,l.processedData)||this.writeSelectionSetToStore({dataId:d,result:o,selectionSet:r.selectionSet,context:l});var h=o.__typename;n=j({id:d,typename:h},m);var g=(i=u.get(a))&&i[p];if(g!==n&&N(g)){var b=void 0!==g.typename,v=void 0!==h,w=b&&v&&g.typename!==h;S(!m||g.generated||w,5),S(!b||v,6),g.generated&&(w?m||u.delete(g.id):function e(t,n,i){if(t===n)return!1;var r=i.get(t),o=i.get(n),a=!1;Object.keys(r).forEach((function(t){var n=r[t],l=o[t];N(n)&&bn(n.id)&&N(l)&&!D(n,l)&&e(n.id,l.id,i)&&(a=!0)})),i.delete(t);var l=Object(c.a)(Object(c.a)({},r),o);return D(l,o)?a:(i.set(n,l),!0)}(g.id,n.id,u))}}else n=null!=o&&"object"==typeof o?{type:"json",json:o}:o;(i=u.get(a))&&D(n,i[p])||u.set(a,Object(c.a)(Object(c.a)({},i),((t={})[p]=n,t)))},e.prototype.processArrayValue=function(e,t,n,i){var r=this;return e.map((function(e,o){if(null===e)return null;var a=t+"."+o;if(Array.isArray(e))return r.processArrayValue(e,a,n,i);var l=!0;if(i.dataIdFromObject){var s=i.dataIdFromObject(e);s&&(a=s,l=!1)}return vn(a,n,i.processedData)||r.writeSelectionSetToStore({dataId:a,result:e,selectionSet:n,context:i}),j({id:a,typename:e.__typename},l)}))},e}();function bn(e){return"$"===e[0]}function vn(e,t,n){if(!n)return!1;if(n[e]){if(n[e].indexOf(t)>=0)return!0;n[e].push(t)}else n[e]=[t];return!1}var Sn={fragmentMatcher:new ln,dataIdFromObject:function(e){if(e.__typename){if(void 0!==e.id)return e.__typename+":"+e.id;if(void 0!==e._id)return e.__typename+":"+e._id}return null},addTypename:!0,resultCaching:!0,freezeResults:!1},wn=Object.prototype.hasOwnProperty,yn=function(e){function t(t,n,i){var r=e.call(this,Object.create(null))||this;return r.optimisticId=t,r.parent=n,r.transaction=i,r}return Object(c.c)(t,e),t.prototype.toObject=function(){return Object(c.a)(Object(c.a)({},this.parent.toObject()),this.data)},t.prototype.get=function(e){return wn.call(this.data,e)?this.data[e]:this.parent.get(e)},t}(fn),In=function(e){function t(t){void 0===t&&(t={});var n=e.call(this)||this;n.watches=new Set,n.typenameDocumentCache=new Map,n.cacheKeyRoot=new en(ae),n.silenceBroadcast=!1,n.config=Object(c.a)(Object(c.a)({},Sn),t),n.config.customResolvers&&(n.config.cacheRedirects=n.config.customResolvers),n.config.cacheResolvers&&(n.config.cacheRedirects=n.config.cacheResolvers),n.addTypename=!!n.config.addTypename,n.data=n.config.resultCaching?new cn:new fn,n.optimisticData=n.data,n.storeWriter=new gn,n.storeReader=new pn({cacheKeyRoot:n.cacheKeyRoot,freezeResults:t.freezeResults});var i=n,r=i.maybeBroadcastWatch;return n.maybeBroadcastWatch=on((function(e){return r.call(n,e)}),{makeCacheKey:function(e){if(!e.optimistic&&!e.previousResult)return i.data instanceof cn?i.cacheKeyRoot.lookup(e.query,JSON.stringify(e.variables)):void 0}}),n}return Object(c.c)(t,e),t.prototype.restore=function(e){return e&&this.data.replace(e),this},t.prototype.extract=function(e){return void 0===e&&(e=!1),(e?this.optimisticData:this.data).toObject()},t.prototype.read=function(e){if("string"==typeof e.rootId&&void 0===this.data.get(e.rootId))return null;var t=this.config.fragmentMatcher,n=t&&t.match;return this.storeReader.readQueryFromStore({store:e.optimistic?this.optimisticData:this.data,query:this.transformDocument(e.query),variables:e.variables,rootId:e.rootId,fragmentMatcherFunction:n,previousResult:e.previousResult,config:this.config})||null},t.prototype.write=function(e){var t=this.config.fragmentMatcher,n=t&&t.match;this.storeWriter.writeResultToStore({dataId:e.dataId,result:e.result,variables:e.variables,document:this.transformDocument(e.query),store:this.data,dataIdFromObject:this.config.dataIdFromObject,fragmentMatcherFunction:n}),this.broadcastWatches()},t.prototype.diff=function(e){var t=this.config.fragmentMatcher,n=t&&t.match;return this.storeReader.diffQueryAgainstStore({store:e.optimistic?this.optimisticData:this.data,query:this.transformDocument(e.query),variables:e.variables,returnPartialData:e.returnPartialData,previousResult:e.previousResult,fragmentMatcherFunction:n,config:this.config})},t.prototype.watch=function(e){var t=this;return this.watches.add(e),function(){t.watches.delete(e)}},t.prototype.evict=function(e){throw new v(7)},t.prototype.reset=function(){return this.data.clear(),this.broadcastWatches(),Promise.resolve()},t.prototype.removeOptimistic=function(e){for(var t=[],n=0,i=this.optimisticData;i instanceof yn;)i.optimisticId===e?++n:t.push(i),i=i.parent;if(n>0){for(this.optimisticData=i;t.length>0;){var r=t.pop();this.performTransaction(r.transaction,r.optimisticId)}this.broadcastWatches()}},t.prototype.performTransaction=function(e,t){var n=this.data,i=this.silenceBroadcast;this.silenceBroadcast=!0,"string"==typeof t&&(this.data=this.optimisticData=new yn(t,this.optimisticData,e));try{e(this)}finally{this.silenceBroadcast=i,this.data=n}this.broadcastWatches()},t.prototype.recordOptimisticTransaction=function(e,t){return this.performTransaction(e,t)},t.prototype.transformDocument=function(e){if(this.addTypename){var t=this.typenameDocumentCache.get(e);return t||(t=f(z(e),{SelectionSet:{enter:function(e,t,n){if(!n||"OperationDefinition"!==n.kind){var i=e.selections;if(i&&!i.some((function(e){return M(e)&&("__typename"===e.name.value||0===e.name.value.lastIndexOf("__",0))}))){var r=n;if(!(M(r)&&r.directives&&r.directives.some((function(e){return"export"===e.name.value}))))return Object(c.a)(Object(c.a)({},e),{selections:Object(c.f)(i,[ee])})}}}}}),this.typenameDocumentCache.set(e,t),this.typenameDocumentCache.set(t,t)),t}return e},t.prototype.broadcastWatches=function(){var e=this;this.silenceBroadcast||this.watches.forEach((function(t){return e.maybeBroadcastWatch(t)}))},t.prototype.maybeBroadcastWatch=function(e){e.callback(this.diff({query:e.query,variables:e.variables,previousResult:e.previousResult&&e.previousResult(),optimistic:e.optimistic}))},t}(kt),Cn=n("c+bQ"),Fn=n.n(Cn),xn=n("ZjZ4"),On=n.n(xn);let Vn=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Dn=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),kn=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[Vn],imports:[[r.c,l.NuiCheckboxModule,l.NuiButtonModule,l.NuiDialogModule,Dn,l.NuiExpanderModule,l.NuiCheckboxModule]]}),e})(),Gn=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiExpanderModule,l.NuiCheckboxModule,l.NuiPopoverModule]]}),e})(),Tn=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiExpanderModule,l.NuiCheckboxModule,l.NuiPopoverModule]]}),e})(),En=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),_n=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c,l.NuiRepeatModule]]}),e})(),Pn=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[En],imports:[[r.c,l.NuiDialogModule,l.NuiSpinnerModule,l.NuiButtonModule,_n,l.NuiPopoverModule,l.NuiExpanderModule,l.NuiCheckboxModule]]}),e})();var Mn=n("edSL"),Rn=n.n(Mn),Nn=n("YFs1"),jn=n.n(Nn),An=n("EYJY"),Wn=n("XRyL");const Ln=[{color:"regular-azure",status:"Critical"},{color:"regular-black",status:"Warning"},{color:"regular-blue",status:"Up"},{color:"regular-yellow",status:"Critical"},{color:"regular-yellow",status:"Warning"},{color:"regular-black",status:"Up"},{color:"regular-blue",status:"Up"},{color:"regular-azure",status:"Up"},{color:"regular-blue",status:"Up"},{color:"regular-azure",status:"Critical"}],Bn=[{id:"color",title:"Color",expanded:!0,allFilterOptions:[{value:"azure",displayValue:"Azure",count:3},{value:"black",displayValue:"Black",count:2},{value:"blue",displayValue:"Blue",count:3},{value:"yellow",displayValue:"Yellow",count:2}],selectedFilterValues:[]},{id:"status",title:"Status",allFilterOptions:[{value:"warning",displayValue:"Warning",count:2},{value:"critical",displayValue:"Critical",count:2},{value:"up",displayValue:"Up",count:5}],selectedFilterValues:[]},{id:"vendor",title:"Vendors",allFilterOptions:[],selectedFilterValues:[]}];let Qn=(()=>{class e{constructor(){this.receiveFilteredDataSubject=new An.a,this.getFilteredDataSubject=new An.a}getData(e){return Object(c.b)(this,void 0,void 0,(function*(){return this.getFilteredDataSubject.next(e),new Promise(e=>{this.receiveFilteredDataSubject.subscribe(t=>{e(t)})})}))}receiveFilteredData(e){this.receiveFilteredDataSubject.next(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Un=(()=>{class e{constructor(e,t){this.dataSourceService=e,this.httpService=t,this.filterGroupItems=Bn,this.filteringState={repeat:{itemsSource:[]},color:[],status:[]},this.filterGroupSubscriptions=[],this.dataSourceService.setData(Ln),this.filterGroupSubscriptions.push(this.dataSourceService.outputsSubject.subscribe(e=>{this.filteringState=e,this.recalculateCounts(e)})),this.filterGroupSubscriptions.push(this.httpService.getFilteredDataSubject.pipe(Object(Wn.a)(500)).subscribe(e=>Object(c.b)(this,void 0,void 0,(function*(){this.filteringState=yield this.dataSourceService.getFilteredData(e),this.recalculateCounts(this.filteringState),this.sendFilteredData()}))))}sendFilteredData(){this.httpService.receiveFilteredData({filterGroupItems:this.filterGroupItems,filteringState:this.filteringState})}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{const i=e[t.id];jn()(i)||(n.count=i[n.value])})})}hasItems(){return!jn()(Rn()(this,"filteringState.repeat.itemsSource"))}ngOnDestroy(){this.filterGroupSubscriptions.forEach(e=>e.unsubscribe())}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(Qn))},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-fake-filtering-datasource-backend-component"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.RepeatComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filteringRepeat=n.first)},features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:0,vars:0,template:function(e,t){},encapsulation:2}),e})();var $n=n("Vonx"),zn=n("/bci");function qn(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"div",7),s.Wb(2,"i",8),s.Sc(3),s.Vb(),s.Wb(4,"span"),s.Sc(5),s.Vb(),s.Vb(),s.Tb()),2&e){const e=s.pc().$implicit,t=s.pc(2).$implicit;s.Eb(3),s.Uc("",e,": "),s.Eb(2),s.Tc(t.value[e])}}function Hn(e,t){if(1&e&&(s.Wb(0,"div"),s.Qc(1,qn,6,2,"ng-container",6),s.Vb()),2&e){const e=t.$implicit,n=s.pc(2).$implicit;s.Eb(1),s.wc("ngIf",void 0!==n.value[e])}}function Kn(e,t){if(1&e&&s.Qc(0,Hn,2,1,"div",5),2&e){const e=s.pc(2);s.wc("ngForOf",e.fieldsToDisplay)}}function Jn(e,t){if(1&e&&(s.Wb(0,"div",1),s.Wb(1,"nui-popover",2),s.Wb(2,"span",3),s.Sc(3),s.Vb(),s.Vb(),s.Qc(4,Kn,1,1,"ng-template",null,4,s.Rc),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(5);s.Eb(1),s.wc("template",n),s.Eb(2),s.Tc(e.key)}}let Xn=(()=>{class e{constructor(){this.schemaViewData={},this.fieldsToDisplay=["description","type","enum","alias","default"]}ngOnInit(){const e=n("WpAY")(`./${this.schematicFolderName}/schema.json`);this.fillViewData(e.properties)}fillViewData(e){Object.keys(e).forEach(t=>{const{description:n,type:i,enum:r,default:o,alias:a}=e[t];this.schemaViewData[t]={description:n,type:i,enum:r&&r.join(", "),default:o,alias:a}})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-schematic-json"]],inputs:{schematicFolderName:"schematicFolderName"},decls:7,vars:3,consts:[["class","d-inline-block p-2",4,"ngFor","ngForOf"],[1,"d-inline-block","p-2"],["placement","top",3,"template"],[1,"nui-text-default--hoverable"],["popoverWithBasicUsage",""],[4,"ngFor","ngForOf"],[4,"ngIf"],[1,"nui-text-default"],[2,"font-weight","bold"]],template:function(e,t){1&e&&(s.Wb(0,"div"),s.Wb(1,"code"),s.Sc(2,"Schema.json "),s.Wb(3,"b"),s.Sc(4,"options:"),s.Vb(),s.Vb(),s.Vb(),s.Qc(5,Jn,6,2,"div",0),s.qc(6,"keyvalue")),2&e&&(s.Eb(5),s.wc("ngForOf",s.rc(6,1,t.schemaViewData)))},directives:[r.s,zn.a,r.t],pipes:[r.l],encapsulation:2}),e})();const Yn=[[["","schematicSummary",""]],[["","schematicExamples",""]]],Zn=["[schematicSummary]","[schematicExamples]"];let ei=(()=>{class e{constructor(){this.angularJsonStylePreprocOptions='\n"stylePreprocessorOptions": {\n    "includePaths": [\n        "node_modules"\n    ]\n}'}ngOnInit(){this.schematicHeading=this.schematicFolderName.replace(/-/g," ")}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-schematic-docs-page"]],inputs:{schematicFolderName:"schematicFolderName"},ngContentSelectors:Zn,decls:27,vars:9,consts:[[1,"nui-schematic-docs-page"],[1,"mt-4"],[3,"schematicFolderName"],[1,"nui-schematic-docs-examples"]],template:function(e,t){1&e&&(s.vc(Yn),s.Wb(0,"div",0),s.Wb(1,"h1"),s.Sc(2),s.qc(3,"titlecase"),s.Vb(),s.uc(4),s.Wb(5,"h2",1),s.Sc(6,"API"),s.Vb(),s.Wb(7,"div"),s.Wb(8,"p"),s.Sc(9),s.qc(10,"titlecase"),s.Wb(11,"code"),s.Sc(12),s.Vb(),s.Vb(),s.Wb(13,"p"),s.Sc(14," The schematic generates styles with a reference to files that are stored in "),s.Wb(15,"code"),s.Sc(16,"node_modules/@nova-ui/bits/sdk/less"),s.Vb(),s.Sc(17,". You can provide this path in your project's "),s.Wb(18,"code"),s.Sc(19,"angular.json"),s.Vb(),s.Sc(20," to make these references work: "),s.Vb(),s.Wb(21,"p"),s.Wb(22,"nui-example-code"),s.Sc(23),s.Vb(),s.Vb(),s.Rb(24,"nui-schematic-json",2),s.Vb(),s.Wb(25,"div",3),s.uc(26,1),s.Vb(),s.Vb()),2&e&&(s.Eb(2),s.Uc("",s.rc(3,5,t.schematicHeading)," Schematic"),s.Eb(7),s.Uc(" Use the following command to generate a ",s.rc(10,7,t.schematicHeading),": "),s.Eb(3),s.Uc("ng g @nova-ui/bits:",t.schematicFolderName," --name=%name_of_component% --p=%prefix_for_component_selector%"),s.Eb(11),s.Uc(" ",t.angularJsonStylePreprocOptions," "),s.Eb(1),s.wc("schematicFolderName",t.schematicFolderName))},directives:[$n.a,Xn],pipes:[r.F],styles:[".nui-schematic-docs-examples{margin-top:10px}"],encapsulation:2}),e})();var ti=n("qIrP"),ni=n("OEJ4"),ii=n("3uBL");const ri=["*",[["","appendedText",""]]],oi=["*","[appendedText]"];let ai=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-schematic-docs-command"]],ngContentSelectors:oi,decls:5,vars:1,consts:[["type","info",3,"allowDismiss"]],template:function(e,t){1&e&&(s.vc(ri),s.Wb(0,"nui-message",0),s.Sc(1," This code has been generated using the following command: "),s.Wb(2,"code"),s.uc(3),s.Vb(),s.uc(4,1),s.Vb()),2&e&&s.wc("allowDismiss",!1)},directives:[ii.a],encapsulation:2}),e})();var li=n("H034"),si=n.n(li),ci=n("CCIQ"),ui=n("28cj"),pi=n("9aUh"),di=n.n(pi),mi=n("As4l"),fi=n.n(mi);const hi=function(e){return{item:e}};function gi(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"nui-expander",4),s.Wb(2,"nui-recursive-object-view",5),s.Sb(3,6),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(1),s.wc("header",e),s.Eb(1),s.wc("object",t.object[e])("objectTemplate",t.objectTemplate)("notObjectTemplate",t.notObjectTemplate),s.Eb(1),s.wc("ngTemplateOutlet",t.objectTemplate)("ngTemplateOutletContext",s.Bc(6,hi,t.object[e]))}}function bi(e,t){if(1&e&&s.Sb(0,6),2&e){const e=s.pc().$implicit,t=s.pc();s.wc("ngTemplateOutlet",t.notObjectTemplate)("ngTemplateOutletContext",s.Bc(2,hi,e))}}function vi(e,t){if(1&e&&(s.Wb(0,"div",1),s.Qc(1,gi,4,8,"div",2),s.Qc(2,bi,1,4,"ng-template",null,3,s.Rc),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(3),i=s.pc();s.Eb(1),s.wc("ngIf",i.checkInstance(e))("ngIfElse",n)}}let Si=(()=>{class e{ngOnInit(){this.orderOfKeys=fi()(Object.keys(this.object),e=>e.length)}checkInstance(e){return di()(this.object[e])}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-recursive-object-view"]],inputs:{object:"object",objectTemplate:"objectTemplate",notObjectTemplate:"notObjectTemplate"},decls:1,vars:1,consts:[["class","ml-5",4,"ngFor","ngForOf"],[1,"ml-5"],[4,"ngIf","ngIfElse"],["notObject",""],["icon","group",3,"header"],[3,"object","objectTemplate","notObjectTemplate"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(e,t){1&e&&s.Qc(0,vi,4,2,"div",0),2&e&&s.wc("ngForOf",t.orderOfKeys)},directives:[r.s,r.t,ui.a,e,r.A],encapsulation:2}),e})();var wi=n("hclw"),yi=n("T50m");function Ii(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"nui-expander",13),s.Wb(2,"nui-recursive-object-view",14),s.Sc(3),s.Vb(),s.Vb(),s.Vb()),2&e){const e=t.$implicit;s.pc();const n=s.Gc(21),i=s.Gc(23);s.Eb(1),s.wc("header",e.key),s.Eb(1),s.wc("object",e.value)("objectTemplate",n)("notObjectTemplate",i),s.Eb(1),s.Uc(" ",e.key," ")}}function Ci(e,t){if(1&e&&(s.Wb(0,"nui-example-code"),s.Sc(1),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.Tc(e.getSource(e.selectedFile))}}function Fi(e,t){if(1&e&&(s.Rb(0,"nui-icon",15),s.Sc(1)),2&e){const e=t.item;s.Eb(1),s.Uc(" ",e.key,"\n")}}function xi(e,t){if(1&e){const e=s.Xb();s.Wb(0,"button",16),s.lc("click",(function(){s.Jc(e);const n=t.item;return s.pc().selectFile(n)})),s.Sc(1),s.Vb()}if(2&e){const e=t.item;s.Eb(1),s.Uc(" ",e," ")}}const Oi=["*"];let Vi=(()=>{class e{constructor(e){this.context=e,this.fileExtensionsRegex=/.*\.(ts|html|less)$/,this.rawData={}}get selectedFile(){return this._selectedFile}set selectedFile(e){this._selectedFile=e,this.shouldCodeRender=!1,setTimeout(()=>{this.shouldCodeRender=!0},100)}ngOnInit(){this.componentSources=this.getSourcesByFilenamePrefix(this.exampleFolderName)}getSource(e){return this.rawData[e]}selectFile(e){this.selectedFile=e,this.selectedFileOpen=!0}isSelectedFileOpen(){return this.selectedFileOpen}onSelectedFileOpenChange(e){this.selectedFileOpen=e}getSourcesByFilenamePrefix(e){return this.context.keys().filter(t=>{const n=t.indexOf(e),i=-1!==n?t[n+e.length]:void 0;return-1!==n&&("."===i||"/"===i)}).reduce((t,n)=>{const i=this.getFileData(n),r=n.substr(n.indexOf(e)).split("/"),o=[];this.rawData[r[r.length-1]]=i;for(let e=r.length;e>0;e--){const e=r.shift();o.push(e)}return si()(t,o,i)},{})}getFileData(e){let t="";return this.fileExtensionsRegex.exec(e)&&(t=this.context(e).default,"less"===e.split(".").pop()&&(t=t.replace(/@import \(reference\) "([\w-]+\/){0,}([\w-]+)(\.less)?"/g,'@import (reference) "@nova-ui/bits/sdk/less/$1$2"'))),t}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(ci.a,12))},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-schematic-docs-example"]],inputs:{exampleFolderName:"exampleFolderName"},ngContentSelectors:Oi,decls:24,vars:7,consts:[[1,"d-flex"],[1,"p-0","col-4","schematic-docs-example__files"],[1,"mt-4"],[4,"ngFor","ngForOf"],[1,"col-8"],[3,"disabled","open","openChange"],["nuiExpanderHeader",""],[1,"m-0"],[1,"schematic-docs-example__selected-file"],[1,"nui-source-inspector-code"],[4,"ngIf"],["objectTemplate",""],["notObjectTemplate",""],["icon","group",3,"header"],[3,"object","objectTemplate","notObjectTemplate"],["icon","xml-file"],["nui-button","","type","button","displayStyle","action","icon","xml-file",1,"mw-100",3,"click"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.Wb(1,"div",1),s.Wb(2,"h2",2),s.Sc(3,"Source files"),s.Vb(),s.Qc(4,Ii,4,5,"div",3),s.qc(5,"keyvalue"),s.Vb(),s.Wb(6,"div",4),s.Wb(7,"h2",2),s.Sc(8,"Source code"),s.Vb(),s.Wb(9,"nui-expander",5),s.lc("openChange",(function(e){return t.onSelectedFileOpenChange(e)})),s.Wb(10,"div",6),s.Wb(11,"h5",7),s.Sc(12," Selected file: "),s.Wb(13,"span",8),s.Sc(14),s.Vb(),s.Vb(),s.Vb(),s.Wb(15,"div",9),s.Qc(16,Ci,2,1,"nui-example-code",10),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Wb(17,"h2",2),s.Sc(18,"Example"),s.Vb(),s.uc(19),s.Qc(20,Fi,2,1,"ng-template",null,11,s.Rc),s.Qc(22,xi,2,1,"ng-template",null,12,s.Rc)),2&e&&(s.Eb(4),s.wc("ngForOf",s.rc(5,5,t.componentSources)),s.Eb(5),s.wc("disabled",!t.selectedFile)("open",t.isSelectedFileOpen()),s.Eb(5),s.Tc(t.selectedFile?t.selectedFile:"None"),s.Eb(2),s.wc("ngIf",t.shouldCodeRender))},directives:[r.s,ui.a,r.t,Si,$n.a,wi.a,yi.a],pipes:[r.l],styles:[".schematic-docs-example__files{overflow-x:auto}.schematic-docs-example__selected-file{font-weight:700}.nui-source-inspector-code{max-height:600px;overflow-y:auto}.nui-source-inspector-code .nui-example-code{min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content}"],encapsulation:2}),e})();var Di=n("RdBG"),ki=n("oZ+L"),Gi=n.n(ki),Ti=n("ZXzp"),Ei=n("lFDV");function _i(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Pi(e,t){1&e&&s.Sb(0)}function Mi(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function Ri(e,t){1&e&&s.Sb(0)}const Ni=function(e){return{checkbox:e}};function ji(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Mi,5,2,"ng-template",null,11,s.Rc),s.Qc(3,Ri,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,Ni,e))}}function Ai(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const Wi=function(e){return{expander:e}};function Li(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,_i,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Pi,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,ji,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,Ai,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,Wi,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Bi=(()=>{class e{constructor(e){this.dialogService=e,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}getAllFilterOptionsList(e){return e.map(e=>e.value)}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-basic-filter-group"]],inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","nui-filter-group-composite",4,"ngIf"],[1,"nui-filter-group-composite"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","nui-filter-group-composite__show-more-link",3,"click",4,"ngIf"],[1,"nui-filter-group-composite__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","nui-filter-group-composite__checkbox"],[1,"d-inline-block","nui-filter-group-composite__checkbox-value"],[1,"d-inline-block","nui-filter-group-composite__checkbox-count"],[1,"nui-filter-group-composite__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,Li,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".nui-filter-group-composite__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.nui-filter-group-composite__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.nui-filter-group-composite__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nui-filter-group-composite__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();function Qi(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var Ui;function $i(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Ui),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Ui=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const zi=["*"];let qi=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-basic-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Bi,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:zi,decls:5,vars:1,consts:[[1,"nui-filter-groups-wrapper"],["class","nui-filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"nui-filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"nui-filter-groups-wrapper__popover-hint"],["size","small"],[1,"nui-filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,Qi,4,5,"div",1),s.Vb(),s.Qc(3,$i,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t],pipes:[r.i],styles:[".nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background-color:var(--nui-color-bg-accordion_header,rgba(17,17,17,.06));height:30px;padding-left:10px;margin-top:10px}.nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .nui-filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:var(--nui-color-text-secondary,rgba(17,17,17,.6))}"]}),e})();var Hi=n("mW9G"),Ki=n("h2B+");function Ji(e,t){1&e&&(s.Wb(0,"div",5),s.Rb(1,"nui-image",6),s.Wb(2,"p",7),s.Sc(3,"No data to show"),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("isWatermark",!0))}function Xi(e,t){if(1&e&&(s.Wb(0,"div"),s.Sc(1),s.Vb(),s.Wb(2,"div"),s.Sc(3),s.Vb()),2&e){const e=t.item;s.Eb(1),s.Tc(e.color),s.Eb(2),s.Tc(e.status)}}function Yi(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-basic-filter-group",8),s.lc("filterChanged",(function(t){return s.Jc(e),s.pc().changeFilters(t)})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Zi(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-repeat",9),s.Vb()),2&e){const e=s.pc(),t=s.Gc(3);s.Eb(1),s.wc("itemsSource",e.filteringState.repeat.itemsSource)("repeatItemTemplateRef",t)}}const er=[{color:"regular-azure",status:"Critical"},{color:"regular-black",status:"Warning"},{color:"regular-blue",status:"Up"},{color:"regular-yellow",status:"Critical"},{color:"regular-yellow",status:"Warning"},{color:"regular-black",status:"Up"},{color:"regular-blue",status:"Up"},{color:"regular-azure",status:"Up"},{color:"regular-blue",status:"Up"},{color:"regular-azure",status:"Critical"}];let tr=(()=>{class e{constructor(e){this.dataSourceService=e,this.filterGroupItems=[{id:"color",title:"Color",expanded:!0,allFilterOptions:[{value:"azure",displayValue:"Azure FilterGroup Basic Example",count:3},{value:"black",displayValue:"Black",count:2},{value:"blue",displayValue:"Blue FilterGroup Basic Example",count:3},{value:"yellow",displayValue:"Yellow",count:2}],selectedFilterValues:[]},{id:"status",title:"Status",allFilterOptions:[{value:"warning",displayValue:"Warning",count:2},{value:"critical",displayValue:"Critical",count:2},{value:"up",displayValue:"Up",count:5}],selectedFilterValues:[]},{id:"vendor",title:"Vendors",allFilterOptions:[],selectedFilterValues:[]}],this.filteringState={repeat:{itemsSource:[]},color:[],status:[]},this.dataSourceService.setData(er)}ngAfterViewInit(){this.outputsSubscription=this.dataSourceService.outputsSubject.subscribe(e=>{this.filteringState=e,this.recalculateCounts(e)}),this.dataSourceService.applyFilters()}changeFilters(e){this.dataSourceService.applyFilters()}hasItems(){return!jn()(Rn()(this,"filteringState.repeat.itemsSource"))}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{n.count=e[t.id][n.value]})})}ngOnDestroy(){this.outputsSubscription&&this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-basic-filter-group-composite-example"]],features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:10,vars:3,consts:[["emptyListTemplate",""],["listRepeatItemTemplate",""],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[4,"ngIf","ngIfElse"],[1,"d-flex","flex-column","align-items-center"],["image","no-data-to-show",3,"isWatermark"],[1,"nui-text-small"],[3,"filterGroupItem","filterChanged"],["id","nui-composites-demo-repeat","paddingSize","normal",3,"itemsSource","repeatItemTemplateRef"]],template:function(e,t){if(1&e&&(s.Qc(0,Ji,4,1,"ng-template",null,0,s.Rc),s.Qc(2,Xi,4,2,"ng-template",null,1,s.Rc),s.Wb(4,"nui-panel"),s.Wb(5,"div",2),s.Wb(6,"app-basic-filter-groups-wrapper"),s.Qc(7,Yi,1,1,"app-basic-filter-group",3),s.Vb(),s.Vb(),s.Wb(8,"div"),s.Qc(9,Zi,2,2,"div",4),s.Vb(),s.Vb()),2&e){const e=s.Gc(1);s.Eb(7),s.wc("ngForOf",t.filterGroupItems),s.Eb(2),s.wc("ngIf",t.hasItems())("ngIfElse",e)}},directives:[Di.a,qi,r.s,r.t,Hi.a,Bi,Ki.a],encapsulation:2}),e})();function nr(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function ir(e,t){1&e&&s.Sb(0)}function rr(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function or(e,t){1&e&&s.Sb(0)}const ar=function(e){return{checkbox:e}};function lr(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,rr,5,2,"ng-template",null,11,s.Rc),s.Qc(3,or,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,ar,e))}}function sr(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const cr=function(e){return{expander:e}};function ur(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,nr,2,1,"ng-template",null,4,s.Rc),s.Qc(5,ir,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,lr,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,sr,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,cr,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let pr=(()=>{class e{constructor(e){this.dialogService=e,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}getAllFilterOptionsList(e){return e.map(e=>e.value)}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-custom-template-filter-group"]],inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","nui-filter-group-composite",4,"ngIf"],[1,"nui-filter-group-composite"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","nui-filter-group-composite__show-more-link",3,"click",4,"ngIf"],[1,"nui-filter-group-composite__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","nui-filter-group-composite__checkbox"],[1,"d-inline-block","nui-filter-group-composite__checkbox-value"],[1,"d-inline-block","nui-filter-group-composite__checkbox-count"],[1,"nui-filter-group-composite__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,ur,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".nui-filter-group-composite__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.nui-filter-group-composite__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.nui-filter-group-composite__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nui-filter-group-composite__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();function dr(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var mr;function fr(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,mr),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}mr=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const hr=["*"];let gr=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-custom-template-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,pr,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:hr,decls:5,vars:1,consts:[[1,"nui-filter-groups-wrapper"],["class","nui-filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"nui-filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"nui-filter-groups-wrapper__popover-hint"],["size","small"],[1,"nui-filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,dr,4,5,"div",1),s.Vb(),s.Qc(3,fr,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a],pipes:[r.i],styles:[".nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .nui-filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();function br(e,t){if(1&e&&(s.Wb(0,"div",7),s.Rb(1,"nui-icon",8),s.Wb(2,"span",9),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=t.checkbox;s.Eb(1),s.wc("icon",e.icon),s.Eb(2),s.Tc(e.displayValue)}}function vr(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc().expander;s.Eb(1),s.Tc(e.count)}}function Sr(e,t){if(1&e&&(s.Wb(0,"div",7),s.Wb(1,"span",9),s.Wb(2,"b"),s.Sc(3),s.Vb(),s.Vb(),s.Qc(4,vr,2,1,"span",10),s.Vb()),2&e){const e=t.expander;s.Eb(3),s.Tc(e.title),s.Eb(1),s.wc("ngIf",!e.expanded)}}function wr(e,t){1&e&&(s.Wb(0,"div",11),s.Rb(1,"nui-image",12),s.Wb(2,"p",13),s.Sc(3,"No data to show"),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("isWatermark",!0))}function yr(e,t){if(1&e&&(s.Wb(0,"div"),s.Sc(1),s.Vb(),s.Wb(2,"div"),s.Sc(3),s.Vb()),2&e){const e=t.item;s.Eb(1),s.Tc(e.color),s.Eb(2),s.Tc(e.status)}}function Ir(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-custom-template-filter-group",14),s.lc("filterChanged",(function(t){return s.Jc(e),s.pc().changeFilters(t)})),s.Vb()}if(2&e){const e=t.$implicit;s.pc();const n=s.Gc(1),i=s.Gc(3);s.wc("filterGroupItem",e)("checkboxTemplateRef",n)("expanderTemplateRef",i)}}function Cr(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-repeat",15),s.Vb()),2&e){const e=s.pc(),t=s.Gc(7);s.Eb(1),s.wc("itemsSource",e.filteringState.repeat.itemsSource)("repeatItemTemplateRef",t)}}const Fr=[{color:"regular-azure",status:"Critical"},{color:"regular-black",status:"Warning"},{color:"regular-blue",status:"Up"},{color:"regular-yellow",status:"Critical"},{color:"regular-yellow",status:"Warning"},{color:"regular-black",status:"Up"},{color:"regular-blue",status:"Up"},{color:"regular-azure",status:"Up"},{color:"regular-blue",status:"Up"},{color:"regular-azure",status:"Critical"}];let xr=(()=>{class e{constructor(e){this.dataSourceService=e,this.filterGroupItems=[{id:"color",title:"Color",count:4,allFilterOptions:[{icon:"copy",value:"azure",displayValue:"Azure"},{icon:"clock",value:"black",displayValue:"Black"},{icon:"status_up",value:"blue",displayValue:"Blue"},{icon:"signal-0",value:"yellow",displayValue:"Yellow"}],selectedFilterValues:["azure"]},{id:"status",title:"Status",count:3,allFilterOptions:[{icon:"status_warning",value:"warning",displayValue:"Warning"},{icon:"status_critical",value:"critical",displayValue:"Critical"},{icon:"status_up",value:"up",displayValue:"Up"}],selectedFilterValues:["critical"]}],this.filteringState={repeat:{itemsSource:[]},color:[],status:[]},this.dataSourceService.setData(Fr)}ngAfterViewInit(){this.outputsSubscription=this.dataSourceService.outputsSubject.subscribe(e=>{this.filteringState=e,this.recalculateCounts(e)}),this.dataSourceService.applyFilters()}changeFilters(e){this.dataSourceService.applyFilters()}hasItems(){return!jn()(Rn()(this,"filteringState.repeat.itemsSource"))}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{n.count=e[t.id][n.value]})})}ngOnDestroy(){this.outputsSubscription&&this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-custom-template-filter-group-composite-example"]],features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:14,vars:3,consts:[["customCheckboxTemplate",""],["customExpanderTemplate",""],["emptyListTemplate",""],["listRepeatItemTemplate",""],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","checkboxTemplateRef","expanderTemplateRef","filterChanged",4,"ngFor","ngForOf"],[4,"ngIf","ngIfElse"],[1,"d-flex","align-items-center"],[1,"mr-2",3,"icon"],[1,"mr-2"],["class","mr-2",4,"ngIf"],[1,"d-flex","flex-column","align-items-center"],["image","no-data-to-show",3,"isWatermark"],[1,"nui-text-small"],[3,"filterGroupItem","checkboxTemplateRef","expanderTemplateRef","filterChanged"],["id","nui-composites-demo-repeat","paddingSize","normal",3,"itemsSource","repeatItemTemplateRef"]],template:function(e,t){if(1&e&&(s.Qc(0,br,4,2,"ng-template",null,0,s.Rc),s.Qc(2,Sr,5,2,"ng-template",null,1,s.Rc),s.Qc(4,wr,4,1,"ng-template",null,2,s.Rc),s.Qc(6,yr,4,2,"ng-template",null,3,s.Rc),s.Wb(8,"nui-panel"),s.Wb(9,"div",4),s.Wb(10,"app-custom-template-filter-groups-wrapper"),s.Qc(11,Ir,1,3,"app-custom-template-filter-group",5),s.Vb(),s.Vb(),s.Wb(12,"div"),s.Qc(13,Cr,2,2,"div",6),s.Vb(),s.Vb()),2&e){const e=s.Gc(5);s.Eb(11),s.wc("ngForOf",t.filterGroupItems),s.Eb(2),s.wc("ngIf",t.hasItems())("ngIfElse",e)}},directives:[Di.a,gr,r.s,r.t,wi.a,Hi.a,pr,Ki.a],encapsulation:2}),e})();function Or(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Vr(e,t){1&e&&s.Sb(0)}function Dr(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function kr(e,t){1&e&&s.Sb(0)}const Gr=function(e){return{checkbox:e}};function Tr(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Dr,5,2,"ng-template",null,11,s.Rc),s.Qc(3,kr,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,Gr,e))}}function Er(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const _r=function(e){return{expander:e}};function Pr(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,Or,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Vr,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,Tr,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,Er,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,_r,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Mr=(()=>{class e{constructor(e){this.dialogService=e,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}getAllFilterOptionsList(e){return e.map(e=>e.value)}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-custom-data-source-filter-group"]],inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","nui-filter-group-composite",4,"ngIf"],[1,"nui-filter-group-composite"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","nui-filter-group-composite__show-more-link",3,"click",4,"ngIf"],[1,"nui-filter-group-composite__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","nui-filter-group-composite__checkbox"],[1,"d-inline-block","nui-filter-group-composite__checkbox-value"],[1,"d-inline-block","nui-filter-group-composite__checkbox-count"],[1,"nui-filter-group-composite__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,Pr,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".nui-filter-group-composite__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.nui-filter-group-composite__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.nui-filter-group-composite__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nui-filter-group-composite__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})(),Rr=(()=>{class e extends l.DataSourceService{constructor(e){super(),this.httpService=e}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return yield this.httpService.getData(e)}))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(Qn))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();function Nr(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var jr;function Ar(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,jr),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}jr=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const Wr=["*"];let Lr=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-custom-data-source-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Mr,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:Wr,decls:5,vars:1,consts:[[1,"nui-filter-groups-wrapper"],["class","nui-filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"nui-filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"nui-filter-groups-wrapper__popover-hint"],["size","small"],[1,"nui-filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,Nr,4,5,"div",1),s.Vb(),s.Qc(3,Ar,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a],pipes:[r.i],styles:[".nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .nui-filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();function Br(e,t){1&e&&(s.Wb(0,"div",5),s.Rb(1,"nui-image",6),s.Wb(2,"p",7),s.Sc(3,"No data to show"),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("isWatermark",!0))}function Qr(e,t){if(1&e&&(s.Wb(0,"div"),s.Sc(1),s.Vb(),s.Wb(2,"div"),s.Sc(3),s.Vb()),2&e){const e=t.item;s.Eb(1),s.Tc(e.color),s.Eb(2),s.Tc(e.status)}}function Ur(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-custom-data-source-filter-group",8),s.lc("filterChanged",(function(t){return s.Jc(e),s.pc().changeFilters(t)})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function $r(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-repeat",9),s.Vb()),2&e){const e=s.pc(),t=s.Gc(3);s.Eb(1),s.wc("itemsSource",e.filteringState.repeat.itemsSource)("repeatItemTemplateRef",t)}}let zr=(()=>{class e{constructor(e){this.filterGroupCustomDataSourceService=e,this.filterGroupItems=[],this.filteringState={repeat:{itemsSource:[]},color:[],status:[]},this.filterGroupSubscriptions=[]}ngAfterViewInit(){this.filterGroupSubscriptions.push(this.filterGroupCustomDataSourceService.outputsSubject.subscribe(e=>{this.filterGroupItems=e.filterGroupItems,this.filteringState=e.filteringState})),this.filterGroupSubscriptions.push(this.filterGroups.changes.subscribe(()=>{this.filterGroupCustomDataSourceService.registerComponent(this.getFilterComponents())})),this.filterGroupCustomDataSourceService.applyFilters()}changeFilters(e){this.filterGroupCustomDataSourceService.applyFilters()}hasItems(){return!jn()(Rn()(this,"filteringState.repeat.itemsSource"))}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}ngOnDestroy(){this.filterGroupSubscriptions.forEach(e=>e.unsubscribe())}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-custom-data-source-filter-group-composite-example"]],viewQuery:function(e,t){var n;1&e&&s.Xc(Mr,!0),2&e&&s.Fc(n=s.mc())&&(t.filterGroups=n)},features:[s.Db([{provide:l.DataSourceService,useClass:Rr}])],decls:10,vars:3,consts:[["emptyListTemplate",""],["listRepeatItemTemplate",""],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[4,"ngIf","ngIfElse"],[1,"d-flex","flex-column","align-items-center"],["image","no-data-to-show",3,"isWatermark"],[1,"nui-text-small"],[3,"filterGroupItem","filterChanged"],["id","nui-composites-demo-repeat","paddingSize","normal",3,"itemsSource","repeatItemTemplateRef"]],template:function(e,t){if(1&e&&(s.Qc(0,Br,4,1,"ng-template",null,0,s.Rc),s.Qc(2,Qr,4,2,"ng-template",null,1,s.Rc),s.Wb(4,"nui-panel"),s.Wb(5,"div",2),s.Wb(6,"app-custom-data-source-filter-groups-wrapper"),s.Qc(7,Ur,1,1,"app-custom-data-source-filter-group",3),s.Vb(),s.Vb(),s.Wb(8,"div"),s.Qc(9,$r,2,2,"div",4),s.Vb(),s.Vb()),2&e){const e=s.Gc(1);s.Eb(7),s.wc("ngForOf",t.filterGroupItems),s.Eb(2),s.wc("ngIf",t.hasItems())("ngIfElse",e)}},directives:[Di.a,Lr,r.s,r.t,Hi.a,Mr,Ki.a],encapsulation:2}),e})();var qr=n("QHLR");function Hr(e,t){if(1&e&&(s.Wb(0,"div"),s.Sc(1),s.Vb()),2&e){const e=t.item;s.Eb(1),s.Tc(e.displayValue)}}let Kr=(()=>{class e{constructor(e){this.dataSource=e,this.selectedValues=[],this.selectionChanged=new s.p,this.selectionMode=l.RepeatSelectionMode.multi,this.selectedOptions=[]}ngOnInit(){this.dataSource.setData(this.itemPickerOptions),this.selectedOptions=this.getSelectedOptions()}onSelection(e){this.selectedOptions=e,this.selectionChanged.emit(e)}getSelectedOptions(){return this.itemPickerOptions.filter(e=>-1!==this.selectedValues.indexOf(e.value))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-item-picker-composite"]],inputs:{itemPickerOptions:"itemPickerOptions",selectedValues:"selectedValues"},outputs:{selectionChanged:"selectionChanged"},features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:6,vars:4,consts:[[1,"app-item-picker-composite"],["listRepeatDefaultItemTemplate",""],[1,"d-flex","flex-row"],[1,"app-list-repeat",3,"selectionMode","repeatItemTemplateRef","selection","itemsSource","selectionChange"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Qc(1,Hr,2,1,"ng-template",null,1,s.Rc),s.Wb(3,"div"),s.Wb(4,"div",2),s.Wb(5,"nui-repeat",3),s.lc("selectionChange",(function(e){return t.onSelection(e)})),s.Vb(),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.Gc(2);s.Eb(5),s.wc("selectionMode",t.selectionMode)("repeatItemTemplateRef",e)("selection",t.selectedOptions)("itemsSource",t.itemPickerOptions)}},directives:[Ki.a],styles:["[_nghost-%COMP%]   .app-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}"],changeDetection:0}),e})();var Jr,Xr,Yr=n("7Wi9");Jr=$localize`:␟bf844a41a29961b6dacc48a20eaf97bef0cf5013␟7452095619502551190: Cancel `,Xr=$localize`:␟bb1b2fab23cc121dc5106c9c6625199075531616␟3962319811711940221: Save `;let Zr=(()=>{class e{constructor(e,t){this.activeDialog=e,this.selectorService=t,this.itemPickerOptions=[],this.selectedValues=[],this.dialogClosed=new s.p}acceptDialogFilters(){this.dialogClosed.emit(this.selectedValues),this.closeDialog()}closeDialog(){this.activeDialog.close()}onSelectionChanged(e){this.selectedValues=e.map(e=>e.value)}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.NuiActiveDialog),s.Qb(l.SelectorService))},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-filter-group-composite-dialog"]],inputs:{title:"title",itemPickerOptions:"itemPickerOptions",selectedValues:"selectedValues"},outputs:{dialogClosed:"dialogClosed"},decls:9,vars:3,consts:[[1,"nui-filter-group-composite-dialog"],[3,"title","closed"],[1,"nui-filter-group-composite-dialog__body"],[3,"itemPickerOptions","selectedValues","selectionChanged"],["nui-button","","type","button",3,"click"],["nui-button","","type","button","displayStyle","primary",3,"click"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-dialog-header",1),s.lc("closed",(function(){return t.closeDialog()})),s.Vb(),s.Wb(2,"div",2),s.Wb(3,"app-item-picker-composite",3),s.lc("selectionChanged",(function(e){return t.onSelectionChanged(e)})),s.Vb(),s.Vb(),s.Wb(4,"nui-dialog-footer"),s.Wb(5,"button",4),s.lc("click",(function(){return t.closeDialog()})),s.ac(6,Jr),s.Vb(),s.Wb(7,"button",5),s.lc("click",(function(){return t.acceptDialogFilters()})),s.ac(8,Xr),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("title",t.title),s.Eb(2),s.wc("itemPickerOptions",t.itemPickerOptions)("selectedValues",t.selectedValues))},directives:[qr.a,Kr,Yr.a,yi.a],styles:[".nui-filter-group-composite-dialog__body[_ngcontent-%COMP%]{margin:10px 0}"]}),e})();function eo(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function to(e,t){1&e&&s.Sb(0)}function no(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function io(e,t){1&e&&s.Sb(0)}const ro=function(e){return{checkbox:e}};function oo(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,no,5,2,"ng-template",null,11,s.Rc),s.Qc(3,io,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,ro,e))}}function ao(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const lo=function(e){return{expander:e}};function so(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,eo,2,1,"ng-template",null,4,s.Rc),s.Qc(5,to,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,oo,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,ao,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,lo,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let co=(()=>{class e{constructor(e){this.dialogService=e,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}getAllFilterOptionsList(e){return e.map(e=>e.value)}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-dialog-filter-group"]],inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","nui-filter-group-composite",4,"ngIf"],[1,"nui-filter-group-composite"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","nui-filter-group-composite__show-more-link",3,"click",4,"ngIf"],[1,"nui-filter-group-composite__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","nui-filter-group-composite__checkbox"],[1,"d-inline-block","nui-filter-group-composite__checkbox-value"],[1,"d-inline-block","nui-filter-group-composite__checkbox-count"],[1,"nui-filter-group-composite__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,so,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".nui-filter-group-composite__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.nui-filter-group-composite__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.nui-filter-group-composite__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nui-filter-group-composite__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();function uo(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var po;function mo(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,po),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}po=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const fo=["*"];let ho=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-dialog-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,co,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:fo,decls:5,vars:1,consts:[[1,"nui-filter-groups-wrapper"],["class","nui-filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"nui-filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"nui-filter-groups-wrapper__popover-hint"],["size","small"],[1,"nui-filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,uo,4,5,"div",1),s.Vb(),s.Qc(3,mo,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a],pipes:[r.i],styles:[".nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.nui-filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .nui-filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();function go(e,t){1&e&&(s.Wb(0,"div",5),s.Rb(1,"nui-image",6),s.Wb(2,"p",7),s.Sc(3,"No data to show"),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("isWatermark",!0))}function bo(e,t){if(1&e&&(s.Wb(0,"div"),s.Sc(1),s.Vb(),s.Wb(2,"div"),s.Sc(3),s.Vb()),2&e){const e=t.item;s.Eb(1),s.Tc(e.color),s.Eb(2),s.Tc(e.status)}}function vo(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-dialog-filter-group",8),s.lc("filterChanged",(function(t){return s.Jc(e),s.pc().changeFilters(t)}))("showAllButtonClicked",(function(){s.Jc(e);const n=t.$implicit;return s.pc().handleFilterDialog(n)})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function So(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-repeat",9),s.Vb()),2&e){const e=s.pc(),t=s.Gc(3);s.Eb(1),s.wc("itemsSource",e.filteringState.repeat.itemsSource)("repeatItemTemplateRef",t)}}const wo=[{color:"yellow",name:"banana"},{color:"orange",name:"orange"},{color:"violet",name:"plum"},{color:"blue",name:"blueberry"},{color:"brown",name:"potato"},{color:"red",name:"apple"},{color:"green",name:"pear"},{color:"black",name:"blackcurrant"},{color:"white",name:"coconut"},{color:"magenta",name:"mulberry"},{color:"apricot",name:"peach"},{color:"olive",name:"olive"},{color:"carmine",name:"grapefruit"},{color:"coral",name:"pomegranate"},{color:"corn",name:"corn"}];let yo=(()=>{class e{constructor(e,t,n){this.dataSourceService=e,this.dialogService=t,this.filterGroupService=n,this.filterGroupItems=[{id:"color",title:"Color",expanded:!0,allFilterOptions:[{value:"yellow",displayValue:"Yellow",count:1},{value:"orange",displayValue:"Orange",count:1},{value:"violet",displayValue:"Violet",count:1},{value:"blue",displayValue:"Blue",count:1},{value:"brown",displayValue:"Brown",count:1},{value:"red",displayValue:"Red",count:1},{value:"green",displayValue:"Green",count:1},{value:"black",displayValue:"Black",count:1},{value:"white",displayValue:"White",count:1},{value:"magenta",displayValue:"Magenta",count:1},{value:"apricot",displayValue:"Apricot",count:1},{value:"olive",displayValue:"Olive",count:1},{value:"carmine",displayValue:"Carmine",count:1},{value:"coral",displayValue:"Coral",count:1},{value:"corn",displayValue:"Corn",count:1}],selectedFilterValues:[],itemsToDisplay:10},{id:"name",title:"Fruits and Vegetables",expanded:!1,allFilterOptions:[{value:"banana",displayValue:"Banana",count:1},{value:"orange",displayValue:"Orange",count:1},{value:"plum",displayValue:"Plum",count:1},{value:"blueberry",displayValue:"Blueberry",count:1},{value:"potato",displayValue:"Potato",count:1},{value:"apple",displayValue:"Apple",count:1},{value:"pear",displayValue:"Pear",count:1},{value:"blackcurrant",displayValue:"Blackcurrant",count:1},{value:"coconut",displayValue:"Coconut",count:1},{value:"mulberry",displayValue:"Mulberry",count:1},{value:"peach",displayValue:"Peach",count:1},{value:"olive",displayValue:"Olive",count:1},{value:"grapefruit",displayValue:"Grapefruit",count:1},{value:"pomegranate",displayValue:"Pomegranate",count:1},{value:"corn",displayValue:"Corn",count:1}],selectedFilterValues:[],itemsToDisplay:10}],this.filteringState={repeat:{itemsSource:[]},color:[],name:[]},this.dataSourceService.setData(wo)}ngAfterViewInit(){this.outputsSubscription=this.dataSourceService.outputsSubject.subscribe(e=>{this.filteringState=e,this.recalculateCounts(e)}),this.dataSourceService.applyFilters()}changeFilters(e){this.dataSourceService.applyFilters()}hasItems(){return!jn()(Rn()(this,"filteringState.repeat.itemsSource"))}handleFilterDialog(e){const t=this.dialogService.open(Zr);t.componentInstance.title="Filter dialog",t.componentInstance.itemPickerOptions=e.allFilterOptions,t.componentInstance.selectedValues=e.selectedFilterValues,this.dialogSubscription=t.componentInstance.dialogClosed.subscribe(t=>{e.selectedFilterValues=t,e=this.filterGroupService.appendHiddenFilters(e),this.dataSourceService.applyFilters()})}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{n.count=e[t.id][n.value]})})}ngOnDestroy(){this.outputsSubscription&&this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(l.DialogService),s.Qb(En))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-dialog-filter-group-composite-example"]],features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:10,vars:3,consts:[["emptyListTemplate",""],["listRepeatItemTemplate",""],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged","showAllButtonClicked",4,"ngFor","ngForOf"],[4,"ngIf","ngIfElse"],[1,"d-flex","flex-column","align-items-center"],["image","no-data-to-show",3,"isWatermark"],[1,"nui-text-small"],[3,"filterGroupItem","filterChanged","showAllButtonClicked"],["id","nui-composites-demo-repeat","paddingSize","normal",3,"itemsSource","repeatItemTemplateRef"]],template:function(e,t){if(1&e&&(s.Qc(0,go,4,1,"ng-template",null,0,s.Rc),s.Qc(2,bo,4,2,"ng-template",null,1,s.Rc),s.Wb(4,"nui-panel"),s.Wb(5,"div",2),s.Wb(6,"app-dialog-filter-groups-wrapper"),s.Qc(7,vo,1,1,"app-dialog-filter-group",3),s.Vb(),s.Vb(),s.Wb(8,"div"),s.Qc(9,So,2,2,"div",4),s.Vb(),s.Vb()),2&e){const e=s.Gc(1);s.Eb(7),s.wc("ngForOf",t.filterGroupItems),s.Eb(2),s.wc("ngIf",t.hasItems())("ngIfElse",e)}},directives:[Di.a,ho,r.s,r.t,Hi.a,co,Ki.a],encapsulation:2}),e})(),Io=(()=>{class e{constructor(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-filter-group-composite-basic"]],decls:210,vars:0,consts:[["schematicFolderName","filter-group"],["schematicExamples",""],["heading","Basic usage"],["target","_blank","href","../injectables/ClientSideDataSource.html"],["target","_blank","href","../interfaces/IFilterGroupItem.html"],["target","_blank","href","../../../../../../nova-bits/develop/sdk/api-docs-ng2/injectables/ClientSideDataSource.html"],["target","_blank","href","../interfaces/IFilterGroupOption.html"],["exampleFolderName","basic-filter-group"],["heading","Custom template"],["appendedText",""],["exampleFolderName","custom-template-filter-group"],["heading","Custom data source"],["exampleFolderName","custom-data-source-filter-group"],["heading","Collapse / Dialog"],["target","_blank","href","../additional-documentation/schematics/list.html"],["exampleFolderName","dialog-filter-group"]],template:function(e,t){1&e&&(s.Wb(0,"nui-schematic-docs-page",0),s.Wb(1,"nui-tab-group",1),s.Wb(2,"nui-tab",2),s.Wb(3,"h2"),s.Sc(4,"Basic Usage"),s.Vb(),s.Wb(5,"p"),s.Sc(6,"Filter group depends heavily on the "),s.Wb(7,"a",3),s.Wb(8,"code"),s.Sc(9,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(10," service, so first and foremost please check out the documentation for "),s.Wb(11,"a",3),s.Wb(12,"code"),s.Sc(13,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(14,". "),s.Vb(),s.Wb(15,"p"),s.Sc(16," This example contains all the files generated by the CLI command. The schematic will output a feature module, a filter group composite and helper components: "),s.Wb(17,"code"),s.Sc(18,"filter-groups-wrapper"),s.Vb(),s.Sc(19,", "),s.Wb(20,"code"),s.Sc(21,"filter-group-dialog"),s.Vb(),s.Sc(22," and "),s.Wb(23,"code"),s.Sc(24,"item-picker"),s.Vb(),s.Sc(25,". Except for the wrapper, usage of these components may not be required by your implementation. "),s.Vb(),s.Wb(26,"p"),s.Sc(27,"Once you have scaffolded your filter group, follow these steps to add it to your application:"),s.Vb(),s.Wb(28,"ol"),s.Wb(29,"li"),s.Sc(30," In your template, place your composite(s) inside the wrapper component. The wrapper will register your composites with "),s.Wb(31,"a",3),s.Wb(32,"code"),s.Sc(33,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(34," as well as hide and display a popover over filter groups with no existing values. "),s.Vb(),s.Wb(35,"li"),s.Sc(36," Pass an "),s.Wb(37,"a",4),s.Wb(38,"code"),s.Sc(39,"IFilterGroupItem"),s.Vb(),s.Vb(),s.Sc(40," object to each "),s.Wb(41,"code"),s.Sc(42,"[filterGroupItem]"),s.Vb(),s.Sc(43," input. "),s.Vb(),s.Wb(44,"li"),s.Sc(45," To receive new filtering state ("),s.Wb(46,"code"),s.Sc(47,"IFilteringOutputs"),s.Vb(),s.Sc(48,"), bind to the "),s.Wb(49,"code"),s.Sc(50,"(filterChanged)"),s.Vb(),s.Sc(51," output and invoke the "),s.Wb(52,"code"),s.Sc(53,"applyFilters"),s.Vb(),s.Sc(54," method of "),s.Wb(55,"a",5),s.Wb(56,"code"),s.Sc(57,"ClientSideDataSource"),s.Vb(),s.Sc(58,". "),s.Vb(),s.Vb(),s.Vb(),s.Wb(59,"p"),s.Wb(60,"b"),s.Sc(61,"Note:"),s.Vb(),s.Sc(62," If you provide a value for the count property in "),s.Wb(63,"a",6),s.Wb(64,"code"),s.Sc(65,"IFilterGroupOption"),s.Vb(),s.Vb(),s.Sc(66,", counts will be added to the checkbox template. To recalculate counts, you must implement a "),s.Wb(67,"code"),s.Sc(68,"recalculateCounts"),s.Vb(),s.Sc(69," method and call it upon receiving filteringState "),s.Wb(70,"code"),s.Sc(71,"IFilteringOutputs"),s.Vb(),s.Sc(72,". "),s.Vb(),s.Wb(73,"nui-schematic-docs-command"),s.Sc(74,"ng g @nova-ui/bits:filter-group --name=basic-filter-group --p=app"),s.Vb(),s.Wb(75,"nui-schematic-docs-example",7),s.Rb(76,"app-basic-filter-group-composite-example"),s.Vb(),s.Vb(),s.Wb(77,"nui-tab",8),s.Wb(78,"h2"),s.Sc(79,"Custom Component Templates"),s.Vb(),s.Wb(80,"p"),s.Sc(81," To use a custom "),s.Wb(82,"strong"),s.Sc(83,"checkbox"),s.Vb(),s.Sc(84," or "),s.Wb(85,"strong"),s.Sc(86,"expander "),s.Vb(),s.Wb(87,"code"),s.Sc(88,"ng-template"),s.Vb(),s.Sc(89,", use the "),s.Wb(90,"code"),s.Sc(91,"[checkboxTemplateRef]"),s.Vb(),s.Sc(92," or "),s.Wb(93,"code"),s.Sc(94,"[expanderTemplateRef]"),s.Vb(),s.Sc(95," input of the filter group. "),s.Vb(),s.Wb(96,"p"),s.Sc(97," To pre-select filters, define "),s.Wb(98,"code"),s.Sc(99,"selectedFilterValues"),s.Vb(),s.Sc(100," for your "),s.Wb(101,"a",4),s.Wb(102,"code"),s.Sc(103,"IFilterGroupItem"),s.Vb(),s.Vb(),s.Sc(104," objects. "),s.Vb(),s.Wb(105,"nui-schematic-docs-command"),s.Sc(106,"ng g @nova-ui/bits:filter-group --name=custom-template-filter-group --p=app "),s.Wb(107,"span",9),s.Sc(108,"with some manual adjustments that can be seen below"),s.Vb(),s.Vb(),s.Wb(109,"nui-schematic-docs-example",10),s.Rb(110,"app-custom-template-filter-group-composite-example"),s.Vb(),s.Vb(),s.Wb(111,"nui-tab",11),s.Wb(112,"h2"),s.Sc(113,"Custom Data Source"),s.Vb(),s.Wb(114,"p"),s.Sc(115,"To use Filter Group with a custom data source:"),s.Vb(),s.Wb(116,"ol"),s.Wb(117,"li"),s.Sc(118," Create a custom data source service that extends "),s.Wb(119,"code"),s.Sc(120,"DataSourceService"),s.Vb(),s.Sc(121," and implements a method called "),s.Wb(122,"code"),s.Sc(123,"getFilteredData"),s.Vb(),s.Sc(124,". This method will communicate with an HTTP service to fetch filtered data and emit it back to the filter group. "),s.Vb(),s.Wb(125,"li"),s.Sc(126," Get a reference to your filter groups via "),s.Wb(127,"code"),s.Sc(128,"ViewChildren"),s.Vb(),s.Sc(129," and subscribe to their changes. In the callback, register components in your custom data service using the "),s.Wb(130,"code"),s.Sc(131,"registerComponent"),s.Vb(),s.Sc(132," method of"),s.Wb(133,"code"),s.Sc(134,"DataSourceService"),s.Vb(),s.Sc(135,". "),s.Vb(),s.Wb(136,"li"),s.Sc(137," On filter change, have the custom data source service emit filters ("),s.Wb(138,"code"),s.Sc(139,"IFilters"),s.Vb(),s.Sc(140,") to the http service and receive a filtered data object ("),s.Wb(141,"code"),s.Sc(142,"ICustomDSFilteredData"),s.Vb(),s.Sc(143,") in return. The filtered data object consists of filterGroupItems ("),s.Wb(144,"code"),s.Sc(145,"IFilterGroupItem[]"),s.Vb(),s.Sc(146,") and filteringState ("),s.Wb(147,"code"),s.Sc(148,"IFilteringOutputs"),s.Vb(),s.Sc(149,"). "),s.Vb(),s.Vb(),s.Wb(150,"p"),s.Sc(151," As implementations of the custom data source service may vary, other data may be passed from the filter group to the custom data source in order for the custom data source to apply filters and return filtered data. "),s.Vb(),s.Wb(152,"nui-schematic-docs-command"),s.Sc(153,"ng g @nova-ui/bits:filter-group --name=custom-data-source-filter-group --p=app "),s.Wb(154,"span",9),s.Sc(155,"with some manual adjustments that can be seen below"),s.Vb(),s.Vb(),s.Wb(156,"nui-schematic-docs-example",12),s.Rb(157,"app-custom-data-source-filter-group-composite-example"),s.Rb(158,"nui-fake-filtering-datasource-backend-component"),s.Vb(),s.Vb(),s.Wb(159,"nui-tab",13),s.Wb(160,"h2"),s.Sc(161,"Handle Multiple Filter Group Options"),s.Vb(),s.Wb(162,"p"),s.Sc(163," Only 10 filter group options are displayed by default. You can change this number by setting the "),s.Wb(164,"code"),s.Sc(165,"itemsToDisplay"),s.Vb(),s.Sc(166," property of an "),s.Wb(167,"a",4),s.Wb(168,"code"),s.Sc(169,"IFilterGroupItem"),s.Vb(),s.Vb(),s.Sc(170,". "),s.Vb(),s.Wb(171,"p"),s.Sc(172," The remaining options will be replaced with a "),s.Wb(173,"strong"),s.Sc(174,"Show all"),s.Vb(),s.Sc(175," button bound to the "),s.Wb(176,"code"),s.Sc(177,"(showAllButtonClicked)"),s.Vb(),s.Sc(178," output. To display the hidden options, you can use the "),s.Wb(179,"code"),s.Sc(180,"FilterGroupCompositeDialogComponent"),s.Vb(),s.Sc(181," generated by the schematic: "),s.Vb(),s.Wb(182,"ol"),s.Wb(183,"li"),s.Sc(184," Implement an item picker and place it in the dialog template. The example below uses a simple selectable list - to add more functionality, such as sorting and pagination, refer to the "),s.Wb(185,"a",14),s.Sc(186,"list schematic docs"),s.Vb(),s.Sc(187,". "),s.Vb(),s.Wb(188,"li"),s.Sc(189," Add your dialog component to your module's "),s.Wb(190,"code"),s.Sc(191,"entryComponents"),s.Vb(),s.Sc(192,". "),s.Vb(),s.Wb(193,"li"),s.Sc(194," Implement a handler for the "),s.Wb(195,"code"),s.Sc(196,"showAllButtonClicked"),s.Vb(),s.Sc(197," output. Use it to open the dialog, feed it the required parameters and update selection on "),s.Wb(198,"code"),s.Sc(199,"dialogClosed"),s.Vb(),s.Sc(200," event (refer to the "),s.Wb(201,"code"),s.Sc(202,"handleFilterDialog"),s.Vb(),s.Sc(203," method in the example). "),s.Vb(),s.Vb(),s.Wb(204,"nui-schematic-docs-command"),s.Sc(205,"ng g @nova-ui/bits:filter-group --name=dialog-filter-group --p=app "),s.Wb(206,"span",9),s.Sc(207,"with some manual adjustments that can be seen below"),s.Vb(),s.Vb(),s.Wb(208,"nui-schematic-docs-example",15),s.Rb(209,"app-dialog-filter-group-composite-example"),s.Vb(),s.Vb(),s.Vb(),s.Vb())},directives:[ei,ti.a,ni.a,ai,Vi,tr,xr,zr,Un,yo],encapsulation:2}),e})();var Co=n("e/il"),Fo=n.n(Co);function xo(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Oo(e,t){1&e&&s.Sb(0)}function Vo(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function Do(e,t){1&e&&s.Sb(0)}const ko=function(e){return{checkbox:e}};function Go(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Vo,5,2,"ng-template",null,11,s.Rc),s.Qc(3,Do,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,ko,e))}}function To(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const Eo=function(e){return{expander:e}};function _o(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,xo,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Oo,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,Go,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,To,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,Eo,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Po=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,_o,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();var Mo=n("kxJY"),Ro=n.n(Mo),No=n("jV/k"),jo=n("WJAz"),Ao=n("O6Zd"),Wo=n("oECA");const Lo="http://nova-pg.swdev.local/api/v1/servers";let Bo=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a,l;const s=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};let c=(new o.c).set("page",Math.ceil(s.start/(s.end-s.start)).toString()).set("pageSize",String(s.end-s.start));const u=this.extractMultiFilters(e);if(u.size){const e=Array.from(u.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});c=c.set("filters",JSON.stringify(e))}return(null===(n=e.search)||void 0===n?void 0:n.value)&&(c=c.set("searchField","name"),c=c.set("searchContent",null!==(r=null===(i=e.search)||void 0===i?void 0:i.value)&&void 0!==r?r:"")),(null===(l=null===(a=e.sorter)||void 0===a?void 0:a.value)||void 0===l?void 0:l.sortBy)&&(c=c.set("sortField",e.sorter.value.sortBy),c=c.set("sortOrder",e.sorter.value.direction.toUpperCase())),c}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get(Lo,{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get(Lo+"/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Qo,Uo=function(e){return e.active="Active",e.down="Down",e}({}),$o=n("pWLk");function zo(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function qo(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Qo),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Qo=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const Ho=["*"];let Ko=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Po,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:Ho,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,zo,4,5,"div",1),s.Vb(),s.Qc(3,qo,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var Jo=n("hL1M"),Xo=n("6UlS"),Yo=n("vfyW"),Zo=n("ccoi"),ea=n("97SH"),ta=n("47kQ"),na=n("Zms1"),ia=n("pn+1"),ra=n("X7Je");const oa=["message",$localize`:␟94516fa213706c67ce5a5b5765681d7fb032033a␟3894950702316166331:Loading...`];var aa;function la(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,aa),s.Vb(),s.Tb())}function sa(e,t){if(1&e&&(s.Wb(0,"div",12),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function ca(e,t){if(1&e&&(s.Wb(0,"div",9),s.Wb(1,"div",10),s.Qc(2,sa,2,1,"div",11),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}aa=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`;const ua=function(){return[10,20,30,40]};let pa=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.listItems$=new Xo.a([]),this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.isBusy=!1,this.totalItems=0,this.page=1,this.pageSize=20,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe(),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.listItems$.next((null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[]),this.filteringState=e,this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-list-with-pagination-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.PaginatorComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},decls:14,vars:16,consts:[["nui-busy","",3,"busy"],["size","large",6,"message"],[1,"d-flex","flex-row"],[1,"app-filtered-view-list-with-pagination-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-filtered-view-list-with-pagination-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-filtered-view-list-with-pagination-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource"],[1,"app-filtered-view-list-with-pagination-list-paginator",3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-spinner",1),s.cc(2,oa),s.Vb(),s.Wb(3,"div",2),s.Wb(4,"nui-sorter",3),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(5,"nui-search",4),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Qc(7,la,3,0,"ng-container",5),s.qc(8,"async"),s.Rb(9,"nui-repeat",6),s.Vb(),s.Wb(10,"div",2),s.Wb(11,"nui-paginator",7),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(){return t.applyFilters()})),s.Vb(),s.Vb(),s.Vb(),s.Qc(12,ca,4,3,"ng-template",null,8,s.Rc)),2&e){const e=s.Gc(13);s.wc("busy",t.isBusy),s.Eb(4),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",!t.isBusy&&0===s.rc(8,13,t.listItems$).length),s.Eb(2),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",e)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource),s.Eb(2),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(15,ua))("total",null==t.filteringState.paginator?null:t.filteringState.paginator.total)}},directives:[ea.a,ta.a,na.a,ia.a,r.t,Ki.a,ra.a,r.s],pipes:[r.b,r.l],styles:["[_nghost-%COMP%]   .app-filtered-view-list-with-pagination-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-filtered-view-list-with-pagination-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-filtered-view-list-with-pagination-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-filtered-view-list-with-pagination-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-filtered-view-list-with-pagination-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}"],changeDetection:0}),e})();var da=n("lm3E");const ma=["child"];function fa(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function ha(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function ga(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let ba=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:Uo.down,displayValue:"Down"},{value:Uo.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-list-with-pagination"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(ma,!0),s.Xc(Po,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([{provide:l.DataSourceService,useClass:Bo}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,fa,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,ha,5,3,"div",5),s.Vb(),s.Qc(9,ga,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-list-with-pagination-list",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,Ko,r.s,Jo.a,r.t,pa,Po,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})(),va=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Sa=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),wa=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[va],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,Sa]]}),e})(),ya=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiSpinnerModule,l.NuiBusyModule,wa,l.NuiChipsModule,l.NuiPopoverModule]]}),e})();function Ia(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Ca(e,t){1&e&&s.Sb(0)}function Fa(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function xa(e,t){1&e&&s.Sb(0)}const Oa=function(e){return{checkbox:e}};function Va(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Fa,5,2,"ng-template",null,11,s.Rc),s.Qc(3,xa,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,Oa,e))}}function Da(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const ka=function(e){return{expander:e}};function Ga(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,Ia,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Ca,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,Va,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,Da,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,ka,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Ta=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,Ga,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})(),Ea=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a,l;const s=(null===(t=e.virtualScroll)||void 0===t?void 0:t.value)||{start:0,end:0};let c=(new o.c).set("page",Math.ceil(s.start/(s.end-s.start)).toString()).set("pageSize",String(400));const u=this.extractMultiFilters(e);if(u.size){const e=Array.from(u.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});c=c.set("filters",JSON.stringify(e))}return(null===(n=e.search)||void 0===n?void 0:n.value)&&(c=c.set("searchField","name"),c=c.set("searchContent",null!==(r=null===(i=e.search)||void 0===i?void 0:i.value)&&void 0!==r?r:"")),(null===(l=null===(a=e.sorter)||void 0===a?void 0:a.value)||void 0===l?void 0:l.sortBy)&&(c=c.set("sortField",e.sorter.value.sortBy),c=c.set("sortOrder",e.sorter.value.direction.toUpperCase())),c}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get("http://nova-pg.swdev.local/api/v1/servers/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var _a,Pa=function(e){return e.active="Active",e.down="Down",e}({});function Ma(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function Ra(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,_a),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}_a=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const Na=["*"];let ja=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Ta,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:Na,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,Ma,4,5,"div",1),s.Vb(),s.Qc(3,Ra,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var Aa=n("70cc"),Wa=n("XA6Z");const La=["message",$localize`:␟94516fa213706c67ce5a5b5765681d7fb032033a␟3894950702316166331:Loading...`];var Ba,Qa,Ua;function $a(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,Qa),s.Vb(),s.Tb())}function za(e,t){1&e&&(s.Ub(0),s.ac(1,Ua),s.Tb())}function qa(e,t){1&e&&(s.Wb(0,"strong"),s.Sc(1,". All items loaded."),s.Vb())}function Ha(e,t){if(1&e&&(s.Wb(0,"div",17),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function Ka(e,t){if(1&e&&(s.Wb(0,"div",14),s.Wb(1,"div",15),s.Qc(2,Ha,2,1,"div",16),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}Ba=$localize`:␟be6f15c76afdbac53d195371c8e41ef3bdb277cb␟3755382401709957068: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1:. `,Qa=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`,Ua=$localize`:␟b12cc7551005a9787976bb8d2a161113feed479a␟9056616360897919297:, scroll down for more.`;let Ja=(()=>{class e{constructor(e,t,n){this.dataSource=e,this.changeDetection=t,this.viewportManager=n,this.listItems$=new Xo.a([]),this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.isBusy=!1,this.totalItems=0,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({virtualScroll:{componentInstance:this.viewportManager},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.viewportManager.setViewport(this.repeat.viewportRef).observeNextPage$({pageSize:400}).pipe(Object(Aa.a)(()=>{const e=this.listItems$.getValue();return!e.length||e.length<this.totalItems}),Object(Yo.a)(()=>this.applyFilters(!1)),Object(Wa.a)(()=>this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;const i=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];this.listItems$.next(this.listItems$.getValue().concat(i)),this.totalItems=(null===(n=e.paginator)||void 0===n?void 0:n.total)||0,this.changeDetection.detectChanges()}))),Object(Zo.a)(this.destroy$)).subscribe(),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.listItems$.next([]),this.changeDetection.detectChanges()),yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h),s.Qb(l.VirtualViewportManager))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-list-with-virtual-scroll-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},decls:24,vars:23,consts:[["nui-busy","",3,"busy"],["size","large",6,"message"],[1,"d-flex","flex-row"],[1,"app-filtered-view-list-with-virtual-scroll-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-filtered-view-list-with-virtual-scroll-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-filtered-view-list-with-virtual-scroll-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource","virtualScroll","itemSize"],[1,"app-filtered-view-list-with-virtual-scroll-list-scrolling-footer"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],[4,"ngIf","ngIfElse"],["endOfData",""],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-spinner",1),s.cc(2,La),s.Vb(),s.Wb(3,"div",2),s.Wb(4,"nui-sorter",3),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(5,"nui-search",4),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Qc(7,$a,3,0,"ng-container",5),s.qc(8,"async"),s.Rb(9,"nui-repeat",6),s.qc(10,"async"),s.Vb(),s.Wb(11,"footer",7),s.Wb(12,"div",8),s.Wb(13,"div",9),s.Wb(14,"div",10),s.ac(15,Ba),s.qc(16,"async"),s.Vb(),s.Wb(17,"div",10),s.Qc(18,za,2,0,"ng-container",11),s.qc(19,"async"),s.Qc(20,qa,2,0,"ng-template",null,12,s.Rc),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Qc(22,Ka,4,3,"ng-template",null,13,s.Rc)),2&e){const e=s.Gc(21),n=s.Gc(23);s.wc("busy",t.isBusy),s.Eb(4),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",!t.isBusy&&0===s.rc(8,15,t.listItems$).length),s.Eb(2),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",n)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",s.rc(10,17,t.listItems$))("virtualScroll",!0)("itemSize",30),s.Eb(7),s.ec(s.rc(16,19,t.listItems$).length)(t.totalItems),s.bc(15),s.Eb(2),s.wc("ngIf",s.rc(19,21,t.listItems$).length!==t.totalItems)("ngIfElse",e)}},directives:[ea.a,ta.a,na.a,ia.a,r.t,Ki.a,r.s],pipes:[r.b,r.l],styles:["[_nghost-%COMP%]   .app-filtered-view-list-with-virtual-scroll-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%;height:300px}[_nghost-%COMP%]   .app-filtered-view-list-with-virtual-scroll-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-filtered-view-list-with-virtual-scroll-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-filtered-view-list-with-virtual-scroll-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}"],changeDetection:0}),e})();const Xa=["child"];function Ya(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Za(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function el(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let tl=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:Pa.down,displayValue:"Down"},{value:Pa.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-list-with-virtual-scroll"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(Xa,!0),s.Xc(Ta,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([l.VirtualViewportManager,{provide:l.DataSourceService,useClass:Ea}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,Ya,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,Za,5,3,"div",5),s.Vb(),s.Qc(9,el,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-list-with-virtual-scroll-list",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,ja,r.s,Jo.a,r.t,Ja,Ta,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})(),nl=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),il=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),rl=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[nl],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,il]]}),e})(),ol=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiSpinnerModule,l.NuiBusyModule,rl,l.NuiChipsModule,l.NuiPopoverModule]]}),e})();function al(e,t){1&e&&s.Sb(0)}function ll(e,t){1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2,"To give users the ability to select rows, do the following:"),s.Vb(),s.Wb(3,"ol"),s.Wb(4,"li"),s.Sc(5," Set the "),s.Wb(6,"code"),s.Sc(7,"selectable"),s.Vb(),s.Sc(8," input to "),s.Wb(9,"code"),s.Sc(10,"true"),s.Vb(),s.Sc(11,". "),s.Vb(),s.Wb(12,"li"),s.Sc(13," Bind a trackBy handler to the "),s.Wb(14,"code"),s.Wb(15,"a",9),s.Sc(16,"trackBy"),s.Vb(),s.Vb(),s.Sc(17," property inherited from "),s.Wb(18,"code"),s.Wb(19,"a",10),s.Sc(20,"CdkTable"),s.Vb(),s.Vb(),s.Sc(21,". The trackBy handler should return a value that uniquely identifies each item in the table. "),s.Rb(22,"br"),s.Wb(23,"strong"),s.Sc(24,"Note:"),s.Vb(),s.Sc(25," When "),s.Wb(26,"code"),s.Sc(27,"trackBy"),s.Vb(),s.Sc(28," is used, the "),s.Wb(29,"code"),s.Wb(30,"a",11),s.Sc(31,"ISelection"),s.Vb(),s.Vb(),s.Sc(32," will consist of the "),s.Wb(33,"code"),s.Sc(34,"trackBy"),s.Vb(),s.Sc(35," property values only and will not contain entire representations of the selected objects. As a result, it may be beneficial to keep a separate index that maps the selected item IDs to the corresponding objects. "),s.Vb(),s.Wb(36,"li"),s.Sc(37," Pass the row object to "),s.Wb(38,"code"),s.Sc(39,"nui-row"),s.Vb(),s.Sc(40," using the "),s.Wb(41,"code"),s.Sc(42,"rowObject"),s.Vb(),s.Sc(43," input. "),s.Vb(),s.Wb(44,"li"),s.Sc(45," Bind to the selection event using the "),s.Wb(46,"code"),s.Sc(47,"(rowsSelected)"),s.Vb(),s.Sc(48," output. The event's payload is an "),s.Wb(49,"code"),s.Wb(50,"a",11),s.Sc(51,"ISelection"),s.Vb(),s.Vb(),s.Sc(52," object which should be converted to selected items by calling the "),s.Wb(53,"code"),s.Sc(54,"getSelectedItems"),s.Vb(),s.Sc(55," function on the "),s.Wb(56,"code"),s.Wb(57,"a",12),s.Sc(58,"SelectorService"),s.Vb(),s.Vb(),s.Sc(59,". "),s.Vb(),s.Vb(),s.Wb(60,"p"),s.Wb(61,"b"),s.Sc(62,"Note 1:"),s.Vb(),s.Sc(63,"To preselect rows in a table or to programmatically change the selection you can use the "),s.Wb(64,"code"),s.Sc(65,"selection"),s.Vb(),s.Sc(66," input which is of type "),s.Wb(67,"code"),s.Wb(68,"a",11),s.Sc(69,"ISelection"),s.Vb(),s.Vb(),s.Sc(70,". "),s.Vb(),s.Wb(71,"p"),s.Wb(72,"b"),s.Sc(73,"Note 2:"),s.Vb(),s.Sc(74," If you need to use "),s.Wb(75,"code"),s.Sc(76,"nui-paginator"),s.Vb(),s.Sc(77," with row selection, you need to pass the total number of items on all pages into the "),s.Wb(78,"code"),s.Sc(79,"totalItems"),s.Vb(),s.Sc(80," input. "),s.Vb(),s.Wb(81,"nui-message",13),s.Wb(82,"p"),s.Wb(83,"strong"),s.Sc(84,"Important:"),s.Vb(),s.Sc(85," When working with data that's coming across the wire, it's necessary to bind a "),s.Wb(86,"code"),s.Sc(87,"trackBy"),s.Vb(),s.Sc(88," handler as mentioned above. This will allow selection tracking to be based on the identifier returned by the "),s.Wb(89,"code"),s.Sc(90,"trackBy"),s.Vb(),s.Sc(91," handler. If a "),s.Wb(92,"code"),s.Sc(93,"trackBy"),s.Vb(),s.Sc(94," is not provided, comparisons to determine whether items are selected will be based on object reference which of course won't work with items coming from a backend. "),s.Vb(),s.Sc(95,' Take a look at the source on the "Selection" tab example to see how. '),s.Vb(),s.Tb()),2&e&&(s.Eb(81),s.wc("allowDismiss",!1))}function sl(e,t){1&e&&(s.Wb(0,"li"),s.Wb(1,"nui-expander",14),s.Wb(2,"p"),s.Sc(3,"Enables single-selection with deselection not allowed."),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("open",!1))}function cl(e,t){1&e&&(s.Wb(0,"li"),s.Wb(1,"nui-expander",15),s.Wb(2,"p"),s.Sc(3,"Enables single-selection with no radio buttons and deselection allowed."),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("open",!1))}function ul(e,t){1&e&&(s.Wb(0,"li"),s.Wb(1,"nui-expander",16),s.Wb(2,"p"),s.Sc(3,"Enables single-selection with no radio buttons and deselection not allowed."),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("open",!1))}function pl(e,t){1&e&&(s.Wb(0,"li"),s.Wb(1,"nui-expander",17),s.Wb(2,"p"),s.Sc(3,"Enables single-selection with deselection allowed."),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(1),s.wc("open",!1))}function dl(e,t){if(1&e&&(s.Wb(0,"ul"),s.Wb(1,"li"),s.Wb(2,"nui-expander",6),s.Wb(3,"p"),s.Sc(4,"Table rows are not selectable."),s.Vb(),s.Vb(),s.Vb(),s.Wb(5,"li"),s.Wb(6,"nui-expander",7),s.Wb(7,"p"),s.Sc(8),s.Vb(),s.Qc(9,ll,96,1,"ng-container",8),s.Vb(),s.Vb(),s.Qc(10,sl,4,1,"li",8),s.Qc(11,cl,4,1,"li",8),s.Qc(12,ul,4,1,"li",8),s.Qc(13,pl,4,1,"li",8),s.Vb()),2&e){const e=t.type,n=s.pc(2);s.Eb(2),s.wc("open",!1),s.Eb(4),s.wc("open",!1),s.Eb(2),s.Uc("This option enables the possibility to select one or more rows in the ",n.forComponent?n.forComponent:"component","."),s.Eb(1),s.wc("ngIf",e==n.componentType.table),s.Eb(1),s.wc("ngIf",e==n.componentType.list),s.Eb(1),s.wc("ngIf",e==n.componentType.list),s.Eb(1),s.wc("ngIf",e==n.componentType.list),s.Eb(1),s.wc("ngIf",e==n.componentType.list)}}const ml=function(e,t){return[e,t]},fl=function(e,t){return{tpl:e,types:t}};function hl(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," This string option allows you to select whether to enable selection and, if so, what type. Default is "),s.Wb(3,"code"),s.Sc(4,"none"),s.Vb(),s.Sc(5),s.Vb(),s.Qc(6,al,1,0,"ng-container",4),s.Qc(7,dl,14,8,"ng-template",null,5,s.Rc),s.Tb()),2&e){const e=s.Gc(8),t=s.pc(),n=s.Gc(11);s.Eb(5),s.Uc(". The values currently supported for this option are listed",t.forComponent?"":" below for each type of component",": "),s.Eb(1),s.wc("ngTemplateOutlet",n)("ngTemplateOutletContext",s.Cc(6,fl,e,s.Cc(3,ml,t.componentType.list,t.componentType.table)))}}function gl(e,t){1&e&&s.Sb(0)}function bl(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," The "),s.Wb(3,"code"),s.Sc(4,"nui-repeat"),s.Vb(),s.Sc(5," used inside this schematic allows you to manage the virtual viewport by exposing its "),s.Wb(6,"code"),s.Sc(7),s.Vb(),s.Sc(8," property which is an instance of "),s.Wb(9,"code"),s.Wb(10,"a",25),s.Sc(11,"CdkVirtualScrollViewport"),s.Vb(),s.Vb(),s.Sc(12,". The example below uses Nova's "),s.Wb(13,"code"),s.Wb(14,"a",26),s.Sc(15,"VirtualViewportManager"),s.Vb(),s.Vb(),s.Sc(16," to handle the viewport management duties via the "),s.Wb(17,"code"),s.Sc(18),s.Vb(),s.Sc(19," property. "),s.Vb(),s.Tb()),2&e){const e=s.pc(3);s.Eb(7),s.Tc(e.getRepeatPropKey("viewportRef")),s.Eb(11),s.Tc(e.getRepeatPropKey("viewportRef"))}}function vl(e,t){1&e&&(s.Ub(0),s.Sc(1," The "),s.Wb(2,"code"),s.Sc(3,"nui-table"),s.Vb(),s.Sc(4," used inside this schematic API is using "),s.Wb(5,"a",27),s.Sc(6,"nui table virtual scroll directive"),s.Vb(),s.Sc(7,". It makes it possible to load items in chunks. The amount of items loaded per fetch can be configured by setting the "),s.Wb(8,"code"),s.Sc(9,"range"),s.Vb(),s.Sc(10," variable. "),s.Wb(11,"nui-message",13),s.Sc(12," The following examples use custom Nova "),s.Wb(13,"a",27),s.Sc(14,"TableVirtualScrollLinearDirective"),s.Vb(),s.Sc(15," to perform scrolling based on scrolling indexes within the virtual scroll viewport. Customers are free to create their own directive and\\or scrolling strategy if they want custom behavior. "),s.Vb(),s.Wb(16,"nui-message",13),s.Sc(17," There are some known "),s.Wb(18,"strong"),s.Sc(19,"technical limitations"),s.Vb(),s.Sc(20,":"),s.Rb(21,"br"),s.Wb(22,"ol"),s.Wb(23,"li"),s.Sc(24," Data for the table should be provided in a DataSource service "),s.Vb(),s.Wb(25,"li"),s.Sc(26," Each datasource should have a page counter, to enable items prefetching (in case the viewport size is larger that the chosen items per page selected) "),s.Vb(),s.Wb(27,"li"),s.Wb(28,"a",28),s.Sc(29,"Angular doesn't subport virtual scrolling over a list of items whose size is not known and needs to be measured"),s.Vb(),s.Vb(),s.Wb(30,"li"),s.Sc(31," When CDK Viewport is used in context of non-visible dom elements (eg: Tabs, Accordion) virtual scroll will not work properly. The solution is not do initiate the viewport until it is visible using *ngIf, *ngSwitch. "),s.Vb(),s.Vb(),s.Vb(),s.Tb()),2&e&&(s.Eb(11),s.wc("allowDismiss",!1),s.Eb(5),s.wc("allowDismiss",!1))}function Sl(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," To make the scrolling working with "),s.Wb(3,"code"),s.Sc(4,"nui-table"),s.Vb(),s.Sc(5," start with declaring the following variables:"),s.Rb(6,"br"),s.Rb(7,"br"),s.Vb(),s.Wb(8,"nui-example-code",29),s.Sc(9),s.Vb(),s.Rb(10,"br"),s.Wb(11,"p"),s.Sc(12," Import "),s.Wb(13,"a",30),s.Sc(14,"VirtualViewportManager"),s.Vb(),s.Sc(15," (provides a mechanism for sequencing the rendered range stream emitted from the CDK Viewport into distinct page ranges):"),s.Rb(16,"br"),s.Vb(),s.Wb(17,"nui-example-code",29),s.Sc(18),s.Vb(),s.Rb(19,"br"),s.Wb(20,"p"),s.Sc(21," Provide VirtualViewportManager on a component level providers:"),s.Rb(22,"br"),s.Vb(),s.Wb(23,"nui-example-code",29),s.Sc(24),s.Vb(),s.Rb(25,"br"),s.Wb(26,"p"),s.Sc(27," Inject VirtualViewportManager type in the constructor:"),s.Rb(28,"br"),s.Vb(),s.Wb(29,"nui-example-code",29),s.Sc(30),s.Vb(),s.Rb(31,"br"),s.Wb(32,"p"),s.Sc(33," Use the Angular ViewChild decorator to get a reference to the scrolling viewport (CdkVirtualScrollViewport):"),s.Rb(34,"br"),s.Vb(),s.Wb(35,"nui-example-code",29),s.Sc(36),s.Vb(),s.Rb(37,"br"),s.Wb(38,"p"),s.Sc(39," Register the virtual scroll filter on dataSource: "),s.Vb(),s.Wb(40,"nui-example-code",29),s.Sc(41),s.Vb(),s.Rb(42,"br"),s.Wb(43,"p"),s.Sc(44," Optionally, subscribe to the "),s.Wb(45,"code"),s.Sc(46,"busy"),s.Vb(),s.Sc(47," state changes: "),s.Vb(),s.Wb(48,"nui-example-code",29),s.Sc(49),s.Vb(),s.Rb(50,"br"),s.Wb(51,"p"),s.Sc(52," Start setting up the "),s.Wb(53,"code"),s.Sc(54,"ngAfterViewInit()"),s.Vb(),s.Sc(55," lifecycle hook:"),s.Rb(56,"br"),s.Vb(),s.Wb(57,"nui-example-code",29),s.Sc(58),s.Vb(),s.Rb(59,"br"),s.Sc(60," Setting up the viewportManager listener and dataSource handler in the "),s.Wb(61,"code"),s.Sc(62,"ngAfterViewInit"),s.Vb(),s.Sc(63,": "),s.Wb(64,"ol"),s.Wb(65,"li"),s.Sc(66,"Use the "),s.Wb(67,"strong"),s.Sc(68,"setViewport"),s.Vb(),s.Sc(69," method to initialize "),s.Wb(70,"code"),s.Sc(71,"VirtualViewportManager"),s.Vb(),s.Sc(72,"."),s.Vb(),s.Wb(73,"li"),s.Sc(74,"Chain the "),s.Wb(75,"strong"),s.Sc(76,"observeNextPage$"),s.Vb(),s.Sc(77," method with the required parameters ("),s.Wb(78,"a",31),s.Sc(79,"IVirtualPageConfig)"),s.Vb(),s.Sc(80,"."),s.Vb(),s.Wb(81,"li"),s.Wb(82,"b"),s.Wb(83,"i"),s.Sc(84,"Optional"),s.Vb(),s.Vb(),s.Sc(85," You may like to ignore "),s.Wb(86,"code"),s.Sc(87,"VirtualViewportManager"),s.Vb(),s.Sc(88," emissions when the "),s.Wb(89,"code"),s.Sc(90,"totalItems"),s.Vb(),s.Sc(91," number is reached. To do this, you can use the RxJS "),s.Wb(92,"code"),s.Sc(93,"filter"),s.Vb(),s.Sc(94," operator as in example."),s.Rb(95,"br"),s.Wb(96,"b"),s.Sc(97,"Note:"),s.Vb(),s.Wb(98,"code"),s.Sc(99,"VirtualViewportManager"),s.Vb(),s.Sc(100," has its own mechanism of stopping when the length of the last received page is less than the page size requested. "),s.Rb(101,"br"),s.Sc(102," In the example, we use the "),s.Wb(103,"code"),s.Sc(104,"filter"),s.Vb(),s.Sc(105," operator to avoid making the additional requests when the dataset's last page has enough data. "),s.Vb(),s.Wb(106,"li"),s.Sc(107,"Finally, call "),s.Wb(108,"code"),s.Sc(109,"datasource.applyFilters()"),s.Vb(),s.Sc(110," to trigger fetching of the data."),s.Vb(),s.Wb(111,"li"),s.Sc(112," To avoid having two listeners (the next page observer and the data source's outputsSubject), we can combine them together into one stream "),s.Rb(113,"br"),s.Sc(114," with the RxJS "),s.Wb(115,"code"),s.Sc(116,"switchMap"),s.Vb(),s.Sc(117," operator. In the example, we map to an inner subscription which contains all new data related operations: "),s.Rb(118,"br"),s.Wb(119,"code"),s.Sc(120,"totalItems"),s.Vb(),s.Sc(121," update, assigning new data, and triggering the change detector. "),s.Rb(122,"br"),s.Wb(123,"b"),s.Sc(124,"Alternative"),s.Vb(),s.Sc(125,": You can subscribe to the "),s.Wb(126,"code"),s.Sc(127,"this.dataSource.outputsSubject"),s.Vb(),s.Sc(128,"code> in the ngOnInit method using the same RxJS pipe operators. "),s.Vb(),s.Vb(),s.Wb(129,"nui-example-code",29),s.Sc(130),s.Vb(),s.Rb(131,"br"),s.Tb()),2&e){const e=s.pc(3);s.Eb(9),s.Tc(e.tableScrollingSetup.vars),s.Eb(9),s.Tc(e.tableScrollingSetup.viewportManagerImport),s.Eb(6),s.Tc(e.tableScrollingSetup.provideViewport),s.Eb(6),s.Tc(e.tableScrollingSetup.injectViewport),s.Eb(6),s.Tc(e.tableScrollingSetup.viewChildren),s.Eb(5),s.Tc(e.tableScrollingSetup.registerScroll),s.Eb(8),s.Tc(e.tableScrollingSetup.oninitSubscribeBusy),s.Eb(9),s.Tc(e.tableScrollingSetup.ngAfterViewInitStart),s.Eb(72),s.Tc(e.tableScrollingSetup.ngAfterViewInitViewport)}}function wl(e,t){if(1&e&&(s.Qc(0,bl,20,2,"ng-container",8),s.Qc(1,vl,32,2,"ng-container",8),s.Qc(2,Sl,132,9,"ng-container",8)),2&e){const e=t.type,n=s.pc(2);s.wc("ngIf",e==n.componentType.list),s.Eb(1),s.wc("ngIf",e==n.componentType.table),s.Eb(1),s.wc("ngIf",e==n.componentType.table)}}function yl(e,t){1&e&&(s.Wb(0,"li"),s.Wb(1,"strong"),s.Sc(2,"For "),s.Wb(3,"code"),s.Sc(4,"list"),s.Vb(),s.Sc(5,"'s only"),s.Vb(),s.Sc(6,": set the "),s.Wb(7,"code"),s.Sc(8,"itemSize"),s.Vb(),s.Sc(9," component input to a valid value. It's mandatory to have this input set as there is a technical limitation on the Angular side. If the input is omitted, you'll see this error message in the console output: "),s.Wb(10,"mark"),s.Sc(11," \"ERROR: To use virtual scroll feature please set correct value to the 'itemSize' input!\" "),s.Vb(),s.Vb())}function Il(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," This string option allows you to select the paging mode of the data presentation. Default is "),s.Wb(3,"code"),s.Sc(4,"virtualScroll"),s.Vb(),s.Sc(5,". The values currently supported for this option are: "),s.Vb(),s.Wb(6,"ul"),s.Wb(7,"li"),s.Wb(8,"nui-expander",18),s.Wb(9,"p"),s.Sc(10," This setting allows us to use "),s.Wb(11,"a",19),s.Sc(12,"CDK Virtual Scroll"),s.Vb(),s.Sc(13," by setting "),s.Wb(14,"code"),s.Sc(15,"pagingMode"),s.Vb(),s.Sc(16," to "),s.Wb(17,"code"),s.Sc(18,"virtualScroll"),s.Vb(),s.Sc(19,". "),s.Vb(),s.Qc(20,gl,1,0,"ng-container",4),s.Qc(21,wl,3,3,"ng-template",null,20,s.Rc),s.Wb(23,"p"),s.Sc(24," Although the generated code of the schematic already takes care of basic setup steps, please make sure while customizing this feature for your own use case to do the following on the component: "),s.Vb(),s.Wb(25,"ol"),s.Qc(26,yl,12,0,"li",8),s.Wb(27,"li"),s.Sc(28," Set the "),s.Wb(29,"code"),s.Sc(30,"height"),s.Vb(),s.Sc(31," of the component element (either through a css/less file or inline in the ng-container). This sets the viewport for the virtual scroll. If this action is omitted, the viewport will have a height of "),s.Wb(32,"code"),s.Sc(33,"0px"),s.Vb(),s.Sc(34," and no content will be visible on the page. "),s.Vb(),s.Vb(),s.Wb(35,"nui-message",13),s.Wb(36,"ol"),s.Wb(37,"li"),s.Sc(38," If the user filters the results in some way, say with a search box, make sure to reset progress on the VirtualViewportManager before applying the filters. "),s.Vb(),s.Wb(39,"li"),s.Sc(40," Due to a "),s.Wb(41,"a",21),s.Sc(42,"known CDK issue"),s.Vb(),s.Sc(43,", make sure that the "),s.Wb(44,"code"),s.Sc(45,"nui-repeat"),s.Vb(),s.Sc(46," component hosting the virtual scroll is visible in order for the virtual scroll functionality to work properly. "),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Wb(47,"li"),s.Wb(48,"nui-expander",22),s.Sc(49," Data is displayed using standard pagination with a "),s.Wb(50,"code"),s.Sc(51,"nui-paginator"),s.Vb(),s.Sc(52," component. "),s.Wb(53,"p"),s.Sc(54," To enable pagination, do the following: "),s.Vb(),s.Wb(55,"ol"),s.Wb(56,"li"),s.Sc(57," Provide a service that performs filtering (pagination is considered to be a form of filtering in Nova). There is a default service, "),s.Wb(58,"a",23),s.Wb(59,"code"),s.Sc(60,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(61,", which provides default methods for working with filters. In case you need something special (such as filtering on a back-end or more complex sorting capability), you may extend this service and override its methods. "),s.Vb(),s.Wb(62,"li"),s.Sc(63," In your component's constructor, provide an initial dataset via the "),s.Wb(64,"code"),s.Sc(65,"setData"),s.Vb(),s.Sc(66," method of "),s.Wb(67,"a",23),s.Wb(68,"code"),s.Sc(69,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(70,". "),s.Vb(),s.Wb(71,"li"),s.Sc(72," Get the paginator component via "),s.Wb(73,"code"),s.Sc(74,"@ViewChild"),s.Vb(),s.Sc(75,". "),s.Vb(),s.Wb(76,"li"),s.Sc(77," In your component's "),s.Wb(78,"code"),s.Sc(79,"ngAfterViewInit"),s.Vb(),s.Sc(80,", pass the paginator to the "),s.Wb(81,"code"),s.Sc(82,"componentTree"),s.Vb(),s.Sc(83," property of "),s.Wb(84,"code"),s.Sc(85,"ClientSideDataSource"),s.Vb(),s.Sc(86,". Then, invoke the "),s.Wb(87,"code"),s.Sc(88,"applyFilters"),s.Vb(),s.Sc(89," method of "),s.Wb(90,"a",23),s.Wb(91,"code"),s.Sc(92,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(93,". And, lastly, subscribe to "),s.Wb(94,"code"),s.Sc(95,"outputsSubject"),s.Vb(),s.Sc(96," on "),s.Wb(97,"a",23),s.Wb(98,"code"),s.Sc(99,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(100," which will return an "),s.Wb(101,"a",24),s.Wb(102,"code"),s.Sc(103,"INovaFilteringOutputs"),s.Vb(),s.Vb(),s.Sc(104," object after each change in pagination. "),s.Vb(),s.Wb(105,"li"),s.Sc(106," In the "),s.Wb(107,"code"),s.Sc(108,"outputsSubject"),s.Vb(),s.Sc(109," subscription handler, overwrite your "),s.Wb(110,"code"),s.Sc(111,"dataSource"),s.Vb(),s.Sc(112," with the "),s.Wb(113,"code"),s.Sc(114,"itemsSource"),s.Vb(),s.Sc(115," you receive and pass the number of pages to the paginator's "),s.Wb(116,"code"),s.Sc(117,"total"),s.Vb(),s.Sc(118," input. "),s.Vb(),s.Wb(119,"li"),s.Sc(120," Bind to the paginator's "),s.Wb(121,"code"),s.Sc(122,"pagerAction"),s.Vb(),s.Sc(123," output, and invoke the "),s.Wb(124,"code"),s.Sc(125,"applyFilters"),s.Vb(),s.Sc(126," method of "),s.Wb(127,"a",23),s.Wb(128,"code"),s.Sc(129,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(130," in the output handler. "),s.Vb(),s.Wb(131,"li"),s.Sc(132," Unsubscribe from the "),s.Wb(133,"code"),s.Sc(134,"outputsSubject"),s.Vb(),s.Sc(135," in your component's "),s.Wb(136,"code"),s.Sc(137,"ngOnDestroy"),s.Vb(),s.Sc(138," method. "),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Wb(139,"li"),s.Wb(140,"nui-expander",6),s.Sc(141," All data is displayed at once. "),s.Vb(),s.Vb(),s.Vb(),s.Tb()),2&e){const e=s.Gc(22),t=s.pc(),n=s.Gc(11);s.Eb(8),s.wc("open",!1),s.Eb(12),s.wc("ngTemplateOutlet",n)("ngTemplateOutletContext",s.Cc(10,fl,e,s.Cc(7,ml,t.componentType.list,t.componentType.table))),s.Eb(6),s.wc("ngIf",t.for(t.componentType.list)),s.Eb(9),s.wc("allowDismiss",!1),s.Eb(13),s.wc("open",!1),s.Eb(92),s.wc("open",!1)}}function Cl(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2),s.Wb(3,"code"),s.Sc(4,"serverSide"),s.Vb(),s.Sc(5,". The values currently supported for this option are: "),s.Vb(),s.Wb(6,"nui-expander",32),s.Sc(7," The generated data source will retrieve data remotely from a server side API, usually achieved by extending the "),s.Wb(8,"a",33),s.Wb(9,"code"),s.Sc(10,"DataSourceService"),s.Vb(),s.Vb(),s.Sc(11," class. "),s.Wb(12,"nui-message",34),s.Sc(13," When this option is chosen, the schematic automatically generates a loading indicator ("),s.Wb(14,"code"),s.Sc(15,"nui-busy"),s.Vb(),s.Sc(16,") which is displayed as an overlay on the list during data retrieval. "),s.Vb(),s.Vb(),s.Wb(17,"nui-expander",35),s.Wb(18,"p"),s.Sc(19,"No data source will be generated, allowing you to create one from scratch."),s.Vb(),s.Vb(),s.Wb(20,"nui-expander",36),s.Sc(21," Generated data source will retrieve data locally from a client side source, usually via the "),s.Wb(22,"a",23),s.Wb(23,"code"),s.Sc(24,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(25," class. "),s.Vb(),s.Wb(26,"nui-expander",6),s.Sc(27," No data source will be generated and no data source related features such as sorting or search will be added to the generated code. "),s.Vb(),s.Wb(28,"div"),s.Wb(29,"p"),s.Sc(30," For additional information on how the data source setup is done please consult the paragraphs below: "),s.Vb(),s.Wb(31,"nui-expander",37),s.Wb(32,"p"),s.Sc(33,"Both local and remote setup are feasible for custom data sources, while the remote setup is feasible for the "),s.Wb(34,"code"),s.Sc(35,"serverSide"),s.Vb(),s.Sc(36," option."),s.Vb(),s.Wb(37,"nui-expander",38),s.Wb(38,"div"),s.Wb(39,"p"),s.Sc(40," To make component work with remote backend, it's advised to use the Nova "),s.Wb(41,"code"),s.Sc(42,"DataSourceService"),s.Vb(),s.Sc(43," which can be imported from "),s.Wb(44,"code"),s.Sc(45,'"@nova-ui/bits"'),s.Vb(),s.Sc(46,". "),s.Vb(),s.Wb(47,"p"),s.Sc(48,"Create the "),s.Wb(49,"code"),s.Sc(50,"@Injectable"),s.Vb(),s.Sc(51," class that extends the data source service mentioned above. "),s.Vb(),s.Wb(52,"nui-example-code",29),s.Sc(53),s.Vb(),s.Rb(54,"br"),s.Wb(55,"p"),s.Sc(56," Define the following fields to work with the data source."),s.Rb(57,"br"),s.Wb(58,"mark"),s.Wb(59,"sup"),s.Wb(60,"strong"),s.Sc(61,"Hint!"),s.Vb(),s.Vb(),s.Sc(62," The list below is a required minimum. Feel free to define other fields required to work with your API. "),s.Vb(),s.Vb(),s.Rb(63,"br"),s.Wb(64,"code"),s.Wb(65,"b"),s.Sc(66,"url"),s.Vb(),s.Vb(),s.Sc(67," - This is where you store your API url. "),s.Rb(68,"br"),s.Wb(69,"code"),s.Wb(70,"b"),s.Sc(71,"cache"),s.Vb(),s.Vb(),s.Sc(72," - This is where you store the cached list data. Because we fetch the data in chunks, every time a user fetches a new chunk of data it is appended to that array immediately, and then the updated array is sent to the list."),s.Rb(73,"br"),s.Wb(74,"code"),s.Wb(75,"sup"),s.Sc(76,"(Optional)"),s.Vb(),s.Wb(77,"b"),s.Sc(78,"busy"),s.Vb(),s.Vb(),s.Sc(79," - This sets the busy state. The state is considered busy only when the data is being fetched, and it's used to display loading indicator components on the view while the data is being fetched. This is optional. "),s.Wb(80,"mark"),s.Sc(81,"Consult with your UX team about using busy state and busy components in your list"),s.Vb(),s.Sc(82," . "),s.Wb(83,"nui-example-code",29),s.Sc(84),s.Vb(),s.Rb(85,"br"),s.Wb(86,"p"),s.Sc(87," Create a method that will fetch the data and perhaps convert the response to an expected format. It should have two parameters, "),s.Wb(88,"code"),s.Sc(89,"start"),s.Vb(),s.Sc(90," and "),s.Wb(91,"code"),s.Sc(92,"end"),s.Vb(),s.Sc(93,", which are the current values of the scrolling indices within the scrolling viewport. The calculation "),s.Wb(94,"code"),s.Sc(95,"end - start"),s.Vb(),s.Sc(96," will give you the number of items to fetch. If your API supports returning data by page, the "),s.Wb(97,"code"),s.Sc(98,"page"),s.Vb(),s.Sc(99," variable will be useful in that case, but if not, use the "),s.Wb(100,"code"),s.Sc(101,"end"),s.Vb(),s.Sc(102," index as the starting point for the next chunk of data."),s.Rb(103,"br"),s.Sc(104," Next, prepare the URI to be fetched. It can, and probably will, vary by API implementation. Your goal here is to return the requested number of items. "),s.Vb(),s.Wb(105,"nui-example-code",29),s.Sc(106),s.Vb(),s.Rb(107,"br"),s.Wb(108,"p"),s.Sc(109," Afterwards, when you get the data back as a response, convert the returned dataset into the structure expected by the component. The received data will be concatenated with "),s.Wb(110,"code"),s.Sc(111,"this.cache"),s.Vb(),s.Sc(112,", so the dataset must be in the format expected by the list's "),s.Wb(113,"code"),s.Sc(114,"dataSource"),s.Vb(),s.Sc(115," input in order to render the items correctly. "),s.Vb(),s.Wb(116,"nui-example-code",29),s.Sc(117),s.Vb(),s.Rb(118,"br"),s.Wb(119,"p"),s.Sc(120," The next step will be to implement the "),s.Wb(121,"code"),s.Sc(122,"getFilteredData"),s.Vb(),s.Sc(123," method of the "),s.Wb(124,"code"),s.Sc(125,"DataSourceService"),s.Vb(),s.Sc(126,". This method is called whenever the "),s.Wb(127,"code"),s.Sc(128,"applyFilters"),s.Vb(),s.Sc(129," method of current data source is called in the code, so this is where data operations will be triggered. Optionally, notify the "),s.Wb(130,"code"),s.Sc(131,"busy"),s.Vb(),s.Sc(132,' observable to toggle the busy state to "on". Then, retrieve the '),s.Wb(133,"code"),s.Sc(134,"virtualScroll"),s.Vb(),s.Sc(135," from the available filters passed into the method as an argument. The "),s.Wb(136,"code"),s.Sc(137,"virtualScroll"),s.Vb(),s.Sc(138," filter is registered with the data source farther down in the code listing of the list implementation."),s.Rb(139,"br"),s.Rb(140,"br"),s.Sc(141," From the "),s.Wb(142,"code"),s.Sc(143,"virtualScroll"),s.Vb(),s.Sc(144," filter you can retrieve the "),s.Wb(145,"code"),s.Sc(146,"start"),s.Vb(),s.Sc(147," and "),s.Wb(148,"code"),s.Sc(149,"end"),s.Vb(),s.Sc(150," indices for the scrolling viewport. Use them to fetch to correct amount of data. Then, update the cache with the items you just got from the server, and return the data in the format that would contain AT LEAST the total number of items the API is able to return and the list's cached data. "),s.Vb(),s.Wb(151,"nui-example-code",29),s.Sc(152),s.Vb(),s.Rb(153,"br"),s.Wb(154,"p"),s.Sc(155,"All data source preparation steps are finished at this point."),s.Vb(),s.Vb(),s.Vb(),s.Wb(156,"nui-expander",39),s.Wb(157,"p"),s.Sc(158," To make the component work with a local API it's advised to extend "),s.Wb(159,"a",23),s.Wb(160,"code"),s.Sc(161,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(162," which can be imported from "),s.Wb(163,"code"),s.Sc(164,'"@nova-ui/bits"'),s.Vb(),s.Sc(165,". "),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Tb()),2&e){const e=s.pc();s.Eb(2),s.Uc(" This string option allows you to select the way data is retrieved for displaying in the ",e.forComponent?e.forComponent:"component",". Default is "),s.Eb(4),s.wc("open",!1),s.Eb(6),s.wc("allowDismiss",!1),s.Eb(5),s.wc("open",!1),s.Eb(3),s.wc("open",!1),s.Eb(6),s.wc("open",!1),s.Eb(5),s.wc("open",!1),s.Eb(6),s.wc("open",!1),s.Eb(16),s.Tc(e.dataSourceSetup.extendDS),s.Eb(31),s.Tc(e.dataSourceSetup.defineFields),s.Eb(22),s.Tc(e.fetch),s.Eb(11),s.Tc(e.dataSourceSetup.getData),s.Eb(35),s.Tc(e.dataSourceSetup.getFilteredData),s.Eb(4),s.wc("open",!1)}}function Fl(e,t){1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," This boolean option allows you to enable/disable search functionality. Default is "),s.Wb(3,"code"),s.Sc(4,"true"),s.Vb(),s.Sc(5,". "),s.Vb(),s.Wb(6,"p"),s.Sc(7," To subscribe to the search events, use search's "),s.Wb(8,"code"),s.Sc(9,"onSearch"),s.Vb(),s.Sc(10," or "),s.Wb(11,"code"),s.Sc(12,"inputChange"),s.Vb(),s.Sc(13," (and, if needed, "),s.Wb(14,"code"),s.Sc(15,"onSearchCancel"),s.Vb(),s.Sc(16,") hooks to invoke the "),s.Wb(17,"code"),s.Sc(18,"applyFilters"),s.Vb(),s.Sc(19," method of the "),s.Wb(20,"a",33),s.Wb(21,"code"),s.Sc(22,"DataSourceService"),s.Vb(),s.Vb(),s.Sc(23," class in order to perform the actual search. "),s.Vb(),s.Wb(24,"nui-message",13),s.Wb(25,"ol"),s.Wb(26,"li"),s.Sc(27," For remote data sources, which usually extend or use directly "),s.Wb(28,"a",40),s.Wb(29,"code"),s.Sc(30,"ServerSideDataSource"),s.Vb(),s.Vb(),s.Sc(31,", if you want searches to be performed as the user types, it's advised to add a debounce to the filtering to avoid stressing out the backend API by using "),s.Wb(32,"code"),s.Sc(33,"pipe(debounceTime(Integer_Value))"),s.Vb(),s.Sc(34," between search subscriptions. "),s.Vb(),s.Wb(35,"li"),s.Sc(36," For local data sources, which usually extend or use directly "),s.Wb(37,"a",23),s.Wb(38,"code"),s.Sc(39,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(40,", you can use the "),s.Wb(41,"code"),s.Sc(42,"setSearchProperties"),s.Vb(),s.Sc(43," method of "),s.Wb(44,"a",23),s.Wb(45,"code"),s.Sc(46,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(47," to specify which columns the search should apply to; if not set, the search will be performed on all columns. "),s.Vb(),s.Vb(),s.Vb(),s.Tb()),2&e&&(s.Eb(24),s.wc("allowDismiss",!1))}function xl(e,t){1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2,"To use sorting in a table you need to:"),s.Vb(),s.Wb(3,"ol"),s.Wb(4,"li"),s.Sc(5,"Set "),s.Wb(6,"code"),s.Sc(7,'[sortable]="true"'),s.Vb(),s.Sc(8," on "),s.Wb(9,"code"),s.Sc(10,"nui-table"),s.Vb(),s.Sc(11,"."),s.Vb(),s.Wb(12,"li"),s.Sc(13,"Get table component via "),s.Wb(14,"code"),s.Sc(15,"@ViewChild"),s.Vb(),s.Sc(16,"."),s.Vb(),s.Wb(17,"li"),s.Sc(18,"Set up the filtering component tree. To get table filtering components use "),s.Wb(19,"code"),s.Sc(20,"getFilterComponents()"),s.Vb(),s.Sc(21," function of table component. This will give filtering mechanism an ability to receive data for sorting at the moment you'll call "),s.Wb(22,"code"),s.Sc(23,"applyFilters"),s.Vb(),s.Sc(24," method of "),s.Wb(25,"a",23),s.Wb(26,"code"),s.Sc(27,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(28,". "),s.Vb(),s.Wb(29,"li"),s.Sc(30,"Set "),s.Wb(31,"code"),s.Sc(32,'[isColumnSortingDisabled]="true"'),s.Vb(),s.Sc(33," on the table-header-cell to prevent table from sorting by this property. "),s.Vb(),s.Wb(34,"li"),s.Sc(35,"Subscribe to "),s.Wb(36,"code"),s.Sc(37,"outputsSubject"),s.Vb(),s.Sc(38," on "),s.Wb(39,"a",23),s.Wb(40,"code"),s.Sc(41,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(42," which will return you "),s.Wb(43,"a",24),s.Wb(44,"code"),s.Sc(45,"INovaFilteringOutputs"),s.Vb(),s.Vb(),s.Sc(46," object after each change of sorting. "),s.Vb(),s.Wb(47,"li"),s.Sc(48,"In the "),s.Wb(49,"code"),s.Sc(50,"outputsSubject"),s.Vb(),s.Sc(51," subscription handler, overwrite your "),s.Wb(52,"code"),s.Sc(53,"dataSource"),s.Vb(),s.Sc(54," with the "),s.Wb(55,"code"),s.Sc(56,"itemsSource"),s.Vb(),s.Sc(57," you receive. "),s.Vb(),s.Wb(58,"li"),s.Sc(59,"On "),s.Wb(60,"code"),s.Sc(61,"(sortOrderChanged)"),s.Vb(),s.Sc(62," event call "),s.Wb(63,"code"),s.Sc(64,"applyFilters"),s.Vb(),s.Sc(65," method of "),s.Wb(66,"a",23),s.Wb(67,"code"),s.Sc(68,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(69,". "),s.Wb(70,"code"),s.Sc(71,"(sortOrderChanged)"),s.Vb(),s.Sc(72," event will emit you "),s.Wb(73,"a",41),s.Wb(74,"code"),s.Sc(75,"ISortedItem"),s.Vb(),s.Vb(),s.Sc(76," object. "),s.Vb(),s.Wb(77,"li"),s.Sc(78,"Unsubscribe from the "),s.Wb(79,"code"),s.Sc(80,"outputsSubject"),s.Vb(),s.Sc(81," in your component's "),s.Wb(82,"code"),s.Sc(83,"ngOnDestroy"),s.Vb(),s.Sc(84," method. "),s.Vb(),s.Vb(),s.Wb(85,"nui-message",34),s.Wb(86,"ul"),s.Wb(87,"li"),s.Sc(88," If you need to apply a more complicated sorting algorithm, you can extend "),s.Wb(89,"code"),s.Sc(90,"ClientSideDataSource"),s.Vb(),s.Sc(91," and override its sorting methods. "),s.Vb(),s.Wb(92,"li"),s.Sc(93," If you need to sort some column by default (or programmatically), you can do that by passing "),s.Wb(94,"a",41),s.Wb(95,"code"),s.Sc(96,"ISortedItem"),s.Vb(),s.Vb(),s.Sc(97," to "),s.Wb(98,"code"),s.Sc(99,"[sortingColumn]"),s.Vb(),s.Sc(100," input of the table. "),s.Vb(),s.Vb(),s.Vb(),s.Tb()),2&e&&(s.Eb(85),s.wc("allowDismiss",!1))}function Ol(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," This boolean option allows you to enable/disable sorting functionality. Default is "),s.Wb(3,"code"),s.Sc(4,"true"),s.Vb(),s.Sc(5,". "),s.Vb(),s.Qc(6,xl,101,1,"ng-container",8),s.Tb()),2&e){const e=s.pc();s.Eb(6),s.wc("ngIf",e.for(e.componentType.table))}}function Vl(e,t){1&e&&(s.Ub(0),s.Wb(1,"p"),s.Sc(2," This boolean option allows you to enable/disable chips functionality. Default is "),s.Wb(3,"code"),s.Sc(4,"true"),s.Vb(),s.Sc(5,". "),s.Vb(),s.Tb())}function Dl(e,t){1&e&&(s.Ub(0),s.uc(1),s.Tb())}function kl(e,t){1&e&&s.Sb(0)}const Gl=function(e){return{type:e}};function Tl(e,t){if(1&e&&(s.Ub(0),s.Qc(1,kl,1,0,"ng-container",4),s.Tb()),2&e){const e=s.pc().tpl,t=s.pc();s.Eb(1),s.wc("ngTemplateOutlet",e)("ngTemplateOutletContext",s.Bc(2,Gl,t.forComponent))}}function El(e,t){1&e&&s.Sb(0)}function _l(e,t){if(1&e&&(s.Wb(0,"li"),s.Wb(1,"nui-expander",43),s.Qc(2,El,1,0,"ng-container",4),s.Vb(),s.Vb()),2&e){const e=t.$implicit,n=s.pc(2).tpl;s.Eb(1),s.xc("header",e),s.wc("open",!1),s.Eb(1),s.wc("ngTemplateOutlet",n)("ngTemplateOutletContext",s.Bc(4,Gl,e))}}function Pl(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"ul"),s.Qc(2,_l,3,6,"li",42),s.Vb(),s.Tb()),2&e){const e=s.pc().types;s.Eb(2),s.wc("ngForOf",e)}}function Ml(e,t){if(1&e&&(s.Ub(0,0),s.Qc(1,Tl,2,4,"ng-container",2),s.Qc(2,Pl,3,1,"ng-container",1),s.Tb()),2&e){const e=s.pc();s.wc("ngSwitch",e.forComponent?e.forComponent:"shared"),s.Eb(2),s.wc("ngSwitchCase","shared")}}const Rl=["*"];var Nl=function(e){return e.list="list",e.table="table",e}({});let jl=(()=>{class e{constructor(e){this.forComponent=e,this.componentType=Nl,this.fetch='fetchURI = "${this.url}/?page=${end / (end - start)}&results=${end - start}"',this.dataSourceSetup={extendDS:"@Injectable()\nexport class RandomuserTableDataSource extends DataSourceService<ITableModel> {\n    constructor(private searchService: SearchService) {\n        super();\n    }\n}",defineFields:'private readonly url = "https://yourserver.com/api";\nprivate cache = Array.from<ITableModel>({ length: 0 });\npublic busy = new BehaviorSubject(false);',getData:'public async getData(start: number = 0, end: number= 20): Promise<INovaFilteringOutputs> {\n    let response: IRandomuserResponse = null;\n    try {\n        response = await\n                    (await fetch("this.fetchURI"))\n                        .json();\n                            return {\n                                users: response.results.map((result: IRandomuserResults, i: number) => ({\n                                    no: this.cache.length + i + 1,\n                                    nameTitle: result.name.title,\n                                    nameFirst: result.name.first,\n                                    nameLast: result.name.last,\n                                    gender: result.gender,\n                                    country: result.location.country,\n                                    city: result.location.city,\n                                    postcode: result.location.postcode,\n                                    email: result.email,\n                                    cell: result.cell,\n                                })),\n                                total: response.results.length,\n                                start: start,\n                            } as UsersQueryResponse;\n    } catch (e) {\n        console.error("Error responding from server. Please visit https://https://randomuser.me/ to see if it\'s available");\n    }\n}',getFilteredData:"public async getFilteredData(filters: INovaFilters): Promise<INovaFilteringOutputs> {\n    this.busy.next(true);\n    const virtualScrollFilter = filters.virtualScroll && filters.virtualScroll.value;\n    const start = virtualScrollFilter ? filters.virtualScroll.value.start : 0;\n    const end = virtualScrollFilter ? filters.virtualScroll.value.end : 0;\n\n    this.getData(start, end).then((response: UsersQueryResponse) => {\n        if (!response) { return; }\n\n        this.cache = this.cache.concat(response.users);\n        this.dataSubject.next(this.cache);\n        this.busy.next(false);\n    });\n\n    return {\n        repeat: {\n            itemsSource: this.cache,\n        },\n        totalItems: 200,\n    }\n}"},this.tableScrollingSetup={vars:'\n// will store the table data received from the server\npublic totalItems: number = 0;\npublic isBusy: boolean = false;\n\n// number of items to be fetched for each request\npublic pageSize: number = 40;\n\nprivate onDestroy$: Subject<void> = new Subject<void>();\n\n// stores the cached table data dynamically changed after every request from the server\n// this value is set to the dataSource input of the nui-table.\npublic items: IServer[] = [];\n\n// define the array of columns for the table\n// the table data from the datasource to the users var must come in the very same format.\npublic displayedColumns = ["name", "location", "status"];\n\n// datasource that you inject, or instantiate in constructor\nprivate dataSource: TableWithVirtualScrollDataSource;\n',viewportManagerImport:'import { VirtualViewportManager } from "@nova-ui/bits";',viewChildren:"\n@ViewChild(CdkVirtualScrollViewport, { static: false }) viewport: CdkVirtualScrollViewport;\n",provideViewport:"\n@Component({\n    //\n    providers: [VirtualViewportManager]\n})\n",injectViewport:"\nconstructor(private viewportManager: VirtualViewportManager) {}\n",oninitSubscribeBusy:"\nngOnInit(): void {\n    this.dataSource.busy.subscribe(busy => {\n        this._isBusy = busy;\n    });\n}",registerScroll:"private registerVirtualScroll() {\n    this.dataSource.registerComponent({\n        virtualScroll: { componentInstance: this.viewportManager },\n    });\n }",ngAfterViewInitStart:"ngAfterViewInit(): void {\n    this.registerVirtualScroll();\n}",ngAfterViewInitViewport:"this.viewportManager\n    // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n    .setViewport(this.viewport)\n    // Note: Initializing the stream with the desired page size, based on which\n    // VirtualViewportManager will perform the observations and will emit\n    // distinct ranges with step equal to provided pageSize\n    .observeNextPage$({pageSize: this.range}).pipe(\n    // Note: In case we know the total number of items we can stop the stream when dataset end is reached\n    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n    filter(range => this.totalItems ? this.totalItems >= range.end : true),\n    tap(() => this.dataSource.applyFilters()),\n    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n    switchMap(() => this.dataSource.outputsSubject.pipe(\n        tap((outputs: IFilteringOutputs) => {\n            this._totalItems = outputs.totalItems;\n            this.users = outputs.repeat.itemsSource || [];\n            this.cd.detectChanges();\n        })\n    )),\n    takeUntil(this.onDestroy$)\n).subscribe();\n        "}}getRepeatPropKey(e){return e}for(e){return this.forComponent===e||!this.forComponent}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(Nl,8))},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-schematic-cli-option"]],inputs:{name:"name"},ngContentSelectors:Rl,decls:12,vars:8,consts:[[3,"ngSwitch"],[4,"ngSwitchCase"],[4,"ngSwitchDefault"],["helpRenderer",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],["selectionModeTpl",""],["header","none",3,"open"],["header","multi",3,"open"],[4,"ngIf"],["href","https://material.angular.io/cdk/table/overview#connecting-the-table-to-a-data-source","target","_blank"],["href","https://material.angular.io/cdk/table/overview","target","_blank"],["href","../interfaces/ISelection.html","target","_blank"],["href","../injectables/SelectorService.html","target","_blank"],["type","warning",3,"allowDismiss"],["header","radio",3,"open"],["header","single",3,"open"],["header","singleWithRequiredSelection",3,"open"],["header","radioWithNonRequiredSelection",3,"open"],["header","virtualScroll",3,"open"],["href","https://material.angular.io/cdk/scrolling/overview"],["pagingModeVSTpl",""],["href","https://github.com/angular/components/issues/13981","target","_blank"],["header","pagination",3,"open"],["target","_blank","href","../injectables/ClientSideDataSource.html"],["target","_blank","href","../interfaces/INovaFilteringOutputs.html"],["href","https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport"],["href","/injectables/VirtualViewportManager.html"],["href","../directives/TableVirtualScrollLinearDirective.html#info"],["href","https://github.com/angular/components/issues/10113"],["language","typescript"],["href","../injectables/VirtualViewportManager.html","target","_blank"],["href","../interfaces/IVirtualPageConfig.html"],["header","serverSide",3,"open"],["target","_blank","href","../injectables/DataSourceService.html"],["type","info",3,"allowDismiss"],["header","custom",3,"open"],["header","clientSide",3,"open"],["header","DataSource Setup",3,"open"],["header","Remote DataSource Setup",3,"open"],["header","Local DataSource Setup",3,"open"],["target","_blank","href","../injectables/ServerSideDataSource.html"],["target","_blank","href","../interfaces/ISortedItem.html"],[4,"ngFor","ngForOf"],[3,"open","header"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"h5"),s.Sc(1),s.Vb(),s.Wb(2,"div",0),s.Qc(3,hl,9,9,"ng-container",1),s.Qc(4,Il,142,13,"ng-container",1),s.Qc(5,Cl,166,14,"ng-container",1),s.Qc(6,Fl,48,1,"ng-container",1),s.Qc(7,Ol,7,1,"ng-container",1),s.Qc(8,Vl,6,0,"ng-container",1),s.Qc(9,Dl,2,0,"ng-container",2),s.Vb(),s.Qc(10,Ml,3,2,"ng-template",null,3,s.Rc)),2&e&&(s.Eb(1),s.Tc(t.name),s.Eb(1),s.wc("ngSwitch",t.name),s.Eb(1),s.wc("ngSwitchCase","selectionMode"),s.Eb(1),s.wc("ngSwitchCase","pagingMode"),s.Eb(1),s.wc("ngSwitchCase","dataSource"),s.Eb(1),s.wc("ngSwitchCase","enableSearch"),s.Eb(1),s.wc("ngSwitchCase","enableSort"),s.Eb(1),s.wc("ngSwitchCase","chips"))},directives:[r.x,r.y,r.z,r.A,ui.a,r.t,ii.a,$n.a,r.s],encapsulation:2}),e})();function Al(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Wl(e,t){1&e&&s.Sb(0)}function Ll(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function Bl(e,t){1&e&&s.Sb(0)}const Ql=function(e){return{checkbox:e}};function Ul(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Ll,5,2,"ng-template",null,11,s.Rc),s.Qc(3,Bl,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,Ql,e))}}function $l(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const zl=function(e){return{expander:e}};function ql(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,Al,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Wl,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,Ul,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,$l,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,zl,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Hl=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,ql,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();var Kl=function(e){return e.active="Active",e.down="Down",e}({});const Jl=[{name:"FOCUS-SVR-12345",location:"Kyiv",status:Kl.active},{name:"Man-LT-ASD123",location:"Brno",status:Kl.down},{name:"Man-LT-DSA331",location:"Austin",status:Kl.active},{name:"Man-LT-JKS212",location:"Kyiv",status:Kl.down},{name:"ABERN-SVR-ATQU9404",location:"Kyiv",status:Kl.down},{name:"Man-LT-433AAD",location:"Austin",status:Kl.down},{name:"FOCUS-SVR-098331",location:"Kyiv",status:Kl.active},{name:"Man-LT-GHJ882",location:"Brno",status:Kl.down},{name:"Man-LT-LLK001",location:"Austin",status:Kl.down},{name:"Man-LT-KKJ998",location:"Kyiv",status:Kl.active},{name:"FOCUS-SVR-RRR001",location:"Brno",status:Kl.down},{name:"Man-LT-LKJF12",location:"Austin",status:Kl.down},{name:"Man-LT-882JJS",location:"Kyiv",status:Kl.down},{name:"FOCUS-SVR-7733KK",location:"Brno",status:Kl.active},{name:"FOCUS-SVR-JSHNSA",location:"Austin",status:Kl.active},{name:"FOCUS-SVR-KKAEQWE",location:"Kyiv",status:Kl.down},{name:"FOCUS-SVR-123KKNPQ",location:"Brno",status:Kl.active},{name:"Man-LT-RRF231",location:"Austin",status:Kl.down}];function Xl(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var Yl;function Zl(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Yl),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Yl=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const es=["*"];let ts=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Hl,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:es,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,Xl,4,5,"div",1),s.Vb(),s.Qc(3,Zl,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var ns;function is(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,ns),s.Vb(),s.Tb())}function rs(e,t){if(1&e&&(s.Wb(0,"div",10),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function os(e,t){if(1&e&&(s.Wb(0,"div",7),s.Wb(1,"div",8),s.Qc(2,rs,2,1,"div",9),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}ns=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`;const as=function(){return[10,20,30,40]};let ls=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.totalItems=0,this.page=1,this.pageSize=20,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a,this.dataSource.setData(Jl)}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe(),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;this.filteringState=e,this.totalItems=null!==(n=null===(t=e.paginator)||void 0===t?void 0:t.total)&&void 0!==n?n:0,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-with-list-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.PaginatorComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},decls:11,vars:13,consts:[[1,"d-flex","flex-row"],[1,"app-filtered-view-with-list-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-filtered-view-with-list-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-filtered-view-with-list-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource"],[1,"app-filtered-view-with-list-list-paginator",3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"div",0),s.Wb(2,"nui-sorter",1),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(3,"nui-search",2),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(4,"div",0),s.Qc(5,is,3,0,"ng-container",3),s.Rb(6,"nui-repeat",4),s.Vb(),s.Wb(7,"div",0),s.Wb(8,"nui-paginator",5),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(){return t.applyFilters()})),s.Vb(),s.Vb(),s.Vb(),s.Qc(9,os,4,3,"ng-template",null,6,s.Rc)),2&e){const e=s.Gc(10);s.Eb(2),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",0===(null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource.length)),s.Eb(1),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",e)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource),s.Eb(2),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(12,as))("total",null==t.filteringState.paginator?null:t.filteringState.paginator.total)}},directives:[na.a,ia.a,r.t,Ki.a,ra.a,r.s],pipes:[r.l],styles:["[_nghost-%COMP%]   .app-filtered-view-with-list-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-filtered-view-with-list-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-filtered-view-with-list-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-filtered-view-with-list-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-filtered-view-with-list-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}"],changeDetection:0}),e})();const ss=["child"];function cs(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function us(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function ps(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let ds=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:Kl.down,displayValue:"Down"},{value:Kl.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft],this.dataSource.setData(Jl)}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-with-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(ss,!0),s.Xc(Hl,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,cs,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,us,5,3,"div",5),s.Vb(),s.Qc(9,ps,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-with-list-list",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,ts,r.s,Jo.a,r.t,ls,Hl,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function ms(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function fs(e,t){1&e&&s.Sb(0)}function hs(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function gs(e,t){1&e&&s.Sb(0)}const bs=function(e){return{checkbox:e}};function vs(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,hs,5,2,"ng-template",null,11,s.Rc),s.Qc(3,gs,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,bs,e))}}function Ss(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const ws=function(e){return{expander:e}};function ys(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,ms,2,1,"ng-template",null,4,s.Rc),s.Qc(5,fs,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,vs,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,Ss,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,ws,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Is=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,ys,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();var Cs=function(e){return e.active="Active",e.down="Down",e}({});const Fs=[{name:"FOCUS-SVR-12345",location:"Kyiv",status:Cs.active},{name:"Man-LT-ASD123",location:"Brno",status:Cs.down},{name:"Man-LT-DSA331",location:"Austin",status:Cs.active},{name:"Man-LT-JKS212",location:"Kyiv",status:Cs.down},{name:"ABERN-SVR-ATQU9404",location:"Kyiv",status:Cs.down},{name:"Man-LT-433AAD",location:"Austin",status:Cs.down},{name:"FOCUS-SVR-098331",location:"Kyiv",status:Cs.active},{name:"Man-LT-GHJ882",location:"Brno",status:Cs.down},{name:"Man-LT-LLK001",location:"Austin",status:Cs.down},{name:"Man-LT-KKJ998",location:"Kyiv",status:Cs.active},{name:"FOCUS-SVR-RRR001",location:"Brno",status:Cs.down},{name:"Man-LT-LKJF12",location:"Austin",status:Cs.down},{name:"Man-LT-882JJS",location:"Kyiv",status:Cs.down},{name:"FOCUS-SVR-7733KK",location:"Brno",status:Cs.active},{name:"FOCUS-SVR-JSHNSA",location:"Austin",status:Cs.active},{name:"FOCUS-SVR-KKAEQWE",location:"Kyiv",status:Cs.down},{name:"FOCUS-SVR-123KKNPQ",location:"Brno",status:Cs.active},{name:"Man-LT-RRF231",location:"Austin",status:Cs.down}];function xs(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var Os;function Vs(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Os),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Os=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const Ds=["*"];let ks=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Is,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:Ds,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,xs,4,5,"div",1),s.Vb(),s.Qc(3,Vs,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var Gs,Ts,Es,_s=n("B/wL"),Ps=n("gluh"),Ms=n("tEyo"),Rs=n("1rq0"),Ns=n("eVtN"),js=n("Ni9w"),As=n("XiW7");function Ws(e,t){1&e&&(s.Wb(0,"th",10),s.ac(1,Gs),s.Vb())}function Ls(e,t){if(1&e&&(s.Wb(0,"td",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function Bs(e,t){1&e&&(s.Wb(0,"th",10),s.ac(1,Ts),s.Vb())}function Qs(e,t){if(1&e&&(s.Wb(0,"td",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Us(e,t){1&e&&(s.Wb(0,"th",10),s.ac(1,Es),s.Vb())}function $s(e,t){if(1&e&&(s.Wb(0,"td",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function zs(e,t){1&e&&s.Rb(0,"tr",12)}function qs(e,t){1&e&&s.Rb(0,"tr",13)}Gs=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Ts=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,Es=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`;const Hs=function(){return[10,20,50,100]};let Ks=(()=>{class e{constructor(e){this.dataSource=e,this.items=[],this.totalItems=0,this.displayedColumns=["name","location","status"],this.page=1,this.pageSize=20,this.destroy$=new An.a,this.dataSource.setData(Fs)}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-with-table-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},decls:14,vars:9,consts:[[1,"app-filtered-view-with-table-table__container"],["nui-table","",3,"dataSource"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",4,"nuiRowDef","nuiRowDefColumns"],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"table",1),s.Ub(2,2),s.Qc(3,Ws,2,0,"th",3),s.Qc(4,Ls,2,1,"td",4),s.Tb(),s.Ub(5,5),s.Qc(6,Bs,2,0,"th",3),s.Qc(7,Qs,2,1,"td",4),s.Tb(),s.Ub(8,6),s.Qc(9,Us,2,0,"th",3),s.Qc(10,$s,2,1,"td",4),s.Tb(),s.Qc(11,zs,1,0,"tr",7),s.Qc(12,qs,1,0,"tr",8),s.Vb(),s.Vb(),s.Wb(13,"nui-paginator",9),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e&&(s.Eb(1),s.wc("dataSource",t.items),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(1),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(8,Hs))("total",t.totalItems))},directives:[_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,ra.a,js.a,As.a,Ns.c,Ns.e],styles:[".icon-margin{margin-right:5px}.app-filtered-view-with-table-table__container{overflow:auto}"],encapsulation:2}),e})();const Js=["child"];function Xs(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Ys(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function Zs(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let ec=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:Cs.down,displayValue:"Down"},{value:Cs.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft],this.dataSource.setData(Fs)}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-with-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(Js,!0),s.Xc(Is,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([{provide:l.DataSourceService,useClass:l.LocalFilteringDataSource}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,Xs,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,Ys,5,3,"div",5),s.Vb(),s.Qc(9,Zs,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-with-table-table",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,ks,r.s,Jo.a,r.t,Ks,Is,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function tc(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function nc(e,t){1&e&&s.Sb(0)}function ic(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function rc(e,t){1&e&&s.Sb(0)}const oc=function(e){return{checkbox:e}};function ac(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,ic,5,2,"ng-template",null,11,s.Rc),s.Qc(3,rc,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,oc,e))}}function lc(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const sc=function(e){return{expander:e}};function cc(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,tc,2,1,"ng-template",null,4,s.Rc),s.Qc(5,nc,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,ac,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,lc,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,sc,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let uc=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,cc,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})(),pc=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t;const n=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};let i=(new o.c).set("page",Math.ceil(n.start/(n.end-n.start)).toString()).set("pageSize",String(n.end-n.start));const r=this.extractMultiFilters(e);if(r.size){const e=Array.from(r.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});i=i.set("filters",JSON.stringify(e))}return i}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get("http://nova-pg.swdev.local/api/v1/servers/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var dc,mc=function(e){return e.active="Active",e.down="Down",e}({});function fc(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function hc(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,dc),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}dc=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const gc=["*"];let bc=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,uc,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:gc,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,fc,4,5,"div",1),s.Vb(),s.Qc(3,hc,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var vc,Sc,wc,yc,Ic=n("ol/d");function Cc(e,t){1&e&&(s.Wb(0,"th",13),s.ac(1,vc),s.Vb())}function Fc(e,t){if(1&e&&(s.Wb(0,"td",14),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function xc(e,t){1&e&&(s.Wb(0,"th",13),s.ac(1,Sc),s.Vb())}function Oc(e,t){if(1&e&&(s.Wb(0,"td",14),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Vc(e,t){1&e&&(s.Wb(0,"th",13),s.ac(1,wc),s.Vb())}function Dc(e,t){if(1&e&&(s.Wb(0,"td",14),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function kc(e,t){1&e&&s.Rb(0,"tr",15)}function Gc(e,t){1&e&&s.Rb(0,"tr",16)}function Tc(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",17),s.Wb(2,"div",18),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function Ec(e,t){if(1&e&&(s.Wb(0,"div",18),s.Wb(1,"div",19),s.Wb(2,"div",20),s.ac(3,yc),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length)(e.totalItems),s.bc(3)}}vc=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Sc=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,wc=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,yc=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `;const _c=function(){return[10,20,50,100]};let Pc=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.page=1,this.pageSize=20,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-pagination-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},decls:18,vars:11,consts:[[1,"app-filtered-view-table-with-pagination-table__container"],["nui-table","",3,"dataSource"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",4,"nuiRowDef","nuiRowDefColumns"],[1,"app-filtered-view-table-with-pagination-table-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"table",1),s.Ub(2,2),s.Qc(3,Cc,2,0,"th",3),s.Qc(4,Fc,2,1,"td",4),s.Tb(),s.Ub(5,5),s.Qc(6,xc,2,0,"th",3),s.Qc(7,Oc,2,1,"td",4),s.Tb(),s.Ub(8,6),s.Qc(9,Vc,2,0,"th",3),s.Qc(10,Dc,2,1,"td",4),s.Tb(),s.Qc(11,kc,1,0,"tr",7),s.Qc(12,Gc,1,0,"tr",8),s.Vb(),s.Wb(13,"footer",9),s.Qc(14,Tc,4,3,"div",10),s.Qc(15,Ec,4,2,"ng-template",null,11,s.Rc),s.Vb(),s.Vb(),s.Wb(17,"nui-paginator",12),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e){const e=s.Gc(16);s.Eb(1),s.wc("dataSource",t.items),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",e),s.Eb(3),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(10,_c))("total",t.totalItems)}},directives:[_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,r.t,ra.a,js.a,As.a,Ns.c,Ns.e,Ic.a],styles:[".icon-margin{margin-right:5px}.app-filtered-view-table-with-pagination-table__container{overflow:auto}.app-filtered-view-table-with-pagination-table-scrolling-footer{height:28px}"],encapsulation:2}),e})();const Mc=["child"];function Rc(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Nc(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function jc(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let Ac=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:mc.down,displayValue:"Down"},{value:mc.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-pagination"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(Mc,!0),s.Xc(uc,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([{provide:l.DataSourceService,useClass:pc}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,Rc,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,Nc,5,3,"div",5),s.Vb(),s.Qc(9,jc,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-table-with-pagination-table",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,bc,r.s,Jo.a,r.t,Pc,uc,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function Wc(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Lc(e,t){1&e&&s.Sb(0)}function Bc(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function Qc(e,t){1&e&&s.Sb(0)}const Uc=function(e){return{checkbox:e}};function $c(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Bc,5,2,"ng-template",null,11,s.Rc),s.Qc(3,Qc,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,Uc,e))}}function zc(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const qc=function(e){return{expander:e}};function Hc(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,Wc,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Lc,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,$c,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,zc,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,qc,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Kc=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,Hc,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})(),Jc=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a,l;const s=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};let c=(new o.c).set("page",Math.ceil(s.start/(s.end-s.start)).toString()).set("pageSize",String(s.end-s.start));const u=this.extractMultiFilters(e);if(u.size){const e=Array.from(u.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});c=c.set("filters",JSON.stringify(e))}return(null===(n=e.search)||void 0===n?void 0:n.value)&&(c=c.set("searchField","name"),c=c.set("searchContent",null!==(r=null===(i=e.search)||void 0===i?void 0:i.value)&&void 0!==r?r:"")),(null===(l=null===(a=e.sorter)||void 0===a?void 0:a.value)||void 0===l?void 0:l.sortBy)&&(c=c.set("sortField",e.sorter.value.sortBy),c=c.set("sortOrder",e.sorter.value.direction.toUpperCase())),c}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get("http://nova-pg.swdev.local/api/v1/servers/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Xc,Yc=function(e){return e.active="Active",e.down="Down",e}({});function Zc(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function eu(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Xc),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Xc=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const tu=["*"];let nu=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Kc,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:tu,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,Zc,4,5,"div",1),s.Vb(),s.Qc(3,eu,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var iu,ru,ou,au,lu=n("+3x0");function su(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,iu),s.Vb())}function cu(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function uu(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,ru),s.Vb())}function pu(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function du(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,ou),s.Vb())}function mu(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function fu(e,t){1&e&&s.Rb(0,"tr",19)}function hu(e,t){1&e&&s.Rb(0,"tr",20),2&e&&s.wc("rowObject",t.$implicit)}function gu(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",21),s.Wb(2,"div",22),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function bu(e,t){if(1&e&&(s.Wb(0,"div",22),s.Wb(1,"div",23),s.Wb(2,"div",24),s.ac(3,au),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length)(e.totalItems),s.bc(3)}}iu=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,ru=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,ou=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,au=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `;const vu=function(){return[10,20,50,100]};let Su=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.sortedColumn={sortBy:"name",direction:l.SorterDirection.ascending},this.columnsToApplySearch=["name"],this.page=1,this.pageSize=20,this.selectedItems=[],this.selection={isAllPages:!1,include:["ABERN-SVR-ATQU9404"],exclude:[]},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent(this.table.getFilterComponents()),this.dataSource.registerComponent({search:{componentInstance:this.search},paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),this.search.inputChange.pipe(Object(lu.a)(500),Object(Yo.a)(()=>this.onSearch()),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSearchCancel(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}sortData(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortedColumn=e,yield this.applyFilters()}))}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSelectionChanged(e){this.changeDetection.detectChanges()}trackBy(e,t){return t.name}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-selection-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},decls:26,vars:20,consts:[[1,"flex-row-container"],[1,"flex-independent-row-item"],[1,"app-filtered-view-table-with-selection-table__container"],[1,"app-filtered-view-table-with-selection-table-searchable__search"],[3,"value","search","cancel"],["nui-table","",3,"dataSource","sortable","sortedColumn","selection","selectable","trackBy","sortOrderChanged","selectionChange"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",3,"rowObject",4,"nuiRowDef","nuiRowDefColumns"],[1,"app-filtered-view-table-with-selection-table-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row","",3,"rowObject"],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"]],template:function(e,t){if(1&e&&(s.Wb(0,"h2"),s.Sc(1,"Selection result"),s.Vb(),s.Wb(2,"div",0),s.Wb(3,"span",1),s.Sc(4),s.qc(5,"json"),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Wb(7,"div",3),s.Wb(8,"nui-search",4),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onSearchCancel()})),s.Vb(),s.Vb(),s.Wb(9,"table",5),s.lc("sortOrderChanged",(function(e){return t.sortData(e)}))("selectionChange",(function(e){return t.selection=e}))("selectionChange",(function(e){return t.onSelectionChanged(e)})),s.Ub(10,6),s.Qc(11,su,2,0,"th",7),s.Qc(12,cu,2,1,"td",8),s.Tb(),s.Ub(13,9),s.Qc(14,uu,2,0,"th",7),s.Qc(15,pu,2,1,"td",8),s.Tb(),s.Ub(16,10),s.Qc(17,du,2,0,"th",7),s.Qc(18,mu,2,1,"td",8),s.Tb(),s.Qc(19,fu,1,0,"tr",11),s.Qc(20,hu,1,1,"tr",12),s.Vb(),s.Wb(21,"footer",13),s.Qc(22,gu,4,3,"div",14),s.Qc(23,bu,4,2,"ng-template",null,15,s.Rc),s.Vb(),s.Vb(),s.Wb(25,"nui-paginator",16),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e){const e=s.Gc(24);s.Eb(4),s.Tc(s.rc(5,17,t.selection)),s.Eb(4),s.wc("value",t.searchTerm),s.Eb(1),s.wc("dataSource",t.items)("sortable",!0)("sortedColumn",t.sortedColumn)("selection",t.selection)("selectable",!0)("trackBy",t.trackBy),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",e),s.Eb(3),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(19,vu))("total",t.totalItems)}},directives:[ia.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,r.t,ra.a,js.a,As.a,Ns.c,Ns.e,Ic.a],pipes:[r.k],styles:[".icon-margin{margin-right:5px}.app-filtered-view-table-with-selection-table__container{overflow:auto}.app-filtered-view-table-with-selection-table-searchable__search{max-width:350px;margin-bottom:5px;margin-left:auto}.app-filtered-view-table-with-selection-table-scrolling-footer{height:28px}"],encapsulation:2}),e})();const wu=["child"];function yu(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Iu(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function Cu(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let Fu=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:Yc.down,displayValue:"Down"},{value:Yc.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-selection"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(wu,!0),s.Xc(Kc,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([{provide:l.DataSourceService,useClass:Jc}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,yu,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,Iu,5,3,"div",5),s.Vb(),s.Qc(9,Cu,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-table-with-selection-table",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,nu,r.s,Jo.a,r.t,Su,Kc,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function xu(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Ou(e,t){1&e&&s.Sb(0)}function Vu(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function Du(e,t){1&e&&s.Sb(0)}const ku=function(e){return{checkbox:e}};function Gu(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Vu,5,2,"ng-template",null,11,s.Rc),s.Qc(3,Du,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,ku,e))}}function Tu(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const Eu=function(e){return{expander:e}};function _u(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,xu,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Ou,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,Gu,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,Tu,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,Eu,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Pu=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,_u,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})(),Mu=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t;const n=(null===(t=e.virtualScroll)||void 0===t?void 0:t.value)||{start:0,end:0};let i=(new o.c).set("page",Math.ceil(n.start/(n.end-n.start)).toString()).set("pageSize",String(400));const r=this.extractMultiFilters(e);if(r.size){const e=Array.from(r.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});i=i.set("filters",JSON.stringify(e))}return i}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get("http://nova-pg.swdev.local/api/v1/servers/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Ru,Nu=function(e){return e.active="Active",e.down="Down",e}({});function ju(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function Au(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Ru),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Ru=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const Wu=["*"];let Lu=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Pu,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:Wu,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,ju,4,5,"div",1),s.Vb(),s.Qc(3,Au,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var Bu,Qu,Uu,$u,zu,qu=n("F7tr"),Hu=n("Fwsa");function Ku(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,Bu),s.Vb()),2&e&&s.Pc("width",30,"%")}function Ju(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function Xu(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,Qu),s.Vb()),2&e&&s.Pc("width",30,"%")}function Yu(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Zu(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,Uu),s.Vb())}function ep(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function tp(e,t){1&e&&s.Rb(0,"tr",17)}function np(e,t){1&e&&s.Rb(0,"tr",18)}function ip(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",19),s.Wb(2,"div",20),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function rp(e,t){1&e&&(s.Ub(0),s.ac(1,zu),s.Tb())}function op(e,t){1&e&&(s.Wb(0,"strong"),s.Sc(1,". All items loaded."),s.Vb())}function ap(e,t){if(1&e&&(s.Wb(0,"div",20),s.Wb(1,"div",21),s.Wb(2,"div",22),s.ac(3,$u),s.Vb(),s.Wb(4,"div",22),s.Qc(5,rp,2,0,"ng-container",13),s.Qc(6,op,2,0,"ng-template",null,23,s.Rc),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.Gc(7),t=s.pc();s.Eb(3),s.ec(t.items.length)(t.totalItems),s.bc(3),s.Eb(2),s.wc("ngIf",t.items.length!==t.totalItems)("ngIfElse",e)}}Bu=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Qu=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,Uu=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,$u=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `,zu=$localize`:␟b12cc7551005a9787976bb8d2a161113feed479a␟9056616360897919297:, scroll down for more.`;let lp=(()=>{class e{constructor(e,t,n){this.dataSource=e,this.viewportManager=t,this.changeDetection=n,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.pageSize=400,this.rowHeight=40,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({virtualScroll:{componentInstance:this.viewportManager}}),this.viewportManager.setViewport(this.viewport).observeNextPage$({pageSize:this.pageSize}).pipe(Object(Aa.a)(()=>!this.items.length||this.items.length<this.totalItems),Object(Yo.a)(()=>this.applyFilters(!1)),Object(Wa.a)(()=>this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;const i=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];this.items=this.items.concat(i),this.totalItems=(null===(n=e.paginator)||void 0===n?void 0:n.total)||0,this.changeDetection.detectChanges()}))),Object(Zo.a)(this.destroy$)).subscribe()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.items=[]),yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(l.VirtualViewportManager),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-virtual-scroll-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(i.e,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.viewport=n.first))},decls:20,vars:11,consts:[[1,"app-filtered-view-table-with-virtual-scroll-table__container"],["tableStickyHeader","",1,"app-filtered-view-table-with-virtual-scroll-table-scrolling-container",3,"itemSize"],["viewportRef",""],["nui-table","",3,"dataSource"],["nuiColumnDef","name"],["nui-header-cell","",3,"width",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nuiRowDef","","cdkVirtualFor","",3,"nuiRowDefColumns","cdkVirtualForOf"],[1,"app-filtered-view-table-with-virtual-scroll-table-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],["endOfData",""]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"cdk-virtual-scroll-viewport",1,2),s.Wb(3,"table",3),s.qc(4,"sliceRange"),s.Ub(5,4),s.Qc(6,Ku,2,2,"th",5),s.Qc(7,Ju,2,1,"td",6),s.Tb(),s.Ub(8,7),s.Qc(9,Xu,2,2,"th",5),s.Qc(10,Yu,2,1,"td",6),s.Tb(),s.Ub(11,8),s.Qc(12,Zu,2,0,"th",9),s.Qc(13,ep,2,1,"td",6),s.Tb(),s.Qc(14,tp,1,0,"tr",10),s.Qc(15,np,1,0,"ng-template",11),s.Vb(),s.Vb(),s.Wb(16,"footer",12),s.Qc(17,ip,4,3,"div",13),s.Qc(18,ap,8,4,"ng-template",null,14,s.Rc),s.Vb(),s.Vb()),2&e){const e=s.Gc(2),n=s.Gc(19);s.Eb(1),s.wc("itemSize",t.rowHeight),s.Eb(2),s.wc("dataSource",s.sc(4,8,t.items,e.getRenderedRange())),s.Eb(11),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns)("cdkVirtualForOf",t.items),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",n)}},directives:[i.e,qu.a,i.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,i.d,r.t,js.a,As.a,Ns.c,Ns.e,Ic.a],pipes:[Hu.a],styles:[".icon-margin{margin-right:5px}.app-filtered-view-table-with-virtual-scroll-table__container{height:400px;border-color:#d3d3d3;overflow:auto}.app-filtered-view-table-with-virtual-scroll-table-scrolling-container{height:300px}.app-filtered-view-table-with-virtual-scroll-table-scrolling-footer{height:28px;background-color:var(--nui-color-bg-transparent,transparent);color:var(--nui-color-text-secondary,rgba(17,17,17,.6))}"],encapsulation:2}),e})();const sp=["child"];function cp(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function up(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function pp(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let dp=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:Nu.down,displayValue:"Down"},{value:Nu.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-virtual-scroll"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(sp,!0),s.Xc(Pu,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([l.VirtualViewportManager,{provide:l.DataSourceService,useClass:Mu}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,cp,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,up,5,3,"div",5),s.Vb(),s.Qc(9,pp,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-table-with-virtual-scroll-table",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,Lu,r.s,Jo.a,r.t,lp,Pu,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function mp(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function fp(e,t){1&e&&s.Sb(0)}function hp(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function gp(e,t){1&e&&s.Sb(0)}const bp=function(e){return{checkbox:e}};function vp(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,hp,5,2,"ng-template",null,11,s.Rc),s.Qc(3,gp,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,bp,e))}}function Sp(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const wp=function(e){return{expander:e}};function yp(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,mp,2,1,"ng-template",null,4,s.Rc),s.Qc(5,fp,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,vp,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,Sp,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,wp,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Ip=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,yp,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})(),Cp=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t;const n=(null===(t=e.virtualScroll)||void 0===t?void 0:t.value)||{start:0,end:0};let i=(new o.c).set("page",Math.ceil(n.start/(n.end-n.start)).toString()).set("pageSize",String(400));const r=this.extractMultiFilters(e);if(r.size){const e=Array.from(r.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});i=i.set("filters",JSON.stringify(e))}return i}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get("http://nova-pg.swdev.local/api/v1/servers/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Fp,xp=function(e){return e.active="Active",e.down="Down",e}({});function Op(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function Vp(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,Fp),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}Fp=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const Dp=["*"];let kp=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Ip,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:Dp,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,Op,4,5,"div",1),s.Vb(),s.Qc(3,Vp,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var Gp,Tp,Ep,_p,Pp;function Mp(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Gp),s.Vb()),2&e&&s.Pc("width",30,"%")}function Rp(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function Np(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Tp),s.Vb()),2&e&&s.Pc("width",30,"%")}function jp(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Ap(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Ep),s.Vb())}function Wp(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function Lp(e,t){1&e&&s.Rb(0,"tr",19)}function Bp(e,t){1&e&&s.Rb(0,"tr",20),2&e&&s.wc("rowObject",t.$implicit)}function Qp(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",21),s.Wb(2,"div",22),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function Up(e,t){1&e&&(s.Ub(0),s.ac(1,Pp),s.Tb())}function $p(e,t){1&e&&(s.Wb(0,"strong"),s.Sc(1,". All items loaded."),s.Vb())}function zp(e,t){if(1&e&&(s.Wb(0,"div",22),s.Wb(1,"div",23),s.Wb(2,"div",24),s.ac(3,_p),s.Vb(),s.Wb(4,"div",24),s.Qc(5,Up,2,0,"ng-container",15),s.Qc(6,$p,2,0,"ng-template",null,25,s.Rc),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.Gc(7),t=s.pc();s.Eb(3),s.ec(t.items.length)(t.totalItems),s.bc(3),s.Eb(2),s.wc("ngIf",t.items.length!==t.totalItems)("ngIfElse",e)}}Gp=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Tp=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,Ep=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,_p=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `,Pp=$localize`:␟b12cc7551005a9787976bb8d2a161113feed479a␟9056616360897919297:, scroll down for more.`;let qp=(()=>{class e{constructor(e,t,n){this.dataSource=e,this.viewportManager=t,this.changeDetection=n,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.pageSize=400,this.selectedItems=[],this.selection={isAllPages:!1,include:["ABERN-SVR-ATQU9404"],exclude:[]},this.rowHeight=40,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({virtualScroll:{componentInstance:this.viewportManager}}),this.viewportManager.setViewport(this.viewport).observeNextPage$({pageSize:this.pageSize}).pipe(Object(Aa.a)(()=>!this.items.length||this.items.length<this.totalItems),Object(Yo.a)(()=>this.applyFilters(!1)),Object(Wa.a)(()=>this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;const i=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];this.items=this.items.concat(i),this.totalItems=(null===(n=e.paginator)||void 0===n?void 0:n.total)||0,this.changeDetection.detectChanges()}))),Object(Zo.a)(this.destroy$)).subscribe()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSelectionChanged(e){this.changeDetection.detectChanges()}trackBy(e,t){return t.name}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.items=[]),yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(l.VirtualViewportManager),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-virtual-scroll-selection-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(i.e,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.viewport=n.first))},decls:26,vars:17,consts:[[1,"flex-row-container"],[1,"flex-independent-row-item"],[1,"app-filtered-view-table-with-virtual-scroll-selection-table__container"],["tableStickyHeader","",1,"app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container",3,"itemSize"],["viewportRef",""],["nui-table","",3,"dataSource","selection","selectable","trackBy","selectionChange"],["nuiColumnDef","name"],["nui-header-cell","",3,"width",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nuiRowDef","","cdkVirtualFor","",3,"nuiRowDefColumns","cdkVirtualForOf"],[1,"app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row","",3,"rowObject"],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],["endOfData",""]],template:function(e,t){if(1&e&&(s.Wb(0,"h2"),s.Sc(1,"Selection result"),s.Vb(),s.Wb(2,"div",0),s.Wb(3,"span",1),s.Sc(4),s.qc(5,"json"),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Wb(7,"cdk-virtual-scroll-viewport",3,4),s.Wb(9,"table",5),s.lc("selectionChange",(function(e){return t.selection=e}))("selectionChange",(function(e){return t.onSelectionChanged(e)})),s.qc(10,"sliceRange"),s.Ub(11,6),s.Qc(12,Mp,2,2,"th",7),s.Qc(13,Rp,2,1,"td",8),s.Tb(),s.Ub(14,9),s.Qc(15,Np,2,2,"th",7),s.Qc(16,jp,2,1,"td",8),s.Tb(),s.Ub(17,10),s.Qc(18,Ap,2,0,"th",11),s.Qc(19,Wp,2,1,"td",8),s.Tb(),s.Qc(20,Lp,1,0,"tr",12),s.Qc(21,Bp,1,1,"ng-template",13),s.Vb(),s.Vb(),s.Wb(22,"footer",14),s.Qc(23,Qp,4,3,"div",15),s.Qc(24,zp,8,4,"ng-template",null,16,s.Rc),s.Vb(),s.Vb()),2&e){const e=s.Gc(8),n=s.Gc(25);s.Eb(4),s.Tc(s.rc(5,12,t.selection)),s.Eb(3),s.wc("itemSize",t.rowHeight),s.Eb(2),s.wc("dataSource",s.sc(10,14,t.items,e.getRenderedRange()))("selection",t.selection)("selectable",!0)("trackBy",t.trackBy),s.Eb(11),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns)("cdkVirtualForOf",t.items),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",n)}},directives:[i.e,qu.a,i.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,i.d,r.t,js.a,As.a,Ns.c,Ns.e,Ic.a],pipes:[r.k,Hu.a],styles:[".icon-margin{margin-right:5px}.app-filtered-view-table-with-virtual-scroll-selection-table__container{height:400px;border-color:#d3d3d3;overflow:auto}.app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container{height:300px}.app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer{height:28px;background-color:var(--nui-color-bg-transparent,transparent);color:var(--nui-color-text-secondary,rgba(17,17,17,.6))}"],encapsulation:2}),e})();const Hp=["child"];function Kp(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Jp(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function Xp(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let Yp=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:xp.down,displayValue:"Down"},{value:xp.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-virtual-scroll-selection"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(Hp,!0),s.Xc(Ip,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([l.VirtualViewportManager,{provide:l.DataSourceService,useClass:Cp}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,Kp,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,Jp,5,3,"div",5),s.Vb(),s.Qc(9,Xp,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-table-with-virtual-scroll-selection-table",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,kp,r.s,Jo.a,r.t,qp,Ip,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function Zp(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function ed(e,t){1&e&&s.Sb(0)}function td(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function nd(e,t){1&e&&s.Sb(0)}const id=function(e){return{checkbox:e}};function rd(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,td,5,2,"ng-template",null,11,s.Rc),s.Qc(3,nd,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,id,e))}}function od(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const ad=function(e){return{expander:e}};function ld(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,Zp,2,1,"ng-template",null,4,s.Rc),s.Qc(5,ed,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,rd,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,od,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,ad,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let sd=(()=>{class e{constructor(e){this.dialogService=e,this.detectFilterChanges=!0,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,ld,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();const cd=new s.s("CUSTOM_SCROLL_ITEMS_PER_PAGE");let ud=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t;const n=(null===(t=e.virtualScroll)||void 0===t?void 0:t.value)||{start:0,end:0};let i=(new o.c).set("page",Math.ceil(n.start/(n.end-n.start)).toString()).set("pageSize",String(400));const r=this.extractMultiFilters(e);if(r.size){const e=Array.from(r.entries()).reduce((e,[t,n])=>(e[t]=n,e),{});i=i.set("filters",JSON.stringify(e))}return i}static getMultiFiltersNames(e){const t=[];return Ro()(e,(e,n)=>{"string[]"===(null==e?void 0:e.type)&&t.push(n)}),t}static extractMultiFilters(e){const t=new Map;return Ro()(e,(e,n)=>{var i;"string[]"===(null==e?void 0:e.type)&&(null===(i=null==e?void 0:e.value)||void 0===i?void 0:i.length)>0&&t.set(n,null==e?void 0:e.value)}),t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count},status:e.status,location:e.location}))).toPromise()}))}getBackendData(t){var n;const i=e.getRequestParams(t),r=[this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:i})];let o=i;["page","pageSize","sortField","sortOrder"].forEach(e=>{o=o.delete(e)});const a=null!==(n=o.get("filters"))&&void 0!==n?n:"{}";e.getMultiFiltersNames(t).forEach(e=>{const t=Object.assign({},JSON.parse(a));t[e]&&(delete t[e],o=o.set("filters",JSON.stringify(t))),o=o.set("groupByField",e.toString());const n=this.http.get("http://nova-pg.swdev.local/api/v1/servers/count",{params:o});o=o.set("filters",a),r.push(n)});const l=(e,t)=>(e[Object.keys(t)[0]]=Object.values(t)[0],e);return Object(jo.a)(r).pipe(Object(Wn.a)(300),Object(Ao.a)(([e,t,n])=>{var i,r,o;return{items:(null===(i=e.items)||void 0===i?void 0:i.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count,status:null===(r=t.items)||void 0===r?void 0:r.reduce(l,{}),location:null===(o=n.items)||void 0===o?void 0:o.reduce(l,{})}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var pd,dd=function(e){return e.active="Active",e.down="Down",e}({});function md(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}function fd(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,pd),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}pd=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const hd=["*"];let gd=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,sd,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:hd,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,md,4,5,"div",1),s.Vb(),s.Qc(3,fd,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})(),bd=(()=>{class e{constructor(e){this.itemsPerPage=e,this.reset()}getFilters(){return{type:"virtualScroll",value:this.virtualScrollRange}}reset(){this.virtualScrollRange={start:0,end:this.itemsPerPage}}prepareNextPage(e){e<this.itemsPerPage||(this.virtualScrollRange.start+=this.itemsPerPage,this.virtualScrollRange.end=this.virtualScrollRange.start+this.itemsPerPage)}}return e.\u0275fac=function(t){return new(t||e)(s.hc(cd))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var vd,Sd,wd,yd,Id;function Cd(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,vd),s.Vb()),2&e&&s.Pc("width",30,"%")}function Fd(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function xd(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,Sd),s.Vb()),2&e&&s.Pc("width",30,"%")}function Od(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Vd(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,wd),s.Vb())}function Dd(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function kd(e,t){1&e&&s.Rb(0,"tr",17)}function Gd(e,t){1&e&&s.Rb(0,"tr",18)}function Td(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",19),s.Wb(2,"div",20),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function Ed(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",20),s.Wb(1,"div",21),s.Wb(2,"div",22),s.ac(3,yd),s.Vb(),s.Wb(4,"div",23),s.Wb(5,"button",24),s.lc("click",(function(){return s.Jc(e),s.pc().applyFilters(!1)})),s.ac(6,Id),s.Vb(),s.Vb(),s.Vb(),s.Vb()}if(2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length),s.bc(3),s.Eb(3),s.ec(e.pageSize),s.bc(6)}}vd=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Sd=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,wd=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,yd=$localize`:␟677bfeb66424056eb865d0905a76b3664f1f0198␟7826507219035060964: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: item(s). `,Id=$localize`:␟ce09af8cb0fdb88d79b2a0e083f9bf3561f34bb7␟2707471651988745654: Load another ${"\ufffd0\ufffd"}:INTERPOLATION: items `;let _d=(()=>{class e{constructor(e,t,n,i){this.dataSource=e,this.viewportManager=t,this.customVirtualScrollStrategyService=n,this.changeDetection=i,this.items=[],this.isBusy=!1,this.displayedColumns=["name","location","status"],this.pageSize=400,this.rowHeight=40,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({virtualScroll:{componentInstance:this.customVirtualScrollStrategyService}}),this.viewportManager.setViewport(this.viewport),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t;let n=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];const i=n.length;n=n.slice(0,i<this.pageSize?this.previouslyLoadedCount-i:i),this.previouslyLoadedCount=n.length,this.items=this.items.concat(n),this.customVirtualScrollStrategyService.prepareNextPage(i)}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.items=[],this.customVirtualScrollStrategyService.reset()),yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(l.VirtualViewportManager),s.Qb(bd),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-custom-virtual-scroll-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(i.e,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.viewport=n.first))},features:[s.Db([l.VirtualViewportManager,bd,{provide:cd,useValue:400}])],decls:20,vars:11,consts:[[1,"app-filtered-view-table-with-custom-virtual-scroll-table__container"],["tableStickyHeader","",1,"app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container",3,"itemSize"],["viewportRef",""],["nui-table","",3,"dataSource"],["nuiColumnDef","name"],["nui-header-cell","",3,"width",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nuiRowDef","","cdkVirtualFor","",3,"nuiRowDefColumns","cdkVirtualForOf"],[1,"app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],[1,"d-flex","justify-content-center"],["btn","","nui-button","","type","button","size","default","displayStyle","action",3,"click"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"cdk-virtual-scroll-viewport",1,2),s.Wb(3,"table",3),s.qc(4,"sliceRange"),s.Ub(5,4),s.Qc(6,Cd,2,2,"th",5),s.Qc(7,Fd,2,1,"td",6),s.Tb(),s.Ub(8,7),s.Qc(9,xd,2,2,"th",5),s.Qc(10,Od,2,1,"td",6),s.Tb(),s.Ub(11,8),s.Qc(12,Vd,2,0,"th",9),s.Qc(13,Dd,2,1,"td",6),s.Tb(),s.Qc(14,kd,1,0,"tr",10),s.Qc(15,Gd,1,0,"ng-template",11),s.Vb(),s.Vb(),s.Wb(16,"footer",12),s.Qc(17,Td,4,3,"div",13),s.Qc(18,Ed,7,2,"ng-template",null,14,s.Rc),s.Vb(),s.Vb()),2&e){const e=s.Gc(2),n=s.Gc(19);s.Eb(1),s.wc("itemSize",t.rowHeight),s.Eb(2),s.wc("dataSource",s.sc(4,8,t.items,e.getRenderedRange())),s.Eb(11),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns)("cdkVirtualForOf",t.items),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",n)}},directives:[i.e,qu.a,i.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,i.d,r.t,js.a,As.a,Ns.c,Ns.e,Ic.a],pipes:[Hu.a],styles:[".icon-margin{margin-right:5px}.app-filtered-view-table-with-custom-virtual-scroll-table__container{height:400px;border-color:#d3d3d3;overflow:auto}.app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container{height:300px}.app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer{height:28px;background-color:var(--nui-color-bg-transparent,transparent);color:var(--nui-color-text-secondary,rgba(17,17,17,.6))}"],encapsulation:2}),e})();const Pd=["child"];function Md(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function Rd(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function Nd(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let jd=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"status",title:"Status",expanded:!0,allFilterOptions:[{value:dd.down,displayValue:"Down"},{value:dd.active,displayValue:"Active"}],selectedFilterValues:[]},{id:"location",title:"Location",allFilterOptions:[{value:"Austin",displayValue:"Austin"},{value:"Brno",displayValue:"Brno"},{value:"Bucharest",displayValue:"Bucharest"},{value:"Kyiv",displayValue:"Kyiv"},{value:"London",displayValue:"London"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.outputsSubscription=this.dataSource.outputsSubject.subscribe(e=>{this.recalculateCounts(e),this.cd.detectChanges()})}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}recalculateCounts(e){this.filterGroupItems.forEach(t=>{t.allFilterOptions.forEach(n=>{var i;n.count=null!==(i=e[t.id][n.value])&&void 0!==i?i:0})})}ngOnDestroy(){this.outputsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-table-with-custom-virtual-scroll"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(Pd,!0),s.Xc(sd,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([l.VirtualViewportManager,{provide:l.DataSourceService,useClass:ud}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,Md,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,Rd,5,3,"div",5),s.Vb(),s.Qc(9,Nd,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-table-with-custom-virtual-scroll-table",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,gd,r.s,Jo.a,r.t,_d,sd,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function Ad(e,t){if(1&e&&(s.Wb(0,"span",9),s.Sc(1),s.Vb()),2&e){const e=s.pc(2);s.Eb(1),s.Tc(e.filterGroupItem.title)}}function Wd(e,t){1&e&&s.Sb(0)}function Ld(e,t){if(1&e&&(s.Wb(0,"div",12),s.Wb(1,"span",13),s.Sc(2),s.Vb(),s.Wb(3,"span",14),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit;s.Eb(2),s.Tc(e.displayValue),s.Eb(2),s.Tc(e.count)}}function Bd(e,t){1&e&&s.Sb(0)}const Qd=function(e){return{checkbox:e}};function Ud(e,t){if(1&e&&(s.Wb(0,"nui-checkbox",10),s.Qc(1,Ld,5,2,"ng-template",null,11,s.Rc),s.Qc(3,Bd,1,0,"ng-container",5),s.Vb()),2&e){const e=t.$implicit,n=s.Gc(2),i=s.pc(2);s.wc("value",e.value)("checked",i.isChecked(e.value)),s.Eb(3),s.wc("ngTemplateOutlet",i.checkboxTemplateRef||n)("ngTemplateOutletContext",s.Bc(4,Qd,e))}}function $d(e,t){if(1&e){const e=s.Xb();s.Wb(0,"a",15),s.lc("click",(function(){return s.Jc(e),s.pc(2).showFilterDialog()})),s.Sc(1),s.Vb()}if(2&e){const e=s.pc(2);s.Eb(1),s.Uc(" Show all (",e.filterGroupItem.allFilterOptions.length,") ")}}const zd=function(e){return{expander:e}};function qd(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",1),s.Wb(1,"nui-expander",2),s.lc("openChange",(function(t){return s.Jc(e),s.pc().onOpenChanged(t)})),s.Wb(2,"div",3),s.Qc(3,Ad,2,1,"ng-template",null,4,s.Rc),s.Qc(5,Wd,1,0,"ng-container",5),s.Vb(),s.Wb(6,"nui-checkbox-group",6),s.lc("valuesChange",(function(t){return s.Jc(e),s.pc().onValueChanged(t)})),s.Qc(7,Ud,4,6,"nui-checkbox",7),s.qc(8,"slice"),s.Vb(),s.Qc(9,$d,2,1,"a",8),s.Vb(),s.Vb()}if(2&e){const e=s.Gc(4),t=s.pc();s.Eb(1),s.wc("open",null==t.filterGroupItem?null:t.filterGroupItem.expanded),s.Eb(4),s.wc("ngTemplateOutlet",t.expanderTemplateRef||e)("ngTemplateOutletContext",s.Bc(10,zd,t.filterGroupItem)),s.Eb(1),s.wc("values",t.filterGroupItem.selectedFilterValues),s.Eb(1),s.wc("ngForOf",s.tc(8,6,t.filterGroupItem.allFilterOptions,0,t.getDisplayedFiltersCount())),s.Eb(2),s.wc("ngIf",(null==t.filterGroupItem||null==t.filterGroupItem.allFilterOptions?null:t.filterGroupItem.allFilterOptions.length)>t.getDisplayedFiltersCount())}}let Hd=(()=>{class e{constructor(e){this.dialogService=e,this.filterChanged=new s.p,this.showAllButtonClicked=new s.p,this.onDestroy$=new An.a}ngOnInit(){this.filterGroupItem.allFilterOptions=Gi()(this.filterGroupItem.allFilterOptions,"value","asc")}isChecked(e){return this.filterGroupItem.selectedFilterValues.indexOf(e)>-1}onValueChanged(e){this.filterGroupItem.selectedFilterValues=e,this.filterChanged.emit(this.filterGroupItem)}onOpenChanged(e){this.filterGroupItem.expanded=e}getFilters(){return{type:"string[]",value:this.filterGroupItem.selectedFilterValues,metadata:{allCategories:this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),expanded:Boolean(this.filterGroupItem.expanded)}}}showFilterDialog(){this.showAllButtonClicked.emit()}getDisplayedFiltersCount(){return this.filterGroupItem.itemsToDisplay?this.filterGroupItem.itemsToDisplay:10}hasFilterOptions(){return this.filterGroupItem.allFilterOptions.length>0}deselectFilterItemByValue(e){const t=this.filterItems.find(t=>t.value===e);t&&this.deselectFilterItem(t)}deselectAllFilterItems(){this.filterItems.filter(e=>e.checked).forEach(e=>this.deselectFilterItem(e))}deselectFilterItem(e){e.inputViewContainer.element.nativeElement.checked=!1,e.inputViewContainer.element.nativeElement.dispatchEvent(new Event("change"))}getAllFilterOptionsList(e){return e.map(e=>e.value)}ngOnDestroy(){this.onDestroy$.next(),this.onDestroy$.complete()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DialogService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-group"]],viewQuery:function(e,t){var n;1&e&&s.Xc(l.CheckboxComponent,!0),2&e&&s.Fc(n=s.mc())&&(t.filterItems=n)},inputs:{filterGroupItem:"filterGroupItem",checkboxTemplateRef:"checkboxTemplateRef",expanderTemplateRef:"expanderTemplateRef"},outputs:{filterChanged:"filterChanged",showAllButtonClicked:"showAllButtonClicked"},decls:1,vars:1,consts:[["class","filter-group",4,"ngIf"],[1,"filter-group"],[3,"open","openChange"],["nuiExpanderHeader",""],["defaultExpander",""],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"values","valuesChange"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],["class","filter-group__show-more-link",3,"click",4,"ngIf"],[1,"filter-group__header"],[1,"nui-checkbox--justified",3,"value","checked"],["defaultCheckboxes",""],[1,"d-flex","justify-content-between","filter-group__checkbox"],[1,"d-inline-block","filter-group__checkbox-value"],[1,"d-inline-block","filter-group__checkbox-count"],[1,"filter-group__show-more-link",3,"click"]],template:function(e,t){1&e&&s.Qc(0,qd,10,12,"div",0),2&e&&s.wc("ngIf",t.hasFilterOptions())},directives:[r.t,ui.a,r.A,Ti.a,r.s,Ei.a],pipes:[r.E],styles:[".filter-group__header[_ngcontent-%COMP%]{color:var(--nui-color-text-default,#111);font-weight:700;line-height:18px;text-overflow:ellipsis}.filter-group__show-more-link[_ngcontent-%COMP%]{cursor:pointer;padding:7px}.filter-group__checkbox-value[_ngcontent-%COMP%]{flex:0 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.filter-group__checkbox-count[_ngcontent-%COMP%]{flex:0 0 auto;margin-left:5px;text-align:right}"]}),e})();var Kd=n("qlrW"),Jd=n.n(Kd),Xd=n("PqlX"),Yd=n.n(Xd),Zd=n("NfLg"),em=n.n(Zd);const tm=["name","code","__typename"];let nm=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.apollo=t}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({tree:{itemsSource:this.buildTree(e.Subregion)}}))).toPromise()}))}getBackendData(e){return this.apollo.query({query:this.generateQuery(e)}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>e.data),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({}))))}generateQuery(e){var t,n,i;let r="",o="",a="";return null===(t=e.language)||void 0===t||t.value.forEach(e=>r+=`{officialLanguages_some: {name: "${e}"}},`),null===(n=e.currency)||void 0===n||n.value.forEach(e=>o+=`{currencies_some: {code: "${e}"}},`),null===(i=e.subregion)||void 0===i||i.value.forEach(e=>a+=`{name: "${e}"},`),Jd.a`${`query {\n          Subregion(filter: {AND: [{region: {name: "Americas"}}], ${a?"OR: ["+a+"]":""}}) {\n            name,\n            countries${r||o?"(filter: {AND: ["+r+o+"]})":""} {\n              name,\n              population,\n              officialLanguages {\n                name\n              },\n              currencies {\n                code\n              }\n            }\n          }\n        }`}`}buildTree(e){const t=[];for(const n in e)if(e.hasOwnProperty(n)&&"__typename"!==n){const i=e[n],r={};Yd()(i)?(r.name=""+n,r.children=this.buildTree(i)):em()(i)?(r.name=i.name||i.code||""+n,Object.keys(i).filter(e=>!tm.includes(e)).length&&(r.children=this.buildTree(i))):tm.includes(n)||(r.name=""+n,r.children=[{name:i}]),Object.keys(r).length&&t.push(r)}return t}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(at))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();function im(e,t){if(1&e&&(s.Wb(0,"div",3),s.Wb(1,"nui-popover",4),s.Sc(2),s.qc(3,"i18nPlural"),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(4);s.Eb(1),s.wc("template",t),s.Eb(1),s.Uc(" ",s.sc(3,2,e.emptyFilterGroupsCount(),e.i18nHiddenFiltersMapping)," ")}}var rm;function om(e,t){if(1&e&&(s.Wb(0,"span",5),s.ac(1,rm),s.Vb(),s.Rb(2,"nui-divider",6),s.Wb(3,"span",7),s.Sc(4),s.Vb()),2&e){const e=s.pc();s.Eb(4),s.Tc(e.emptyFilterGroupsTitles())}}rm=$localize`:␟9e8c25d45bf2b172c9243c42d071964cc0939314␟3998361747156369532: Following filter properties are turned on, but there are no existing values for them in the system. `;const am=["*"];let lm=(()=>{class e{constructor(e){this.dataSourceService=e,this.i18nHiddenFiltersMapping={"=1":$localize`1 hidden filter.`,other:$localize`# hidden filters.`}}ngAfterViewInit(){this.dataSourceService.registerComponent(this.getFilterComponents()),this.filterGroups.changes.subscribe(()=>{this.dataSourceService.registerComponent(this.getFilterComponents())})}emptyFilterGroupsTitles(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).map(e=>e.filterGroupItem.title).join(", ")}emptyFilterGroupsExist(){return this.emptyFilterGroupsCount()>0}emptyFilterGroupsCount(){return this.filterGroups.filter(e=>jn()(e.filterGroupItem.allFilterOptions)).length}getFilterComponents(){return this.filterGroups.reduce((e,t)=>(e[t.filterGroupItem.id]={componentInstance:t},e),{})}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filter-groups-wrapper"]],contentQueries:function(e,t,n){var i;1&e&&s.Jb(n,Hd,!1),2&e&&s.Fc(i=s.mc())&&(t.filterGroups=i)},ngContentSelectors:am,decls:5,vars:1,consts:[[1,"filter-groups-wrapper"],["class","filter-groups-wrapper__hidden-filters d-flex align-items-center",4,"ngIf"],["hiddenFiltersPopover",""],[1,"filter-groups-wrapper__hidden-filters","d-flex","align-items-center"],[3,"template"],[1,"filter-groups-wrapper__popover-hint"],["size","small"],[1,"filter-groups-wrapper__popover-hidden-filters"]],template:function(e,t){1&e&&(s.vc(),s.Wb(0,"div",0),s.uc(1),s.Qc(2,im,4,5,"div",1),s.Vb(),s.Qc(3,om,5,1,"ng-template",null,2,s.Rc)),2&e&&(s.Eb(2),s.wc("ngIf",t.emptyFilterGroupsExist()))},directives:[r.t,zn.a,$o.a],pipes:[r.i],styles:[".filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%]{background:#f2f2f2;height:30px;padding-left:10px;margin-top:10px}.filter-groups-wrapper__hidden-filters[_ngcontent-%COMP%], .filter-groups-wrapper__popover-hidden-filters[_ngcontent-%COMP%]{line-height:14px;font-size:11px;color:rgba(17,17,17,.6)}"]}),e})();var sm=n("lUmN"),cm=n("fzRm");function um(e,t){if(1&e&&(s.Wb(0,"cdk-nested-tree-node",4),s.Rb(1,"button",5),s.Sc(2),s.Vb()),2&e){const e=t.$implicit;s.Eb(2),s.Uc(" ",e.name," ")}}function pm(e,t){if(1&e&&(s.Wb(0,"cdk-nested-tree-node",6),s.Wb(1,"div",7),s.Rb(2,"nui-icon",8),s.Wb(3,"span",9),s.Sc(4),s.Vb(),s.Vb(),s.Wb(5,"div",10),s.Sb(6,11),s.Vb(),s.Vb()),2&e){const e=t.$implicit,n=s.pc(2);s.Eb(2),s.xc("icon",n.treeControl.isExpanded(e)?"triangle-down":"triangle-right"),s.Eb(2),s.Tc(e.name),s.Eb(1),s.Ib("nui-tree__body--collapsed",!n.treeControl.isExpanded(e)),s.wc("@expandedState",n.treeControl.isExpanded(e)?"expanded":"collapsed")}}function dm(e,t){if(1&e&&(s.Ub(0),s.Wb(1,"cdk-tree",1),s.Qc(2,um,3,1,"cdk-nested-tree-node",2),s.Qc(3,pm,7,5,"cdk-nested-tree-node",3),s.Vb(),s.Tb()),2&e){const e=s.pc();s.Eb(1),s.wc("dataSource",e.dataSourceTree)("treeControl",e.treeControl),s.Eb(2),s.wc("cdkTreeNodeDefWhen",e.hasChild)}}let mm=(()=>{class e{constructor(e,t){this.dataSource=e,this.cdRef=t,this.treeControl=new cm.g(e=>e.children),this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.items=[],this.filteringState={},this.destroy$=new An.a,this.hasChild=(e,t)=>!!t.children&&t.children.length>0}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{this.dataSourceTree=new sm.a(e.tree.itemsSource),this.cdRef.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-tree"]],decls:1,vars:1,consts:[[4,"ngIf"],[3,"dataSource","treeControl"],["class","nui-tree__leaf",4,"cdkTreeNodeDef"],["class","nui-tree",4,"cdkTreeNodeDef","cdkTreeNodeDefWhen"],[1,"nui-tree__leaf"],["nui-button","","displayStyle","action","type","button","disabled",""],[1,"nui-tree"],["cdkTreeNodeToggle","",1,"nui-tree__header"],[1,"nui-tree__header-icon",3,"icon"],[1,"nui-tree__header-title"],[1,"nui-tree__body"],["cdkTreeNodeOutlet",""]],template:function(e,t){1&e&&s.Qc(0,dm,4,3,"ng-container",0),2&e&&s.wc("ngIf",t.dataSourceTree)},directives:[r.t,cm.b,cm.d,cm.a,yi.a,cm.f,wi.a,cm.e],styles:["[_nghost-%COMP%]   .app-filtered-view-with-list-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-filtered-view-with-list-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-filtered-view-with-list-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-filtered-view-with-list-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-filtered-view-with-list-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}.nui-tree--expanded[_ngcontent-%COMP%]{padding-bottom:5px}.nui-tree__icon[_ngcontent-%COMP%]{align-items:center;align-self:flex-start;display:flex;flex-shrink:0;height:30px;justify-content:center;width:30px;margin-left:-7px}.nui-tree__header[_ngcontent-%COMP%]{align-items:center;border-radius:3px;cursor:pointer;display:flex;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.nui-tree__header[_ngcontent-%COMP%]:hover{background-color:var(--nui-color-bg-transparent-hover,rgba(17,17,17,.05))}.nui-tree__header-title[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;-ms-text-overflow:ellipsis;text-overflow:ellipsis;line-height:18px;font-size:13px;font-weight:600;color:#111;color:var(--nui-color-text-default,#111)}.nui-tree__header-icon[_ngcontent-%COMP%]{align-items:center;align-self:flex-start;display:flex;flex-shrink:0;height:30px;justify-content:center;width:30px}.nui-tree__header-content[_ngcontent-%COMP%]{align-items:center;display:flex;flex-grow:2;justify-content:flex-start;padding-left:5px;min-width:0;padding-right:5px}.nui-tree__header-content-icon[_ngcontent-%COMP%]{align-items:center;align-self:flex-start;flex-shrink:0;height:30px;justify-content:center;width:30px}.nui-tree__header-content--with-icon[_ngcontent-%COMP%]{padding-left:0}.nui-tree__header-content-wrapper[_ngcontent-%COMP%]{display:flex;flex-grow:2;min-width:0;width:100%}.nui-tree__header.nui-expander__header--empty.nui-expander__header[_ngcontent-%COMP%]{display:inline-flex}.nui-tree__header.nui-expander__header--empty[_ngcontent-%COMP%]   .nui-expander__header-content[_ngcontent-%COMP%]{padding-left:0;padding-right:0}.nui-tree__custom-header[_ngcontent-%COMP%]{width:100%}.nui-tree__custom-header--empty[_ngcontent-%COMP%]{display:flex;width:auto}.nui-tree__body[_ngcontent-%COMP%]{border:none;border-left:2px dotted #d9d9d9;border-left:2px dotted var(--nui-color-line-default,#d9d9d9);color:#111;color:var(--nui-color-text-default,#111);margin-left:14px;padding-left:14px}.nui-tree__body.hide-left-border[_ngcontent-%COMP%]{border-left:0}.nui-tree__body--collapsed[_ngcontent-%COMP%], .nui-tree__body.ng-animating[_ngcontent-%COMP%]{overflow:hidden}.nui-tree__leaf[_ngcontent-%COMP%]{display:flex;align-items:center}.nui-tree__invisible[_ngcontent-%COMP%]{display:none}"],data:{animation:[l.expand]},changeDetection:0}),e})();const fm=["child"];function hm(e,t){if(1&e){const e=s.Xb();s.Wb(0,"app-filter-group",8),s.lc("filterChanged",(function(){return s.Jc(e),s.pc().applyFilters()})),s.Vb()}2&e&&s.wc("filterGroupItem",t.$implicit)}function gm(e,t){if(1&e&&(s.Wb(0,"div",9,10),s.Wb(2,"nui-popover",11),s.Wb(3,"a",12),s.Sc(4),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc(),t=s.Gc(10);s.Eb(2),s.wc("popoverOverlayPosition",e.overflowPopoverPosition)("template",t),s.Eb(2),s.Uc("+",e.overflowCounter,"")}}function bm(e,t){if(1&e){const e=s.Xb();s.Wb(0,"nui-chips-overflow",13),s.lc("chipRemoved",(function(t){return s.Jc(e),s.pc().onClear(t)})),s.Vb()}if(2&e){const e=s.pc();s.wc("overflowSource",e.overflowSource)("itemsSource",e.chipsDataSource)}}let vm=(()=>{class e{constructor(e,t){this.dataSource=e,this.cd=t,this.filterGroupItems=[{id:"subregion",title:"Subregion",allFilterOptions:[{value:"Caribbean",displayValue:"Caribbean"},{value:"South America",displayValue:"South America"},{value:"Central America",displayValue:"Central America"},{value:"Northern America",displayValue:"Northern America"}],selectedFilterValues:[]},{id:"language",title:"Language",allFilterOptions:[{value:"English",displayValue:"English"},{value:"Dutch",displayValue:"Dutch"},{value:"French",displayValue:"French"},{value:"Spanish",displayValue:"Spanish"}],selectedFilterValues:[]},{id:"currency",title:"Currency",allFilterOptions:[{value:"USD",displayValue:"USD"},{value:"EUR",displayValue:"EUR"},{value:"CAD",displayValue:"CAD"},{value:"MXN",displayValue:"MXN"}],selectedFilterValues:[]}],this.chipsDataSource={groupedItems:[],flatItems:[]},this.overflowPopoverPosition=[l.PopoverOverlayPosition.bottomLeft,l.PopoverOverlayPosition.topLeft]}ngAfterViewInit(){this.dataSource.applyFilters()}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.child.applyFilters(),this.updateChips()}))}onChipsOverflow(e){var t,n,i;this.overflowSource=e,this.overflowCounter=((null===(t=this.overflowSource.flatItems)||void 0===t?void 0:t.length)||0)+((null===(n=this.overflowSource.groupedItems)||void 0===n?void 0:n.reduce((e,t)=>e+t.items.length,0))||0),null===(i=this.popover)||void 0===i||i.updatePosition()}onClear(e){return Object(c.b)(this,void 0,void 0,(function*(){e.group?Fo()(e.group.items||[],e.item):Fo()(this.chipsDataSource.flatItems||[],e.item);const t=this.filterGroups.find(t=>{var n;return(null===(n=e.group)||void 0===n?void 0:n.id)===t.filterGroupItem.id});null==t||t.deselectFilterItemByValue(e.item.label)}))}onClearAll(e){var t;this.chipsDataSource.groupedItems=[],null===(t=this.popover)||void 0===t||t.onClick(e),this.filterGroups.forEach(e=>e.deselectAllFilterItems())}updateChips(){this.chipsDataSource.groupedItems=this.filterGroupItems.map(e=>({id:e.id,label:e.title,items:e.selectedFilterValues.map(e=>({label:e}))})),this.cd.markForCheck()}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-filtered-view-with-tree"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.PopoverComponent,!0),s.Xc(fm,!0),s.Xc(Hd,!0)),2&e&&(s.Fc(n=s.mc())&&(t.popover=n.first),s.Fc(n=s.mc())&&(t.child=n.first),s.Fc(n=s.mc())&&(t.filterGroups=n))},features:[s.Db([{provide:l.DataSourceService,useClass:nm}])],decls:13,vars:4,consts:[[1,"mt-2","nui-edge-definer"],["nuiPanelEmbeddedBody",""],[3,"filterGroupItem","filterChanged",4,"ngFor","ngForOf"],[1,"ml-2"],[3,"itemsSource","overflow","chipRemoved","removeAll","chipsOverflowed"],["class","nui-chips-overflowed",4,"ngIf"],["popoverWithClickTrigger",""],["child",""],[3,"filterGroupItem","filterChanged"],[1,"nui-chips-overflowed"],["overflowCounterLabel",""],["trigger","click",3,"popoverOverlayPosition","template"],[1,"nui-chips-overflowed__counter"],["orientation","vertical",3,"overflowSource","itemsSource","chipRemoved"]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-panel"),s.Wb(2,"div",1),s.Wb(3,"app-filter-groups-wrapper"),s.Qc(4,hm,1,1,"app-filter-group",2),s.Vb(),s.Vb(),s.Wb(5,"div",3),s.Wb(6,"div"),s.Wb(7,"nui-chips",4),s.lc("chipRemoved",(function(e){return t.onClear(e)}))("removeAll",(function(e){return t.onClearAll(e)}))("chipsOverflowed",(function(e){return t.onChipsOverflow(e)})),s.Qc(8,gm,5,3,"div",5),s.Vb(),s.Qc(9,bm,1,2,"ng-template",null,6,s.Rc),s.Vb(),s.Rb(11,"app-filtered-view-tree",null,7),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(4),s.wc("ngForOf",t.filterGroupItems),s.Eb(3),s.wc("itemsSource",t.chipsDataSource)("overflow",!0),s.Eb(1),s.wc("ngIf",t.overflowCounter>0))},directives:[Di.a,lm,r.s,Jo.a,r.t,mm,Hd,zn.a,da.a],styles:[".filter-panel__heading[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center}.filter-panel__heading-label[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:600}.nui-chips-overflowed__counter[_ngcontent-%COMP%]{margin-left:3px;display:inline-flex}"],changeDetection:0}),e})();function Sm(e,t){1&e&&s.Rb(0,"app-filtered-view-table-with-virtual-scroll")}function wm(e,t){1&e&&s.Rb(0,"app-filtered-view-table-with-virtual-scroll-selection")}function ym(e,t){1&e&&s.Rb(0,"app-filtered-view-table-with-custom-virtual-scroll")}function Im(e,t){1&e&&s.Rb(0,"app-filtered-view-with-tree")}let Cm=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["schematics-docs-example"]],decls:115,vars:4,consts:[["schematicFolderName","filtered-view"],["schematicSummary",""],["name","presentationType"],["name","selectionMode"],["name","pagingMode"],["name","dataSource"],["name","enableSearch"],["name","enableSort"],["name","chips"],["schematicExamples",""],["heading","List"],["exampleFolderName","filtered-view-with-list"],["heading","List with Pagination"],["exampleFolderName","filtered-view-list-with-pagination"],["heading","List with Virtual Scroll"],["exampleFolderName","filtered-view-list-with-virtual-scroll"],["heading","Table"],["exampleFolderName","filtered-view-with-table"],["heading","Table with Pagination"],["exampleFolderName","filtered-view-table-with-pagination"],["heading","Table with Selection"],["exampleFolderName","filtered-view-table-with-selection"],["heading","Table with Virtual Scroll"],["vs",""],["exampleFolderName","filtered-view-table-with-virtual-scroll"],[4,"ngIf"],["heading","Table with Virtual Scroll and Selection"],["vss",""],["exampleFolderName","filtered-view-table-with-virtual-scroll-selection"],["heading","Table with Custom Virtual Scroll"],["cvs",""],["exampleFolderName","filtered-view-table-with-custom-virtual-scroll"],["heading","Tree"],["tree",""],["exampleFolderName","filtered-view-with-tree"]],template:function(e,t){if(1&e&&(s.Wb(0,"nui-schematic-docs-page",0),s.Wb(1,"div",1),s.Wb(2,"p"),s.Sc(3," The Filtered View schematic provides the ability to create a generic filtered view that can cover many use cases for filtering a set of data. Its main responsibility is to integrate a filter group panel with a list or table view that displays the filtered data. "),s.Vb(),s.Wb(4,"h2"),s.Sc(5,"Notable Command Line Options"),s.Vb(),s.Wb(6,"nui-schematic-cli-option",2),s.Wb(7,"p"),s.Sc(8," This string option allows you to select how the filtered data will be presented to the user. The values currently supported for this option are "),s.Wb(9,"code"),s.Sc(10,"table"),s.Vb(),s.Sc(11," and "),s.Wb(12,"code"),s.Sc(13,"list"),s.Vb(),s.Sc(14,". The default value is "),s.Wb(15,"code"),s.Sc(16,"list"),s.Vb(),s.Sc(17,". "),s.Vb(),s.Vb(),s.Rb(18,"nui-schematic-cli-option",3),s.Rb(19,"nui-schematic-cli-option",4),s.Rb(20,"nui-schematic-cli-option",5),s.Rb(21,"nui-schematic-cli-option",6),s.Rb(22,"nui-schematic-cli-option",7),s.Rb(23,"nui-schematic-cli-option",8),s.Vb(),s.Wb(24,"nui-tab-group",9),s.Wb(25,"nui-tab",10),s.Wb(26,"h2"),s.Sc(27,"Filtered View with List"),s.Vb(),s.Wb(28,"p"),s.Sc(29," This example shows the output of the CLI command without any modifications. "),s.Vb(),s.Wb(30,"nui-schematic-docs-command"),s.Sc(31,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-with-list --presentationType=list"),s.Vb(),s.Wb(32,"nui-schematic-docs-example",11),s.Rb(33,"app-filtered-view-with-list"),s.Vb(),s.Vb(),s.Wb(34,"nui-tab",12),s.Wb(35,"h2"),s.Sc(36,"List with Pagination"),s.Vb(),s.Wb(37,"nui-schematic-docs-command"),s.Sc(38,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide "),s.Wb(39,"strong"),s.Sc(40,"--pagingMode=pagination"),s.Vb(),s.Vb(),s.Wb(41,"nui-schematic-docs-example",13),s.Rb(42,"app-filtered-view-list-with-pagination"),s.Vb(),s.Vb(),s.Wb(43,"nui-tab",14),s.Wb(44,"h2"),s.Sc(45,"List with Virtual Scroll"),s.Vb(),s.Wb(46,"nui-schematic-docs-command"),s.Sc(47,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-virtual-scroll --presentationType=list --dataSource=serverSide "),s.Wb(48,"strong"),s.Sc(49,"--pagingMode=virtualScroll"),s.Vb(),s.Vb(),s.Wb(50,"nui-schematic-docs-example",15),s.Rb(51,"app-filtered-view-list-with-virtual-scroll"),s.Vb(),s.Vb(),s.Wb(52,"nui-tab",16),s.Wb(53,"h2"),s.Sc(54,"Filtered View with Table"),s.Vb(),s.Wb(55,"p"),s.Sc(56," This example shows the output of the CLI command shown below. "),s.Vb(),s.Wb(57,"nui-schematic-docs-command"),s.Sc(58,"ng g @nova-ui/bits:filtered-view --name=filtered-view-with-table --p=app "),s.Wb(59,"strong"),s.Sc(60,"--presentationType=table"),s.Vb(),s.Vb(),s.Wb(61,"nui-schematic-docs-example",17),s.Rb(62,"app-filtered-view-with-table"),s.Vb(),s.Vb(),s.Wb(63,"nui-tab",18),s.Wb(64,"h2"),s.Sc(65,"Table with Pagination"),s.Vb(),s.Wb(66,"nui-schematic-docs-command"),s.Sc(67,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide "),s.Wb(68,"strong"),s.Sc(69,"--pagingMode=pagination"),s.Vb(),s.Vb(),s.Wb(70,"nui-schematic-docs-example",19),s.Rb(71,"app-filtered-view-table-with-pagination"),s.Vb(),s.Vb(),s.Wb(72,"nui-tab",20),s.Wb(73,"h2"),s.Sc(74,"Table with Selection"),s.Vb(),s.Wb(75,"nui-schematic-docs-command"),s.Sc(76,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-selection --presentationType=table --dataSource=serverSide --pagingMode=pagination "),s.Vb(),s.Wb(77,"nui-schematic-docs-example",21),s.Rb(78,"app-filtered-view-table-with-selection"),s.Vb(),s.Vb(),s.Wb(79,"nui-tab",22,23),s.Wb(81,"h2"),s.Sc(82,"Table with Virtual Scroll"),s.Vb(),s.Wb(83,"nui-schematic-docs-command"),s.Sc(84,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide "),s.Wb(85,"strong"),s.Sc(86,"--pagingMode=virtualScroll"),s.Vb(),s.Vb(),s.Wb(87,"nui-schematic-docs-example",24),s.Qc(88,Sm,1,0,"app-filtered-view-table-with-virtual-scroll",25),s.Vb(),s.Vb(),s.Wb(89,"nui-tab",26,27),s.Wb(91,"h2"),s.Sc(92,"Table with Virtual Scroll and Selection"),s.Vb(),s.Wb(93,"nui-schematic-docs-command"),s.Sc(94,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide "),s.Wb(95,"strong"),s.Sc(96,"--pagingMode=virtualScroll"),s.Vb(),s.Vb(),s.Wb(97,"nui-schematic-docs-example",28),s.Qc(98,wm,1,0,"app-filtered-view-table-with-virtual-scroll-selection",25),s.Vb(),s.Vb(),s.Wb(99,"nui-tab",29,30),s.Wb(101,"h2"),s.Sc(102,"Table with Custom Virtual Scroll"),s.Vb(),s.Wb(103,"nui-schematic-docs-command"),s.Sc(104,"ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide "),s.Wb(105,"strong"),s.Sc(106,"--pagingMode=virtualScroll --virtualScrollStrategy=custom"),s.Vb(),s.Vb(),s.Wb(107,"nui-schematic-docs-example",31),s.Qc(108,ym,1,0,"app-filtered-view-table-with-custom-virtual-scroll",25),s.Vb(),s.Vb(),s.Wb(109,"nui-tab",32,33),s.Wb(111,"h2"),s.Sc(112,"Tree"),s.Vb(),s.Wb(113,"nui-schematic-docs-example",34),s.Qc(114,Im,1,0,"app-filtered-view-with-tree",25),s.Vb(),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.Gc(80),t=s.Gc(90),n=s.Gc(100),i=s.Gc(110);s.Eb(88),s.wc("ngIf",e.active),s.Eb(10),s.wc("ngIf",t.active),s.Eb(10),s.wc("ngIf",n.active),s.Eb(6),s.wc("ngIf",i.active)}},directives:[ei,jl,ti.a,ni.a,ai,Vi,ds,ba,tl,ec,Ac,Fu,r.t,dp,Yp,jd,vm],encapsulation:2}),e})(),Fm=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["schematics-docs-outlet"]],decls:1,vars:0,template:function(e,t){1&e&&s.Rb(0,"router-outlet")},directives:[a.h],encapsulation:2}),e})(),xm=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Om=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),Vm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[xm],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,Om]]}),e})(),Dm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[i.g,r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiProgressModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiIconModule,l.NuiSpinnerModule,l.NuiTableModule,l.NuiBusyModule,Vm,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),km=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Gm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),Tm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[km],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,Gm]]}),e})(),Em=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiProgressModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiIconModule,l.NuiSpinnerModule,l.NuiTableModule,l.NuiBusyModule,Tm,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),_m=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Pm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),Mm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[_m],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,Pm]]}),e})(),Rm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiProgressModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiIconModule,l.NuiSpinnerModule,l.NuiTableModule,l.NuiBusyModule,Mm,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),Nm=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),jm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),Am=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[Nm],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,jm]]}),e})(),Wm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[i.g,r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiProgressModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiIconModule,l.NuiSpinnerModule,l.NuiTableModule,l.NuiBusyModule,Am,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),Lm=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Bm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),Qm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[Lm],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,Bm]]}),e})(),Um=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[i.g,r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiProgressModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiIconModule,l.NuiSpinnerModule,l.NuiTableModule,l.NuiBusyModule,Qm,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),$m=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),zm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),qm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[$m],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,zm]]}),e})(),Hm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiSpinnerModule,l.NuiBusyModule,qm,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),Km=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),Jm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[],imports:[[r.c]]}),e})(),Xm=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[Km],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule,Jm]]}),e})(),Ym=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiIconModule,l.NuiSpinnerModule,l.NuiTableModule,l.NuiBusyModule,Xm,l.NuiChipsModule,l.NuiPopoverModule]]}),e})(),Zm=(()=>{class e{appendHiddenFilters(e){const t=[];let n=e.itemsToDisplay?e.itemsToDisplay:10;const i=e.allFilterOptions.slice(0,n).map(e=>e.value),r=e.selectedFilterValues,o=Fn()(r,i);return 0!==o.length&&(o.forEach(n=>{t.push(e.allFilterOptions.filter(e=>e.value===n))}),On()(t).forEach(t=>{e.allFilterOptions.splice(e.allFilterOptions.indexOf(t),1),e.allFilterOptions.splice(n,0,t),n+=1}),e.itemsToDisplay=n),Object.assign({},e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),ef=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[Zm],imports:[[r.c,l.NuiCheckboxModule,l.NuiDialogModule,l.NuiDividerModule,l.NuiExpanderModule,l.NuiPopoverModule]]}),e})(),tf=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},imports:[[r.c,l.NuiPaginatorModule,l.NuiPanelModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiSpinnerModule,l.NuiBusyModule,l.NuiIconModule,l.NuiButtonModule,l.NuiExpanderModule,ef,l.NuiChipsModule,l.NuiPopoverModule,cm.c]]}),e})();var nf=function(e){return e.active="Active",e.down="Down",e}({});const rf=[{name:"FOCUS-SVR-12345",location:"Kyiv",status:nf.active},{name:"Man-LT-ASD123",location:"Brno",status:nf.down},{name:"Man-LT-DSA331",location:"Austin",status:nf.active},{name:"Man-LT-JKS212",location:"Kyiv",status:nf.down},{name:"ABERN-SVR-ATQU9404",location:"Kyiv",status:nf.down},{name:"Man-LT-433AAD",location:"Austin",status:nf.down},{name:"FOCUS-SVR-098331",location:"Kyiv",status:nf.active},{name:"Man-LT-GHJ882",location:"Brno",status:nf.down},{name:"Man-LT-LLK001",location:"Austin",status:nf.down},{name:"Man-LT-KKJ998",location:"Kyiv",status:nf.active},{name:"FOCUS-SVR-RRR001",location:"Brno",status:nf.down},{name:"Man-LT-LKJF12",location:"Austin",status:nf.down},{name:"Man-LT-882JJS",location:"Kyiv",status:nf.down},{name:"FOCUS-SVR-7733KK",location:"Brno",status:nf.active},{name:"FOCUS-SVR-JSHNSA",location:"Austin",status:nf.active},{name:"FOCUS-SVR-KKAEQWE",location:"Kyiv",status:nf.down},{name:"FOCUS-SVR-123KKNPQ",location:"Brno",status:nf.active},{name:"Man-LT-RRF231",location:"Austin",status:nf.down}];var of;function af(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,of),s.Vb(),s.Tb())}function lf(e,t){if(1&e&&(s.Wb(0,"div",10),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function sf(e,t){if(1&e&&(s.Wb(0,"div",7),s.Wb(1,"div",8),s.Qc(2,lf,2,1,"div",9),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}of=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`;const cf=function(){return[10,20,30,40]};let uf=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.totalItems=0,this.page=1,this.pageSize=20,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a,this.dataSource.setData(rf)}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe(),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;this.filteringState=e,this.totalItems=null!==(n=null===(t=e.paginator)||void 0===t?void 0:t.total)&&void 0!==n?n:0,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-basic-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.PaginatorComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:l.ClientSideDataSource}])],decls:11,vars:13,consts:[[1,"d-flex","flex-row"],[1,"app-basic-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-basic-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-basic-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource"],[1,"app-basic-list-paginator",3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"div",0),s.Wb(2,"nui-sorter",1),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(3,"nui-search",2),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(4,"div",0),s.Qc(5,af,3,0,"ng-container",3),s.Rb(6,"nui-repeat",4),s.Vb(),s.Wb(7,"div",0),s.Wb(8,"nui-paginator",5),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(){return t.applyFilters()})),s.Vb(),s.Vb(),s.Vb(),s.Qc(9,sf,4,3,"ng-template",null,6,s.Rc)),2&e){const e=s.Gc(10);s.Eb(2),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",0===(null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource.length)),s.Eb(1),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",e)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource),s.Eb(2),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(12,cf))("total",null==t.filteringState.paginator?null:t.filteringState.paginator.total)}},directives:[na.a,ia.a,r.t,Ki.a,ra.a,r.s],pipes:[r.l],styles:["[_nghost-%COMP%]   .app-basic-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-basic-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-basic-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-basic-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-basic-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}"],changeDetection:0}),e})();var pf=function(e){return e.active="Active",e.down="Down",e}({});const df=[{name:"FOCUS-SVR-12345",location:"Kyiv",status:pf.active},{name:"Man-LT-ASD123",location:"Brno",status:pf.down},{name:"Man-LT-DSA331",location:"Austin",status:pf.active},{name:"Man-LT-JKS212",location:"Kyiv",status:pf.down},{name:"ABERN-SVR-ATQU9404",location:"Kyiv",status:pf.down},{name:"Man-LT-433AAD",location:"Austin",status:pf.down},{name:"FOCUS-SVR-098331",location:"Kyiv",status:pf.active},{name:"Man-LT-GHJ882",location:"Brno",status:pf.down},{name:"Man-LT-LLK001",location:"Austin",status:pf.down},{name:"Man-LT-KKJ998",location:"Kyiv",status:pf.active},{name:"FOCUS-SVR-RRR001",location:"Brno",status:pf.down},{name:"Man-LT-LKJF12",location:"Austin",status:pf.down},{name:"Man-LT-882JJS",location:"Kyiv",status:pf.down},{name:"FOCUS-SVR-7733KK",location:"Brno",status:pf.active},{name:"FOCUS-SVR-JSHNSA",location:"Austin",status:pf.active},{name:"FOCUS-SVR-KKAEQWE",location:"Kyiv",status:pf.down},{name:"FOCUS-SVR-123KKNPQ",location:"Brno",status:pf.active},{name:"Man-LT-RRF231",location:"Austin",status:pf.down}];var mf,ff=n("qZfl");function hf(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,mf),s.Vb(),s.Tb())}function gf(e,t){if(1&e&&(s.Wb(0,"div",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function bf(e,t){if(1&e&&(s.Wb(0,"div",8),s.Wb(1,"div",9),s.Qc(2,gf,2,1,"div",10),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}mf=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`;const vf=function(){return[10,20,30,40]};let Sf=(()=>{class e{constructor(e,t,n){this.dataSource=e,this.changeDetection=t,this.listService=n,this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.totalItems=0,this.page=1,this.pageSize=20,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a,this.dataSource.setData(df)}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe(),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;this.filteringState=Object.assign(Object.assign({},this.filteringState),e),this.filteringState=this.listService.updateSelectionState(this.filteringState),this.totalItems=null!==(n=null===(t=e.paginator)||void 0===t?void 0:t.total)&&void 0!==n?n:0,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}onSelectorOutput(e){this.filteringState=this.listService.applySelector(e,this.filteringState)}onRepeatOutput(e){this.filteringState=this.listService.selectItems(e,l.RepeatSelectionMode.multi,this.filteringState)}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h),s.Qb(l.ListService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-selection-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.PaginatorComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:l.ClientSideDataSource}])],decls:12,vars:15,consts:[[1,"d-flex","flex-row"],[1,"app-selection-list-selector",3,"checkboxStatus","items","selectionChange"],[1,"app-selection-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-selection-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","multi",1,"app-selection-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource","selectionChange"],[1,"app-selection-list-paginator",3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"div",0),s.Wb(2,"nui-selector",1),s.lc("selectionChange",(function(e){return t.onSelectorOutput(e)})),s.Vb(),s.Wb(3,"nui-sorter",2),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(4,"nui-search",3),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(5,"div",0),s.Qc(6,hf,3,0,"ng-container",4),s.Wb(7,"nui-repeat",5),s.lc("selectionChange",(function(e){return t.onRepeatOutput(e)})),s.Vb(),s.Vb(),s.Wb(8,"div",0),s.Wb(9,"nui-paginator",6),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(){return t.applyFilters()})),s.Vb(),s.Vb(),s.Vb(),s.Qc(10,bf,4,3,"ng-template",null,7,s.Rc)),2&e){const e=s.Gc(11);s.Eb(2),s.wc("checkboxStatus",null==t.filteringState.selector||null==t.filteringState.selector.selectorState?null:t.filteringState.selector.selectorState.checkboxStatus)("items",null==t.filteringState.selector||null==t.filteringState.selector.selectorState?null:t.filteringState.selector.selectorState.selectorItems),s.Eb(1),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",0===(null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource.length)),s.Eb(1),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",e)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource),s.Eb(2),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(14,vf))("total",null==t.filteringState.paginator?null:t.filteringState.paginator.total)}},directives:[ff.a,na.a,ia.a,r.t,Ki.a,ra.a,r.s],pipes:[r.l],styles:["[_nghost-%COMP%]   .app-selection-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-selection-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-selection-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-selection-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-selection-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}"],changeDetection:0}),e})(),wf=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r;const a=null!==(n=null===(t=e.paginator)||void 0===t?void 0:t.value)&&void 0!==n?n:{start:0,end:0};return(new o.c).set("page",Math.ceil(a.start/(a.end-a.start)).toString()).set("pageSize",String(a.end-a.start)).set("searchField","name").set("searchContent",null!==(r=null===(i=e.search)||void 0===i?void 0:i.value)&&void 0!==r?r:"")}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();const yf=["message",$localize`:␟94516fa213706c67ce5a5b5765681d7fb032033a␟3894950702316166331:Loading...`];var If;function Cf(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,If),s.Vb(),s.Tb())}function Ff(e,t){if(1&e&&(s.Wb(0,"div",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function xf(e,t){if(1&e&&(s.Wb(0,"div",8),s.Wb(1,"div",9),s.Qc(2,Ff,2,1,"div",10),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}If=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`;const Of=function(){return[10,20,30,40]};let Vf=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.listItems$=new Xo.a([]),this.filteringState={},this.isBusy=!1,this.totalItems=0,this.page=1,this.pageSize=20,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator},search:{componentInstance:this.search},repeat:{componentInstance:this.repeat}}),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe(),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.listItems$.next((null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[]),this.filteringState=e,this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-search-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.PaginatorComponent,!0),s.Xc(l.SearchComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first),s.Fc(n=s.mc())&&(t.search=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:wf}])],decls:13,vars:13,consts:[["nui-busy","",3,"busy"],["size","large",6,"message"],[1,"d-flex","flex-row"],[1,"d-flex","justify-content-end","app-search-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-search-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource"],[1,"app-search-list-paginator",3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-spinner",1),s.cc(2,yf),s.Vb(),s.Wb(3,"div",2),s.Wb(4,"nui-search",3),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(5,"div",2),s.Qc(6,Cf,3,0,"ng-container",4),s.qc(7,"async"),s.Rb(8,"nui-repeat",5),s.Vb(),s.Wb(9,"div",2),s.Wb(10,"nui-paginator",6),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(){return t.applyFilters()})),s.Vb(),s.Vb(),s.Vb(),s.Qc(11,xf,4,3,"ng-template",null,7,s.Rc)),2&e){const e=s.Gc(12);s.wc("busy",t.isBusy),s.Eb(6),s.wc("ngIf",!t.isBusy&&0===s.rc(7,10,t.listItems$).length),s.Eb(2),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",e)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource),s.Eb(2),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(12,Of))("total",null==t.filteringState.paginator?null:t.filteringState.paginator.total)}},directives:[ea.a,ta.a,ia.a,r.t,Ki.a,ra.a,r.s],pipes:[r.b,r.l],styles:["[_nghost-%COMP%]   .app-search-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-search-list-selector[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-search-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-search-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}"],changeDetection:0}),e})(),Df=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a,l;const s=null!==(n=null===(t=e.paginator)||void 0===t?void 0:t.value)&&void 0!==n?n:{start:0,end:0};let c=(new o.c).set("page",Math.ceil(s.start/(s.end-s.start)).toString()).set("pageSize",String(s.end-s.start)).set("searchField","name").set("searchContent",null!==(r=null===(i=e.search)||void 0===i?void 0:i.value)&&void 0!==r?r:"");return(null===(l=null===(a=e.sorter)||void 0===a?void 0:a.value)||void 0===l?void 0:l.sortBy)&&(c=c.set("sortField",e.sorter.value.sortBy),c=c.set("sortOrder",e.sorter.value.direction.toUpperCase())),c}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();const kf=["message",$localize`:␟94516fa213706c67ce5a5b5765681d7fb032033a␟3894950702316166331:Loading...`];var Gf;function Tf(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,Gf),s.Vb(),s.Tb())}function Ef(e,t){if(1&e&&(s.Wb(0,"div",12),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function _f(e,t){if(1&e&&(s.Wb(0,"div",9),s.Wb(1,"div",10),s.Qc(2,Ef,2,1,"div",11),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}Gf=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`;const Pf=function(){return[10,20,30,40]};let Mf=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.listItems$=new Xo.a([]),this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.isBusy=!1,this.totalItems=0,this.page=1,this.pageSize=20,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe(),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.listItems$.next((null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[]),this.filteringState=e,this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-paginated-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.PaginatorComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:Df}])],decls:14,vars:16,consts:[["nui-busy","",3,"busy"],["size","large",6,"message"],[1,"d-flex","flex-row"],[1,"app-paginated-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-paginated-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-paginated-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource"],[1,"app-paginated-list-paginator",3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-spinner",1),s.cc(2,kf),s.Vb(),s.Wb(3,"div",2),s.Wb(4,"nui-sorter",3),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(5,"nui-search",4),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Qc(7,Tf,3,0,"ng-container",5),s.qc(8,"async"),s.Rb(9,"nui-repeat",6),s.Vb(),s.Wb(10,"div",2),s.Wb(11,"nui-paginator",7),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(){return t.applyFilters()})),s.Vb(),s.Vb(),s.Vb(),s.Qc(12,_f,4,3,"ng-template",null,8,s.Rc)),2&e){const e=s.Gc(13);s.wc("busy",t.isBusy),s.Eb(4),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",!t.isBusy&&0===s.rc(8,13,t.listItems$).length),s.Eb(2),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",e)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",null==t.filteringState.repeat?null:t.filteringState.repeat.itemsSource),s.Eb(2),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(15,Pf))("total",null==t.filteringState.paginator?null:t.filteringState.paginator.total)}},directives:[ea.a,ta.a,na.a,ia.a,r.t,Ki.a,ra.a,r.s],pipes:[r.b,r.l],styles:["[_nghost-%COMP%]   .app-paginated-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%}[_nghost-%COMP%]   .app-paginated-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-paginated-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-paginated-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}[_nghost-%COMP%]   .app-paginated-list-paginator[_ngcontent-%COMP%]{flex-grow:1;margin:0 15px}"],changeDetection:0}),e})(),Rf=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a,l;const s=null!==(n=null===(t=e.virtualScroll)||void 0===t?void 0:t.value)&&void 0!==n?n:{start:0,end:0};let c=(new o.c).set("page",Math.ceil(s.start/(s.end-s.start)).toString()).set("pageSize",String(400)).set("searchField","name").set("searchContent",null!==(r=null===(i=e.search)||void 0===i?void 0:i.value)&&void 0!==r?r:"");return(null===(l=null===(a=e.sorter)||void 0===a?void 0:a.value)||void 0===l?void 0:l.sortBy)&&(c=c.set("sortField",e.sorter.value.sortBy),c=c.set("sortOrder",e.sorter.value.direction.toUpperCase())),c}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();const Nf=["message",$localize`:␟94516fa213706c67ce5a5b5765681d7fb032033a␟3894950702316166331:Loading...`];var jf,Af,Wf;function Lf(e,t){1&e&&(s.Ub(0),s.Wb(1,"span"),s.ac(2,Af),s.Vb(),s.Tb())}function Bf(e,t){1&e&&(s.Ub(0),s.ac(1,Wf),s.Tb())}function Qf(e,t){1&e&&(s.Wb(0,"strong"),s.Sc(1,". All items loaded."),s.Vb())}function Uf(e,t){if(1&e&&(s.Wb(0,"div",17),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.value," ")}}function $f(e,t){if(1&e&&(s.Wb(0,"div",14),s.Wb(1,"div",15),s.Qc(2,Uf,2,1,"div",16),s.qc(3,"keyvalue"),s.Vb(),s.Vb()),2&e){const e=t.item;s.Eb(2),s.wc("ngForOf",s.rc(3,1,e))}}jf=$localize`:␟1ae5c08c331fd8d2c45ea42026a8aa178bc87a61␟6512488772217581476: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `,Af=$localize`:␟e4e28b371f8453e22779db590cb0fe67f2a080e8␟7839102902838664367:No results`,Wf=$localize`:␟b12cc7551005a9787976bb8d2a161113feed479a␟9056616360897919297:, scroll down for more.`;let zf=(()=>{class e{constructor(e,t,n){this.dataSource=e,this.changeDetection=t,this.viewportManager=n,this.listItems$=new Xo.a([]),this.sorterItems=[{title:$localize`Name`,value:"name"},{title:$localize`Status`,value:"status"},{title:$localize`Location`,value:"location"}],this.initialSortDirection=l.SorterDirection.ascending,this.sortBy=this.sorterItems[0].value,this.filteringState={},this.isBusy=!1,this.totalItems=0,this.itemConfig={trackBy:(e,t)=>null==t?void 0:t.name},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({virtualScroll:{componentInstance:this.viewportManager},search:{componentInstance:this.search},sorter:{componentInstance:this.sorter},repeat:{componentInstance:this.repeat}}),this.viewportManager.setViewport(this.repeat.viewportRef).observeNextPage$({pageSize:400}).pipe(Object(Aa.a)(()=>{const e=this.listItems$.getValue();return!e.length||e.length<this.totalItems}),Object(Yo.a)(()=>this.applyFilters(!1)),Object(Wa.a)(()=>this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;const i=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];this.listItems$.next(this.listItems$.getValue().concat(i)),this.totalItems=(null===(n=e.paginator)||void 0===n?void 0:n.total)||0,this.changeDetection.detectChanges()}))),Object(Zo.a)(this.destroy$)).subscribe(),this.search.focusChange.pipe(Object(Yo.a)(e=>Object(c.b)(this,void 0,void 0,(function*(){!e&&this.dataSource.filterChanged(Object(l.nameof)("search"))&&(yield this.applyFilters())}))),Object(Zo.a)(this.destroy$)).subscribe()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onCancelSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.listItems$.next([]),this.changeDetection.detectChanges()),yield this.dataSource.applyFilters()}))}onSorterAction(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortBy=e.newValue.sortBy,yield this.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h),s.Qb(l.VirtualViewportManager))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-virtual-scroll-list"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.RepeatComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.SorterComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.repeat=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.sorter=n.first))},features:[s.Db([l.VirtualViewportManager,{provide:l.DataSourceService,useClass:Rf}])],decls:24,vars:23,consts:[["nui-busy","",3,"busy"],["size","large",6,"message"],[1,"d-flex","flex-row"],[1,"app-virtual-scroll-list-sorter",3,"itemsSource","selectedItem","sortDirection","sorterAction"],[1,"d-flex","justify-content-end","app-virtual-scroll-list-search",3,"search","cancel"],[4,"ngIf"],["selectionMode","none",1,"app-virtual-scroll-list-repeat",3,"itemConfig","repeatItemTemplateRef","selection","itemsSource","virtualScroll","itemSize"],[1,"app-virtual-scroll-list-scrolling-footer"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],[4,"ngIf","ngIfElse"],["endOfData",""],["listRepeatItemTemplate",""],[1,"container"],[1,"row"],["class","col-sm",4,"ngFor","ngForOf"],[1,"col-sm"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"nui-spinner",1),s.cc(2,Nf),s.Vb(),s.Wb(3,"div",2),s.Wb(4,"nui-sorter",3),s.lc("sorterAction",(function(e){return t.onSorterAction(e)})),s.Vb(),s.Wb(5,"nui-search",4),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onCancelSearch()})),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Qc(7,Lf,3,0,"ng-container",5),s.qc(8,"async"),s.Rb(9,"nui-repeat",6),s.qc(10,"async"),s.Vb(),s.Wb(11,"footer",7),s.Wb(12,"div",8),s.Wb(13,"div",9),s.Wb(14,"div",10),s.ac(15,jf),s.qc(16,"async"),s.Vb(),s.Wb(17,"div",10),s.Qc(18,Bf,2,0,"ng-container",11),s.qc(19,"async"),s.Qc(20,Qf,2,0,"ng-template",null,12,s.Rc),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Vb(),s.Qc(22,$f,4,3,"ng-template",null,13,s.Rc)),2&e){const e=s.Gc(21),n=s.Gc(23);s.wc("busy",t.isBusy),s.Eb(4),s.wc("itemsSource",t.sorterItems)("selectedItem",t.sortBy)("sortDirection",t.initialSortDirection),s.Eb(3),s.wc("ngIf",!t.isBusy&&0===s.rc(8,15,t.listItems$).length),s.Eb(2),s.wc("itemConfig",t.itemConfig)("repeatItemTemplateRef",n)("selection",null==t.filteringState.repeat?null:t.filteringState.repeat.selectedItems)("itemsSource",s.rc(10,17,t.listItems$))("virtualScroll",!0)("itemSize",30),s.Eb(7),s.ec(s.rc(16,19,t.listItems$).length)(t.totalItems),s.bc(15),s.Eb(2),s.wc("ngIf",s.rc(19,21,t.listItems$).length!==t.totalItems)("ngIfElse",e)}},directives:[ea.a,ta.a,na.a,ia.a,r.t,Ki.a,r.s],pipes:[r.b,r.l],styles:["[_nghost-%COMP%]   .app-virtual-scroll-list-repeat[_ngcontent-%COMP%]{margin:10px 15px;width:100%;height:300px}[_nghost-%COMP%]   .app-virtual-scroll-list-selector[_ngcontent-%COMP%], [_nghost-%COMP%]   .app-virtual-scroll-list-sorter[_ngcontent-%COMP%]{flex-grow:0;margin-left:15px}[_nghost-%COMP%]   .app-virtual-scroll-list-search[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}"],changeDetection:0}),e})(),qf=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-list-schematics-docs-example"]],features:[s.Db([{provide:Nl,useValue:Nl.list}])],decls:120,vars:1,consts:[["schematicFolderName","list"],["schematicSummary",""],["name","selectionMode"],["name","pagingMode"],["name","dataSource"],["name","enableSearch"],["name","enableSort"],["schematicExamples",""],["heading","Basic"],["target","_blank","href","../injectables/ClientSideDataSource.html"],["exampleFolderName","basic-list"],["heading","Selection"],["target","_blank","href","../injectables/ListService.html"],["exampleFolderName","selection-list"],["heading","Search"],["exampleFolderName","search-list"],["heading","Pagination"],["exampleFolderName","paginated-list"],["heading","Virtual Scroll"],["type","warning",3,"allowDismiss"],["exampleFolderName","virtual-scroll-list"]],template:function(e,t){1&e&&(s.Wb(0,"nui-schematic-docs-page",0),s.Wb(1,"div",1),s.Wb(2,"p"),s.Sc(3," The List schematic provides the ability to create a generic list that can cover a majority of use cases for a list. Its main responsibility is to integrate the functionality of the "),s.Wb(4,"code"),s.Sc(5,"nui-repeat"),s.Vb(),s.Sc(6," component with other components commonly used with a list such as "),s.Wb(7,"code"),s.Sc(8,"nui-selector"),s.Vb(),s.Sc(9,", "),s.Wb(10,"code"),s.Sc(11,"nui-search"),s.Vb(),s.Sc(12,", "),s.Wb(13,"code"),s.Sc(14,"nui-paginator"),s.Vb(),s.Sc(15,", and "),s.Wb(16,"code"),s.Sc(17,"nui-sorter"),s.Vb(),s.Sc(18,". "),s.Vb(),s.Wb(19,"h2"),s.Sc(20,"Notable Command Line Options"),s.Vb(),s.Rb(21,"nui-schematic-cli-option",2),s.Rb(22,"nui-schematic-cli-option",3),s.Rb(23,"nui-schematic-cli-option",4),s.Rb(24,"nui-schematic-cli-option",5),s.Rb(25,"nui-schematic-cli-option",6),s.Vb(),s.Wb(26,"nui-tab-group",7),s.Wb(27,"nui-tab",8),s.Wb(28,"h2"),s.Sc(29,"Basic Usage"),s.Vb(),s.Wb(30,"p"),s.Sc(31," This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the "),s.Wb(32,"a",9),s.Wb(33,"code"),s.Sc(34,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(35," service, which can be extended with custom filtering behavior. "),s.Vb(),s.Wb(36,"nui-schematic-docs-command"),s.Sc(37,"ng g @nova-ui/bits:list --name=basic-list --p=app"),s.Vb(),s.Wb(38,"nui-schematic-docs-example",10),s.Rb(39,"app-basic-list"),s.Vb(),s.Vb(),s.Wb(40,"nui-tab",11),s.Wb(41,"h2"),s.Sc(42,"List with Selection"),s.Vb(),s.Wb(43,"p"),s.Sc(44," Selection is facilitated by the "),s.Wb(45,"a",12),s.Wb(46,"code"),s.Sc(47,"ListService"),s.Vb(),s.Vb(),s.Sc(48," and can be enabled by running the CLI command with the "),s.Wb(49,"code"),s.Sc(50,"selectionMode"),s.Vb(),s.Sc(51," option set to one of the selection-enabling values listed under "),s.Wb(52,"strong"),s.Sc(53,"Notable Command Line Options"),s.Vb(),s.Sc(54," section above. The initial selection can be set using the "),s.Wb(55,"code"),s.Sc(56,"selection"),s.Vb(),s.Sc(57," input of the "),s.Wb(58,"code"),s.Sc(59,"nui-repeat"),s.Vb(),s.Sc(60,". Selection changes can be intercepted using the "),s.Wb(61,"code"),s.Sc(62,"selectionChange"),s.Vb(),s.Sc(63," output of the "),s.Wb(64,"code"),s.Sc(65,"nui-repeat"),s.Vb(),s.Sc(66,". "),s.Vb(),s.Wb(67,"nui-schematic-docs-command"),s.Sc(68,"ng g @nova-ui/bits:list --name=selection-list --p=app "),s.Wb(69,"strong"),s.Sc(70,"--selectionMode=multi"),s.Vb(),s.Vb(),s.Wb(71,"nui-schematic-docs-example",13),s.Rb(72,"app-selection-list"),s.Vb(),s.Vb(),s.Wb(73,"nui-tab",14),s.Wb(74,"h2"),s.Sc(75,"Search Properties"),s.Vb(),s.Wb(76,"p"),s.Sc(77," To specify fields for search, pass a properties array to the "),s.Wb(78,"code"),s.Sc(79,"setSearchProperties"),s.Vb(),s.Sc(80," method exposed by the "),s.Wb(81,"a",9),s.Wb(82,"code"),s.Sc(83,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(84," service. If no properties are specified, the search will be performed on all fields. "),s.Vb(),s.Wb(85,"nui-schematic-docs-command"),s.Sc(86," ng g @nova-ui/bits:list --name=search-list --p=app --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-sort=false "),s.Wb(87,"strong"),s.Sc(88,"--enable-search=true"),s.Vb(),s.Vb(),s.Wb(89,"nui-schematic-docs-example",15),s.Rb(90,"app-search-list"),s.Vb(),s.Vb(),s.Wb(91,"nui-tab",16),s.Wb(92,"h2"),s.Sc(93,"Pagination"),s.Vb(),s.Wb(94,"p"),s.Sc(95," This example shows how to add pagination to "),s.Wb(96,"code"),s.Sc(97,"nui-repeat"),s.Vb(),s.Sc(98," with a remote data source. "),s.Vb(),s.Wb(99,"nui-schematic-docs-command"),s.Sc(100,"ng g @nova-ui/bits:list --name=paginated-list --p=app --pagingMode=pagination --dataSource=serverSide"),s.Vb(),s.Wb(101,"nui-schematic-docs-example",17),s.Rb(102,"app-paginated-list"),s.Vb(),s.Vb(),s.Wb(103,"nui-tab",18),s.Wb(104,"h2"),s.Sc(105,"Virtual Scroll"),s.Vb(),s.Wb(106,"p"),s.Sc(107," This example shows how to add virtual scroll to "),s.Wb(108,"code"),s.Sc(109,"nui-repeat"),s.Vb(),s.Sc(110," with a remote data source. "),s.Vb(),s.Wb(111,"nui-message",19),s.Sc(112," Since the example makes use of search and sorting filters, it's important to note that the viewport manager's paging progress must be reset each time the data is refreshed with new filtered results. The reset invocation can be seen in the "),s.Wb(113,"code"),s.Sc(114,"virtual-scroll-list.component.ts:doSearch"),s.Vb(),s.Sc(115," method. "),s.Vb(),s.Wb(116,"nui-schematic-docs-command"),s.Sc(117,"ng g @nova-ui/bits:list --name=scrollable-list --p=app --pagingMode=virtualScroll --dataSource=serverSide"),s.Vb(),s.Wb(118,"nui-schematic-docs-example",20),s.Rb(119,"app-virtual-scroll-list"),s.Vb(),s.Vb(),s.Vb(),s.Vb()),2&e&&(s.Eb(111),s.wc("allowDismiss",!1))},directives:[ei,jl,ti.a,ni.a,ai,Vi,uf,Sf,Vf,Mf,ii.a,zf],encapsulation:2}),e})(),Hf=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["schematics-docs-outlet"]],decls:1,vars:0,template:function(e,t){1&e&&s.Rb(0,"router-outlet")},directives:[a.h],encapsulation:2}),e})();function Kf(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Enum: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.addJsonScheme[e].enum)}}function Jf(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Alias: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.addJsonScheme[e].alias)}}function Xf(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Default: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.addJsonScheme[e].default)}}function Yf(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"nui-expander",1),s.Wb(2,"div"),s.Wb(3,"i"),s.Sc(4,"Description: "),s.Vb(),s.Wb(5,"span"),s.Sc(6),s.Vb(),s.Vb(),s.Wb(7,"div"),s.Wb(8,"i"),s.Sc(9,"Type: "),s.Vb(),s.Wb(10,"span"),s.Sc(11),s.Vb(),s.Vb(),s.Qc(12,Kf,5,1,"div",2),s.Qc(13,Jf,5,1,"div",2),s.Qc(14,Xf,5,1,"div",2),s.Vb(),s.Vb()),2&e){const e=t.$implicit,n=s.pc();s.Eb(1),s.wc("header",e),s.Eb(5),s.Tc(n.addJsonScheme[e].description),s.Eb(5),s.Tc(n.addJsonScheme[e].type),s.Eb(1),s.wc("ngIf",n.addJsonScheme[e].enum),s.Eb(1),s.wc("ngIf",n.addJsonScheme[e].alias),s.Eb(1),s.wc("ngIf",n.addJsonScheme[e].default)}}function Zf(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Enum: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.layoutJsonScheme[e].enum)}}function eh(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Alias: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.layoutJsonScheme[e].alias)}}function th(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Default: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.layoutJsonScheme[e].default)}}function nh(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"nui-expander",1),s.Wb(2,"div"),s.Wb(3,"i"),s.Sc(4,"Description: "),s.Vb(),s.Wb(5,"span"),s.Sc(6),s.Vb(),s.Vb(),s.Wb(7,"div"),s.Wb(8,"i"),s.Sc(9,"Type: "),s.Vb(),s.Wb(10,"span"),s.Sc(11),s.Vb(),s.Vb(),s.Qc(12,Zf,5,1,"div",2),s.Qc(13,eh,5,1,"div",2),s.Qc(14,th,5,1,"div",2),s.Vb(),s.Vb()),2&e){const e=t.$implicit,n=s.pc();s.Eb(1),s.wc("header",e),s.Eb(5),s.Tc(n.layoutJsonScheme[e].description),s.Eb(5),s.Tc(n.layoutJsonScheme[e].type),s.Eb(1),s.wc("ngIf",n.layoutJsonScheme[e].enum),s.Eb(1),s.wc("ngIf",n.layoutJsonScheme[e].alias),s.Eb(1),s.wc("ngIf",n.layoutJsonScheme[e].default)}}function ih(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Enum: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.tableJsonScheme[e].enum)}}function rh(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Alias: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.tableJsonScheme[e].alias)}}function oh(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"i"),s.Sc(2,"Default: "),s.Vb(),s.Wb(3,"span"),s.Sc(4),s.Vb(),s.Vb()),2&e){const e=s.pc().$implicit,t=s.pc();s.Eb(4),s.Tc(t.tableJsonScheme[e].default)}}function ah(e,t){if(1&e&&(s.Wb(0,"div"),s.Wb(1,"nui-expander",1),s.Wb(2,"div"),s.Wb(3,"i"),s.Sc(4,"Description: "),s.Vb(),s.Wb(5,"span"),s.Sc(6),s.Vb(),s.Vb(),s.Wb(7,"div"),s.Wb(8,"i"),s.Sc(9,"Type: "),s.Vb(),s.Wb(10,"span"),s.Sc(11),s.Vb(),s.Vb(),s.Qc(12,ih,5,1,"div",2),s.Qc(13,rh,5,1,"div",2),s.Qc(14,oh,5,1,"div",2),s.Vb(),s.Vb()),2&e){const e=t.$implicit,n=s.pc();s.Eb(1),s.wc("header",e),s.Eb(5),s.Tc(n.tableJsonScheme[e].description),s.Eb(5),s.Tc(n.tableJsonScheme[e].type),s.Eb(1),s.wc("ngIf",n.tableJsonScheme[e].enum),s.Eb(1),s.wc("ngIf",n.tableJsonScheme[e].alias),s.Eb(1),s.wc("ngIf",n.tableJsonScheme[e].default)}}const lh=n("mz2x"),sh=n("NuWa"),ch=n("DqLo");let uh=(()=>{class e{constructor(){this.layoutJsonScheme={},this.tableJsonScheme={},this.addJsonScheme={},this.objectKeys=Object.keys,this.schemaObjectFiller(lh.properties,"layout"),this.schemaObjectFiller(sh.properties,"table"),this.schemaObjectFiller(ch.properties,"add")}schemaObjectFiller(e,t){const n=this[t+"JsonScheme"];for(const i of this.objectKeys(e))n[i]={description:e[i].description,type:e[i].type},e[i].enum&&(n[i].enum=e[i].enum),e[i].default&&(n[i].default=e[i].default),e[i].alias&&(n[i].alias=e[i].alias)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["schematics-docs"]],decls:42,vars:3,consts:[[4,"ngFor","ngForOf"],[3,"header"],[4,"ngIf"]],template:function(e,t){1&e&&(s.Wb(0,"h1"),s.Sc(1," bits schematics\n"),s.Vb(),s.Wb(2,"div"),s.Sc(3," All schematics work in similar way. To use them, you can call it by first doing "),s.Wb(4,"code"),s.Sc(5,"ng add @nova-ui/bits"),s.Vb(),s.Sc(6," then "),s.Wb(7,"code"),s.Sc(8,"ng g @nova-ui/bits:SCHEMATICNAME"),s.Vb(),s.Sc(9," and add option, available for each schematic. "),s.Wb(10,"b"),s.Sc(11,"Note:"),s.Vb(),s.Sc(12," for most of the schematics, name can be set without specifying option, just type it as the first argument in command line.\n"),s.Vb(),s.Wb(13,"div"),s.Wb(14,"h2"),s.Sc(15,"Ng-add schematic guide"),s.Vb(),s.Wb(16,"p"),s.Sc(17,"Bootstraps nova-composites for consumption in your project. Adds it package.json and does "),s.Wb(18,"code"),s.Sc(19,"npm install"),s.Vb(),s.Sc(20,"."),s.Vb(),s.Qc(21,Yf,15,6,"div",0),s.Vb(),s.Wb(22,"div"),s.Wb(23,"h2"),s.Sc(24,"Layout schematic guide"),s.Vb(),s.Wb(25,"p"),s.Sc(26,"Use "),s.Wb(27,"code"),s.Sc(28,"ng g @nova-ui/bits:layout"),s.Vb(),s.Sc(29," to generate basic layout example that can be used in you project out of the box."),s.Vb(),s.Wb(30,"p"),s.Sc(31,"Use the following options in the command line to modify schematic's execution:"),s.Vb(),s.Qc(32,nh,15,6,"div",0),s.Vb(),s.Wb(33,"div"),s.Wb(34,"h2"),s.Sc(35,"Table schematic guide"),s.Vb(),s.Wb(36,"p"),s.Sc(37,"In your command line, type "),s.Wb(38,"code"),s.Sc(39,"ng g @nova-ui/bits:table"),s.Vb(),s.Sc(40,"to generate table."),s.Vb(),s.Qc(41,ah,15,6,"div",0),s.Vb()),2&e&&(s.Eb(21),s.wc("ngForOf",t.objectKeys(t.addJsonScheme)),s.Eb(11),s.wc("ngForOf",t.objectKeys(t.layoutJsonScheme)),s.Eb(9),s.wc("ngForOf",t.objectKeys(t.tableJsonScheme)))},directives:[r.s,ui.a,r.t],encapsulation:2}),e})();var ph=function(e){return e.active="Active",e.down="Down",e}({});const dh=[{name:"FOCUS-SVR-12345",location:"Kyiv",status:ph.active},{name:"Man-LT-ASD123",location:"Brno",status:ph.down},{name:"Man-LT-DSA331",location:"Austin",status:ph.active},{name:"Man-LT-JKS212",location:"Kyiv",status:ph.down},{name:"ABERN-SVR-ATQU9404",location:"Kyiv",status:ph.down},{name:"Man-LT-433AAD",location:"Austin",status:ph.down},{name:"FOCUS-SVR-098331",location:"Kyiv",status:ph.active},{name:"Man-LT-GHJ882",location:"Brno",status:ph.down},{name:"Man-LT-LLK001",location:"Austin",status:ph.down},{name:"Man-LT-KKJ998",location:"Kyiv",status:ph.active},{name:"FOCUS-SVR-RRR001",location:"Brno",status:ph.down},{name:"Man-LT-LKJF12",location:"Austin",status:ph.down},{name:"Man-LT-882JJS",location:"Kyiv",status:ph.down},{name:"FOCUS-SVR-7733KK",location:"Brno",status:ph.active},{name:"FOCUS-SVR-JSHNSA",location:"Austin",status:ph.active},{name:"FOCUS-SVR-KKAEQWE",location:"Kyiv",status:ph.down},{name:"FOCUS-SVR-123KKNPQ",location:"Brno",status:ph.active},{name:"Man-LT-RRF231",location:"Austin",status:ph.down}];var mh,fh,hh;function gh(e,t){1&e&&(s.Wb(0,"th",10),s.ac(1,mh),s.Vb())}function bh(e,t){if(1&e&&(s.Wb(0,"td",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function vh(e,t){1&e&&(s.Wb(0,"th",10),s.ac(1,fh),s.Vb())}function Sh(e,t){if(1&e&&(s.Wb(0,"td",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function wh(e,t){1&e&&(s.Wb(0,"th",10),s.ac(1,hh),s.Vb())}function yh(e,t){if(1&e&&(s.Wb(0,"td",11),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function Ih(e,t){1&e&&s.Rb(0,"tr",12)}function Ch(e,t){1&e&&s.Rb(0,"tr",13)}mh=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,fh=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,hh=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`;const Fh=function(){return[10,20,50,100]};let xh=(()=>{class e{constructor(e){this.dataSource=e,this.items=[],this.totalItems=0,this.displayedColumns=["name","location","status"],this.page=1,this.pageSize=10,this.destroy$=new An.a,this.dataSource.setData(dh)}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-basic-table"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:l.ClientSideDataSource}])],decls:14,vars:9,consts:[[1,"app-basic-table__container"],["nui-table","",3,"dataSource"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",4,"nuiRowDef","nuiRowDefColumns"],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""]],template:function(e,t){1&e&&(s.Wb(0,"div",0),s.Wb(1,"table",1),s.Ub(2,2),s.Qc(3,gh,2,0,"th",3),s.Qc(4,bh,2,1,"td",4),s.Tb(),s.Ub(5,5),s.Qc(6,vh,2,0,"th",3),s.Qc(7,Sh,2,1,"td",4),s.Tb(),s.Ub(8,6),s.Qc(9,wh,2,0,"th",3),s.Qc(10,yh,2,1,"td",4),s.Tb(),s.Qc(11,Ih,1,0,"tr",7),s.Qc(12,Ch,1,0,"tr",8),s.Vb(),s.Vb(),s.Wb(13,"nui-paginator",9),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e&&(s.Eb(1),s.wc("dataSource",t.items),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(1),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(8,Fh))("total",t.totalItems))},directives:[_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,ra.a,js.a,As.a,Ns.c,Ns.e],styles:[".icon-margin{margin-right:5px}.app-basic-table__container{overflow:auto}"],encapsulation:2}),e})(),Oh=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a;const l=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};let s=(new o.c).set("page",Math.ceil(l.start/(l.end-l.start)).toString()).set("pageSize",String(l.end-l.start)).set("searchField","name").set("searchContent",null!==(i=null===(n=e.search)||void 0===n?void 0:n.value)&&void 0!==i?i:"");return(null===(a=null===(r=e.sorter)||void 0===r?void 0:r.value)||void 0===a?void 0:a.sortBy)&&(s=s.set("sortField",e.sorter.value.sortBy),s=s.set("sortOrder",e.sorter.value.direction.toUpperCase())),s}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Vh,Dh,kh,Gh;function Th(e,t){1&e&&(s.Wb(0,"th",13),s.ac(1,Vh),s.Vb())}function Eh(e,t){if(1&e&&(s.Wb(0,"td",14),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function _h(e,t){1&e&&(s.Wb(0,"th",13),s.ac(1,Dh),s.Vb())}function Ph(e,t){if(1&e&&(s.Wb(0,"td",14),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Mh(e,t){1&e&&(s.Wb(0,"th",13),s.ac(1,kh),s.Vb())}function Rh(e,t){if(1&e&&(s.Wb(0,"td",14),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function Nh(e,t){1&e&&s.Rb(0,"tr",15)}function jh(e,t){1&e&&s.Rb(0,"tr",16)}function Ah(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",17),s.Wb(2,"div",18),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function Wh(e,t){if(1&e&&(s.Wb(0,"div",18),s.Wb(1,"div",19),s.Wb(2,"div",20),s.ac(3,Gh),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length)(e.totalItems),s.bc(3)}}Vh=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Dh=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,kh=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,Gh=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `;const Lh=function(){return[10,20,50,100]};let Bh=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.sortedColumn={sortBy:"name",direction:l.SorterDirection.ascending},this.page=1,this.pageSize=10,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent(this.table.getFilterComponents()),this.dataSource.registerComponent({paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}sortData(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortedColumn=e,yield this.applyFilters()}))}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-table-with-sort"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:Oh}])],decls:18,vars:13,consts:[[1,"app-table-with-sort__container"],["nui-table","",3,"dataSource","sortable","sortedColumn","sortOrderChanged"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",4,"nuiRowDef","nuiRowDefColumns"],[1,"app-table-with-sort-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"table",1),s.lc("sortOrderChanged",(function(e){return t.sortData(e)})),s.Ub(2,2),s.Qc(3,Th,2,0,"th",3),s.Qc(4,Eh,2,1,"td",4),s.Tb(),s.Ub(5,5),s.Qc(6,_h,2,0,"th",3),s.Qc(7,Ph,2,1,"td",4),s.Tb(),s.Ub(8,6),s.Qc(9,Mh,2,0,"th",3),s.Qc(10,Rh,2,1,"td",4),s.Tb(),s.Qc(11,Nh,1,0,"tr",7),s.Qc(12,jh,1,0,"tr",8),s.Vb(),s.Wb(13,"footer",9),s.Qc(14,Ah,4,3,"div",10),s.Qc(15,Wh,4,2,"ng-template",null,11,s.Rc),s.Vb(),s.Vb(),s.Wb(17,"nui-paginator",12),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e){const e=s.Gc(16);s.Eb(1),s.wc("dataSource",t.items)("sortable",!0)("sortedColumn",t.sortedColumn),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",e),s.Eb(3),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(12,Lh))("total",t.totalItems)}},directives:[_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,r.t,ra.a,js.a,As.a,Ns.c,Ns.e,Ic.a],styles:[".icon-margin{margin-right:5px}.app-table-with-sort__container{overflow:auto}.app-table-with-sort-scrolling-footer{height:28px}"],encapsulation:2}),e})(),Qh=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i;const r=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};return(new o.c).set("page",Math.ceil(r.start/(r.end-r.start)).toString()).set("pageSize",String(r.end-r.start)).set("searchField","name").set("searchContent",null!==(i=null===(n=e.search)||void 0===n?void 0:n.value)&&void 0!==i?i:"")}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Uh,$h,zh,qh;function Hh(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,Uh),s.Vb())}function Kh(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function Jh(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,$h),s.Vb())}function Xh(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Yh(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,zh),s.Vb())}function Zh(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function eg(e,t){1&e&&s.Rb(0,"tr",17)}function tg(e,t){1&e&&s.Rb(0,"tr",18)}function ng(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",19),s.Wb(2,"div",20),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function ig(e,t){if(1&e&&(s.Wb(0,"div",20),s.Wb(1,"div",21),s.Wb(2,"div",22),s.ac(3,qh),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length)(e.totalItems),s.bc(3)}}Uh=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,$h=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,zh=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,qh=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `;const rg=function(){return[10,20,50,100]};let og=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.columnsToApplySearch=["name"],this.page=1,this.pageSize=10,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent({search:{componentInstance:this.search},paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),this.search.inputChange.pipe(Object(lu.a)(500),Object(Yo.a)(()=>this.onSearch()),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSearchCancel(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-table-with-search"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:Qh}])],decls:20,vars:12,consts:[[1,"app-table-with-search__container"],[1,"app-table-with-search-searchable__search"],[3,"value","search","cancel"],["nui-table","",3,"dataSource"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",4,"nuiRowDef","nuiRowDefColumns"],[1,"app-table-with-search-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"div",1),s.Wb(2,"nui-search",2),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onSearchCancel()})),s.Vb(),s.Vb(),s.Wb(3,"table",3),s.Ub(4,4),s.Qc(5,Hh,2,0,"th",5),s.Qc(6,Kh,2,1,"td",6),s.Tb(),s.Ub(7,7),s.Qc(8,Jh,2,0,"th",5),s.Qc(9,Xh,2,1,"td",6),s.Tb(),s.Ub(10,8),s.Qc(11,Yh,2,0,"th",5),s.Qc(12,Zh,2,1,"td",6),s.Tb(),s.Qc(13,eg,1,0,"tr",9),s.Qc(14,tg,1,0,"tr",10),s.Vb(),s.Wb(15,"footer",11),s.Qc(16,ng,4,3,"div",12),s.Qc(17,ig,4,2,"ng-template",null,13,s.Rc),s.Vb(),s.Vb(),s.Wb(19,"nui-paginator",14),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e){const e=s.Gc(18);s.Eb(2),s.wc("value",t.searchTerm),s.Eb(1),s.wc("dataSource",t.items),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",e),s.Eb(3),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(11,rg))("total",t.totalItems)}},directives:[ia.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,r.t,ra.a,js.a,As.a,Ns.c,Ns.e,Ic.a],styles:[".icon-margin{margin-right:5px}.app-table-with-search__container{overflow:auto}.app-table-with-search-searchable__search{max-width:350px;margin-bottom:5px;margin-left:auto}.app-table-with-search-scrolling-footer{height:28px}"],encapsulation:2}),e})(),ag=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a;const l=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};let s=(new o.c).set("page",Math.ceil(l.start/(l.end-l.start)).toString()).set("pageSize",String(l.end-l.start)).set("searchField","name").set("searchContent",null!==(i=null===(n=e.search)||void 0===n?void 0:n.value)&&void 0!==i?i:"");return(null===(a=null===(r=e.sorter)||void 0===r?void 0:r.value)||void 0===a?void 0:a.sortBy)&&(s=s.set("sortField",e.sorter.value.sortBy),s=s.set("sortOrder",e.sorter.value.direction.toUpperCase())),s}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var lg,sg,cg,ug;function pg(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,lg),s.Vb())}function dg(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function mg(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,sg),s.Vb())}function fg(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function hg(e,t){1&e&&(s.Wb(0,"th",15),s.ac(1,cg),s.Vb())}function gg(e,t){if(1&e&&(s.Wb(0,"td",16),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function bg(e,t){1&e&&s.Rb(0,"tr",17)}function vg(e,t){1&e&&s.Rb(0,"tr",18)}function Sg(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",19),s.Wb(2,"div",20),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function wg(e,t){if(1&e&&(s.Wb(0,"div",20),s.Wb(1,"div",21),s.Wb(2,"div",22),s.ac(3,ug),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length)(e.totalItems),s.bc(3)}}lg=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,sg=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,cg=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,ug=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `;const yg=function(){return[10,20,50,100]};let Ig=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.sortedColumn={sortBy:"name",direction:l.SorterDirection.ascending},this.columnsToApplySearch=["name"],this.page=1,this.pageSize=10,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent(this.table.getFilterComponents()),this.dataSource.registerComponent({search:{componentInstance:this.search},paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),this.search.inputChange.pipe(Object(lu.a)(500),Object(Yo.a)(()=>this.onSearch()),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSearchCancel(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}sortData(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortedColumn=e,yield this.applyFilters()}))}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-table-with-pagination"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:ag}])],decls:20,vars:14,consts:[[1,"app-table-with-pagination__container"],[1,"app-table-with-pagination-searchable__search"],[3,"value","search","cancel"],["nui-table","",3,"dataSource","sortable","sortedColumn","sortOrderChanged"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",4,"nuiRowDef","nuiRowDefColumns"],[1,"app-table-with-pagination-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"div",1),s.Wb(2,"nui-search",2),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onSearchCancel()})),s.Vb(),s.Vb(),s.Wb(3,"table",3),s.lc("sortOrderChanged",(function(e){return t.sortData(e)})),s.Ub(4,4),s.Qc(5,pg,2,0,"th",5),s.Qc(6,dg,2,1,"td",6),s.Tb(),s.Ub(7,7),s.Qc(8,mg,2,0,"th",5),s.Qc(9,fg,2,1,"td",6),s.Tb(),s.Ub(10,8),s.Qc(11,hg,2,0,"th",5),s.Qc(12,gg,2,1,"td",6),s.Tb(),s.Qc(13,bg,1,0,"tr",9),s.Qc(14,vg,1,0,"tr",10),s.Vb(),s.Wb(15,"footer",11),s.Qc(16,Sg,4,3,"div",12),s.Qc(17,wg,4,2,"ng-template",null,13,s.Rc),s.Vb(),s.Vb(),s.Wb(19,"nui-paginator",14),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e){const e=s.Gc(18);s.Eb(2),s.wc("value",t.searchTerm),s.Eb(1),s.wc("dataSource",t.items)("sortable",!0)("sortedColumn",t.sortedColumn),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",e),s.Eb(3),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(13,yg))("total",t.totalItems)}},directives:[ia.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,r.t,ra.a,js.a,As.a,Ns.c,Ns.e,Ic.a],styles:[".icon-margin{margin-right:5px}.app-table-with-pagination__container{overflow:auto}.app-table-with-pagination-searchable__search{max-width:350px;margin-bottom:5px;margin-left:auto}.app-table-with-pagination-scrolling-footer{height:28px}"],encapsulation:2}),e})(),Cg=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a;const l=(null===(t=e.paginator)||void 0===t?void 0:t.value)||{start:0,end:0};let s=(new o.c).set("page",Math.ceil(l.start/(l.end-l.start)).toString()).set("pageSize",String(l.end-l.start)).set("searchField","name").set("searchContent",null!==(i=null===(n=e.search)||void 0===n?void 0:n.value)&&void 0!==i?i:"");return(null===(a=null===(r=e.sorter)||void 0===r?void 0:r.value)||void 0===a?void 0:a.sortBy)&&(s=s.set("sortField",e.sorter.value.sortBy),s=s.set("sortOrder",e.sorter.value.direction.toUpperCase())),s}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Fg,xg,Og,Vg;function Dg(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Fg),s.Vb())}function kg(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function Gg(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,xg),s.Vb())}function Tg(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Eg(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Og),s.Vb())}function _g(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function Pg(e,t){1&e&&s.Rb(0,"tr",19)}function Mg(e,t){1&e&&s.Rb(0,"tr",20),2&e&&s.wc("rowObject",t.$implicit)}function Rg(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",21),s.Wb(2,"div",22),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function Ng(e,t){if(1&e&&(s.Wb(0,"div",22),s.Wb(1,"div",23),s.Wb(2,"div",24),s.ac(3,Vg),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length)(e.totalItems),s.bc(3)}}Fg=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,xg=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,Og=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,Vg=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `;const jg=function(){return[10,20,50,100]};let Ag=(()=>{class e{constructor(e,t){this.dataSource=e,this.changeDetection=t,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.sortedColumn={sortBy:"name",direction:l.SorterDirection.ascending},this.columnsToApplySearch=["name"],this.page=1,this.pageSize=10,this.selectedItems=[],this.selection={isAllPages:!1,include:["ABERN-SVR-ATQU9404"],exclude:[]},this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent(this.table.getFilterComponents()),this.dataSource.registerComponent({search:{componentInstance:this.search},paginator:{componentInstance:this.paginator}}),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n,i;this.items=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[],this.totalItems=null!==(i=null===(n=e.paginator)||void 0===n?void 0:n.total)&&void 0!==i?i:0}),Object(Zo.a)(this.destroy$)).subscribe(),this.search.inputChange.pipe(Object(lu.a)(500),Object(Yo.a)(()=>this.onSearch()),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSearchCancel(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}sortData(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortedColumn=e,yield this.applyFilters()}))}changePagination(e){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSelectionChanged(e){this.changeDetection.detectChanges()}trackBy(e,t){return t.name}applyFilters(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-table-with-selection"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(l.PaginatorComponent,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.paginator=n.first))},features:[s.Db([{provide:l.DataSourceService,useClass:Cg}])],decls:26,vars:20,consts:[[1,"flex-row-container"],[1,"flex-independent-row-item"],[1,"app-table-with-selection__container"],[1,"app-table-with-selection-searchable__search"],[3,"value","search","cancel"],["nui-table","",3,"dataSource","sortable","sortedColumn","selection","selectable","trackBy","sortOrderChanged","selectionChange"],["nuiColumnDef","name"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nui-row","",3,"rowObject",4,"nuiRowDef","nuiRowDefColumns"],[1,"app-table-with-selection-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],[3,"page","pageSize","pageSizeSet","total","pageChange","pagerAction"],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row","",3,"rowObject"],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"]],template:function(e,t){if(1&e&&(s.Wb(0,"h2"),s.Sc(1,"Selection result"),s.Vb(),s.Wb(2,"div",0),s.Wb(3,"span",1),s.Sc(4),s.qc(5,"json"),s.Vb(),s.Vb(),s.Wb(6,"div",2),s.Wb(7,"div",3),s.Wb(8,"nui-search",4),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onSearchCancel()})),s.Vb(),s.Vb(),s.Wb(9,"table",5),s.lc("sortOrderChanged",(function(e){return t.sortData(e)}))("selectionChange",(function(e){return t.selection=e}))("selectionChange",(function(e){return t.onSelectionChanged(e)})),s.Ub(10,6),s.Qc(11,Dg,2,0,"th",7),s.Qc(12,kg,2,1,"td",8),s.Tb(),s.Ub(13,9),s.Qc(14,Gg,2,0,"th",7),s.Qc(15,Tg,2,1,"td",8),s.Tb(),s.Ub(16,10),s.Qc(17,Eg,2,0,"th",7),s.Qc(18,_g,2,1,"td",8),s.Tb(),s.Qc(19,Pg,1,0,"tr",11),s.Qc(20,Mg,1,1,"tr",12),s.Vb(),s.Wb(21,"footer",13),s.Qc(22,Rg,4,3,"div",14),s.Qc(23,Ng,4,2,"ng-template",null,15,s.Rc),s.Vb(),s.Vb(),s.Wb(25,"nui-paginator",16),s.lc("pageChange",(function(e){return t.page=e}))("pagerAction",(function(e){return t.changePagination(e)})),s.Vb()),2&e){const e=s.Gc(24);s.Eb(4),s.Tc(s.rc(5,17,t.selection)),s.Eb(4),s.wc("value",t.searchTerm),s.Eb(1),s.wc("dataSource",t.items)("sortable",!0)("sortedColumn",t.sortedColumn)("selection",t.selection)("selectable",!0)("trackBy",t.trackBy),s.Eb(10),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",e),s.Eb(3),s.wc("page",t.page)("pageSize",t.pageSize)("pageSizeSet",s.Ac(19,jg))("total",t.totalItems)}},directives:[ia.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,r.t,ra.a,js.a,As.a,Ns.c,Ns.e,Ic.a],pipes:[r.k],styles:[".icon-margin{margin-right:5px}.app-table-with-selection__container{overflow:auto}.app-table-with-selection-searchable__search{max-width:350px;margin-bottom:5px;margin-left:auto}.app-table-with-selection-scrolling-footer{height:28px}"],encapsulation:2}),e})(),Wg=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a;const l=(null===(t=e.virtualScroll)||void 0===t?void 0:t.value)||{start:0,end:0};let s=(new o.c).set("page",Math.ceil(l.start/(l.end-l.start)).toString()).set("pageSize",String(400)).set("searchField","name").set("searchContent",null!==(i=null===(n=e.search)||void 0===n?void 0:n.value)&&void 0!==i?i:"");return(null===(a=null===(r=e.sorter)||void 0===r?void 0:r.value)||void 0===a?void 0:a.sortBy)&&(s=s.set("sortField",e.sorter.value.sortBy),s=s.set("sortOrder",e.sorter.value.direction.toUpperCase())),s}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var Lg,Bg,Qg,Ug,$g;function zg(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Lg),s.Vb()),2&e&&s.Pc("width",30,"%")}function qg(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function Hg(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Bg),s.Vb()),2&e&&s.Pc("width",30,"%")}function Kg(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function Jg(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,Qg),s.Vb())}function Xg(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function Yg(e,t){1&e&&s.Rb(0,"tr",19)}function Zg(e,t){1&e&&s.Rb(0,"tr",20)}function eb(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",21),s.Wb(2,"div",22),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function tb(e,t){1&e&&(s.Ub(0),s.ac(1,$g),s.Tb())}function nb(e,t){1&e&&(s.Wb(0,"strong"),s.Sc(1,". All items loaded."),s.Vb())}function ib(e,t){if(1&e&&(s.Wb(0,"div",22),s.Wb(1,"div",23),s.Wb(2,"div",24),s.ac(3,Ug),s.Vb(),s.Wb(4,"div",24),s.Qc(5,tb,2,0,"ng-container",15),s.Qc(6,nb,2,0,"ng-template",null,25,s.Rc),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.Gc(7),t=s.pc();s.Eb(3),s.ec(t.items.length)(t.totalItems),s.bc(3),s.Eb(2),s.wc("ngIf",t.items.length!==t.totalItems)("ngIfElse",e)}}Lg=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,Bg=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,Qg=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,Ug=$localize`:␟1120c8e1c69eef8eeca529983d97248636c74eb2␟3676096963284033356: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `,$g=$localize`:␟b12cc7551005a9787976bb8d2a161113feed479a␟9056616360897919297:, scroll down for more.`;let rb=(()=>{class e{constructor(e,t,n){this.dataSource=e,this.viewportManager=t,this.changeDetection=n,this.items=[],this.isBusy=!1,this.totalItems=0,this.displayedColumns=["name","location","status"],this.sortedColumn={sortBy:"name",direction:l.SorterDirection.ascending},this.columnsToApplySearch=["name"],this.pageSize=400,this.rowHeight=40,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent(this.table.getFilterComponents()),this.dataSource.registerComponent({search:{componentInstance:this.search},virtualScroll:{componentInstance:this.viewportManager}}),this.viewportManager.setViewport(this.viewport).observeNextPage$({pageSize:this.pageSize}).pipe(Object(Aa.a)(()=>!this.items.length||this.items.length<this.totalItems),Object(Yo.a)(()=>this.applyFilters(!1)),Object(Wa.a)(()=>this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t,n;const i=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];this.items=this.items.concat(i),this.totalItems=(null===(n=e.paginator)||void 0===n?void 0:n.total)||0,this.changeDetection.detectChanges()}))),Object(Zo.a)(this.destroy$)).subscribe(),this.search.inputChange.pipe(Object(lu.a)(500),Object(Yo.a)(()=>this.onSearch()),Object(Zo.a)(this.destroy$)).subscribe()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSearchCancel(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}sortData(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortedColumn=e,yield this.applyFilters()}))}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.items=[]),yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(l.VirtualViewportManager),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-table-with-virtual-scroll"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(i.e,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.viewport=n.first))},features:[s.Db([l.VirtualViewportManager,{provide:l.DataSourceService,useClass:Wg}])],decls:22,vars:14,consts:[[1,"app-table-with-virtual-scroll__container"],[1,"app-table-with-virtual-scroll-searchable__search"],[3,"value","search","cancel"],["tableStickyHeader","",1,"app-table-with-virtual-scroll-scrolling-container",3,"itemSize"],["viewportRef",""],["nui-table","",3,"dataSource","sortable","sortedColumn","sortOrderChanged"],["nuiColumnDef","name"],["nui-header-cell","",3,"width",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nuiRowDef","","cdkVirtualFor","",3,"nuiRowDefColumns","cdkVirtualForOf"],[1,"app-table-with-virtual-scroll-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],["endOfData",""]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"div",1),s.Wb(2,"nui-search",2),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onSearchCancel()})),s.Vb(),s.Vb(),s.Wb(3,"cdk-virtual-scroll-viewport",3,4),s.Wb(5,"table",5),s.lc("sortOrderChanged",(function(e){return t.sortData(e)})),s.qc(6,"sliceRange"),s.Ub(7,6),s.Qc(8,zg,2,2,"th",7),s.Qc(9,qg,2,1,"td",8),s.Tb(),s.Ub(10,9),s.Qc(11,Hg,2,2,"th",7),s.Qc(12,Kg,2,1,"td",8),s.Tb(),s.Ub(13,10),s.Qc(14,Jg,2,0,"th",11),s.Qc(15,Xg,2,1,"td",8),s.Tb(),s.Qc(16,Yg,1,0,"tr",12),s.Qc(17,Zg,1,0,"ng-template",13),s.Vb(),s.Vb(),s.Wb(18,"footer",14),s.Qc(19,eb,4,3,"div",15),s.Qc(20,ib,8,4,"ng-template",null,16,s.Rc),s.Vb(),s.Vb()),2&e){const e=s.Gc(4),n=s.Gc(21);s.Eb(2),s.wc("value",t.searchTerm),s.Eb(1),s.wc("itemSize",t.rowHeight),s.Eb(2),s.wc("dataSource",s.sc(6,11,t.items,e.getRenderedRange()))("sortable",!0)("sortedColumn",t.sortedColumn),s.Eb(11),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns)("cdkVirtualForOf",t.items),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",n)}},directives:[ia.a,i.e,qu.a,i.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,i.d,r.t,js.a,As.a,Ns.c,Ns.e,Ic.a],pipes:[Hu.a],styles:[".icon-margin{margin-right:5px}.app-table-with-virtual-scroll__container{height:400px;border-color:#d3d3d3;overflow:auto}.app-table-with-virtual-scroll-searchable__search{max-width:350px;margin-bottom:5px;margin-left:auto}.app-table-with-virtual-scroll-scrolling-container{height:300px}.app-table-with-virtual-scroll-scrolling-footer{height:28px;background-color:var(--nui-color-bg-transparent,transparent);color:var(--nui-color-text-secondary,rgba(17,17,17,.6))}"],encapsulation:2}),e})();const ob=new s.s("CUSTOM_SCROLL_ITEMS_PER_PAGE");let ab=(()=>{class e extends l.ServerSideDataSource{constructor(e,t){super(),this.logger=e,this.http=t}static getRequestParams(e){var t,n,i,r,a;const l=(null===(t=e.virtualScroll)||void 0===t?void 0:t.value)||{start:0,end:0};let s=(new o.c).set("page",Math.ceil(l.start/(l.end-l.start)).toString()).set("pageSize",String(400)).set("searchField","name").set("searchContent",null!==(i=null===(n=e.search)||void 0===n?void 0:n.value)&&void 0!==i?i:"");return(null===(a=null===(r=e.sorter)||void 0===r?void 0:r.value)||void 0===a?void 0:a.sortBy)&&(s=s.set("sortField",e.sorter.value.sortBy),s=s.set("sortOrder",e.sorter.value.direction.toUpperCase())),s}getFilteredData(e){return Object(c.b)(this,void 0,void 0,(function*(){return Object(No.a)(e).pipe(Object(Ao.a)(e=>({repeat:{itemsSource:e.items},paginator:{total:e.count}}))).toPromise()}))}getBackendData(t){const n=e.getRequestParams(t);return this.http.get("http://nova-pg.swdev.local/api/v1/servers",{params:n}).pipe(Object(Wn.a)(300),Object(Ao.a)(e=>{var t;return{items:(null===(t=e.items)||void 0===t?void 0:t.map(e=>({name:e.name,location:e.location,status:e.status})))||[],count:e.count}}),Object(Wo.a)(e=>(this.logger.error(e),Object(No.a)({items:[],count:0}))))}}return e.\u0275fac=function(t){return new(t||e)(s.hc(l.LoggerService),s.hc(o.a))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})(),lb=(()=>{class e{constructor(e){this.itemsPerPage=e,this.reset()}getFilters(){return{type:"virtualScroll",value:this.virtualScrollRange}}reset(){this.virtualScrollRange={start:0,end:this.itemsPerPage}}prepareNextPage(e){e<this.itemsPerPage||(this.virtualScrollRange.start+=this.itemsPerPage,this.virtualScrollRange.end=this.virtualScrollRange.start+this.itemsPerPage)}}return e.\u0275fac=function(t){return new(t||e)(s.hc(ob))},e.\u0275prov=s.Mb({token:e,factory:e.\u0275fac}),e})();var sb,cb,ub,pb,db;function mb(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,sb),s.Vb()),2&e&&s.Pc("width",30,"%")}function fb(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.name,"")}}function hb(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,cb),s.Vb()),2&e&&s.Pc("width",30,"%")}function gb(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.location,"")}}function bb(e,t){1&e&&(s.Wb(0,"th",17),s.ac(1,ub),s.Vb())}function vb(e,t){if(1&e&&(s.Wb(0,"td",18),s.Sc(1),s.Vb()),2&e){const e=t.$implicit;s.Eb(1),s.Uc(" ",e.status,"")}}function Sb(e,t){1&e&&s.Rb(0,"tr",19)}function wb(e,t){1&e&&s.Rb(0,"tr",20)}function yb(e,t){if(1&e&&(s.Wb(0,"div"),s.Rb(1,"nui-progress",21),s.Wb(2,"div",22),s.Sc(3),s.Vb(),s.Vb()),2&e){const e=s.pc();s.Eb(1),s.wc("show",!0)("compactMode",!0),s.Eb(2),s.Uc("Loading next ",e.pageSize," items...")}}function Ib(e,t){if(1&e){const e=s.Xb();s.Wb(0,"div",22),s.Wb(1,"div",23),s.Wb(2,"div",24),s.ac(3,pb),s.Vb(),s.Wb(4,"div",25),s.Wb(5,"button",26),s.lc("click",(function(){return s.Jc(e),s.pc().applyFilters(!1)})),s.ac(6,db),s.Vb(),s.Vb(),s.Vb(),s.Vb()}if(2&e){const e=s.pc();s.Eb(3),s.ec(e.items.length),s.bc(3),s.Eb(3),s.ec(e.pageSize),s.bc(6)}}sb=$localize`:␟7b07cc6126aa22c8a3041963963e85a0791a7e40␟5923354303687392819: Name`,cb=$localize`:␟4ed56c7c2b85b2b764c9853d121c291db3b70ed9␟7598846418510631873: Location`,ub=$localize`:␟f3ab141a02057a7853b9cde7dea17eef6811e27a␟7043724726246657652: Status`,pb=$localize`:␟677bfeb66424056eb865d0905a76b3664f1f0198␟7826507219035060964: Showing ${"\ufffd0\ufffd"}:INTERPOLATION: item(s). `,db=$localize`:␟ce09af8cb0fdb88d79b2a0e083f9bf3561f34bb7␟2707471651988745654: Load another ${"\ufffd0\ufffd"}:INTERPOLATION: items `;let Cb=(()=>{class e{constructor(e,t,n,i){this.dataSource=e,this.viewportManager=t,this.customVirtualScrollStrategyService=n,this.changeDetection=i,this.items=[],this.isBusy=!1,this.displayedColumns=["name","location","status"],this.sortedColumn={sortBy:"name",direction:l.SorterDirection.ascending},this.columnsToApplySearch=["name"],this.pageSize=400,this.rowHeight=40,this.destroy$=new An.a}ngOnInit(){this.dataSource.busy.pipe(Object(Yo.a)(e=>{this.isBusy=e,this.changeDetection.detectChanges()}),Object(Zo.a)(this.destroy$)).subscribe()}ngAfterViewInit(){return Object(c.b)(this,void 0,void 0,(function*(){this.dataSource.registerComponent(this.table.getFilterComponents()),this.dataSource.registerComponent({search:{componentInstance:this.search},virtualScroll:{componentInstance:this.customVirtualScrollStrategyService}}),this.viewportManager.setViewport(this.viewport),this.dataSource.outputsSubject.pipe(Object(Yo.a)(e=>{var t;let n=(null===(t=e.repeat)||void 0===t?void 0:t.itemsSource)||[];const i=n.length;n=n.slice(0,i<this.pageSize?this.previouslyLoadedCount-i:i),this.previouslyLoadedCount=n.length,this.items=this.items.concat(n),this.customVirtualScrollStrategyService.prepareNextPage(i)}),Object(Zo.a)(this.destroy$)).subscribe(),this.search.inputChange.pipe(Object(lu.a)(500),Object(Yo.a)(()=>this.onSearch()),Object(Zo.a)(this.destroy$)).subscribe(),yield this.applyFilters()}))}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}onSearch(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}onSearchCancel(){return Object(c.b)(this,void 0,void 0,(function*(){yield this.applyFilters()}))}sortData(e){return Object(c.b)(this,void 0,void 0,(function*(){this.sortedColumn=e,yield this.applyFilters()}))}applyFilters(e=!0){var t;return Object(c.b)(this,void 0,void 0,(function*(){e&&this.viewportManager.reset({emitFirstPage:!1});const n=this.dataSource.getFilters();(this.dataSource.computeFiltersChange(n)||0===(null===(t=n.virtualScroll)||void 0===t?void 0:t.value.start))&&(this.items=[],this.customVirtualScrollStrategyService.reset()),yield this.dataSource.applyFilters()}))}}return e.\u0275fac=function(t){return new(t||e)(s.Qb(l.DataSourceService),s.Qb(l.VirtualViewportManager),s.Qb(lb),s.Qb(s.h))},e.\u0275cmp=s.Kb({type:e,selectors:[["app-table-with-custom-virtual-scroll"]],viewQuery:function(e,t){var n;1&e&&(s.Xc(l.TableComponent,!0),s.Xc(l.SearchComponent,!0),s.Xc(i.e,!0)),2&e&&(s.Fc(n=s.mc())&&(t.table=n.first),s.Fc(n=s.mc())&&(t.search=n.first),s.Fc(n=s.mc())&&(t.viewport=n.first))},features:[s.Db([l.VirtualViewportManager,lb,{provide:ob,useValue:400},{provide:l.DataSourceService,useClass:ab}])],decls:22,vars:14,consts:[[1,"app-table-with-custom-virtual-scroll__container"],[1,"app-table-with-custom-virtual-scroll-searchable__search"],[3,"value","search","cancel"],["tableStickyHeader","",1,"app-table-with-custom-virtual-scroll-scrolling-container",3,"itemSize"],["viewportRef",""],["nui-table","",3,"dataSource","sortable","sortedColumn","sortOrderChanged"],["nuiColumnDef","name"],["nui-header-cell","",3,"width",4,"nuiHeaderCellDef"],["nui-cell","",4,"nuiCellDef"],["nuiColumnDef","location"],["nuiColumnDef","status"],["nui-header-cell","",4,"nuiHeaderCellDef"],["nui-header-row","",4,"nuiHeaderRowDef","nuiHeaderRowDefSticky"],["nuiRowDef","","cdkVirtualFor","",3,"nuiRowDefColumns","cdkVirtualForOf"],[1,"app-table-with-custom-virtual-scroll-scrolling-footer"],[4,"ngIf","ngIfElse"],["defaultText",""],["nui-header-cell",""],["nui-cell",""],["nui-header-row",""],["nui-row",""],[3,"show","compactMode"],[1,"d-flex","justify-content-center","align-items-center"],[1,"p-1","d-flex"],[1,"d-flex","pt-3","pb-3"],[1,"d-flex","justify-content-center"],["btn","","nui-button","","type","button","size","default","displayStyle","action",3,"click"]],template:function(e,t){if(1&e&&(s.Wb(0,"div",0),s.Wb(1,"div",1),s.Wb(2,"nui-search",2),s.lc("search",(function(){return t.onSearch()}))("cancel",(function(){return t.onSearchCancel()})),s.Vb(),s.Vb(),s.Wb(3,"cdk-virtual-scroll-viewport",3,4),s.Wb(5,"table",5),s.lc("sortOrderChanged",(function(e){return t.sortData(e)})),s.qc(6,"sliceRange"),s.Ub(7,6),s.Qc(8,mb,2,2,"th",7),s.Qc(9,fb,2,1,"td",8),s.Tb(),s.Ub(10,9),s.Qc(11,hb,2,2,"th",7),s.Qc(12,gb,2,1,"td",8),s.Tb(),s.Ub(13,10),s.Qc(14,bb,2,0,"th",11),s.Qc(15,vb,2,1,"td",8),s.Tb(),s.Qc(16,Sb,1,0,"tr",12),s.Qc(17,wb,1,0,"ng-template",13),s.Vb(),s.Vb(),s.Wb(18,"footer",14),s.Qc(19,yb,4,3,"div",15),s.Qc(20,Ib,7,2,"ng-template",null,16,s.Rc),s.Vb(),s.Vb()),2&e){const e=s.Gc(4),n=s.Gc(21);s.Eb(2),s.wc("value",t.searchTerm),s.Eb(1),s.wc("itemSize",t.rowHeight),s.Eb(2),s.wc("dataSource",s.sc(6,11,t.items,e.getRenderedRange()))("sortable",!0)("sortedColumn",t.sortedColumn),s.Eb(11),s.wc("nuiHeaderRowDef",t.displayedColumns)("nuiHeaderRowDefSticky",!0),s.Eb(1),s.wc("nuiRowDefColumns",t.displayedColumns)("cdkVirtualForOf",t.items),s.Eb(2),s.wc("ngIf",t.isBusy)("ngIfElse",n)}},directives:[ia.a,i.e,qu.a,i.a,_s.a,Ps.a,Ms.a,Rs.a,Ns.d,Ns.f,i.d,r.t,js.a,As.a,Ns.c,Ns.e,Ic.a,yi.a],pipes:[Hu.a],styles:[".icon-margin{margin-right:5px}.app-table-with-custom-virtual-scroll__container{height:400px;border-color:#d3d3d3;overflow:auto}.app-table-with-custom-virtual-scroll-searchable__search{max-width:350px;margin-bottom:5px;margin-left:auto}.app-table-with-custom-virtual-scroll-scrolling-container{height:300px}.app-table-with-custom-virtual-scroll-scrolling-footer{height:28px;background-color:var(--nui-color-bg-transparent,transparent);color:var(--nui-color-text-secondary,rgba(17,17,17,.6))}"],encapsulation:2}),e})();function Fb(e,t){1&e&&s.Rb(0,"app-table-with-virtual-scroll")}function xb(e,t){1&e&&s.Rb(0,"app-table-with-custom-virtual-scroll")}let Ob=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Kb({type:e,selectors:[["nui-table-schematics-docs-example"]],features:[s.Db([{provide:Nl,useValue:Nl.table}])],decls:99,vars:3,consts:[["schematicFolderName","table"],["schematicSummary",""],["name","selectionMode"],["name","pagingMode"],["name","dataSource"],["name","enableSearch"],["name","enableSort"],["schematicExamples",""],["heading","Basic"],["target","_blank","href","../injectables/ClientSideDataSource.html"],["exampleFolderName","basic-table"],["heading","Sort"],["exampleFolderName","table-with-sort"],["heading","Search"],["exampleFolderName","table-with-search"],["heading","Pagination"],["exampleFolderName","table/table-with-pagination"],["heading","Selection"],["exampleFolderName","table/table-with-selection"],["heading","Virtual Scroll"],["vs",""],["type","warning",3,"allowDismiss"],["exampleFolderName","table/table-with-virtual-scroll"],[4,"ngIf"],["heading","Custom Virtual Scroll"],["cvs",""],["exampleFolderName","table/table-with-custom-virtual-scroll"]],template:function(e,t){if(1&e&&(s.Wb(0,"nui-schematic-docs-page",0),s.Wb(1,"div",1),s.Wb(2,"p"),s.Sc(3," The Table schematic provides the ability to create a generic table that can cover a majority of use cases. Its main responsibility is to integrate the functionality of the "),s.Wb(4,"code"),s.Sc(5,"nui-table"),s.Vb(),s.Sc(6," component with other components commonly used with a table such as "),s.Wb(7,"code"),s.Sc(8,"nui-search"),s.Vb(),s.Sc(9," and "),s.Wb(10,"code"),s.Sc(11,"nui-paginator"),s.Vb(),s.Sc(12,". "),s.Vb(),s.Wb(13,"h2"),s.Sc(14,"Notable Command Line Options"),s.Vb(),s.Rb(15,"nui-schematic-cli-option",2),s.Rb(16,"nui-schematic-cli-option",3),s.Rb(17,"nui-schematic-cli-option",4),s.Rb(18,"nui-schematic-cli-option",5),s.Rb(19,"nui-schematic-cli-option",6),s.Vb(),s.Wb(20,"nui-tab-group",7),s.Wb(21,"nui-tab",8),s.Wb(22,"h2"),s.Sc(23,"Basic Usage"),s.Vb(),s.Wb(24,"p"),s.Sc(25," This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the "),s.Wb(26,"a",9),s.Wb(27,"code"),s.Sc(28,"ClientSideDataSource"),s.Vb(),s.Vb(),s.Sc(29," service, which can be extended with custom filtering behavior. "),s.Vb(),s.Wb(30,"nui-schematic-docs-command"),s.Sc(31,"ng g @nova-ui/bits:table --p=app --name=basic-table --enable-search=false --enable-sort=false"),s.Vb(),s.Wb(32,"nui-schematic-docs-example",10),s.Rb(33,"app-basic-table"),s.Vb(),s.Vb(),s.Wb(34,"nui-tab",11),s.Wb(35,"h2"),s.Sc(36,"Table Sorting"),s.Vb(),s.Wb(37,"nui-schematic-docs-command"),s.Sc(38,"ng g @nova-ui/bits:table --p=app --name=table-with-sort --enable-sort --enable-search=false"),s.Vb(),s.Wb(39,"nui-schematic-docs-example",12),s.Rb(40,"app-table-with-sort"),s.Vb(),s.Vb(),s.Wb(41,"nui-tab",13),s.Wb(42,"h2"),s.Sc(43,"Table with Search"),s.Vb(),s.Wb(44,"nui-schematic-docs-command"),s.Sc(45,"ng g @nova-ui/bits:table --p=app --name=table-with-search --enable-search --enable-sort=false"),s.Vb(),s.Wb(46,"nui-schematic-docs-example",14),s.Rb(47,"app-table-with-search"),s.Vb(),s.Vb(),s.Wb(48,"nui-tab",15),s.Wb(49,"h2"),s.Sc(50,"Pagination"),s.Vb(),s.Wb(51,"p"),s.Sc(52," This example shows how to add pagination to "),s.Wb(53,"code"),s.Sc(54,"nui-table"),s.Vb(),s.Sc(55," with a remote data source. "),s.Vb(),s.Wb(56,"nui-schematic-docs-command"),s.Sc(57,"ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide"),s.Vb(),s.Wb(58,"nui-schematic-docs-example",16),s.Rb(59,"app-table-with-pagination"),s.Vb(),s.Vb(),s.Wb(60,"nui-tab",17),s.Wb(61,"h2"),s.Sc(62,"Selection"),s.Vb(),s.Wb(63,"p"),s.Sc(64," This example shows how to add selection to "),s.Wb(65,"code"),s.Sc(66,"nui-table"),s.Vb(),s.Sc(67," with a remote data source. "),s.Vb(),s.Wb(68,"nui-schematic-docs-command"),s.Sc(69,"ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide "),s.Wb(70,"strong"),s.Sc(71,"--selectionMode=multi"),s.Vb(),s.Vb(),s.Wb(72,"nui-schematic-docs-example",18),s.Rb(73,"app-table-with-selection"),s.Vb(),s.Vb(),s.Wb(74,"nui-tab",19,20),s.Wb(76,"h2"),s.Sc(77,"Virtual Scroll"),s.Vb(),s.Wb(78,"p"),s.Sc(79," This example shows how to add virtual scroll to "),s.Wb(80,"code"),s.Sc(81,"nui-repeat"),s.Vb(),s.Sc(82," with a remote data source. "),s.Vb(),s.Wb(83,"nui-message",21),s.Sc(84," Since the example makes use of search and sorting filters, it's important to note that the viewport manager's paging progress must be reset each time the data is refreshed with new filtered results whenever the filters are changed. "),s.Vb(),s.Wb(85,"nui-schematic-docs-command"),s.Sc(86,"ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide"),s.Vb(),s.Wb(87,"nui-schematic-docs-example",22),s.Qc(88,Fb,1,0,"app-table-with-virtual-scroll",23),s.Vb(),s.Vb(),s.Wb(89,"nui-tab",24,25),s.Wb(91,"h2"),s.Sc(92,"Virtual Scroll with Custom Strategy"),s.Vb(),s.Wb(93,"nui-schematic-docs-command"),s.Sc(94," ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide "),s.Wb(95,"strong"),s.Sc(96,"--virtualScrollStrategy=custom"),s.Vb(),s.Vb(),s.Wb(97,"nui-schematic-docs-example",26),s.Qc(98,xb,1,0,"app-table-with-custom-virtual-scroll",23),s.Vb(),s.Vb(),s.Vb(),s.Vb()),2&e){const e=s.Gc(75),t=s.Gc(90);s.Eb(83),s.wc("allowDismiss",!1),s.Eb(5),s.wc("ngIf",e.active),s.Eb(10),s.wc("ngIf",t.active)}},directives:[ei,jl,ti.a,ni.a,ai,Vi,xh,Bh,og,Ig,Ag,ii.a,r.t,rb,Cb],encapsulation:2}),e})();n.d(t,"SchematicModule",(function(){return kb}));var Vb=function(e){return e.Main="",e.List="list",e.ListPagination="list-pagination",e.ListVirtualScroll="list-virtual-scroll",e.Table="table",e.TablePagination="table-pagination",e.TablePaginationSelection="table-pagination-selection",e.TableVirtualScroll="table-virtual-scroll",e.TableVirtualScrollSelection="table-virtual-scroll-selection",e.TableVirtualScrollCustom="table-virtual-scroll-custom",e}({});const Db=[{path:"",component:uh,data:{srlc:{hideIndicator:!0}}},{path:"filtered-view",component:Fm,data:{srlc:{stage:l.SrlcStage.ga},showThemeSwitcher:!0},children:[{path:Vb.Main,component:Cm},{path:Vb.List,component:ds},{path:Vb.ListPagination,component:ba},{path:Vb.ListVirtualScroll,component:tl},{path:Vb.Table,component:ec},{path:Vb.TablePagination,component:Ac},{path:Vb.TablePaginationSelection,component:Fu},{path:Vb.TableVirtualScroll,component:dp},{path:Vb.TableVirtualScrollSelection,component:Yp},{path:Vb.TableVirtualScrollCustom,component:jd}]},{path:"filter-group",component:Io,data:{srlc:{stage:l.SrlcStage.ga},showThemeSwitcher:!0}},{path:"list",component:qf,data:{srlc:{stage:l.SrlcStage.ga},showThemeSwitcher:!0}},{path:"list-outlet",component:Hf,children:[{path:"selection",component:Sf},{path:"vscroll",component:zf}]},{path:"table",component:Ob,data:{srlc:{stage:l.SrlcStage.ga},showThemeSwitcher:!0}},{path:"tree",component:vm,data:{srlc:{stage:l.SrlcStage.ga},showThemeSwitcher:!0}}];let kb=(()=>{class e{}return e.\u0275mod=s.Ob({type:e}),e.\u0275inj=s.Nb({factory:function(t){return new(t||e)},providers:[r.f,Qn,{provide:l.DEMO_PATH_TOKEN,useFactory:()=>n("SLtx")},{provide:it,useFactory:e=>({cache:new In,link:e.create({uri:"https://countries-274616.ew.r.appspot.com/"})}),deps:[Ct]}],imports:[[r.c,ct,xt,l.NuiExpanderModule,l.NuiMessageModule,l.NuiPaginatorModule,l.NuiRepeatModule,l.NuiSearchModule,l.NuiSorterModule,l.NuiSelectorModule,l.NuiToolbarModule,l.NuiCheckboxModule,l.NuiTabsModule,l.NuiSpinnerModule,l.NuiPanelModule,l.NuiTableModule,l.NuiDialogModule,l.NuiBusyModule,l.NuiIconModule,a.g.forChild(Db),Ym,kn,Gn,Tn,Pn,l.NuiDocsModule,l.NuiButtonModule,l.NuiImageModule,o.b,l.NuiPopoverModule,i.g,l.NuiProgressModule,Em,Um,ol,ya,Hm,Ym,tf,l.NuiDividerModule,Rm,Dm,Wm]]}),e})()},yJSH:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins.less";\n\n.nui-filter-group-composite {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},yRPo:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-pagination-table #child></app-filtered-view-table-with-pagination-table>\n        </div>\n    </nui-panel>\n</div>\n'},ymHj:function(e,t,n){"use strict";n.r(t),t.default='import { IMultiFilterMetadata } from "@nova-ui/bits";\n\nexport interface IFilterGroupItem {\n    id: string;\n    title: string;\n    allFilterOptions: IFilterGroupOption[];\n    selectedFilterValues: string[];\n    expanded?: boolean;\n    itemsToDisplay?: number;\n}\n\nexport interface IFilterGroupOption {\n    value: string;\n    displayValue: string;\n    count?: number;\n}\n\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\n    expanded: boolean;\n}\n'},ysPG:function(e,t,n){"use strict";n.r(t),t.default='<div class="mt-2 nui-edge-definer">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                            [filterGroupItem]="filterGroupItem"\n                                            (filterChanged)="applyFilters()"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class="ml-2">\n            <div>\n                <nui-chips [itemsSource]="chipsDataSource"\n                           [overflow]="true"\n                           (chipRemoved)="onClear($event)"\n                           (removeAll)="onClearAll($event)"\n                           (chipsOverflowed)="onChipsOverflow($event)">\n                    <div class="nui-chips-overflowed" #overflowCounterLabel *ngIf="overflowCounter > 0">\n                        <nui-popover trigger="click"\n                                     [popoverOverlayPosition]="overflowPopoverPosition"\n                                     [template]="popoverWithClickTrigger">\n                            <a class="nui-chips-overflowed__counter">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]="overflowSource"\n                            [itemsSource]="chipsDataSource"\n                            (chipRemoved)="onClear($event)"\n                            orientation="vertical">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-custom-virtual-scroll-table #child></app-filtered-view-table-with-custom-virtual-scroll-table>\n        </div>\n    </nui-panel>\n</div>\n'},"z+Y8":function(e,t,n){"use strict";n.r(t),t.default='import { CommonModule } from "@angular/common";\nimport { NgModule } from "@angular/core";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from "@nova-ui/bits";\n\nimport { FilterGroupDialogComponent } from "./filter-group-dialog/filter-group-dialog.component";\nimport { FilterGroupComponent } from "./filter-group.component";\nimport { FilterGroupService } from "./filter-group.service";\nimport { FilterGroupsWrapperComponent } from "./filter-groups-wrapper/filter-groups-wrapper.component";\nimport { ItemPickerModule } from "./item-picker/item-picker.module";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n'},z4Zp:function(e,t,n){"use strict";n.r(t),t.default='<ng-template #emptyListTemplate>\n    <div class="d-flex flex-column align-items-center">\n        <nui-image [isWatermark]="true" image="no-data-to-show"></nui-image>\n        <p class="nui-text-small">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item="item">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-custom-data-source-filter-groups-wrapper>\n            <app-custom-data-source-filter-group *ngFor="let filterGroupItem of filterGroupItems"\n                                        [filterGroupItem]="filterGroupItem"\n                                        (filterChanged)="changeFilters($event)"></app-custom-data-source-filter-group>\n        </app-custom-data-source-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf="hasItems(); else emptyListTemplate">\n            <nui-repeat id="nui-composites-demo-repeat"\n                        [itemsSource]="filteringState.repeat.itemsSource"\n                        [repeatItemTemplateRef]="listRepeatItemTemplate"\n                        paddingSize="normal">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n'},z63J:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\n"},zK64:function(e,t,n){"use strict";n.r(t),t.default='<div class="app-basic-table__container">\n    <table nui-table [dataSource]="items">\n        <ng-container nuiColumnDef="name">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="location">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef="status">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef="let element"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef="displayedColumns; sticky: true"></tr>\n        <tr nui-row *nuiRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n</div>\n\n<nui-paginator [(page)]="page"\n               [pageSize]="pageSize"\n               [pageSizeSet]="[10,20,50,100]"\n               [total]="totalItems"\n               (pagerAction)="changePagination($event)">\n</nui-paginator>\n'},zQdh:function(e,t,n){"use strict";n.r(t),t.default='import { IFilter, INovaFilters } from "@nova-ui/bits";\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    Subregion: ISubregion;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    language?: IFilter<string[]>;\n    currency?: IFilter<string[]>;\n    subregion?: IFilter<string[]>;\n}\n\n// collection of items that we\'ve transformed from the backend API\nexport interface IServersCollection {\n    Subregion: ITreeNode[];\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n\nexport interface ITreeNode {\n    name: string;\n    code?: string;\n    children?: any[];\n}\n\nexport interface ISubregion {\n    name: string;\n    countries: Array<ICountry>;\n}\n\ninterface ICountry {\n    name: string;\n    population: string;\n    officialLanguages: Array<ILanguage>;\n    currencies: Array<ICurrency>;\n}\n\ninterface ILanguage {\n    name: string;\n}\n\ninterface ICurrency {\n    code: string;\n}\n'},zj11:function(e,t,n){"use strict";n.r(t),t.default='@import (reference) "nui-framework-variables";\n@import (reference) "nui-framework-spaces";\n@import (reference) "mixins";\n\n.filter-group {\n    &__header {\n        .setCssVariable(color, nui-color-text-default);\n        font-weight: bold;\n        line-height: @nui-line-height-default;\n        text-overflow: ellipsis;\n    }\n\n    &__show-more-link {\n        cursor: pointer;\n        padding: @nui-space-xs + @nui-space-xxs;\n    }\n\n    &__checkbox {\n        &-value {\n            flex: 0 1 auto;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        &-count {\n            flex: 0 0 auto;\n            margin-left: @nui-space-xs;\n            text-align: right;\n        }\n    }\n}\n'},zlEe:function(e,t,n){"use strict";n.r(t),t.default="// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n"}}]);