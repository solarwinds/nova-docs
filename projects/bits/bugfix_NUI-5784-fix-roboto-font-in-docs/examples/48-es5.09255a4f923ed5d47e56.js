var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21;function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var c=t[o];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"5O8t":function(e,t,o){"use strict";o.r(t);var c=o("8VHZ"),n=o("Fk62"),i=o("U04U"),a=o("Ub9n"),l=o("ZXzp"),b=o("Yvf7"),s=o("lFDV");function u(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",13),a.Sc(1),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("checked",c.isChecked(o)),a.Eb(1),a.Uc(" ",o," ")}}function r(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",14),a.Sc(1),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("hint",c.hints.indexOf(o)>=0?c.hints[c.hints.indexOf(o)]:null)("checked",c.isChecked(o)),a.Eb(1),a.Uc(" ",o," ")}}function h(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",15),a.Sc(1),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("checked",c.isChecked(o)),a.Eb(1),a.Uc(" ",o," ")}}var p,m=((p=function(){function e(t){_classCallCheck(this,e),this.formBuilder=t,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return _createClass(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||p)(a.Qb(c.c))},p.\u0275cmp=a.Kb({type:p,selectors:[["nui-checkbox-group-test-example"]],decls:24,vars:26,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","checkboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"],[3,"value","checked"]],template:function(e,t){1&e&&(a.Wb(0,"div",0),a.Wb(1,"div",1),a.Wb(2,"nui-checkbox-group",2),a.Qc(3,u,2,3,"nui-checkbox",3),a.Wb(4,"nui-checkbox",4),a.Sc(5),a.Vb(),a.Vb(),a.Vb(),a.Wb(6,"div",5),a.Wb(7,"nui-checkbox-group",6),a.Qc(8,r,2,4,"nui-checkbox",7),a.Vb(),a.Vb(),a.Wb(9,"div",5),a.Wb(10,"form",8),a.Wb(11,"nui-checkbox-group",9),a.Qc(12,h,2,3,"nui-checkbox",10),a.Vb(),a.Vb(),a.Vb(),a.Wb(13,"div",5),a.Wb(14,"form",8),a.Wb(15,"nui-checkbox-group",11),a.Wb(16,"nui-checkbox",12),a.Sc(17),a.Vb(),a.Wb(18,"nui-checkbox",12),a.Sc(19),a.Vb(),a.Wb(20,"nui-checkbox",12),a.Sc(21),a.Vb(),a.Wb(22,"nui-checkbox",12),a.Sc(23),a.Vb(),a.Vb(),a.Vb(),a.Vb(),a.Vb()),2&e&&(a.Eb(2),a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables),a.Eb(1),a.wc("value",t.disabledOne)("checked",!t.isChecked(t.disabledOne)),a.Eb(1),a.Tc(t.disabledOne),a.Eb(2),a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables),a.Eb(2),a.wc("formGroup",t.testForm),a.Eb(2),a.wc("ngForOf",t.vegetables),a.Eb(2),a.wc("formGroup",t.testForm),a.Eb(2),a.wc("value",t.vegetables[0])("disabled",!0)("checked",t.isChecked(t.vegetables[0])),a.Eb(1),a.Uc(" ",t.vegetables[0],""),a.Eb(1),a.wc("value",t.vegetables[1])("disabled",!1)("checked",t.isChecked(t.vegetables[1])),a.Eb(1),a.Uc(" ",t.vegetables[1],""),a.Eb(1),a.wc("value",t.vegetables[2])("disabled",!0)("checked",t.isChecked(t.vegetables[2])),a.Eb(1),a.Uc(" ",t.vegetables[2],""),a.Eb(1),a.wc("value",t.vegetables[3])("disabled",!1)("checked",t.isChecked(t.vegetables[3])),a.Eb(1),a.Uc(" ",t.vegetables[3],""))},directives:[l.a,b.s,s.a,c.v,c.n,c.h,c.m,c.f],encapsulation:2}),p),d=o("WDcu"),g=["hint",$localize(_templateObject||(_templateObject=_taggedTemplateLiteral([":\u241fba785d6cbb33a003a3ce1d20077ba67264374284\u241f829155627086234075:This is some help text"])))];function x(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",2),a.cc(1,g),a.Sc(2),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("checked",c.isChecked(o)),a.Eb(2),a.Uc(" ",o," ")}}var k,v=((k=function(){function e(t){_classCallCheck(this,e),this.toastService=t,this.cabbage=$localize(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["Cabbage"]))),this.potato=$localize(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["Potato"]))),this.tomato=$localize(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["Tomato"]))),this.carrot=$localize(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}return _createClass(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}},{key:"onValueChange",value:function(e){this.toastService.success({message:$localize(_templateObject6||(_templateObject6=_taggedTemplateLiteral(["Selected checkboxes: "])))+e})}}]),e}()).\u0275fac=function(e){return new(e||k)(a.Qb(i.ToastService))},k.\u0275cmp=a.Kb({type:k,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],[3,"value","checked",4,"ngFor","ngForOf",6,"hint"],[3,"value","checked",6,"hint"]],template:function(e,t){1&e&&(a.Wb(0,"nui-checkbox-group",0),a.lc("valuesChange",(function(e){return t.onValueChange(e)})),a.Qc(1,x,3,3,"nui-checkbox",1),a.Vb()),2&e&&(a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables))},directives:[l.a,b.s,s.a],encapsulation:2}),k);function f(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",2),a.Sc(1),a.Vb()),2&e){var o=t.$implicit;a.wc("value",o),a.Eb(1),a.Uc(" ",o," ")}}var C,O,V,_=((C=function e(){_classCallCheck(this,e),this.cabbage=$localize(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["Cabbage"]))),this.potato=$localize(_templateObject8||(_templateObject8=_taggedTemplateLiteral(["Potato"]))),this.tomato=$localize(_templateObject9||(_templateObject9=_taggedTemplateLiteral(["Tomato"]))),this.carrot=$localize(_templateObject10||(_templateObject10=_taggedTemplateLiteral(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}).\u0275fac=function(e){return new(e||C)},C.\u0275cmp=a.Kb({type:C,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,t){1&e&&(a.Wb(0,"nui-checkbox-group",0),a.Qc(1,f,2,2,"nui-checkbox",1),a.Vb()),2&e&&(a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables))},directives:[l.a,b.s,s.a],encapsulation:2}),C),j=o("T50m");function w(e,t){1&e&&(a.Wb(0,"nui-message",6),a.Wb(1,"b"),a.ac(2,V),a.Vb(),a.Vb()),2&e&&a.wc("allowDismiss",!0)}function S(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",7),a.Sc(1),a.Vb()),2&e){var o=t.$implicit;a.wc("value",o),a.Eb(1),a.Uc(" ",o," ")}}O=$localize(_templateObject11||(_templateObject11=_taggedTemplateLiteral([":\u241f71c77bb8cecdf11ec3eead24dd1ba506573fa9cd\u241f935187492052582731:Submit"]))),V=$localize(_templateObject12||(_templateObject12=_taggedTemplateLiteral([":\u241faaf9b8331666795542f417fe39c78014513ca737\u241f3498101055154698277:Select minimum 3 checkboxes!"])));var F,T=((F=function(){function e(t,o){_classCallCheck(this,e),this.formBuilder=t,this.toastService=o,this.cabbage=$localize(_templateObject13||(_templateObject13=_taggedTemplateLiteral(["Cabbage"]))),this.potato=$localize(_templateObject14||(_templateObject14=_taggedTemplateLiteral(["Potato"]))),this.tomato=$localize(_templateObject15||(_templateObject15=_taggedTemplateLiteral(["Tomato"]))),this.carrot=$localize(_templateObject16||(_templateObject16=_taggedTemplateLiteral(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}return _createClass(e,[{key:"ngOnInit",value:function(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[c.u.required,c.u.minLength(3)])})}},{key:"onSubmit",value:function(){console.log(this.myForm),this.toastService.success({message:$localize(_templateObject17||(_templateObject17=_taggedTemplateLiteral(["Your form is valid!"])))})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||F)(a.Qb(c.c),a.Qb(i.ToastService))},F.\u0275cmp=a.Kb({type:F,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],["type","critical",3,"allowDismiss"],[3,"value"]],template:function(e,t){1&e&&(a.Wb(0,"form",0),a.lc("submit",(function(){return t.onSubmit()})),a.Wb(1,"div",1),a.Qc(2,w,3,1,"nui-message",2),a.Wb(3,"nui-checkbox-group",3),a.Qc(4,S,2,2,"nui-checkbox",4),a.Vb(),a.Vb(),a.Wb(5,"button",5),a.ac(6,O),a.Vb(),a.Vb()),2&e&&(a.wc("formGroup",t.myForm),a.Eb(2),a.wc("ngIf",!t.myForm.controls.checkboxGroup.valid&&t.myForm.controls.checkboxGroup.touched),a.Eb(2),a.wc("ngForOf",t.vegetables),a.Eb(1),a.wc("disabled",t.myForm.disabled||t.myForm.controls.checkboxGroup.invalid))},directives:[c.v,c.n,c.h,b.t,l.a,c.m,c.f,c.t,b.s,j.a,s.a],encapsulation:2}),F);function W(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",2),a.Sc(1),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("hint",c.hints.indexOf(o)>=0?c.hints[c.hints.indexOf(o)]:null)("checked",c.isChecked(o)),a.Eb(1),a.Uc(" ",o," ")}}var E,G,y=((G=function(){function e(){_classCallCheck(this,e),this.cabbage=$localize(_templateObject18||(_templateObject18=_taggedTemplateLiteral(["Cabbage"]))),this.potato=$localize(_templateObject19||(_templateObject19=_taggedTemplateLiteral(["Potato"]))),this.tomato=$localize(_templateObject20||(_templateObject20=_taggedTemplateLiteral(["Tomato"]))),this.carrot=$localize(_templateObject21||(_templateObject21=_taggedTemplateLiteral(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}return _createClass(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||G)},G.\u0275cmp=a.Kb({type:G,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,t){1&e&&(a.Wb(0,"nui-checkbox-group",0),a.Qc(1,W,2,4,"nui-checkbox",1),a.Vb()),2&e&&(a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables))},directives:[l.a,b.s,s.a],encapsulation:2}),G),$=((E=function e(){_classCallCheck(this,e)}).\u0275fac=function(e){return new(e||E)},E.\u0275cmp=a.Kb({type:E,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,t){1&e&&(a.Wb(0,"h2"),a.Sc(1,"Required Modules"),a.Vb(),a.Wb(2,"ul"),a.Wb(3,"li"),a.Wb(4,"code"),a.Sc(5,"NuiCheckboxModule"),a.Vb(),a.Vb(),a.Vb(),a.Wb(6,"h2"),a.Sc(7,"Basic Usage"),a.Vb(),a.Wb(8,"p"),a.Sc(9," The "),a.Wb(10,"code"),a.Sc(11,"<nui-checkbox-group>"),a.Vb(),a.Sc(12," component is used for combining "),a.Wb(13,"code"),a.Sc(14,"<nui-checkbox>"),a.Vb(),a.Sc(15," components into a group. Use the "),a.Wb(16,"code"),a.Sc(17,"name"),a.Vb(),a.Sc(18,' input to set the "name" attribute for the inner '),a.Wb(19,"code"),a.Sc(20,"<nui-checkbox>"),a.Vb(),a.Sc(21," input elements. To get the values of the "),a.Wb(22,"code"),a.Sc(23,"<nui-checkbox>"),a.Vb(),a.Sc(24," child components use the "),a.Wb(25,"code"),a.Sc(26,"values"),a.Vb(),a.Sc(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),a.Wb(28,"code"),a.Sc(29,"(valuesChange)"),a.Vb(),a.Sc(30," output.\n"),a.Vb(),a.Wb(31,"nui-example-wrapper",0),a.Rb(32,"nui-checkbox-group-basic-example"),a.Vb(),a.Wb(33,"h2"),a.Sc(34,"Inline"),a.Vb(),a.Wb(35,"p"),a.Sc(36," Use the "),a.Wb(37,"code"),a.Sc(38,"nui-checkbox-group-inline"),a.Vb(),a.Sc(39," class to display checkbox group inline.\n"),a.Vb(),a.Wb(40,"nui-example-wrapper",1),a.Rb(41,"nui-checkbox-group-inline-example"),a.Vb(),a.Wb(42,"h2"),a.Sc(43,"Part of Form"),a.Vb(),a.Wb(44,"p"),a.Wb(45,"code"),a.Sc(46,"<nui-checkbox-group>"),a.Vb(),a.Sc(47," can be used in reactive forms.\n"),a.Vb(),a.Wb(48,"nui-example-wrapper",2),a.Rb(49,"nui-checkbox-group-in-form-example"),a.Vb(),a.Wb(50,"h2"),a.Sc(51,"Justified"),a.Vb(),a.Wb(52,"p"),a.Sc(53," To justify "),a.Wb(54,"code"),a.Sc(55,"<nui-checkbox>"),a.Vb(),a.Sc(56," to the width of "),a.Wb(57,"code"),a.Sc(58,"<nui-checkbox-group>"),a.Vb(),a.Sc(59," (or simply parent element, in case "),a.Wb(60,"code"),a.Sc(61,"<nui-checkbox>"),a.Vb(),a.Sc(62," is used not as a part of "),a.Wb(63,"code"),a.Sc(64,"<nui-checkbox-group>"),a.Vb(),a.Sc(65,"), add "),a.Wb(66,"code"),a.Sc(67,"nui-checkbox--justified"),a.Vb(),a.Sc(68," class to the "),a.Wb(69,"code"),a.Sc(70,"<nui-checkbox>"),a.Vb(),a.Sc(71,".\n"),a.Vb(),a.Wb(72,"nui-example-wrapper",3),a.Rb(73,"nui-checkbox-group-justified-example"),a.Vb())},directives:[d.a,v,_,T,y],encapsulation:2}),E);function B(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",14),a.Sc(1),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("checked",c.isChecked(o)),a.Eb(1),a.Uc(" ",o," ")}}function I(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",15),a.Sc(1),a.Vb()),2&e){var o=t.$implicit;a.wc("value",o),a.Eb(1),a.Uc(" ",o," ")}}function z(e,t){if(1&e&&(a.Wb(0,"nui-checkbox",16),a.Sc(1),a.Vb()),2&e){var o=t.$implicit,c=a.pc();a.wc("value",o)("checked",c.isChecked(o)),a.Eb(1),a.Uc(" ",o," ")}}var U,P=((U=function(){function e(t){_classCallCheck(this,e),this.formBuilder=t,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return _createClass(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||U)(a.Qb(c.c))},U.\u0275cmp=a.Kb({type:U,selectors:[["nui-checkbox-group-visual-test"]],decls:36,vars:26,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"]],template:function(e,t){1&e&&(a.Wb(0,"div",0),a.Wb(1,"div",1),a.Wb(2,"div",2),a.Wb(3,"h3"),a.Sc(4,"Basic Checkbox-Group with Hint Text"),a.Vb(),a.Wb(5,"nui-checkbox-group",3),a.Qc(6,B,2,3,"nui-checkbox",4),a.Wb(7,"nui-checkbox",5),a.Sc(8),a.Vb(),a.Vb(),a.Rb(9,"hr"),a.Vb(),a.Wb(10,"div",2),a.Wb(11,"h3"),a.Sc(12,"Inline Checkbox-Group"),a.Vb(),a.Wb(13,"nui-checkbox-group",6),a.Qc(14,I,2,2,"nui-checkbox",7),a.Vb(),a.Rb(15,"hr"),a.Vb(),a.Rb(16,"div",8),a.Wb(17,"div",2),a.Wb(18,"h3"),a.Sc(19,"Justified Checkbox-Group"),a.Vb(),a.Wb(20,"nui-checkbox-group",9),a.Qc(21,z,2,3,"nui-checkbox",10),a.Vb(),a.Rb(22,"hr"),a.Vb(),a.Wb(23,"div",2),a.Wb(24,"h3"),a.Sc(25,"Disabled checkboxes within the form"),a.Vb(),a.Wb(26,"form",11),a.Wb(27,"nui-checkbox-group",12),a.Wb(28,"nui-checkbox",13),a.Sc(29),a.Vb(),a.Wb(30,"nui-checkbox",13),a.Sc(31),a.Vb(),a.Wb(32,"nui-checkbox",13),a.Sc(33),a.Vb(),a.Wb(34,"nui-checkbox",13),a.Sc(35),a.Vb(),a.Vb(),a.Vb(),a.Vb(),a.Vb(),a.Vb()),2&e&&(a.Eb(5),a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables),a.Eb(1),a.wc("value",t.disabledOne)("checked",!t.isChecked(t.disabledOne)),a.Eb(1),a.Tc(t.disabledOne),a.Eb(5),a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables),a.Eb(6),a.wc("values",t.selectedVegetables),a.Eb(1),a.wc("ngForOf",t.vegetables),a.Eb(5),a.wc("formGroup",t.testForm),a.Eb(2),a.wc("value",t.vegetables[0])("disabled",!0)("checked",t.isChecked(t.vegetables[0])),a.Eb(1),a.Uc(" ",t.vegetables[0],""),a.Eb(1),a.wc("value",t.vegetables[1])("disabled",!1)("checked",t.isChecked(t.vegetables[1])),a.Eb(1),a.Uc(" ",t.vegetables[1],""),a.Eb(1),a.wc("value",t.vegetables[2])("disabled",!0)("checked",t.isChecked(t.vegetables[2])),a.Eb(1),a.Uc(" ",t.vegetables[2],""),a.Eb(1),a.wc("value",t.vegetables[3])("disabled",!1)("checked",t.isChecked(t.vegetables[3])),a.Eb(1),a.Uc(" ",t.vegetables[3],""))},directives:[l.a,b.s,s.a,c.v,c.n,c.h,c.m,c.f],encapsulation:2}),U);o.d(t,"CheckboxGroupModule",(function(){return M}));var N,L=[{path:"",component:$,data:{srlc:{stage:i.SrlcStage.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:P,data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:m,data:{srlc:{hideIndicator:!0}}}],M=((N=function e(){_classCallCheck(this,e)}).\u0275mod=a.Ob({type:N}),N.\u0275inj=a.Nb({factory:function(e){return new(e||N)},providers:[{provide:i.DEMO_PATH_TOKEN,useFactory:function(){return o("NAmc")}}],imports:[[i.NuiCheckboxModule,i.NuiDocsModule,c.j,c.s,i.NuiButtonModule,n.g.forChild(L)],n.g]}),N)},"6w1q":function(e,t,o){"use strict";o.r(t),t.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},AHj0:function(e,t,o){"use strict";o.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},BGGx:function(e,t,o){"use strict";o.r(t),t.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},E5Rp:function(e,t,o){"use strict";o.r(t),t.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},I1CO:function(e,t,o){"use strict";o.r(t),t.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},JpN6:function(e,t,o){"use strict";o.r(t),t.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},Meyd:function(e,t,o){"use strict";o.r(t),t.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},NAmc:function(e,t,o){var c={"./checkbox-group-basic/checkbox-group-basic.example.component.html":"BGGx","./checkbox-group-basic/checkbox-group-basic.example.component.ts":"E5Rp","./checkbox-group-docs/checkbox-group-docs.example.component.html":"e4QH","./checkbox-group-docs/checkbox-group-docs.example.component.ts":"RbIe","./checkbox-group-in-form/checkbox-group-in-form.example.component.html":"b2GL","./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":"Meyd","./checkbox-group-inline/checkbox-group-inline.example.component.html":"qH3u","./checkbox-group-inline/checkbox-group-inline.example.component.ts":"AHj0","./checkbox-group-justified/checkbox-group-justified.example.component.html":"TQG8","./checkbox-group-justified/checkbox-group-justified.example.component.ts":"eDV4","./checkbox-group-test/checkbox-group-test.component.html":"cPnd","./checkbox-group-test/checkbox-group-test.component.ts":"I1CO","./checkbox-group-visual-test/checkbox-group-visual-test.component.html":"Q2ZU","./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":"JpN6","./checkbox-group.module.ts":"whV8","./index.ts":"6w1q"};function n(e){var t=i(e);return o(t)}function i(e){if(!o.o(c,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return c[e]}n.keys=function(){return Object.keys(c)},n.resolve=i,e.exports=n,n.id="NAmc"},Q2ZU:function(e,t,o){"use strict";o.r(t),t.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="checkboxGroup2">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n</div>\n'},RbIe:function(e,t,o){"use strict";o.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},TQG8:function(e,t,o){"use strict";o.r(t),t.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},b2GL:function(e,t,o){"use strict";o.r(t),t.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},cPnd:function(e,t,o){"use strict";o.r(t),t.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="checkboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},e4QH:function(e,t,o){"use strict";o.r(t),t.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},eDV4:function(e,t,o){"use strict";o.r(t),t.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},qH3u:function(e,t,o){"use strict";o.r(t),t.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},whV8:function(e,t,o){"use strict";o.r(t),t.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'}}]);