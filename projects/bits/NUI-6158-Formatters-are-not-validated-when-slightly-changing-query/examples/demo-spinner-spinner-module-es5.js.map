{"version":3,"sources":["webpack:///demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.ts","webpack:///demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.html","webpack:///demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html","webpack:///demo/src/components/demo/spinner/spinner-test/spinner-test.ts?d19d","webpack:///demo/src/components/demo/spinner/spinner.module.ts","webpack:///demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.html?01cc","webpack:///demo/src/components/demo/spinner/spinner-test/spinner-test.ts","webpack:///demo/src/components/demo/spinner/spinner-test/spinner-test.html","webpack:///demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.html?054a","webpack:///demo/src/components/demo/spinner/index.ts","webpack:///demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.ts?1350","webpack:///demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.html?1188","webpack:///demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.html","webpack:///demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.html","webpack:///demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.html?2f87","webpack:///demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.ts?30f4","webpack:///demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html?40c9","webpack:///demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.ts?4cc7","webpack:///demo/src/components/demo/spinner/index.ts?5747","webpack:///demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.ts?6014","webpack:///demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts?6fa4","webpack:///demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.html?73ce","webpack:///demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.ts?70ea","webpack:///demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?7a18","webpack:///demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.html","webpack:///demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.html?8344","webpack:///demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts?8c06","webpack:///demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.html","webpack:///demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.html?9467","webpack:///demo/src/components/demo/spinner/spinner.module.ts?a7dd","webpack:///demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.ts","webpack:///demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.html","webpack:///demo/src/components/demo/spinner/spinner-test/spinner-test.html?bd70","webpack:///demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.ts?c657"],"names":["SpinnerVisualTestComponent","show","showWithCancel","isCanceled","spinPercentage","onCancel","SpinnerWithDelayToggleExampleComponent","interval","undefined","startProgress","clearInterval","setInterval","toggleSpinners","routes","path","component","data","ga","showThemeSwitcher","SpinnerModule","provide","useFactory","forChild","SpinnerTestComponent","SpinnerSizesExampleComponent","SpinnerWithTextExampleComponent","SpinnerExampleComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","SpinnerWithCancelExampleComponent","SpinnerDeterminateExampleComponent","SpinnerBasicExampleComponent"],"mappings":"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","file":"demo-spinner-spinner-module-es5.js","sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-visual\",\n    templateUrl: \"./spinner-visual-test.component.html\",\n})\nexport class SpinnerVisualTestComponent {\n    public show: boolean = true;\n    public showWithCancel: boolean = true;\n    public isCanceled: boolean = false;\n    public spinPercentage: number = 0;\n\n    public onCancel() {\n        this.showWithCancel = false;\n        this.isCanceled = true;\n    }\n\n}\n","<style>\n        nui-spinner {\n                margin: 0px 10px;\n        }\n</style>\n<div class=\"container\">\n     <h4>Basic spinner</h4>\n     <nui-spinner [show]=\"show\"></nui-spinner>\n     <hr />\n\n     <h4>Big spinner</h4>\n     <nui-spinner size=\"large\" [show]=\"show\"></nui-spinner>\n     <hr />\n\n     <h4>Indetermined spinner with text</h4>\n     <nui-spinner [show]=\"show\"\n          message=\"Task Label\"\n          helpText=\"Optional description\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"show\"\n          message=\"Task Label\"\n          helpText=\"Optional description\">\n     </nui-spinner>\n     <hr />\n\n     <h4>Determined spinner with text</h4>\n     <nui-spinner [show]=\"show\"\n          [percent]=\"spinPercentage\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"show\"\n          [percent]=\"spinPercentage\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"show\"\n          [percent]=\"spinPercentage\"\n          message=\"Task Label\"\n          helpText=\"Optional description\">\n     </nui-spinner>\n     <hr />\n\n     <h4>Spinner with cancellation</h4>\n     <nui-spinner [show]=\"showWithCancel\"\n          [percent]=\"spinPercentage\"\n          [allowCancel]=\"true\"\n          (cancel)=\"onCancel()\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"showWithCancel\"\n          [percent]=\"spinPercentage\"\n          [allowCancel]=\"true\"\n          (cancel)=\"onCancel()\"\n          id=\"nui-spinner-large-cancel\">\n     </nui-spinner>\n     <hr />\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-with-delay-toggle-example\",\n    templateUrl: \"./spinner-with-delay-toggle.example.component.html\",\n})\nexport class SpinnerWithDelayToggleExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners() {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress() {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n","<button nui-button type=\"button\"\n        id=\"spinnerButton1\"\n        (click)=\"toggleSpinners()\"\n        displayStyle=\"primary\"\n        i18n>Start/stop progress</button>\n<nui-spinner id=\"spinner1\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [delay]=\"500\">\n</nui-spinner>\n\n<nui-spinner size=\"large\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [delay]=\"1000\">\n</nui-spinner>\n","export default \"import { ChangeDetectionStrategy, Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-e2e\\\",\\n    templateUrl: \\\"./spinner-test.html\\\",\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SpinnerTestComponent {\\n    public show1: boolean;\\n    public show2: boolean;\\n    public spinPercentage: number;\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiDocsModule, NuiSpinnerModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport {\n    SpinnerBasicExampleComponent,\n    SpinnerDeterminateExampleComponent,\n    SpinnerExampleComponent,\n    SpinnerSizesExampleComponent,\n    SpinnerTestComponent,\n    SpinnerVisualTestComponent,\n    SpinnerWithCancelExampleComponent,\n    SpinnerWithDelayToggleExampleComponent,\n    SpinnerWithTextExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: SpinnerExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"spinner-test\",\n        component: SpinnerTestComponent,\n    },\n    {\n        path: \"spinner-visual-test\",\n        component: SpinnerVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSpinnerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SpinnerBasicExampleComponent,\n        SpinnerDeterminateExampleComponent,\n        SpinnerTestComponent,\n        SpinnerVisualTestComponent,\n        SpinnerExampleComponent,\n        SpinnerSizesExampleComponent,\n        SpinnerWithCancelExampleComponent,\n        SpinnerWithDelayToggleExampleComponent,\n        SpinnerWithTextExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class SpinnerModule {\n}\n","export default \"<style>\\n        nui-spinner {\\n                margin: 0px 10px;\\n        }\\n</style>\\n<div class=\\\"container\\\">\\n     <h4>Basic spinner</h4>\\n     <nui-spinner [show]=\\\"show\\\"></nui-spinner>\\n     <hr />\\n\\n     <h4>Big spinner</h4>\\n     <nui-spinner size=\\\"large\\\" [show]=\\\"show\\\"></nui-spinner>\\n     <hr />\\n\\n     <h4>Indetermined spinner with text</h4>\\n     <nui-spinner [show]=\\\"show\\\"\\n          message=\\\"Task Label\\\"\\n          helpText=\\\"Optional description\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"show\\\"\\n          message=\\\"Task Label\\\"\\n          helpText=\\\"Optional description\\\">\\n     </nui-spinner>\\n     <hr />\\n\\n     <h4>Determined spinner with text</h4>\\n     <nui-spinner [show]=\\\"show\\\"\\n          [percent]=\\\"spinPercentage\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"show\\\"\\n          [percent]=\\\"spinPercentage\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"show\\\"\\n          [percent]=\\\"spinPercentage\\\"\\n          message=\\\"Task Label\\\"\\n          helpText=\\\"Optional description\\\">\\n     </nui-spinner>\\n     <hr />\\n\\n     <h4>Spinner with cancellation</h4>\\n     <nui-spinner [show]=\\\"showWithCancel\\\"\\n          [percent]=\\\"spinPercentage\\\"\\n          [allowCancel]=\\\"true\\\"\\n          (cancel)=\\\"onCancel()\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"showWithCancel\\\"\\n          [percent]=\\\"spinPercentage\\\"\\n          [allowCancel]=\\\"true\\\"\\n          (cancel)=\\\"onCancel()\\\"\\n          id=\\\"nui-spinner-large-cancel\\\">\\n     </nui-spinner>\\n     <hr />\\n</div>\\n\";","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-e2e\",\n    templateUrl: \"./spinner-test.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerTestComponent {\n    public show1: boolean;\n    public show2: boolean;\n    public spinPercentage: number;\n}\n","<div [@.disabled]=\"true\">\n    <div class=\"p-3\">\n        <button nui-button type=\"button\"\n                class=\"mr-3\"\n                id=\"spinnerButton1\"\n                (click)=\"show1 = !show1\"\n                displayStyle=\"primary\"\n                i18n>toggle delayed spinner\n        </button>\n        <nui-spinner id=\"spinner1\"\n                     [show]=\"show1\"\n                     [percent]=\"spinPercentage\"\n                     [delay]=\"500\">\n        </nui-spinner>\n    </div>\n\n    <div class=\"p-3\">\n        <button nui-button type=\"button\"\n                class=\"mr-3\"\n                id=\"spinnerButton2\"\n                (click)=\"show2 = !show2\"\n                displayStyle=\"primary\"\n                i18n>toggle default spinner\n        </button>\n        <nui-spinner id=\"spinner2\"\n                     [show]=\"show2\">\n        </nui-spinner>\n    </div>\n</div>\n","export default \"<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"true\\\"\\n             message=\\\"Task Label\\\" i18n-message\\n             helpText=\\\"Optional description\\\" i18n-helpText>\\n</nui-spinner>\\n\";","\nexport { SpinnerExampleComponent } from \"./spinner-docs/spinner-docs.example.component\";\nexport { SpinnerBasicExampleComponent } from \"./spinner-basic/spinner-basic.example.component\";\nexport { SpinnerDeterminateExampleComponent } from \"./spinner-determinate/spinner-determinate.example.component\";\nexport { SpinnerWithCancelExampleComponent } from \"./spinner-with-cancel/spinner-with-cancel.example.component\";\nexport { SpinnerWithDelayToggleExampleComponent } from \"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component\";\nexport { SpinnerSizesExampleComponent } from \"./spinner-sizes/spinner-sizes.example.component\";\nexport { SpinnerWithTextExampleComponent } from \"./spinner-with-text/spinner-with-text.example.component\";\nexport { SpinnerTestComponent } from \"./spinner-test/spinner-test\";\nexport { SpinnerVisualTestComponent } from \"./spinner-visual-test/spinner-visual-test.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-with-text-example\\\",\\n    templateUrl: \\\"./spinner-with-text.example.component.html\\\",\\n})\\nexport class SpinnerWithTextExampleComponent {\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\"\\n        (click)=\\\"toggleSpinners()\\\"\\n        displayStyle=\\\"primary\\\">Start/stop progress</button>\\n<nui-spinner [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [allowCancel]=\\\"true\\\"\\n             (cancel)=\\\"onCancel()\\\">\\n</nui-spinner>\\n\\n<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [allowCancel]=\\\"true\\\"\\n             (cancel)=\\\"onCancel()\\\">\\n</nui-spinner>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-sizes-example\",\n    templateUrl: \"./spinner-sizes.example.component.html\",\n})\n\nexport class SpinnerSizesExampleComponent {\n}\n","<nui-spinner size=\"large\" [show]=\"true\"></nui-spinner>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-with-text-example\",\n    templateUrl: \"./spinner-with-text.example.component.html\",\n})\nexport class SpinnerWithTextExampleComponent {\n}\n","<nui-spinner size=\"large\"\n             [show]=\"true\"\n             message=\"Task Label\" i18n-message\n             helpText=\"Optional description\" i18n-helpText>\n</nui-spinner>\n","export default \"<nui-spinner [show]=\\\"true\\\"></nui-spinner>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-visual\\\",\\n    templateUrl: \\\"./spinner-visual-test.component.html\\\",\\n})\\nexport class SpinnerVisualTestComponent {\\n    public show: boolean = true;\\n    public showWithCancel: boolean = true;\\n    public isCanceled: boolean = false;\\n    public spinPercentage: number = 0;\\n\\n    public onCancel() {\\n        this.showWithCancel = false;\\n        this.isCanceled = true;\\n    }\\n\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\"\\n        id=\\\"spinnerButton1\\\"\\n        (click)=\\\"toggleSpinners()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>Start/stop progress</button>\\n<nui-spinner id=\\\"spinner1\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [delay]=\\\"500\\\">\\n</nui-spinner>\\n\\n<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [delay]=\\\"1000\\\">\\n</nui-spinner>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-basic-example\\\",\\n    templateUrl: \\\"./spinner-basic.example.component.html\\\",\\n})\\n\\nexport class SpinnerBasicExampleComponent {\\n}\\n\";","export default \"\\nexport { SpinnerExampleComponent } from \\\"./spinner-docs/spinner-docs.example.component\\\";\\nexport { SpinnerBasicExampleComponent } from \\\"./spinner-basic/spinner-basic.example.component\\\";\\nexport { SpinnerDeterminateExampleComponent } from \\\"./spinner-determinate/spinner-determinate.example.component\\\";\\nexport { SpinnerWithCancelExampleComponent } from \\\"./spinner-with-cancel/spinner-with-cancel.example.component\\\";\\nexport { SpinnerWithDelayToggleExampleComponent } from \\\"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component\\\";\\nexport { SpinnerSizesExampleComponent } from \\\"./spinner-sizes/spinner-sizes.example.component\\\";\\nexport { SpinnerWithTextExampleComponent } from \\\"./spinner-with-text/spinner-with-text.example.component\\\";\\nexport { SpinnerTestComponent } from \\\"./spinner-test/spinner-test\\\";\\nexport { SpinnerVisualTestComponent } from \\\"./spinner-visual-test/spinner-visual-test.component\\\";\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-docs-example\\\",\\n    templateUrl: \\\"./spinner-docs.example.component.html\\\",\\n})\\nexport class SpinnerExampleComponent {}\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-with-cancel-example\\\",\\n    templateUrl: \\\"./spinner-with-cancel.example.component.html\\\",\\n})\\nexport class SpinnerWithCancelExampleComponent implements OnDestroy {\\n    public show = false;\\n    public spinPercentage = 0;\\n    public isCanceled = false;\\n\\n    private interval: any = undefined;\\n\\n    public toggleSpinners() {\\n        this.show = !this.show;\\n        this.show ? this.startProgress() : this.onCancel();\\n    }\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.interval = setInterval(() => {\\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\\n        }, 500);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.spinPercentage = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.interval) {\\n            clearInterval(this.interval);\\n            this.interval = undefined;\\n        }\\n    }\\n}\\n\";","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiSpinnerModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n\\n<p>In order to use spinner component, you need to pass <code>show</code> binding.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-spinner-basic-example></nui-spinner-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Size Setting</h2>\\n\\n<p>\\n    Spinner supports two sizes: large and small. The default is small. For a larger spinner, you can pass <code>large</code> to the <code>size</code> input.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-sizes\\\" exampleTitle=\\\"Sizes\\\">\\n    <nui-spinner-sizes-example></nui-spinner-sizes-example>\\n</nui-example-wrapper>\\n\\n<h2>Adding Text</h2>\\n\\n<p>\\n    Spinner label could be placed on the right side. You only need to pass <code>message</code> string for that.\\n    In order to display additional help text on the right side you need to pass <code>helpText</code> string.\\n    <strong>Note:</strong> In order to display the help text, the <code>size</code> input must be set to <code>large</code>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-with-text\\\" exampleTitle=\\\"Indeterminate With Text\\\">\\n    <nui-spinner-with-text-example></nui-spinner-with-text-example>\\n</nui-example-wrapper>\\n\\n<h2>Determinate Progress</h2>\\n\\n<p>\\n    To enable determinate progress, set the <code>percent</code> input and pass updates to it with numbers between 0 and 100.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-determinate\\\" exampleTitle=\\\"Determinate Progress\\\">\\n    <nui-spinner-determinate-example></nui-spinner-determinate-example>\\n</nui-example-wrapper>\\n\\n<h2>Enabling Cancellation</h2>\\n\\n<p>The spinner can be set to allow cancellation by passing true to the <code>allowCancel</code> input. To take action on a cancellation, pass a handler to the <code>cancel</code> output.</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-with-cancel\\\" exampleTitle=\\\"Determinate Progress With Cancel\\\">\\n    <nui-spinner-with-cancel-example></nui-spinner-with-cancel-example>\\n</nui-example-wrapper>\\n\\n<h2>Modifying Delayed Appearance</h2>\\n\\n<p>To mitigate the possibility of a blink effect that may happen due to the show/hide timing, you can optionally set the <code>delay</code> input in milliseconds.\\n    As the name implies, this input can be used to override the delay before showing the spinner for the specified duration after the <code>show</code> input value changes to true.\\n    The default value for the <code>delay</code> input is 250.</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-with-delay-toggle\\\" exampleTitle=\\\"Delayed Appearance\\\">\\n    <nui-spinner-with-delay-toggle-example></nui-spinner-with-delay-toggle-example>\\n</nui-example-wrapper>\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-determinate-example\\\",\\n    templateUrl: \\\"./spinner-determinate.example.component.html\\\",\\n})\\nexport class SpinnerDeterminateExampleComponent implements OnDestroy {\\n    public show = false;\\n    public spinPercentage = 0;\\n\\n    private interval: any = undefined;\\n\\n    public toggleSpinners() {\\n        this.show = !this.show;\\n        this.show ? this.startProgress() : this.onCancel();\\n    }\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.interval = setInterval(() => {\\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\\n        }, 500);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.show = false;\\n        this.spinPercentage = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.interval) {\\n            clearInterval(this.interval);\\n            this.interval = undefined;\\n        }\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-docs-example\",\n    templateUrl: \"./spinner-docs.example.component.html\",\n})\nexport class SpinnerExampleComponent {}\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSpinnerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>In order to use spinner component, you need to pass <code>show</code> binding.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-basic\" exampleTitle=\"Basic Usage\">\n    <nui-spinner-basic-example></nui-spinner-basic-example>\n</nui-example-wrapper>\n\n<h2>Size Setting</h2>\n\n<p>\n    Spinner supports two sizes: large and small. The default is small. For a larger spinner, you can pass <code>large</code> to the <code>size</code> input.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-sizes\" exampleTitle=\"Sizes\">\n    <nui-spinner-sizes-example></nui-spinner-sizes-example>\n</nui-example-wrapper>\n\n<h2>Adding Text</h2>\n\n<p>\n    Spinner label could be placed on the right side. You only need to pass <code>message</code> string for that.\n    In order to display additional help text on the right side you need to pass <code>helpText</code> string.\n    <strong>Note:</strong> In order to display the help text, the <code>size</code> input must be set to <code>large</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-with-text\" exampleTitle=\"Indeterminate With Text\">\n    <nui-spinner-with-text-example></nui-spinner-with-text-example>\n</nui-example-wrapper>\n\n<h2>Determinate Progress</h2>\n\n<p>\n    To enable determinate progress, set the <code>percent</code> input and pass updates to it with numbers between 0 and 100.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-determinate\" exampleTitle=\"Determinate Progress\">\n    <nui-spinner-determinate-example></nui-spinner-determinate-example>\n</nui-example-wrapper>\n\n<h2>Enabling Cancellation</h2>\n\n<p>The spinner can be set to allow cancellation by passing true to the <code>allowCancel</code> input. To take action on a cancellation, pass a handler to the <code>cancel</code> output.</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-with-cancel\" exampleTitle=\"Determinate Progress With Cancel\">\n    <nui-spinner-with-cancel-example></nui-spinner-with-cancel-example>\n</nui-example-wrapper>\n\n<h2>Modifying Delayed Appearance</h2>\n\n<p>To mitigate the possibility of a blink effect that may happen due to the show/hide timing, you can optionally set the <code>delay</code> input in milliseconds.\n    As the name implies, this input can be used to override the delay before showing the spinner for the specified duration after the <code>show</code> input value changes to true.\n    The default value for the <code>delay</code> input is 250.</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-with-delay-toggle\" exampleTitle=\"Delayed Appearance\">\n    <nui-spinner-with-delay-toggle-example></nui-spinner-with-delay-toggle-example>\n</nui-example-wrapper>\n","var map = {\n\t\"./index.ts\": \"V0fN\",\n\t\"./spinner-basic/spinner-basic.example.component.html\": \"L4fS\",\n\t\"./spinner-basic/spinner-basic.example.component.ts\": \"TMfQ\",\n\t\"./spinner-determinate/spinner-determinate.example.component.html\": \"g0RB\",\n\t\"./spinner-determinate/spinner-determinate.example.component.ts\": \"cOo7\",\n\t\"./spinner-docs/spinner-docs.example.component.html\": \"c85H\",\n\t\"./spinner-docs/spinner-docs.example.component.ts\": \"YBSE\",\n\t\"./spinner-sizes/spinner-sizes.example.component.html\": \"lGcg\",\n\t\"./spinner-sizes/spinner-sizes.example.component.ts\": \"xleW\",\n\t\"./spinner-test/spinner-test.html\": \"vXBL\",\n\t\"./spinner-test/spinner-test.ts\": \"0Z1Y\",\n\t\"./spinner-visual-test/spinner-visual-test.component.html\": \"AcwV\",\n\t\"./spinner-visual-test/spinner-visual-test.component.ts\": \"MPSt\",\n\t\"./spinner-with-cancel/spinner-with-cancel.example.component.html\": \"EYii\",\n\t\"./spinner-with-cancel/spinner-with-cancel.example.component.ts\": \"b6R0\",\n\t\"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html\": \"QMnL\",\n\t\"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts\": \"jAbo\",\n\t\"./spinner-with-text/spinner-with-text.example.component.html\": \"BUoy\",\n\t\"./spinner-with-text/spinner-with-text.example.component.ts\": \"E1AW\",\n\t\"./spinner.module.ts\": \"p90v\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"exZP\";","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-with-cancel-example\",\n    templateUrl: \"./spinner-with-cancel.example.component.html\",\n})\nexport class SpinnerWithCancelExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners() {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress() {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n","<button nui-button type=\"button\"\n        (click)=\"toggleSpinners()\"\n        displayStyle=\"primary\">Start/stop progress</button>\n<nui-spinner [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [allowCancel]=\"true\"\n             (cancel)=\"onCancel()\">\n</nui-spinner>\n\n<nui-spinner size=\"large\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [allowCancel]=\"true\"\n             (cancel)=\"onCancel()\">\n</nui-spinner>\n","export default \"<button nui-button type=\\\"button\\\"\\n        (click)=\\\"toggleSpinners()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>Start/stop progress\\n</button>\\n<nui-spinner [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\">\\n</nui-spinner>\\n\\n<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\">\\n</nui-spinner>\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-with-delay-toggle-example\\\",\\n    templateUrl: \\\"./spinner-with-delay-toggle.example.component.html\\\",\\n})\\nexport class SpinnerWithDelayToggleExampleComponent implements OnDestroy {\\n    public show = false;\\n    public spinPercentage = 0;\\n    public isCanceled = false;\\n\\n    private interval: any = undefined;\\n\\n    public toggleSpinners() {\\n        this.show = !this.show;\\n        this.show ? this.startProgress() : this.onCancel();\\n    }\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.interval = setInterval(() => {\\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\\n        }, 500);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.spinPercentage = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.interval) {\\n            clearInterval(this.interval);\\n            this.interval = undefined;\\n        }\\n    }\\n}\\n\";","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-determinate-example\",\n    templateUrl: \"./spinner-determinate.example.component.html\",\n})\nexport class SpinnerDeterminateExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n\n    private interval: any = undefined;\n\n    public toggleSpinners() {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress() {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n","<button nui-button type=\"button\"\n        (click)=\"toggleSpinners()\"\n        displayStyle=\"primary\"\n        i18n>Start/stop progress\n</button>\n<nui-spinner [show]=\"show\"\n             [percent]=\"spinPercentage\">\n</nui-spinner>\n\n<nui-spinner size=\"large\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\">\n</nui-spinner>\n","export default \"<nui-spinner size=\\\"large\\\" [show]=\\\"true\\\"></nui-spinner>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiDocsModule, NuiSpinnerModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    SpinnerBasicExampleComponent,\\n    SpinnerDeterminateExampleComponent,\\n    SpinnerExampleComponent,\\n    SpinnerSizesExampleComponent,\\n    SpinnerTestComponent,\\n    SpinnerVisualTestComponent,\\n    SpinnerWithCancelExampleComponent,\\n    SpinnerWithDelayToggleExampleComponent,\\n    SpinnerWithTextExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: SpinnerExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"spinner-test\\\",\\n        component: SpinnerTestComponent,\\n    },\\n    {\\n        path: \\\"spinner-visual-test\\\",\\n        component: SpinnerVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiSpinnerModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        SpinnerBasicExampleComponent,\\n        SpinnerDeterminateExampleComponent,\\n        SpinnerTestComponent,\\n        SpinnerVisualTestComponent,\\n        SpinnerExampleComponent,\\n        SpinnerSizesExampleComponent,\\n        SpinnerWithCancelExampleComponent,\\n        SpinnerWithDelayToggleExampleComponent,\\n        SpinnerWithTextExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class SpinnerModule {\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-basic-example\",\n    templateUrl: \"./spinner-basic.example.component.html\",\n})\n\nexport class SpinnerBasicExampleComponent {\n}\n","<nui-spinner [show]=\"true\"></nui-spinner>\n","export default \"<div [@.disabled]=\\\"true\\\">\\n    <div class=\\\"p-3\\\">\\n        <button nui-button type=\\\"button\\\"\\n                class=\\\"mr-3\\\"\\n                id=\\\"spinnerButton1\\\"\\n                (click)=\\\"show1 = !show1\\\"\\n                displayStyle=\\\"primary\\\"\\n                i18n>toggle delayed spinner\\n        </button>\\n        <nui-spinner id=\\\"spinner1\\\"\\n                     [show]=\\\"show1\\\"\\n                     [percent]=\\\"spinPercentage\\\"\\n                     [delay]=\\\"500\\\">\\n        </nui-spinner>\\n    </div>\\n\\n    <div class=\\\"p-3\\\">\\n        <button nui-button type=\\\"button\\\"\\n                class=\\\"mr-3\\\"\\n                id=\\\"spinnerButton2\\\"\\n                (click)=\\\"show2 = !show2\\\"\\n                displayStyle=\\\"primary\\\"\\n                i18n>toggle default spinner\\n        </button>\\n        <nui-spinner id=\\\"spinner2\\\"\\n                     [show]=\\\"show2\\\">\\n        </nui-spinner>\\n    </div>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-sizes-example\\\",\\n    templateUrl: \\\"./spinner-sizes.example.component.html\\\",\\n})\\n\\nexport class SpinnerSizesExampleComponent {\\n}\\n\";"]}