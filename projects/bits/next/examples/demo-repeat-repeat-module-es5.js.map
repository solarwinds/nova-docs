{"version":3,"sources":["webpack:///demo/src/components/demo/repeat/repeat-item/repeat-item.example.component.ts?fb63","webpack:///demo/src/components/demo/repeat/repeat-simple/repeat-simple.example.component.html?fa5f","webpack:///demo/src/components/demo/repeat/repeat.module.ts","webpack:///demo/src/components/demo/repeat/repeat-drag-handle/repeat-drag-handle.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-drag-handle/repeat-drag-handle.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-select-test/repeat-test.component.html?d5a8","webpack:///demo/src/components/demo/repeat/repeat-item/repeat-item.example.component.html?dc98","webpack:///demo/src/components/demo/repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.ts?ea9e","webpack:///demo/src/components/demo/repeat/repeat-drag-preview/repeat-drag-preview.example.component.less","webpack:///demo/src/components/demo/repeat/repeat-drag-handle/repeat-drag-handle.example.component.html?ecc7","webpack:///demo/src/components/demo/repeat/repeat-docs/repeat-docs.example.component.html?f47f","webpack:///demo/src/components/demo/repeat/repeat-multi-selection/repeat-multi-selection.example.component.ts?07a5","webpack:///demo/src/components/demo/repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.ts?06f0","webpack:///demo/src/components/demo/repeat/repeat-drag-preview/repeat-drag-preview.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-drag-preview/repeat-drag-preview.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-select-test/repeat-test.component.ts?0f5e","webpack:///demo/src/components/demo/repeat/repeat-docs/repeat-docs.example.component.ts?0fdf","webpack:///demo/src/components/demo/repeat/repeat-drag-handle/repeat-drag-handle.example.component.ts?13ff","webpack:///demo/src/components/demo/repeat/index.ts?1797","webpack:///demo/src/components/demo/repeat/repeat-drag-simple/repeat-drag-simple.example.component.ts?154e","webpack:///demo/src/components/demo/repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.ts?2d4d","webpack:///demo/src/components/demo/repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.html?30c0","webpack:///demo/src/components/demo/repeat/repeat-simple/repeat-simple.example.component.ts?32d4","webpack:///demo/src/components/demo/repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.html","webpack:///demo/src/components/demo/repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.ts","webpack:///demo/src/components/demo/repeat/index.ts","webpack:///demo/src/components/demo/repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.html?3dae","webpack:///demo/src/components/demo/repeat/repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.ts?3e1d","webpack:///demo/src/components/demo/repeat/repeat-docs/repeat-docs.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-docs/repeat-docs.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-simple/repeat-simple.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-simple/repeat-simple.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.html?5c3f","webpack:///demo/src/components/demo/repeat/repeat-multi-selection/repeat-multi-selection.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-multi-selection/repeat-multi-selection.example.component.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?33ae","webpack:///demo/src/components/demo/repeat/repeat-drag-simple/repeat-drag-simple.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-drag-simple/repeat-drag-simple.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-drag-preview/repeat-drag-preview.example.component.ts?64d6","webpack:///demo/src/components/demo/repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.html?660b","webpack:///demo/src/components/demo/repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.ts?72dc","webpack:///demo/src/components/demo/repeat/repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.html?7534","webpack:///demo/src/components/demo/repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.ts?7638","webpack:///demo/src/components/demo/repeat/repeat-multi-selection/repeat-multi-selection.example.component.html?7717","webpack:///demo/src/components/demo/repeat/repeat-drag-simple/repeat-drag-simple.example.component.html?79a5","webpack:///demo/src/components/demo/repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.html?79b2","webpack:///demo/src/components/demo/repeat/repeat-reorder-simple/repeat-reorder-simple-example.component.ts?8342","webpack:///demo/src/components/demo/repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.html","webpack:///demo/src/components/demo/repeat/repeat-reorder-item-config/repeat-reorder-item-config-example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-select-test/repeat-test.component.ts","webpack:///demo/src/components/demo/repeat/repeat-select-test/repeat-test.component.html","webpack:///demo/src/components/demo/repeat/repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.html?aac2","webpack:///demo/src/components/demo/repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.less?b41f","webpack:///demo/src/components/demo/repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-single-selection-mode/repeat-single-selection-mode.example.component.ts","webpack:///demo/src/components/demo/repeat/repeat.module.ts?bd41","webpack:///demo/src/components/demo/repeat/repeat-drag-preview/repeat-drag-preview.example.component.html?c322","webpack:///demo/src/components/demo/repeat/repeat-item/repeat-item.example.component.html","webpack:///demo/src/components/demo/repeat/repeat-item/repeat-item.example.component.ts"],"names":["routes","path","component","data","ga","showThemeSwitcher","RepeatModule","provide","useFactory","forChild","RepeatDragHandleExampleComponent","companies","event","currentState","onItemsReordered","RepeatRadioSelectionModeExampleComponent","colors","color","$localize","selectedColors","selection","onColorSelectionChange","RepeatDragPreviewExampleComponent","name","preview","RepeatReorderSimpleExampleComponent","draggable","reorderable","item","dropListRef","rest","droppedEventData","console","log","RepeatSingleWithRequiredSelectionModeExampleComponent","selectedMode","RepeatDisabledMultiSelectionExampleComponent","colorsWithIsDisabledProperty","disabled","selectedColorsWithIsDisabledProperty","stopPropagation","RepeatExampleComponent","key","RepeatSimpleExampleComponent","RepeatMultiSelectionExampleComponent","narrowRowSelectedColors","onNarrowRowSelectionChange","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","RepeatDragSimpleExampleComponent","RepeatReorderItemConfigExampleComponent","description","itemConfig","isDraggable","isDisabled","trackBy","index","RepeatTestComponent","colorIndex","push","addNewColor","RepeatRadioWithNonRequiredSelectionModeExampleComponent","RepeatSingleSelectionModeExampleComponent","people","level","status","selectedPeople","onPeopleSelectionChange","RepeatItemExampleComponent","items"],"mappings":"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","file":"demo-repeat-repeat-module-es5.js","sourcesContent":["export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-item-example\\\",\\n    templateUrl: \\\"./repeat-item.example.component.html\\\",\\n})\\nexport class RepeatItemExampleComponent {\\n    public items = [$localize `Item 1`, $localize `Item 2`, $localize `Item 3`];\\n\\n    constructor() { }\\n}\\n\";","export default \"<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n</ng-template>\\n\\n<div class=\\\"example\\\">\\n    <nui-repeat [itemsSource]=\\\"colors\\\"\\n                [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n    </nui-repeat>\\n</div>\\n\";","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule, NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSwitchModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    RepeatDisabledMultiSelectionExampleComponent,\n    RepeatDragHandleExampleComponent,\n    RepeatDragPreviewExampleComponent,\n    RepeatDragSimpleExampleComponent,\n    RepeatExampleComponent,\n    RepeatItemExampleComponent,\n    RepeatMultiSelectionExampleComponent,\n    RepeatRadioSelectionModeExampleComponent,\n    RepeatRadioWithNonRequiredSelectionModeExampleComponent,\n    RepeatReorderItemConfigExampleComponent,\n    RepeatReorderSimpleExampleComponent,\n    RepeatSimpleExampleComponent,\n    RepeatSingleSelectionModeExampleComponent,\n    RepeatSingleWithRequiredSelectionModeExampleComponent,\n} from \"./index\";\nimport { RepeatTestComponent } from \"./repeat-select-test/repeat-test.component\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: RepeatExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"repeat-item\",\n        component: RepeatItemExampleComponent,\n    },\n    {\n        path: \"repeat-test\",\n        component: RepeatTestComponent,\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiRepeatModule,\n        NuiSwitchModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n        ScrollingModule,\n        NuiProgressModule,\n        NuiSearchModule,\n        NuiFormFieldModule,\n    ],\n    declarations: [\n        RepeatExampleComponent,\n        RepeatItemExampleComponent,\n        RepeatDisabledMultiSelectionExampleComponent,\n        RepeatMultiSelectionExampleComponent,\n        RepeatRadioSelectionModeExampleComponent,\n        RepeatRadioWithNonRequiredSelectionModeExampleComponent,\n        RepeatSimpleExampleComponent,\n        RepeatDragSimpleExampleComponent,\n        RepeatReorderSimpleExampleComponent,\n        RepeatDragPreviewExampleComponent,\n        RepeatSingleSelectionModeExampleComponent,\n        RepeatSingleWithRequiredSelectionModeExampleComponent,\n        RepeatTestComponent,\n        RepeatReorderItemConfigExampleComponent,\n        RepeatDragHandleExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class RepeatModule {\n}\n","<nui-repeat [itemsSource]=\"companies\"\n            [dragHandleTemplateRef]=\"dragHandleTemplate\"\n            [repeatItemTemplateRef]=\"repeatItemTemplate\"\n            (itemsReordered)=\"onItemsReordered($event)\">\n</nui-repeat>\n\n<!-- Content template for each item -->\n<ng-template #repeatItemTemplate let-item=\"item\">\n    {{item}}\n</ng-template>\n\n<!-- Drag handle template -->\n<ng-template #dragHandleTemplate  let-item=\"item\">\n    <nui-icon icon=\"drag\"></nui-icon>\n</ng-template>\n","import {Component, ViewEncapsulation} from \"@angular/core\";\nimport {IItemsReorderedEvent} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-repeat-drag-handle-example\",\n    templateUrl: \"./repeat-drag-handle.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatDragHandleExampleComponent {\n    public companies: string[] = [\"Adobe\", \"IBM\", \"Dell\", \"Microsoft\"];\n\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n    }\n}\n","<ng-template #repeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n</ng-template>\n\n<div class=\"example\">\n    <div class=\"flex-row-container\">\n        <div class=\"flex-independent-row-item simple-label\" i18n>Selection:</div>\n        <span class=\"flex-independent-row-item\" id=\"nui-demo-radioselect-value\">\n            {{selectedColors | json}}</span>\n    </div>\n\n    <br>\n\n    <nui-repeat id=\"nui-demo-radio-repeat\"\n              [itemsSource]=\"colors\"\n              [selection]=\"selectedColors\"\n              selectionMode=\"radio\"\n              [repeatItemTemplateRef]=\"repeatItemTemplate\"\n              (selectionChange)=\"onColorSelectionChange($event)\">\n    </nui-repeat>\n</div>\n","import {Component, Input} from \"@angular/core\";\n\n@Component({\n    selector: \"nui-repeat-radio-selection-mode-example\",\n    templateUrl: \"./repeat-radio-selection-mode.example.component.html\",\n})\nexport class RepeatRadioSelectionModeExampleComponent {\n    @Input() public colors = [\n        { color: $localize `blue` },\n        { color: $localize `green` },\n        { color: $localize `yellow` },\n        { color: $localize `cyan` },\n        { color: $localize `magenta` },\n        { color: $localize `black` },\n    ];\n\n    public selectedColors = [this.colors[1]];\n\n    constructor() { }\n\n    public onColorSelectionChange(selection: any) {\n        this.selectedColors = selection;\n    }\n}\n","export default \"<nui-repeat-multi-selection-example></nui-repeat-multi-selection-example>\\n<nui-repeat-disabled-multi-selection-example></nui-repeat-disabled-multi-selection-example>\\n<nui-repeat-single-selection-mode-example></nui-repeat-single-selection-mode-example>\\n<button nui-button id=\\\"add-color\\\" (click)=\\\"addNewColor()\\\">Add color</button>\\n<nui-repeat-radio-selection-mode-example [colors]=\\\"colors\\\"></nui-repeat-radio-selection-mode-example>\\n<nui-repeat-radio-with-non-required-selection-mode-example></nui-repeat-radio-with-non-required-selection-mode-example>\\n<nui-repeat-single-with-required-selection-mode-example></nui-repeat-single-with-required-selection-mode-example>\\n\\n\";","export default \"<div>\\n    <ul id=\\\"nui-repeat-item-example-repeat\\\">\\n        <nui-repeat-item [clickable]=\\\"false\\\"\\n                    [nowrap]=\\\"true\\\"\\n                    [selected]=\\\"false\\\"\\n                    *ngFor=\\\"let item of items\\\">\\n            {{item}}\\n        </nui-repeat-item>\\n    </ul>\\n</div>\\n\";","export default \"import {Component, ViewEncapsulation} from \\\"@angular/core\\\";\\nimport {IItemsReorderedEvent, IRepeatItem, IRepeatItemConfig} from \\\"@nova-ui/bits\\\";\\n\\ninterface IRepeatColorItem extends IRepeatItem {\\n    color: string;\\n    description: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-repeat-reorder-config-example\\\",\\n    templateUrl: \\\"./repeat-reorder-item-config-example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class RepeatReorderItemConfigExampleComponent {\\n    public colors: IRepeatColorItem[] = [\\n        {color: $localize `blue`, description: \\\"Should be draggable\\\"},\\n        {color: $localize`green`, description: \\\"Disabled with callback\\\"},\\n        {color: $localize`yellow`, disabled: true, description: \\\"Disabled with property\\\"},\\n        {color: $localize`orange`, disabled: false, description: \\\"Enabled with property\\\"},\\n    ];\\n\\n    public draggable: boolean = true;\\n    public reorderable: boolean = true;\\n\\n    public itemConfig: IRepeatItemConfig<IRepeatColorItem> = {\\n        isDraggable: item => item.color === $localize `blue` || item.color === $localize `orange`,\\n        // Note: Using both cases to check if item is disabled, normally we should use only one method\\n        isDisabled: item => item.color === $localize`green` || item.disabled,\\n        trackBy: (index, item) => item.color,\\n    };\\n\\n    public onItemsReordered(event: IItemsReorderedEvent<IRepeatColorItem>): void {\\n        this.colors = event.currentState;\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.nui-dnd-drag-preview:extend(.nui-dnd-preview) {\\n    color: @nui-color-text-default;\\n    padding: @nui-space-md;\\n    text-align: center;\\n}\\n\";","export default \"<nui-repeat [itemsSource]=\\\"companies\\\"\\n            [dragHandleTemplateRef]=\\\"dragHandleTemplate\\\"\\n            [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\"\\n            (itemsReordered)=\\\"onItemsReordered($event)\\\">\\n</nui-repeat>\\n\\n<!-- Content template for each item -->\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    {{item}}\\n</ng-template>\\n\\n<!-- Drag handle template -->\\n<ng-template #dragHandleTemplate  let-item=\\\"item\\\">\\n    <nui-icon icon=\\\"drag\\\"></nui-icon>\\n</ng-template>\\n\";","export default \"<p>\\n    <code>nui-repeat</code> is responsible for repeating the items provided in <code>itemSource</code>.\\n</p>\\n\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiRepeatModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    This example demonstrates how easy it is to create a simple list by repeating the items of provided datasource.<br/>\\n    Simply pass an array of items to <code>itemsSource</code>, and also don't forget to set the\\n    <code>repeatItemTemplateRef</code> with a template to render for each item.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-simple\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-repeat-simple-example></nui-repeat-simple-example>\\n</nui-example-wrapper>\\n\\n<h2>Dragging</h2>\\n<p>To enable the dragging of items in the <code>nui-repeat</code> list, just set the <code>draggable</code> input property to <code>true</code>.</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-drag-simple\\\" exampleTitle=\\\"Enabling Drag & Drop\\\">\\n    <nui-repeat-drag-simple-example></nui-repeat-drag-simple-example>\\n</nui-example-wrapper>\\n\\n<h2>Reordering</h2>\\n<p>\\n    To allow list items to be reordered, set the <code>reorderable</code> input property to\\n    <code>true</code>. Bind to the <code>itemsReordered</code> output to receive sorting data\\n    when an item is dragged to a new spot in the list. The payload for the event is an\\n    <code><a href=\\\"../interfaces/IItemsReorderedEvent.html\\\" target=\\\"_blank\\\">IItemsReorderedEvent</a></code>\\n    object.\\n</p>\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    Setting the <code>draggable</code> input to true with the <code>reorderable</code> input set to false\\n    will disable reordering and only allow dragging items to <strong>other</strong> containers.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-reorder-simple\\\" exampleTitle=\\\"Reordering\\\">\\n    <nui-repeat-reorder-simple-example></nui-repeat-reorder-simple-example>\\n</nui-example-wrapper>\\n\\n<h2>Custom Drag Handle</h2>\\n<p>In order to customize the handle by which an element can be dragged, you can specify the <code>dragHandleTemplateRef</code>.</p>\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    Providing the <code>dragHandleTemplateRef</code> template makes declaring the <code>draggable</code> input property optional\\n    as it will automatically be set to <code>true</code>.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-drag-handle\\\" exampleTitle=\\\"Custom Drag Handle\\\">\\n    <nui-repeat-drag-handle-example></nui-repeat-drag-handle-example>\\n</nui-example-wrapper>\\n\\n<h2>Custom Drag Preview</h2>\\n<p>\\n    Once the user starts dragging an item, the preview DOM element is created as the last child of the body.\\n    To have a custom CSS class for that element, you can specify the <code>dragPreviewClass</code> input\\n    property. The default value for this input is <code>\\\"nui-dnd-preview\\\"</code>.\\n</p>\\n<p>\\n    In order to customize the drag preview template, you can specify the\\n    <code>dragPreviewTemplateRef</code> input.\\n</p>\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    Providing the <code>dragPreviewTemplateRef</code> template makes declaring the <code>draggable</code> input property optional\\n    as it will automatically be set to <code>true</code>.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-drag-preview\\\" exampleTitle=\\\"Custom Drag Preview\\\">\\n    <nui-repeat-drag-preview-example></nui-repeat-drag-preview-example>\\n</nui-example-wrapper>\\n\\n<h2>Repeat Item Customization</h2>\\n<p>In order to customize the drag and drop behavior of any item in the repeat component you can provide\\na configuration object containing callbacks for the provided functionality via the <code>itemConfig</code> input.</p>\\n<div>\\n    Customization is available via the following properties of <code>IRepeatItemConfig</code>:\\n    <ul>\\n        <li>\\n            <code>{{getItemConfigKey(\\\"isDraggable\\\")}}</code> - Provide a callback to decide if the item should be draggable\\n        </li>\\n        <li>\\n            <code>{{getItemConfigKey(\\\"isDisabled\\\")}}</code> - Provide a callback to decide if the item should be disabled\\n        </li>\\n        <li>\\n            <code>{{getItemConfigKey(\\\"trackBy\\\")}}</code> - Provide a function that defines how to track changes for items in the iterable.\\n        </li>\\n    </ul>\\n</div>\\n<nui-message type=\\\"warning\\\" [allowDismiss]=\\\"false\\\">\\n    To be able to provide customized draggable behaviour per item, the main <code>draggable</code> input must be true.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-reorder-item-config\\\" exampleTitle=\\\"Drag & Drop - Per Item Customization\\\">\\n    <nui-repeat-reorder-config-example></nui-repeat-reorder-config-example>\\n</nui-example-wrapper>\\n\\n<h2>Multiple Selection Mode</h2>\\n<p>\\n    The <code>selectionMode</code>: <code>multi</code> repeats the items with a checkbox component, and allows the user to select\\n    multiple items by clicking the provided checkboxes or by clicking on the row itself.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-multi-selection\\\" exampleTitle=\\\"Multi selection repeat\\\">\\n    <nui-repeat-multi-selection-example></nui-repeat-multi-selection-example>\\n</nui-example-wrapper>\\n\\n<h2>Multiple Selection Mode with Disabled Items</h2>\\n<p>\\n    You can easily set the items being repeated to a disabled state. Make sure the <code>itemsSource</code> you provide contains property\\n    <code>disabled</code>: <code>true</code> for each disabled item.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-disabled-multi-selection\\\" exampleTitle=\\\"Disabled items in the repeat\\\">\\n    <nui-repeat-disabled-multi-selection-example></nui-repeat-disabled-multi-selection-example>\\n</nui-example-wrapper>\\n\\n<h2>Single Selection Mode with Item Highlight</h2>\\n<p>\\n    If you need to highlight clicked item without checkboxes and radio-button, you can just use\\n    <code>selectionMode</code>: <code>single</code>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-single-selection-mode\\\" exampleTitle=\\\"Highlight selected item\\\">\\n    <nui-repeat-single-selection-mode-example></nui-repeat-single-selection-mode-example>\\n</nui-example-wrapper>\\n\\n<h2>Single Selection Mode with Radio Buttons</h2>\\n<p>\\n    Use the <code>selectionMode</code>: <code>radio</code> mode to add radio buttons for each item and allow to select one of them.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-radio-selection-mode\\\" exampleTitle=\\\"repeat with radio buttons\\\">\\n    <nui-repeat-radio-selection-mode-example></nui-repeat-radio-selection-mode-example>\\n</nui-example-wrapper>\\n\\n<nui-message type=\\\"warning\\\" [allowDismiss]=\\\"false\\\">\\n    <strong>Pay Attention!</strong> The examples below may allow actions not common for the front-end world. Please\\n    agree the use of the following examples with your UI\\\\UX team.\\n</nui-message>\\n\\n<h2>Non-Required Selection Mode with Radio Buttons</h2>\\n<p>\\n    This example shows how to make a list with radio buttons that can be either checked on or checked off.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-radio-with-non-required-selection-mode\\\" exampleTitle=\\\"Radio with Non Required Selection Mode\\\">\\n    <nui-repeat-radio-with-non-required-selection-mode-example></nui-repeat-radio-with-non-required-selection-mode-example>\\n</nui-example-wrapper>\\n\\n<h2>Required Single Selection Mode</h2>\\n<p>\\n    This example shows the single selection mode list where at least one item is always selected.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"repeat-single-with-required-selection-mode\\\" exampleTitle=\\\"Required Single Selection Mode\\\">\\n    <nui-repeat-single-with-required-selection-mode-example></nui-repeat-single-with-required-selection-mode-example>\\n</nui-example-wrapper>\\n\\n<nui-message [allowDismiss]=\\\"false\\\" type=\\\"info\\\">\\n    Pagination and Virtual Scroll aren't natively part of the <code>nui-repeat</code> component but the <a href=\\\"../additional-documentation/schematics/list.html\\\" target=\\\"_parent\\\">List Schematic documentation</a> provides examples on how to use them.\\n</nui-message>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-multi-selection-example\\\",\\n    templateUrl: \\\"./repeat-multi-selection.example.component.html\\\",\\n})\\nexport class RepeatMultiSelectionExampleComponent {\\n    public colors = [\\n        { color: $localize `blue` },\\n        { color: $localize `green` },\\n        { color: $localize `yellow` },\\n        { color: $localize `cyan` },\\n        { color: $localize `magenta` },\\n        { color: $localize `black` },\\n    ];\\n\\n    public narrowRowSelectedColors = [\\n        this.colors[2],\\n        this.colors[5],\\n    ];\\n\\n    constructor() { }\\n\\n    public onNarrowRowSelectionChange(selection: any) {\\n        this.narrowRowSelectedColors = selection;\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-single-selection-mode-example\\\",\\n    templateUrl: \\\"./repeat-single-selection-mode.example.component.html\\\",\\n    styleUrls: [\\n        \\\"./repeat-single-selection-mode.example.less\\\",\\n    ],\\n})\\nexport class RepeatSingleSelectionModeExampleComponent {\\n    public people = [\\n        { name: \\\"Jo Smith\\\", level: $localize `bronze`, status: $localize `active` },\\n        { name: \\\"Claire Rogan\\\", level: $localize `gold`, status: $localize `active`, disabled: true },\\n        { name: \\\"Declan McGregor\\\", level: $localize `platinum`, status: $localize `active` },\\n        { name: \\\"Fergus O'Brien\\\", level: $localize `bronze`, status: $localize `inactive` },\\n        { name: \\\"Catriona Kildare\\\", level: $localize `gold`, status: $localize `active` },\\n    ];\\n\\n    public selectedPeople = [this.people[2]];\\n\\n    constructor() { }\\n\\n    public onPeopleSelectionChange(selection: any) {\\n        this.selectedPeople = selection;\\n    }\\n}\\n\";","<nui-repeat [itemsSource]=\"companies\"\n            dragPreviewClass=\"nui-dnd-drag-preview\"\n            [dragPreviewTemplateRef]=\"dragPreviewTemplate\"\n            [repeatItemTemplateRef]=\"repeatItemTemplate\"\n            (itemsReordered)=\"onItemsReordered($event)\">\n</nui-repeat>\n\n<!-- Content template for each item -->\n<ng-template #repeatItemTemplate let-item=\"item\">\n    {{item.name}}\n</ng-template>\n\n<!-- Drag preview template -->\n<ng-template #dragPreviewTemplate  let-item=\"item\">\n    <p>This is the preview for {{item.name}}</p>\n    <img width=\"100\" [src]=\"item.preview\" [alt]=\"item.name\">\n</ng-template>\n","import {Component, ViewEncapsulation} from \"@angular/core\";\nimport {IItemsReorderedEvent, IRepeatItem} from \"@nova-ui/bits\";\n\ninterface IRepeatCompanyItem extends IRepeatItem {\n    name: string;\n    disabled?: boolean;\n    preview?: string;\n}\n\n@Component({\n    selector: \"nui-repeat-drag-preview-example\",\n    templateUrl: \"./repeat-drag-preview.example.component.html\",\n    styleUrls: [\"./repeat-drag-preview.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatDragPreviewExampleComponent {\n    public companies: IRepeatCompanyItem[] = [\n        {\n            name: \"Adobe\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png\",\n        },\n        {\n            name: \"IBM\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png\",\n        },\n        {\n            name: \"Dell\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\",\n        },\n        {\n            name: \"Microsoft\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg\",\n        },\n    ];\n\n    public onItemsReordered(event: IItemsReorderedEvent<IRepeatCompanyItem>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n    }\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-repeat-test\\\",\\n    templateUrl: \\\"./repeat-test.component.html\\\",\\n})\\nexport class RepeatTestComponent {\\n\\n    public colors = [\\n        { color: $localize `blue`},\\n        { color: $localize `green`},\\n        { color: $localize `yellow`},\\n        { color: $localize `cyan`},\\n        { color: $localize `magenta`},\\n        { color: $localize `black`},\\n    ];\\n\\n    constructor() { }\\n\\n    private colorIndex: number = 1;\\n\\n    public addNewColor(): void {\\n        this.colors.push(\\n            { color: `new color ${this.colorIndex++}` }\\n        );\\n    }\\n}\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\nimport { IRepeatItemConfig, RepeatComponent } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-repeat-example\\\",\\n    templateUrl: \\\"./repeat-docs.example.component.html\\\",\\n})\\nexport class RepeatExampleComponent {\\n    getItemConfigKey(key: keyof IRepeatItemConfig): string {\\n        return key;\\n    }\\n\\n    getRepeatPropKey(key: keyof RepeatComponent): string {\\n        return key;\\n    }\\n}\\n\";","export default \"import {Component, ViewEncapsulation} from \\\"@angular/core\\\";\\nimport {IItemsReorderedEvent} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-repeat-drag-handle-example\\\",\\n    templateUrl: \\\"./repeat-drag-handle.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class RepeatDragHandleExampleComponent {\\n    public companies: string[] = [\\\"Adobe\\\", \\\"IBM\\\", \\\"Dell\\\", \\\"Microsoft\\\"];\\n\\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\\n        // update items according to the new order\\n        this.companies = event.currentState;\\n    }\\n}\\n\";","export default \"export * from \\\"./repeat-docs/repeat-docs.example.component\\\";\\nexport * from \\\"./repeat-simple/repeat-simple.example.component\\\";\\nexport * from \\\"./repeat-multi-selection/repeat-multi-selection.example.component\\\";\\nexport * from \\\"./repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component\\\";\\nexport * from \\\"./repeat-single-selection-mode/repeat-single-selection-mode.example.component\\\";\\nexport * from \\\"./repeat-radio-selection-mode/repeat-radio-selection-mode.example.component\\\";\\nexport * from \\\"./repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component\\\";\\nexport * from \\\"./repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component\\\";\\nexport * from \\\"./repeat-item/repeat-item.example.component\\\";\\nexport * from \\\"./repeat-reorder-simple/repeat-reorder-simple-example.component\\\";\\nexport * from \\\"./repeat-drag-simple/repeat-drag-simple.example.component\\\";\\nexport * from \\\"./repeat-drag-handle/repeat-drag-handle.example.component\\\";\\nexport * from \\\"./repeat-drag-preview/repeat-drag-preview.example.component\\\";\\nexport * from \\\"./repeat-reorder-item-config/repeat-reorder-item-config-example.component\\\";\\n\";","export default \"import {Component, ViewEncapsulation} from \\\"@angular/core\\\";\\nimport {IItemsReorderedEvent} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-repeat-drag-simple-example\\\",\\n    templateUrl: \\\"./repeat-drag-simple.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class RepeatDragSimpleExampleComponent {\\n    public companies: string[] = [\\\"Adobe\\\", \\\"IBM\\\", \\\"Dell\\\", \\\"Microsoft\\\"];\\n\\n    public draggable: boolean = true;\\n\\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\\n        // update items according to the new order\\n        this.companies = event.currentState;\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-radio-with-non-required-selection-mode-example\\\",\\n    templateUrl: \\\"./repeat-radio-with-non-required-selection-mode.example.component.html\\\",\\n})\\nexport class RepeatRadioWithNonRequiredSelectionModeExampleComponent {\\n    public colors = [\\n        { color: $localize `blue`, disabled: true},\\n        { color: $localize `green`},\\n        { color: $localize `yellow`, disabled: true},\\n        { color: $localize `cyan`},\\n        { color: $localize `magenta`},\\n        { color: $localize `black`},\\n    ];\\n\\n    public selectedColors = [this.colors[1]];\\n    public selectedMode: string = \\\"radioWithNonRequiredSelection\\\";\\n\\n    constructor() { }\\n\\n    public onColorSelectionChange(selection: any) {\\n        this.selectedColors = selection;\\n    }\\n}\\n\";","export default \"<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n</ng-template>\\n\\n<div class=\\\"example\\\">\\n    <div class=\\\"flex-row-container\\\">\\n        <div class=\\\"flex-independent-row-item simple-label\\\" i18n>Selection:</div>\\n        <span class=\\\"flex-independent-row-item\\\">{{selectedColors | json}}</span>\\n    </div>\\n\\n    <br>\\n\\n    <div>\\n        <nui-repeat [itemsSource]=\\\"colors\\\"\\n                  [selection]=\\\"selectedColors\\\"\\n                  [selectionMode]=\\\"selectedMode\\\"\\n                  (selectionChange)=\\\"onColorSelectionChange($event)\\\"\\n                  [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n        </nui-repeat>\\n    </div>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-simple-example\\\",\\n    templateUrl: \\\"./repeat-simple.example.component.html\\\",\\n})\\nexport class RepeatSimpleExampleComponent {\\npublic colors = [\\n        { color: $localize `blue` },\\n        { color: $localize `green` },\\n        { color: $localize `yellow` },\\n        { color: $localize `cyan` },\\n        { color: $localize `magenta` },\\n        { color: $localize `black` },\\n    ];\\n\\n    constructor() { }\\n}\\n\";","<div class=\"d-flex\">\n    <nui-switch class=\"p-2\" [(value)]=\"draggable\" i18n>Draggable</nui-switch>\n    <nui-switch class=\"p-2\" [(value)]=\"reorderable\" i18n>Reorderable</nui-switch>\n</div>\n<nui-repeat (itemsReordered)=\"onItemsReordered($event)\"\n            [itemsSource]=\"companies\"\n            [repeatItemTemplateRef]=\"repeatItemTemplate\"\n            [(draggable)]=\"draggable\"\n            [(reorderable)]=\"reorderable\">\n</nui-repeat>\n<div class=\"d-flex m-2\">\n    <div><strong i18n>Event data</strong>:</div>\n    <div class=\"ml-1\">{{droppedEventData ? (droppedEventData | json) : \"N/A\"}}</div>\n</div>\n\n<!-- Content template for each item -->\n<ng-template #repeatItemTemplate let-item=\"item\">\n    {{item}}\n</ng-template>\n","import {Component, ViewEncapsulation} from \"@angular/core\";\nimport {IItemsReorderedEvent} from \"@nova-ui/bits\";\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\ninterface ISortingOrderTrimmedData extends Omit<IItemsReorderedEvent, \"item\"|\"dropListRef\"> {}\n\n@Component({\n    selector: \"nui-repeat-reorder-simple-example\",\n    templateUrl: \"./repeat-reorder-simple-example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatReorderSimpleExampleComponent {\n    public companies: string[] = [\"Adobe\", \"IBM\", \"Dell\", \"Microsoft\"];\n\n    public draggable: boolean = true;\n    public reorderable: boolean = true;\n    public droppedEventData: ISortingOrderTrimmedData;\n\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n\n        // copy all event proprieties except the CdkDrag & CdkDropList references\n        const {item, dropListRef, ...rest} = event;\n        this.droppedEventData = rest;\n\n        console.log(event);\n    }\n}\n","export * from \"./repeat-docs/repeat-docs.example.component\";\nexport * from \"./repeat-simple/repeat-simple.example.component\";\nexport * from \"./repeat-multi-selection/repeat-multi-selection.example.component\";\nexport * from \"./repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component\";\nexport * from \"./repeat-single-selection-mode/repeat-single-selection-mode.example.component\";\nexport * from \"./repeat-radio-selection-mode/repeat-radio-selection-mode.example.component\";\nexport * from \"./repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component\";\nexport * from \"./repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component\";\nexport * from \"./repeat-item/repeat-item.example.component\";\nexport * from \"./repeat-reorder-simple/repeat-reorder-simple-example.component\";\nexport * from \"./repeat-drag-simple/repeat-drag-simple.example.component\";\nexport * from \"./repeat-drag-handle/repeat-drag-handle.example.component\";\nexport * from \"./repeat-drag-preview/repeat-drag-preview.example.component\";\nexport * from \"./repeat-reorder-item-config/repeat-reorder-item-config-example.component\";\n","<ng-template #repeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n</ng-template>\n\n<div class=\"example\">\n    <div class=\"flex-row-container\">\n        <div class=\"flex-independent-row-item simple-label\" i18n>Selection:</div>\n        <span class=\"flex-independent-row-item\">{{selectedColors | json}}</span>\n    </div>\n\n    <br>\n\n    <div>\n        <nui-repeat [itemsSource]=\"colors\"\n                  [selection]=\"selectedColors\"\n                  [selectionMode]=\"selectedMode\"\n                  (selectionChange)=\"onColorSelectionChange($event)\"\n                  [repeatItemTemplateRef]=\"repeatItemTemplate\">\n        </nui-repeat>\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-single-with-required-selection-mode-example\",\n    templateUrl: \"./repeat-single-with-required-selection-mode.example.component.html\",\n})\nexport class RepeatSingleWithRequiredSelectionModeExampleComponent {\n    public colors = [\n        { color: $localize `blue`},\n        { color: $localize `green`},\n        { color: $localize `yellow`},\n        { color: $localize `cyan`},\n        { color: $localize `magenta`},\n        { color: $localize `black`},\n    ];\n\n    public selectedColors = [this.colors[1]];\n    public selectedMode: string = \"singleWithRequiredSelection\";\n\n    constructor() { }\n\n    public onColorSelectionChange(selection: any) {\n        this.selectedColors = selection;\n    }\n}\n","<ng-template #repeatItemColorBoxTemplate let-item=\"item\">\n    <div class=\"color-box {{item.color}}\"></div>\n    <div [attr.class]=\"item.disabled ? 'nui-text-secondary--disabled' : null\">\n        {{item.color}}\n    </div>\n</ng-template>\n\n<ng-template #actionsContent let-item=\"item\">\n        <div >\n            <button nui-button [attr.disabled]=\"item.disabled ? '' : null\" type=\"button\" displayStyle=\"action\" icon=\"menu\" (click)=\"handleClick($event)\"></button>\n            <button nui-button [attr.disabled]=\"item.disabled ? '' : null\" type=\"button\" displayStyle=\"action\" icon=\"caret-right\" (click)=\"handleClick($event)\"></button>\n        </div>\n</ng-template>\n\n<div class=\"example\">\n    <nui-repeat id=\"nui-demo-multi-repeat-disabled-items\"\n              [itemsSource]=\"colorsWithIsDisabledProperty\"\n              selectionMode=\"multi\"\n              [selection]=\"selectedColorsWithIsDisabledProperty\"\n              [repeatItemTemplateRef]=\"repeatItemColorBoxTemplate\"\n              [actionsTemplateRef]=\"actionsContent\">\n    </nui-repeat>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-disabled-multi-selection-example\",\n    templateUrl: \"./repeat-disabled-multi-selection.example.component.html\",\n})\nexport class RepeatDisabledMultiSelectionExampleComponent {\n    public colorsWithIsDisabledProperty = [\n        { color: $localize `blue`, disabled: true },\n        { color: $localize `green`, disabled: false },\n        { color: $localize `yellow` },\n        { color: $localize `cyan` },\n        { color: $localize `magenta`, disabled: true },\n        { color: $localize `black` },\n    ];\n\n    public selectedColorsWithIsDisabledProperty = [\n        this.colorsWithIsDisabledProperty[0],\n        this.colorsWithIsDisabledProperty[5],\n    ];\n\n    public handleClick(event: any) {\n        event.stopPropagation();\n    }\n\n    constructor() { }\n}\n","export default \"<div class=\\\"d-flex\\\">\\n    <nui-switch class=\\\"p-2\\\" [(value)]=\\\"draggable\\\" i18n>Dragging</nui-switch>\\n    <nui-switch class=\\\"p-2\\\" [(value)]=\\\"reorderable\\\" i18n>Reordering</nui-switch>\\n</div>\\n<nui-repeat (itemsReordered)=\\\"onItemsReordered($event)\\\"\\n            [itemsSource]=\\\"colors\\\"\\n            [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\"\\n            [itemConfig]=\\\"itemConfig\\\"\\n            [(draggable)]=\\\"draggable\\\"\\n            [(reorderable)]=\\\"reorderable\\\">\\n</nui-repeat>\\n\\n<!-- Content template for each item -->\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div [class.nui-text-secondary--disabled]=\\\"itemConfig.isDisabled(item)\\\">\\n        {{item.color}} - {{item.description}}\\n    </div>\\n</ng-template>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-single-with-required-selection-mode-example\\\",\\n    templateUrl: \\\"./repeat-single-with-required-selection-mode.example.component.html\\\",\\n})\\nexport class RepeatSingleWithRequiredSelectionModeExampleComponent {\\n    public colors = [\\n        { color: $localize `blue`},\\n        { color: $localize `green`},\\n        { color: $localize `yellow`},\\n        { color: $localize `cyan`},\\n        { color: $localize `magenta`},\\n        { color: $localize `black`},\\n    ];\\n\\n    public selectedColors = [this.colors[1]];\\n    public selectedMode: string = \\\"singleWithRequiredSelection\\\";\\n\\n    constructor() { }\\n\\n    public onColorSelectionChange(selection: any) {\\n        this.selectedColors = selection;\\n    }\\n}\\n\";","import {Component} from \"@angular/core\";\nimport { IRepeatItemConfig, RepeatComponent } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-repeat-example\",\n    templateUrl: \"./repeat-docs.example.component.html\",\n})\nexport class RepeatExampleComponent {\n    getItemConfigKey(key: keyof IRepeatItemConfig): string {\n        return key;\n    }\n\n    getRepeatPropKey(key: keyof RepeatComponent): string {\n        return key;\n    }\n}\n","<p>\n    <code>nui-repeat</code> is responsible for repeating the items provided in <code>itemSource</code>.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiRepeatModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This example demonstrates how easy it is to create a simple list by repeating the items of provided datasource.<br/>\n    Simply pass an array of items to <code>itemsSource</code>, and also don't forget to set the\n    <code>repeatItemTemplateRef</code> with a template to render for each item.\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-simple\" exampleTitle=\"Basic Usage\">\n    <nui-repeat-simple-example></nui-repeat-simple-example>\n</nui-example-wrapper>\n\n<h2>Dragging</h2>\n<p>To enable the dragging of items in the <code>nui-repeat</code> list, just set the <code>draggable</code> input property to <code>true</code>.</p>\n<nui-example-wrapper filenamePrefix=\"repeat-drag-simple\" exampleTitle=\"Enabling Drag & Drop\">\n    <nui-repeat-drag-simple-example></nui-repeat-drag-simple-example>\n</nui-example-wrapper>\n\n<h2>Reordering</h2>\n<p>\n    To allow list items to be reordered, set the <code>reorderable</code> input property to\n    <code>true</code>. Bind to the <code>itemsReordered</code> output to receive sorting data\n    when an item is dragged to a new spot in the list. The payload for the event is an\n    <code><a href=\"../interfaces/IItemsReorderedEvent.html\" target=\"_blank\">IItemsReorderedEvent</a></code>\n    object.\n</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    Setting the <code>draggable</code> input to true with the <code>reorderable</code> input set to false\n    will disable reordering and only allow dragging items to <strong>other</strong> containers.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"repeat-reorder-simple\" exampleTitle=\"Reordering\">\n    <nui-repeat-reorder-simple-example></nui-repeat-reorder-simple-example>\n</nui-example-wrapper>\n\n<h2>Custom Drag Handle</h2>\n<p>In order to customize the handle by which an element can be dragged, you can specify the <code>dragHandleTemplateRef</code>.</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    Providing the <code>dragHandleTemplateRef</code> template makes declaring the <code>draggable</code> input property optional\n    as it will automatically be set to <code>true</code>.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"repeat-drag-handle\" exampleTitle=\"Custom Drag Handle\">\n    <nui-repeat-drag-handle-example></nui-repeat-drag-handle-example>\n</nui-example-wrapper>\n\n<h2>Custom Drag Preview</h2>\n<p>\n    Once the user starts dragging an item, the preview DOM element is created as the last child of the body.\n    To have a custom CSS class for that element, you can specify the <code>dragPreviewClass</code> input\n    property. The default value for this input is <code>\"nui-dnd-preview\"</code>.\n</p>\n<p>\n    In order to customize the drag preview template, you can specify the\n    <code>dragPreviewTemplateRef</code> input.\n</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    Providing the <code>dragPreviewTemplateRef</code> template makes declaring the <code>draggable</code> input property optional\n    as it will automatically be set to <code>true</code>.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"repeat-drag-preview\" exampleTitle=\"Custom Drag Preview\">\n    <nui-repeat-drag-preview-example></nui-repeat-drag-preview-example>\n</nui-example-wrapper>\n\n<h2>Repeat Item Customization</h2>\n<p>In order to customize the drag and drop behavior of any item in the repeat component you can provide\na configuration object containing callbacks for the provided functionality via the <code>itemConfig</code> input.</p>\n<div>\n    Customization is available via the following properties of <code>IRepeatItemConfig</code>:\n    <ul>\n        <li>\n            <code>{{getItemConfigKey(\"isDraggable\")}}</code> - Provide a callback to decide if the item should be draggable\n        </li>\n        <li>\n            <code>{{getItemConfigKey(\"isDisabled\")}}</code> - Provide a callback to decide if the item should be disabled\n        </li>\n        <li>\n            <code>{{getItemConfigKey(\"trackBy\")}}</code> - Provide a function that defines how to track changes for items in the iterable.\n        </li>\n    </ul>\n</div>\n<nui-message type=\"warning\" [allowDismiss]=\"false\">\n    To be able to provide customized draggable behaviour per item, the main <code>draggable</code> input must be true.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"repeat-reorder-item-config\" exampleTitle=\"Drag & Drop - Per Item Customization\">\n    <nui-repeat-reorder-config-example></nui-repeat-reorder-config-example>\n</nui-example-wrapper>\n\n<h2>Multiple Selection Mode</h2>\n<p>\n    The <code>selectionMode</code>: <code>multi</code> repeats the items with a checkbox component, and allows the user to select\n    multiple items by clicking the provided checkboxes or by clicking on the row itself.\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-multi-selection\" exampleTitle=\"Multi selection repeat\">\n    <nui-repeat-multi-selection-example></nui-repeat-multi-selection-example>\n</nui-example-wrapper>\n\n<h2>Multiple Selection Mode with Disabled Items</h2>\n<p>\n    You can easily set the items being repeated to a disabled state. Make sure the <code>itemsSource</code> you provide contains property\n    <code>disabled</code>: <code>true</code> for each disabled item.\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-disabled-multi-selection\" exampleTitle=\"Disabled items in the repeat\">\n    <nui-repeat-disabled-multi-selection-example></nui-repeat-disabled-multi-selection-example>\n</nui-example-wrapper>\n\n<h2>Single Selection Mode with Item Highlight</h2>\n<p>\n    If you need to highlight clicked item without checkboxes and radio-button, you can just use\n    <code>selectionMode</code>: <code>single</code>\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-single-selection-mode\" exampleTitle=\"Highlight selected item\">\n    <nui-repeat-single-selection-mode-example></nui-repeat-single-selection-mode-example>\n</nui-example-wrapper>\n\n<h2>Single Selection Mode with Radio Buttons</h2>\n<p>\n    Use the <code>selectionMode</code>: <code>radio</code> mode to add radio buttons for each item and allow to select one of them.\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-radio-selection-mode\" exampleTitle=\"repeat with radio buttons\">\n    <nui-repeat-radio-selection-mode-example></nui-repeat-radio-selection-mode-example>\n</nui-example-wrapper>\n\n<nui-message type=\"warning\" [allowDismiss]=\"false\">\n    <strong>Pay Attention!</strong> The examples below may allow actions not common for the front-end world. Please\n    agree the use of the following examples with your UI\\UX team.\n</nui-message>\n\n<h2>Non-Required Selection Mode with Radio Buttons</h2>\n<p>\n    This example shows how to make a list with radio buttons that can be either checked on or checked off.\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-radio-with-non-required-selection-mode\" exampleTitle=\"Radio with Non Required Selection Mode\">\n    <nui-repeat-radio-with-non-required-selection-mode-example></nui-repeat-radio-with-non-required-selection-mode-example>\n</nui-example-wrapper>\n\n<h2>Required Single Selection Mode</h2>\n<p>\n    This example shows the single selection mode list where at least one item is always selected.\n</p>\n<nui-example-wrapper filenamePrefix=\"repeat-single-with-required-selection-mode\" exampleTitle=\"Required Single Selection Mode\">\n    <nui-repeat-single-with-required-selection-mode-example></nui-repeat-single-with-required-selection-mode-example>\n</nui-example-wrapper>\n\n<nui-message [allowDismiss]=\"false\" type=\"info\">\n    Pagination and Virtual Scroll aren't natively part of the <code>nui-repeat</code> component but the <a href=\"../additional-documentation/schematics/list.html\" target=\"_parent\">List Schematic documentation</a> provides examples on how to use them.\n</nui-message>\n","<ng-template #repeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n</ng-template>\n\n<div class=\"example\">\n    <nui-repeat [itemsSource]=\"colors\"\n                [repeatItemTemplateRef]=\"repeatItemTemplate\">\n    </nui-repeat>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-simple-example\",\n    templateUrl: \"./repeat-simple.example.component.html\",\n})\nexport class RepeatSimpleExampleComponent {\npublic colors = [\n        { color: $localize `blue` },\n        { color: $localize `green` },\n        { color: $localize `yellow` },\n        { color: $localize `cyan` },\n        { color: $localize `magenta` },\n        { color: $localize `black` },\n    ];\n\n    constructor() { }\n}\n","export default \"<ng-template #repeatPeopleItemTemplate let-item=\\\"item\\\">\\n    <nui-icon style=\\\"align-self: start\\\" css-class=\\\"flex-row-item\\\" icon=\\\"user\\\"></nui-icon>\\n    <div class=\\\"flex-row-item flex-column-container\\\">\\n        <div class=\\\"name-item\\\">{{item.name}}</div>\\n        <div [ngClass]=\\\"item.level\\\">{{item.level}}</div>\\n        <div class=\\\"status-item\\\">{{item.status}}</div>\\n    </div>\\n</ng-template>\\n\\n<ng-template #actionsContent>\\n    <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"menu\\\"></button>\\n    <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"caret-right\\\"></button>\\n</ng-template>\\n\\n<div class=\\\"example single-selection-example\\\">\\n    <div class=\\\"flex-row-container\\\">\\n        <div class=\\\"flex-independent-row-item simple-label\\\" i18n>Selection:</div>\\n        <span class=\\\"flex-independent-row-item\\\" id=\\\"nui-demo-singleselect-value\\\">\\n            {{selectedPeople | json}}</span>\\n    </div>\\n\\n    <br>\\n\\n    <nui-repeat id=\\\"nui-demo-single-repeat\\\"\\n              [itemsSource]=\\\"people\\\"\\n              [selection]=\\\"selectedPeople\\\"\\n              selectionMode=\\\"single\\\"\\n              (selectionChange)=\\\"onPeopleSelectionChange($event)\\\"\\n              [repeatItemTemplateRef]=\\\"repeatPeopleItemTemplate\\\"\\n              [actionsTemplateRef]=\\\"actionsContent\\\">\\n    </nui-repeat>\\n</div>\\n\";","<ng-template #repeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n</ng-template>\n\n<div class=\"example\">\n    <div class=\"flex-row-container\">\n        <div class=\"flex-independent-row-item simple-label\" i18n>Selection:</div>\n        <span class=\"flex-independent-row-item\" id=\"nui-demo-multiselect-values\">\n            {{narrowRowSelectedColors | json}}</span>\n    </div>\n\n    <br>\n\n    <nui-repeat id=\"nui-demo-multi-repeat\"\n              [itemsSource]=\"colors\"\n              selectionMode=\"multi\"\n              [selection]=\"narrowRowSelectedColors\"\n              (selectionChange)=\"onNarrowRowSelectionChange($event)\"\n              [repeatItemTemplateRef]=\"repeatItemTemplate\">\n        <div repeatHeaderTemplate>\n            <div class=\"template-header\" i18n>repeat header from template</div>\n        </div>\n    </nui-repeat>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-multi-selection-example\",\n    templateUrl: \"./repeat-multi-selection.example.component.html\",\n})\nexport class RepeatMultiSelectionExampleComponent {\n    public colors = [\n        { color: $localize `blue` },\n        { color: $localize `green` },\n        { color: $localize `yellow` },\n        { color: $localize `cyan` },\n        { color: $localize `magenta` },\n        { color: $localize `black` },\n    ];\n\n    public narrowRowSelectedColors = [\n        this.colors[2],\n        this.colors[5],\n    ];\n\n    constructor() { }\n\n    public onNarrowRowSelectionChange(selection: any) {\n        this.narrowRowSelectedColors = selection;\n    }\n}\n","var map = {\n\t\"./index.ts\": \"F5ez\",\n\t\"./repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.html\": \"qsKz\",\n\t\"./repeat-disabled-multi-selection/repeat-disabled-multi-selection.example.component.ts\": \"djg0\",\n\t\"./repeat-docs/repeat-docs.example.component.html\": \"9H/v\",\n\t\"./repeat-docs/repeat-docs.example.component.ts\": \"D99s\",\n\t\"./repeat-drag-handle/repeat-drag-handle.example.component.html\": \"7MfL\",\n\t\"./repeat-drag-handle/repeat-drag-handle.example.component.ts\": \"E/+A\",\n\t\"./repeat-drag-preview/repeat-drag-preview.example.component.html\": \"wyKk\",\n\t\"./repeat-drag-preview/repeat-drag-preview.example.component.less\": \"788R\",\n\t\"./repeat-drag-preview/repeat-drag-preview.example.component.ts\": \"ZNZk\",\n\t\"./repeat-drag-simple/repeat-drag-simple.example.component.html\": \"eaW1\",\n\t\"./repeat-drag-simple/repeat-drag-simple.example.component.ts\": \"FU6U\",\n\t\"./repeat-item/repeat-item.example.component.html\": \"3JjW\",\n\t\"./repeat-item/repeat-item.example.component.ts\": \"+2O1\",\n\t\"./repeat-multi-selection/repeat-multi-selection.example.component.html\": \"dxcK\",\n\t\"./repeat-multi-selection/repeat-multi-selection.example.component.ts\": \"B6UP\",\n\t\"./repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.html\": \"dTTn\",\n\t\"./repeat-radio-selection-mode/repeat-radio-selection-mode.example.component.ts\": \"ctzm\",\n\t\"./repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.html\": \"Zgvf\",\n\t\"./repeat-radio-with-non-required-selection-mode/repeat-radio-with-non-required-selection-mode.example.component.ts\": \"LU3E\",\n\t\"./repeat-reorder-item-config/repeat-reorder-item-config-example.component.html\": \"Pa4q\",\n\t\"./repeat-reorder-item-config/repeat-reorder-item-config-example.component.ts\": \"6p70\",\n\t\"./repeat-reorder-simple/repeat-reorder-simple-example.component.html\": \"ebJX\",\n\t\"./repeat-reorder-simple/repeat-reorder-simple-example.component.ts\": \"g0JM\",\n\t\"./repeat-select-test/repeat-test.component.html\": \"1ag7\",\n\t\"./repeat-select-test/repeat-test.component.ts\": \"D14v\",\n\t\"./repeat-simple/repeat-simple.example.component.html\": \"+l9c\",\n\t\"./repeat-simple/repeat-simple.example.component.ts\": \"MtRR\",\n\t\"./repeat-single-selection-mode/repeat-single-selection-mode.example.component.html\": \"XD94\",\n\t\"./repeat-single-selection-mode/repeat-single-selection-mode.example.component.ts\": \"BvBn\",\n\t\"./repeat-single-selection-mode/repeat-single-selection-mode.example.less\": \"tB9T\",\n\t\"./repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.html\": \"MMC6\",\n\t\"./repeat-single-with-required-selection-mode/repeat-single-with-required-selection-mode.example.component.ts\": \"Ph0z\",\n\t\"./repeat.module.ts\": \"vUEW\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"XxfH\";","<div class=\"d-flex\">\n    <nui-switch class=\"p-2\" [(value)]=\"draggable\" i18n>Draggable</nui-switch>\n</div>\n<nui-repeat (itemsReordered)=\"onItemsReordered($event)\"\n            [itemsSource]=\"companies\"\n            [repeatItemTemplateRef]=\"repeatItemTemplate\"\n            [draggable]=\"draggable\">\n</nui-repeat>\n\n<!-- Content template for each item -->\n<ng-template #repeatItemTemplate let-item=\"item\">\n    {{item}}\n</ng-template>\n","import {Component, ViewEncapsulation} from \"@angular/core\";\nimport {IItemsReorderedEvent} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-repeat-drag-simple-example\",\n    templateUrl: \"./repeat-drag-simple.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatDragSimpleExampleComponent {\n    public companies: string[] = [\"Adobe\", \"IBM\", \"Dell\", \"Microsoft\"];\n\n    public draggable: boolean = true;\n\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\n        // update items according to the new order\n        this.companies = event.currentState;\n    }\n}\n","export default \"import {Component, ViewEncapsulation} from \\\"@angular/core\\\";\\nimport {IItemsReorderedEvent, IRepeatItem} from \\\"@nova-ui/bits\\\";\\n\\ninterface IRepeatCompanyItem extends IRepeatItem {\\n    name: string;\\n    disabled?: boolean;\\n    preview?: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-repeat-drag-preview-example\\\",\\n    templateUrl: \\\"./repeat-drag-preview.example.component.html\\\",\\n    styleUrls: [\\\"./repeat-drag-preview.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class RepeatDragPreviewExampleComponent {\\n    public companies: IRepeatCompanyItem[] = [\\n        {\\n            name: \\\"Adobe\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png\\\",\\n        },\\n        {\\n            name: \\\"IBM\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png\\\",\\n        },\\n        {\\n            name: \\\"Dell\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\\\",\\n        },\\n        {\\n            name: \\\"Microsoft\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg\\\",\\n        },\\n    ];\\n\\n    public onItemsReordered(event: IItemsReorderedEvent<IRepeatCompanyItem>): void {\\n        // update items according to the new order\\n        this.companies = event.currentState;\\n    }\\n}\\n\";","export default \"<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n</ng-template>\\n\\n<div class=\\\"example\\\">\\n    <div class=\\\"flex-row-container\\\">\\n        <div class=\\\"flex-independent-row-item simple-label\\\" i18n>Selection:</div>\\n        <span class=\\\"flex-independent-row-item\\\" id=\\\"nui-demo-singleselect-nonrequired-value\\\">{{selectedColors | json}}</span>\\n    </div>\\n\\n    <br>\\n\\n    <div>\\n        <nui-repeat id=\\\"nui-demo-radio-non-required-selection-repeat\\\"\\n                  [itemsSource]=\\\"colors\\\"\\n                  [selection]=\\\"selectedColors\\\"\\n                  [selectionMode]=\\\"selectedMode\\\"\\n                  (selectionChange)=\\\"onColorSelectionChange($event)\\\"\\n                  [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n        </nui-repeat>\\n    </div>\\n</div>\\n\";","export default \"import {Component, Input} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-repeat-radio-selection-mode-example\\\",\\n    templateUrl: \\\"./repeat-radio-selection-mode.example.component.html\\\",\\n})\\nexport class RepeatRadioSelectionModeExampleComponent {\\n    @Input() public colors = [\\n        { color: $localize `blue` },\\n        { color: $localize `green` },\\n        { color: $localize `yellow` },\\n        { color: $localize `cyan` },\\n        { color: $localize `magenta` },\\n        { color: $localize `black` },\\n    ];\\n\\n    public selectedColors = [this.colors[1]];\\n\\n    constructor() { }\\n\\n    public onColorSelectionChange(selection: any) {\\n        this.selectedColors = selection;\\n    }\\n}\\n\";","export default \"<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n</ng-template>\\n\\n<div class=\\\"example\\\">\\n    <div class=\\\"flex-row-container\\\">\\n        <div class=\\\"flex-independent-row-item simple-label\\\" i18n>Selection:</div>\\n        <span class=\\\"flex-independent-row-item\\\" id=\\\"nui-demo-radioselect-value\\\">\\n            {{selectedColors | json}}</span>\\n    </div>\\n\\n    <br>\\n\\n    <nui-repeat id=\\\"nui-demo-radio-repeat\\\"\\n              [itemsSource]=\\\"colors\\\"\\n              [selection]=\\\"selectedColors\\\"\\n              selectionMode=\\\"radio\\\"\\n              [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\"\\n              (selectionChange)=\\\"onColorSelectionChange($event)\\\">\\n    </nui-repeat>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-repeat-disabled-multi-selection-example\\\",\\n    templateUrl: \\\"./repeat-disabled-multi-selection.example.component.html\\\",\\n})\\nexport class RepeatDisabledMultiSelectionExampleComponent {\\n    public colorsWithIsDisabledProperty = [\\n        { color: $localize `blue`, disabled: true },\\n        { color: $localize `green`, disabled: false },\\n        { color: $localize `yellow` },\\n        { color: $localize `cyan` },\\n        { color: $localize `magenta`, disabled: true },\\n        { color: $localize `black` },\\n    ];\\n\\n    public selectedColorsWithIsDisabledProperty = [\\n        this.colorsWithIsDisabledProperty[0],\\n        this.colorsWithIsDisabledProperty[5],\\n    ];\\n\\n    public handleClick(event: any) {\\n        event.stopPropagation();\\n    }\\n\\n    constructor() { }\\n}\\n\";","export default \"<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n</ng-template>\\n\\n<div class=\\\"example\\\">\\n    <div class=\\\"flex-row-container\\\">\\n        <div class=\\\"flex-independent-row-item simple-label\\\" i18n>Selection:</div>\\n        <span class=\\\"flex-independent-row-item\\\" id=\\\"nui-demo-multiselect-values\\\">\\n            {{narrowRowSelectedColors | json}}</span>\\n    </div>\\n\\n    <br>\\n\\n    <nui-repeat id=\\\"nui-demo-multi-repeat\\\"\\n              [itemsSource]=\\\"colors\\\"\\n              selectionMode=\\\"multi\\\"\\n              [selection]=\\\"narrowRowSelectedColors\\\"\\n              (selectionChange)=\\\"onNarrowRowSelectionChange($event)\\\"\\n              [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n        <div repeatHeaderTemplate>\\n            <div class=\\\"template-header\\\" i18n>repeat header from template</div>\\n        </div>\\n    </nui-repeat>\\n</div>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-switch class=\\\"p-2\\\" [(value)]=\\\"draggable\\\" i18n>Draggable</nui-switch>\\n</div>\\n<nui-repeat (itemsReordered)=\\\"onItemsReordered($event)\\\"\\n            [itemsSource]=\\\"companies\\\"\\n            [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\"\\n            [draggable]=\\\"draggable\\\">\\n</nui-repeat>\\n\\n<!-- Content template for each item -->\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    {{item}}\\n</ng-template>\\n\";","export default \"<div class=\\\"d-flex\\\">\\n    <nui-switch class=\\\"p-2\\\" [(value)]=\\\"draggable\\\" i18n>Draggable</nui-switch>\\n    <nui-switch class=\\\"p-2\\\" [(value)]=\\\"reorderable\\\" i18n>Reorderable</nui-switch>\\n</div>\\n<nui-repeat (itemsReordered)=\\\"onItemsReordered($event)\\\"\\n            [itemsSource]=\\\"companies\\\"\\n            [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\"\\n            [(draggable)]=\\\"draggable\\\"\\n            [(reorderable)]=\\\"reorderable\\\">\\n</nui-repeat>\\n<div class=\\\"d-flex m-2\\\">\\n    <div><strong i18n>Event data</strong>:</div>\\n    <div class=\\\"ml-1\\\">{{droppedEventData ? (droppedEventData | json) : \\\"N/A\\\"}}</div>\\n</div>\\n\\n<!-- Content template for each item -->\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    {{item}}\\n</ng-template>\\n\";","export default \"import {Component, ViewEncapsulation} from \\\"@angular/core\\\";\\nimport {IItemsReorderedEvent} from \\\"@nova-ui/bits\\\";\\n\\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\\ninterface ISortingOrderTrimmedData extends Omit<IItemsReorderedEvent, \\\"item\\\"|\\\"dropListRef\\\"> {}\\n\\n@Component({\\n    selector: \\\"nui-repeat-reorder-simple-example\\\",\\n    templateUrl: \\\"./repeat-reorder-simple-example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class RepeatReorderSimpleExampleComponent {\\n    public companies: string[] = [\\\"Adobe\\\", \\\"IBM\\\", \\\"Dell\\\", \\\"Microsoft\\\"];\\n\\n    public draggable: boolean = true;\\n    public reorderable: boolean = true;\\n    public droppedEventData: ISortingOrderTrimmedData;\\n\\n    public onItemsReordered(event: IItemsReorderedEvent<string>): void {\\n        // update items according to the new order\\n        this.companies = event.currentState;\\n\\n        // copy all event proprieties except the CdkDrag & CdkDropList references\\n        const {item, dropListRef, ...rest} = event;\\n        this.droppedEventData = rest;\\n\\n        console.log(event);\\n    }\\n}\\n\";","<div class=\"d-flex\">\n    <nui-switch class=\"p-2\" [(value)]=\"draggable\" i18n>Dragging</nui-switch>\n    <nui-switch class=\"p-2\" [(value)]=\"reorderable\" i18n>Reordering</nui-switch>\n</div>\n<nui-repeat (itemsReordered)=\"onItemsReordered($event)\"\n            [itemsSource]=\"colors\"\n            [repeatItemTemplateRef]=\"repeatItemTemplate\"\n            [itemConfig]=\"itemConfig\"\n            [(draggable)]=\"draggable\"\n            [(reorderable)]=\"reorderable\">\n</nui-repeat>\n\n<!-- Content template for each item -->\n<ng-template #repeatItemTemplate let-item=\"item\">\n    <div [class.nui-text-secondary--disabled]=\"itemConfig.isDisabled(item)\">\n        {{item.color}} - {{item.description}}\n    </div>\n</ng-template>\n","import {Component, ViewEncapsulation} from \"@angular/core\";\nimport {IItemsReorderedEvent, IRepeatItem, IRepeatItemConfig} from \"@nova-ui/bits\";\n\ninterface IRepeatColorItem extends IRepeatItem {\n    color: string;\n    description: string;\n}\n\n@Component({\n    selector: \"nui-repeat-reorder-config-example\",\n    templateUrl: \"./repeat-reorder-item-config-example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class RepeatReorderItemConfigExampleComponent {\n    public colors: IRepeatColorItem[] = [\n        {color: $localize `blue`, description: \"Should be draggable\"},\n        {color: $localize`green`, description: \"Disabled with callback\"},\n        {color: $localize`yellow`, disabled: true, description: \"Disabled with property\"},\n        {color: $localize`orange`, disabled: false, description: \"Enabled with property\"},\n    ];\n\n    public draggable: boolean = true;\n    public reorderable: boolean = true;\n\n    public itemConfig: IRepeatItemConfig<IRepeatColorItem> = {\n        isDraggable: item => item.color === $localize `blue` || item.color === $localize `orange`,\n        // Note: Using both cases to check if item is disabled, normally we should use only one method\n        isDisabled: item => item.color === $localize`green` || item.disabled,\n        trackBy: (index, item) => item.color,\n    };\n\n    public onItemsReordered(event: IItemsReorderedEvent<IRepeatColorItem>): void {\n        this.colors = event.currentState;\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-repeat-test\",\n    templateUrl: \"./repeat-test.component.html\",\n})\nexport class RepeatTestComponent {\n\n    public colors = [\n        { color: $localize `blue`},\n        { color: $localize `green`},\n        { color: $localize `yellow`},\n        { color: $localize `cyan`},\n        { color: $localize `magenta`},\n        { color: $localize `black`},\n    ];\n\n    constructor() { }\n\n    private colorIndex: number = 1;\n\n    public addNewColor(): void {\n        this.colors.push(\n            { color: `new color ${this.colorIndex++}` }\n        );\n    }\n}\n","<nui-repeat-multi-selection-example></nui-repeat-multi-selection-example>\n<nui-repeat-disabled-multi-selection-example></nui-repeat-disabled-multi-selection-example>\n<nui-repeat-single-selection-mode-example></nui-repeat-single-selection-mode-example>\n<button nui-button id=\"add-color\" (click)=\"addNewColor()\">Add color</button>\n<nui-repeat-radio-selection-mode-example [colors]=\"colors\"></nui-repeat-radio-selection-mode-example>\n<nui-repeat-radio-with-non-required-selection-mode-example></nui-repeat-radio-with-non-required-selection-mode-example>\n<nui-repeat-single-with-required-selection-mode-example></nui-repeat-single-with-required-selection-mode-example>\n\n","export default \"<ng-template #repeatItemColorBoxTemplate let-item=\\\"item\\\">\\n    <div class=\\\"color-box {{item.color}}\\\"></div>\\n    <div [attr.class]=\\\"item.disabled ? 'nui-text-secondary--disabled' : null\\\">\\n        {{item.color}}\\n    </div>\\n</ng-template>\\n\\n<ng-template #actionsContent let-item=\\\"item\\\">\\n        <div >\\n            <button nui-button [attr.disabled]=\\\"item.disabled ? '' : null\\\" type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"menu\\\" (click)=\\\"handleClick($event)\\\"></button>\\n            <button nui-button [attr.disabled]=\\\"item.disabled ? '' : null\\\" type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"caret-right\\\" (click)=\\\"handleClick($event)\\\"></button>\\n        </div>\\n</ng-template>\\n\\n<div class=\\\"example\\\">\\n    <nui-repeat id=\\\"nui-demo-multi-repeat-disabled-items\\\"\\n              [itemsSource]=\\\"colorsWithIsDisabledProperty\\\"\\n              selectionMode=\\\"multi\\\"\\n              [selection]=\\\"selectedColorsWithIsDisabledProperty\\\"\\n              [repeatItemTemplateRef]=\\\"repeatItemColorBoxTemplate\\\"\\n              [actionsTemplateRef]=\\\"actionsContent\\\">\\n    </nui-repeat>\\n</div>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n.single-selection-example {\\n    .blue {\\n        background-color: #0000ff;\\n    }\\n\\n    .green {\\n        background-color: #009900;\\n    }\\n\\n    .yellow {\\n        background-color: #ffff00;\\n    }\\n\\n    .orange {\\n        background-color: #ff6600;\\n    }\\n\\n    .cyan {\\n        background-color: #00ffff;\\n    }\\n\\n    .magenta {\\n        background-color: #ff00ff;\\n    }\\n\\n    .black {\\n        background-color: #000000;\\n    }\\n\\n    .flex-row-container {\\n        display: flex;\\n    }\\n\\n    .flex-row-item {\\n        margin: 0 5px;\\n    }\\n\\n    .flex-row-item:first-child {\\n        margin-left: 0;\\n    }\\n\\n    .flex-independent-row-item {\\n        margin: 15px 5px;\\n    }\\n\\n    .flex-column-container {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    .name-item {\\n        font-size: 12px;\\n        font-weight: bold;\\n    }\\n\\n    .status-item {\\n        font-size: 10px;\\n        .setCssVariable(color, nui-color-text-secondary);\\n    }\\n\\n    .gold {\\n        font-size: 10px;\\n        font-weight: bold;\\n        .setCssVariable(color, nui-color-brand-four);\\n    }\\n\\n    .platinum {\\n        font-size: 10px;\\n        font-weight: bold;\\n        .setCssVariable(color, nui-color-brand-seven);\\n    }\\n\\n    .bronze {\\n        font-size: 10px;\\n        font-weight: bold;\\n        .setCssVariable(color, nui-color-brand);\\n    }\\n}\\n\";","<ng-template #repeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n</ng-template>\n\n<div class=\"example\">\n    <div class=\"flex-row-container\">\n        <div class=\"flex-independent-row-item simple-label\" i18n>Selection:</div>\n        <span class=\"flex-independent-row-item\" id=\"nui-demo-singleselect-nonrequired-value\">{{selectedColors | json}}</span>\n    </div>\n\n    <br>\n\n    <div>\n        <nui-repeat id=\"nui-demo-radio-non-required-selection-repeat\"\n                  [itemsSource]=\"colors\"\n                  [selection]=\"selectedColors\"\n                  [selectionMode]=\"selectedMode\"\n                  (selectionChange)=\"onColorSelectionChange($event)\"\n                  [repeatItemTemplateRef]=\"repeatItemTemplate\">\n        </nui-repeat>\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-radio-with-non-required-selection-mode-example\",\n    templateUrl: \"./repeat-radio-with-non-required-selection-mode.example.component.html\",\n})\nexport class RepeatRadioWithNonRequiredSelectionModeExampleComponent {\n    public colors = [\n        { color: $localize `blue`, disabled: true},\n        { color: $localize `green`},\n        { color: $localize `yellow`, disabled: true},\n        { color: $localize `cyan`},\n        { color: $localize `magenta`},\n        { color: $localize `black`},\n    ];\n\n    public selectedColors = [this.colors[1]];\n    public selectedMode: string = \"radioWithNonRequiredSelection\";\n\n    constructor() { }\n\n    public onColorSelectionChange(selection: any) {\n        this.selectedColors = selection;\n    }\n}\n","<ng-template #repeatPeopleItemTemplate let-item=\"item\">\n    <nui-icon style=\"align-self: start\" css-class=\"flex-row-item\" icon=\"user\"></nui-icon>\n    <div class=\"flex-row-item flex-column-container\">\n        <div class=\"name-item\">{{item.name}}</div>\n        <div [ngClass]=\"item.level\">{{item.level}}</div>\n        <div class=\"status-item\">{{item.status}}</div>\n    </div>\n</ng-template>\n\n<ng-template #actionsContent>\n    <button nui-button type=\"button\" displayStyle=\"action\" icon=\"menu\"></button>\n    <button nui-button type=\"button\" displayStyle=\"action\" icon=\"caret-right\"></button>\n</ng-template>\n\n<div class=\"example single-selection-example\">\n    <div class=\"flex-row-container\">\n        <div class=\"flex-independent-row-item simple-label\" i18n>Selection:</div>\n        <span class=\"flex-independent-row-item\" id=\"nui-demo-singleselect-value\">\n            {{selectedPeople | json}}</span>\n    </div>\n\n    <br>\n\n    <nui-repeat id=\"nui-demo-single-repeat\"\n              [itemsSource]=\"people\"\n              [selection]=\"selectedPeople\"\n              selectionMode=\"single\"\n              (selectionChange)=\"onPeopleSelectionChange($event)\"\n              [repeatItemTemplateRef]=\"repeatPeopleItemTemplate\"\n              [actionsTemplateRef]=\"actionsContent\">\n    </nui-repeat>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-single-selection-mode-example\",\n    templateUrl: \"./repeat-single-selection-mode.example.component.html\",\n    styleUrls: [\n        \"./repeat-single-selection-mode.example.less\",\n    ],\n})\nexport class RepeatSingleSelectionModeExampleComponent {\n    public people = [\n        { name: \"Jo Smith\", level: $localize `bronze`, status: $localize `active` },\n        { name: \"Claire Rogan\", level: $localize `gold`, status: $localize `active`, disabled: true },\n        { name: \"Declan McGregor\", level: $localize `platinum`, status: $localize `active` },\n        { name: \"Fergus O'Brien\", level: $localize `bronze`, status: $localize `inactive` },\n        { name: \"Catriona Kildare\", level: $localize `gold`, status: $localize `active` },\n    ];\n\n    public selectedPeople = [this.people[2]];\n\n    constructor() { }\n\n    public onPeopleSelectionChange(selection: any) {\n        this.selectedPeople = selection;\n    }\n}\n","export default \"import { ScrollingModule } from \\\"@angular/cdk/scrolling\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiDocsModule,\\n    NuiFormFieldModule,\\n    NuiMessageModule, NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSwitchModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    RepeatDisabledMultiSelectionExampleComponent,\\n    RepeatDragHandleExampleComponent,\\n    RepeatDragPreviewExampleComponent,\\n    RepeatDragSimpleExampleComponent,\\n    RepeatExampleComponent,\\n    RepeatItemExampleComponent,\\n    RepeatMultiSelectionExampleComponent,\\n    RepeatRadioSelectionModeExampleComponent,\\n    RepeatRadioWithNonRequiredSelectionModeExampleComponent,\\n    RepeatReorderItemConfigExampleComponent,\\n    RepeatReorderSimpleExampleComponent,\\n    RepeatSimpleExampleComponent,\\n    RepeatSingleSelectionModeExampleComponent,\\n    RepeatSingleWithRequiredSelectionModeExampleComponent,\\n} from \\\"./index\\\";\\nimport { RepeatTestComponent } from \\\"./repeat-select-test/repeat-test.component\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: RepeatExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"repeat-item\\\",\\n        component: RepeatItemExampleComponent,\\n    },\\n    {\\n        path: \\\"repeat-test\\\",\\n        component: RepeatTestComponent,\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiRepeatModule,\\n        NuiSwitchModule,\\n        NuiMessageModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n        ScrollingModule,\\n        NuiProgressModule,\\n        NuiSearchModule,\\n        NuiFormFieldModule,\\n    ],\\n    declarations: [\\n        RepeatExampleComponent,\\n        RepeatItemExampleComponent,\\n        RepeatDisabledMultiSelectionExampleComponent,\\n        RepeatMultiSelectionExampleComponent,\\n        RepeatRadioSelectionModeExampleComponent,\\n        RepeatRadioWithNonRequiredSelectionModeExampleComponent,\\n        RepeatSimpleExampleComponent,\\n        RepeatDragSimpleExampleComponent,\\n        RepeatReorderSimpleExampleComponent,\\n        RepeatDragPreviewExampleComponent,\\n        RepeatSingleSelectionModeExampleComponent,\\n        RepeatSingleWithRequiredSelectionModeExampleComponent,\\n        RepeatTestComponent,\\n        RepeatReorderItemConfigExampleComponent,\\n        RepeatDragHandleExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class RepeatModule {\\n}\\n\";","export default \"<nui-repeat [itemsSource]=\\\"companies\\\"\\n            dragPreviewClass=\\\"nui-dnd-drag-preview\\\"\\n            [dragPreviewTemplateRef]=\\\"dragPreviewTemplate\\\"\\n            [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\"\\n            (itemsReordered)=\\\"onItemsReordered($event)\\\">\\n</nui-repeat>\\n\\n<!-- Content template for each item -->\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    {{item.name}}\\n</ng-template>\\n\\n<!-- Drag preview template -->\\n<ng-template #dragPreviewTemplate  let-item=\\\"item\\\">\\n    <p>This is the preview for {{item.name}}</p>\\n    <img width=\\\"100\\\" [src]=\\\"item.preview\\\" [alt]=\\\"item.name\\\">\\n</ng-template>\\n\";","<div>\n    <ul id=\"nui-repeat-item-example-repeat\">\n        <nui-repeat-item [clickable]=\"false\"\n                    [nowrap]=\"true\"\n                    [selected]=\"false\"\n                    *ngFor=\"let item of items\">\n            {{item}}\n        </nui-repeat-item>\n    </ul>\n</div>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-repeat-item-example\",\n    templateUrl: \"./repeat-item.example.component.html\",\n})\nexport class RepeatItemExampleComponent {\n    public items = [$localize `Item 1`, $localize `Item 2`, $localize `Item 3`];\n\n    constructor() { }\n}\n"]}