{"version":3,"sources":["webpack:///demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.ts?ff5d","webpack:///demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html?ffc7","webpack:///demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.less","webpack:///demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.html?d774","webpack:///demo/src/components/demo/popup/popup.module.ts?e3c0","webpack:///demo/src/components/demo/popup/popup.module.ts","webpack:///demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.html","webpack:///demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.ts","webpack:///demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts?f47a","webpack:///demo/src/components/demo/popup/popup-docs/popup-docs.example.component.ts?00af","webpack:///demo/src/components/demo/popup/popup-docs/popup-docs.example.component.html?0902","webpack:///demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.html?145a","webpack:///demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.less","webpack:///demo/src/components/demo/popup/popup-docs/popup-docs.example.component.ts","webpack:///demo/src/components/demo/popup/popup-docs/popup-docs.example.component.html","webpack:///demo/src/components/demo/popup/popup-test/popup-test.example.component.less","webpack:///demo/src/components/demo/popup/popup-test/popup-test.example.component.html?1a59","webpack:///demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.ts?2606","webpack:///demo/src/components/demo/popup/popup-test/popup-test.example.component.html","webpack:///demo/src/components/demo/popup/popup-test/popup-test.example.component.ts","webpack:///demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.ts","webpack:///demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.html","webpack:///demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.ts?2d91","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?75f5","webpack:///demo/src/components/demo/popup/index.ts","webpack:///demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.ts?4099","webpack:///demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.html","webpack:///demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.ts","webpack:///demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.html?5a4e","webpack:///demo/src/components/demo/popup/popup-test/popup-test.example.component.ts?6ea1","webpack:///demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.ts?91da","webpack:///demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.html?99c1","webpack:///demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.html?a3f3","webpack:///demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.html","webpack:///demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.ts","webpack:///demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html","webpack:///demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts","webpack:///demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.html","webpack:///demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.ts","webpack:///demo/src/components/demo/popup/index.ts?cd7f"],"names":["routes","path","component","data","support","Date","showThemeSwitcher","PopupModule","provide","useFactory","forChild","PopupAppendToBodyExampleComponent","icon","itemsSource","$localize","PopupExampleComponent","PopupTestComponent","width","event","stopPropagation","PopupWithCustomContentComponent","formBuilder","demoFormGroup","group","checkboxGroup","control","required","minLength","handleClick","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","PopupWithCustomWidthComponent","PopupDifferentDirectionsExampleComponent","PopupWithCustomStylingComponent","PopupSimpleExampleComponent"],"mappings":"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","file":"demo-popup-popup-module-es5.js","sourcesContent":["export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-append-to-body-example\\\",\\n    templateUrl: \\\"./popup-append-to-body.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupAppendToBodyExampleComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n\\n}\\n\";","export default \"<nui-popup  contextClass=\\\"nui-demo-custom-class\\\">\\n    <button nui-button\\n            nuiPopupToggle\\n            width=\\\"90px\\\"\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n            Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \"// The following styles are used for demonstration purposes only\\n\\n.popup-adapter-overlay {\\n    .nui-demo-custom-class.nui-overlay {\\n        background-color: yellowgreen !important;\\n        font-family: 'Courier New', Courier, monospace;\\n        font-weight: bold;\\n        text-decoration: underline overline black dotted;\\n        padding: 20px;\\n    }\\n\\n}\\n\";","export default \"<nui-popup [width]=\\\"width\\\">\\n    <button nui-button\\n            nuiPopupToggle\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n        Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiCheckboxModule,\\n    NuiDocsModule,\\n    NuiMenuModule,\\n    NuiMessageModule,\\n    NuiPopupModule,\\n    NuiSearchModule,\\n    NuiTextboxModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    PopupAppendToBodyExampleComponent,\\n    PopupDifferentDirectionsExampleComponent,\\n    PopupExampleComponent,\\n    PopupSimpleExampleComponent,\\n    PopupTestComponent,\\n    PopupWithCustomContentComponent,\\n    PopupWithCustomStylingComponent,\\n    PopupWithCustomWidthComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: PopupExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.support,\\n                \\\"eolDate\\\": new Date(\\\"2020-07-09\\\"),\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"popup-test\\\",\\n        component: PopupTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"basic\\\",\\n        component: PopupSimpleExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiPopupModule,\\n        NuiMessageModule,\\n        NuiButtonModule,\\n        ReactiveFormsModule,\\n        FormsModule,\\n        NuiCheckboxModule,\\n        NuiSearchModule,\\n        NuiDocsModule,\\n        NuiMenuModule,\\n        RouterModule.forChild(routes),\\n        NuiTextboxModule,\\n    ],\\n    declarations: [\\n        PopupSimpleExampleComponent,\\n        PopupDifferentDirectionsExampleComponent,\\n        PopupWithCustomStylingComponent,\\n        PopupWithCustomWidthComponent,\\n        PopupWithCustomContentComponent,\\n        PopupTestComponent,\\n        PopupAppendToBodyExampleComponent,\\n        PopupExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class PopupModule {\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPopupModule,\n    NuiSearchModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    PopupAppendToBodyExampleComponent,\n    PopupDifferentDirectionsExampleComponent,\n    PopupExampleComponent,\n    PopupSimpleExampleComponent,\n    PopupTestComponent,\n    PopupWithCustomContentComponent,\n    PopupWithCustomStylingComponent,\n    PopupWithCustomWidthComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: PopupExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.support,\n                \"eolDate\": new Date(\"2020-07-09\"),\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"popup-test\",\n        component: PopupTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"basic\",\n        component: PopupSimpleExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiPopupModule,\n        NuiMessageModule,\n        NuiButtonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        NuiCheckboxModule,\n        NuiSearchModule,\n        NuiDocsModule,\n        NuiMenuModule,\n        RouterModule.forChild(routes),\n        NuiTextboxModule,\n    ],\n    declarations: [\n        PopupSimpleExampleComponent,\n        PopupDifferentDirectionsExampleComponent,\n        PopupWithCustomStylingComponent,\n        PopupWithCustomWidthComponent,\n        PopupWithCustomContentComponent,\n        PopupTestComponent,\n        PopupAppendToBodyExampleComponent,\n        PopupExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class PopupModule {\n}\n","<nui-popup [appendToBody]=\"true\">\n    <button nui-button\n            nuiPopupToggle\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n            Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-append-to-body-example\",\n    templateUrl: \"./popup-append-to-body.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupAppendToBodyExampleComponent {\n\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n\n}\n","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-with-custom-styling-example\\\",\\n    templateUrl: \\\"./popup-with-custom-styling.example.component.html\\\",\\n    styleUrls: [\\\"popup-with-custom-styling.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupWithCustomStylingComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-popup-docs-example\\\",\\n    templateUrl: \\\"./popup-docs.example.component.html\\\",\\n})\\nexport class PopupExampleComponent {}\\n\";","export default \"<p>\\n    <code>&lt;nui-popup&gt;</code> is a base component for the most of dropdown-like Nova components, but this doesn't limit it's abilities.\\n    It allows you to put any HTML templates into it's body to build more complex and exciting components.\\n</p>\\n<nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n    <strong>Pay attention!</strong> The following examples demonstrate only basic scenarios. To get familiar with more complex use cases, you can refer to \\n    the documentation for components built on top of the <code>nui-popup</code>, such as \\n    <a href=\\\"../components/ComboboxComponent.html#example\\\" target=\\\"_blank\\\">nui-combobox</a>, \\n    <a href=\\\"../components/MenuComponent.html#example\\\" target=\\\"_blank\\\">nui-menu</a>, \\n    <a href=\\\"../components/SelectComponent.html#example\\\" target=\\\"_blank\\\">nui-select</a>, etc.,\\n    and explore their internal structure in the codebase.\\n</nui-message>\\n<!-- ------------------------------------------------------------------------------------------- -->\\n<h2>Basic Usage</h2>\\n<p>\\n    A simple popup can be added to the page by adding a <code>&lt;nui-popup&gt;</code> element.\\n    It must wrap two types of elements: one that toggles the popup and one that defines the content.\\n    To achieve this, the element responsible for toggling the popup must contain the <code>nuiPopupToggle</code> directive.\\n    The area with the content must be wrapped up inside a <code>div</code> with the <code>popupAreaContent</code> directive \\n    assigned to it.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-simple-usage\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-popup-simple-usage-example></nui-popup-simple-usage-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Width</h2>\\n<p>\\n    One can change the width of the popup by setting the <code>width</code> input.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-with-custom-width\\\" exampleTitle=\\\"Custom Width\\\">\\n    <nui-popup-with-custom-width-example></nui-popup-with-custom-width-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Appended to Body</h2>\\n<p>\\n    <code>nui-popup</code> can be appended to the body of the page if required. To achieve this, add the <code>appendToBody</code> \\n    input to the component.\\n</p>\\n<nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n    <strong>Please be aware</strong> that the positioning of the <code>nui-popup</code> component is treated differently when the <code>appendToBody</code> \\n    input is used. There is a technical limitation that causes the <code>directionTop</code> and <code>directionRight</code> inputs not\\n    to work when <code>appendToBody</code> is true. In this case, the positioning of the component is controlled exclusively by the \\n    <code>edgeDetectionService</code>.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"popup-append-to-body\\\" exampleTitle=\\\"Appended to Body\\\">\\n    <nui-popup-append-to-body-example></nui-popup-append-to-body-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Open Direction</h2>\\n<p>\\n    Even though <code>nui-popup</code> automatically detects the window edges and adjusts the open direction accordingly\\n    thanks to the <code>edgeDetectionService</code>, it's possible to force the <code>nui-popup</code> to open in\\n    a specific direction. Available inputs are: <code>directionRight</code> and <code>directionTop</code>, which receive boolean values.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-different-directions\\\" exampleTitle=\\\"Custom Open Direction\\\">\\n    <nui-popup-different-directions-example></nui-popup-different-directions-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Classes</h2>\\n<p>\\n    It is also easy to apply custom classes to the popup. Use the <code>contextClass</code> input to pass the desired css class.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-with-custom-styling\\\" exampleTitle=\\\"Custom Styling\\\">\\n    <nui-popup-with-custom-styling-example></nui-popup-with-custom-styling-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Content</h2>\\n<p>\\n    You can put pretty much anything you want inside the <code>nui-popup</code> component. You can use it to build more complex components, and \\n    configure them to your liking.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-with-custom-content\\\" exampleTitle=\\\"Custom Content\\\">\\n    <nui-popup-with-custom-content-example></nui-popup-with-custom-content-example>\\n</nui-example-wrapper>\\n\";","export default \"<nui-popup>\\n    <button nui-button\\n            nuiPopupToggle\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n        Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\" nuiTooltip=\\\"This icon is draggable\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \".nui-demo-popover-custom-form-styles {\\n    padding: 20px;\\n}\\n\\n.top-buffer {\\n    margin-top: 5px;\\n}\\n\\na[nuiPopupToggle] {\\n    cursor: pointer;\\n}\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-popup-docs-example\",\n    templateUrl: \"./popup-docs.example.component.html\",\n})\nexport class PopupExampleComponent {}\n","<p>\n    <code>&lt;nui-popup&gt;</code> is a base component for the most of dropdown-like Nova components, but this doesn't limit it's abilities.\n    It allows you to put any HTML templates into it's body to build more complex and exciting components.\n</p>\n<nui-message [allowDismiss]=\"false\" type=\"warning\">\n    <strong>Pay attention!</strong> The following examples demonstrate only basic scenarios. To get familiar with more complex use cases, you can refer to \n    the documentation for components built on top of the <code>nui-popup</code>, such as \n    <a href=\"../components/ComboboxComponent.html#example\" target=\"_blank\">nui-combobox</a>, \n    <a href=\"../components/MenuComponent.html#example\" target=\"_blank\">nui-menu</a>, \n    <a href=\"../components/SelectComponent.html#example\" target=\"_blank\">nui-select</a>, etc.,\n    and explore their internal structure in the codebase.\n</nui-message>\n<!-- ------------------------------------------------------------------------------------------- -->\n<h2>Basic Usage</h2>\n<p>\n    A simple popup can be added to the page by adding a <code>&lt;nui-popup&gt;</code> element.\n    It must wrap two types of elements: one that toggles the popup and one that defines the content.\n    To achieve this, the element responsible for toggling the popup must contain the <code>nuiPopupToggle</code> directive.\n    The area with the content must be wrapped up inside a <code>div</code> with the <code>popupAreaContent</code> directive \n    assigned to it.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-simple-usage\" exampleTitle=\"Basic Usage\">\n    <nui-popup-simple-usage-example></nui-popup-simple-usage-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Width</h2>\n<p>\n    One can change the width of the popup by setting the <code>width</code> input.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-with-custom-width\" exampleTitle=\"Custom Width\">\n    <nui-popup-with-custom-width-example></nui-popup-with-custom-width-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Appended to Body</h2>\n<p>\n    <code>nui-popup</code> can be appended to the body of the page if required. To achieve this, add the <code>appendToBody</code> \n    input to the component.\n</p>\n<nui-message [allowDismiss]=\"false\" type=\"warning\">\n    <strong>Please be aware</strong> that the positioning of the <code>nui-popup</code> component is treated differently when the <code>appendToBody</code> \n    input is used. There is a technical limitation that causes the <code>directionTop</code> and <code>directionRight</code> inputs not\n    to work when <code>appendToBody</code> is true. In this case, the positioning of the component is controlled exclusively by the \n    <code>edgeDetectionService</code>.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"popup-append-to-body\" exampleTitle=\"Appended to Body\">\n    <nui-popup-append-to-body-example></nui-popup-append-to-body-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Open Direction</h2>\n<p>\n    Even though <code>nui-popup</code> automatically detects the window edges and adjusts the open direction accordingly\n    thanks to the <code>edgeDetectionService</code>, it's possible to force the <code>nui-popup</code> to open in\n    a specific direction. Available inputs are: <code>directionRight</code> and <code>directionTop</code>, which receive boolean values.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-different-directions\" exampleTitle=\"Custom Open Direction\">\n    <nui-popup-different-directions-example></nui-popup-different-directions-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Classes</h2>\n<p>\n    It is also easy to apply custom classes to the popup. Use the <code>contextClass</code> input to pass the desired css class.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-with-custom-styling\" exampleTitle=\"Custom Styling\">\n    <nui-popup-with-custom-styling-example></nui-popup-with-custom-styling-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Content</h2>\n<p>\n    You can put pretty much anything you want inside the <code>nui-popup</code> component. You can use it to build more complex components, and \n    configure them to your liking.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-with-custom-content\" exampleTitle=\"Custom Content\">\n    <nui-popup-with-custom-content-example></nui-popup-with-custom-content-example>\n</nui-example-wrapper>\n","export default \"// The following styles are used for demonstration purposes only\\n.nui-demo-custom-class {\\n    background-color: yellowgreen !important;\\n    font-family: 'Courier New', Courier, monospace;\\n    font-weight: bold;\\n    text-decoration: underline overline black dotted;\\n    padding: 20px;\\n}\";","export default \"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row mt-5\\\">\\n        <div class=\\\"col\\\">\\n            <p>\\n                Simple example\\n            </p>\\n            <nui-popup id=\\\"nui-demo-popup-simple\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                Custom width\\n            </p>\\n            <nui-popup [width]=\\\"width\\\" id=\\\"nui-demo-popup-custom-width\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                Append to Body\\n            </p>\\n            <nui-popup [appendToBody]=\\\"true\\\" [directionRight]=true id=\\\"nui-demo-popup-append-to-body\\\" contextClass=\\\"additional-host-class\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n    </div>\\n    <div class=\\\"row mt-5\\\">\\n        <div class=\\\"col\\\">\\n            <p>\\n                Open Direction Right\\n            </p>\\n            <nui-popup [directionRight]=\\\"true\\\" id=\\\"nui-demo-popup-direction-right\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                Open Direction Top\\n            </p>\\n            <nui-popup [directionRight]=\\\"false\\\" [directionTop]=\\\"true\\\" id=\\\"nui-demo-popup-direction-top\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                IsOpen = true\\n            </p>\\n            <nui-popup id=\\\"nui-demo-popup-isOpen-true\\\" [isOpen]=\\\"true\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n    </div>\\n</div>\";","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-simple-usage-example\\\",\\n    templateUrl: \\\"./popup-simple-usage.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupSimpleExampleComponent {\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n}\\n\";","\n<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col\">\n            <p>\n                Simple example\n            </p>\n            <nui-popup id=\"nui-demo-popup-simple\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                Custom width\n            </p>\n            <nui-popup [width]=\"width\" id=\"nui-demo-popup-custom-width\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                Append to Body\n            </p>\n            <nui-popup [appendToBody]=\"true\" [directionRight]=true id=\"nui-demo-popup-append-to-body\" contextClass=\"additional-host-class\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col\">\n            <p>\n                Open Direction Right\n            </p>\n            <nui-popup [directionRight]=\"true\" id=\"nui-demo-popup-direction-right\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                Open Direction Top\n            </p>\n            <nui-popup [directionRight]=\"false\" [directionTop]=\"true\" id=\"nui-demo-popup-direction-top\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                IsOpen = true\n            </p>\n            <nui-popup id=\"nui-demo-popup-isOpen-true\" [isOpen]=\"true\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n    </div>\n</div>","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-popup-test\",\n    templateUrl: \"./popup-test.example.component.html\",\n    styleUrls: [\"popup-test.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupTestComponent {\n\n    public width = \"200px\";\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        \"Item 1\",\n        \"Item 2\",\n        \"Item 3\",\n        \"Item 4\",\n        \"Item 5\",\n    ];\n\n    public handleClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n\n@Component({\n    selector: \"nui-popup-with-custom-content-example\",\n    templateUrl: \"./popup-with-custom-content.example.component.html\",\n    styleUrls: [\"./popup-with-custom-content.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomContentComponent implements OnInit {\n\n    public demoFormGroup: FormGroup;\n    public icon = \"caret-down\";\n    public width = \"200px\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    public ngOnInit() {\n        this.demoFormGroup = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.itemsSource[0], this.itemsSource[1], this.itemsSource[2]], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public handleClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n}\n","<div class=\"row top-buffer\">\n    <div class=\"col-3 nui-text-default\" i18n>\n        Simple search bar\n    </div>\n    <div class=\"col-3 nui-text-default\" i18n>\n        Popover with Form and Checkbox Group Inside\n    </div>\n</div>\n<div class=\"row top-buffer\">\n    <div class=\"col-3\">\n        <nui-popup>\n            <button nui-button type=\"button\" nuiPopupToggle icon=\"search\"></button>\n            <div popupAreaContent>\n                <ng-container>\n                    <nui-search (click)=\"handleClick($event)\"></nui-search>\n                </ng-container>\n            </div>\n        </nui-popup>\n    </div>\n    <div class=\"col-3\">\n        <nui-popup [width]=\"width\" contextClass=\"nui-demo-popover-custom-form-styles\">\n            <a nuiPopupToggle i18n>More Options...</a>\n            <div popupAreaContent>\n                <ng-container>\n                    <form [formGroup]=\"demoFormGroup\" (click)=\"handleClick($event)\">\n                        <div class=\"form-group\">\n                            <nui-message [allowDismiss]=\"false\" type=\"critical\" *ngIf=\"!demoFormGroup.controls['checkboxGroup'].valid && demoFormGroup.controls['checkboxGroup'].touched\" >\n                                <b i18n>Select minimum 3 checkboxes!</b>\n                            </nui-message>\n                            <nui-checkbox-group formControlName=\"checkboxGroup\"\n                                                name=\"item\" required>\n                                <nui-checkbox *ngFor=\"let item of itemsSource\"\n                                                [value]=\"item\">\n                                    {{item}}\n                                </nui-checkbox>\n                            </nui-checkbox-group>\n                        </div>\n                        <button nui-button type=\"submit\" [disabled]=\"demoFormGroup.controls['checkboxGroup'].invalid\" i18n>Submit</button>\n                    </form>\n                </ng-container>\n            </div>\n        </nui-popup>\n    </div>\n</div>\n","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-with-custom-width-example\\\",\\n    templateUrl: \\\"./popup-with-custom-width.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupWithCustomWidthComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public width = \\\"130px\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n}\\n\";","var map = {\n\t\"./index.ts\": \"zX8v\",\n\t\"./popup-append-to-body/popup-append-to-body.example.component.html\": \"Wk4U\",\n\t\"./popup-append-to-body/popup-append-to-body.example.component.ts\": \"/11A\",\n\t\"./popup-different-directions/popup-different-directions.example.component.html\": \"mcGX\",\n\t\"./popup-different-directions/popup-different-directions.example.component.ts\": \"QJnK\",\n\t\"./popup-docs/popup-docs.example.component.html\": \"CQIr\",\n\t\"./popup-docs/popup-docs.example.component.ts\": \"AK8X\",\n\t\"./popup-simple-usage/popup-simple-usage.example.component.html\": \"FFqk\",\n\t\"./popup-simple-usage/popup-simple-usage.example.component.ts\": \"JgZo\",\n\t\"./popup-test/popup-test.example.component.html\": \"GlmZ\",\n\t\"./popup-test/popup-test.example.component.less\": \"GPOX\",\n\t\"./popup-test/popup-test.example.component.ts\": \"bqGP\",\n\t\"./popup-with-custom-content/popup-with-custom-content.example.component.html\": \"o/N5\",\n\t\"./popup-with-custom-content/popup-with-custom-content.example.component.less\": \"FOM3\",\n\t\"./popup-with-custom-content/popup-with-custom-content.example.component.ts\": \"kdon\",\n\t\"./popup-with-custom-styling/popup-with-custom-styling.example.component.html\": \"/8cC\",\n\t\"./popup-with-custom-styling/popup-with-custom-styling.example.component.less\": \"0Grj\",\n\t\"./popup-with-custom-styling/popup-with-custom-styling.example.component.ts\": \"9Hqo\",\n\t\"./popup-with-custom-width/popup-with-custom-width.example.component.html\": \"13R7\",\n\t\"./popup-with-custom-width/popup-with-custom-width.example.component.ts\": \"LZGP\",\n\t\"./popup.module.ts\": \"48Cw\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"MT7e\";","export * from \"./popup-simple-usage/popup-simple-usage.example.component\";\nexport * from \"./popup-docs/popup-docs.example.component\";\nexport * from \"./popup-different-directions/popup-different-directions.example.component\";\nexport * from \"./popup-with-custom-styling/popup-with-custom-styling.example.component\";\nexport * from \"./popup-with-custom-width/popup-with-custom-width.example.component\";\nexport * from \"./popup-with-custom-content/popup-with-custom-content.example.component\";\nexport * from \"./popup-test/popup-test.example.component\";\nexport * from \"./popup-append-to-body/popup-append-to-body.example.component\";\n","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-different-directions-example\\\",\\n    templateUrl: \\\"./popup-different-directions.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupDifferentDirectionsExampleComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n\\n}\\n\";","<nui-popup [width]=\"width\">\n    <button nui-button\n            nuiPopupToggle\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-with-custom-width-example\",\n    templateUrl: \"./popup-with-custom-width.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomWidthComponent {\n\n    public icon = \"caret-down\";\n    public width = \"130px\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n}\n","export default \"<nui-popup [appendToBody]=\\\"true\\\">\\n    <button nui-button\\n            nuiPopupToggle\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n            Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-popup-test\\\",\\n    templateUrl: \\\"./popup-test.example.component.html\\\",\\n    styleUrls: [\\\"popup-test.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupTestComponent {\\n\\n    public width = \\\"200px\\\";\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        \\\"Item 1\\\",\\n        \\\"Item 2\\\",\\n        \\\"Item 3\\\",\\n        \\\"Item 4\\\",\\n        \\\"Item 5\\\",\\n    ];\\n\\n    public handleClick(event: MouseEvent) {\\n        event.stopPropagation();\\n    }\\n\\n}\\n\";","export default \"import { Component, OnInit, ViewEncapsulation } from \\\"@angular/core\\\";\\nimport { FormBuilder, FormGroup, Validators } from \\\"@angular/forms\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-with-custom-content-example\\\",\\n    templateUrl: \\\"./popup-with-custom-content.example.component.html\\\",\\n    styleUrls: [\\\"./popup-with-custom-content.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupWithCustomContentComponent implements OnInit {\\n\\n    public demoFormGroup: FormGroup;\\n    public icon = \\\"caret-down\\\";\\n    public width = \\\"200px\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor(private formBuilder: FormBuilder) {}\\n\\n    public ngOnInit() {\\n        this.demoFormGroup = this.formBuilder.group({\\n            checkboxGroup: this.formBuilder.control([this.itemsSource[0], this.itemsSource[1], this.itemsSource[2]], [\\n                Validators.required, Validators.minLength(3)]),\\n        });\\n    }\\n\\n    public handleClick(event: MouseEvent) {\\n        event.stopPropagation();\\n    }\\n\\n}\\n\";","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col nui-text-default\\\" i18n>Bottom Right</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <nui-popup [directionRight]=\\\"true\\\">\\n                    <button nui-button\\n                            nuiPopupToggle\\n                            type=\\\"button\\\"\\n                            [icon]=\\\"icon\\\"\\n                            [iconRight]=\\\"true\\\"\\n                            class=\\\"menu-button\\\"\\n                            [isEmpty]=\\\"false\\\"\\n                            i18n>\\n                        Click\\n                    </button>\\n                    <div popupAreaContent>\\n                        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                        </ng-container>\\n                    </div>\\n                </nui-popup>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col nui-text-default\\\" i18n>Top Left</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <nui-popup  [directionTop]=\\\"true\\\">\\n                    <button nui-button\\n                            nuiPopupToggle\\n                            type=\\\"button\\\"\\n                            [icon]=\\\"icon\\\"\\n                            [iconRight]=\\\"true\\\"\\n                            class=\\\"menu-button\\\"\\n                            [isEmpty]=\\\"false\\\"\\n                            i18n>\\n                        Click\\n                    </button>\\n                    <div popupAreaContent>\\n                        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                        </ng-container>\\n                    </div>\\n                </nui-popup>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col nui-text-default\\\" i18n>Top Right</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <nui-popup  [directionTop]=\\\"true\\\" [directionRight]=\\\"true\\\">\\n                    <button nui-button\\n                            nuiPopupToggle\\n                            type=\\\"button\\\"\\n                            [icon]=\\\"icon\\\"\\n                            [iconRight]=\\\"true\\\"\\n                            class=\\\"menu-button\\\"\\n                            [isEmpty]=\\\"false\\\"\\n                            i18n>\\n                        Click\\n                    </button>\\n                    <div popupAreaContent>\\n                        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                        </ng-container>\\n                    </div>\\n                </nui-popup>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row top-buffer\\\">\\n    <div class=\\\"col-3 nui-text-default\\\" i18n>\\n        Simple search bar\\n    </div>\\n    <div class=\\\"col-3 nui-text-default\\\" i18n>\\n        Popover with Form and Checkbox Group Inside\\n    </div>\\n</div>\\n<div class=\\\"row top-buffer\\\">\\n    <div class=\\\"col-3\\\">\\n        <nui-popup>\\n            <button nui-button type=\\\"button\\\" nuiPopupToggle icon=\\\"search\\\"></button>\\n            <div popupAreaContent>\\n                <ng-container>\\n                    <nui-search (click)=\\\"handleClick($event)\\\"></nui-search>\\n                </ng-container>\\n            </div>\\n        </nui-popup>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n        <nui-popup [width]=\\\"width\\\" contextClass=\\\"nui-demo-popover-custom-form-styles\\\">\\n            <a nuiPopupToggle i18n>More Options...</a>\\n            <div popupAreaContent>\\n                <ng-container>\\n                    <form [formGroup]=\\\"demoFormGroup\\\" (click)=\\\"handleClick($event)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <nui-message [allowDismiss]=\\\"false\\\" type=\\\"critical\\\" *ngIf=\\\"!demoFormGroup.controls['checkboxGroup'].valid && demoFormGroup.controls['checkboxGroup'].touched\\\" >\\n                                <b i18n>Select minimum 3 checkboxes!</b>\\n                            </nui-message>\\n                            <nui-checkbox-group formControlName=\\\"checkboxGroup\\\"\\n                                                name=\\\"item\\\" required>\\n                                <nui-checkbox *ngFor=\\\"let item of itemsSource\\\"\\n                                                [value]=\\\"item\\\">\\n                                    {{item}}\\n                                </nui-checkbox>\\n                            </nui-checkbox-group>\\n                        </div>\\n                        <button nui-button type=\\\"submit\\\" [disabled]=\\\"demoFormGroup.controls['checkboxGroup'].invalid\\\" i18n>Submit</button>\\n                    </form>\\n                </ng-container>\\n            </div>\\n        </nui-popup>\\n    </div>\\n</div>\\n\";","<div class=\"row\">\n    <div class=\"col\">\n        <div class=\"row\">\n            <div class=\"col nui-text-default\" i18n>Bottom Right</div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <nui-popup [directionRight]=\"true\">\n                    <button nui-button\n                            nuiPopupToggle\n                            type=\"button\"\n                            [icon]=\"icon\"\n                            [iconRight]=\"true\"\n                            class=\"menu-button\"\n                            [isEmpty]=\"false\"\n                            i18n>\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor=\"let item of itemsSource\">\n                            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n    <div class=\"col\">\n        <div class=\"row\">\n            <div class=\"col nui-text-default\" i18n>Top Left</div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <nui-popup  [directionTop]=\"true\">\n                    <button nui-button\n                            nuiPopupToggle\n                            type=\"button\"\n                            [icon]=\"icon\"\n                            [iconRight]=\"true\"\n                            class=\"menu-button\"\n                            [isEmpty]=\"false\"\n                            i18n>\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor=\"let item of itemsSource\">\n                            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n    <div class=\"col\">\n        <div class=\"row\">\n            <div class=\"col nui-text-default\" i18n>Top Right</div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <nui-popup  [directionTop]=\"true\" [directionRight]=\"true\">\n                    <button nui-button\n                            nuiPopupToggle\n                            type=\"button\"\n                            [icon]=\"icon\"\n                            [iconRight]=\"true\"\n                            class=\"menu-button\"\n                            [isEmpty]=\"false\"\n                            i18n>\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor=\"let item of itemsSource\">\n                            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-different-directions-example\",\n    templateUrl: \"./popup-different-directions.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupDifferentDirectionsExampleComponent {\n\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n\n}\n","<nui-popup  contextClass=\"nui-demo-custom-class\">\n    <button nui-button\n            nuiPopupToggle\n            width=\"90px\"\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n            Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-with-custom-styling-example\",\n    templateUrl: \"./popup-with-custom-styling.example.component.html\",\n    styleUrls: [\"popup-with-custom-styling.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomStylingComponent {\n\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n\n}\n","<nui-popup>\n    <button nui-button\n            nuiPopupToggle\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\" nuiTooltip=\"This icon is draggable\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-simple-usage-example\",\n    templateUrl: \"./popup-simple-usage.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupSimpleExampleComponent {\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n}\n","export default \"export * from \\\"./popup-simple-usage/popup-simple-usage.example.component\\\";\\nexport * from \\\"./popup-docs/popup-docs.example.component\\\";\\nexport * from \\\"./popup-different-directions/popup-different-directions.example.component\\\";\\nexport * from \\\"./popup-with-custom-styling/popup-with-custom-styling.example.component\\\";\\nexport * from \\\"./popup-with-custom-width/popup-with-custom-width.example.component\\\";\\nexport * from \\\"./popup-with-custom-content/popup-with-custom-content.example.component\\\";\\nexport * from \\\"./popup-test/popup-test.example.component\\\";\\nexport * from \\\"./popup-append-to-body/popup-append-to-body.example.component\\\";\\n\";"]}