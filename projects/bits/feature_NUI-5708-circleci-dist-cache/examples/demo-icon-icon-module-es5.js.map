{"version":3,"sources":["webpack:///demo/src/components/demo/icon/icon-color/icon-color.example.component.html?fbc5","webpack:///demo/src/components/demo/icon/icon-hover/icon-hover.example.component.ts","webpack:///demo/src/components/demo/icon/icon-hover/icon-hover.example.component.html","webpack:///demo/src/components/demo/icon/icon-list/icon-list.example.component.ts?fdb1","webpack:///demo/src/components/demo/icon/icon-basic/icon-basic.example.component.html?d5bb","webpack:///demo/src/components/demo/icon/icon-status/icon-status.example.component.ts?d6d7","webpack:///demo/src/components/demo/icon/icon-status/icon-status.example.component.ts","webpack:///demo/src/components/demo/icon/icon-status/icon-status.example.component.html","webpack:///demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.ts","webpack:///demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.html","webpack:///demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.html?e3b1","webpack:///demo/src/components/demo/icon/icon-size/icon-size.example.component.ts?e041","webpack:///demo/src/components/demo/icon/icon-color/icon-color.example.component.ts","webpack:///demo/src/components/demo/icon/icon-color/icon-color.example.component.html","webpack:///demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.ts?e964","webpack:///demo/src/components/demo/icon/icon-counter/icon-counter.example.component.ts","webpack:///demo/src/components/demo/icon/icon-counter/icon-counter.example.component.html","webpack:///demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.html?edc5","webpack:///demo/src/components/demo/icon/icon-status/icon-status.example.component.html?0586","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?273b","webpack:///demo/src/components/demo/icon/icon.module.ts?0b5d","webpack:///demo/src/components/demo/icon/icon-hover/icon-hover.example.component.html?27b9","webpack:///demo/src/components/demo/icon/icon-docs/icon-docs.example.component.ts","webpack:///demo/src/components/demo/icon/icon-docs/icon-docs.example.component.html","webpack:///demo/src/components/demo/icon/icon-counter/icon-counter.example.component.html?34d7","webpack:///demo/src/components/demo/icon/icon-hover/icon-hover.example.component.ts?34e9","webpack:///demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.ts","webpack:///demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.html","webpack:///demo/src/components/demo/icon/index.ts?4e4c","webpack:///demo/src/components/demo/icon/icon-list/icon-list.example.component.html?6267","webpack:///demo/src/components/demo/icon/icon-size/icon-size.example.component.ts","webpack:///demo/src/components/demo/icon/icon-size/icon-size.example.component.html","webpack:///demo/src/components/demo/icon/icon-size/icon-size.example.component.html?848e","webpack:///demo/src/components/demo/icon/icon-list/icon-list.example.component.ts","webpack:///demo/src/components/demo/icon/icon-list/icon-list.example.component.html","webpack:///demo/src/components/demo/icon/index.ts","webpack:///demo/src/components/demo/icon/icon-color/icon-color.example.component.ts?8d07","webpack:///demo/src/components/demo/icon/icon-docs/icon-docs.example.component.ts?a22e","webpack:///demo/src/components/demo/icon/icon.module.ts","webpack:///demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.ts?a589","webpack:///demo/src/components/demo/icon/icon-docs/icon-docs.example.component.html?abd9","webpack:///demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.html?af9f","webpack:///demo/src/components/demo/icon/icon-basic/icon-basic.example.component.ts?b276","webpack:///demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.ts?b893","webpack:///demo/src/components/demo/icon/icon-basic/icon-basic.example.component.ts","webpack:///demo/src/components/demo/icon/icon-basic/icon-basic.example.component.html","webpack:///demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.ts","webpack:///demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.html","webpack:///demo/src/components/demo/icon/icon-counter/icon-counter.example.component.ts?cb28"],"names":["IconHoverExampleComponent","IconStatusExampleComponent","status","Up","IconChildStatusExampleComponent","childStatus","Sleep","IconColorExampleComponent","IconCounterExampleComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","IconDocsExampleComponent","IconWithTextExampleComponent","IconSizeExampleComponent","IconListExampleComponent","icons","categories","getCategories","icon","indexOf","category","push","routes","path","component","data","ga","showThemeSwitcher","IconModule","provide","useFactory","forChild","IconBasicExampleComponent","IconVisualTestComponent","iconStatuses","values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFA,yB;;;;;yBAAAA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,wF;AAAA;AAAA;ACPtC;;;;;;;;;;;;;;;;;;;;;ACAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,0B,GALb;AAAA;;AAMI,aAAAC,MAAA,GAAqB,yDAAWC,EAAhC;AACH,O;;;yBAFYF,0B;AAA0B,O;;;cAA1BA,0B;AAA0B,gD;AAAA,gB;AAAA,e;AAAA,oF;AAAA;AAAA;ACRvC;;;;AAAqB;;;;;;;;;;;;;;;;;;;;;ACCrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaG,+B,GALb;AAAA;;AAMI,aAAAF,MAAA,GAAqB,yDAAWC,EAAhC;AACA,aAAAE,WAAA,GAA0B,yDAAWC,KAArC;AACH,O;;;yBAHYF,+B;AAA+B,O;;;cAA/BA,+B;AAA+B,sD;AAAA,gB;AAAA,e;AAAA,6D;AAAA;AAAA;ACR5C;;;;AAAqB,2FAAiB,aAAjB,EAAiB,eAAjB;;;;;;;;;;;;;;;;;;;;;ACArB;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFG,yB;;;;;yBAAAA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,qF;AAAA;AAAA;ACPtC;;;;;;;;;;;;;;;;;;;;;ACAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFC,2B;;;;;yBAAAA,2B;AAA2B,O;;;cAA3BA,2B;AAA2B,iD;AAAA,gB;AAAA,e;AAAA,qF;AAAA;AAAA;ACPxC;;;;AAAuB;;;;;;;;;;;;;;;;;;;;;ACAvB;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;ACAf,UAAIC,GAAG,GAAG;AACT,0DAAkD,MADzC;AAET,wDAAgD,MAFvC;AAGT,wEAAgE,MAHvD;AAIT,sEAA8D,MAJrD;AAKT,0DAAkD,MALzC;AAMT,wDAAgD,MANvC;AAOT,8DAAsD,MAP7C;AAQT,4DAAoD,MAR3C;AAST,wDAAgD,MATvC;AAUT,sDAA8C,MAVrC;AAWT,0DAAkD,MAXzC;AAYT,wDAAgD,MAZvC;AAaT,wDAAgD,MAbvC;AAcT,sDAA8C,MAdrC;AAeT,wDAAgD,MAfvC;AAgBT,sDAA8C,MAhBrC;AAiBT,4DAAoD,MAjB3C;AAkBT,0DAAkD,MAlBzC;AAmBT,8DAAsD,MAnB7C;AAoBT,4DAAoD,MApB3C;AAqBT,kEAA0D,MArBjD;AAsBT,gEAAwD,MAtB/C;AAuBT,4BAAoB,MAvBX;AAwBT,sBAAc;AAxBL,OAAV;;AA4BA,eAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC5B,YAAIC,EAAE,GAAGC,qBAAqB,CAACF,GAAD,CAA9B;AACA,eAAOG,mBAAmB,CAACF,EAAD,CAA1B;AACA;;AACD,eAASC,qBAAT,CAA+BF,GAA/B,EAAoC;AACnC,YAAG,CAACG,mBAAmB,CAACC,CAApB,CAAsBN,GAAtB,EAA2BE,GAA3B,CAAJ,EAAqC;AACpC,cAAIK,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBN,GAAzB,GAA+B,GAAzC,CAAR;AACAK,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA;;AACD,eAAOP,GAAG,CAACE,GAAD,CAAV;AACA;;AACDD,oBAAc,CAACS,IAAf,GAAsB,SAASC,kBAAT,GAA8B;AACnD,eAAOC,MAAM,CAACF,IAAP,CAAYV,GAAZ,CAAP;AACA,OAFD;;AAGAC,oBAAc,CAACY,OAAf,GAAyBT,qBAAzB;AACAU,YAAM,CAACC,OAAP,GAAiBd,cAAjB;AACAA,oBAAc,CAACE,EAAf,GAAoB,MAApB;;;;;;;;;;;;;;;;AC7CA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFa,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,8C;AAAA,kB;AAAA,e;AAAA,4qB;AAAA;AAAA;ACPrC;;AACI;;AAAM;;AAAgB;;AAAO;;AACjC;;AAEA;;AAAI;;AAAgB;;AACpB;;AACI;;AACI;;AAAM;;AAAa;;AACvB;;AACJ;;AAEA;;AAAI;;AAAW;;AACf;;AACI;;AAAO;;AAAM;;AAAgB;;AAAQ;;AAAgB;;AAAM;;AAAI;;AAAQ;;AACrC;;AAAQ;;AAAe;;AAAU;;AACvE;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAI;;AACR;;AACI;;AAAgC;;AAAM;;AAAgB;;AAAO;;AAAU;;AAAM;;AAAI;;AAAQ;;AAC9E;;AAAM;;AAAI;;AAAQ;;AACjC;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAK;;AACT;;AACI;;AAAa;;AAAM;;AAAgB;;AAAQ;;AAAsE;;AAAM;;AAAS;;AAAQ;;AAC5I;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAY;;AAChB;;AACI;;AAA0B;;AAAM;;AAAgB;;AAAQ;;AAAqD;;AAAM;;AAAc;;AAAQ;;AAC7I;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAM;;AACV;;AACI;;AAAM;;AAAgB;;AAAQ;;AAAwD;;AAAM;;AAAM;;AAAQ;;AAA+B;;AAAM;;AAAwE;;AAAU;;AAAI;;AAAO;;AACrK;;AAAM;;AAAiB;;AAClG;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAY;;AAChB;;AACI;;AAAM;;AAAgB;;AAAQ;;AAA0E;;AAAM;;AAAW;;AAAQ;;AAA+B;;AAAM;;AAAwE;;AAAU;;AAAI;;AAAO;;AAC5L;;AAAM;;AAAsB;;AACvG;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAmB;;AACvB;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAO;;AACX;;AACI;;AAA8C;;AAAM;;AAAO;;AAAQ;;AACvE;;AACA;;AACI;;AACJ;;AAEA;;AAAI;;AAAe;;AACnB;;AACI;;AACJ;;;;;;;;;;;;;;;;;;;;;AClFA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,4B,GALb;AAAA;;AAMI,aAAAxB,MAAA,GAAqB,yDAAWC,EAAhC;AACA,aAAAE,WAAA,GAA0B,yDAAWC,KAArC;AACH,O;;;yBAHYoB,4B;AAA4B,O;;;cAA5BA,4B;AAA4B,mD;AAAA,gB;AAAA,e;AAAA;AAAA;;AAAA;;;WAAA,M;qBCN1B,S;;;;;;;AAFf;;AACI;;AACA;;AAAA;;AAA8B;;AAClC;;;;AAF6B;;AAAA,2FAAiB,aAAjB,EAAiB,eAAjB;;;;;;;;;;;;;;;;;;;;;ACD7B;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,8C;AAAA,gB;AAAA,e;AAAA,kN;AAAA;AAAA;ACPrC;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;ACFA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACEf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEgB;;AACI;;AACI;;AACA;;AAAyB;;AAAa;;AAC1C;;AACJ;;;;;;AAHkB;;AAAA;;AACe;;AAAA;;;;;;AAJrC;;AACI;;AAMJ;;;;;;;;AANsB;;AAAA;;;;;;AAJlC;;AACI;;AACI;;AACI;;AAQJ;;AACJ;;AACJ;;;;;;;;AAZkB;;AAAA;;AAEgB;;AAAA;;;;UDMrBC,wB;;;;;;;iBAIF,oBAAQ;AAEX,iBAAKC,KAAL,GAAa,yDAAb;AACA,iBAAKC,UAAL,GAAkB,KAAKC,aAAL,CAAmB,yDAAnB,CAAlB;AACH;;;iBAEO,uBAAcF,KAAd,EAA4B;AAChC,gBAAMC,UAAU,GAAG,EAAnB;;AADgC,uDAEbD,KAFa;AAAA;;AAAA;AAEhC,kEAA0B;AAAA,oBAAfG,IAAe;;AACtB,oBAAIF,UAAU,CAACG,OAAX,CAAmBD,IAAI,CAACE,QAAxB,MAAsC,CAAC,CAA3C,EAA8C;AAC1CJ,4BAAU,CAACK,IAAX,CAAgBH,IAAI,CAACE,QAArB;AACH;AACJ;AAN+B;AAAA;AAAA;AAAA;AAAA;;AAOhC,mBAAOJ,UAAP;AACH;;;;;;;yBAlBQF,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,8C;AAAA,gB;AAAA,e;AAAA,mN;AAAA;AAAA;ACTrC;;;;AAA0B;;;;;;;;;;;;;;;;;;;;;ACA1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,UAAMQ,MAAM,GAAG,CACX;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE,+DAFf;AAGIC,YAAI,EAAE;AACF,kBAAQ;AACJ,qBAAS,wDAAUC;AADf,WADN;AAIFC,2BAAiB,EAAE;AAJjB;AAHV,OADW,EAWX;AACIJ,YAAI,EAAE,kBADV;AAEIC,iBAAS,EAAE,8DAFf;AAGIC,YAAI,EAAE;AACF,kBAAQ;AACJ,6BAAiB;AADb;AADN;AAHV,OAXW,CAAf;;UAoDaG,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,mBAVR,CACP;AACIC,iBAAO,EAAE,6DADb;AAEIC,oBAAU,EAAE;AAAA,mBAAY,2BAAZ;AAAA;AAFhB,SADO,C;AAKV,kBAxBQ,CACL,2DADK,EAEL,+DAFK,EAGL,2DAHK,EAIL,6DAAaC,QAAb,CAAsBT,MAAtB,CAJK,CAwBR,EAEG,4DAFH;;;;4HAKQM,U,EAAU;AAAA,yBAtBf,gEAsBe,EArBf,sEAqBe,EApBf,gEAoBe,EAnBf,kEAmBe,EAlBf,+DAkBe,EAjBf,+DAiBe,EAhBf,+DAgBe,EAff,iEAee,EAdf,gEAce,EAbf,mEAae,EAZf,8DAYe;AAZQ,oBAhBvB,2DAgBuB,EAfvB,+DAeuB,EAdvB,2DAcuB,EAdV,4DAcU,CAYR;AA1BF,oBAuBb,4DAvBa;AA0BE,S;AAHH,O;;;;;;;;;;;;;;;;;ACnEpB;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFI,yB;;;;;yBAAAA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,iC;AAAA;AAAA;ACPtC;;;;;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6CY;;AACI;;AAAU;;AACd;;;;;;AADI;;AAAA;;AAA+B;;AAAA;;;;;;AAUnC;;AACI;;AAAU;;AACd;;;;;;AADI;;AAAA;;AAA2C;;AAAA;;;;UDjD9CC,uB;AAJb;AAAA;;AAOW,eAAAC,YAAA,GAAyB3B,MAAM,CAAC4B,MAAP,CAAc,wDAAd,CAAzB;AAiBV;;;;iBAfU,oBAAQ;AAEX,iBAAKpB,KAAL,GAAa,yDAAb;AACA,iBAAKC,UAAL,GAAkB,KAAKC,aAAL,CAAmB,yDAAnB,CAAlB;AACH;;;iBAEM,uBAAcF,KAAd,EAA4B;AAC/B,gBAAMC,UAAU,GAAG,EAAnB;;AAD+B,wDAEZD,KAFY;AAAA;;AAAA;AAE/B,qEAA0B;AAAA,oBAAfG,IAAe;;AACtB,oBAAIF,UAAU,CAACG,OAAX,CAAmBD,IAAI,CAACE,QAAxB,MAAsC,CAAC,CAA3C,EAA8C;AAC1CJ,4BAAU,CAACK,IAAX,CAAgBH,IAAI,CAACE,QAArB;AACH;AACJ;AAN8B;AAAA;AAAA;AAAA;AAAA;;AAO/B,mBAAOJ,UAAP;AACH;;;;;;;yBAnBQiB,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,6jC;AAAA;AAAA;ACTpC;;AACI;;AACI;;AAAI;;AAAgB;;AACpB;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAA0B;;AAC9B;;AACA;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAe;;AACnB;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAgB;;AAEpB;;AACI;;AAGJ;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAsB;;AAE1B;;AACI;;AAGJ;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAwB;;AAC5B;;AACI;;AACA;;AACJ;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAiB;;AACrB;;AACA;;AACJ;;AACJ;;;;AAhCoE;;AAAA;;AAWA;;AAAA;;AAkBrC;;AAAA;;;;;;;;;;;;;;;;;;;;;AC3E/B;AAAe;;;AAAA","file":"demo-icon-icon-module-es5.js","sourcesContent":["export default \"<nui-icon icon=\\\"add\\\" iconColor=\\\"orange\\\" id=\\\"nui-demo-icon-color\\\"></nui-icon>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-hover-example\",\n    templateUrl: \"./icon-hover.example.component.html\",\n})\n\nexport class IconHoverExampleComponent {}\n","<nui-icon icon=\"add\" iconHoverColor=\"gray\" id=\"nui-demo-icon-hover\"></nui-icon>\n","export default \"import { Component, OnInit } from \\\"@angular/core\\\";\\n\\nimport { icons as iconsData } from \\\"../../../../../../src/lib/icon/icons\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-list-example\\\",\\n    templateUrl: \\\"./icon-list.example.component.html\\\",\\n})\\n\\nexport class IconListExampleComponent implements OnInit {\\n    public icons: any[];\\n    public categories: any[];\\n\\n    public ngOnInit(): void {\\n\\n        this.icons = iconsData;\\n        this.categories = this.getCategories(iconsData);\\n    }\\n\\n    private getCategories(icons: any[]) {\\n        const categories = [];\\n        for (const icon of icons) {\\n            if (categories.indexOf(icon.category) === -1) {\\n                categories.push(icon.category);\\n            }\\n        }\\n        return categories;\\n    }\\n}\\n\";","export default \"<nui-icon icon=\\\"add\\\"></nui-icon>\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-status-example\\\",\\n    templateUrl: \\\"./icon-status.example.component.html\\\",\\n})\\n\\nexport class IconStatusExampleComponent {\\n    status: IconStatus = IconStatus.Up;\\n}\\n\";","import {Component} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-icon-status-example\",\n    templateUrl: \"./icon-status.example.component.html\",\n})\n\nexport class IconStatusExampleComponent {\n    status: IconStatus = IconStatus.Up;\n}\n","<nui-icon icon=\"add\" [status]=\"status\" id=\"nui-demo-icon-with-status-up\"></nui-icon>\n","import {Component} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-icon-child-status-example\",\n    templateUrl: \"./icon-child-status.example.component.html\",\n})\n\nexport class IconChildStatusExampleComponent {\n    status: IconStatus = IconStatus.Up;\n    childStatus: IconStatus = IconStatus.Sleep;\n}\n","<nui-icon icon=\"add\" [status]=\"status\" [childStatus]=\"childStatus\"></nui-icon>\n","export default \"<div class=\\\"ml-4\\\">\\n    <div>\\n        <h3>Basic icon usage</h3>\\n        <nui-icon icon=\\\"add\\\" iconHoverColor=\\\"gray\\\" id=\\\"nui-icon-test-basic-usage\\\"></nui-icon>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Differrent Sizes</h3>\\n        <nui-icon class=\\\"pr-2\\\" icon=\\\"add\\\" iconSize=\\\"small\\\" id=\\\"nui-icon-test-small-size\\\"></nui-icon>\\n        <nui-icon class=\\\"pr-2\\\" icon=\\\"add\\\" id=\\\"nui-icon-test-default-size\\\"></nui-icon>\\n        <nui-icon class=\\\"pr-2\\\" icon=\\\"add\\\" iconSize=\\\"medium\\\" id=\\\"nui-icon-test-medium-size\\\"></nui-icon>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Color</h3>\\n        <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                orange\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"orange\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                light-blue\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"light-blue\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                primary-blue\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"primary-blue\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                gray\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"gray\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                disabled-gray\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"disabled-gray\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Status</h3>\\n\\n        <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"d-flex flex-column pr-5\\\" *ngFor=\\\"let status of iconStatuses\\\">\\n                {{status}}<nui-icon icon=\\\"add\\\" status=\\\"{{status}}\\\"></nui-icon>\\n            </div>\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Child Status</h3>\\n\\n        <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"d-flex flex-column pr-5\\\" *ngFor=\\\"let status of iconStatuses\\\">\\n                {{status}}<nui-icon icon=\\\"add\\\" status=\\\"up\\\" childStatus=\\\"{{status}}\\\"></nui-icon>\\n            </div>\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Text Alignment</h3>\\n        <div class=\\\"d-inline-flex align-items-center\\\">\\n            <nui-icon icon=\\\"printer\\\" status=\\\"critical\\\" childStatus=\\\"down\\\"></nui-icon>\\n            Managed entity name\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Counter</h3>\\n        <nui-icon icon=\\\"email\\\" [counter]=\\\"6\\\" id=\\\"nui-icon-test-with-counter\\\"></nui-icon>\\n        <hr />\\n    </div>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-size-example\\\",\\n    templateUrl: \\\"./icon-size.example.component.html\\\",\\n})\\n\\nexport class IconSizeExampleComponent {}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-color-example\",\n    templateUrl: \"./icon-color.example.component.html\",\n})\n\nexport class IconColorExampleComponent {}\n","<nui-icon icon=\"add\" iconColor=\"orange\" id=\"nui-demo-icon-color\"></nui-icon>\n","export default \"import {Component} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-child-status-example\\\",\\n    templateUrl: \\\"./icon-child-status.example.component.html\\\",\\n})\\n\\nexport class IconChildStatusExampleComponent {\\n    status: IconStatus = IconStatus.Up;\\n    childStatus: IconStatus = IconStatus.Sleep;\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-counter-example\",\n    templateUrl: \"./icon-counter.example.component.html\",\n})\n\nexport class IconCounterExampleComponent {}\n","<nui-icon icon=\"email\" [counter]=\"6\" id=\"nui-demo-icon-with-counter\"></nui-icon>\n","export default \"<nui-icon icon=\\\"add\\\" [status]=\\\"status\\\" [childStatus]=\\\"childStatus\\\"></nui-icon>\\n\";","export default \"<nui-icon icon=\\\"add\\\" [status]=\\\"status\\\" id=\\\"nui-demo-icon-with-status-up\\\"></nui-icon>\\n\";","var map = {\n\t\"./icon-basic/icon-basic.example.component.html\": \"1bsI\",\n\t\"./icon-basic/icon-basic.example.component.ts\": \"snZD\",\n\t\"./icon-child-status/icon-child-status.example.component.html\": \"7cVk\",\n\t\"./icon-child-status/icon-child-status.example.component.ts\": \"6WQY\",\n\t\"./icon-color/icon-color.example.component.html\": \"+8VF\",\n\t\"./icon-color/icon-color.example.component.ts\": \"jQew\",\n\t\"./icon-counter/icon-counter.example.component.html\": \"NNfs\",\n\t\"./icon-counter/icon-counter.example.component.ts\": \"yyiK\",\n\t\"./icon-docs/icon-docs.example.component.html\": \"q9kn\",\n\t\"./icon-docs/icon-docs.example.component.ts\": \"oi4e\",\n\t\"./icon-hover/icon-hover.example.component.html\": \"J7lh\",\n\t\"./icon-hover/icon-hover.example.component.ts\": \"NOk1\",\n\t\"./icon-list/icon-list.example.component.html\": \"Yme5\",\n\t\"./icon-list/icon-list.example.component.ts\": \"/bEf\",\n\t\"./icon-size/icon-size.example.component.html\": \"hI6i\",\n\t\"./icon-size/icon-size.example.component.ts\": \"4EEn\",\n\t\"./icon-status/icon-status.example.component.html\": \"BYaV\",\n\t\"./icon-status/icon-status.example.component.ts\": \"1teV\",\n\t\"./icon-visual-test/icon-visual-test.component.html\": \"47EU\",\n\t\"./icon-visual-test/icon-visual-test.component.ts\": \"uJO1\",\n\t\"./icon-with-text/icon-with-text.example.component.html\": \"r585\",\n\t\"./icon-with-text/icon-with-text.example.component.ts\": \"pYnm\",\n\t\"./icon.module.ts\": \"C12z\",\n\t\"./index.ts\": \"Tkyz\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"BqlG\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiExpanderModule, NuiIconModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    IconBasicExampleComponent,\\n    IconChildStatusExampleComponent,\\n    IconColorExampleComponent,\\n    IconCounterExampleComponent,\\n    IconDocsExampleComponent,\\n    IconHoverExampleComponent,\\n    IconListExampleComponent,\\n    IconSizeExampleComponent,\\n    IconStatusExampleComponent,\\n    IconVisualTestComponent,\\n    IconWithTextExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: IconDocsExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"icon-visual-test\\\",\\n        component: IconVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiIconModule,\\n        NuiExpanderModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        IconBasicExampleComponent,\\n        IconChildStatusExampleComponent,\\n        IconColorExampleComponent,\\n        IconCounterExampleComponent,\\n        IconDocsExampleComponent,\\n        IconListExampleComponent,\\n        IconSizeExampleComponent,\\n        IconStatusExampleComponent,\\n        IconHoverExampleComponent,\\n        IconWithTextExampleComponent,\\n        IconVisualTestComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class IconModule {\\n}\\n\";","export default \"<nui-icon icon=\\\"add\\\" iconHoverColor=\\\"gray\\\" id=\\\"nui-demo-icon-hover\\\"></nui-icon>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-docs-example\",\n    templateUrl: \"./icon-docs.example.component.html\",\n})\n\nexport class IconDocsExampleComponent {}\n","<p>\n    <code>&lt;nui-icon&gt;</code>, as the name implies, allows you to display an icon.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiIconModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-icon&gt;</code> you can set the <code>icon</code> input to the id of one of the available icon\n    provided as part of Nova. See the <strong>Available Icons</strong> section on this page.\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-basic\" exampleTitle=\"Basic Usage\">\n    <nui-icon-basic-example></nui-icon-basic-example>\n</nui-example-wrapper>\n\n<h2>Size</h2>\n<p>\n    To override the default size of <code>&lt;nui-icon&gt;</code>, set the <code>size</code> input to the string values \"small\" (12px) or \"medium\" (20px).\n    By default <code>size</code> is set to \"default\" (16px).\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-size\" exampleTitle=\"Size\">\n    <nui-icon-size-example></nui-icon-size-example>\n</nui-example-wrapper>\n\n<h2>Color</h2>\n<p>\n    The color of <code>&lt;nui-icon&gt;</code> can be set by passing one of the following color string values to the <code>iconColor</code> input: \"white\", \"light-blue\", \"gray\", \"disabled-gray\", \"primary-blue\", or \"orange\".\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-color\" exampleTitle=\"Color\">\n    <nui-icon-color-example></nui-icon-color-example>\n</nui-example-wrapper>\n\n<h2>Hover Effect</h2>\n<p>\n    To set the hover color of <code>&lt;nui-icon&gt;</code> pass one of the following color string values to the <code>iconHoverColor</code> input: \"white\", \"light-blue\", \"gray\", \"disabled-gray\", \"primary-blue\", or \"orange\".\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-hover\" exampleTitle=\"Hover effect\">\n    <nui-icon-hover-example></nui-icon-hover-example>\n</nui-example-wrapper>\n\n<h2>Status</h2>\n<p>\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon. Available values for the <code>status</code> input can be found in the enum <code><a href=\"../miscellaneous/enumerations.html#IconStatus\" target=\"_blank\">IconStatus</a></code>.\n    You can also pass a string value of an appropriate status in enum e.g. <code>status=\"critical\"</code>\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-status\" exampleTitle=\"Status\">\n    <nui-icon-status-example></nui-icon-status-example>\n</nui-example-wrapper>\n\n<h2>Child Status</h2>\n<p>\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon with child status. Available values for the <code>childStatus</code> input can be found in the enum <code><a href=\"../miscellaneous/enumerations.html#IconStatus\" target=\"_blank\">IconStatus</a></code>.\n    You can also pass a string value of an appropriate status in enum e.g. <code>childStatus=\"critical\"</code>\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-child-status\" exampleTitle=\"Child Status\">\n    <nui-icon-child-status-example></nui-icon-child-status-example>\n</nui-example-wrapper>\n\n<h2>Alignment with Text</h2>\n<p>\n    The example below demonstrates how to align text with the icon.\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-with-text\" exampleTitle=\"Alignment with Text\">\n    <nui-icon-with-text-example></nui-icon-with-text-example>\n</nui-example-wrapper>\n\n<h2>Counter</h2>\n<p>\n    To apply a counter badge to the icon, set the <code>counter</code> input to a valid integer.\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-counter\" exampleTitle=\"Counter\">\n    <nui-icon-counter-example></nui-icon-counter-example>\n</nui-example-wrapper>\n\n<h2>Available Icons</h2>\n<nui-example-wrapper filenamePrefix=\"icon-list\" exampleTitle=\"Available Icons\">\n    <nui-icon-list-example></nui-icon-list-example>\n</nui-example-wrapper>\n","export default \"<nui-icon icon=\\\"email\\\" [counter]=\\\"6\\\" id=\\\"nui-demo-icon-with-counter\\\"></nui-icon>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-hover-example\\\",\\n    templateUrl: \\\"./icon-hover.example.component.html\\\",\\n})\\n\\nexport class IconHoverExampleComponent {}\\n\";","import {Component} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-icon-with-text-example\",\n    templateUrl: \"./icon-with-text.example.component.html\",\n})\n\nexport class IconWithTextExampleComponent {\n    status: IconStatus = IconStatus.Up;\n    childStatus: IconStatus = IconStatus.Sleep;\n}\n","<div class=\"d-inline-flex align-items-center\">\n    <nui-icon icon=\"printer\" [status]=\"status\" [childStatus]=\"childStatus\"></nui-icon>\n    <span i18n>Managed entity name</span>\n</div>\n","export default \"export * from \\\"./icon-basic/icon-basic.example.component\\\";\\nexport * from \\\"./icon-docs/icon-docs.example.component\\\";\\nexport * from \\\"./icon-color/icon-color.example.component\\\";\\nexport * from \\\"./icon-list/icon-list.example.component\\\";\\nexport * from \\\"./icon-size/icon-size.example.component\\\";\\nexport * from \\\"./icon-status/icon-status.example.component\\\";\\nexport * from \\\"./icon-hover/icon-hover.example.component\\\";\\nexport * from \\\"./icon-counter/icon-counter.example.component\\\";\\nexport * from \\\"./icon-child-status/icon-child-status.example.component\\\";\\nexport * from \\\"./icon-with-text/icon-with-text.example.component\\\";\\nexport * from \\\"./icon-visual-test/icon-visual-test.component\\\";\\n\";","export default \"<div *ngFor=\\\"let category of categories\\\">\\n    <nui-expander [header]=\\\"category\\\">\\n        <div class=\\\"row align-items-baseline\\\">\\n            <div *ngFor=\\\"let icon of icons\\\">\\n                <div class=\\\"m-3\\\" *ngIf=\\\"icon.code && icon.category == category\\\">\\n                    <figure class=\\\"d-flex flex-column align-items-center\\\">\\n                        <nui-icon [icon]=\\\"icon.name\\\"></nui-icon>\\n                        <figcaption class=\\\"mt-2\\\">{{icon.name}}</figcaption>\\n                    </figure>\\n                </div>\\n            </div>\\n        </div>\\n    </nui-expander>\\n</div>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-size-example\",\n    templateUrl: \"./icon-size.example.component.html\",\n})\n\nexport class IconSizeExampleComponent {}\n","<nui-icon icon=\"add\" iconSize=\"small\" id=\"nui-demo-icon-small\"></nui-icon>\n<nui-icon icon=\"add\" id=\"nui-demo-icon-default-size\"></nui-icon>\n<nui-icon icon=\"add\" iconSize=\"medium\" id=\"nui-demo-icon-medium-size\"></nui-icon>\n","export default \"<nui-icon icon=\\\"add\\\" iconSize=\\\"small\\\" id=\\\"nui-demo-icon-small\\\"></nui-icon>\\n<nui-icon icon=\\\"add\\\" id=\\\"nui-demo-icon-default-size\\\"></nui-icon>\\n<nui-icon icon=\\\"add\\\" iconSize=\\\"medium\\\" id=\\\"nui-demo-icon-medium-size\\\"></nui-icon>\\n\";","import { Component, OnInit } from \"@angular/core\";\n\nimport { icons as iconsData } from \"../../../../../../src/lib/icon/icons\";\n\n@Component({\n    selector: \"nui-icon-list-example\",\n    templateUrl: \"./icon-list.example.component.html\",\n})\n\nexport class IconListExampleComponent implements OnInit {\n    public icons: any[];\n    public categories: any[];\n\n    public ngOnInit(): void {\n\n        this.icons = iconsData;\n        this.categories = this.getCategories(iconsData);\n    }\n\n    private getCategories(icons: any[]) {\n        const categories = [];\n        for (const icon of icons) {\n            if (categories.indexOf(icon.category) === -1) {\n                categories.push(icon.category);\n            }\n        }\n        return categories;\n    }\n}\n","<div *ngFor=\"let category of categories\">\n    <nui-expander [header]=\"category\">\n        <div class=\"row align-items-baseline\">\n            <div *ngFor=\"let icon of icons\">\n                <div class=\"m-3\" *ngIf=\"icon.code && icon.category == category\">\n                    <figure class=\"d-flex flex-column align-items-center\">\n                        <nui-icon [icon]=\"icon.name\"></nui-icon>\n                        <figcaption class=\"mt-2\">{{icon.name}}</figcaption>\n                    </figure>\n                </div>\n            </div>\n        </div>\n    </nui-expander>\n</div>\n","export * from \"./icon-basic/icon-basic.example.component\";\nexport * from \"./icon-docs/icon-docs.example.component\";\nexport * from \"./icon-color/icon-color.example.component\";\nexport * from \"./icon-list/icon-list.example.component\";\nexport * from \"./icon-size/icon-size.example.component\";\nexport * from \"./icon-status/icon-status.example.component\";\nexport * from \"./icon-hover/icon-hover.example.component\";\nexport * from \"./icon-counter/icon-counter.example.component\";\nexport * from \"./icon-child-status/icon-child-status.example.component\";\nexport * from \"./icon-with-text/icon-with-text.example.component\";\nexport * from \"./icon-visual-test/icon-visual-test.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-color-example\\\",\\n    templateUrl: \\\"./icon-color.example.component.html\\\",\\n})\\n\\nexport class IconColorExampleComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-docs-example\\\",\\n    templateUrl: \\\"./icon-docs.example.component.html\\\",\\n})\\n\\nexport class IconDocsExampleComponent {}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiExpanderModule, NuiIconModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport {\n    IconBasicExampleComponent,\n    IconChildStatusExampleComponent,\n    IconColorExampleComponent,\n    IconCounterExampleComponent,\n    IconDocsExampleComponent,\n    IconHoverExampleComponent,\n    IconListExampleComponent,\n    IconSizeExampleComponent,\n    IconStatusExampleComponent,\n    IconVisualTestComponent,\n    IconWithTextExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: IconDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"icon-visual-test\",\n        component: IconVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiIconModule,\n        NuiExpanderModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        IconBasicExampleComponent,\n        IconChildStatusExampleComponent,\n        IconColorExampleComponent,\n        IconCounterExampleComponent,\n        IconDocsExampleComponent,\n        IconListExampleComponent,\n        IconSizeExampleComponent,\n        IconStatusExampleComponent,\n        IconHoverExampleComponent,\n        IconWithTextExampleComponent,\n        IconVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class IconModule {\n}\n","export default \"import {Component} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-with-text-example\\\",\\n    templateUrl: \\\"./icon-with-text.example.component.html\\\",\\n})\\n\\nexport class IconWithTextExampleComponent {\\n    status: IconStatus = IconStatus.Up;\\n    childStatus: IconStatus = IconStatus.Sleep;\\n}\\n\";","export default \"<p>\\n    <code>&lt;nui-icon&gt;</code>, as the name implies, allows you to display an icon.\\n</p>\\n\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiIconModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    To use <code>&lt;nui-icon&gt;</code> you can set the <code>icon</code> input to the id of one of the available icon\\n    provided as part of Nova. See the <strong>Available Icons</strong> section on this page.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-icon-basic-example></nui-icon-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Size</h2>\\n<p>\\n    To override the default size of <code>&lt;nui-icon&gt;</code>, set the <code>size</code> input to the string values \\\"small\\\" (12px) or \\\"medium\\\" (20px).\\n    By default <code>size</code> is set to \\\"default\\\" (16px).\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-size\\\" exampleTitle=\\\"Size\\\">\\n    <nui-icon-size-example></nui-icon-size-example>\\n</nui-example-wrapper>\\n\\n<h2>Color</h2>\\n<p>\\n    The color of <code>&lt;nui-icon&gt;</code> can be set by passing one of the following color string values to the <code>iconColor</code> input: \\\"white\\\", \\\"light-blue\\\", \\\"gray\\\", \\\"disabled-gray\\\", \\\"primary-blue\\\", or \\\"orange\\\".\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-color\\\" exampleTitle=\\\"Color\\\">\\n    <nui-icon-color-example></nui-icon-color-example>\\n</nui-example-wrapper>\\n\\n<h2>Hover Effect</h2>\\n<p>\\n    To set the hover color of <code>&lt;nui-icon&gt;</code> pass one of the following color string values to the <code>iconHoverColor</code> input: \\\"white\\\", \\\"light-blue\\\", \\\"gray\\\", \\\"disabled-gray\\\", \\\"primary-blue\\\", or \\\"orange\\\".\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-hover\\\" exampleTitle=\\\"Hover effect\\\">\\n    <nui-icon-hover-example></nui-icon-hover-example>\\n</nui-example-wrapper>\\n\\n<h2>Status</h2>\\n<p>\\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon. Available values for the <code>status</code> input can be found in the enum <code><a href=\\\"../miscellaneous/enumerations.html#IconStatus\\\" target=\\\"_blank\\\">IconStatus</a></code>.\\n    You can also pass a string value of an appropriate status in enum e.g. <code>status=\\\"critical\\\"</code>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-status\\\" exampleTitle=\\\"Status\\\">\\n    <nui-icon-status-example></nui-icon-status-example>\\n</nui-example-wrapper>\\n\\n<h2>Child Status</h2>\\n<p>\\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon with child status. Available values for the <code>childStatus</code> input can be found in the enum <code><a href=\\\"../miscellaneous/enumerations.html#IconStatus\\\" target=\\\"_blank\\\">IconStatus</a></code>.\\n    You can also pass a string value of an appropriate status in enum e.g. <code>childStatus=\\\"critical\\\"</code>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-child-status\\\" exampleTitle=\\\"Child Status\\\">\\n    <nui-icon-child-status-example></nui-icon-child-status-example>\\n</nui-example-wrapper>\\n\\n<h2>Alignment with Text</h2>\\n<p>\\n    The example below demonstrates how to align text with the icon.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-with-text\\\" exampleTitle=\\\"Alignment with Text\\\">\\n    <nui-icon-with-text-example></nui-icon-with-text-example>\\n</nui-example-wrapper>\\n\\n<h2>Counter</h2>\\n<p>\\n    To apply a counter badge to the icon, set the <code>counter</code> input to a valid integer.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-counter\\\" exampleTitle=\\\"Counter\\\">\\n    <nui-icon-counter-example></nui-icon-counter-example>\\n</nui-example-wrapper>\\n\\n<h2>Available Icons</h2>\\n<nui-example-wrapper filenamePrefix=\\\"icon-list\\\" exampleTitle=\\\"Available Icons\\\">\\n    <nui-icon-list-example></nui-icon-list-example>\\n</nui-example-wrapper>\\n\";","export default \"<div class=\\\"d-inline-flex align-items-center\\\">\\n    <nui-icon icon=\\\"printer\\\" [status]=\\\"status\\\" [childStatus]=\\\"childStatus\\\"></nui-icon>\\n    <span i18n>Managed entity name</span>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-basic-example\\\",\\n    templateUrl: \\\"./icon-basic.example.component.html\\\",\\n})\\n\\nexport class IconBasicExampleComponent {}\\n\";","export default \"import {Component, OnInit} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\nimport {icons as iconsData} from \\\"../../../../../../src/lib/icon/icons\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-visual-test\\\",\\n    templateUrl: \\\"./icon-visual-test.component.html\\\",\\n})\\nexport class IconVisualTestComponent implements OnInit {\\n    public icons: any[];\\n    public categories: any[];\\n    public iconStatuses: string[] = Object.values(IconStatus);\\n\\n    public ngOnInit(): void {\\n\\n        this.icons = iconsData;\\n        this.categories = this.getCategories(iconsData);\\n    }\\n\\n    public getCategories(icons: any[]) {\\n        const categories = [];\\n        for (const icon of icons) {\\n            if (categories.indexOf(icon.category) === -1) {\\n                categories.push(icon.category);\\n            }\\n        }\\n        return categories;\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-basic-example\",\n    templateUrl: \"./icon-basic.example.component.html\",\n})\n\nexport class IconBasicExampleComponent {}\n","<nui-icon icon=\"add\"></nui-icon>\n","import {Component, OnInit} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\nimport {icons as iconsData} from \"../../../../../../src/lib/icon/icons\";\n\n@Component({\n    selector: \"nui-icon-visual-test\",\n    templateUrl: \"./icon-visual-test.component.html\",\n})\nexport class IconVisualTestComponent implements OnInit {\n    public icons: any[];\n    public categories: any[];\n    public iconStatuses: string[] = Object.values(IconStatus);\n\n    public ngOnInit(): void {\n\n        this.icons = iconsData;\n        this.categories = this.getCategories(iconsData);\n    }\n\n    public getCategories(icons: any[]) {\n        const categories = [];\n        for (const icon of icons) {\n            if (categories.indexOf(icon.category) === -1) {\n                categories.push(icon.category);\n            }\n        }\n        return categories;\n    }\n}\n","<div class=\"ml-4\">\n    <div>\n        <h3>Basic icon usage</h3>\n        <nui-icon icon=\"add\" iconHoverColor=\"gray\" id=\"nui-icon-test-basic-usage\"></nui-icon>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Differrent Sizes</h3>\n        <nui-icon class=\"pr-2\" icon=\"add\" iconSize=\"small\" id=\"nui-icon-test-small-size\"></nui-icon>\n        <nui-icon class=\"pr-2\" icon=\"add\" id=\"nui-icon-test-default-size\"></nui-icon>\n        <nui-icon class=\"pr-2\" icon=\"add\" iconSize=\"medium\" id=\"nui-icon-test-medium-size\"></nui-icon>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Color</h3>\n        <div class=\"d-flex flex-row\">\n            <div class=\"d-flex flex-column pr-5\">\n                orange\n                <nui-icon icon=\"add\" iconColor=\"orange\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                light-blue\n                <nui-icon icon=\"add\" iconColor=\"light-blue\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                primary-blue\n                <nui-icon icon=\"add\" iconColor=\"primary-blue\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                gray\n                <nui-icon icon=\"add\" iconColor=\"gray\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                disabled-gray\n                <nui-icon icon=\"add\" iconColor=\"disabled-gray\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Status</h3>\n\n        <div class=\"d-flex flex-row\">\n            <div class=\"d-flex flex-column pr-5\" *ngFor=\"let status of iconStatuses\">\n                {{status}}<nui-icon icon=\"add\" status=\"{{status}}\"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Child Status</h3>\n\n        <div class=\"d-flex flex-row\">\n            <div class=\"d-flex flex-column pr-5\" *ngFor=\"let status of iconStatuses\">\n                {{status}}<nui-icon icon=\"add\" status=\"up\" childStatus=\"{{status}}\"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Text Alignment</h3>\n        <div class=\"d-inline-flex align-items-center\">\n            <nui-icon icon=\"printer\" status=\"critical\" childStatus=\"down\"></nui-icon>\n            Managed entity name\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Counter</h3>\n        <nui-icon icon=\"email\" [counter]=\"6\" id=\"nui-icon-test-with-counter\"></nui-icon>\n        <hr />\n    </div>\n</div>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-counter-example\\\",\\n    templateUrl: \\\"./icon-counter.example.component.html\\\",\\n})\\n\\nexport class IconCounterExampleComponent {}\\n\";"]}