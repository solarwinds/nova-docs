{"version":3,"sources":["./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.html","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.html","./demo/src/components/demo/external-libraries/summary/summary.component.ts","./demo/src/components/demo/external-libraries/summary/summary.component.html","./demo/src/components/demo/external-libraries/external-libraries.module.ts","./demo/src/components/demo/external-libraries/index.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.html","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.html","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.html","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.html","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.html","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.html"],"names":[],"mappings":"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","file":"demo-external-libraries-external-libraries-module-es2015.js","sourcesContent":["import {CdkDragDrop, CdkDropList, copyArrayItem} from \"@angular/cdk/drag-drop\";\nimport {ChangeDetectionStrategy, Component} from \"@angular/core\";\n\n@Component({\n    selector: \"dnd-dropzone\",\n    templateUrl: \"./dnd-dropzone.example.component.html\",\n    styleUrls: [\"./dnd-dropzone.example.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DndDropzoneExampleComponent {\n    public sourceItems: string[] = [\"Adobe\", \"IBM\" ];\n    public destinationItems: string[] = [\"Dell\"];\n\n    // prevent user from putting back already displaced items\n    public sourceAcceptsItem(item: string, dropList?: CdkDropList): boolean {\n        return false;\n    }\n\n    public destinationAcceptsItem(item: string, dropList?: CdkDropList): boolean {\n        return item === \"Adobe\" || item === \"Dell\";\n    }\n\n    public onItemDropped(event: CdkDragDrop<string[]>) {\n        if (!this.destinationAcceptsItem(event.item.data)) {\n            return;\n        }\n\n        copyArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n}\n","<div cdkDropListGroup>\n    <!-- source from where the items will be dragged -->\n    <div class=\"draggable-container pr-2\" id=\"nui-demo-drop-list-1\">\n        <h3>Source</h3>\n        <div cdkDropList class=\"dragzone draggable-list\"\n             [cdkDropListData]=\"sourceItems\"\n             [cdkDropListSortingDisabled]=\"true\"\n             [cdkDropListEnterPredicate]=\"sourceAcceptsItem\">\n\n            <!-- display list of items -->\n            <div class=\"items-container\">\n                <div *ngFor=\"let item of sourceItems\" class=\"draggable-item\"\n                     cdkDrag [cdkDragData]=\"item\"\n                     cdkDragPreviewClass=\"nui-dnd-preview\">\n                    {{item}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- destination dropzone where the items will be dropped -->\n    <div class=\"draggable-container pl-2\"  id=\"nui-demo-drop-list-2\">\n        <h3>Destination</h3>\n        <div cdkDropList class=\"dropzone draggable-list\"\n             nuiDndDropTarget\n             #destinationTarget=nuiDndDropTarget\n             [cdkDropListData]=\"destinationItems\"\n             [canBeDropped]=\"destinationAcceptsItem\"\n             (cdkDropListDropped)=\"onItemDropped($event)\">\n\n            <!-- display list of items -->\n            <div class=\"items-container\">\n                <!-- make items invisible while a drag operation is in progress and dropzone is active-->\n                <div *ngFor=\"let item of destinationItems\" class=\"item\"\n                     [class.invisible]=\"destinationTarget.isDropZoneActive\">\n                    {{item}}\n                </div>\n            </div>\n\n            <!-- highlight dropzone area -->\n            <ng-container *ngTemplateOutlet=\"highlightDropzoneTemplate; context: {target: destinationTarget}\"></ng-container>\n        </div>\n    </div>\n</div>\n\n<!-- template to highlight a dropzone and inform user about the drag operation outcome (accept item or not) -->\n<ng-template #highlightDropzoneTemplate let-target=\"target\">\n    <div *ngIf=\"target.isDropZoneActive\" class=\"centered-overlay text-center\">\n\n        <!-- default state, highlight item placeholder when dragging starts -->\n        <div *ngIf=\"(target.showDropZone$ | async) !== true\">\n            <!-- This is a drop zone area where you can drag your items -->\n            <nui-icon icon=\"plus\" iconSize=\"medium\" cssClass=\"drop-circle-permanent\"></nui-icon>\n        </div>\n\n        <!-- accepted item placeholder -->\n        <div *ngIf=\"(target.canLastDragItemBeDropped$ | async)\">\n            <!-- The item currently dragged is accepted in this dropzone -->\n            <nui-icon icon=\"plus\" iconSize=\"medium\" cssClass=\"drop-circle-allowed\"></nui-icon>\n        </div>\n\n        <!-- reject item placeholder-->\n        <div *ngIf=\"(target.canLastDragItemBeDropped$ | async) === false\">\n            <!-- The item currently dragged is NOT accepted in this dropzone -->\n            <div class=\"centered-overlay text-nowrap text-special\" i18n>Not allowed</div>\n            <nui-icon icon=\"close\" iconSize=\"medium\" cssClass=\"drop-circle-not-allowed\"></nui-icon>\n        </div>\n    </div>\n</ng-template>\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"dnd-basic\",\n  templateUrl: \"./dnd-basic.example.component.html\",\n  styleUrls: [\"./dnd-basic.example.component.less\"],\n})\nexport class DndBasicExampleComponent {\n}\n\n","<div class=\"draggable-item\" cdkDrag>\n    I can be dragged from anywhere\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-external-libraries-summary\",\n    templateUrl: \"./summary.component.html\",\n})\nexport class SummaryComponent { }\n","<h1>External Libraries</h1>\n<p>\n    External front-end libraries can be used to enhance your app's functionality.\n    The following section lists some of the available libraries you can use. Follow the links for examples on how to use them in your app.\n</p>\n<ol>\n    <li>\n        <a href=\"#/external-libraries/drag-and-drop\">Drag & Drop</a>\n    </li>\n</ol>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { SrlcStage } from \"@nova-ui/bits\";\n\nimport { SummaryComponent } from \"./index\";\n\nconst routes = [\n    {\n        path: \"\", redirectTo: \"summary\", pathMatch: \"full\",\n    },\n    {\n        path: \"summary\",\n        component: SummaryComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"drag-and-drop\",\n        loadChildren: () => import(\"./drag-and-drop/dnd.module\").then(m => m.DndModule),\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SummaryComponent,\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class ExternalLibrariesModule { }\n","export * from \"./summary/summary.component\";\nexport * from \"./drag-and-drop/dnd-docs/dnd-docs.example.component\";\nexport * from \"./drag-and-drop/dnd-basic/dnd-basic.example.component\";\nexport * from \"./drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component\";\n","import {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {Component} from \"@angular/core\";\n\nclass IListItem  {\n    title: string;\n    enabled: boolean;\n}\n\n@Component({\n  selector: \"dnd-drag-disabled\",\n  templateUrl: \"./dnd-drag-disabled-example.component.html\",\n  styleUrls: [\"./dnd-drag-disabled-example.component.less\"],\n})\nexport class DndDragDisabledExampleComponent {\n    public listItems: IListItem[] = [\n        {\n            title: \"Adobe\",\n            enabled: true,\n        },\n        {\n            title: \"IBM\",\n            enabled: false,\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>) {\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\n    }\n\n    public translatedStatus(enabled: boolean) {\n        return enabled ? $localize `Enabled` : $localize `Disabled`;\n    }\n}\n","<div cdkDropList class=\"draggable-container\" (cdkDropListDropped)=\"onItemDropped($event)\">\n    <div *ngFor=\"let item of listItems\"  class=\"draggable-item\"\n         cdkDrag [cdkDragDisabled]=\"!item.enabled\"\n         cdkDragPreviewClass=\"dnd-drag-preview\">\n        {{item.title}} - {{ translatedStatus(item.enabled) }}\n    </div>\n</div>\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"nui-dnd-docs\",\n  templateUrl: \"./dnd-docs.example.component.html\",\n})\nexport class DndDocsExampleComponent {\n    public initialSetupCode = `\n// our module where we want to use drag-and-drop features\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\n\n@NgModule({\n    imports: [\n        DragDropModule,\n        // other modules that we might need\n    ],\n    declarations: [ /* our module declaration */],\n    exports:      [ /* our exports */ ],\n})\nexport class MyModule {}`\n        .replace(\"\\r\\n\", \"<br/>\") // nice rendering\n    ;\n\n    public hideHandleWhileDragging = `\n.dnd-drag-preview .drag-handle {\n    display: none;\n}\n    `;\n}\n","<p>The Angular CDK drag and drop module provides a way to easily and declaratively create drag and drop interfaces.</p>\n<p>To get started, import <code>DragDropModule</code> into the <code>NgModule</code> where you want to use drag-and-drop features:</p>\n<nui-example-code language=\"typescript\">{{ initialSetupCode }}</nui-example-code>\n<p>\n    For more details on the implementation of the @angular/cdk/drag-drop, check the documentation <a href=\"https://material.angular.io/cdk/drag-drop/overview\" target=\"_blank\">here</a>\n</p>\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiDndModule</code>\n    </li>\n    <li>\n        Angular CDK's <code>DragDropModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This example shows how easy it is to create a draggable element by adding the <code>cdkDrag</code> directive on the DOM element we want to become draggable.\n    Since it can be dragged without any handle, hovering the element will alter its state to both <code>nui-dnd-raised-state</code> and <code>nui-dnd-hover-state</code>.\n</p>\n<nui-message [allowDismiss]=false type=\"info\">\n    <p>\n        In case you want to customize the styles for your draggable elements, it may be helpful to know that\n        all <code>cdkDrag</code> DOM elements have the <code>.cdk-drag</code> CSS class applied to them.\n    </p>\n</nui-message>\n\n<nui-example-wrapper filenamePrefix=\"dnd-basic\" exampleTitle=\"Drag & Drop\">\n    <dnd-basic></dnd-basic>\n</nui-example-wrapper>\n\n<h2>Drag Axis Constraints</h2>\n<p>\n    By default, <code>cdkDrag</code> allows free movement in all directions. To restrict dragging to a specific axis, you can set\n    the <code>cdkDragLockAxis</code> input on <code>cdkDrag</code> or the <code>cdkDropListLockAxis</code> input on <code>cdkDropList</code>\n    to either \"x\" or \"y\".\n</p>\n<nui-example-wrapper filenamePrefix=\"dnd-axis-constraints\" exampleTitle=\"Drag Axis Constraints\">\n    <dnd-axis-constraints></dnd-axis-constraints>\n</nui-example-wrapper>\n\n<h2>Disabled draggable items</h2>\n<p>A collection of <code>cdkDrag</code> elements are usually placed inside a <code>cdkDropList</code>.</p>\n<p>To prevent an item from being dragged set the <code>cdkDragDisabled</code> input on the <code>cdkDrag</code> element to true:</p>\n<nui-message [allowDismiss]=false type=\"info\">\n    <p>Disabled draggable DOM elements have the <code>.cdk-drag-disabled</code> CSS class appended to them.</p>\n    <p>See the styles customization applied to the disabled draggable items in the LESS source code tab in the source expander below for inspiration.</p>\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"dnd-drag-disabled\" exampleTitle=\"Disabled draggable items\">\n    <dnd-drag-disabled></dnd-drag-disabled>\n</nui-example-wrapper>\n\n<h2>Custom Drag Preview</h2>\n<p>It is possible to display custom preview content instead of cloning the original element by specifying the <code>cdkDragPreview</code> directive.</p>\n<p>The directive must be specified for each <code>cdkDrag</code> element that we want to have preview content.</p>\n<nui-message [allowDismiss]=false type=\"warning\">\n    <p>\n        <strong>Important:</strong> In order for the <code>cdkDragPreview</code> directive to work, it must\n        be wrapped inside a DOM element with the <code>cdkDropList</code> directive specified.\n    </p>\n    Take a look at the source of the following example to see how.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"dnd-drag-preview\" exampleTitle=\"Custom Drag Preview\">\n    <dnd-drag-preview></dnd-drag-preview>\n</nui-example-wrapper>\n\n<h2>Custom Drag Handle</h2>\n<p>The handle by which an element can be dragged can be customized by specifying the directive <code>cdkDragHandle</code> on the element we want to become the handle.</p>\n<nui-example-wrapper filenamePrefix=\"dnd-custom-handle\" exampleTitle=\"Custom Drag Handle\">\n    <dnd-custom-handle></dnd-custom-handle>\n</nui-example-wrapper>\n<p>\n    In the example above the handle is still displayed while dragging an element;\n    to hide the handle we just need to apply the properer styling on the cloned preview element as shown below:\n    <nui-example-code language=\"css\">{{hideHandleWhileDragging}}</nui-example-code>\n</p>\n\n<h2>Custom Placeholder</h2>\n<p>\n    While a <code>cdkDrag</code> element is being dragged, the Angular CDK will create a placeholder element that\n    will show the user where the dragged element will be placed when it's dropped.\n</p>\n<p>\n    By default the placeholder is a clone of the element that is being dragged, however you can replace it\n    with a custom one using the <code>*cdkDragPlaceholder</code> directive.\n</p>\n<nui-example-wrapper filenamePrefix=\"dnd-drag-placeholder\" exampleTitle=\"Custom Placeholder\">\n    <dnd-drag-placeholder></dnd-drag-placeholder>\n</nui-example-wrapper>\n\n<h2>Dropzones Visualization</h2>\n<p>\n    A drag container is a collection of <code>cdkDrag</code> elements within a <code>cdkDropList</code>.\n    Decorating a drag container with the <code><a href=\"../directives/DndDropTargetDirective.html\" target=\"_parent\">nuiDndDropTarget</a></code> directive defines a dropzone.\n</p>\n<nui-message [allowDismiss]=false type=\"warning\">\n    In order use multiple drag containers, both sources and destinations must be wrapped within a <code>cdkDropListGroup</code> directive.\n</nui-message>\n<p>\n    Once the user starts dragging an item from the source, the destination is highlighted as an available destination dropzone;\n    the <code>nui-dnd-dropzone--active</code> CSS class is added to the dropzone once dragging starts.\n    The destination uses the <code>nuiDndDropTarget</code> directive helper in order to inform the user visually\n    whether a dropzone will accept or reject a dragged item. In the following example, all items are accepted\n    except for <em>IBM</em>;\n</p>\n<nui-message [allowDismiss]=false type=\"info\">\n    The following CSS classes are added to the dropzone once the conditions are met as described below:\n    <ul>\n        <li>- <code>nui-dnd-dropzone--active</code> - once dragging starts</li>\n        <li>- <code>nui-dnd-dropzone--drop-allowed</code> - once the user is over the dropzone and the dragged item is accepted</li>\n        <li>- <code>nui-dnd-dropzone--drop-not-allowed</code> - once the user is over the dropzone and the dragged item is NOT accepted</li>\n    </ul>\n</nui-message>\n<p>\n    To define acceptance conditions for a dropzone, the user can provide a callback method to the <code>canBeDropped</code>\n    input.\n</p>\n<nui-example-wrapper filenamePrefix=\"dnd-dropzone\" exampleTitle=\"Dropzones\">\n    <dnd-dropzone></dnd-dropzone>\n</nui-example-wrapper>\n","import {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport { Component} from \"@angular/core\";\n\nclass IListItem {\n    title: string;\n    enabled?: boolean;\n    hasHandle?: boolean;\n}\n\n@Component({\n  selector: \"dnd-custom-handle\",\n  templateUrl: \"./dnd-custom-handle.example.component.html\",\n  styleUrls: [\"./dnd-custom-handle.example.component.less\"],\n})\nexport class DndCustomHandleExampleComponent {\n    public mousedOver: boolean[] = [];\n    public listItems: IListItem[] = [\n        {\n            title: \"I can only be dragged using the handle\",\n            enabled: true,\n            hasHandle: true,\n        },\n        {\n            title: \" I can be dragged without any handle\",\n            enabled: true,\n            hasHandle: false,\n        },\n        {\n            title: \"Disabled item CAN'T be dragged\",\n            enabled: false,\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>) {\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\n    }\n}\n","<!-- list of draggable items  -->\n<div cdkDropList class=\"draggable-container\" (cdkDropListDropped)=\"onItemDropped($event)\">\n    <ng-container *ngFor=\"let item of listItems; let i=index\">\n        <div cdkDrag\n             cdkDragPreviewClass=\"dnd-drag-preview\"\n             [cdkDragDisabled]=\"!item.enabled\"\n             class=\"draggable-item\"\n             [ngClass] = \"{\n                'with-handle': item.hasHandle,\n                'nui-dnd-raised-state': item.withHandle && mousedOver[i]\n            }\">\n\n            <!-- raised state style is applied ONLY when the mouse is over the handle -->\n            <div *ngIf=\"item.withHandle\" cdkDragHandle class=\"drag-handle\" (mouseover)=\"mousedOver[i]=true\" (mouseout)=\"mousedOver[i]=false\">\n                <nui-icon icon=\"drag\"></nui-icon>\n            </div>\n            {{item.title}}\n        </div>\n    </ng-container>\n</div>\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"dnd-axis-constraints\",\n  templateUrl: \"./dnd-axis-constraints.example.component.html\",\n  styleUrls: [\"./dnd-axis-constraints.example.component.less\"],\n})\nexport class DndAxisConstraintsExampleComponent {\n}\n\n","<div class=\"draggable-item mr-5\" cdkDragLockAxis=\"y\" cdkDrag>\n    I can only be dragged up/down\n</div>\n<div class=\"draggable-item mr-5\" cdkDragLockAxis=\"x\" cdkDrag>\n    I can only be dragged left/right\n</div>\n","import {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {Component} from \"@angular/core\";\nimport {IRepeatItem} from \"@nova-ui/bits\";\n\ninterface IListItem extends IRepeatItem {\n    title: string;\n    preview: string;\n}\n\n@Component({\n  selector: \"dnd-drag-preview\",\n  templateUrl: \"./dnd-drag-preview.example.component.html\",\n  styleUrls: [\"./dnd-drag-preview.example.component.less\"],\n})\nexport class DndDragPreviewExampleComponent {\n    public listItems: IListItem[] = [\n        {\n            title: \"Adobe\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png\",\n        },\n        {\n            title: \"IBM\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png\",\n        },\n        {\n            title: \"Dell\",\n            preview: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\",\n        },\n    ];\n\n    public onItemDropped(event: CdkDragDrop<IListItem[]>) {\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\n    }\n}\n","<div cdkDropList class=\"draggable-container\" (cdkDropListDropped)=\"onItemDropped($event)\">\n    <div cdkDrag cdkDragPreviewClass=\"dnd-drag-preview\" class=\"draggable-item\" *ngFor=\"let item of listItems\">\n        {{item.title}}\n        <div *cdkDragPreview>\n            <p>This is the preview for {{item.title}}</p>\n            <img align=\"middle\" width=\"100\" [src]=\"item.preview\" [alt]=\"item.title\">\n        </div>\n    </div>\n</div>\n","import {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {Component} from \"@angular/core\";\nimport {IRepeatItem} from \"@nova-ui/bits\";\n\n@Component({\n  selector: \"dnd-drag-placeholder\",\n  templateUrl: \"./dnd-drag-placeholder-example.component.html\",\n  styleUrls: [\"./dnd-drag-placeholder-example.component.less\"],\n})\nexport class DndDragPlaceholderExampleComponent {\n    public listItems: string[] = [\"Adobe\", \"IBM\", \"Dell\" ];\n\n    public onItemDropped(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\n    }\n}\n","<div cdkDropList class=\"draggable-container\" (cdkDropListDropped)=\"onItemDropped($event)\">\n    <div cdkDrag cdkDragPreviewClass=\"dnd-drag-preview\" class=\"draggable-item\" *ngFor=\"let item of listItems\">\n        {{item}}\n        <div class=\"draggable-placeholder\" *cdkDragPlaceholder i18n>\n            Placeholder\n        </div>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}