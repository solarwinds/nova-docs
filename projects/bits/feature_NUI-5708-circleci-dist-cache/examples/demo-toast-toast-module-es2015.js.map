{"version":3,"sources":["webpack:///./demo/src/components/demo/toast/toast-events/toast-events.example.component.html?f924","webpack:///./demo/src/components/demo/toast/toast-type/toast-type.example.component.ts?fda1","webpack:///./demo/src/components/demo/toast/toast-docs/toast-docs.example.component.html?d3ff","webpack:///./demo/src/components/demo/toast/toast-position/toast-position.example.component.ts?d45a","webpack:///./demo/src/components/demo/toast/toast-sticky-error/toast-sticky-error.example.component.html?df64","./demo/src/components/demo/toast/toast-basic/toast-basic.example.component.ts","./demo/src/components/demo/toast/toast-basic/toast-basic.example.component.html","webpack:///./demo/src/components/demo/toast/toast-visual-test/toast-visual-test.component.html?09fa","webpack:///./demo/src/components/demo/toast/toast-basic/toast-basic.example.component.html?0f2f","webpack:///./demo/src/components/demo/toast/toast-config/toast-config.example.component.ts?17e4","webpack:///./demo/src/components/demo/toast/toast-test/toast-test.component.html?178e","./demo/src/components/demo/toast/toast-events/toast-events.example.component.ts","./demo/src/components/demo/toast/toast-events/toast-events.example.component.html","webpack:///./demo/src/components/demo/toast/toast.module.ts?1a33","webpack:///./demo/src/components/demo/toast/toast-type/toast-type.example.component.html?2692","webpack:///./demo/src/components/demo/toast/index.ts?2fdc","./demo/src/components/demo/toast/toast-position/toast-position.example.component.ts","./demo/src/components/demo/toast/toast-position/toast-position.example.component.html","webpack:///./demo/src/components/demo/toast/toast-events/toast-events.example.component.ts?41f9","./demo/src/components/demo/toast/toast-sticky-error/toast-sticky-error.example.component.ts","./demo/src/components/demo/toast/toast-sticky-error/toast-sticky-error.example.component.html","webpack:///./demo/src/components/demo/toast/toast-visual-test/toast-visual-test.component.ts?4e49","./demo/src/components/demo/toast/toast-type/toast-type.example.component.ts","./demo/src/components/demo/toast/toast-type/toast-type.example.component.html","webpack:///./demo/src/components/demo/toast/toast-config/toast-config.example.component.html?582c","./demo/src/components/demo/toast/toast-test/toast-test.component.ts","./demo/src/components/demo/toast/toast-test/toast-test.component.html","webpack:///./demo/src/components/demo/toast/toast-sticky-error/toast-sticky-error.example.component.ts?688f","./demo/src/components/demo/toast/index.ts","./demo/src/components/demo/toast/toast.module.ts","webpack:///./demo/src/components/demo/toast/toast-basic/toast-basic.example.component.ts?7af6","webpack:///./demo/src/components/demo/toast/toast-basic-html/toast-basic-html.example.component.ts?88c7","./demo/src/components/demo/toast/toast-visual-test/toast-visual-test.component.ts","./demo/src/components/demo/toast/toast-visual-test/toast-visual-test.component.html","webpack:///./demo/src/components/demo/toast/toast-test/toast-test.component.ts?8ad8","webpack:///./demo/src/components/demo/toast/toast-docs/toast-docs.example.component.ts?8b15","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?65b5","webpack:///./demo/src/components/demo/toast/toast-basic-html/toast-basic-html.example.component.html?9553","webpack:///./demo/src/components/demo/toast/toast-position/toast-position.example.component.html?a393","./demo/src/components/demo/toast/toast-basic-html/toast-basic-html.example.component.ts","./demo/src/components/demo/toast/toast-basic-html/toast-basic-html.example.component.html","./demo/src/components/demo/toast/toast-config/toast-config.example.component.ts","./demo/src/components/demo/toast/toast-config/toast-config.example.component.html","./demo/src/components/demo/toast/toast-docs/toast-docs.example.component.ts","./demo/src/components/demo/toast/toast-docs/toast-docs.example.component.html"],"names":[],"mappings":"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","file":"demo-toast-toast-module-es2015.js","sourcesContent":["export default \"<div *ngIf=\\\"isDisplayed; else notoast\\\">\\n    <nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n        <div i18n>ID of last toast shown: {{lastShown}}</div>\\n    </nui-message>\\n    <nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n        <div id=\\\"toast-example-click-counter\\\" i18n>Clicks on toast: {{clickCount}}</div>\\n    </nui-message>\\n</div>\\n<ng-template #notoast><nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\" i18n>No toast displayed</nui-message></ng-template>\\n<nui-divider></nui-divider>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-toast-events-example\\\" (click)=\\\"onShowToast($event)\\\" i18n>Show Toast</button>\\n\";","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastService, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-type-example\\\",\\n    templateUrl: \\\"./toast-type.example.component.html\\\",\\n})\\nexport class ToastTypeExampleComponent implements OnInit {\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public onShowInfo(highlightMode: boolean): void {\\n        this.toastService.info({\\n            title: $localize `Info`,\\n            message: $localize `E pluribus unum (/ˈiː ˈplʊərɪbəs ˈjuːnəm/; Latin: [ˈeː ˈpluːrɪbʊs ˈuːnũː]) is Latin for 'Out of many, one'`,\\n            options: this.getOptions(),\\n        });\\n    }\\n\\n    public onShowSuccess(highlightMode: boolean): void {\\n        this.toastService.success({\\n            title: $localize `Success`,\\n            message: $localize `Well done!`,\\n            options:  this.getOptions(),\\n        });\\n    }\\n\\n    public onShowWarning(highlightMode: boolean): void {\\n        this.toastService.warning({\\n            title: $localize `Warning`,\\n            message: $localize `There can be only one.`,\\n            options:  this.getOptions(),\\n        });\\n    }\\n\\n    public onShowError(highlightMode: boolean): void {\\n        this.toastService.error({\\n            title: $localize `Error`,\\n            message: $localize `Nope.`,\\n            options:  this.getOptions(),\\n        });\\n    }\\n\\n    public clear(): void {\\n        this.toastService.clear();\\n    }\\n\\n    private getOptions(): IToastConfig {\\n        return {\\n            timeOut: 3000,\\n            extendedTimeOut: 1000,\\n        };\\n    }\\n}\\n\";","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiToastModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<div>\\n    You can use <code>IToastService</code>, <code>ToastService</code> to show a (usually) temporary message (toast),\\n    associated with some event. In example below we're showing a toast message when the \\\"Show Toast\\\" button is clicked.\\n    Following construction is used to create a toast:\\n    <code>IToastService.info(toastDeclaration: <a href=\\\"../interfaces/IToastDeclaration.html\\\">IToastDeclaration</a>)</code>.\\n    Any property in <a href=\\\"../interfaces/IToastDeclaration.html\\\"><code>IToastDeclaration</code></a> is optional.\\n</div>\\n<p>\\n    When using the toast component with a title, a space is automatically inserted in front of the message body to create spacial separation from the title.\\n    In addition to the provided space, it's suggested that the user add a sentence-ending punctuation mark to the title to further emphasize this separation.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"toast-basic\\\" exampleTitle=\\\"Basic usage\\\">\\n    <nui-toast-basic-example></nui-toast-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Basic Usage With Html</h2>\\n<p>\\n    Toast allows HTML usage inside the <code>{{getToastDeclarationKey(\\\"message\\\")}}</code> container by\\n    default. Note: The provided value will be sanitized and rendered.\\n</p>\\n<p>\\n    To configure a toast to display HTML as plain text, set the\\n    <code>{{getToastConfigKey(\\\"enableHtml\\\")}}</code> property in\\n    <code>{{getToastDeclarationKey(\\\"options\\\")}}</code> to <code>false</code>.\\n</p>\\n<p>\\n    When the <code>{{getToastConfigKey(\\\"enableHtml\\\")}}</code> flag is turned on, all the content will be\\n    sanitized, basic tags for changing fonts are often allowed, such as <code>&lt;b&gt;</code>, \\n    <code>&lt;i&gt;</code>, <code>&lt;u&gt;</code>, <code>&lt;em&gt;</code>, and \\n    <code>&lt;strong&gt;</code>. More advanced tags such as <code>&lt;script&gt;</code>,\\n    <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>, and <code>&lt;link&gt;</code> are removed by\\n    the sanitization process. Additionally, potentially dangerous attributes such as\\n    <code>onclick</code> are removed in order to prevent malicious code from being injected.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"toast-basic-html\\\" exampleTitle=\\\"Basic HTML Usage\\\">\\n    <nui-toast-basic-html-example></nui-toast-basic-html-example>\\n</nui-example-wrapper>\\n\\n<h2>Types</h2>\\n<p>\\n    Toast types allows you to convey some contextual information about the message by applying different styles to toasts.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"toast-type\\\" exampleTitle=\\\"Types\\\">\\n    <nui-toast-type-example></nui-toast-type-example>\\n</nui-example-wrapper>\\n\\n<h2>Configuration</h2>\\n<p>\\n    Toast messages are highly configurable via <a href=\\\"../interfaces/IToastConfig.html\\\">IToastConfig</a> interface.\\n    The following example employs some of the more common settings:\\n    <br/>\\n    <code>\\n        extendedTimeOut: 2000,\\n        clickToDismiss: true,\\n        closeButton: true,\\n        positionClass: \\\"toast-bottom-right\\\",\\n        progressBar: true,\\n        progressAnimation: \\\"increasing\\\",\\n        timeOut: 5000\\n    </code>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"toast-config\\\" exampleTitle=\\\"Configuration\\\">\\n    <nui-toast-config-example></nui-toast-config-example>\\n</nui-example-wrapper>\\n\\n<h2>Positioning</h2>\\n<p>\\n    The position of a toast message is determined by the value of <code>IToastConfig.positionClass</code>.\\n    By default toast is positioned top-right. To implement different positioning you must pass one of available\\n    options from <a href=\\\"../miscellaneous/enumerations.html#ToastPositionClass\\\"><code>ToastPositionClass</code></a>\\n    to <a href=\\\"../interfaces/IToastConfig.html\\\"><code>IToastConfig</code></a> positionClass property.<br /><br />\\n\\n    It is also possible to set a custom class to configure the position of the <code>nui-toast</code>.  Simply populate\\n    the <code>IToastConfig.positionClass</code> with the custom css class name.\\n\\n    <nui-message type=\\\"warning\\\" [allowDismiss]=\\\"false\\\">\\n        Make sure you defined a custom class in a global stylesheet\\n    </nui-message>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"toast-position\\\" exampleTitle=\\\"Positioning\\\">\\n    <nui-toast-position-example></nui-toast-position-example>\\n</nui-example-wrapper>\\n\\n<h2>Sticky Error</h2>\\n<p>\\n    You can also optionally force error toasts to remain visible indefinitely using <code>IToastConfig.stickyError</code>.\\n    Note, that this option is only available with <code>IToastService.error</code>.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"toast-sticky-error\\\" exampleTitle=\\\"Sticky error\\\">\\n    <nui-toast-sticky-error-example></nui-toast-sticky-error-example>\\n</nui-example-wrapper>\\n\\n<h2>Events</h2>\\n<p>\\n    With <a href=\\\"../interfaces/IActiveToast.html\\\">IActiveToast</a>, it's possible to\\n    capture (and act upon) following events per toast instance:\\n</p>\\n<ul>\\n    <li><code>onShown</code></li>\\n    <li><code>onHidden</code></li>\\n    <li><code>onClick</code></li>\\n</ul>\\n<nui-example-wrapper filenamePrefix=\\\"toast-events\\\" exampleTitle=\\\"Events\\\">\\n    <nui-toast-events-example></nui-toast-events-example>\\n</nui-example-wrapper>\\n\";","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-position-example\\\",\\n    templateUrl: \\\"./toast-position.example.component.html\\\",\\n})\\nexport class ToastPositionExampleComponent implements OnInit {\\n    public toastPositions = [\\n        {\\n            displayValue: $localize `Top Right`,\\n            className: ToastPositionClass.TOP_RIGHT,\\n        },\\n        {\\n            displayValue: $localize `Top Left`,\\n            className: ToastPositionClass.TOP_LEFT,\\n        },\\n        {\\n            displayValue: $localize `Bottom Right`,\\n            className: ToastPositionClass.BOTTOM_RIGHT,\\n        },\\n        {\\n            displayValue: $localize `Bottom Left`,\\n            className: ToastPositionClass.BOTTOM_LEFT,\\n        },\\n        {\\n            displayValue: $localize `Top Full Width`,\\n            className: ToastPositionClass.TOP_FULL_WIDTH,\\n        },\\n        {\\n            displayValue: $localize `Bottom Full Width`,\\n            className: ToastPositionClass.BOTTOM_FULL_WIDTH,\\n        },\\n        {\\n            displayValue: $localize `Top Center`,\\n            className: ToastPositionClass.TOP_CENTER,\\n        },\\n        {\\n            displayValue: $localize `Bottom Center`,\\n            className: ToastPositionClass.BOTTOM_CENTER,\\n        },\\n        {\\n            displayValue: $localize `CUSTOM CLASS (top: 200px; right: 200px)`,\\n            className: \\\"demoToastCustomClass\\\",\\n        },\\n    ];\\n    public selectedPosition: ToastPositionClass | string = this.toastPositions[0].className;\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public onShowToast(highlightMode: boolean): void {\\n        this.toastService.info({\\n            title: $localize `Position Example`,\\n            message: this.selectedPosition,\\n            options: this.getOptions(),\\n        });\\n    }\\n\\n    private getOptions(): IToastConfig {\\n        return {\\n            timeOut: 5000,\\n            extendedTimeOut: 2000,\\n            positionClass: this.selectedPosition,\\n        };\\n    }\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\" id=\\\"nui-show-sticky-error-toast-example\\\" (click)=\\\"onShowStickyError($event)\\\" i18n>Show Sticky Error</button>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-hide-sticky-error-toast-example\\\" (click)=\\\"onHideStickyError($event)\\\" i18n>Hide Sticky Error</button>\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastConfig, IToastService, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-basic-example\",\n    templateUrl: \"./toast-basic.example.component.html\",\n})\nexport class ToastBasicExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Simple Toast.`,\n            message: $localize `Hi there! I'm a simple toast message`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n        };\n    }\n}\n","<button nui-button type=\"button\" id=\"nui-basic-toast-example\" (click)=\"onShowToast($event)\" i18n>Show Toast</button>\n","export default \"<div class=\\\"container pt-5\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Basic Toast Positioned defferently</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-start\\\" id=\\\"nui-toast-positions\\\">\\n                <button id=\\\"nui-toast-button-all-positions\\\" (click)=\\\"showToastsAllPositions($event, 200000)\\\">Trigger all positions</button>\\n            </div>\\n            <div class=\\\"d-flex justify-content-start\\\" id=\\\"nui-toast-fw\\\">\\n                <button id=\\\"nui-toast-position-fw\\\" (click)=\\\"showToastsFullWidth($event, 10000)\\\">Full Width</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Basic Toast Positioned defferently</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-start\\\">\\n                <button id=\\\"nui-toast-clear-all-toasts\\\" (click)=\\\"clearToast($event)\\\">Clear All Toasts</button>\\n                <button id=\\\"nui-toast-sticky\\\" (click)=\\\"callStickyToast($event)\\\">Call Sticky Error!</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Toast messages adjust size</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-start\\\" id=\\\"nui-toast-buttons-chain\\\">\\n                <button id=\\\"nui-toast-adjust-size\\\" (click)=\\\"showToastsAdjustSize($event, 10000)\\\">Trigger all toast messages</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Toast messages with no header</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-start\\\" id=\\\"nui-toast-buttons-chain-no-header\\\">\\n                <button id=\\\"nui-toast-no-header\\\" (click)=\\\"showToastsNoHeader($event, 10000)\\\">Trigger all toast messages</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Toast messages with progress bar</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-start\\\" id=\\\"nui-toast-positions\\\">\\n                <button id=\\\"nui-toast-button-all-positions-progress-bar\\\" (click)=\\\"showToastsAllPositions($event, 300000, true)\\\">Trigger all positions</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<button nui-button type=\\\"button\\\" id=\\\"nui-basic-toast-example\\\" (click)=\\\"onShowToast($event)\\\" i18n>Show Toast</button>\\n\";","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-config-example\\\",\\n    templateUrl: \\\"./toast-config.example.component.html\\\",\\n})\\nexport class ToastConfigExampleComponent implements OnInit {\\n    public selectedPosition: string;\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public onShowToast(highlightMode: boolean): void {\\n        this.toastService.info({\\n            title: $localize `Toast Configuration`,\\n            message: $localize `I'm pretty easy to configure`,\\n            options: this.getOptions(),\\n        });\\n    }\\n\\n    private getOptions(): IToastConfig {\\n        return {\\n            extendedTimeOut: 2000,\\n            clickToDismiss: true,\\n            closeButton: true,\\n            positionClass: ToastPositionClass.BOTTOM_RIGHT,\\n            progressBar: true,\\n            progressAnimation: \\\"increasing\\\",\\n            timeOut: 5000,\\n        };\\n    }\\n}\\n\";","export default \"<div id=\\\"nui-toast-test\\\" class=\\\"container\\\">\\n    <div class=\\\"py-2\\\">\\n        <h3>Page settings</h3>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtCount\\\"> Number of toasts to show: </label>\\n            <input type=\\\"number\\\" id=\\\"txtCount\\\" [(ngModel)]=\\\"count\\\">\\n        </div>\\n\\n        <label class=\\\"px-3 w-25\\\"> Toast type </label>\\n        <input id=\\\"radioError\\\" type=\\\"radio\\\" name=\\\"type\\\" value=\\\"error\\\" [(ngModel)]=\\\"type\\\">\\n        <label for=\\\"radioError\\\" class=\\\"px-3\\\"> error </label>\\n        <input id=\\\"radioInfo\\\" type=\\\"radio\\\" name=\\\"type\\\" value=\\\"info\\\" [(ngModel)]=\\\"type\\\">\\n        <label for=\\\"radioInfo\\\" class=\\\"px-3\\\"> info </label>\\n        <input id=\\\"radioSuccess\\\" type=\\\"radio\\\" name=\\\"type\\\" value=\\\"success\\\" [(ngModel)]=\\\"type\\\">\\n        <label for=\\\"radioSuccess\\\" class=\\\"px-3\\\"> success </label>\\n        <input id=\\\"radioWarning\\\" type=\\\"radio\\\" name=\\\"type\\\" value=\\\"warning\\\" [(ngModel)]=\\\"type\\\">\\n        <label for=\\\"radioWarning\\\" class=\\\"px-3\\\"> warning </label>\\n    </div>\\n\\n    <div class=\\\"py-2\\\">\\n        <h3>Toast Configuration</h3>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtMessage\\\"> message </label>\\n            <input type=\\\"text\\\" id=\\\"txtMessage\\\" [(ngModel)]=\\\"toast.message\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtTitle\\\"> title </label>\\n            <input type=\\\"text\\\" id=\\\"txtTitle\\\" [(ngModel)]=\\\"toast.title\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"py-2\\\">\\n        <h3>Options</h3>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtTimeOut\\\"> timeOut </label>\\n            <input type=\\\"text\\\" id=\\\"txtTimeOut\\\" [(ngModel)]=\\\"toast.options.timeOut\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtExtendedTimeOut\\\"> extendedTimeOut </label>\\n            <input type=\\\"text\\\" id=\\\"txtExtendedTimeOut\\\" [(ngModel)]=\\\"toast.options.extendedTimeOut\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbCloseButton\\\">closeButton</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbCloseButton\\\" [(ngModel)]=\\\"toast.options.closeButton\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbProgressBar\\\">progressBar</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbProgressBar\\\" [(ngModel)]=\\\"toast.options.progressBar\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\">progressAnimation</label>\\n            <input id=\\\"radioIncreasing\\\" type=\\\"radio\\\" name=\\\"progressAnimation\\\" value=\\\"increasing\\\"\\n                [(ngModel)]=\\\"toast.options.progressAnimation\\\">\\n            <label for=\\\"radioIncreasing\\\" class=\\\"px-3\\\"> increasing </label>\\n            <input id=\\\"radioDecreasing\\\" type=\\\"radio\\\" name=\\\"progressAnimation\\\" value=\\\"decreasing\\\"\\n                [(ngModel)]=\\\"toast.options.progressAnimation\\\">\\n            <label for=\\\"radioDecreasing\\\" class=\\\"px-3\\\"> decreasing </label>\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbEnableHtml\\\">enableHtml</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbEnableHtml\\\" [(ngModel)]=\\\"toast.options.enableHtml\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtToastClass\\\">toastClass</label>\\n            <input type=\\\"text\\\" id=\\\"txtToastClass\\\" [(ngModel)]=\\\"toast.options.toastClass\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\">positionClass</label>\\n            <span class=\\\"d-inline-block\\\" style=\\\"vertical-align: middle;\\\">\\n                <input id=\\\"radioTopCenter\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--top-center\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioTopCenter\\\" class=\\\"px-3\\\"> TOP_CENTER </label>\\n                <input id=\\\"radioTopLeft\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--top-left\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioTopLeft\\\" class=\\\"px-3\\\"> TOP_LEFT </label>\\n                <input id=\\\"radioTopRight\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--top-right\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioTopRight\\\" class=\\\"px-3\\\"> TOP_RIGHT </label>\\n                <input id=\\\"radioTopFullWidth\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--top-full-width\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioTopFullWidth\\\" class=\\\"px-3\\\"> TOP_FULL_WIDTH </label>\\n                <br>\\n                <input id=\\\"radioBottomCenter\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--bottom-center\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioBottomCenter\\\" class=\\\"px-3\\\"> BOTTOM_CENTER </label>\\n                <input id=\\\"radioBottomLeft\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--bottom-left\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioBottomLeft\\\" class=\\\"px-3\\\"> BOTTOM_LEFT </label>\\n                <input id=\\\"radioBottomRight\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--bottom-right\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioBottomRight\\\" class=\\\"px-3\\\"> BOTTOM_RIGHT </label>\\n                <input id=\\\"radioBottomFullWidth\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"nui-toast--bottom-full-width\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioBottomFullWidth\\\" class=\\\"px-3\\\"> BOTTOM_FULL_WIDTH </label>\\n                <input id=\\\"radioCustomClass\\\" type=\\\"radio\\\" name=\\\"positionClass\\\" value=\\\"demoToastCustomClass\\\"\\n                    [(ngModel)]=\\\"toast.options.positionClass\\\">\\n                <label for=\\\"radioCustomClass\\\" class=\\\"px-3\\\"> CUSTOM_CLASS </label>\\n            </span>\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbClickToDismiss\\\">clickToDismiss</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbClickToDismiss\\\" [(ngModel)]=\\\"toast.options.clickToDismiss\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbStickyError\\\">stickyError</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbStickyError\\\" [(ngModel)]=\\\"toast.options.stickyError\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"txtMaxOpened\\\">maxOpened</label>\\n            <input type=\\\"number\\\" id=\\\"txtMaxOpened\\\" [(ngModel)]=\\\"toast.options.maxOpened\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbAutoDismiss\\\">autoDismiss</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbAutoDismiss\\\" [(ngModel)]=\\\"toast.options.autoDismiss\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbNewestOnTop\\\">newestOnTop</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbNewestOnTop\\\" [(ngModel)]=\\\"toast.options.newestOnTop\\\">\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 w-25\\\" for=\\\"chbPreventDuplicates\\\">preventDuplicates</label>\\n            <input type=\\\"checkbox\\\" id=\\\"chbPreventDuplicates\\\" [(ngModel)]=\\\"toast.options.preventDuplicates\\\">\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"p-5\\\" style=\\\"text-align: center\\\">\\n        <button class=\\\"px-5\\\" id=\\\"btnFire\\\" (click)=\\\"fireToast()\\\">Fire Toast(s)!</button>\\n        <button class=\\\"px-3 ml-3\\\" id=\\\"btnReset\\\" (click)=\\\"reset()\\\">Reset form</button>\\n    </div>\\n</div>\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IActiveToast, IToastConfig, IToastService, ToastPositionClass, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-events-example\",\n    templateUrl: \"./toast-events.example.component.html\",\n})\n\nexport class ToastEventsExampleComponent implements OnInit {\n    public lastShown?: number;\n    public clickCount = 0;\n    public toastCount = 0;\n    public isDisplayed: boolean;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        const toastInstance: IActiveToast = this.toastService.info({\n            title: $localize `Toast Events`,\n            message: $localize `Click Me!`,\n            options: this.getOptions(),\n        });\n        toastInstance.onShown?.subscribe(() => {\n            ++this.toastCount;\n            this.isDisplayed = true;\n            this.lastShown = toastInstance.toastId;\n        });\n\n        toastInstance.onClick?.subscribe(() => {\n            ++this.clickCount;\n        });\n\n        toastInstance.onHidden?.subscribe(() => {\n            --this.toastCount;\n            this.isDisplayed = this.toastCount > 0;\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 5000,\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            progressBar: true,\n            progressAnimation: \"increasing\",\n            timeOut: 10000,\n        };\n    }\n}\n","<div *ngIf=\"isDisplayed; else notoast\">\n    <nui-message type=\"info\" [allowDismiss]=\"false\">\n        <div i18n>ID of last toast shown: {{lastShown}}</div>\n    </nui-message>\n    <nui-message type=\"info\" [allowDismiss]=\"false\">\n        <div id=\"toast-example-click-counter\" i18n>Clicks on toast: {{clickCount}}</div>\n    </nui-message>\n</div>\n<ng-template #notoast><nui-message type=\"info\" [allowDismiss]=\"false\" i18n>No toast displayed</nui-message></ng-template>\n<nui-divider></nui-divider>\n<button nui-button type=\"button\" id=\"nui-toast-events-example\" (click)=\"onShowToast($event)\" i18n>Show Toast</button>\n","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiDividerModule,\\n    NuiDocsModule,\\n    NuiMessageModule,\\n    NuiRadioModule,\\n    NuiToastModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    ToastBasicExampleComponent,\\n    ToastConfigExampleComponent,\\n    ToastEventsExampleComponent,\\n    ToastExampleComponent,\\n    ToastPositionExampleComponent,\\n    ToastStickyErrorExampleComponent,\\n    ToastTestComponent,\\n    ToastTypeExampleComponent,\\n    ToastVisualTestComponent,\\n} from \\\"./index\\\";\\nimport { ToastBasicHtmlExampleComponent } from \\\"./toast-basic-html/toast-basic-html.example.component\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: ToastExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"toast-visual-test\\\",\\n        component: ToastVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"test\\\",\\n        component: ToastTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiToastModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        NuiMessageModule,\\n        NuiRadioModule,\\n        NuiDividerModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        ToastBasicExampleComponent,\\n        ToastBasicHtmlExampleComponent,\\n        ToastConfigExampleComponent,\\n        ToastEventsExampleComponent,\\n        ToastExampleComponent,\\n        ToastPositionExampleComponent,\\n        ToastStickyErrorExampleComponent,\\n        ToastTestComponent,\\n        ToastTypeExampleComponent,\\n        ToastVisualTestComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class ToastModule {\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\" id=\\\"nui-info-toast\\\" (click)=\\\"onShowInfo($event)\\\" i18n>Info</button>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-success-toast\\\" (click)=\\\"onShowSuccess($event)\\\" i18n>Success</button>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-warning-toast\\\" (click)=\\\"onShowWarning($event)\\\" i18n>Warning</button>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-error-toast\\\" (click)=\\\"onShowError($event)\\\" i18n>Error</button>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-hide-all-toasts\\\" (click)=\\\"clear()\\\" i18n>Hide Toasts</button>\\n\";","export default \"export * from \\\"./toast-basic/toast-basic.example.component\\\";\\nexport * from \\\"./toast-sticky-error/toast-sticky-error.example.component\\\";\\nexport * from \\\"./toast-config/toast-config.example.component\\\";\\nexport * from \\\"./toast-docs/toast-docs.example.component\\\";\\nexport * from \\\"./toast-events/toast-events.example.component\\\";\\nexport * from \\\"./toast-position/toast-position.example.component\\\";\\nexport * from \\\"./toast-type/toast-type.example.component\\\";\\nexport * from \\\"./toast-visual-test/toast-visual-test.component\\\";\\nexport * from \\\"./toast-test/toast-test.component\\\";\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-position-example\",\n    templateUrl: \"./toast-position.example.component.html\",\n})\nexport class ToastPositionExampleComponent implements OnInit {\n    public toastPositions = [\n        {\n            displayValue: $localize `Top Right`,\n            className: ToastPositionClass.TOP_RIGHT,\n        },\n        {\n            displayValue: $localize `Top Left`,\n            className: ToastPositionClass.TOP_LEFT,\n        },\n        {\n            displayValue: $localize `Bottom Right`,\n            className: ToastPositionClass.BOTTOM_RIGHT,\n        },\n        {\n            displayValue: $localize `Bottom Left`,\n            className: ToastPositionClass.BOTTOM_LEFT,\n        },\n        {\n            displayValue: $localize `Top Full Width`,\n            className: ToastPositionClass.TOP_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize `Bottom Full Width`,\n            className: ToastPositionClass.BOTTOM_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize `Top Center`,\n            className: ToastPositionClass.TOP_CENTER,\n        },\n        {\n            displayValue: $localize `Bottom Center`,\n            className: ToastPositionClass.BOTTOM_CENTER,\n        },\n        {\n            displayValue: $localize `CUSTOM CLASS (top: 200px; right: 200px)`,\n            className: \"demoToastCustomClass\",\n        },\n    ];\n    public selectedPosition: ToastPositionClass | string = this.toastPositions[0].className;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Position Example`,\n            message: this.selectedPosition,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            positionClass: this.selectedPosition,\n        };\n    }\n}\n","<div class=\"nui-flex-container\">\n    <div>\n        <nui-radio-group [(value)]=\"selectedPosition\">\n            <nui-radio *ngFor=\"let position of toastPositions\"\n                        id=\"{{'nui-toast-position-'+position.className}}\"\n                        [checked]=\"position.className === 'nui-toast--top-right'\"\n                        [value]=\"position.className\">\n                {{position.displayValue}}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n</div>\n<button nui-button type=\"button\" id=\"nui-toast-position-example\" (click)=\"onShowToast($event)\" i18n>Show Toast</button>\n","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IActiveToast, IToastConfig, IToastService, ToastPositionClass, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-events-example\\\",\\n    templateUrl: \\\"./toast-events.example.component.html\\\",\\n})\\n\\nexport class ToastEventsExampleComponent implements OnInit {\\n    public lastShown?: number;\\n    public clickCount = 0;\\n    public toastCount = 0;\\n    public isDisplayed: boolean;\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public onShowToast(highlightMode: boolean): void {\\n        const toastInstance: IActiveToast = this.toastService.info({\\n            title: $localize `Toast Events`,\\n            message: $localize `Click Me!`,\\n            options: this.getOptions(),\\n        });\\n        toastInstance.onShown?.subscribe(() => {\\n            ++this.toastCount;\\n            this.isDisplayed = true;\\n            this.lastShown = toastInstance.toastId;\\n        });\\n\\n        toastInstance.onClick?.subscribe(() => {\\n            ++this.clickCount;\\n        });\\n\\n        toastInstance.onHidden?.subscribe(() => {\\n            --this.toastCount;\\n            this.isDisplayed = this.toastCount > 0;\\n        });\\n    }\\n\\n    private getOptions(): IToastConfig {\\n        return {\\n            extendedTimeOut: 5000,\\n            clickToDismiss: false,\\n            closeButton: false,\\n            positionClass: ToastPositionClass.TOP_RIGHT,\\n            progressBar: true,\\n            progressAnimation: \\\"increasing\\\",\\n            timeOut: 10000,\\n        };\\n    }\\n}\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-sticky-error-example\",\n    templateUrl: \"./toast-sticky-error.example.component.html\",\n})\nexport class ToastStickyErrorExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public onShowStickyError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize `Sticky Error`,\n            message: $localize `Red Alert`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onHideStickyError(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            stickyError: true,\n        };\n    }\n}\n","<button nui-button type=\"button\" id=\"nui-show-sticky-error-toast-example\" (click)=\"onShowStickyError($event)\" i18n>Show Sticky Error</button>\n<button nui-button type=\"button\" id=\"nui-hide-sticky-error-toast-example\" (click)=\"onHideStickyError($event)\" i18n>Hide Sticky Error</button>\n","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-visual\\\",\\n    templateUrl: \\\"./toast-visual-test.component.html\\\",\\n})\\nexport class ToastVisualTestComponent implements OnInit {\\n\\n    private errorMessage: string = `Something went wrong + in addition there is an extremely\\n    long line that verifies that the toast expands as more text comes into it. More or less text -\\n    Toast messages must look good either way!`;\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public showToastsAllPositions(highlightMode: boolean, timeout: number, progress: boolean = false): void {\\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_LEFT);\\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, \\\"Error\\\", this.errorMessage);\\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_LEFT);\\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_RIGHT);\\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_CENTER);\\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_CENTER);\\n    }\\n\\n    public showToastsFullWidth(highlightMode: boolean, timeout: number, progress: boolean = false) {\\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_FULL_WIDTH);\\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_FULL_WIDTH);\\n    }\\n\\n    public showToastsAdjustSize(highlightMode: boolean, timeout: number, progress: boolean = false): void {\\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, \\\"Error\\\", this.errorMessage);\\n    }\\n\\n    public showToastsNoHeader(highlightMode: boolean, timeout: number, progress: boolean = false, header: string = \\\"\\\"): void {\\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\\n    }\\n\\n    // eslint-disable-next-line max-len\\n    public onShowInfo(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \\\"Information\\\", message: string = \\\"Some info message\\\"): void {\\n        this.toastService.info({\\n            title: title,\\n            message: `${message}`,\\n            options:  this.getOptions(timeout, position, progress),\\n        });\\n    }\\n\\n    // eslint-disable-next-line max-len\\n    public onShowError(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \\\"Failure!\\\", message: string = \\\"Something went wrong\\\"): void {\\n        this.toastService.error({\\n            title: title,\\n            message: `${message}`,\\n            options:  this.getOptions(timeout, position, progress),\\n        });\\n    }\\n\\n    // eslint-disable-next-line max-len\\n    public onShowSuccess(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \\\"Well Done!\\\", message: string = \\\"You're great!\\\"): void {\\n        this.toastService.success({\\n            title: title,\\n            message: `${message}`,\\n            options:  this.getOptions(timeout, position, progress),\\n        });\\n    }\\n\\n    // eslint-disable-next-line max-len\\n    public onShowWarning(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \\\"Attention!\\\", message: string = \\\"Pay attention!\\\"): void {\\n        this.toastService.warning({\\n            title: title,\\n            message: `${message}`,\\n            options:  this.getOptions(timeout, position, progress),\\n        });\\n    }\\n\\n    public callStickyToast(highlightMode: boolean) {\\n        this.toastService.error({\\n            title: \\\"Failure\\\",\\n            message: \\\"This error is sticky!\\\",\\n            options: { stickyError: true },\\n        });\\n    }\\n\\n    public clearToast(highlightMode: boolean): void {\\n        this.toastService.clear();\\n    }\\n\\n    private getOptions(timeout: number, position: ToastPositionClass, enableProgressBar: boolean = false): IToastConfig {\\n        return {\\n            timeOut: timeout,\\n            extendedTimeOut: 2000,\\n            positionClass: position,\\n            progressBar: enableProgressBar,\\n        };\\n    }\\n}\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastConfig, IToastService, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-type-example\",\n    templateUrl: \"./toast-type.example.component.html\",\n})\nexport class ToastTypeExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public onShowInfo(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Info`,\n            message: $localize `E pluribus unum (/ˈiː ˈplʊərɪbəs ˈjuːnəm/; Latin: [ˈeː ˈpluːrɪbʊs ˈuːnũː]) is Latin for 'Out of many, one'`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowSuccess(highlightMode: boolean): void {\n        this.toastService.success({\n            title: $localize `Success`,\n            message: $localize `Well done!`,\n            options:  this.getOptions(),\n        });\n    }\n\n    public onShowWarning(highlightMode: boolean): void {\n        this.toastService.warning({\n            title: $localize `Warning`,\n            message: $localize `There can be only one.`,\n            options:  this.getOptions(),\n        });\n    }\n\n    public onShowError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize `Error`,\n            message: $localize `Nope.`,\n            options:  this.getOptions(),\n        });\n    }\n\n    public clear(): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 3000,\n            extendedTimeOut: 1000,\n        };\n    }\n}\n","<button nui-button type=\"button\" id=\"nui-info-toast\" (click)=\"onShowInfo($event)\" i18n>Info</button>\n<button nui-button type=\"button\" id=\"nui-success-toast\" (click)=\"onShowSuccess($event)\" i18n>Success</button>\n<button nui-button type=\"button\" id=\"nui-warning-toast\" (click)=\"onShowWarning($event)\" i18n>Warning</button>\n<button nui-button type=\"button\" id=\"nui-error-toast\" (click)=\"onShowError($event)\" i18n>Error</button>\n<button nui-button type=\"button\" id=\"nui-hide-all-toasts\" (click)=\"clear()\" i18n>Hide Toasts</button>\n","export default \"<button nui-button type=\\\"button\\\" id=\\\"nui-toast-config-example\\\" (click)=\\\"onShowToast($event)\\\" i18n>Show Toast</button>\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport {\n    IActiveToast,\n    IToastConfig,\n    IToastDeclaration,\n    IToastService,\n    ToastPositionClass,\n    ToastService\n} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-test\",\n    templateUrl: \"./toast-test.component.html\",\n})\nexport class ToastTestComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    private defaults: IToastDeclaration = {\n        message: \"\",\n        title: \"\",\n        options: {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            closeButton: true,\n            progressBar: true,\n            progressAnimation: \"decreasing\",\n            toastClass: \"nui-toast\",\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            maxOpened: 0,           // unlimited\n            newestOnTop: true,\n            enableHtml: false,\n        },\n    };\n    // Using intersection type to avoid adding optional chaining operator (?) multiple times in template\n    // because options property is optional.\n    public toast: IToastDeclaration & {options: IToastConfig};\n    public count: number;\n    public type: string;\n\n    ngOnInit() {\n        this.reset();\n    }\n\n    public fireToast() {\n        const funcs: Record<string, (toast: IToastDeclaration) => IActiveToast> = {\n            \"error\": (toast) => this.toastService.error(toast),\n            \"info\": (toast) => this.toastService.info(toast),\n            \"success\": (toast) => this.toastService.success(toast),\n            \"warning\": (toast) => this.toastService.warning(toast),\n        };\n\n        for (let i = 0; i < this.count; i++) {\n            funcs[this.type](this.toast);\n        }\n    }\n\n    public reset() {\n        this.count = 1;\n        this.type = \"info\";\n        this.toast = { ...this.defaults, options: { ...this.defaults.options } };\n        this.toastService.clear();\n    }\n}\n","<div id=\"nui-toast-test\" class=\"container\">\n    <div class=\"py-2\">\n        <h3>Page settings</h3>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtCount\"> Number of toasts to show: </label>\n            <input type=\"number\" id=\"txtCount\" [(ngModel)]=\"count\">\n        </div>\n\n        <label class=\"px-3 w-25\"> Toast type </label>\n        <input id=\"radioError\" type=\"radio\" name=\"type\" value=\"error\" [(ngModel)]=\"type\">\n        <label for=\"radioError\" class=\"px-3\"> error </label>\n        <input id=\"radioInfo\" type=\"radio\" name=\"type\" value=\"info\" [(ngModel)]=\"type\">\n        <label for=\"radioInfo\" class=\"px-3\"> info </label>\n        <input id=\"radioSuccess\" type=\"radio\" name=\"type\" value=\"success\" [(ngModel)]=\"type\">\n        <label for=\"radioSuccess\" class=\"px-3\"> success </label>\n        <input id=\"radioWarning\" type=\"radio\" name=\"type\" value=\"warning\" [(ngModel)]=\"type\">\n        <label for=\"radioWarning\" class=\"px-3\"> warning </label>\n    </div>\n\n    <div class=\"py-2\">\n        <h3>Toast Configuration</h3>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtMessage\"> message </label>\n            <input type=\"text\" id=\"txtMessage\" [(ngModel)]=\"toast.message\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtTitle\"> title </label>\n            <input type=\"text\" id=\"txtTitle\" [(ngModel)]=\"toast.title\">\n        </div>\n    </div>\n\n    <div class=\"py-2\">\n        <h3>Options</h3>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtTimeOut\"> timeOut </label>\n            <input type=\"text\" id=\"txtTimeOut\" [(ngModel)]=\"toast.options.timeOut\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtExtendedTimeOut\"> extendedTimeOut </label>\n            <input type=\"text\" id=\"txtExtendedTimeOut\" [(ngModel)]=\"toast.options.extendedTimeOut\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbCloseButton\">closeButton</label>\n            <input type=\"checkbox\" id=\"chbCloseButton\" [(ngModel)]=\"toast.options.closeButton\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbProgressBar\">progressBar</label>\n            <input type=\"checkbox\" id=\"chbProgressBar\" [(ngModel)]=\"toast.options.progressBar\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\">progressAnimation</label>\n            <input id=\"radioIncreasing\" type=\"radio\" name=\"progressAnimation\" value=\"increasing\"\n                [(ngModel)]=\"toast.options.progressAnimation\">\n            <label for=\"radioIncreasing\" class=\"px-3\"> increasing </label>\n            <input id=\"radioDecreasing\" type=\"radio\" name=\"progressAnimation\" value=\"decreasing\"\n                [(ngModel)]=\"toast.options.progressAnimation\">\n            <label for=\"radioDecreasing\" class=\"px-3\"> decreasing </label>\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbEnableHtml\">enableHtml</label>\n            <input type=\"checkbox\" id=\"chbEnableHtml\" [(ngModel)]=\"toast.options.enableHtml\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtToastClass\">toastClass</label>\n            <input type=\"text\" id=\"txtToastClass\" [(ngModel)]=\"toast.options.toastClass\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\">positionClass</label>\n            <span class=\"d-inline-block\" style=\"vertical-align: middle;\">\n                <input id=\"radioTopCenter\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--top-center\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioTopCenter\" class=\"px-3\"> TOP_CENTER </label>\n                <input id=\"radioTopLeft\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--top-left\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioTopLeft\" class=\"px-3\"> TOP_LEFT </label>\n                <input id=\"radioTopRight\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--top-right\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioTopRight\" class=\"px-3\"> TOP_RIGHT </label>\n                <input id=\"radioTopFullWidth\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--top-full-width\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioTopFullWidth\" class=\"px-3\"> TOP_FULL_WIDTH </label>\n                <br>\n                <input id=\"radioBottomCenter\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--bottom-center\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioBottomCenter\" class=\"px-3\"> BOTTOM_CENTER </label>\n                <input id=\"radioBottomLeft\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--bottom-left\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioBottomLeft\" class=\"px-3\"> BOTTOM_LEFT </label>\n                <input id=\"radioBottomRight\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--bottom-right\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioBottomRight\" class=\"px-3\"> BOTTOM_RIGHT </label>\n                <input id=\"radioBottomFullWidth\" type=\"radio\" name=\"positionClass\" value=\"nui-toast--bottom-full-width\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioBottomFullWidth\" class=\"px-3\"> BOTTOM_FULL_WIDTH </label>\n                <input id=\"radioCustomClass\" type=\"radio\" name=\"positionClass\" value=\"demoToastCustomClass\"\n                    [(ngModel)]=\"toast.options.positionClass\">\n                <label for=\"radioCustomClass\" class=\"px-3\"> CUSTOM_CLASS </label>\n            </span>\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbClickToDismiss\">clickToDismiss</label>\n            <input type=\"checkbox\" id=\"chbClickToDismiss\" [(ngModel)]=\"toast.options.clickToDismiss\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbStickyError\">stickyError</label>\n            <input type=\"checkbox\" id=\"chbStickyError\" [(ngModel)]=\"toast.options.stickyError\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"txtMaxOpened\">maxOpened</label>\n            <input type=\"number\" id=\"txtMaxOpened\" [(ngModel)]=\"toast.options.maxOpened\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbAutoDismiss\">autoDismiss</label>\n            <input type=\"checkbox\" id=\"chbAutoDismiss\" [(ngModel)]=\"toast.options.autoDismiss\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbNewestOnTop\">newestOnTop</label>\n            <input type=\"checkbox\" id=\"chbNewestOnTop\" [(ngModel)]=\"toast.options.newestOnTop\">\n        </div>\n        <div>\n            <label class=\"px-3 w-25\" for=\"chbPreventDuplicates\">preventDuplicates</label>\n            <input type=\"checkbox\" id=\"chbPreventDuplicates\" [(ngModel)]=\"toast.options.preventDuplicates\">\n        </div>\n\n    </div>\n\n    <div class=\"p-5\" style=\"text-align: center\">\n        <button class=\"px-5\" id=\"btnFire\" (click)=\"fireToast()\">Fire Toast(s)!</button>\n        <button class=\"px-3 ml-3\" id=\"btnReset\" (click)=\"reset()\">Reset form</button>\n    </div>\n</div>\n","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-sticky-error-example\\\",\\n    templateUrl: \\\"./toast-sticky-error.example.component.html\\\",\\n})\\nexport class ToastStickyErrorExampleComponent implements OnInit {\\n    public selectedPosition: string;\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public onShowStickyError(highlightMode: boolean): void {\\n        this.toastService.error({\\n            title: $localize `Sticky Error`,\\n            message: $localize `Red Alert`,\\n            options: this.getOptions(),\\n        });\\n    }\\n\\n    public onHideStickyError(highlightMode: boolean): void {\\n        this.toastService.clear();\\n    }\\n\\n    private getOptions(): IToastConfig {\\n        return {\\n            clickToDismiss: false,\\n            closeButton: false,\\n            positionClass: ToastPositionClass.TOP_RIGHT,\\n            stickyError: true,\\n        };\\n    }\\n}\\n\";","export * from \"./toast-basic/toast-basic.example.component\";\nexport * from \"./toast-sticky-error/toast-sticky-error.example.component\";\nexport * from \"./toast-config/toast-config.example.component\";\nexport * from \"./toast-docs/toast-docs.example.component\";\nexport * from \"./toast-events/toast-events.example.component\";\nexport * from \"./toast-position/toast-position.example.component\";\nexport * from \"./toast-type/toast-type.example.component\";\nexport * from \"./toast-visual-test/toast-visual-test.component\";\nexport * from \"./toast-test/toast-test.component\";\n","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiToastModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    ToastBasicExampleComponent,\n    ToastConfigExampleComponent,\n    ToastEventsExampleComponent,\n    ToastExampleComponent,\n    ToastPositionExampleComponent,\n    ToastStickyErrorExampleComponent,\n    ToastTestComponent,\n    ToastTypeExampleComponent,\n    ToastVisualTestComponent,\n} from \"./index\";\nimport { ToastBasicHtmlExampleComponent } from \"./toast-basic-html/toast-basic-html.example.component\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: ToastExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"toast-visual-test\",\n        component: ToastVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"test\",\n        component: ToastTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiToastModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiRadioModule,\n        NuiDividerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ToastBasicExampleComponent,\n        ToastBasicHtmlExampleComponent,\n        ToastConfigExampleComponent,\n        ToastEventsExampleComponent,\n        ToastExampleComponent,\n        ToastPositionExampleComponent,\n        ToastStickyErrorExampleComponent,\n        ToastTestComponent,\n        ToastTypeExampleComponent,\n        ToastVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class ToastModule {\n}\n","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastService, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-basic-example\\\",\\n    templateUrl: \\\"./toast-basic.example.component.html\\\",\\n})\\nexport class ToastBasicExampleComponent implements OnInit {\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({}, \\\"id\\\");\\n    }\\n\\n    public onShowToast(highlightMode: boolean): void {\\n        this.toastService.info({\\n            title: $localize `Simple Toast.`,\\n            message: $localize `Hi there! I'm a simple toast message`,\\n            options: this.getOptions(),\\n        });\\n    }\\n\\n    private getOptions(): IToastConfig {\\n        return {\\n            timeOut: 5000,\\n            extendedTimeOut: 2000,\\n        };\\n    }\\n}\\n\";","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport { IToastService, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-basic-html-example\\\",\\n    templateUrl: \\\"./toast-basic-html.example.component.html\\\",\\n})\\nexport class ToastBasicHtmlExampleComponent implements OnInit {\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    ngOnInit() {\\n        this.toastService.setConfig({ timeOut: 5000, extendedTimeOut: 2000 }, \\\"id\\\");\\n    }\\n\\n    public showToastWithEnabledHtml(): void {\\n        this.toastService.info({\\n            title: $localize `Toast with enableHtml set to true`,\\n            message: $localize `Hi there! I'm a simple toast message. <a href=\\\"#\\\">Awesome link</a>`,\\n            options: {\\n                enableHtml: true, // Note: Default value\\n            },\\n        });\\n    }\\n\\n    public showToastWithDisabledHtml(): void {\\n        this.toastService.info({\\n            title: $localize `Toast with enableHtml set to false`,\\n            message: $localize `Hi there! I'm a simple toast message <a href=\\\"#\\\">Awesome link</a>`,\\n            options: {\\n                enableHtml: false,\\n            },\\n        });\\n    }\\n\\n    public showToastWithScriptTagIncluded(): void {\\n        this.toastService.info({\\n            title: $localize `Toast with forbidden tags and enableHtml set to true`,\\n            message: $localize `\\n                Hi there! I'm a toast message with forbidden tags:\\n                <script>alert(\\\"You shall not pass\\\")</script>\\n                <object width=\\\"400\\\" height=\\\"400\\\"></object>\\n                <iframe src=\\\"https://www.solarwinds.com/\\\"></iframe>\\n                <embed src=\\\"https://www.solarwinds.com/\\\">\\n                `,\\n            options: {\\n                enableHtml: true, // Note: Default value\\n            },\\n        });\\n    }\\n\\n}\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-visual\",\n    templateUrl: \"./toast-visual-test.component.html\",\n})\nexport class ToastVisualTestComponent implements OnInit {\n\n    private errorMessage: string = `Something went wrong + in addition there is an extremely\n    long line that verifies that the toast expands as more text comes into it. More or less text -\n    Toast messages must look good either way!`;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public showToastsAllPositions(highlightMode: boolean, timeout: number, progress: boolean = false): void {\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_LEFT);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, \"Error\", this.errorMessage);\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_LEFT);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_RIGHT);\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_CENTER);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_CENTER);\n    }\n\n    public showToastsFullWidth(highlightMode: boolean, timeout: number, progress: boolean = false) {\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_FULL_WIDTH);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_FULL_WIDTH);\n    }\n\n    public showToastsAdjustSize(highlightMode: boolean, timeout: number, progress: boolean = false): void {\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, \"Error\", this.errorMessage);\n    }\n\n    public showToastsNoHeader(highlightMode: boolean, timeout: number, progress: boolean = false, header: string = \"\"): void {\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowInfo(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \"Information\", message: string = \"Some info message\"): void {\n        this.toastService.info({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowError(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \"Failure!\", message: string = \"Something went wrong\"): void {\n        this.toastService.error({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowSuccess(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \"Well Done!\", message: string = \"You're great!\"): void {\n        this.toastService.success({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowWarning(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = \"Attention!\", message: string = \"Pay attention!\"): void {\n        this.toastService.warning({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public callStickyToast(highlightMode: boolean) {\n        this.toastService.error({\n            title: \"Failure\",\n            message: \"This error is sticky!\",\n            options: { stickyError: true },\n        });\n    }\n\n    public clearToast(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(timeout: number, position: ToastPositionClass, enableProgressBar: boolean = false): IToastConfig {\n        return {\n            timeOut: timeout,\n            extendedTimeOut: 2000,\n            positionClass: position,\n            progressBar: enableProgressBar,\n        };\n    }\n}\n","<div class=\"container pt-5\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"d-flex justify-content-start\" id=\"nui-toast-positions\">\n                <button id=\"nui-toast-button-all-positions\" (click)=\"showToastsAllPositions($event, 200000)\">Trigger all positions</button>\n            </div>\n            <div class=\"d-flex justify-content-start\" id=\"nui-toast-fw\">\n                <button id=\"nui-toast-position-fw\" (click)=\"showToastsFullWidth($event, 10000)\">Full Width</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"d-flex justify-content-start\">\n                <button id=\"nui-toast-clear-all-toasts\" (click)=\"clearToast($event)\">Clear All Toasts</button>\n                <button id=\"nui-toast-sticky\" (click)=\"callStickyToast($event)\">Call Sticky Error!</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Toast messages adjust size</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"d-flex justify-content-start\" id=\"nui-toast-buttons-chain\">\n                <button id=\"nui-toast-adjust-size\" (click)=\"showToastsAdjustSize($event, 10000)\">Trigger all toast messages</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Toast messages with no header</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"d-flex justify-content-start\" id=\"nui-toast-buttons-chain-no-header\">\n                <button id=\"nui-toast-no-header\" (click)=\"showToastsNoHeader($event, 10000)\">Trigger all toast messages</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Toast messages with progress bar</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"d-flex justify-content-start\" id=\"nui-toast-positions\">\n                <button id=\"nui-toast-button-all-positions-progress-bar\" (click)=\"showToastsAllPositions($event, 300000, true)\">Trigger all positions</button>\n            </div>\n        </div>\n    </div>\n</div>\n","export default \"import { Component, Inject, OnInit } from \\\"@angular/core\\\";\\nimport {\\n    IActiveToast,\\n    IToastConfig,\\n    IToastDeclaration,\\n    IToastService,\\n    ToastPositionClass,\\n    ToastService\\n} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-test\\\",\\n    templateUrl: \\\"./toast-test.component.html\\\",\\n})\\nexport class ToastTestComponent implements OnInit {\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    private defaults: IToastDeclaration = {\\n        message: \\\"\\\",\\n        title: \\\"\\\",\\n        options: {\\n            timeOut: 5000,\\n            extendedTimeOut: 2000,\\n            closeButton: true,\\n            progressBar: true,\\n            progressAnimation: \\\"decreasing\\\",\\n            toastClass: \\\"nui-toast\\\",\\n            positionClass: ToastPositionClass.TOP_RIGHT,\\n            maxOpened: 0,           // unlimited\\n            newestOnTop: true,\\n            enableHtml: false,\\n        },\\n    };\\n    // Using intersection type to avoid adding optional chaining operator (?) multiple times in template\\n    // because options property is optional.\\n    public toast: IToastDeclaration & {options: IToastConfig};\\n    public count: number;\\n    public type: string;\\n\\n    ngOnInit() {\\n        this.reset();\\n    }\\n\\n    public fireToast() {\\n        const funcs: Record<string, (toast: IToastDeclaration) => IActiveToast> = {\\n            \\\"error\\\": (toast) => this.toastService.error(toast),\\n            \\\"info\\\": (toast) => this.toastService.info(toast),\\n            \\\"success\\\": (toast) => this.toastService.success(toast),\\n            \\\"warning\\\": (toast) => this.toastService.warning(toast),\\n        };\\n\\n        for (let i = 0; i < this.count; i++) {\\n            funcs[this.type](this.toast);\\n        }\\n    }\\n\\n    public reset() {\\n        this.count = 1;\\n        this.type = \\\"info\\\";\\n        this.toast = { ...this.defaults, options: { ...this.defaults.options } };\\n        this.toastService.clear();\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IToastConfig, IToastDeclaration } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-toast-docs-example\\\",\\n    templateUrl: \\\"./toast-docs.example.component.html\\\",\\n})\\nexport class ToastExampleComponent {\\n    getToastDeclarationKey(key: keyof IToastDeclaration): string {\\n        return key;\\n    }\\n    getToastConfigKey(key: keyof IToastConfig): string {\\n        return key;\\n    }\\n}\\n\";","var map = {\n\t\"./index.ts\": \"L9yT\",\n\t\"./toast-basic-html/toast-basic-html.example.component.html\": \"lVOQ\",\n\t\"./toast-basic-html/toast-basic-html.example.component.ts\": \"iMfI\",\n\t\"./toast-basic/toast-basic.example.component.html\": \"Dy+8\",\n\t\"./toast-basic/toast-basic.example.component.ts\": \"evYZ\",\n\t\"./toast-config/toast-config.example.component.html\": \"WCz1\",\n\t\"./toast-config/toast-config.example.component.ts\": \"F+Re\",\n\t\"./toast-docs/toast-docs.example.component.html\": \"0/8W\",\n\t\"./toast-docs/toast-docs.example.component.ts\": \"ixWd\",\n\t\"./toast-events/toast-events.example.component.html\": \"+SQs\",\n\t\"./toast-events/toast-events.example.component.ts\": \"QfmY\",\n\t\"./toast-position/toast-position.example.component.html\": \"o5Nh\",\n\t\"./toast-position/toast-position.example.component.ts\": \"1Fq8\",\n\t\"./toast-sticky-error/toast-sticky-error.example.component.html\": \"32Qo\",\n\t\"./toast-sticky-error/toast-sticky-error.example.component.ts\": \"aI/t\",\n\t\"./toast-test/toast-test.component.html\": \"F45P\",\n\t\"./toast-test/toast-test.component.ts\": \"itjl\",\n\t\"./toast-type/toast-type.example.component.html\": \"JpLm\",\n\t\"./toast-type/toast-type.example.component.ts\": \"/aG4\",\n\t\"./toast-visual-test/toast-visual-test.component.html\": \"Cfpd\",\n\t\"./toast-visual-test/toast-visual-test.component.ts\": \"Tkmm\",\n\t\"./toast.module.ts\": \"GjN6\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"l6xF\";","export default \"<button nui-button type=\\\"button\\\" id=\\\"nui-basic-toast-html-example-1\\\" (click)=\\\"showToastWithEnabledHtml()\\\" i18n>Show Toast With Enabled Html</button>\\n<button nui-button type=\\\"button\\\" class=\\\"ml-3\\\" id=\\\"nui-basic-toast-html-example-2\\\" (click)=\\\"showToastWithDisabledHtml()\\\" i18n>Show Toast With Disabled Html</button>\\n<button nui-button type=\\\"button\\\" class=\\\"ml-3\\\" id=\\\"nui-basic-toast-html-example-3\\\" (click)=\\\"showToastWithScriptTagIncluded()\\\" i18n>Show Toast With Script Tag</button>\\n\";","export default \"<div class=\\\"nui-flex-container\\\">\\n    <div>\\n        <nui-radio-group [(value)]=\\\"selectedPosition\\\">\\n            <nui-radio *ngFor=\\\"let position of toastPositions\\\"\\n                        id=\\\"{{'nui-toast-position-'+position.className}}\\\"\\n                        [checked]=\\\"position.className === 'nui-toast--top-right'\\\"\\n                        [value]=\\\"position.className\\\">\\n                {{position.displayValue}}\\n            </nui-radio>\\n        </nui-radio-group>\\n    </div>\\n</div>\\n<button nui-button type=\\\"button\\\" id=\\\"nui-toast-position-example\\\" (click)=\\\"onShowToast($event)\\\" i18n>Show Toast</button>\\n\";","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastService, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-basic-html-example\",\n    templateUrl: \"./toast-basic-html.example.component.html\",\n})\nexport class ToastBasicHtmlExampleComponent implements OnInit {\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({ timeOut: 5000, extendedTimeOut: 2000 }, \"id\");\n    }\n\n    public showToastWithEnabledHtml(): void {\n        this.toastService.info({\n            title: $localize `Toast with enableHtml set to true`,\n            message: $localize `Hi there! I'm a simple toast message. <a href=\"#\">Awesome link</a>`,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n\n    public showToastWithDisabledHtml(): void {\n        this.toastService.info({\n            title: $localize `Toast with enableHtml set to false`,\n            message: $localize `Hi there! I'm a simple toast message <a href=\"#\">Awesome link</a>`,\n            options: {\n                enableHtml: false,\n            },\n        });\n    }\n\n    public showToastWithScriptTagIncluded(): void {\n        this.toastService.info({\n            title: $localize `Toast with forbidden tags and enableHtml set to true`,\n            message: $localize `\n                Hi there! I'm a toast message with forbidden tags:\n                <script>alert(\"You shall not pass\")</script>\n                <object width=\"400\" height=\"400\"></object>\n                <iframe src=\"https://www.solarwinds.com/\"></iframe>\n                <embed src=\"https://www.solarwinds.com/\">\n                `,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n\n}\n","<button nui-button type=\"button\" id=\"nui-basic-toast-html-example-1\" (click)=\"showToastWithEnabledHtml()\" i18n>Show Toast With Enabled Html</button>\n<button nui-button type=\"button\" class=\"ml-3\" id=\"nui-basic-toast-html-example-2\" (click)=\"showToastWithDisabledHtml()\" i18n>Show Toast With Disabled Html</button>\n<button nui-button type=\"button\" class=\"ml-3\" id=\"nui-basic-toast-html-example-3\" (click)=\"showToastWithScriptTagIncluded()\" i18n>Show Toast With Script Tag</button>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-config-example\",\n    templateUrl: \"./toast-config.example.component.html\",\n})\nexport class ToastConfigExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, \"id\");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Toast Configuration`,\n            message: $localize `I'm pretty easy to configure`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 2000,\n            clickToDismiss: true,\n            closeButton: true,\n            positionClass: ToastPositionClass.BOTTOM_RIGHT,\n            progressBar: true,\n            progressAnimation: \"increasing\",\n            timeOut: 5000,\n        };\n    }\n}\n","<button nui-button type=\"button\" id=\"nui-toast-config-example\" (click)=\"onShowToast($event)\" i18n>Show Toast</button>\n","import { Component } from \"@angular/core\";\nimport { IToastConfig, IToastDeclaration } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-toast-docs-example\",\n    templateUrl: \"./toast-docs.example.component.html\",\n})\nexport class ToastExampleComponent {\n    getToastDeclarationKey(key: keyof IToastDeclaration): string {\n        return key;\n    }\n    getToastConfigKey(key: keyof IToastConfig): string {\n        return key;\n    }\n}\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiToastModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<div>\n    You can use <code>IToastService</code>, <code>ToastService</code> to show a (usually) temporary message (toast),\n    associated with some event. In example below we're showing a toast message when the \"Show Toast\" button is clicked.\n    Following construction is used to create a toast:\n    <code>IToastService.info(toastDeclaration: <a href=\"../interfaces/IToastDeclaration.html\">IToastDeclaration</a>)</code>.\n    Any property in <a href=\"../interfaces/IToastDeclaration.html\"><code>IToastDeclaration</code></a> is optional.\n</div>\n<p>\n    When using the toast component with a title, a space is automatically inserted in front of the message body to create spacial separation from the title.\n    In addition to the provided space, it's suggested that the user add a sentence-ending punctuation mark to the title to further emphasize this separation.\n</p>\n<nui-example-wrapper filenamePrefix=\"toast-basic\" exampleTitle=\"Basic usage\">\n    <nui-toast-basic-example></nui-toast-basic-example>\n</nui-example-wrapper>\n\n<h2>Basic Usage With Html</h2>\n<p>\n    Toast allows HTML usage inside the <code>{{getToastDeclarationKey(\"message\")}}</code> container by\n    default. Note: The provided value will be sanitized and rendered.\n</p>\n<p>\n    To configure a toast to display HTML as plain text, set the\n    <code>{{getToastConfigKey(\"enableHtml\")}}</code> property in\n    <code>{{getToastDeclarationKey(\"options\")}}</code> to <code>false</code>.\n</p>\n<p>\n    When the <code>{{getToastConfigKey(\"enableHtml\")}}</code> flag is turned on, all the content will be\n    sanitized, basic tags for changing fonts are often allowed, such as <code>&lt;b&gt;</code>, \n    <code>&lt;i&gt;</code>, <code>&lt;u&gt;</code>, <code>&lt;em&gt;</code>, and \n    <code>&lt;strong&gt;</code>. More advanced tags such as <code>&lt;script&gt;</code>,\n    <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>, and <code>&lt;link&gt;</code> are removed by\n    the sanitization process. Additionally, potentially dangerous attributes such as\n    <code>onclick</code> are removed in order to prevent malicious code from being injected.\n</p>\n<nui-example-wrapper filenamePrefix=\"toast-basic-html\" exampleTitle=\"Basic HTML Usage\">\n    <nui-toast-basic-html-example></nui-toast-basic-html-example>\n</nui-example-wrapper>\n\n<h2>Types</h2>\n<p>\n    Toast types allows you to convey some contextual information about the message by applying different styles to toasts.\n</p>\n<nui-example-wrapper filenamePrefix=\"toast-type\" exampleTitle=\"Types\">\n    <nui-toast-type-example></nui-toast-type-example>\n</nui-example-wrapper>\n\n<h2>Configuration</h2>\n<p>\n    Toast messages are highly configurable via <a href=\"../interfaces/IToastConfig.html\">IToastConfig</a> interface.\n    The following example employs some of the more common settings:\n    <br/>\n    <code>\n        extendedTimeOut: 2000,\n        clickToDismiss: true,\n        closeButton: true,\n        positionClass: \"toast-bottom-right\",\n        progressBar: true,\n        progressAnimation: \"increasing\",\n        timeOut: 5000\n    </code>\n</p>\n<nui-example-wrapper filenamePrefix=\"toast-config\" exampleTitle=\"Configuration\">\n    <nui-toast-config-example></nui-toast-config-example>\n</nui-example-wrapper>\n\n<h2>Positioning</h2>\n<p>\n    The position of a toast message is determined by the value of <code>IToastConfig.positionClass</code>.\n    By default toast is positioned top-right. To implement different positioning you must pass one of available\n    options from <a href=\"../miscellaneous/enumerations.html#ToastPositionClass\"><code>ToastPositionClass</code></a>\n    to <a href=\"../interfaces/IToastConfig.html\"><code>IToastConfig</code></a> positionClass property.<br /><br />\n\n    It is also possible to set a custom class to configure the position of the <code>nui-toast</code>.  Simply populate\n    the <code>IToastConfig.positionClass</code> with the custom css class name.\n\n    <nui-message type=\"warning\" [allowDismiss]=\"false\">\n        Make sure you defined a custom class in a global stylesheet\n    </nui-message>\n</p>\n<nui-example-wrapper filenamePrefix=\"toast-position\" exampleTitle=\"Positioning\">\n    <nui-toast-position-example></nui-toast-position-example>\n</nui-example-wrapper>\n\n<h2>Sticky Error</h2>\n<p>\n    You can also optionally force error toasts to remain visible indefinitely using <code>IToastConfig.stickyError</code>.\n    Note, that this option is only available with <code>IToastService.error</code>.\n</p>\n<nui-example-wrapper filenamePrefix=\"toast-sticky-error\" exampleTitle=\"Sticky error\">\n    <nui-toast-sticky-error-example></nui-toast-sticky-error-example>\n</nui-example-wrapper>\n\n<h2>Events</h2>\n<p>\n    With <a href=\"../interfaces/IActiveToast.html\">IActiveToast</a>, it's possible to\n    capture (and act upon) following events per toast instance:\n</p>\n<ul>\n    <li><code>onShown</code></li>\n    <li><code>onHidden</code></li>\n    <li><code>onClick</code></li>\n</ul>\n<nui-example-wrapper filenamePrefix=\"toast-events\" exampleTitle=\"Events\">\n    <nui-toast-events-example></nui-toast-events-example>\n</nui-example-wrapper>\n"],"sourceRoot":"webpack:///"}