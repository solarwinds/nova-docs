{"version":3,"sources":["webpack:///./demo/src/components/demo/icon/icon-color/icon-color.example.component.html?fbc5","./demo/src/components/demo/icon/icon-hover/icon-hover.example.component.ts","./demo/src/components/demo/icon/icon-hover/icon-hover.example.component.html","webpack:///./demo/src/components/demo/icon/icon-list/icon-list.example.component.ts?fdb1","webpack:///./demo/src/components/demo/icon/icon-basic/icon-basic.example.component.html?d5bb","webpack:///./demo/src/components/demo/icon/icon-status/icon-status.example.component.ts?d6d7","./demo/src/components/demo/icon/icon-status/icon-status.example.component.ts","./demo/src/components/demo/icon/icon-status/icon-status.example.component.html","./demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.ts","./demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.html","webpack:///./demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.html?e3b1","webpack:///./demo/src/components/demo/icon/icon-size/icon-size.example.component.ts?e041","./demo/src/components/demo/icon/icon-color/icon-color.example.component.ts","./demo/src/components/demo/icon/icon-color/icon-color.example.component.html","webpack:///./demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.ts?e964","./demo/src/components/demo/icon/icon-counter/icon-counter.example.component.ts","./demo/src/components/demo/icon/icon-counter/icon-counter.example.component.html","webpack:///./demo/src/components/demo/icon/icon-child-status/icon-child-status.example.component.html?edc5","webpack:///./demo/src/components/demo/icon/icon-status/icon-status.example.component.html?0586","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?273b","webpack:///./demo/src/components/demo/icon/icon.module.ts?0b5d","webpack:///./demo/src/components/demo/icon/icon-hover/icon-hover.example.component.html?27b9","./demo/src/components/demo/icon/icon-docs/icon-docs.example.component.ts","./demo/src/components/demo/icon/icon-docs/icon-docs.example.component.html","webpack:///./demo/src/components/demo/icon/icon-counter/icon-counter.example.component.html?34d7","webpack:///./demo/src/components/demo/icon/icon-hover/icon-hover.example.component.ts?34e9","./demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.ts","./demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.html","webpack:///./demo/src/components/demo/icon/index.ts?4e4c","webpack:///./demo/src/components/demo/icon/icon-list/icon-list.example.component.html?6267","./demo/src/components/demo/icon/icon-size/icon-size.example.component.ts","./demo/src/components/demo/icon/icon-size/icon-size.example.component.html","webpack:///./demo/src/components/demo/icon/icon-size/icon-size.example.component.html?848e","./demo/src/components/demo/icon/icon-list/icon-list.example.component.ts","./demo/src/components/demo/icon/icon-list/icon-list.example.component.html","./demo/src/components/demo/icon/index.ts","webpack:///./demo/src/components/demo/icon/icon-color/icon-color.example.component.ts?8d07","webpack:///./demo/src/components/demo/icon/icon-docs/icon-docs.example.component.ts?a22e","./demo/src/components/demo/icon/icon.module.ts","webpack:///./demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.ts?a589","webpack:///./demo/src/components/demo/icon/icon-docs/icon-docs.example.component.html?abd9","webpack:///./demo/src/components/demo/icon/icon-with-text/icon-with-text.example.component.html?af9f","webpack:///./demo/src/components/demo/icon/icon-basic/icon-basic.example.component.ts?b276","webpack:///./demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.ts?b893","./demo/src/components/demo/icon/icon-basic/icon-basic.example.component.ts","./demo/src/components/demo/icon/icon-basic/icon-basic.example.component.html","./demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.ts","./demo/src/components/demo/icon/icon-visual-test/icon-visual-test.component.html","webpack:///./demo/src/components/demo/icon/icon-counter/icon-counter.example.component.ts?cb28"],"names":[],"mappings":"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","file":"demo-icon-icon-module-es2015.js","sourcesContent":["export default \"<nui-icon icon=\\\"add\\\" iconColor=\\\"orange\\\" id=\\\"nui-demo-icon-color\\\"></nui-icon>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-hover-example\",\n    templateUrl: \"./icon-hover.example.component.html\",\n})\n\nexport class IconHoverExampleComponent {}\n","<nui-icon icon=\"add\" iconHoverColor=\"gray\" id=\"nui-demo-icon-hover\"></nui-icon>\n","export default \"import { Component, OnInit } from \\\"@angular/core\\\";\\n\\nimport { icons as iconsData } from \\\"../../../../../../src/lib/icon/icons\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-list-example\\\",\\n    templateUrl: \\\"./icon-list.example.component.html\\\",\\n})\\n\\nexport class IconListExampleComponent implements OnInit {\\n    public icons: any[];\\n    public categories: any[];\\n\\n    public ngOnInit(): void {\\n\\n        this.icons = iconsData;\\n        this.categories = this.getCategories(iconsData);\\n    }\\n\\n    private getCategories(icons: any[]) {\\n        const categories = [];\\n        for (const icon of icons) {\\n            if (categories.indexOf(icon.category) === -1) {\\n                categories.push(icon.category);\\n            }\\n        }\\n        return categories;\\n    }\\n}\\n\";","export default \"<nui-icon icon=\\\"add\\\"></nui-icon>\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-status-example\\\",\\n    templateUrl: \\\"./icon-status.example.component.html\\\",\\n})\\n\\nexport class IconStatusExampleComponent {\\n    status: IconStatus = IconStatus.Up;\\n}\\n\";","import {Component} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-icon-status-example\",\n    templateUrl: \"./icon-status.example.component.html\",\n})\n\nexport class IconStatusExampleComponent {\n    status: IconStatus = IconStatus.Up;\n}\n","<nui-icon icon=\"add\" [status]=\"status\" id=\"nui-demo-icon-with-status-up\"></nui-icon>\n","import {Component} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-icon-child-status-example\",\n    templateUrl: \"./icon-child-status.example.component.html\",\n})\n\nexport class IconChildStatusExampleComponent {\n    status: IconStatus = IconStatus.Up;\n    childStatus: IconStatus = IconStatus.Sleep;\n}\n","<nui-icon icon=\"add\" [status]=\"status\" [childStatus]=\"childStatus\"></nui-icon>\n","export default \"<div class=\\\"ml-4\\\">\\n    <div>\\n        <h3>Basic icon usage</h3>\\n        <nui-icon icon=\\\"add\\\" iconHoverColor=\\\"gray\\\" id=\\\"nui-icon-test-basic-usage\\\"></nui-icon>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Differrent Sizes</h3>\\n        <nui-icon class=\\\"pr-2\\\" icon=\\\"add\\\" iconSize=\\\"small\\\" id=\\\"nui-icon-test-small-size\\\"></nui-icon>\\n        <nui-icon class=\\\"pr-2\\\" icon=\\\"add\\\" id=\\\"nui-icon-test-default-size\\\"></nui-icon>\\n        <nui-icon class=\\\"pr-2\\\" icon=\\\"add\\\" iconSize=\\\"medium\\\" id=\\\"nui-icon-test-medium-size\\\"></nui-icon>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Color</h3>\\n        <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                orange\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"orange\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                light-blue\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"light-blue\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                primary-blue\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"primary-blue\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                gray\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"gray\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n            <div class=\\\"d-flex flex-column pr-5\\\">\\n                disabled-gray\\n                <nui-icon icon=\\\"add\\\" iconColor=\\\"disabled-gray\\\" id=\\\"nui-icon-test-color\\\"></nui-icon>\\n            </div>\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Status</h3>\\n\\n        <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"d-flex flex-column pr-5\\\" *ngFor=\\\"let status of iconStatuses\\\">\\n                {{status}}<nui-icon icon=\\\"add\\\" status=\\\"{{status}}\\\"></nui-icon>\\n            </div>\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Child Status</h3>\\n\\n        <div class=\\\"d-flex flex-row\\\">\\n            <div class=\\\"d-flex flex-column pr-5\\\" *ngFor=\\\"let status of iconStatuses\\\">\\n                {{status}}<nui-icon icon=\\\"add\\\" status=\\\"up\\\" childStatus=\\\"{{status}}\\\"></nui-icon>\\n            </div>\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Text Alignment</h3>\\n        <div class=\\\"d-inline-flex align-items-center\\\">\\n            <nui-icon icon=\\\"printer\\\" status=\\\"critical\\\" childStatus=\\\"down\\\"></nui-icon>\\n            Managed entity name\\n        </div>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <h3>Icon with Counter</h3>\\n        <nui-icon icon=\\\"email\\\" [counter]=\\\"6\\\" id=\\\"nui-icon-test-with-counter\\\"></nui-icon>\\n        <hr />\\n    </div>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-size-example\\\",\\n    templateUrl: \\\"./icon-size.example.component.html\\\",\\n})\\n\\nexport class IconSizeExampleComponent {}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-color-example\",\n    templateUrl: \"./icon-color.example.component.html\",\n})\n\nexport class IconColorExampleComponent {}\n","<nui-icon icon=\"add\" iconColor=\"orange\" id=\"nui-demo-icon-color\"></nui-icon>\n","export default \"import {Component} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-child-status-example\\\",\\n    templateUrl: \\\"./icon-child-status.example.component.html\\\",\\n})\\n\\nexport class IconChildStatusExampleComponent {\\n    status: IconStatus = IconStatus.Up;\\n    childStatus: IconStatus = IconStatus.Sleep;\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-counter-example\",\n    templateUrl: \"./icon-counter.example.component.html\",\n})\n\nexport class IconCounterExampleComponent {}\n","<nui-icon icon=\"email\" [counter]=\"6\" id=\"nui-demo-icon-with-counter\"></nui-icon>\n","export default \"<nui-icon icon=\\\"add\\\" [status]=\\\"status\\\" [childStatus]=\\\"childStatus\\\"></nui-icon>\\n\";","export default \"<nui-icon icon=\\\"add\\\" [status]=\\\"status\\\" id=\\\"nui-demo-icon-with-status-up\\\"></nui-icon>\\n\";","var map = {\n\t\"./icon-basic/icon-basic.example.component.html\": \"1bsI\",\n\t\"./icon-basic/icon-basic.example.component.ts\": \"snZD\",\n\t\"./icon-child-status/icon-child-status.example.component.html\": \"7cVk\",\n\t\"./icon-child-status/icon-child-status.example.component.ts\": \"6WQY\",\n\t\"./icon-color/icon-color.example.component.html\": \"+8VF\",\n\t\"./icon-color/icon-color.example.component.ts\": \"jQew\",\n\t\"./icon-counter/icon-counter.example.component.html\": \"NNfs\",\n\t\"./icon-counter/icon-counter.example.component.ts\": \"yyiK\",\n\t\"./icon-docs/icon-docs.example.component.html\": \"q9kn\",\n\t\"./icon-docs/icon-docs.example.component.ts\": \"oi4e\",\n\t\"./icon-hover/icon-hover.example.component.html\": \"J7lh\",\n\t\"./icon-hover/icon-hover.example.component.ts\": \"NOk1\",\n\t\"./icon-list/icon-list.example.component.html\": \"Yme5\",\n\t\"./icon-list/icon-list.example.component.ts\": \"/bEf\",\n\t\"./icon-size/icon-size.example.component.html\": \"hI6i\",\n\t\"./icon-size/icon-size.example.component.ts\": \"4EEn\",\n\t\"./icon-status/icon-status.example.component.html\": \"BYaV\",\n\t\"./icon-status/icon-status.example.component.ts\": \"1teV\",\n\t\"./icon-visual-test/icon-visual-test.component.html\": \"47EU\",\n\t\"./icon-visual-test/icon-visual-test.component.ts\": \"uJO1\",\n\t\"./icon-with-text/icon-with-text.example.component.html\": \"r585\",\n\t\"./icon-with-text/icon-with-text.example.component.ts\": \"pYnm\",\n\t\"./icon.module.ts\": \"C12z\",\n\t\"./index.ts\": \"Tkyz\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"BqlG\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiExpanderModule, NuiIconModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    IconBasicExampleComponent,\\n    IconChildStatusExampleComponent,\\n    IconColorExampleComponent,\\n    IconCounterExampleComponent,\\n    IconDocsExampleComponent,\\n    IconHoverExampleComponent,\\n    IconListExampleComponent,\\n    IconSizeExampleComponent,\\n    IconStatusExampleComponent,\\n    IconVisualTestComponent,\\n    IconWithTextExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: IconDocsExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"icon-visual-test\\\",\\n        component: IconVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiIconModule,\\n        NuiExpanderModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        IconBasicExampleComponent,\\n        IconChildStatusExampleComponent,\\n        IconColorExampleComponent,\\n        IconCounterExampleComponent,\\n        IconDocsExampleComponent,\\n        IconListExampleComponent,\\n        IconSizeExampleComponent,\\n        IconStatusExampleComponent,\\n        IconHoverExampleComponent,\\n        IconWithTextExampleComponent,\\n        IconVisualTestComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class IconModule {\\n}\\n\";","export default \"<nui-icon icon=\\\"add\\\" iconHoverColor=\\\"gray\\\" id=\\\"nui-demo-icon-hover\\\"></nui-icon>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-docs-example\",\n    templateUrl: \"./icon-docs.example.component.html\",\n})\n\nexport class IconDocsExampleComponent {}\n","<p>\n    <code>&lt;nui-icon&gt;</code>, as the name implies, allows you to display an icon.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiIconModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To use <code>&lt;nui-icon&gt;</code> you can set the <code>icon</code> input to the id of one of the available icon\n    provided as part of Nova. See the <strong>Available Icons</strong> section on this page.\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-basic\" exampleTitle=\"Basic Usage\">\n    <nui-icon-basic-example></nui-icon-basic-example>\n</nui-example-wrapper>\n\n<h2>Size</h2>\n<p>\n    To override the default size of <code>&lt;nui-icon&gt;</code>, set the <code>size</code> input to the string values \"small\" (12px) or \"medium\" (20px).\n    By default <code>size</code> is set to \"default\" (16px).\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-size\" exampleTitle=\"Size\">\n    <nui-icon-size-example></nui-icon-size-example>\n</nui-example-wrapper>\n\n<h2>Color</h2>\n<p>\n    The color of <code>&lt;nui-icon&gt;</code> can be set by passing one of the following color string values to the <code>iconColor</code> input: \"white\", \"light-blue\", \"gray\", \"disabled-gray\", \"primary-blue\", or \"orange\".\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-color\" exampleTitle=\"Color\">\n    <nui-icon-color-example></nui-icon-color-example>\n</nui-example-wrapper>\n\n<h2>Hover Effect</h2>\n<p>\n    To set the hover color of <code>&lt;nui-icon&gt;</code> pass one of the following color string values to the <code>iconHoverColor</code> input: \"white\", \"light-blue\", \"gray\", \"disabled-gray\", \"primary-blue\", or \"orange\".\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-hover\" exampleTitle=\"Hover effect\">\n    <nui-icon-hover-example></nui-icon-hover-example>\n</nui-example-wrapper>\n\n<h2>Status</h2>\n<p>\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon. Available values for the <code>status</code> input can be found in the enum <code><a href=\"../miscellaneous/enumerations.html#IconStatus\" target=\"_blank\">IconStatus</a></code>.\n    You can also pass a string value of an appropriate status in enum e.g. <code>status=\"critical\"</code>\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-status\" exampleTitle=\"Status\">\n    <nui-icon-status-example></nui-icon-status-example>\n</nui-example-wrapper>\n\n<h2>Child Status</h2>\n<p>\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon with child status. Available values for the <code>childStatus</code> input can be found in the enum <code><a href=\"../miscellaneous/enumerations.html#IconStatus\" target=\"_blank\">IconStatus</a></code>.\n    You can also pass a string value of an appropriate status in enum e.g. <code>childStatus=\"critical\"</code>\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-child-status\" exampleTitle=\"Child Status\">\n    <nui-icon-child-status-example></nui-icon-child-status-example>\n</nui-example-wrapper>\n\n<h2>Alignment with Text</h2>\n<p>\n    The example below demonstrates how to align text with the icon.\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-with-text\" exampleTitle=\"Alignment with Text\">\n    <nui-icon-with-text-example></nui-icon-with-text-example>\n</nui-example-wrapper>\n\n<h2>Counter</h2>\n<p>\n    To apply a counter badge to the icon, set the <code>counter</code> input to a valid integer.\n</p>\n<nui-example-wrapper filenamePrefix=\"icon-counter\" exampleTitle=\"Counter\">\n    <nui-icon-counter-example></nui-icon-counter-example>\n</nui-example-wrapper>\n\n<h2>Available Icons</h2>\n<nui-example-wrapper filenamePrefix=\"icon-list\" exampleTitle=\"Available Icons\">\n    <nui-icon-list-example></nui-icon-list-example>\n</nui-example-wrapper>\n","export default \"<nui-icon icon=\\\"email\\\" [counter]=\\\"6\\\" id=\\\"nui-demo-icon-with-counter\\\"></nui-icon>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-hover-example\\\",\\n    templateUrl: \\\"./icon-hover.example.component.html\\\",\\n})\\n\\nexport class IconHoverExampleComponent {}\\n\";","import {Component} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-icon-with-text-example\",\n    templateUrl: \"./icon-with-text.example.component.html\",\n})\n\nexport class IconWithTextExampleComponent {\n    status: IconStatus = IconStatus.Up;\n    childStatus: IconStatus = IconStatus.Sleep;\n}\n","<div class=\"d-inline-flex align-items-center\">\n    <nui-icon icon=\"printer\" [status]=\"status\" [childStatus]=\"childStatus\"></nui-icon>\n    <span i18n>Managed entity name</span>\n</div>\n","export default \"export * from \\\"./icon-basic/icon-basic.example.component\\\";\\nexport * from \\\"./icon-docs/icon-docs.example.component\\\";\\nexport * from \\\"./icon-color/icon-color.example.component\\\";\\nexport * from \\\"./icon-list/icon-list.example.component\\\";\\nexport * from \\\"./icon-size/icon-size.example.component\\\";\\nexport * from \\\"./icon-status/icon-status.example.component\\\";\\nexport * from \\\"./icon-hover/icon-hover.example.component\\\";\\nexport * from \\\"./icon-counter/icon-counter.example.component\\\";\\nexport * from \\\"./icon-child-status/icon-child-status.example.component\\\";\\nexport * from \\\"./icon-with-text/icon-with-text.example.component\\\";\\nexport * from \\\"./icon-visual-test/icon-visual-test.component\\\";\\n\";","export default \"<div *ngFor=\\\"let category of categories\\\">\\n    <nui-expander [header]=\\\"category\\\">\\n        <div class=\\\"row align-items-baseline\\\">\\n            <div *ngFor=\\\"let icon of icons\\\">\\n                <div class=\\\"m-3\\\" *ngIf=\\\"icon.code && icon.category == category\\\">\\n                    <figure class=\\\"d-flex flex-column align-items-center\\\">\\n                        <nui-icon [icon]=\\\"icon.name\\\"></nui-icon>\\n                        <figcaption class=\\\"mt-2\\\">{{icon.name}}</figcaption>\\n                    </figure>\\n                </div>\\n            </div>\\n        </div>\\n    </nui-expander>\\n</div>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-size-example\",\n    templateUrl: \"./icon-size.example.component.html\",\n})\n\nexport class IconSizeExampleComponent {}\n","<nui-icon icon=\"add\" iconSize=\"small\" id=\"nui-demo-icon-small\"></nui-icon>\n<nui-icon icon=\"add\" id=\"nui-demo-icon-default-size\"></nui-icon>\n<nui-icon icon=\"add\" iconSize=\"medium\" id=\"nui-demo-icon-medium-size\"></nui-icon>\n","export default \"<nui-icon icon=\\\"add\\\" iconSize=\\\"small\\\" id=\\\"nui-demo-icon-small\\\"></nui-icon>\\n<nui-icon icon=\\\"add\\\" id=\\\"nui-demo-icon-default-size\\\"></nui-icon>\\n<nui-icon icon=\\\"add\\\" iconSize=\\\"medium\\\" id=\\\"nui-demo-icon-medium-size\\\"></nui-icon>\\n\";","import { Component, OnInit } from \"@angular/core\";\n\nimport { icons as iconsData } from \"../../../../../../src/lib/icon/icons\";\n\n@Component({\n    selector: \"nui-icon-list-example\",\n    templateUrl: \"./icon-list.example.component.html\",\n})\n\nexport class IconListExampleComponent implements OnInit {\n    public icons: any[];\n    public categories: any[];\n\n    public ngOnInit(): void {\n\n        this.icons = iconsData;\n        this.categories = this.getCategories(iconsData);\n    }\n\n    private getCategories(icons: any[]) {\n        const categories = [];\n        for (const icon of icons) {\n            if (categories.indexOf(icon.category) === -1) {\n                categories.push(icon.category);\n            }\n        }\n        return categories;\n    }\n}\n","<div *ngFor=\"let category of categories\">\n    <nui-expander [header]=\"category\">\n        <div class=\"row align-items-baseline\">\n            <div *ngFor=\"let icon of icons\">\n                <div class=\"m-3\" *ngIf=\"icon.code && icon.category == category\">\n                    <figure class=\"d-flex flex-column align-items-center\">\n                        <nui-icon [icon]=\"icon.name\"></nui-icon>\n                        <figcaption class=\"mt-2\">{{icon.name}}</figcaption>\n                    </figure>\n                </div>\n            </div>\n        </div>\n    </nui-expander>\n</div>\n","export * from \"./icon-basic/icon-basic.example.component\";\nexport * from \"./icon-docs/icon-docs.example.component\";\nexport * from \"./icon-color/icon-color.example.component\";\nexport * from \"./icon-list/icon-list.example.component\";\nexport * from \"./icon-size/icon-size.example.component\";\nexport * from \"./icon-status/icon-status.example.component\";\nexport * from \"./icon-hover/icon-hover.example.component\";\nexport * from \"./icon-counter/icon-counter.example.component\";\nexport * from \"./icon-child-status/icon-child-status.example.component\";\nexport * from \"./icon-with-text/icon-with-text.example.component\";\nexport * from \"./icon-visual-test/icon-visual-test.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-color-example\\\",\\n    templateUrl: \\\"./icon-color.example.component.html\\\",\\n})\\n\\nexport class IconColorExampleComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-docs-example\\\",\\n    templateUrl: \\\"./icon-docs.example.component.html\\\",\\n})\\n\\nexport class IconDocsExampleComponent {}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiDocsModule, NuiExpanderModule, NuiIconModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport {\n    IconBasicExampleComponent,\n    IconChildStatusExampleComponent,\n    IconColorExampleComponent,\n    IconCounterExampleComponent,\n    IconDocsExampleComponent,\n    IconHoverExampleComponent,\n    IconListExampleComponent,\n    IconSizeExampleComponent,\n    IconStatusExampleComponent,\n    IconVisualTestComponent,\n    IconWithTextExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: IconDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"icon-visual-test\",\n        component: IconVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiIconModule,\n        NuiExpanderModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        IconBasicExampleComponent,\n        IconChildStatusExampleComponent,\n        IconColorExampleComponent,\n        IconCounterExampleComponent,\n        IconDocsExampleComponent,\n        IconListExampleComponent,\n        IconSizeExampleComponent,\n        IconStatusExampleComponent,\n        IconHoverExampleComponent,\n        IconWithTextExampleComponent,\n        IconVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class IconModule {\n}\n","export default \"import {Component} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-with-text-example\\\",\\n    templateUrl: \\\"./icon-with-text.example.component.html\\\",\\n})\\n\\nexport class IconWithTextExampleComponent {\\n    status: IconStatus = IconStatus.Up;\\n    childStatus: IconStatus = IconStatus.Sleep;\\n}\\n\";","export default \"<p>\\n    <code>&lt;nui-icon&gt;</code>, as the name implies, allows you to display an icon.\\n</p>\\n\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiIconModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    To use <code>&lt;nui-icon&gt;</code> you can set the <code>icon</code> input to the id of one of the available icon\\n    provided as part of Nova. See the <strong>Available Icons</strong> section on this page.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-icon-basic-example></nui-icon-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Size</h2>\\n<p>\\n    To override the default size of <code>&lt;nui-icon&gt;</code>, set the <code>size</code> input to the string values \\\"small\\\" (12px) or \\\"medium\\\" (20px).\\n    By default <code>size</code> is set to \\\"default\\\" (16px).\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-size\\\" exampleTitle=\\\"Size\\\">\\n    <nui-icon-size-example></nui-icon-size-example>\\n</nui-example-wrapper>\\n\\n<h2>Color</h2>\\n<p>\\n    The color of <code>&lt;nui-icon&gt;</code> can be set by passing one of the following color string values to the <code>iconColor</code> input: \\\"white\\\", \\\"light-blue\\\", \\\"gray\\\", \\\"disabled-gray\\\", \\\"primary-blue\\\", or \\\"orange\\\".\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-color\\\" exampleTitle=\\\"Color\\\">\\n    <nui-icon-color-example></nui-icon-color-example>\\n</nui-example-wrapper>\\n\\n<h2>Hover Effect</h2>\\n<p>\\n    To set the hover color of <code>&lt;nui-icon&gt;</code> pass one of the following color string values to the <code>iconHoverColor</code> input: \\\"white\\\", \\\"light-blue\\\", \\\"gray\\\", \\\"disabled-gray\\\", \\\"primary-blue\\\", or \\\"orange\\\".\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-hover\\\" exampleTitle=\\\"Hover effect\\\">\\n    <nui-icon-hover-example></nui-icon-hover-example>\\n</nui-example-wrapper>\\n\\n<h2>Status</h2>\\n<p>\\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon. Available values for the <code>status</code> input can be found in the enum <code><a href=\\\"../miscellaneous/enumerations.html#IconStatus\\\" target=\\\"_blank\\\">IconStatus</a></code>.\\n    You can also pass a string value of an appropriate status in enum e.g. <code>status=\\\"critical\\\"</code>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-status\\\" exampleTitle=\\\"Status\\\">\\n    <nui-icon-status-example></nui-icon-status-example>\\n</nui-example-wrapper>\\n\\n<h2>Child Status</h2>\\n<p>\\n    <code>&lt;nui-icon&gt;</code> can display a status sub-icon with child status. Available values for the <code>childStatus</code> input can be found in the enum <code><a href=\\\"../miscellaneous/enumerations.html#IconStatus\\\" target=\\\"_blank\\\">IconStatus</a></code>.\\n    You can also pass a string value of an appropriate status in enum e.g. <code>childStatus=\\\"critical\\\"</code>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-child-status\\\" exampleTitle=\\\"Child Status\\\">\\n    <nui-icon-child-status-example></nui-icon-child-status-example>\\n</nui-example-wrapper>\\n\\n<h2>Alignment with Text</h2>\\n<p>\\n    The example below demonstrates how to align text with the icon.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-with-text\\\" exampleTitle=\\\"Alignment with Text\\\">\\n    <nui-icon-with-text-example></nui-icon-with-text-example>\\n</nui-example-wrapper>\\n\\n<h2>Counter</h2>\\n<p>\\n    To apply a counter badge to the icon, set the <code>counter</code> input to a valid integer.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"icon-counter\\\" exampleTitle=\\\"Counter\\\">\\n    <nui-icon-counter-example></nui-icon-counter-example>\\n</nui-example-wrapper>\\n\\n<h2>Available Icons</h2>\\n<nui-example-wrapper filenamePrefix=\\\"icon-list\\\" exampleTitle=\\\"Available Icons\\\">\\n    <nui-icon-list-example></nui-icon-list-example>\\n</nui-example-wrapper>\\n\";","export default \"<div class=\\\"d-inline-flex align-items-center\\\">\\n    <nui-icon icon=\\\"printer\\\" [status]=\\\"status\\\" [childStatus]=\\\"childStatus\\\"></nui-icon>\\n    <span i18n>Managed entity name</span>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-basic-example\\\",\\n    templateUrl: \\\"./icon-basic.example.component.html\\\",\\n})\\n\\nexport class IconBasicExampleComponent {}\\n\";","export default \"import {Component, OnInit} from \\\"@angular/core\\\";\\nimport {IconStatus} from \\\"@nova-ui/bits\\\";\\n\\nimport {icons as iconsData} from \\\"../../../../../../src/lib/icon/icons\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-visual-test\\\",\\n    templateUrl: \\\"./icon-visual-test.component.html\\\",\\n})\\nexport class IconVisualTestComponent implements OnInit {\\n    public icons: any[];\\n    public categories: any[];\\n    public iconStatuses: string[] = Object.values(IconStatus);\\n\\n    public ngOnInit(): void {\\n\\n        this.icons = iconsData;\\n        this.categories = this.getCategories(iconsData);\\n    }\\n\\n    public getCategories(icons: any[]) {\\n        const categories = [];\\n        for (const icon of icons) {\\n            if (categories.indexOf(icon.category) === -1) {\\n                categories.push(icon.category);\\n            }\\n        }\\n        return categories;\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-icon-basic-example\",\n    templateUrl: \"./icon-basic.example.component.html\",\n})\n\nexport class IconBasicExampleComponent {}\n","<nui-icon icon=\"add\"></nui-icon>\n","import {Component, OnInit} from \"@angular/core\";\nimport {IconStatus} from \"@nova-ui/bits\";\n\nimport {icons as iconsData} from \"../../../../../../src/lib/icon/icons\";\n\n@Component({\n    selector: \"nui-icon-visual-test\",\n    templateUrl: \"./icon-visual-test.component.html\",\n})\nexport class IconVisualTestComponent implements OnInit {\n    public icons: any[];\n    public categories: any[];\n    public iconStatuses: string[] = Object.values(IconStatus);\n\n    public ngOnInit(): void {\n\n        this.icons = iconsData;\n        this.categories = this.getCategories(iconsData);\n    }\n\n    public getCategories(icons: any[]) {\n        const categories = [];\n        for (const icon of icons) {\n            if (categories.indexOf(icon.category) === -1) {\n                categories.push(icon.category);\n            }\n        }\n        return categories;\n    }\n}\n","<div class=\"ml-4\">\n    <div>\n        <h3>Basic icon usage</h3>\n        <nui-icon icon=\"add\" iconHoverColor=\"gray\" id=\"nui-icon-test-basic-usage\"></nui-icon>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Differrent Sizes</h3>\n        <nui-icon class=\"pr-2\" icon=\"add\" iconSize=\"small\" id=\"nui-icon-test-small-size\"></nui-icon>\n        <nui-icon class=\"pr-2\" icon=\"add\" id=\"nui-icon-test-default-size\"></nui-icon>\n        <nui-icon class=\"pr-2\" icon=\"add\" iconSize=\"medium\" id=\"nui-icon-test-medium-size\"></nui-icon>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Color</h3>\n        <div class=\"d-flex flex-row\">\n            <div class=\"d-flex flex-column pr-5\">\n                orange\n                <nui-icon icon=\"add\" iconColor=\"orange\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                light-blue\n                <nui-icon icon=\"add\" iconColor=\"light-blue\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                primary-blue\n                <nui-icon icon=\"add\" iconColor=\"primary-blue\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                gray\n                <nui-icon icon=\"add\" iconColor=\"gray\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n            <div class=\"d-flex flex-column pr-5\">\n                disabled-gray\n                <nui-icon icon=\"add\" iconColor=\"disabled-gray\" id=\"nui-icon-test-color\"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Status</h3>\n\n        <div class=\"d-flex flex-row\">\n            <div class=\"d-flex flex-column pr-5\" *ngFor=\"let status of iconStatuses\">\n                {{status}}<nui-icon icon=\"add\" status=\"{{status}}\"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Child Status</h3>\n\n        <div class=\"d-flex flex-row\">\n            <div class=\"d-flex flex-column pr-5\" *ngFor=\"let status of iconStatuses\">\n                {{status}}<nui-icon icon=\"add\" status=\"up\" childStatus=\"{{status}}\"></nui-icon>\n            </div>\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Text Alignment</h3>\n        <div class=\"d-inline-flex align-items-center\">\n            <nui-icon icon=\"printer\" status=\"critical\" childStatus=\"down\"></nui-icon>\n            Managed entity name\n        </div>\n        <hr />\n    </div>\n\n    <div>\n        <h3>Icon with Counter</h3>\n        <nui-icon icon=\"email\" [counter]=\"6\" id=\"nui-icon-test-with-counter\"></nui-icon>\n        <hr />\n    </div>\n</div>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-icon-counter-example\\\",\\n    templateUrl: \\\"./icon-counter.example.component.html\\\",\\n})\\n\\nexport class IconCounterExampleComponent {}\\n\";"],"sourceRoot":"webpack:///"}