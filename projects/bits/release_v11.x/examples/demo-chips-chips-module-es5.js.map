{"version":3,"sources":["webpack:///demo/src/components/demo/chips/chips.module.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?5c2b","webpack:///demo/src/components/demo/chips/vertical-grouped-chips/vertical-grouped-chips.example.component.ts?dd38","webpack:///demo/src/components/demo/chips/vertical-flat-chips/vertical-flat-chips.example.component.ts","webpack:///demo/src/components/demo/chips/vertical-flat-chips/vertical-flat-chips.example.component.html","webpack:///demo/src/components/demo/chips/chips-custom-css/chips-custom-css.example.component.ts","webpack:///demo/src/components/demo/chips/chips-custom-css/chips-custom-css.example.component.html","webpack:///demo/src/components/demo/chips/autohide-chips/autohide-chips.example.component.ts","webpack:///demo/src/components/demo/chips/autohide-chips/autohide-chips.example.component.html","webpack:///demo/src/components/demo/chips/chips-visual-test/chips-visual-test.component.ts?01f6","webpack:///demo/src/components/demo/chips/chips-docs/chips-docs.example.component.ts?02cf","webpack:///demo/src/components/demo/chips/basic-chips/basic-chips.example.component.html?08e7","webpack:///demo/src/components/demo/chips/basic-chips/basic-chips.example.component.ts?0f1a","webpack:///demo/src/components/demo/chips/chips.module.ts?1f57","webpack:///demo/src/components/demo/chips/chips-overflow/chips-overflow.example.component.ts","webpack:///demo/src/components/demo/chips/chips-overflow/chips-overflow.example.component.html","webpack:///demo/src/components/demo/chips/chips-overflow/chips-overflow.example.component.html?257b","webpack:///demo/src/components/demo/chips/chips-visual-test/chips-visual-test.component.ts","webpack:///demo/src/components/demo/chips/chips-visual-test/chips-visual-test.component.html","webpack:///demo/src/components/demo/chips/vertical-flat-chips/vertical-flat-chips.example.component.ts?416e","webpack:///demo/src/components/demo/chips/grouped-chips/grouped-chips.example.component.ts","webpack:///demo/src/components/demo/chips/grouped-chips/grouped-chips.example.component.html","webpack:///demo/src/components/demo/chips/chips-test/chips-test.component.ts","webpack:///demo/src/components/demo/chips/chips-test/chips-test.component.html","webpack:///demo/src/components/demo/chips/grouped-chips/grouped-chips.example.component.ts?51a2","webpack:///demo/src/components/demo/chips/index.ts","webpack:///demo/src/components/demo/chips/chips-docs/chips-docs.example.component.html?5a3f","webpack:///demo/src/components/demo/chips/chips-custom-css/chips-custom-css.example.component.html?5cee","webpack:///demo/src/components/demo/chips/chips-custom-css/chips-custom-css.example.component.ts?72c0","webpack:///demo/src/components/demo/chips/chips-docs/chips-docs.example.component.ts","webpack:///demo/src/components/demo/chips/chips-docs/chips-docs.example.component.html","webpack:///demo/src/components/demo/chips/chips-custom-css/chips-custom-css.example.component.less","webpack:///demo/src/components/demo/chips/vertical-grouped-chips/vertical-grouped-chips.example.component.html?8634","webpack:///demo/src/components/demo/chips/autohide-chips/autohide-chips.example.component.html?897b","webpack:///demo/src/components/demo/chips/index.ts?92b5","webpack:///demo/src/components/demo/chips/grouped-chips/grouped-chips.example.component.html?9bb0","webpack:///demo/src/components/demo/chips/chips-test/chips-test.component.ts?9e4c","webpack:///demo/src/components/demo/chips/vertical-flat-chips/vertical-flat-chips.example.component.html?a010","webpack:///demo/src/components/demo/chips/chips-test/chips-test.component.html?a8b4","webpack:///demo/src/components/demo/chips/basic-chips/basic-chips.example.component.ts","webpack:///demo/src/components/demo/chips/basic-chips/basic-chips.example.component.html","webpack:///demo/src/components/demo/chips/autohide-chips/autohide-chips.example.component.ts?c21d","webpack:///demo/src/components/demo/chips/vertical-grouped-chips/vertical-grouped-chips.example.component.ts","webpack:///demo/src/components/demo/chips/vertical-grouped-chips/vertical-grouped-chips.example.component.html","webpack:///demo/src/components/demo/chips/chips-visual-test/chips-visual-test.component.html?cc7c","webpack:///demo/src/components/demo/chips/chips-overflow/chips-overflow.example.component.ts?cede"],"names":["routes","path","component","data","beta","showThemeSwitcher","ChipsModule","provide","useFactory","forChild","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","verticalFlatItems","label","VerticalFlatChipsExampleComponent","verticalFlatItemsSource","flatItems","event","console","log","item","onClear","onClearAll","ChipsCustomCssExampleComponent","standaloneChips","customClass","icon","nuiChipsSet","groupedItems","items","widthChips","source","group","find","horizontalFlatItems","AutohideChipsExampleComponent","horizontalFlatItemsSource","ChipsOverflowExampleComponent","horizontalGroupedItemsSource","overflowLinesNumber","overflowPopoverPosition","bottomLeft","topLeft","popover","onClick","overflowSource","reducer","accumulator","currentValue","length","overflowCounter","reduce","updatePosition","onChipsOverflow","verticalFlatItemsVisual","ChipsVisualTestComponent","verticalGroupedItemsSource","onClearGroup","GroupedChipsExampleComponent","ChipsTestComponent","onClearVertical","onClearAllVerticalFlat","ChipsDocsExampleComponent","BasicChipsExampleComponent","VerticalGroupedChipsExampleComponent"],"mappings":"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","file":"demo-chips-chips-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiChipsModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiPopoverModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    AutohideChipsExampleComponent,\n    BasicChipsExampleComponent,\n    ChipsCustomCssExampleComponent,\n    ChipsDocsExampleComponent,\n    ChipsOverflowExampleComponent,\n    ChipsVisualTestComponent,\n    ChipsTestComponent,\n    GroupedChipsExampleComponent,\n    VerticalFlatChipsExampleComponent,\n    VerticalGroupedChipsExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: ChipsDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"overflow\",\n        component: ChipsOverflowExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"chips-visual-test\",\n        component: ChipsVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"chips-test\",\n        component: ChipsTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"custom-css\",\n        component: ChipsCustomCssExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiChipsModule,\n        NuiPopoverModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n        NuiIconModule,\n    ],\n    declarations: [\n        AutohideChipsExampleComponent,\n        BasicChipsExampleComponent,\n        ChipsDocsExampleComponent,\n        ChipsVisualTestComponent,\n        ChipsTestComponent,\n        GroupedChipsExampleComponent,\n        VerticalFlatChipsExampleComponent,\n        VerticalGroupedChipsExampleComponent,\n        ChipsOverflowExampleComponent,\n        ChipsCustomCssExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class ChipsModule {\n}\n","var map = {\n\t\"./autohide-chips/autohide-chips.example.component.html\": \"iXvk\",\n\t\"./autohide-chips/autohide-chips.example.component.ts\": \"wh30\",\n\t\"./basic-chips/basic-chips.example.component.html\": \"COdu\",\n\t\"./basic-chips/basic-chips.example.component.ts\": \"Dxpj\",\n\t\"./chips-custom-css/chips-custom-css.example.component.html\": \"XO6u\",\n\t\"./chips-custom-css/chips-custom-css.example.component.less\": \"dvd8\",\n\t\"./chips-custom-css/chips-custom-css.example.component.ts\": \"csBe\",\n\t\"./chips-docs/chips-docs.example.component.html\": \"Wj+X\",\n\t\"./chips-docs/chips-docs.example.component.ts\": \"As8a\",\n\t\"./chips-overflow/chips-overflow.example.component.html\": \"JXvR\",\n\t\"./chips-overflow/chips-overflow.example.component.ts\": \"zt6Z\",\n\t\"./chips-test/chips-test.component.html\": \"qLQO\",\n\t\"./chips-test/chips-test.component.ts\": \"nkx8\",\n\t\"./chips-visual-test/chips-visual-test.component.html\": \"zHwo\",\n\t\"./chips-visual-test/chips-visual-test.component.ts\": \"AfYg\",\n\t\"./chips.module.ts\": \"H1fG\",\n\t\"./grouped-chips/grouped-chips.example.component.html\": \"m7Bw\",\n\t\"./grouped-chips/grouped-chips.example.component.ts\": \"UaJ5\",\n\t\"./index.ts\": \"krVf\",\n\t\"./vertical-flat-chips/vertical-flat-chips.example.component.html\": \"oBAJ\",\n\t\"./vertical-flat-chips/vertical-flat-chips.example.component.ts\": \"QW4O\",\n\t\"./vertical-grouped-chips/vertical-grouped-chips.example.component.html\": \"hjRX\",\n\t\"./vertical-grouped-chips/vertical-grouped-chips.example.component.ts\": \"3TjH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"0WDX\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _cloneDeep from \\\"lodash/cloneDeep\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst groupedItems: IChipsGroup[] = [\\n    {\\n        id: \\\"statusGroupId\\\", label: \\\"Status\\\", items: [\\n            {id: \\\"statusGroupItem1\\\", label: \\\"Down\\\"},\\n            {id: \\\"statusGroupItem2\\\", label: \\\"Critical\\\"},\\n            {id: \\\"statusGroupItem3\\\", label: \\\"Warning\\\"},\\n            {id: \\\"statusGroupItem4\\\", label: \\\"Unknown\\\"},\\n            {id: \\\"statusGroupItem5\\\", label: \\\"Ok\\\"}],\\n    },\\n    {\\n        id: \\\"vendorGroupId\\\", label: \\\"Vendor\\\", items: [\\n            {id: \\\"vendorGroupItem1\\\", label: \\\"Cisco\\\"},\\n            {id: \\\"vendorGroupItem2\\\", label: \\\"Hewlett Packard\\\"},\\n            {id: \\\"vendorGroupItem3\\\", label: \\\"Uniper\\\"}],\\n    }];\\n\\n@Component({\\n    selector: \\\"nui-vertical-grouped-chips-example\\\",\\n    templateUrl: \\\"vertical-grouped-chips.example.component.html\\\",\\n})\\n\\nexport class VerticalGroupedChipsExampleComponent {\\n    public verticalGroupedItemsSource: IChipsItemsSource = {groupedItems: _cloneDeep(groupedItems)};\\n\\n    public onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`);\\n        _pull(event.group?.items || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.verticalGroupedItemsSource.groupedItems = [];\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\nimport { IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\n\nconst verticalFlatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\n@Component({\n    selector: \"nui-vertical-flat-chips-example\",\n    templateUrl: \"vertical-flat-chips.example.component.html\",\n})\n\nexport class VerticalFlatChipsExampleComponent {\n    public verticalFlatItemsSource: IChipsItemsSource = {flatItems: verticalFlatItems};\n\n    public onClear(event: { item: IChipsItem }) {\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id}`);\n        _pull(this.verticalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearAll() {\n        this.verticalFlatItemsSource.flatItems = [];\n    }\n}\n","<div style=\"max-width: 300px\">\n    <nui-chips id=\"nui-demo-chips-flat-vertical\"\n               [itemsSource]=\"verticalFlatItemsSource\"\n               title=\"Statuses\" i18n-title\n               orientation=\"vertical\"\n               (chipRemoved)=\"onClear($event)\"\n               (removeAll)=\"onClearAll()\">\n    </nui-chips>\n</div>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\nimport { IChipRemoved, IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\n\n@Component({\n    selector: \"nui-chips-custom-css-example\",\n    templateUrl: \"./chips-custom-css.example.component.html\",\n    styleUrls: [\"chips-custom-css.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class ChipsCustomCssExampleComponent {\n    public standaloneChips: Array<IChipsItem & any> = [\n        {\n            id: \"standaloneChip1\",\n            label: \"Custom Critical\",\n            customClass: [\"standalone-chip-custom-styles\", \"custom-chip-critical\"],\n            icon: \"severity_critical\",\n        },\n        {\n            id: \"standaloneChip2\",\n            label: \"Custom Warning\",\n            customClass: [\"standalone-chip-custom-styles\", \"custom-chip-warning\"],\n            icon: \"severity_warning\",\n        },\n        {\n            id: \"standaloneChip3\",\n            label: \"Custom Info\",\n            customClass: [\"standalone-chip-custom-styles\", \"custom-chip-info\"],\n            icon: \"severity_info\",\n        },\n        {\n            id: \"statusGroupItem5\",\n            label: \"Disabled\",\n            customClass: [\"standalone-chip-custom-styles\", \"custom-chip-disabled\"],\n            icon: \"severity_unknown\",\n        },\n    ];\n\n    public nuiChipsSet: IChipsItemsSource = {\n        flatItems: [\n            {\n                id: \"flatId2\",\n                label: \"Critical\",\n                customClass: \"nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light\",\n            },\n            {\n                id: \"flatId3\",\n                label: \"Warning\",\n                customClass: \"nui-tag-warning nui-tag-with-hover-styles\",\n            },\n            {\n                id: \"flatId4\",\n                label: \"Info\",\n                customClass: \"nui-tag-info nui-tag-with-hover-styles nui-tag-text-light\",\n            },\n            {\n                id: \"flatId5\",\n                label: \"Ok\",\n                customClass: \"nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light\",\n            },\n        ],\n        groupedItems: [\n            {\n                id: \"statusGroupId\",\n                label: \"Grouped Statuses\",\n                items: [\n                    {\n                        id: \"statusGroupItem2\",\n                        label: \"Critical\",\n                        customClass: \"nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light\",\n                    },\n                    {\n                        id: \"statusGroupItem3\",\n                        label: \"Warning\",\n                        customClass: \"nui-tag-warning nui-tag-with-hover-styles\",\n                    },\n                    {\n                        id: \"statusGroupItem4\",\n                        label: \"Unknown\",\n                    },\n                    {\n                        id: \"statusGroupItem5\",\n                        label: \"Ok\",\n                        customClass: \"nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light\",\n                    },\n                ],\n            },\n        ],\n    };\n\n\n    public widthChips: Array<IChipsItem & any> = [\n        {\n            id: \"widthChip1\",\n            label: \"Chip with default width and very very very very very very very long title \",\n        },\n        {\n            id: \"widthChip2\",\n            label: \"Chip with unset width and a very very very very very very very long title \",\n            customClass: \"unlimited-width\",\n        },\n    ];\n\n\n    public onClear(event: IChipRemoved) {\n        const source = event.group\n            ? this.nuiChipsSet.groupedItems?.find((group) => group.id === event.group?.id)?.items\n            : this.nuiChipsSet.flatItems;\n        _pull(source || [], event.item);\n    }\n\n    public onClearAll() {\n        this.nuiChipsSet.flatItems = [];\n        this.nuiChipsSet.groupedItems = [];\n    }\n\n}\n","<h3>Standalone chips</h3>\n<div id=\"standalone-chips\" class=\"mb-5\">\n    <nui-chip *ngFor=\"let chip of standaloneChips\"\n        [item]=\"chip\"\n        [customClass]=\"chip.customClass\"\n    ><nui-icon *ngIf=\"chip.icon\"\n        [icon]=\"chip.icon\"\n        iconSize=\"small\"\n        class=\"mr-1\"\n    ></nui-icon>\n        {{chip.label}}\n    </nui-chip>\n</div>\n\n<h3>nui-chips Group set</h3>\n<nui-chips id=\"nui-demo-chips-custom-css\"\n    title=\"Statuses\"\n    orientation=\"vertical\"\n    customClass=\"nui-chips-custom-styles\"\n    [itemsSource]=\"nuiChipsSet\"\n    (chipRemoved)=\"onClear($event)\"\n    (removeAll)=\"onClearAll()\">\n</nui-chips>\n\n<h3>Unset Width</h3>\n<div id=\"chips-width-example\" class=\"mb-5\">\n    <nui-chip *ngFor=\"let chip of widthChips\"\n        [item]=\"chip\"\n        [customClass]=\"chip.customClass\"\n    ></nui-chip>\n</div>\n","import { Component } from \"@angular/core\";\nimport { IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\n@Component({\n    selector: \"nui-autohide-chips-example\",\n    templateUrl: \"autohide-chips.example.component.html\",\n})\nexport class AutohideChipsExampleComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = { flatItems: horizontalFlatItems};\n\n    public onClear(event: { item: IChipsItem }) {\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id}`);\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearAll() {\n        this.horizontalFlatItemsSource.flatItems = [];\n    }\n}\n","<nui-chips id=\"nui-demo-chips-autohide\"\n           [autoHide]=\"false\"\n           [itemsSource]=\"horizontalFlatItemsSource\"\n           (chipRemoved)=\"onClear($event)\"\n           (removeAll)=\"onClearAll()\">\n</nui-chips>\n","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _cloneDeep from \\\"lodash/cloneDeep\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst horizontalFlatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\nconst groupedItems: IChipsGroup[] = [\\n    {\\n        id: \\\"statusGroupId\\\", label: \\\"Status\\\", items: [\\n            {id: \\\"statusGroupItem1\\\", label: \\\"Down\\\"},\\n            {id: \\\"statusGroupItem2\\\", label: \\\"Critical\\\"},\\n            {id: \\\"statusGroupItem3\\\", label: \\\"Warning\\\"},\\n            {id: \\\"statusGroupItem4\\\", label: \\\"Unknown\\\"},\\n            {id: \\\"statusGroupItem5\\\", label: \\\"Ok\\\"}],\\n    },\\n    {\\n        id: \\\"vendorGroupId\\\", label: \\\"Vendor\\\", items: [\\n            {id: \\\"vendorGroupItem1\\\", label: \\\"Cisco\\\"},\\n            {id: \\\"vendorGroupItem2\\\", label: \\\"Hewlett Packard\\\"},\\n            {id: \\\"vendorGroupItem3\\\", label: \\\"Uniper\\\"}],\\n    },\\n];\\n\\nconst verticalFlatItemsVisual: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"nui-chips-visual-test\\\",\\n    templateUrl: \\\"./chips-visual-test.component.html\\\",\\n})\\nexport class ChipsVisualTestComponent {\\n\\n    public horizontalFlatItemsSource: IChipsItemsSource = {flatItems: horizontalFlatItems};\\n    public horizontalGroupedItemsSource = {groupedItems: _cloneDeep(groupedItems)};\\n    public verticalFlatItemsSource: IChipsItemsSource = {flatItems: verticalFlatItemsVisual};\\n    public verticalGroupedItemsSource: IChipsItemsSource = {groupedItems: _cloneDeep(groupedItems)};\\n\\n    public onClear(event: { item: IChipsItem }) {\\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\\n    }\\n\\n    public onClearGroup(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        _pull(event.group?.items || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.verticalGroupedItemsSource.groupedItems = [];\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-chips-docs-example\\\",\\n    templateUrl: \\\"./chips-docs.example.component.html\\\",\\n})\\nexport class ChipsDocsExampleComponent { }\\n\";","export default \"<nui-chips id=\\\"nui-demo-chips-flat-horizontal\\\"\\n           [itemsSource]=\\\"horizontalFlatItemsSource\\\"\\n           (chipRemoved)=\\\"onClear($event)\\\"\\n           (removeAll)=\\\"onClearAll()\\\">\\n</nui-chips>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst horizontalFlatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"nui-basic-chips-example\\\",\\n    templateUrl: \\\"./basic-chips.example.component.html\\\",\\n})\\n\\nexport class BasicChipsExampleComponent {\\n    public horizontalFlatItemsSource: IChipsItemsSource = { flatItems: horizontalFlatItems};\\n\\n    public onClear(event: { item: IChipsItem }) {\\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id}`);\\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.horizontalFlatItemsSource.flatItems = [];\\n    }\\n\\n}\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiChipsModule,\\n    NuiDocsModule,\\n    NuiIconModule,\\n    NuiPopoverModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    AutohideChipsExampleComponent,\\n    BasicChipsExampleComponent,\\n    ChipsCustomCssExampleComponent,\\n    ChipsDocsExampleComponent,\\n    ChipsOverflowExampleComponent,\\n    ChipsVisualTestComponent,\\n    ChipsTestComponent,\\n    GroupedChipsExampleComponent,\\n    VerticalFlatChipsExampleComponent,\\n    VerticalGroupedChipsExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: ChipsDocsExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.beta,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"overflow\\\",\\n        component: ChipsOverflowExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.beta,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"chips-visual-test\\\",\\n        component: ChipsVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"chips-test\\\",\\n        component: ChipsTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"custom-css\\\",\\n        component: ChipsCustomCssExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n        NuiIconModule,\\n    ],\\n    declarations: [\\n        AutohideChipsExampleComponent,\\n        BasicChipsExampleComponent,\\n        ChipsDocsExampleComponent,\\n        ChipsVisualTestComponent,\\n        ChipsTestComponent,\\n        GroupedChipsExampleComponent,\\n        VerticalFlatChipsExampleComponent,\\n        VerticalGroupedChipsExampleComponent,\\n        ChipsOverflowExampleComponent,\\n        ChipsCustomCssExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class ChipsModule {\\n}\\n\";","import { Component, ViewChild } from \"@angular/core\";\nimport {\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\n\nconst flatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n];\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: \"statusGroupId\", label: \"Status\", items: [\n            {id: \"statusGroupItem1\", label: \"Down\"},\n            {id: \"statusGroupItem2\", label: \"Critical\"},\n            {id: \"statusGroupItem3\", label: \"Warning\"},\n            {id: \"statusGroupItem4\", label: \"Unknown\"},\n            {id: \"statusGroupItem5\", label: \"Ok\"}],\n    },\n    {\n        id: \"vendorGroupId\", label: \"Vendor\", items: [\n            {id: \"vendorGroupItem1\", label: \"Cisco\"},\n            {id: \"vendorGroupItem2\", label: \"Hewlett Packard\"},\n            {id: \"vendorGroupItem3\", label: \"Uniper\"}],\n    },\n    {\n        id: \"statusGroupId\", label: \"Status\", items: [\n            {id: \"statusGroupItem1\", label: \"Down\"},\n            {id: \"statusGroupItem2\", label: \"Critical\"},\n            {id: \"statusGroupItem3\", label: \"Warning\"},\n            {id: \"statusGroupItem4\", label: \"Unknown\"},\n            {id: \"statusGroupItem5\", label: \"Ok\"}],\n    },\n    {\n        id: \"vendorGroupId\", label: \"Vendor\", items: [\n            {id: \"vendorGroupItem1\", label: \"Cisco\"},\n            {id: \"vendorGroupItem2\", label: \"Hewlett Packard\"},\n            {id: \"vendorGroupItem3\", label: \"Uniper\"}],\n    },\n];\n\n@Component({\n    selector: \"nui-chips-overflow-example\",\n    templateUrl: \"./chips-overflow.example.component.html\",\n    styles: [`.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }`],\n})\nexport class ChipsOverflowExampleComponent {\n    public horizontalGroupedItemsSource = { flatItems, groupedItems };\n\n    public overflowLinesNumber = 2;\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n\n    public onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`);\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.horizontalGroupedItemsSource.flatItems || [], event.item);\n        }\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.horizontalGroupedItemsSource.groupedItems = [];\n        this.horizontalGroupedItemsSource.flatItems = [];\n        this.popover?.onClick(e);\n    }\n\n    onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n}\n","<nui-chips id=\"nui-demo-chips-overflow\"\n           [itemsSource]=\"horizontalGroupedItemsSource\"\n           [overflowLinesNumber]=\"overflowLinesNumber\"\n           [overflow]=\"true\"\n           (chipRemoved)=\"onClear($event)\"\n           (chipsOverflowed)=\"onChipsOverflow($event)\"\n           (removeAll)=\"onClearAll($event)\">\n    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n        <nui-popover trigger=\"click\"\n                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                     [template]=\"popoverWithClickTrigger\">\n            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n        </nui-popover>\n    </div>\n</nui-chips>\n\n<ng-template #popoverWithClickTrigger>\n    <nui-chips-overflow\n        [overflowSource]=\"overflowSource\"\n        [itemsSource]=\"horizontalGroupedItemsSource\"\n        (chipRemoved)=\"onClear($event)\"\n        orientation=\"vertical\">\n    </nui-chips-overflow>\n</ng-template>\n","export default \"<nui-chips id=\\\"nui-demo-chips-overflow\\\"\\n           [itemsSource]=\\\"horizontalGroupedItemsSource\\\"\\n           [overflowLinesNumber]=\\\"overflowLinesNumber\\\"\\n           [overflow]=\\\"true\\\"\\n           (chipRemoved)=\\\"onClear($event)\\\"\\n           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\"\\n           (removeAll)=\\\"onClearAll($event)\\\">\\n    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n        <nui-popover trigger=\\\"click\\\"\\n                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                     [template]=\\\"popoverWithClickTrigger\\\">\\n            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n        </nui-popover>\\n    </div>\\n</nui-chips>\\n\\n<ng-template #popoverWithClickTrigger>\\n    <nui-chips-overflow\\n        [overflowSource]=\\\"overflowSource\\\"\\n        [itemsSource]=\\\"horizontalGroupedItemsSource\\\"\\n        (chipRemoved)=\\\"onClear($event)\\\"\\n        orientation=\\\"vertical\\\">\\n    </nui-chips-overflow>\\n</ng-template>\\n\";","import { Component } from \"@angular/core\";\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _pull from \"lodash/pull\";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: \"statusGroupId\", label: \"Status\", items: [\n            {id: \"statusGroupItem1\", label: \"Down\"},\n            {id: \"statusGroupItem2\", label: \"Critical\"},\n            {id: \"statusGroupItem3\", label: \"Warning\"},\n            {id: \"statusGroupItem4\", label: \"Unknown\"},\n            {id: \"statusGroupItem5\", label: \"Ok\"}],\n    },\n    {\n        id: \"vendorGroupId\", label: \"Vendor\", items: [\n            {id: \"vendorGroupItem1\", label: \"Cisco\"},\n            {id: \"vendorGroupItem2\", label: \"Hewlett Packard\"},\n            {id: \"vendorGroupItem3\", label: \"Uniper\"}],\n    },\n];\n\nconst verticalFlatItemsVisual: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\n@Component({\n    selector: \"nui-chips-visual-test\",\n    templateUrl: \"./chips-visual-test.component.html\",\n})\nexport class ChipsVisualTestComponent {\n\n    public horizontalFlatItemsSource: IChipsItemsSource = {flatItems: horizontalFlatItems};\n    public horizontalGroupedItemsSource = {groupedItems: _cloneDeep(groupedItems)};\n    public verticalFlatItemsSource: IChipsItemsSource = {flatItems: verticalFlatItemsVisual};\n    public verticalGroupedItemsSource: IChipsItemsSource = {groupedItems: _cloneDeep(groupedItems)};\n\n    public onClear(event: { item: IChipsItem }) {\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearGroup(event: { item: IChipsItem, group?: IChipsGroup }) {\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll() {\n        this.verticalGroupedItemsSource.groupedItems = [];\n    }\n}\n","<div class=\"container\">\n    <div>\n        <h3>Basic chips</h3>\n        <nui-chips id=\"nui-demo-chips-flat-horizontal-visual\"\n                    [itemsSource]=\"horizontalFlatItemsSource\"\n                    (chipRemoved)=\"onClear($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n    <hr/>\n\n    <div>\n        <h3>Chips grouped</h3>\n        <nui-chips id=\"nui-demo-chips-grouped-horizontal-visual\"\n                    [itemsSource]=\"horizontalGroupedItemsSource\"\n                    (chipRemoved)=\"onClearGroup($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n    <hr/>\n\n    <div>\n        <h3>Chips vertical</h3>\n        <nui-chips id=\"nui-demo-chips-vertical-visual\"\n                    [itemsSource]=\"verticalFlatItemsSource\"\n                    title=\"Statuses\" i18n-title\n                    orientation=\"vertical\"\n                    (chipRemoved)=\"onClear($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n    <hr/>\n\n    <div>\n        <h3>Chips vertical grouped</h3>\n        <nui-chips id=\"nui-demo-chips-grouped-vertical-visual\"\n                    [itemsSource]=\"verticalGroupedItemsSource\"\n                    title=\"Filters\" i18n-title\n                    orientation=\"vertical\"\n                    (chipRemoved)=\"onClear($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n    <hr/>\n\n    <div>\n        <h3>Chips overflow</h3>\n        <nui-chips-overflow-example></nui-chips-overflow-example>\n    </div>\n    <hr/>\n\n    <div>\n        <h3>Chip content-projection</h3>\n        <nui-chip>Custom content <nui-icon class=\"ml-2\" iconSize=\"small\" icon=\"add\"></nui-icon></nui-chip>\n    </div>\n    <hr/>\n\n    <div>\n        <h3>Chips Custom Css</h3>\n        <nui-chips-custom-css-example></nui-chips-custom-css-example>\n    </div>\n    <hr/>\n</div>\n","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst verticalFlatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"nui-vertical-flat-chips-example\\\",\\n    templateUrl: \\\"vertical-flat-chips.example.component.html\\\",\\n})\\n\\nexport class VerticalFlatChipsExampleComponent {\\n    public verticalFlatItemsSource: IChipsItemsSource = {flatItems: verticalFlatItems};\\n\\n    public onClear(event: { item: IChipsItem }) {\\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id}`);\\n        _pull(this.verticalFlatItemsSource.flatItems || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.verticalFlatItemsSource.flatItems = [];\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\nimport { IChipsGroup, IChipsItem } from \"@nova-ui/bits\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _pull from \"lodash/pull\";\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: \"statusGroupId\", label: \"Status\", items: [\n            {id: \"statusGroupItem1\", label: \"Down\"},\n            {id: \"statusGroupItem2\", label: \"Critical\"},\n            {id: \"statusGroupItem3\", label: \"Warning\"},\n            {id: \"statusGroupItem4\", label: \"Unknown\"},\n            {id: \"statusGroupItem5\", label: \"Ok\"}],\n    },\n    {\n        id: \"vendorGroupId\", label: \"Vendor\", items: [\n            {id: \"vendorGroupItem1\", label: \"Cisco\"},\n            {id: \"vendorGroupItem2\", label: \"Hewlett Packard\"},\n            {id: \"vendorGroupItem3\", label: \"Uniper\"}],\n    },\n];\n\n@Component({\n    selector: \"nui-grouped-chips-example\",\n    templateUrl: \"./grouped-chips.example.component.html\",\n})\n\nexport class GroupedChipsExampleComponent {\n    public horizontalGroupedItemsSource = {groupedItems: _cloneDeep(groupedItems)};\n\n    public onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`);\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll() {\n        this.horizontalGroupedItemsSource.groupedItems = [];\n    }\n}\n","<nui-chips id=\"nui-demo-chips-grouped-horizontal\"\n           [itemsSource]=\"horizontalGroupedItemsSource\"\n           (chipRemoved)=\"onClear($event)\"\n           (removeAll)=\"onClearAll()\">\n</nui-chips>\n","import { Component } from \"@angular/core\";\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _pull from \"lodash/pull\";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\nconst verticalFlatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: \"statusGroupId\", label: \"Status\", items: [\n            {id: \"statusGroupItem1\", label: \"Down\"},\n            {id: \"statusGroupItem2\", label: \"Critical\"},\n            {id: \"statusGroupItem3\", label: \"Warning\"},\n            {id: \"statusGroupItem4\", label: \"Unknown\"},\n            {id: \"statusGroupItem5\", label: \"Ok\"}],\n    },\n    {\n        id: \"vendorGroupId\", label: \"Vendor\", items: [\n            {id: \"vendorGroupItem1\", label: \"Cisco\"},\n            {id: \"vendorGroupItem2\", label: \"Hewlett Packard\"},\n            {id: \"vendorGroupItem3\", label: \"Uniper\"}],\n    },\n];\n\n@Component({\n    selector: \"chips-test-component\",\n    templateUrl: \"./chips-test.component.html\",\n})\n\nexport class ChipsTestComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = {flatItems: horizontalFlatItems};\n    public horizontalGroupedItemsSource = {groupedItems: _cloneDeep(groupedItems)};\n    public verticalFlatItemsSource: IChipsItemsSource = {flatItems: verticalFlatItems};\n    public verticalGroupedItemsSource: IChipsItemsSource = {groupedItems: _cloneDeep(groupedItems)};\n\n    public onClear(event: { item: IChipsItem }) {\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearVertical(event: { item: IChipsItem }) {\n        _pull(this.verticalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearGroup(event: { item: IChipsItem, group?: IChipsGroup }) {\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll() {\n        this.verticalGroupedItemsSource.groupedItems = [];\n    }\n\n    public onClearAllVerticalFlat() {\n        this.verticalFlatItemsSource.flatItems = [];\n    }\n}\n","<div class=\"container\">\n    <div>\n        <nui-chips id=\"nui-demo-chips-flat-horizontal\"\n                    [autoHide]=\"true\"\n                    [itemsSource]=\"horizontalFlatItemsSource\"\n                    (chipRemoved)=\"onClear($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips id=\"nui-demo-chips-flat-vertical\"\n                   [autoHide]=\"true\"\n                   title=\"Statuses\"\n                   [itemsSource]=\"verticalFlatItemsSource\"\n                   orientation=\"vertical\"\n                   (chipRemoved)=\"onClearVertical($event)\"\n                   (removeAll)=\"onClearAllVerticalFlat()\">\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips id=\"nui-demo-chips-grouped-horizontal\"\n                    [autoHide]=\"false\"\n                    [itemsSource]=\"horizontalGroupedItemsSource\"\n                    (chipRemoved)=\"onClearGroup($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips id=\"nui-demo-chips-vertical\"\n                    [autoHide]=\"false\"\n                    [itemsSource]=\"verticalFlatItemsSource\"\n                    orientation=\"vertical\"\n                    (chipRemoved)=\"onClearVertical($event)\"\n                    (removeAll)=\"onClearAllVerticalFlat()\">\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips id=\"nui-demo-chips-grouped-vertical\"\n                    [autoHide]=\"true\"\n                    title=\"Filters\"\n                    [itemsSource]=\"verticalGroupedItemsSource\"\n                    orientation=\"vertical\"\n                    (chipRemoved)=\"onClearGroup($event)\"\n                    (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n\n    <div>\n        <nui-chips id=\"nui-demo-chips-autohide\"\n           [autoHide]=\"false\"\n           [itemsSource]=\"horizontalFlatItemsSource\"\n           (chipRemoved)=\"onClear($event)\"\n           (removeAll)=\"onClearAll()\">\n        </nui-chips>\n    </div>\n \n    <div>\n        <nui-chips-overflow-example id=\"nui-demo-chips-overflow\"></nui-chips-overflow-example>\n    </div>\n</div>\n","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsGroup, IChipsItem } from \\\"@nova-ui/bits\\\";\\nimport _cloneDeep from \\\"lodash/cloneDeep\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst groupedItems: IChipsGroup[] = [\\n    {\\n        id: \\\"statusGroupId\\\", label: \\\"Status\\\", items: [\\n            {id: \\\"statusGroupItem1\\\", label: \\\"Down\\\"},\\n            {id: \\\"statusGroupItem2\\\", label: \\\"Critical\\\"},\\n            {id: \\\"statusGroupItem3\\\", label: \\\"Warning\\\"},\\n            {id: \\\"statusGroupItem4\\\", label: \\\"Unknown\\\"},\\n            {id: \\\"statusGroupItem5\\\", label: \\\"Ok\\\"}],\\n    },\\n    {\\n        id: \\\"vendorGroupId\\\", label: \\\"Vendor\\\", items: [\\n            {id: \\\"vendorGroupItem1\\\", label: \\\"Cisco\\\"},\\n            {id: \\\"vendorGroupItem2\\\", label: \\\"Hewlett Packard\\\"},\\n            {id: \\\"vendorGroupItem3\\\", label: \\\"Uniper\\\"}],\\n    },\\n];\\n\\n@Component({\\n    selector: \\\"nui-grouped-chips-example\\\",\\n    templateUrl: \\\"./grouped-chips.example.component.html\\\",\\n})\\n\\nexport class GroupedChipsExampleComponent {\\n    public horizontalGroupedItemsSource = {groupedItems: _cloneDeep(groupedItems)};\\n\\n    public onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`);\\n        _pull(event.group?.items || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.horizontalGroupedItemsSource.groupedItems = [];\\n    }\\n}\\n\";","export * from \"./chips-docs/chips-docs.example.component\";\nexport * from \"./basic-chips/basic-chips.example.component\";\nexport * from \"./grouped-chips/grouped-chips.example.component\";\nexport * from \"./vertical-flat-chips/vertical-flat-chips.example.component\";\nexport * from \"./vertical-grouped-chips/vertical-grouped-chips.example.component\";\nexport * from \"./autohide-chips/autohide-chips.example.component\";\nexport * from \"./chips-visual-test/chips-visual-test.component\";\nexport * from \"./chips-overflow/chips-overflow.example.component\";\nexport * from \"./chips-custom-css/chips-custom-css.example.component\";\nexport * from \"./chips-custom-css/chips-custom-css.example.component\";\nexport * from \"./chips-test/chips-test.component\";\n","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiChipsModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    To implement basic <code>nui-chips</code> you need to pass <code>[itemsSource]</code> property to\\n    <code>nui-chips</code>.\\n    As it has flat data structure you need to pass your array of items to <code>flatItems</code> key of your itemsSource\\n    object because it has <a href=\\\"../interfaces/IChipsItemsSource.html#source\\\" target=\\\"_blank\\\">IChipsItemsSource</a>\\n    type.\\n    Also you need to pass method to <code>(chipRemoved)</code> output which will handle removing chips and some other\\n    functionality if you need it.\\n</p>\\n<p>\\n    Another thing is that by default there is a link which says \\\"Clear All\\\" and by clicking it you can remove all the\\n    chips. To make that happen pass method to <code>(removeAll)</code> output and clear your itemsSource.You can modify\\n    the link text by setting the <code>[removeAllLinkText]</code> input, or you can turn the feature off by passing\\n    false to the <code>[allowRemoveAll]</code> input.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"basic-chips\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-basic-chips-example></nui-basic-chips-example>\\n</nui-example-wrapper>\\n<h2>Grouped Data</h2>\\n<p>\\n    Implementing chips with grouped data is similar to implementing basic <code>nui-chips</code> with flat data. You\\n    need to pass data as an array of\\n    <a href=\\\"../interfaces/IChipsGroup.html#source\\\" target=\\\"_blank\\\">IChipsGroup</a> and set the\\n    <code>(chipRemoved)</code> output and <code>(removeAll)</code> if you need it.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"grouped-chips\\\" exampleTitle=\\\"Grouped Data\\\">\\n    <nui-grouped-chips-example></nui-grouped-chips-example>\\n</nui-example-wrapper>\\n<h2>Vertical Orientation</h2>\\n<p>\\n    Implementing vertical chips is the same as implementing horizontal, you only need to pass additional properties such\\n    as <code>orientation=\\\"vertical\\\"</code> and <code>[title]</code>.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"vertical-flat-chips\\\" exampleTitle=\\\"Vertical Flat Data\\\">\\n    <nui-vertical-flat-chips-example></nui-vertical-flat-chips-example>\\n</nui-example-wrapper>\\n<nui-example-wrapper filenamePrefix=\\\"vertical-grouped-chips\\\" exampleTitle=\\\"Vertical Grouped Data\\\">\\n    <nui-vertical-grouped-chips-example></nui-vertical-grouped-chips-example>\\n</nui-example-wrapper>\\n<h2>Autohide</h2>\\n<p>\\n    You can reserve space for the component when the itemsSource is empty by passing <code>[autoHide]=\\\"false\\\"</code> so\\n    that when the itemsSource is empty then there will remain some space at the position where component was. Default\\n    value is true.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"autohide-chips\\\" exampleTitle=\\\"Autohide\\\">\\n    <nui-autohide-chips-example></nui-autohide-chips-example>\\n</nui-example-wrapper>\\n\\n<h2>Overflow</h2>\\n<p>\\n    This example shows how to handle chips overflow by adding a counter at the end of the second row, which indicates the\\n    number of chips which are overflowed instead of creating a new row. For that, you need to add <code>#overflowCounterLabel</code> which\\n    marks the area with counter and popover for incorporating it into <code>nui-chips</code> as Content Projection. Set property <code>overflow</code> to\\n    <code>true</code> and add handler for the <code>chipsOverflowed</code> Output to get overflowed items. Set overflowed items to the new\\n    property which would be as data source of overflowed chips for the <code>nui-chips-overflow</code> component. Add a <code>nui-chips-overflowed__counter</code>\\n    class with styles for counter (see inside chips-overflow.example.component.ts file)<code>overflowLinesNumber</code>\\n    is used for limitation of chips rows, 1 by default. You can change it for you own needs.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"chips-overflow\\\" exampleTitle=\\\"Overflow\\\">\\n    <nui-chips-overflow-example></nui-chips-overflow-example>\\n</nui-example-wrapper>\\n\\n<h2>Custom Css</h2>\\n<p>To use custom styling for chips use <code>customClass</code> property.</p>\\n<p>You can do that for separate <code>nui-chip</code>, <code>nui-chips</code> set or <code>nui-chips</code> group.</p>\\n<p>\\n    It's also possible to use\\n    <a href=\\\"../additional-documentation/nova-styles/tag.html\\\" target=\\\"_blank\\\">Nui Tag</a>\\n    classes width styles for chips. To do that, just pass the related style to <code>customClass</code>.\\n</p>\\n<p>To unset <code>max-width</code> on the chip, pass <code>unlimited-width</code> to <code>customClass</code>.</p>\\n<nui-example-wrapper filenamePrefix=\\\"custom-css\\\" exampleTitle=\\\"Custom Css\\\">\\n    <nui-chips-custom-css-example></nui-chips-custom-css-example>\\n</nui-example-wrapper>\\n\";","export default \"<h3>Standalone chips</h3>\\n<div id=\\\"standalone-chips\\\" class=\\\"mb-5\\\">\\n    <nui-chip *ngFor=\\\"let chip of standaloneChips\\\"\\n        [item]=\\\"chip\\\"\\n        [customClass]=\\\"chip.customClass\\\"\\n    ><nui-icon *ngIf=\\\"chip.icon\\\"\\n        [icon]=\\\"chip.icon\\\"\\n        iconSize=\\\"small\\\"\\n        class=\\\"mr-1\\\"\\n    ></nui-icon>\\n        {{chip.label}}\\n    </nui-chip>\\n</div>\\n\\n<h3>nui-chips Group set</h3>\\n<nui-chips id=\\\"nui-demo-chips-custom-css\\\"\\n    title=\\\"Statuses\\\"\\n    orientation=\\\"vertical\\\"\\n    customClass=\\\"nui-chips-custom-styles\\\"\\n    [itemsSource]=\\\"nuiChipsSet\\\"\\n    (chipRemoved)=\\\"onClear($event)\\\"\\n    (removeAll)=\\\"onClearAll()\\\">\\n</nui-chips>\\n\\n<h3>Unset Width</h3>\\n<div id=\\\"chips-width-example\\\" class=\\\"mb-5\\\">\\n    <nui-chip *ngFor=\\\"let chip of widthChips\\\"\\n        [item]=\\\"chip\\\"\\n        [customClass]=\\\"chip.customClass\\\"\\n    ></nui-chip>\\n</div>\\n\";","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\nimport { IChipRemoved, IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\n@Component({\\n    selector: \\\"nui-chips-custom-css-example\\\",\\n    templateUrl: \\\"./chips-custom-css.example.component.html\\\",\\n    styleUrls: [\\\"chips-custom-css.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\n\\nexport class ChipsCustomCssExampleComponent {\\n    public standaloneChips: Array<IChipsItem & any> = [\\n        {\\n            id: \\\"standaloneChip1\\\",\\n            label: \\\"Custom Critical\\\",\\n            customClass: [\\\"standalone-chip-custom-styles\\\", \\\"custom-chip-critical\\\"],\\n            icon: \\\"severity_critical\\\",\\n        },\\n        {\\n            id: \\\"standaloneChip2\\\",\\n            label: \\\"Custom Warning\\\",\\n            customClass: [\\\"standalone-chip-custom-styles\\\", \\\"custom-chip-warning\\\"],\\n            icon: \\\"severity_warning\\\",\\n        },\\n        {\\n            id: \\\"standaloneChip3\\\",\\n            label: \\\"Custom Info\\\",\\n            customClass: [\\\"standalone-chip-custom-styles\\\", \\\"custom-chip-info\\\"],\\n            icon: \\\"severity_info\\\",\\n        },\\n        {\\n            id: \\\"statusGroupItem5\\\",\\n            label: \\\"Disabled\\\",\\n            customClass: [\\\"standalone-chip-custom-styles\\\", \\\"custom-chip-disabled\\\"],\\n            icon: \\\"severity_unknown\\\",\\n        },\\n    ];\\n\\n    public nuiChipsSet: IChipsItemsSource = {\\n        flatItems: [\\n            {\\n                id: \\\"flatId2\\\",\\n                label: \\\"Critical\\\",\\n                customClass: \\\"nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light\\\",\\n            },\\n            {\\n                id: \\\"flatId3\\\",\\n                label: \\\"Warning\\\",\\n                customClass: \\\"nui-tag-warning nui-tag-with-hover-styles\\\",\\n            },\\n            {\\n                id: \\\"flatId4\\\",\\n                label: \\\"Info\\\",\\n                customClass: \\\"nui-tag-info nui-tag-with-hover-styles nui-tag-text-light\\\",\\n            },\\n            {\\n                id: \\\"flatId5\\\",\\n                label: \\\"Ok\\\",\\n                customClass: \\\"nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light\\\",\\n            },\\n        ],\\n        groupedItems: [\\n            {\\n                id: \\\"statusGroupId\\\",\\n                label: \\\"Grouped Statuses\\\",\\n                items: [\\n                    {\\n                        id: \\\"statusGroupItem2\\\",\\n                        label: \\\"Critical\\\",\\n                        customClass: \\\"nui-tag-critical nui-tag-with-hover-styles nui-tag-text-light\\\",\\n                    },\\n                    {\\n                        id: \\\"statusGroupItem3\\\",\\n                        label: \\\"Warning\\\",\\n                        customClass: \\\"nui-tag-warning nui-tag-with-hover-styles\\\",\\n                    },\\n                    {\\n                        id: \\\"statusGroupItem4\\\",\\n                        label: \\\"Unknown\\\",\\n                    },\\n                    {\\n                        id: \\\"statusGroupItem5\\\",\\n                        label: \\\"Ok\\\",\\n                        customClass: \\\"nui-tag-ok nui-tag-with-hover-styles nui-tag-text-light\\\",\\n                    },\\n                ],\\n            },\\n        ],\\n    };\\n\\n\\n    public widthChips: Array<IChipsItem & any> = [\\n        {\\n            id: \\\"widthChip1\\\",\\n            label: \\\"Chip with default width and very very very very very very very long title \\\",\\n        },\\n        {\\n            id: \\\"widthChip2\\\",\\n            label: \\\"Chip with unset width and a very very very very very very very long title \\\",\\n            customClass: \\\"unlimited-width\\\",\\n        },\\n    ];\\n\\n\\n    public onClear(event: IChipRemoved) {\\n        const source = event.group\\n            ? this.nuiChipsSet.groupedItems?.find((group) => group.id === event.group?.id)?.items\\n            : this.nuiChipsSet.flatItems;\\n        _pull(source || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.nuiChipsSet.flatItems = [];\\n        this.nuiChipsSet.groupedItems = [];\\n    }\\n\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-chips-docs-example\",\n    templateUrl: \"./chips-docs.example.component.html\",\n})\nexport class ChipsDocsExampleComponent { }\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiChipsModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    To implement basic <code>nui-chips</code> you need to pass <code>[itemsSource]</code> property to\n    <code>nui-chips</code>.\n    As it has flat data structure you need to pass your array of items to <code>flatItems</code> key of your itemsSource\n    object because it has <a href=\"../interfaces/IChipsItemsSource.html#source\" target=\"_blank\">IChipsItemsSource</a>\n    type.\n    Also you need to pass method to <code>(chipRemoved)</code> output which will handle removing chips and some other\n    functionality if you need it.\n</p>\n<p>\n    Another thing is that by default there is a link which says \"Clear All\" and by clicking it you can remove all the\n    chips. To make that happen pass method to <code>(removeAll)</code> output and clear your itemsSource.You can modify\n    the link text by setting the <code>[removeAllLinkText]</code> input, or you can turn the feature off by passing\n    false to the <code>[allowRemoveAll]</code> input.\n</p>\n<nui-example-wrapper filenamePrefix=\"basic-chips\" exampleTitle=\"Basic Usage\">\n    <nui-basic-chips-example></nui-basic-chips-example>\n</nui-example-wrapper>\n<h2>Grouped Data</h2>\n<p>\n    Implementing chips with grouped data is similar to implementing basic <code>nui-chips</code> with flat data. You\n    need to pass data as an array of\n    <a href=\"../interfaces/IChipsGroup.html#source\" target=\"_blank\">IChipsGroup</a> and set the\n    <code>(chipRemoved)</code> output and <code>(removeAll)</code> if you need it.\n</p>\n<nui-example-wrapper filenamePrefix=\"grouped-chips\" exampleTitle=\"Grouped Data\">\n    <nui-grouped-chips-example></nui-grouped-chips-example>\n</nui-example-wrapper>\n<h2>Vertical Orientation</h2>\n<p>\n    Implementing vertical chips is the same as implementing horizontal, you only need to pass additional properties such\n    as <code>orientation=\"vertical\"</code> and <code>[title]</code>.\n</p>\n<nui-example-wrapper filenamePrefix=\"vertical-flat-chips\" exampleTitle=\"Vertical Flat Data\">\n    <nui-vertical-flat-chips-example></nui-vertical-flat-chips-example>\n</nui-example-wrapper>\n<nui-example-wrapper filenamePrefix=\"vertical-grouped-chips\" exampleTitle=\"Vertical Grouped Data\">\n    <nui-vertical-grouped-chips-example></nui-vertical-grouped-chips-example>\n</nui-example-wrapper>\n<h2>Autohide</h2>\n<p>\n    You can reserve space for the component when the itemsSource is empty by passing <code>[autoHide]=\"false\"</code> so\n    that when the itemsSource is empty then there will remain some space at the position where component was. Default\n    value is true.\n</p>\n<nui-example-wrapper filenamePrefix=\"autohide-chips\" exampleTitle=\"Autohide\">\n    <nui-autohide-chips-example></nui-autohide-chips-example>\n</nui-example-wrapper>\n\n<h2>Overflow</h2>\n<p>\n    This example shows how to handle chips overflow by adding a counter at the end of the second row, which indicates the\n    number of chips which are overflowed instead of creating a new row. For that, you need to add <code>#overflowCounterLabel</code> which\n    marks the area with counter and popover for incorporating it into <code>nui-chips</code> as Content Projection. Set property <code>overflow</code> to\n    <code>true</code> and add handler for the <code>chipsOverflowed</code> Output to get overflowed items. Set overflowed items to the new\n    property which would be as data source of overflowed chips for the <code>nui-chips-overflow</code> component. Add a <code>nui-chips-overflowed__counter</code>\n    class with styles for counter (see inside chips-overflow.example.component.ts file)<code>overflowLinesNumber</code>\n    is used for limitation of chips rows, 1 by default. You can change it for you own needs.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"chips-overflow\" exampleTitle=\"Overflow\">\n    <nui-chips-overflow-example></nui-chips-overflow-example>\n</nui-example-wrapper>\n\n<h2>Custom Css</h2>\n<p>To use custom styling for chips use <code>customClass</code> property.</p>\n<p>You can do that for separate <code>nui-chip</code>, <code>nui-chips</code> set or <code>nui-chips</code> group.</p>\n<p>\n    It's also possible to use\n    <a href=\"../additional-documentation/nova-styles/tag.html\" target=\"_blank\">Nui Tag</a>\n    classes width styles for chips. To do that, just pass the related style to <code>customClass</code>.\n</p>\n<p>To unset <code>max-width</code> on the chip, pass <code>unlimited-width</code> to <code>customClass</code>.</p>\n<nui-example-wrapper filenamePrefix=\"custom-css\" exampleTitle=\"Custom Css\">\n    <nui-chips-custom-css-example></nui-chips-custom-css-example>\n</nui-example-wrapper>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n// custom styles for each of standalone `nui-chip`\\n#standalone-chips {\\n    .standalone-chip-custom-styles {\\n        border: 1px solid;\\n        margin-right: @nui-space-xxs;\\n    }\\n\\n    .custom-chip-critical {\\n        .setCssVariable(border-color, nui-color-semantic-critical);\\n        .setCssVariable(background-color, nui-color-semantic-critical-bg);\\n        &:hover {\\n            .setCssVariable(border-color, nui-color-semantic-critical-hover);\\n            .setCssVariable(background-color, nui-color-semantic-critical-bg-hover);\\n        }\\n    }\\n\\n    .custom-chip-warning {\\n        .setCssVariable(border-color, nui-color-semantic-warning);\\n        .setCssVariable(background-color, nui-color-semantic-warning-bg);\\n        &:hover {\\n            .setCssVariable(border-color, nui-color-semantic-warning-hover);\\n            .setCssVariable(background-color, nui-color-semantic-warning-bg-hover);\\n        }\\n    }\\n\\n    .custom-chip-info {\\n        .setCssVariable(border-color, nui-color-semantic-info);\\n        .setCssVariable(background-color, nui-color-semantic-info-bg);\\n        &:hover {\\n            .setCssVariable(border-color, nui-color-semantic-info-hover);\\n            .setCssVariable(background-color, nui-color-semantic-info-bg-hover);\\n        }\\n    }\\n\\n    .custom-chip-disabled {\\n        cursor: not-allowed;\\n        .setCssVariable(border-color, nui-color-disabled-secondary);\\n        .setCssVariable(background-color, nui-color-disabled-secondary);\\n        .setCssVariable(color, nui-color-text-disabled);\\n\\n        // change the color of \\\"X\\\" button\\n        .nui-chip__value-remove svg * {\\n            .setCssVariable(fill, nui-color-icon-disabled);\\n        }\\n\\n        & > * > * {\\n            cursor: not-allowed;\\n        }\\n    }\\n}\\n\\n// custom styles for `nui-chips`\\n#nui-demo-chips-custom-css {\\n    // custom styles for `nui-chips`\\n    .nui-chips-custom-styles {\\n        max-width: 400px;\\n        padding: @nui-space-md;\\n    }\\n}\\n\\n\";","export default \"<div style=\\\"max-width: 300px\\\">\\n    <nui-chips id=\\\"nui-demo-chips-grouped-vertical\\\"\\n               [itemsSource]=\\\"verticalGroupedItemsSource\\\"\\n               title=\\\"Filters\\\" i18n-title\\n               orientation=\\\"vertical\\\"\\n               (chipRemoved)=\\\"onClear($event)\\\"\\n               (removeAll)=\\\"onClearAll()\\\">\\n    </nui-chips>\\n</div>\\n\";","export default \"<nui-chips id=\\\"nui-demo-chips-autohide\\\"\\n           [autoHide]=\\\"false\\\"\\n           [itemsSource]=\\\"horizontalFlatItemsSource\\\"\\n           (chipRemoved)=\\\"onClear($event)\\\"\\n           (removeAll)=\\\"onClearAll()\\\">\\n</nui-chips>\\n\";","export default \"export * from \\\"./chips-docs/chips-docs.example.component\\\";\\nexport * from \\\"./basic-chips/basic-chips.example.component\\\";\\nexport * from \\\"./grouped-chips/grouped-chips.example.component\\\";\\nexport * from \\\"./vertical-flat-chips/vertical-flat-chips.example.component\\\";\\nexport * from \\\"./vertical-grouped-chips/vertical-grouped-chips.example.component\\\";\\nexport * from \\\"./autohide-chips/autohide-chips.example.component\\\";\\nexport * from \\\"./chips-visual-test/chips-visual-test.component\\\";\\nexport * from \\\"./chips-overflow/chips-overflow.example.component\\\";\\nexport * from \\\"./chips-custom-css/chips-custom-css.example.component\\\";\\nexport * from \\\"./chips-custom-css/chips-custom-css.example.component\\\";\\nexport * from \\\"./chips-test/chips-test.component\\\";\\n\";","export default \"<nui-chips id=\\\"nui-demo-chips-grouped-horizontal\\\"\\n           [itemsSource]=\\\"horizontalGroupedItemsSource\\\"\\n           (chipRemoved)=\\\"onClear($event)\\\"\\n           (removeAll)=\\\"onClearAll()\\\">\\n</nui-chips>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _cloneDeep from \\\"lodash/cloneDeep\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst horizontalFlatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\nconst verticalFlatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\nconst groupedItems: IChipsGroup[] = [\\n    {\\n        id: \\\"statusGroupId\\\", label: \\\"Status\\\", items: [\\n            {id: \\\"statusGroupItem1\\\", label: \\\"Down\\\"},\\n            {id: \\\"statusGroupItem2\\\", label: \\\"Critical\\\"},\\n            {id: \\\"statusGroupItem3\\\", label: \\\"Warning\\\"},\\n            {id: \\\"statusGroupItem4\\\", label: \\\"Unknown\\\"},\\n            {id: \\\"statusGroupItem5\\\", label: \\\"Ok\\\"}],\\n    },\\n    {\\n        id: \\\"vendorGroupId\\\", label: \\\"Vendor\\\", items: [\\n            {id: \\\"vendorGroupItem1\\\", label: \\\"Cisco\\\"},\\n            {id: \\\"vendorGroupItem2\\\", label: \\\"Hewlett Packard\\\"},\\n            {id: \\\"vendorGroupItem3\\\", label: \\\"Uniper\\\"}],\\n    },\\n];\\n\\n@Component({\\n    selector: \\\"chips-test-component\\\",\\n    templateUrl: \\\"./chips-test.component.html\\\",\\n})\\n\\nexport class ChipsTestComponent {\\n    public horizontalFlatItemsSource: IChipsItemsSource = {flatItems: horizontalFlatItems};\\n    public horizontalGroupedItemsSource = {groupedItems: _cloneDeep(groupedItems)};\\n    public verticalFlatItemsSource: IChipsItemsSource = {flatItems: verticalFlatItems};\\n    public verticalGroupedItemsSource: IChipsItemsSource = {groupedItems: _cloneDeep(groupedItems)};\\n\\n    public onClear(event: { item: IChipsItem }) {\\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\\n    }\\n\\n    public onClearVertical(event: { item: IChipsItem }) {\\n        _pull(this.verticalFlatItemsSource.flatItems || [], event.item);\\n    }\\n\\n    public onClearGroup(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        _pull(event.group?.items || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.verticalGroupedItemsSource.groupedItems = [];\\n    }\\n\\n    public onClearAllVerticalFlat() {\\n        this.verticalFlatItemsSource.flatItems = [];\\n    }\\n}\\n\";","export default \"<div style=\\\"max-width: 300px\\\">\\n    <nui-chips id=\\\"nui-demo-chips-flat-vertical\\\"\\n               [itemsSource]=\\\"verticalFlatItemsSource\\\"\\n               title=\\\"Statuses\\\" i18n-title\\n               orientation=\\\"vertical\\\"\\n               (chipRemoved)=\\\"onClear($event)\\\"\\n               (removeAll)=\\\"onClearAll()\\\">\\n    </nui-chips>\\n</div>\\n\";","export default \"<div class=\\\"container\\\">\\n    <div>\\n        <nui-chips id=\\\"nui-demo-chips-flat-horizontal\\\"\\n                    [autoHide]=\\\"true\\\"\\n                    [itemsSource]=\\\"horizontalFlatItemsSource\\\"\\n                    (chipRemoved)=\\\"onClear($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n\\n    <div>\\n        <nui-chips id=\\\"nui-demo-chips-flat-vertical\\\"\\n                   [autoHide]=\\\"true\\\"\\n                   title=\\\"Statuses\\\"\\n                   [itemsSource]=\\\"verticalFlatItemsSource\\\"\\n                   orientation=\\\"vertical\\\"\\n                   (chipRemoved)=\\\"onClearVertical($event)\\\"\\n                   (removeAll)=\\\"onClearAllVerticalFlat()\\\">\\n        </nui-chips>\\n    </div>\\n\\n    <div>\\n        <nui-chips id=\\\"nui-demo-chips-grouped-horizontal\\\"\\n                    [autoHide]=\\\"false\\\"\\n                    [itemsSource]=\\\"horizontalGroupedItemsSource\\\"\\n                    (chipRemoved)=\\\"onClearGroup($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n\\n    <div>\\n        <nui-chips id=\\\"nui-demo-chips-vertical\\\"\\n                    [autoHide]=\\\"false\\\"\\n                    [itemsSource]=\\\"verticalFlatItemsSource\\\"\\n                    orientation=\\\"vertical\\\"\\n                    (chipRemoved)=\\\"onClearVertical($event)\\\"\\n                    (removeAll)=\\\"onClearAllVerticalFlat()\\\">\\n        </nui-chips>\\n    </div>\\n\\n    <div>\\n        <nui-chips id=\\\"nui-demo-chips-grouped-vertical\\\"\\n                    [autoHide]=\\\"true\\\"\\n                    title=\\\"Filters\\\"\\n                    [itemsSource]=\\\"verticalGroupedItemsSource\\\"\\n                    orientation=\\\"vertical\\\"\\n                    (chipRemoved)=\\\"onClearGroup($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n\\n    <div>\\n        <nui-chips id=\\\"nui-demo-chips-autohide\\\"\\n           [autoHide]=\\\"false\\\"\\n           [itemsSource]=\\\"horizontalFlatItemsSource\\\"\\n           (chipRemoved)=\\\"onClear($event)\\\"\\n           (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n \\n    <div>\\n        <nui-chips-overflow-example id=\\\"nui-demo-chips-overflow\\\"></nui-chips-overflow-example>\\n    </div>\\n</div>\\n\";","import { Component } from \"@angular/core\";\nimport { IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\n\nconst horizontalFlatItems: IChipsItem[] = [\n    {id: \"flatId1\", label: \"Down\"},\n    {id: \"flatId2\", label: \"Critical\"},\n    {id: \"flatId3\", label: \"Warning\"},\n    {id: \"flatId4\", label: \"Unknown\"},\n    {id: \"flatId5\", label: \"Ok\"},\n];\n\n@Component({\n    selector: \"nui-basic-chips-example\",\n    templateUrl: \"./basic-chips.example.component.html\",\n})\n\nexport class BasicChipsExampleComponent {\n    public horizontalFlatItemsSource: IChipsItemsSource = { flatItems: horizontalFlatItems};\n\n    public onClear(event: { item: IChipsItem }) {\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id}`);\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\n    }\n\n    public onClearAll() {\n        this.horizontalFlatItemsSource.flatItems = [];\n    }\n\n}\n","<nui-chips id=\"nui-demo-chips-flat-horizontal\"\n           [itemsSource]=\"horizontalFlatItemsSource\"\n           (chipRemoved)=\"onClear($event)\"\n           (removeAll)=\"onClearAll()\">\n</nui-chips>\n","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IChipsItem, IChipsItemsSource } from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst horizontalFlatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId4\\\", label: \\\"Unknown\\\"},\\n    {id: \\\"flatId5\\\", label: \\\"Ok\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"nui-autohide-chips-example\\\",\\n    templateUrl: \\\"autohide-chips.example.component.html\\\",\\n})\\nexport class AutohideChipsExampleComponent {\\n    public horizontalFlatItemsSource: IChipsItemsSource = { flatItems: horizontalFlatItems};\\n\\n    public onClear(event: { item: IChipsItem }) {\\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id}`);\\n        _pull(this.horizontalFlatItemsSource.flatItems || [], event.item);\\n    }\\n\\n    public onClearAll() {\\n        this.horizontalFlatItemsSource.flatItems = [];\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\nimport { IChipsGroup, IChipsItem, IChipsItemsSource } from \"@nova-ui/bits\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _pull from \"lodash/pull\";\n\nconst groupedItems: IChipsGroup[] = [\n    {\n        id: \"statusGroupId\", label: \"Status\", items: [\n            {id: \"statusGroupItem1\", label: \"Down\"},\n            {id: \"statusGroupItem2\", label: \"Critical\"},\n            {id: \"statusGroupItem3\", label: \"Warning\"},\n            {id: \"statusGroupItem4\", label: \"Unknown\"},\n            {id: \"statusGroupItem5\", label: \"Ok\"}],\n    },\n    {\n        id: \"vendorGroupId\", label: \"Vendor\", items: [\n            {id: \"vendorGroupItem1\", label: \"Cisco\"},\n            {id: \"vendorGroupItem2\", label: \"Hewlett Packard\"},\n            {id: \"vendorGroupItem3\", label: \"Uniper\"}],\n    }];\n\n@Component({\n    selector: \"nui-vertical-grouped-chips-example\",\n    templateUrl: \"vertical-grouped-chips.example.component.html\",\n})\n\nexport class VerticalGroupedChipsExampleComponent {\n    public verticalGroupedItemsSource: IChipsItemsSource = {groupedItems: _cloneDeep(groupedItems)};\n\n    public onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`);\n        _pull(event.group?.items || [], event.item);\n    }\n\n    public onClearAll() {\n        this.verticalGroupedItemsSource.groupedItems = [];\n    }\n}\n","<div style=\"max-width: 300px\">\n    <nui-chips id=\"nui-demo-chips-grouped-vertical\"\n               [itemsSource]=\"verticalGroupedItemsSource\"\n               title=\"Filters\" i18n-title\n               orientation=\"vertical\"\n               (chipRemoved)=\"onClear($event)\"\n               (removeAll)=\"onClearAll()\">\n    </nui-chips>\n</div>\n","export default \"<div class=\\\"container\\\">\\n    <div>\\n        <h3>Basic chips</h3>\\n        <nui-chips id=\\\"nui-demo-chips-flat-horizontal-visual\\\"\\n                    [itemsSource]=\\\"horizontalFlatItemsSource\\\"\\n                    (chipRemoved)=\\\"onClear($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n    <hr/>\\n\\n    <div>\\n        <h3>Chips grouped</h3>\\n        <nui-chips id=\\\"nui-demo-chips-grouped-horizontal-visual\\\"\\n                    [itemsSource]=\\\"horizontalGroupedItemsSource\\\"\\n                    (chipRemoved)=\\\"onClearGroup($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n    <hr/>\\n\\n    <div>\\n        <h3>Chips vertical</h3>\\n        <nui-chips id=\\\"nui-demo-chips-vertical-visual\\\"\\n                    [itemsSource]=\\\"verticalFlatItemsSource\\\"\\n                    title=\\\"Statuses\\\" i18n-title\\n                    orientation=\\\"vertical\\\"\\n                    (chipRemoved)=\\\"onClear($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n    <hr/>\\n\\n    <div>\\n        <h3>Chips vertical grouped</h3>\\n        <nui-chips id=\\\"nui-demo-chips-grouped-vertical-visual\\\"\\n                    [itemsSource]=\\\"verticalGroupedItemsSource\\\"\\n                    title=\\\"Filters\\\" i18n-title\\n                    orientation=\\\"vertical\\\"\\n                    (chipRemoved)=\\\"onClear($event)\\\"\\n                    (removeAll)=\\\"onClearAll()\\\">\\n        </nui-chips>\\n    </div>\\n    <hr/>\\n\\n    <div>\\n        <h3>Chips overflow</h3>\\n        <nui-chips-overflow-example></nui-chips-overflow-example>\\n    </div>\\n    <hr/>\\n\\n    <div>\\n        <h3>Chip content-projection</h3>\\n        <nui-chip>Custom content <nui-icon class=\\\"ml-2\\\" iconSize=\\\"small\\\" icon=\\\"add\\\"></nui-icon></nui-chip>\\n    </div>\\n    <hr/>\\n\\n    <div>\\n        <h3>Chips Custom Css</h3>\\n        <nui-chips-custom-css-example></nui-chips-custom-css-example>\\n    </div>\\n    <hr/>\\n</div>\\n\";","export default \"import { Component, ViewChild } from \\\"@angular/core\\\";\\nimport {\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nconst flatItems: IChipsItem[] = [\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n    {id: \\\"flatId1\\\", label: \\\"Down\\\"},\\n    {id: \\\"flatId2\\\", label: \\\"Critical\\\"},\\n    {id: \\\"flatId3\\\", label: \\\"Warning\\\"},\\n];\\n\\nconst groupedItems: IChipsGroup[] = [\\n    {\\n        id: \\\"statusGroupId\\\", label: \\\"Status\\\", items: [\\n            {id: \\\"statusGroupItem1\\\", label: \\\"Down\\\"},\\n            {id: \\\"statusGroupItem2\\\", label: \\\"Critical\\\"},\\n            {id: \\\"statusGroupItem3\\\", label: \\\"Warning\\\"},\\n            {id: \\\"statusGroupItem4\\\", label: \\\"Unknown\\\"},\\n            {id: \\\"statusGroupItem5\\\", label: \\\"Ok\\\"}],\\n    },\\n    {\\n        id: \\\"vendorGroupId\\\", label: \\\"Vendor\\\", items: [\\n            {id: \\\"vendorGroupItem1\\\", label: \\\"Cisco\\\"},\\n            {id: \\\"vendorGroupItem2\\\", label: \\\"Hewlett Packard\\\"},\\n            {id: \\\"vendorGroupItem3\\\", label: \\\"Uniper\\\"}],\\n    },\\n    {\\n        id: \\\"statusGroupId\\\", label: \\\"Status\\\", items: [\\n            {id: \\\"statusGroupItem1\\\", label: \\\"Down\\\"},\\n            {id: \\\"statusGroupItem2\\\", label: \\\"Critical\\\"},\\n            {id: \\\"statusGroupItem3\\\", label: \\\"Warning\\\"},\\n            {id: \\\"statusGroupItem4\\\", label: \\\"Unknown\\\"},\\n            {id: \\\"statusGroupItem5\\\", label: \\\"Ok\\\"}],\\n    },\\n    {\\n        id: \\\"vendorGroupId\\\", label: \\\"Vendor\\\", items: [\\n            {id: \\\"vendorGroupItem1\\\", label: \\\"Cisco\\\"},\\n            {id: \\\"vendorGroupItem2\\\", label: \\\"Hewlett Packard\\\"},\\n            {id: \\\"vendorGroupItem3\\\", label: \\\"Uniper\\\"}],\\n    },\\n];\\n\\n@Component({\\n    selector: \\\"nui-chips-overflow-example\\\",\\n    templateUrl: \\\"./chips-overflow.example.component.html\\\",\\n    styles: [`.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }`],\\n})\\nexport class ChipsOverflowExampleComponent {\\n    public horizontalGroupedItemsSource = { flatItems, groupedItems };\\n\\n    public overflowLinesNumber = 2;\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n\\n    public onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        console.log(`'onClear' event fired. $event.item.id=${event.item.id} $event.group.id=${event.group?.id}`);\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.horizontalGroupedItemsSource.flatItems || [], event.item);\\n        }\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.horizontalGroupedItemsSource.groupedItems = [];\\n        this.horizontalGroupedItemsSource.flatItems = [];\\n        this.popover?.onClick(e);\\n    }\\n\\n    onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n}\\n\";"]}