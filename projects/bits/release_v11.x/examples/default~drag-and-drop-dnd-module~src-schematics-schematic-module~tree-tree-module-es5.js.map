{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js"],"names":["BaseTreeControl","expansionModel","dataNode","toggle","_trackByValue","select","deselect","isSelected","collapseDescendants","expandDescendants","clear","toBeProcessed","push","getDescendants","map","value","trackBy","FlatTreeControl","getLevel","isExpandable","options","startIndex","dataNodes","indexOf","results","i","length","node","NestedTreeControl","getChildren","allNodes","reduce","accumulator","descendants","_getDescendants","splice","childrenNodes","Array","isArray","forEach","child","pipe","Boolean","subscribe","children","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","viewContainer","_node","ɵfac","CdkTreeNodeOutlet_Factory","t","ɵdir","type","selectors","ctorParameters","undefined","decorators","args","ngDevMode","selector","CdkTreeNodeOutletContext","data","$implicit","CdkTreeNodeDef","template","CdkTreeNodeDef_Factory","inputs","when","getTreeNoValidDataSourceError","Error","getTreeMultipleDefaultNodeDefsError","getTreeMissingMatchingNodeDefError","getTreeControlMissingError","getTreeControlFunctionsMissingError","CdkTree","_differs","_changeDetectorRef","_onDestroy","_levels","Map","viewChange","start","end","Number","MAX_VALUE","_dataSource","dataSource","_switchDataSource","_dataDiffer","find","create","treeControl","_nodeOutlet","complete","next","disconnect","_dataSubscription","unsubscribe","defaultNodeDefs","_nodeDefs","filter","def","_defaultNodeDef","_observeRenderChanges","dataStream","connect","renderNodeChanges","dataDiffer","parentData","changes","diff","forEachOperation","item","adjustedPreviousIndex","currentIndex","previousIndex","insertNode","remove","view","get","move","detectChanges","first","nodeDef","nodeData","index","_getNodeDef","context","level","has","set","container","createEmbeddedView","CdkTreeNode","mostRecentTreeNode","CdkTree_Factory","ɵcmp","contentQueries","CdkTree_ContentQueries","rf","ctx","dirIndex","_t","viewQuery","CdkTree_Query","hostAttrs","exportAs","decls","vars","consts","CdkTree_Template","directives","encapsulation","propDecorators","host","None","changeDetection","Default","_elementRef","_tree","_destroyed","_dataChanges","nativeElement","classList","add","role","_role","setAttribute","_data","_setRoleFromData","isExpanded","_expanded","_isAriaExpanded","_parentNodeAriaLevel","getParentNodeAriaLevel","_setExpanded","focus","CdkTreeNode_Factory","nodeElement","parent","parentElement","isNodeElement","contains","getAttribute","element","CdkNestedTreeNode","updateChildrenNodes","result","nodeOutlet","_clear","outlet","_getNodeOutlet","_children","outlets","CdkNestedTreeNode_Factory","CdkNestedTreeNode_ContentQueries","disabled","tabIndex","features","provide","useExisting","providers","cssUnitPattern","CdkTreeNodePadding","_treeNode","_element","_dir","indentUnits","_indent","_setPadding","change","_level","_setLevelInput","indent","_setIndentInput","nodeLevel","forceChange","padding","_paddingIndent","_currentPadding","paddingProp","resetProp","style","units","parts","split","CdkTreeNodePadding_Factory","CdkTreeNodeToggle","_recursive","event","recursive","toggleDescendants","stopPropagation","CdkTreeNodeToggle_Factory","hostBindings","CdkTreeNodeToggle_HostBindings","CdkTreeNodeToggle_click_HostBindingHandler","$event","_toggle","EXPORTED_DECLARATIONS","CdkTreeModule","CdkTreeModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports"],"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","file":"default~drag-and-drop-dnd-module~src-schematics-schematic-module~tree-tree-module-es5.js","sourcesContent":["import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, HostListener, NgModule } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode)) ?\n            this.collapseDescendants(dataNode) :\n            this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean))\n                .subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() { return this._dataSource; }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkTreeNodeOutlet, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        CdkTreeNode.mostRecentTreeNode = this;\n        // The classes are directly added here instead of in the host property because classes on\n        // the host property are not inherited with View Engine. It is not set as a @HostBinding because\n        // it is not set by the time it's children nodes try to read the class from it.\n        // TODO: move to host after View Engine deprecation\n        this._elementRef.nativeElement.classList.add('cdk-tree-node');\n        this.role = 'treeitem';\n    }\n    /**\n     * The role of the tree node.\n     * @deprecated The correct role is 'treeitem', 'group' should not be used. This input will be\n     *   removed in a future version.\n     * @breaking-change 12.0.0 Remove this input\n     */\n    get role() { return 'treeitem'; }\n    set role(_role) {\n        // TODO: move to host after View Engine deprecation\n        this._elementRef.nativeElement.setAttribute('role', _role);\n    }\n    /** The tree node's data. */\n    get data() { return this._data; }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    _setExpanded(_expanded) {\n        this._isAriaExpanded = _expanded;\n        this._elementRef.nativeElement.setAttribute('aria-expanded', `${_expanded}`);\n    }\n    get level() {\n        // If the treeControl has a getLevel method, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree.treeControl.getLevel ?\n            this._tree.treeControl.getLevel(this._data) : this._parentNodeAriaLevel;\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._elementRef.nativeElement.setAttribute('aria-level', `${this.level + 1}`);\n    }\n    ngDoCheck() {\n        // aria-expanded is be set here because the expanded state is stored in the tree control and\n        // the node isn't aware when the state is changed.\n        // It is not set using a @HostBinding because they sometimes get lost with Mixin based classes.\n        // TODO: move to host after View Engine deprecation\n        if (this.isExpanded != this._isAriaExpanded) {\n            this._setExpanded(this.isExpanded);\n        }\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable && !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return coerceNumberProperty(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!((classList === null || classList === void 0 ? void 0 : classList.contains('cdk-nested-tree-node')) || (classList === null || classList === void 0 ? void 0 : classList.contains('cdk-tree')));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        // The classes are directly added here instead of in the host property because classes on\n        // the host property are not inherited with View Engine. It is not set as a @HostBinding because\n        // it is not set by the time it's children nodes try to read the class from it.\n        // TODO: move to host after View Engine deprecation\n        this._elementRef.nativeElement.classList.add('cdk-nested-tree-node');\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        super.ngDoCheck();\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\" }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                inputs: ['role', 'disabled', 'tabIndex'],\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    constructor(_treeNode, _tree, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /** Whether expand/collapse the node recursively. */\n    get recursive() { return this._recursive; }\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵfac = function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); };\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet], exports: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map"]}