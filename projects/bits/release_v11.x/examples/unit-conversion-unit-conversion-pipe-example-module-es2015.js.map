{"version":3,"sources":["./demo/src/components/demo/pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts","./demo/src/components/demo/pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.html","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?4332","./demo/src/components/demo/pipes/unit-conversion/unit-conversion-pipe-example.module.ts","./demo/src/components/demo/pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.ts","./demo/src/components/demo/pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.html"],"names":[],"mappings":"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","file":"unit-conversion-unit-conversion-pipe-example-module-es2015.js","sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"unit-conversion-pipe-basic-example\",\n    templateUrl: \"./unit-conversion-pipe-basic.example.component.html\",\n    styleUrls: [\"./unit-conversion-pipe-basic.example.component.less\"],\n})\nexport class UnitConversionPipeBasicExampleComponent {\n    public num = 998990;\n}\n","<div class=\"conversion d-flex flex-column align-items-end\">\n    {{ num | unitConversion : 2 : false : \"bitsPerSecond\" }}\n</div>\n<hr>\n<nui-form-field class=\"d-block mt-5\"\n                caption=\"Bits Per Second\"\n                [showOptionalText]=\"false\">\n    <nui-textbox-number type=\"number\"\n                        [(ngModel)]=\"num\"\n                        [minValue]=\"0\"\n                        [step]=\"10\"\n                        customBoxWidth=\"200px\"></nui-textbox-number>\n</nui-form-field>\n","var map = {\n\t\"./docs/unit-conversion-pipe-docs.component.html\": \"jxIk\",\n\t\"./docs/unit-conversion-pipe-docs.component.less\": \"6F/a\",\n\t\"./docs/unit-conversion-pipe-docs.component.ts\": \"wD7G\",\n\t\"./unit-conversion-basic/unit-conversion-pipe-basic.example.component.html\": \"Yw5f\",\n\t\"./unit-conversion-basic/unit-conversion-pipe-basic.example.component.less\": \"eD/Y\",\n\t\"./unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts\": \"3uq/\",\n\t\"./unit-conversion-pipe-example.module.ts\": \"BWQn\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RLsK\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiMessageModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport { UnitConversionPipeDocsComponent } from \"./docs/unit-conversion-pipe-docs.component\";\nimport { UnitConversionPipeBasicExampleComponent } from \"./unit-conversion-basic/unit-conversion-pipe-basic.example.component\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: UnitConversionPipeDocsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"basic\",\n        component: UnitConversionPipeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        UnitConversionPipeDocsComponent,\n        UnitConversionPipeBasicExampleComponent,\n    ],\n    imports: [\n        FormsModule,\n        NuiCommonModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiMessageModule,\n        NuiTextboxModule,\n        RouterModule.forChild(routes),\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class UnitConversionPipeExampleModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl: \"./unit-conversion-pipe-docs.component.html\",\n    styleUrls: [\"./unit-conversion-pipe-docs.component.less\"],\n})\nexport class UnitConversionPipeDocsComponent { }\n","<p>\n    The <code><a href=\"../pipes/UnitConversionPipe.html#info\" target=\"_parent\">unitConversion</a></code> pipe can be used to convert a large value of a small\n    basic unit to a smaller value of a larger unit--for example, converting a quantity of 1024 in bytes to \"1 KB\". The converted unit label is automatically\n    appended to the output. Supported units are of type <code><a href=\"../miscellaneous/typealiases.html#UnitOption\" target=\"_blank\">UnitOption</a></code> and\n    include the following: <code>\"generic\"</code> (e.g. 1K for 1000), <code>\"bytes\"</code>, <code>\"bytesPerSecond\"</code>, <code>\"bitsPerSecond\"</code>, and\n    <code>\"hertz\"</code>.\n</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    Under the hood, this pipe uses the <code><a href=\"../injectables/UnitConversionService.html\" target=\"_blank\">UnitConversionService</a></code>. If the pipe\n    doesn't offer something you need, such as separating the value and unit out into separate outputs or converting a value outside the context\n    of a template, using the service directly may be a better option for you.\n</nui-message>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCommonModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>To get started with using the pipe, take a look at the template source of the example below.</p>\n\n<h3>Parameters</h3>\n<p>The pipe accepts the following parameters:</p>\n<ul>\n    <li>\n        <strong>value</strong> - The value to be converted.\n    </li>\n    <li>\n        <strong>scale</strong> - The decimal scale of the formatted value for specifying how many significant digits to display to the right of the decimal.\n        Defaults to <code>0</code>.\n    </li>\n    <li>\n        <strong>plusSign</strong> - Boolean for specifying whether to prefix the output with a '+' when the source value is greater than zero. Defaults to false.\n    </li>\n    <li>\n        <strong>unit</strong> - The basic unit to use for the conversion. Accepts arguments of type\n        <code><a href=\"../miscellaneous/typealiases.html#UnitOption\" target=\"_blank\">UnitOption</a></code>. Defaults to <code>\"bytes\"</code>.\n    </li>\n</ul>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    The pipe will localize the output for all supported units except the \"generic\" unit. Localization for the \"generic\" unit is not yet supported.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"unit-conversion-pipe-basic\" exampleTitle=\"Basic Usage\">\n    <unit-conversion-pipe-basic-example></unit-conversion-pipe-basic-example>\n</nui-example-wrapper>\n"],"sourceRoot":"webpack:///"}