{"version":3,"sources":["webpack:///./demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.html?d034","./demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.html","./demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.ts","./demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.ts","./demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.html","webpack:///./demo/src/components/demo/tooltip/index.ts?0452","webpack:///./demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.html?068e","webpack:///./demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.ts?144f","webpack:///./demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.ts?1b79","webpack:///./demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.ts?2684","webpack:///./demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.ts?3788","./demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.less","webpack:///./demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.html?3f47","./demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.ts","./demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.html","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?f9df","./demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.ts","./demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.html","webpack:///./demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.html?62c3","./demo/src/components/demo/tooltip/tooltip.module.ts","webpack:///./demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.ts?7234","webpack:///./demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.ts?7578","./demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.ts","./demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.html","./demo/src/components/demo/tooltip/index.ts","./demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.ts","./demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.html","webpack:///./demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.html?9481","webpack:///./demo/src/components/demo/tooltip/tooltip.module.ts?c1bc","webpack:///./demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.html?cd34"],"names":[],"mappings":"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","file":"demo-tooltip-tooltip-module-es2015.js","sourcesContent":["export default \"<div class=\\\"d-flex flex-row justify-content-start\\\">\\n    <div class=\\\"d-flex flex-column mr-5\\\">\\n        <h4 i18n>Selected position:</h4>\\n        <nui-radio-group name=\\\"positions\\\" [(value)]=\\\"selectedPosition\\\">\\n            <nui-radio *ngFor=\\\"let position of positions\\\"\\n                        [value]=\\\"position\\\"\\n                        [checked]=\\\"position === 'top'\\\" i18n>\\n                {{position}}\\n            </nui-radio>\\n        </nui-radio-group>\\n    </div>\\n    <div class=\\\"d-flex ml-5\\\">\\n        <div class=\\\"d-flex flex-column justify-content-center align-items-center container\\\">\\n            <div class=\\\"with-border\\\">\\n                <span nuiTooltip=\\\"I'm the Tooltip!\\\" [tooltipPlacement]=\\\"selectedPosition\\\" i18n>Hover Over Me!</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","<div class=\"d-flex flex-row justify-content-start\">\n    <div class=\"d-flex flex-column mr-5\">\n        <h4 i18n>Selected position:</h4>\n        <nui-radio-group name=\"positions\" [(value)]=\"selectedPosition\">\n            <nui-radio *ngFor=\"let position of positions\"\n                        [value]=\"position\"\n                        [checked]=\"position === 'top'\" i18n>\n                {{position}}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n    <div class=\"d-flex ml-5\">\n        <div class=\"d-flex flex-column justify-content-center align-items-center container\">\n            <div class=\"with-border\">\n                <span nuiTooltip=\"I'm the Tooltip!\" [tooltipPlacement]=\"selectedPosition\" i18n>Hover Over Me!</span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { TooltipPosition } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-tooltip-position-example\",\n    templateUrl: \"tooltip-position.example.component.html\",\n    styleUrls: [\"./tooltip-position.example.component.less\"],\n})\n\nexport class TooltipPositionExampleComponent {\n    public positions: TooltipPosition[] = [ \"top\", \"bottom\", \"left\", \"right\" ];\n    public selectedPosition: string;\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-tooltip-docs-example\",\n    templateUrl: \"./tooltip-docs.example.component.html\",\n})\n\nexport class TooltipDocsExampleComponent {}\n\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTooltipModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    <code>Tooltip</code> is a directive that creates a tooltip container, and can be used with any element on the page. It is extremely easy to use, simply add a tooltip directive \n    attribute, and assign a desired value to it.<br />\n    <nui-message type=\"info\"\n                 [allowDismiss]=\"false\">\n                 <strong>Note:</strong> Toolitp's <em>MAX WIDTH</em> is <strong>250px</strong>. The longer text will wrap to a new line if exceeds\n    </nui-message>\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-basic\" exampleTitle=\"Basic Usage\">\n    <nui-tooltip-basic-example></nui-tooltip-basic-example>\n</nui-example-wrapper>\n\n<h2>Disabled Tooltip</h2>\n<p>\n    <code>Tooltip</code> can be conditionally disabled, meaning it is possible to quit showing it under certain conditions. Here is an example:\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-disabled\" exampleTitle=\"Disabled Tooltip Usage Example\">\n    <nui-tooltip-disabled-example></nui-tooltip-disabled-example>\n</nui-example-wrapper>\n\n<h2>Tooltip Placement</h2>\n<p>\n    <code>Tooltip</code> can be positioned differently in relation to a host component. By default, <code>nui-tooltip</code> position is <code>top</code>, however, the tooltip \n    can change its position if there is not enough space to position itself in a chosen direction. The example below shows how you can manually set the position of <code>nui-tooltip</code> \n    using the <code>tooltipPlacement</code> attribute.\n</p>\n<p>\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-position\" exampleTitle=\"Position Tooltip Usage Example\">\n    <nui-tooltip-position-example></nui-tooltip-position-example>\n</nui-example-wrapper>\n\n<h2>Tooltip Manual Trigger</h2>\n<p>\n    <code>Tooltip</code> can be triggered manually using it's public <code>show()</code>, <code>hide()</code>, and <code>toggle()</code> methods. \n    Exmple below shows the example of typical usage of the feature.\n</p>\n<p>\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.<br />\n    <mark>Thanks to the cdk overlay scrolling strategy, a tooltip will disappear on scrolling only if it's gone off the viewport of the screen.</mark>\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-trigger\" exampleTitle=\"Manual Tooltip Trigger Usage Example\">\n    <nui-tooltip-trigger-example></nui-tooltip-trigger-example>\n</nui-example-wrapper>\n\n\n","export default \"export * from \\\"./tooltip-basic/tooltip-basic.example.component\\\";\\nexport * from \\\"./tooltip-docs/tooltip-docs.example.component\\\";\\nexport * from \\\"./tooltip-disabled/tooltip-disabled.example.component\\\";\\nexport * from \\\"./tooltip-position/tooltip-position.example.component\\\";\\nexport * from \\\"./tooltip-trigger/tooltip-trigger.example.component\\\";\\nexport * from \\\"./tooltip-visual-test/tooltip-visual-test.component\\\";\\n\";","export default \"<div class=\\\"d-flex justify-content-start align-items-center w-25\\\">\\n    <button nui-button\\n            class=\\\"mr-auto\\\"\\n            #tooltip=\\\"nuiTooltip\\\"\\n            type=\\\"button\\\"\\n            [nuiTooltip]=\\\"tooltipText\\\"\\n            [nuiTooltipDisabled]=\\\"isDisabled\\\"\\n            (click)=\\\"tooltip.toggle()\\\"\\n            (mouseenter)=\\\"disableTooltip(true)\\\" i18n>\\n            <strong>Toggle</strong> Tooltip\\n    </button>\\n\\n    <div class=\\\"d-flex align-items-start flex-column\\\">\\n        <button nui-button\\n                type=\\\"button\\\"\\n                size=\\\"compact\\\"displayStyle=\\\"action\\\"\\n                (click)=\\\"handleClick($event, tooltip)\\\" i18n>\\n            Click to <strong>show</strong> tooltip\\n        </button>\\n\\n        <button nui-button\\n                type=\\\"button\\\"\\n                size=\\\"compact\\\"displayStyle=\\\"action\\\"\\n                (click)=\\\"tooltip.hide()\\\" i18n>\\n            Click to <strong>hide</strong> tooltip\\n        </button>\\n    </div>\\n</div>\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-visual-test\\\",\\n    templateUrl: \\\"./tooltip-visual-test.component.html\\\",\\n})\\nexport class TooltipVisualTestComponent {\\n    tooltipMessage = \\\"ThisTooltipHasBeenCalledManuallyWithCriticallyLongTooltipMessage\\\";\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { TooltipPosition } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-position-example\\\",\\n    templateUrl: \\\"tooltip-position.example.component.html\\\",\\n    styleUrls: [\\\"./tooltip-position.example.component.less\\\"],\\n})\\n\\nexport class TooltipPositionExampleComponent {\\n    public positions: TooltipPosition[] = [ \\\"top\\\", \\\"bottom\\\", \\\"left\\\", \\\"right\\\" ];\\n    public selectedPosition: string;\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { TooltipDirective } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-trigger-example\\\",\\n    templateUrl: \\\"tooltip-trigger.example.component.html\\\",\\n})\\n\\nexport class TooltipTriggerExampleComponent {\\n    public tooltipText = \\\"I am a Tooltip!\\\";\\n    public isDisabled = false;\\n\\n    constructor() {}\\n\\n    public disableTooltip(state: boolean) {\\n        this.isDisabled = state;\\n        // We only set the tooltip to a disabled state above to hide the tooltip.\\n        // Now we want to enable it back, so it works with the click event.\\n        setTimeout(() => this.isDisabled = !state, 0);\\n    }\\n\\n    public handleClick(event: MouseEvent, tooltip: TooltipDirective) {\\n        event.stopPropagation();\\n        tooltip.show();\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-tooltip-basic-example\\\",\\n    templateUrl: \\\"tooltip-basic.example.component.html\\\",\\n})\\n\\nexport class TooltipBasicExampleComponent {\\n    public tooltip = $localize `I am a Tooltip!`;\\n\\n    constructor() {}\\n}\\n\";","export default \"@import (reference) \\\"mixins\\\";\\n\\n.container {\\n    width: 300px;\\n    border: 1px dashed;\\n    .setCssVariable(border-color, nui-color-line-default);\\n    padding: 0;\\n}\\n\\n.with-border {\\n    border: 1px red dashed;\\n    padding: 5px;\\n}\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\"><h3>Basic button</h3></div>\\n    <div class=\\\"row\\\">\\n        <button nui-button type=\\\"button\\\" id=\\\"basic-tooltip\\\" nuiTooltip=\\\"Default tooltip\\\">\\n            Standard tooltip example\\n        </button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Custom position: left, bottom, right</h3></div>\\n    <div class=\\\"row\\\">\\n        <button nui-button\\n                id=\\\"left-tooltip\\\"\\n                nuiTooltip=\\\"Left-side tooltip\\\"\\n                tooltipPlacement=\\\"left\\\"\\n                type=\\\"button\\\">\\n            Tooltip on the left\\n        </button>\\n        <button nui-button\\n                id=\\\"bottom-tooltip\\\"\\n                nuiTooltip=\\\"Bottom-placed tooltip\\\"\\n                tooltipPlacement=\\\"bottom\\\"\\n                type=\\\"button\\\">\\n            Tooltip on the bottom\\n        </button>\\n        <button nui-button\\n                id=\\\"right-tooltip\\\"\\n                nuiTooltip=\\\"Right-side tooltip\\\"\\n                tooltipPlacement=\\\"right\\\"\\n                type=\\\"button\\\">\\n            Tooltip on the right\\n        </button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Manual Triggering</h3></div>\\n    <div class=\\\"row\\\">\\n        <span #tooltip=\\\"nuiTooltip\\\"\\n              [nuiTooltip]=\\\"tooltipMessage\\\">\\n        </span>\\n        <button id=\\\"manual-tooltip\\\" nui-button type=\\\"button\\\" (click)=\\\"tooltip.toggle()\\\">\\n            Manually toggle tooltip\\n        </button>\\n    </div>\\n</div>\\n\";","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-tooltip-disabled-example\",\n    templateUrl: \"tooltip-disabled.example.component.html\",\n})\n\nexport class TooltipDisabledExampleComponent {\n    public isDisabled = false;\n    public tooltip = $localize `I am a Tooltip!`;\n    public message = $localize `Toggle to switch state`;\n\n\n    constructor() {}\n\n    public onValueChanged(value: boolean) {\n        this.isDisabled = value;\n        this.message = value\n            ? $localize `Tooltip is Disabled and hidden!`\n            : $localize `Tooltip is Enabled and can be shown\"`;\n    }\n}\n","<div class=\"d-flex flex-column\">\n    <div class=\"d-flex flex-row mb-5\">\n        <span [nuiTooltip]=\"tooltip\" [nuiTooltipDisabled]=\"isDisabled\" i18n>\n            Hover over me!\n        </span>\n    </div>\n    <div class=\"d-flex flex-row\">\n        <nui-switch [value]=\"isDisabled\" (valueChange)=\"onValueChanged($event)\" i18n>\n            {{message}}\n        </nui-switch>\n    </div>\n</div>\n","var map = {\n\t\"./index.ts\": \"BFJ/\",\n\t\"./tooltip-basic/tooltip-basic.example.component.html\": \"lIGJ\",\n\t\"./tooltip-basic/tooltip-basic.example.component.ts\": \"N4ju\",\n\t\"./tooltip-disabled/tooltip-disabled.example.component.html\": \"YsOG\",\n\t\"./tooltip-disabled/tooltip-disabled.example.component.ts\": \"cjQU\",\n\t\"./tooltip-docs/tooltip-docs.example.component.html\": \"zTQh\",\n\t\"./tooltip-docs/tooltip-docs.example.component.ts\": \"dXiJ\",\n\t\"./tooltip-position/tooltip-position.example.component.html\": \"0DQD\",\n\t\"./tooltip-position/tooltip-position.example.component.less\": \"O9ru\",\n\t\"./tooltip-position/tooltip-position.example.component.ts\": \"G3nC\",\n\t\"./tooltip-trigger/tooltip-trigger.example.component.html\": \"Bo5W\",\n\t\"./tooltip-trigger/tooltip-trigger.example.component.ts\": \"JoS3\",\n\t\"./tooltip-visual-test/tooltip-visual-test.component.html\": \"P0cZ\",\n\t\"./tooltip-visual-test/tooltip-visual-test.component.ts\": \"FE9U\",\n\t\"./tooltip.module.ts\": \"wbyP\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RvtI\";","import {Component} from \"@angular/core\";\n\n@Component({\n    selector: \"nui-tooltip-visual-test\",\n    templateUrl: \"./tooltip-visual-test.component.html\",\n})\nexport class TooltipVisualTestComponent {\n    tooltipMessage = \"ThisTooltipHasBeenCalledManuallyWithCriticallyLongTooltipMessage\";\n}\n","<div class=\"container\">\n    <div class=\"row\"><h3>Basic button</h3></div>\n    <div class=\"row\">\n        <button nui-button type=\"button\" id=\"basic-tooltip\" nuiTooltip=\"Default tooltip\">\n            Standard tooltip example\n        </button>\n    </div>\n\n    <div class=\"row\"><h3>Custom position: left, bottom, right</h3></div>\n    <div class=\"row\">\n        <button nui-button\n                id=\"left-tooltip\"\n                nuiTooltip=\"Left-side tooltip\"\n                tooltipPlacement=\"left\"\n                type=\"button\">\n            Tooltip on the left\n        </button>\n        <button nui-button\n                id=\"bottom-tooltip\"\n                nuiTooltip=\"Bottom-placed tooltip\"\n                tooltipPlacement=\"bottom\"\n                type=\"button\">\n            Tooltip on the bottom\n        </button>\n        <button nui-button\n                id=\"right-tooltip\"\n                nuiTooltip=\"Right-side tooltip\"\n                tooltipPlacement=\"right\"\n                type=\"button\">\n            Tooltip on the right\n        </button>\n    </div>\n\n    <div class=\"row\"><h3>Manual Triggering</h3></div>\n    <div class=\"row\">\n        <span #tooltip=\"nuiTooltip\"\n              [nuiTooltip]=\"tooltipMessage\">\n        </span>\n        <button id=\"manual-tooltip\" nui-button type=\"button\" (click)=\"tooltip.toggle()\">\n            Manually toggle tooltip\n        </button>\n    </div>\n</div>\n","export default \"<div class=\\\"d-flex flex-column\\\">\\n    <div class=\\\"d-flex flex-row mb-5\\\">\\n        <span [nuiTooltip]=\\\"tooltip\\\" [nuiTooltipDisabled]=\\\"isDisabled\\\" i18n>\\n            Hover over me!\\n        </span>\\n    </div>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-switch [value]=\\\"isDisabled\\\" (valueChange)=\\\"onValueChanged($event)\\\" i18n>\\n            {{message}}\\n        </nui-switch>\\n    </div>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiSwitchModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    TooltipBasicExampleComponent,\n    TooltipDisabledExampleComponent,\n    TooltipDocsExampleComponent,\n    TooltipPositionExampleComponent,\n    TooltipTriggerExampleComponent,\n    TooltipVisualTestComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: TooltipDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"tooltip-basic\",\n        component: TooltipBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-disabled\",\n        component: TooltipDisabledExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-position\",\n        component: TooltipPositionExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-trigger\",\n        component: TooltipTriggerExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-visual-test\",\n        component: TooltipVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTooltipModule,\n        NuiSwitchModule,\n        NuiRadioModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TooltipBasicExampleComponent,\n        TooltipDocsExampleComponent,\n        TooltipDisabledExampleComponent,\n        TooltipPositionExampleComponent,\n        TooltipTriggerExampleComponent,\n        TooltipVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class TooltipDemoModule {\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-tooltip-disabled-example\\\",\\n    templateUrl: \\\"tooltip-disabled.example.component.html\\\",\\n})\\n\\nexport class TooltipDisabledExampleComponent {\\n    public isDisabled = false;\\n    public tooltip = $localize `I am a Tooltip!`;\\n    public message = $localize `Toggle to switch state`;\\n\\n\\n    constructor() {}\\n\\n    public onValueChanged(value: boolean) {\\n        this.isDisabled = value;\\n        this.message = value\\n            ? $localize `Tooltip is Disabled and hidden!`\\n            : $localize `Tooltip is Enabled and can be shown\\\"`;\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-docs-example\\\",\\n    templateUrl: \\\"./tooltip-docs.example.component.html\\\",\\n})\\n\\nexport class TooltipDocsExampleComponent {}\\n\\n\";","import { Component } from \"@angular/core\";\nimport { TooltipDirective } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-tooltip-trigger-example\",\n    templateUrl: \"tooltip-trigger.example.component.html\",\n})\n\nexport class TooltipTriggerExampleComponent {\n    public tooltipText = \"I am a Tooltip!\";\n    public isDisabled = false;\n\n    constructor() {}\n\n    public disableTooltip(state: boolean) {\n        this.isDisabled = state;\n        // We only set the tooltip to a disabled state above to hide the tooltip.\n        // Now we want to enable it back, so it works with the click event.\n        setTimeout(() => this.isDisabled = !state, 0);\n    }\n\n    public handleClick(event: MouseEvent, tooltip: TooltipDirective) {\n        event.stopPropagation();\n        tooltip.show();\n    }\n}\n","<div class=\"d-flex justify-content-start align-items-center w-25\">\n    <button nui-button\n            class=\"mr-auto\"\n            #tooltip=\"nuiTooltip\"\n            type=\"button\"\n            [nuiTooltip]=\"tooltipText\"\n            [nuiTooltipDisabled]=\"isDisabled\"\n            (click)=\"tooltip.toggle()\"\n            (mouseenter)=\"disableTooltip(true)\" i18n>\n            <strong>Toggle</strong> Tooltip\n    </button>\n\n    <div class=\"d-flex align-items-start flex-column\">\n        <button nui-button\n                type=\"button\"\n                size=\"compact\"displayStyle=\"action\"\n                (click)=\"handleClick($event, tooltip)\" i18n>\n            Click to <strong>show</strong> tooltip\n        </button>\n\n        <button nui-button\n                type=\"button\"\n                size=\"compact\"displayStyle=\"action\"\n                (click)=\"tooltip.hide()\" i18n>\n            Click to <strong>hide</strong> tooltip\n        </button>\n    </div>\n</div>\n","export * from \"./tooltip-basic/tooltip-basic.example.component\";\nexport * from \"./tooltip-docs/tooltip-docs.example.component\";\nexport * from \"./tooltip-disabled/tooltip-disabled.example.component\";\nexport * from \"./tooltip-position/tooltip-position.example.component\";\nexport * from \"./tooltip-trigger/tooltip-trigger.example.component\";\nexport * from \"./tooltip-visual-test/tooltip-visual-test.component\";\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-tooltip-basic-example\",\n    templateUrl: \"tooltip-basic.example.component.html\",\n})\n\nexport class TooltipBasicExampleComponent {\n    public tooltip = $localize `I am a Tooltip!`;\n\n    constructor() {}\n}\n","<span [nuiTooltip]=\"tooltip\" i18n>Hover over me!</span>\n","export default \"<span [nuiTooltip]=\\\"tooltip\\\" i18n>Hover over me!</span>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiDocsModule,\\n    NuiMessageModule,\\n    NuiRadioModule,\\n    NuiSwitchModule,\\n    NuiTooltipModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    TooltipBasicExampleComponent,\\n    TooltipDisabledExampleComponent,\\n    TooltipDocsExampleComponent,\\n    TooltipPositionExampleComponent,\\n    TooltipTriggerExampleComponent,\\n    TooltipVisualTestComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: TooltipDocsExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-basic\\\",\\n        component: TooltipBasicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-disabled\\\",\\n        component: TooltipDisabledExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-position\\\",\\n        component: TooltipPositionExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-trigger\\\",\\n        component: TooltipTriggerExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-visual-test\\\",\\n        component: TooltipVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiTooltipModule,\\n        NuiSwitchModule,\\n        NuiRadioModule,\\n        NuiDocsModule,\\n        NuiMessageModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        TooltipBasicExampleComponent,\\n        TooltipDocsExampleComponent,\\n        TooltipDisabledExampleComponent,\\n        TooltipPositionExampleComponent,\\n        TooltipTriggerExampleComponent,\\n        TooltipVisualTestComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class TooltipDemoModule {\\n}\\n\";","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiTooltipModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    <code>Tooltip</code> is a directive that creates a tooltip container, and can be used with any element on the page. It is extremely easy to use, simply add a tooltip directive \\n    attribute, and assign a desired value to it.<br />\\n    <nui-message type=\\\"info\\\"\\n                 [allowDismiss]=\\\"false\\\">\\n                 <strong>Note:</strong> Toolitp's <em>MAX WIDTH</em> is <strong>250px</strong>. The longer text will wrap to a new line if exceeds\\n    </nui-message>\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-tooltip-basic-example></nui-tooltip-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Disabled Tooltip</h2>\\n<p>\\n    <code>Tooltip</code> can be conditionally disabled, meaning it is possible to quit showing it under certain conditions. Here is an example:\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-disabled\\\" exampleTitle=\\\"Disabled Tooltip Usage Example\\\">\\n    <nui-tooltip-disabled-example></nui-tooltip-disabled-example>\\n</nui-example-wrapper>\\n\\n<h2>Tooltip Placement</h2>\\n<p>\\n    <code>Tooltip</code> can be positioned differently in relation to a host component. By default, <code>nui-tooltip</code> position is <code>top</code>, however, the tooltip \\n    can change its position if there is not enough space to position itself in a chosen direction. The example below shows how you can manually set the position of <code>nui-tooltip</code> \\n    using the <code>tooltipPlacement</code> attribute.\\n</p>\\n<p>\\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-position\\\" exampleTitle=\\\"Position Tooltip Usage Example\\\">\\n    <nui-tooltip-position-example></nui-tooltip-position-example>\\n</nui-example-wrapper>\\n\\n<h2>Tooltip Manual Trigger</h2>\\n<p>\\n    <code>Tooltip</code> can be triggered manually using it's public <code>show()</code>, <code>hide()</code>, and <code>toggle()</code> methods. \\n    Exmple below shows the example of typical usage of the feature.\\n</p>\\n<p>\\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.<br />\\n    <mark>Thanks to the cdk overlay scrolling strategy, a tooltip will disappear on scrolling only if it's gone off the viewport of the screen.</mark>\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-trigger\\\" exampleTitle=\\\"Manual Tooltip Trigger Usage Example\\\">\\n    <nui-tooltip-trigger-example></nui-tooltip-trigger-example>\\n</nui-example-wrapper>\\n\\n\\n\";"],"sourceRoot":"webpack:///"}