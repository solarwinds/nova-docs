{"version":3,"sources":["webpack:///demo/src/components/demo/button/button-repeatable/button-repeatable.example.component.ts","webpack:///demo/src/components/demo/button/button-repeatable/button-repeatable.example.component.html","webpack:///demo/src/components/demo/button/button-display-style-primary/button-display-style-primary.example.component.html?d9a4","webpack:///demo/src/components/demo/button/button-display-style-action/button-display-style-action.example.component.ts?dcb5","webpack:///demo/src/components/demo/button/index.ts?dcbb","webpack:///demo/src/components/demo/button/button-basic/button-basic.example.component.html?dd79","webpack:///demo/src/components/demo/button/button-with-icon-right/button-with-icon-right.example.component.html?de52","webpack:///demo/src/components/demo/button/button-long-text/button-with-long-text-example.component.ts?e2a0","webpack:///demo/src/components/demo/button/button-visual-test/button-visual-test.component.ts","webpack:///demo/src/components/demo/button/button-visual-test/button-visual-test.component.html","webpack:///demo/src/components/demo/button/button-size/button-size.example.component.html?f68c","webpack:///demo/src/components/demo/button/button-busy/button-busy.example.component.ts?01ce","webpack:///demo/src/components/demo/button/button-with-icon-only/button-with-icon-only.example.component.html?0b35","webpack:///demo/src/components/demo/button/button-long-text/button-with-long-text-example.component.html?0c94","webpack:///demo/src/components/demo/button/button-display-style-action/button-display-style-action.example.component.ts","webpack:///demo/src/components/demo/button/button-display-style-action/button-display-style-action.example.component.html","webpack:///demo/src/components/demo/button/button-size/button-size.example.component.ts","webpack:///demo/src/components/demo/button/button-size/button-size.example.component.html","webpack:///demo/src/components/demo/button/button-display-style-destructive/button-display-style-destructive.example.component.ts","webpack:///demo/src/components/demo/button/button-display-style-destructive/button-display-style-destructive.example.component.html","webpack:///demo/src/components/demo/button/button-test/button-test.component.ts","webpack:///demo/src/components/demo/button/button-test/button-test.component.html","webpack:///demo/src/components/demo/button/button-with-icon/button-with-icon.example.component.html?26d3","webpack:///demo/src/components/demo/button/button-size/button-size.example.component.ts?2925","webpack:///demo/src/components/demo/button/button-docs/button-docs.example.component.ts?2da8","webpack:///demo/src/components/demo/button/button-group/button-group.example.component.ts?33db","webpack:///demo/src/components/demo/button/button-repeatable/button-repeatable.example.component.html?34e6","webpack:///demo/src/components/demo/button/index.ts","webpack:///demo/src/components/demo/button/button-display-style-destructive/button-display-style-destructive.example.component.ts?42a4","webpack:///demo/src/components/demo/button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.html?497a","webpack:///demo/src/components/demo/button/button-test/button-test.component.ts?4fcd","webpack:///demo/src/components/demo/button/button-busy/button-busy.example.component.html?5fbf","webpack:///demo/src/components/demo/button/button-busy/button-busy.example.component.ts","webpack:///demo/src/components/demo/button/button-busy/button-busy.example.component.html","webpack:///demo/src/components/demo/button/button-docs/button-docs.example.component.ts","webpack:///demo/src/components/demo/button/button-docs/button-docs.example.component.html","webpack:///demo/src/components/demo/button/button-visual-test/button-visual-test.component.ts?65ac","webpack:///demo/src/components/demo/button/button-visual-test/button-visual-test.component.html?6630","webpack:///demo/src/components/demo/button/button-test/button-test.component.html?66c0","webpack:///demo/src/components/demo/button/button-display-style-destructive/button-display-style-destructive.example.component.html?6cda","webpack:///demo/src/components/demo/button/button-with-icon-right/button-with-icon-right.example.component.ts?6d59","webpack:///demo/src/components/demo/button/button-long-text/button-with-long-text-example.component.ts","webpack:///demo/src/components/demo/button/button-long-text/button-with-long-text-example.component.html","webpack:///demo/src/components/demo/button/button-group/button-group.example.component.ts","webpack:///demo/src/components/demo/button/button-group/button-group.example.component.html","webpack:///demo/src/components/demo/button/button-docs/button-docs.example.component.html?72ea","webpack:///demo/src/components/demo/button/button.module.ts","webpack:///demo/src/components/demo/button/button-with-icon-only/button-with-icon-only.example.component.ts?7e5e","webpack:///demo/src/components/demo/button/button-with-icon-only/button-with-icon-only.example.component.ts","webpack:///demo/src/components/demo/button/button-with-icon-only/button-with-icon-only.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?30eb","webpack:///demo/src/components/demo/button/button-with-icon-right/button-with-icon-right.example.component.ts","webpack:///demo/src/components/demo/button/button-with-icon-right/button-with-icon-right.example.component.html","webpack:///demo/src/components/demo/button/button-group/button-group.example.component.html?a6d8","webpack:///demo/src/components/demo/button/button-repeatable/button-repeatable.example.component.ts?adc5","webpack:///demo/src/components/demo/button/button.module.ts?aec3","webpack:///demo/src/components/demo/button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.ts?af37","webpack:///demo/src/components/demo/button/button-with-icon/button-with-icon.example.component.ts","webpack:///demo/src/components/demo/button/button-with-icon/button-with-icon.example.component.html","webpack:///demo/src/components/demo/button/button-display-style-primary/button-display-style-primary.example.component.ts","webpack:///demo/src/components/demo/button/button-display-style-primary/button-display-style-primary.example.component.html","webpack:///demo/src/components/demo/button/button-basic/button-basic.example.component.ts","webpack:///demo/src/components/demo/button/button-basic/button-basic.example.component.html","webpack:///demo/src/components/demo/button/button-basic/button-basic.example.component.ts?b50d","webpack:///demo/src/components/demo/button/button-display-style-primary/button-display-style-primary.example.component.ts?b871","webpack:///demo/src/components/demo/button/button-with-icon/button-with-icon.example.component.ts?baf5","webpack:///demo/src/components/demo/button/button-display-style-action/button-display-style-action.example.component.html?c350","webpack:///demo/src/components/demo/button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.ts","webpack:///demo/src/components/demo/button/button-with-icon-custom-color/button-with-icon-custom-color.example.component.html"],"names":["ButtonRepeatableExampleComponent","count","onCountUpClick","onCountDownClick","ButtonVisualTestComponent","ButtonDisplayStyleActionExampleComponent","ButtonSizeExampleComponent","ButtonDisplayStyleDestructiveExampleComponent","ButtonTestComponent","isRepeat","ButtonBusyExampleComponent","ButtonDocsComponent","ButtonWithLongTextExampleComponent","disableWidthRestriction","toggleWidthRestriction","ButtonGroupExampleComponent","routes","path","component","data","ga","showThemeSwitcher","ButtonModule","provide","useFactory","forChild","ButtonWithIconOnlyExampleComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","ButtonWithIconRightExampleComponent","ButtonWithIconExampleComponent","ButtonDisplayStylePrimaryExampleComponent","ButtonBasicExampleComponent","toastService","info","message","$localize","title","onClick","ButtonWithIconCustomColorExampleComponent"],"mappings":"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","file":"demo-button-button-module-es5.js","sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-repeatable-example\",\n    templateUrl: \"./button-repeatable.example.component.html\",\n})\nexport class ButtonRepeatableExampleComponent {\n    count = 100;\n\n    onCountUpClick() {\n        this.count++;\n    }\n\n    onCountDownClick() {\n        this.count--;\n    }\n}\n","<button nui-button\n    type=\"button\"\n    [isRepeat]=\"true\"\n    displayStyle=\"action\"\n    icon=\"caret-up\"\n    (click)=\"onCountUpClick()\">\n</button>\n<button nui-button\n    type=\"button\"\n    [isRepeat]=\"true\"\n    displayStyle=\"action\"\n    icon=\"caret-down\"\n    (click)=\"onCountDownClick()\">\n</button>\n<span class=\"nui-text-default\">{{count}}</span>\n","export default \"<button nui-button type=\\\"button\\\" displayStyle=\\\"primary\\\" i18n>Click me!</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-display-style-action-example\\\",\\n    templateUrl: \\\"./button-display-style-action.example.component.html\\\",\\n})\\nexport class ButtonDisplayStyleActionExampleComponent {}\\n\";","export default \"export * from \\\"./button-docs/button-docs.example.component\\\";\\nexport * from \\\"./button-test/button-test.component\\\";\\nexport * from \\\"./button-basic/button-basic.example.component\\\";\\nexport * from \\\"./button-busy/button-busy.example.component\\\";\\nexport * from \\\"./button-display-style-primary/button-display-style-primary.example.component\\\";\\nexport * from \\\"./button-display-style-action/button-display-style-action.example.component\\\";\\nexport * from \\\"./button-display-style-destructive/button-display-style-destructive.example.component\\\";\\nexport * from \\\"./button-repeatable/button-repeatable.example.component\\\";\\nexport * from \\\"./button-size/button-size.example.component\\\";\\nexport * from \\\"./button-with-icon/button-with-icon.example.component\\\";\\nexport * from \\\"./button-with-icon-only/button-with-icon-only.example.component\\\";\\nexport * from \\\"./button-with-icon-right/button-with-icon-right.example.component\\\";\\nexport * from \\\"./button-with-icon-custom-color/button-with-icon-custom-color.example.component\\\";\\nexport * from \\\"./button-group/button-group.example.component\\\";\\nexport * from \\\"./button-visual-test/button-visual-test.component\\\";\\nexport * from \\\"./button-long-text/button-with-long-text-example.component\\\";\\n\";","export default \"<button nui-button type=\\\"button\\\" (click)=\\\"onClick()\\\" i18n>Click me!</button>\\n\";","export default \"<button nui-button type=\\\"button\\\" icon=\\\"reload\\\" [iconRight]=\\\"true\\\" i18n>Click me!</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-with-button-long-text-example\\\",\\n    templateUrl: \\\"./button-with-long-text-example.component.html\\\",\\n})\\nexport class ButtonWithLongTextExampleComponent {\\n    public disableWidthRestriction = true;\\n\\n    public toggleWidthRestriction() {\\n         this.disableWidthRestriction = !this.disableWidthRestriction;\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-visual\",\n    templateUrl: \"./button-visual-test.component.html\",\n})\nexport class ButtonVisualTestComponent {\n    public busy: boolean;\n}\n","<div class=\"container\">\n    <div class=\"row\"><h3>Basic button</h3></div>\n    <div class=\"row\"><button nui-button id=\"basic-button\" type=\"button\">Click me!</button></div>\n\n    <div class=\"row\"><h3>Primary, Action, and Destructive buttons</h3></div>\n    <div class=\"row\">\n        <button nui-button id=\"primary-button\" type=\"button\" displayStyle=\"primary\">Click me!</button>\n        <button nui-button id=\"action-button\" type=\"button\" displayStyle=\"action\">Click me!</button>\n        <button nui-button type=\"button\" displayStyle=\"destructive\">Click me!</button>\n    </div>\n\n    <div class=\"row\"><h3>Sized buttons</h3></div>\n    <!-- nui-button is vulnerable to bootstrap 'row' class which sets 'display: flex'. Consider removing the inline style \n         from the following div either when the issue is resolved or shadow dom is applied to the component-->\n    <div class=\"row\" style=\"display: block\">\n        <button nui-button type=\"button\" size=\"compact\">Compact</button>\n        <button nui-button type=\"button\">Default</button>\n        <button nui-button type=\"button\" size=\"large\">Large</button>\n    </div>\n\n    <div class=\"row\"><h3>Buttons with icons</h3></div>\n    <div class=\"row\" style=\"display: block\">\n        <button nui-button type=\"button\" icon=\"add\">Click me!</button>\n        <button nui-button type=\"button\" icon=\"reload\" [iconRight]=\"true\">Click me!</button>\n        <button nui-button type=\"button\" icon=\"power-on\" iconColor=\"orange\">Click me!</button>\n        <button nui-button type=\"button\" icon=\"star-full\"></button>\n        <div class=\"w-100 mt-2\"></div>\n        <button nui-button id=\"primary-button\" type=\"button\" displayStyle=\"primary\" icon=\"add\">Click me!</button>\n        <button nui-button id=\"action-button\" type=\"button\" displayStyle=\"action\" icon=\"status_warning\">Click me!</button>\n        <button nui-button type=\"button\" displayStyle=\"destructive\" icon=\"printer\">Click me!</button>\n        <div class=\"w-100 mt-2\"></div>\n        <button nui-button type=\"button\" size=\"large\" displayStyle=\"primary\" icon=\"add\" [iconRight]=\"true\" [disabled]=\"true\" i18n>Disabled Primary</button>\n        <button nui-button type=\"button\" size=\"large\" displayStyle=\"action\" icon=\"status_warning\" [iconRight]=\"true\" [disabled]=\"true\" i18n>Disabled Action</button>\n        <button nui-button type=\"button\" size=\"large\" displayStyle=\"destructive\" icon=\"printer\" [iconRight]=\"true\" [disabled]=\"true\" i18n>Disabled Destructive</button>\n\n    </div>\n\n    <div class=\"row\" style=\"display: block\"><h3>Sized buttons with icons</h3>\n        <button nui-button type=\"button\" size=\"compact\" icon=\"add\">Compact + icon</button>\n        <button nui-button type=\"button\" icon=\"add\">Default + icon</button>\n        <button nui-button type=\"button\" size=\"large\" icon=\"add\">Large + icon</button>\n    </div>\n\n    <div class=\"row\"><h3>Buttons with repeat</h3></div>\n    <div class=\"row\">\n        <button nui-button type=\"button\" [isRepeat]=\"true\" displayStyle=\"action\" icon=\"caret-up\"></button>\n        <button nui-button type=\"button\" [isRepeat]=\"true\" displayStyle=\"action\" icon=\"caret-down\"></button>\n    </div>\n\n    <div class=\"row\"><h3>Button with busy</h3></div>\n    <div class=\"row\"><button nui-button type=\"button\" [isBusy]=\"true\">Click me!</button></div>\n\n    <div class=\"row\"><h3>Buttons in a group</h3></div>\n    <div class=\"row\">\n        <div class=\"btn-group\">\n            <button nui-button type=\"button\">First</button>\n            <button nui-button type=\"button\">Second</button>\n            <button nui-button type=\"button\">Third</button>\n            <button nui-button type=\"button\">Fourth</button>\n            <button nui-button type=\"button\">Fifth</button>\n        </div>\n    </div>\n</div>\n","export default \"<button nui-button type=\\\"button\\\" size=\\\"compact\\\" i18n>Compact</button>\\n<button nui-button type=\\\"button\\\" i18n>Default</button>\\n<button nui-button type=\\\"button\\\" size=\\\"large\\\" i18n>Large</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-busy-example\\\",\\n    templateUrl: \\\"./button-busy.example.component.html\\\",\\n})\\nexport class ButtonBusyExampleComponent {}\\n\";","export default \"<button nui-button type=\\\"button\\\" icon=\\\"star-full\\\"></button>\\n\";","export default \"<button [class.unlimited-width]=\\\"disableWidthRestriction\\\" nui-button type=\\\"button\\\" (click)=\\\"toggleWidthRestriction()\\\" i18n>\\n    Toggle button's max-width restriction with a press of a button\\n</button>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-display-style-action-example\",\n    templateUrl: \"./button-display-style-action.example.component.html\",\n})\nexport class ButtonDisplayStyleActionExampleComponent {}\n","<button nui-button type=\"button\" displayStyle=\"action\" i18n>Click me!</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-size-example\",\n    templateUrl: \"./button-size.example.component.html\",\n})\nexport class ButtonSizeExampleComponent {}\n","<button nui-button type=\"button\" size=\"compact\" i18n>Compact</button>\n<button nui-button type=\"button\" i18n>Default</button>\n<button nui-button type=\"button\" size=\"large\" i18n>Large</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-display-style-destructive-example\",\n    templateUrl: \"./button-display-style-destructive.example.component.html\",\n})\nexport class ButtonDisplayStyleDestructiveExampleComponent {}\n","<button nui-button type=\"button\" displayStyle=\"destructive\" i18n>Click me!</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-test\",\n    templateUrl: \"./button-test.component.html\",\n})\nexport class ButtonTestComponent {\n    isRepeat = \"true\";\n    count = 100;\n\n    onCountUpClick() {\n        this.count++;\n    }\n}\n","<input id=\"is-repeat-off\" type=\"radio\" [(ngModel)]=\"isRepeat\" value=\"false\" />\n<input id=\"is-repeat-on\" type=\"radio\" [(ngModel)]=\"isRepeat\" value=\"true\" />\n<span id=\"nui-demo-click-results\">{{count}}</span>\n\n<button id=\"nui-demo-up-btn\" nui-button type=\"button\" [isRepeat]=\"isRepeat === 'true'\" icon=\"caret-up\" (click)=\"onCountUpClick()\">\n</button>\n<button id=\"nui-demo-primary-compact-btn\" nui-button type=\"button\" size=\"compact\" displayStyle=\"primary\" i18n>\n    Compact\n</button>\n<button id=\"nui-demo-primary-large-plus-icon-btn\" nui-button type=\"button\" size=\"large\" displayStyle=\"primary\" icon=\"add\" [iconRight]=\"true\" i18n>\n    Large + icon\n</button>\n<button id=\"nui-demo-primary-large-plus-icon-disabled-btn\" nui-button type=\"button\" size=\"large\" displayStyle=\"primary\" icon=\"add\" [iconRight]=\"true\"\n        [disabled]=\"true\" i18n>\n    Disabled\n</button>\n<button id=\"nui-demo-primary-large-plus-icon-busy-btn\" nui-button type=\"button\" size=\"large\" displayStyle=\"primary\" icon=\"add\" [iconRight]=\"true\"\n        [isBusy]=\"true\" i18n>\n    Busy\n</button>\n<button nui-button id=\"nui-demo-default-compact-btn\" type=\"button\" size=\"compact\" displayStyle=\"default\" icon=\"add\" i18n>\n    Compact\n</button>\n<button id=\"nui-default-large-btn\" nui-button class=\"testClass\" type=\"button\" size=\"large\" displayStyle=\"default\" icon=\"add\" i18n>\n    Large + icon\n</button>\n<button id=\"nui-demo-action-compact-btn\" nui-button type=\"button\" size=\"compact\" displayStyle=\"action\" i18n>\n    Compact\n</button>\n<button id=\"nui-demo-btn-with-icon\" nui-button type=\"button\" icon=\"add\" i18n>\n    Icon\n</button>\n\n<nui-with-button-long-text-example id=\"nui-demo-long-text-btn\"></nui-with-button-long-text-example>\n","export default \"<button nui-button type=\\\"button\\\" icon=\\\"add\\\" i18n>Click me!</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-size-example\\\",\\n    templateUrl: \\\"./button-size.example.component.html\\\",\\n})\\nexport class ButtonSizeExampleComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-docs-example\\\",\\n    templateUrl: \\\"./button-docs.example.component.html\\\",\\n})\\nexport class ButtonDocsComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-group-example\\\",\\n    templateUrl: \\\"./button-group.example.component.html\\\",\\n})\\nexport class ButtonGroupExampleComponent {}\\n\";","export default \"<button nui-button\\n    type=\\\"button\\\"\\n    [isRepeat]=\\\"true\\\"\\n    displayStyle=\\\"action\\\"\\n    icon=\\\"caret-up\\\"\\n    (click)=\\\"onCountUpClick()\\\">\\n</button>\\n<button nui-button\\n    type=\\\"button\\\"\\n    [isRepeat]=\\\"true\\\"\\n    displayStyle=\\\"action\\\"\\n    icon=\\\"caret-down\\\"\\n    (click)=\\\"onCountDownClick()\\\">\\n</button>\\n<span class=\\\"nui-text-default\\\">{{count}}</span>\\n\";","export * from \"./button-docs/button-docs.example.component\";\nexport * from \"./button-test/button-test.component\";\nexport * from \"./button-basic/button-basic.example.component\";\nexport * from \"./button-busy/button-busy.example.component\";\nexport * from \"./button-display-style-primary/button-display-style-primary.example.component\";\nexport * from \"./button-display-style-action/button-display-style-action.example.component\";\nexport * from \"./button-display-style-destructive/button-display-style-destructive.example.component\";\nexport * from \"./button-repeatable/button-repeatable.example.component\";\nexport * from \"./button-size/button-size.example.component\";\nexport * from \"./button-with-icon/button-with-icon.example.component\";\nexport * from \"./button-with-icon-only/button-with-icon-only.example.component\";\nexport * from \"./button-with-icon-right/button-with-icon-right.example.component\";\nexport * from \"./button-with-icon-custom-color/button-with-icon-custom-color.example.component\";\nexport * from \"./button-group/button-group.example.component\";\nexport * from \"./button-visual-test/button-visual-test.component\";\nexport * from \"./button-long-text/button-with-long-text-example.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-display-style-destructive-example\\\",\\n    templateUrl: \\\"./button-display-style-destructive.example.component.html\\\",\\n})\\nexport class ButtonDisplayStyleDestructiveExampleComponent {}\\n\";","export default \"<button nui-button type=\\\"button\\\" icon=\\\"power-on\\\" iconColor=\\\"orange\\\" i18n>Click me!</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-test\\\",\\n    templateUrl: \\\"./button-test.component.html\\\",\\n})\\nexport class ButtonTestComponent {\\n    isRepeat = \\\"true\\\";\\n    count = 100;\\n\\n    onCountUpClick() {\\n        this.count++;\\n    }\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\" [isBusy]=\\\"true\\\" i18n>Click me!</button>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-busy-example\",\n    templateUrl: \"./button-busy.example.component.html\",\n})\nexport class ButtonBusyExampleComponent {}\n","<button nui-button type=\"button\" [isBusy]=\"true\" i18n>Click me!</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-docs-example\",\n    templateUrl: \"./button-docs.example.component.html\",\n})\nexport class ButtonDocsComponent {}\n","<p>\n    <code>nui-button</code> allows for easy customization of a button such as changing the size and display style,\n    configuring an icon, making a button auto-repeatable, etc. Typically, the <code>nui-button</code> attribute is\n    applied to the native <code>button</code> tag, but it can be applied other HTML elements as well.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiButtonModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    This first example demonstrates the default values for the inputs. For example, <code>displayStyle</code> is not\n    being set explicitly here, so the resulting button is shown with the default styling. See the\n    <strong>Display Style</strong> section for additional display styles.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-basic\" exampleTitle=\"Basic Usage\">\n    <nui-button-basic-example></nui-button-basic-example>\n</nui-example-wrapper>\n\n<nui-message type=\"warning\">\n    <strong>Reminder:</strong> The default type of any HTML button is \"submit\". If submit behavior is not desired for\n    your use case, be sure to set <code>type=\"button\"</code> explicitly.\n</nui-message>\n\n<h2>Display Style</h2>\n<p>\n    To override the default display style, set the <code>displayStyle</code> input to one of the following string\n    values: <code>'primary'</code>, <code>'action'</code>, or <code>'destructive'</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-display-style-primary\" exampleTitle=\"Primary\">\n    <nui-button-display-style-primary-example></nui-button-display-style-primary-example>\n</nui-example-wrapper>\n\n<nui-example-wrapper filenamePrefix=\"button-display-style-action\" exampleTitle=\"Action\">\n    <nui-button-display-style-action-example></nui-button-display-style-action-example>\n</nui-example-wrapper>\n\n<nui-example-wrapper filenamePrefix=\"button-display-style-destructive\" exampleTitle=\"Destructive\">\n    <nui-button-display-style-destructive-example></nui-button-display-style-destructive-example>\n</nui-example-wrapper>\n\n<h2>Size</h2>\n<p>\n    To override the default size, set the <code>size</code> input to one of the following string values:\n    <code>'compact'</code>, or <code>'large'</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-size\" exampleTitle=\"Size\">\n    <nui-button-size-example></nui-button-size-example>\n</nui-example-wrapper>\n\n<h2>Removing Width Restriction</h2>\n<p>\n    By default all Nova buttons have a <code>max-width: 250px</code> set for their inner content;\n    in case that width is exceeded, their content will be truncated to fit within that maximum width.\n</p>\n<p>\n    In order to remove that restriction, you can apply the <code>unlimited-width</code> CSS class\n    to the <code>button</code> element as shown in the example below.\n</p>\n<nui-example-wrapper filenamePrefix=\"button-long-text\" exampleTitle=\"Removing the Width Limitation\">\n    <nui-with-button-long-text-example></nui-with-button-long-text-example>\n</nui-example-wrapper>\n\n\n<h2>Adding an Icon</h2>\n<p>\n    To add an icon, pass an icon name to the <code>icon</code> input. For a list of supported icons and icon names see\n    the documentation for <a target=\"_blank\" href=\"../components/IconComponent.html\">IconComponent</a>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-with-icon\" exampleTitle=\"Default Placement\">\n    <nui-button-with-icon-example></nui-button-with-icon-example>\n</nui-example-wrapper>\n\n<p>\n    The default left placement of the icon can be overridden. To place the icon to the right of the text within the\n    button set the <code>iconRight</code> input to true.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-with-icon-right\" exampleTitle=\"Right Placement\">\n    <nui-button-with-icon-right-example></nui-button-with-icon-right-example>\n</nui-example-wrapper>\n\n<p>\n    You can optionally set the icon's color through the <code>iconColor</code> input. When no value is provided for\n    <code>iconColor</code>, the default color is determined by the button's <code>displayStyle</code> setting.\n</p>\n\n<p>\n    <strong>Note:</strong> For <code>displayStyle</code> \"primary\", the icon color is not configurable and is set to\n    \"white\".\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-with-icon-custom-color\" exampleTitle=\"Custom Color\">\n    <nui-button-with-icon-custom-color-example></nui-button-with-icon-custom-color-example>\n</nui-example-wrapper>\n\n<p>\n    To create an <code>nui-button</code> containing only an icon, set the <code>input</code> and leave the inner\n    content empty.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-with-icon-only\" exampleTitle=\"Icon Only\">\n    <nui-button-with-icon-only-example></nui-button-with-icon-only-example>\n</nui-example-wrapper>\n\n<h2>Repeat</h2>\n<p>\n    To set <code>nui-button</code> to repeatedly emit click events while the button is pressed continuously, set the\n    <code>isRepeat</code> input to true.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-repeatable\" exampleTitle=\"Repeat\">\n    <nui-button-repeatable-example></nui-button-repeatable-example>\n</nui-example-wrapper>\n\n<h2>Busy</h2>\n<p>\n    Set <code>nui-button</code> to busy by passing true to the <code>isBusy</code> input.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-busy\" exampleTitle=\"Busy\">\n    <nui-button-busy-example></nui-button-busy-example>\n</nui-example-wrapper>\n\n<h2>Grouping</h2>\n<p>\n    An adjacent set of <code>nui-button</code> instances can be given a style indicating they are part of a group. This\n    can be done by placing them inside a <code>&lt;span&gt;</code> or <code>&lt;div&gt;</code> with the class\n    <code>btn-group</code>. Some of the style accommodations for grouped buttons include rounded corners applied only\n    to the left side of the left-most button and the right side of the right-most button and displaying only a single\n    border between the buttons.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"button-group\" exampleTitle=\"Grouping\">\n    <nui-button-group-example></nui-button-group-example>\n</nui-example-wrapper>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-visual\\\",\\n    templateUrl: \\\"./button-visual-test.component.html\\\",\\n})\\nexport class ButtonVisualTestComponent {\\n    public busy: boolean;\\n}\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\"><h3>Basic button</h3></div>\\n    <div class=\\\"row\\\"><button nui-button id=\\\"basic-button\\\" type=\\\"button\\\">Click me!</button></div>\\n\\n    <div class=\\\"row\\\"><h3>Primary, Action, and Destructive buttons</h3></div>\\n    <div class=\\\"row\\\">\\n        <button nui-button id=\\\"primary-button\\\" type=\\\"button\\\" displayStyle=\\\"primary\\\">Click me!</button>\\n        <button nui-button id=\\\"action-button\\\" type=\\\"button\\\" displayStyle=\\\"action\\\">Click me!</button>\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"destructive\\\">Click me!</button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Sized buttons</h3></div>\\n    <!-- nui-button is vulnerable to bootstrap 'row' class which sets 'display: flex'. Consider removing the inline style \\n         from the following div either when the issue is resolved or shadow dom is applied to the component-->\\n    <div class=\\\"row\\\" style=\\\"display: block\\\">\\n        <button nui-button type=\\\"button\\\" size=\\\"compact\\\">Compact</button>\\n        <button nui-button type=\\\"button\\\">Default</button>\\n        <button nui-button type=\\\"button\\\" size=\\\"large\\\">Large</button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Buttons with icons</h3></div>\\n    <div class=\\\"row\\\" style=\\\"display: block\\\">\\n        <button nui-button type=\\\"button\\\" icon=\\\"add\\\">Click me!</button>\\n        <button nui-button type=\\\"button\\\" icon=\\\"reload\\\" [iconRight]=\\\"true\\\">Click me!</button>\\n        <button nui-button type=\\\"button\\\" icon=\\\"power-on\\\" iconColor=\\\"orange\\\">Click me!</button>\\n        <button nui-button type=\\\"button\\\" icon=\\\"star-full\\\"></button>\\n        <div class=\\\"w-100 mt-2\\\"></div>\\n        <button nui-button id=\\\"primary-button\\\" type=\\\"button\\\" displayStyle=\\\"primary\\\" icon=\\\"add\\\">Click me!</button>\\n        <button nui-button id=\\\"action-button\\\" type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"status_warning\\\">Click me!</button>\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"destructive\\\" icon=\\\"printer\\\">Click me!</button>\\n        <div class=\\\"w-100 mt-2\\\"></div>\\n        <button nui-button type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"primary\\\" icon=\\\"add\\\" [iconRight]=\\\"true\\\" [disabled]=\\\"true\\\" i18n>Disabled Primary</button>\\n        <button nui-button type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"action\\\" icon=\\\"status_warning\\\" [iconRight]=\\\"true\\\" [disabled]=\\\"true\\\" i18n>Disabled Action</button>\\n        <button nui-button type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"destructive\\\" icon=\\\"printer\\\" [iconRight]=\\\"true\\\" [disabled]=\\\"true\\\" i18n>Disabled Destructive</button>\\n\\n    </div>\\n\\n    <div class=\\\"row\\\" style=\\\"display: block\\\"><h3>Sized buttons with icons</h3>\\n        <button nui-button type=\\\"button\\\" size=\\\"compact\\\" icon=\\\"add\\\">Compact + icon</button>\\n        <button nui-button type=\\\"button\\\" icon=\\\"add\\\">Default + icon</button>\\n        <button nui-button type=\\\"button\\\" size=\\\"large\\\" icon=\\\"add\\\">Large + icon</button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Buttons with repeat</h3></div>\\n    <div class=\\\"row\\\">\\n        <button nui-button type=\\\"button\\\" [isRepeat]=\\\"true\\\" displayStyle=\\\"action\\\" icon=\\\"caret-up\\\"></button>\\n        <button nui-button type=\\\"button\\\" [isRepeat]=\\\"true\\\" displayStyle=\\\"action\\\" icon=\\\"caret-down\\\"></button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Button with busy</h3></div>\\n    <div class=\\\"row\\\"><button nui-button type=\\\"button\\\" [isBusy]=\\\"true\\\">Click me!</button></div>\\n\\n    <div class=\\\"row\\\"><h3>Buttons in a group</h3></div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"btn-group\\\">\\n            <button nui-button type=\\\"button\\\">First</button>\\n            <button nui-button type=\\\"button\\\">Second</button>\\n            <button nui-button type=\\\"button\\\">Third</button>\\n            <button nui-button type=\\\"button\\\">Fourth</button>\\n            <button nui-button type=\\\"button\\\">Fifth</button>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<input id=\\\"is-repeat-off\\\" type=\\\"radio\\\" [(ngModel)]=\\\"isRepeat\\\" value=\\\"false\\\" />\\n<input id=\\\"is-repeat-on\\\" type=\\\"radio\\\" [(ngModel)]=\\\"isRepeat\\\" value=\\\"true\\\" />\\n<span id=\\\"nui-demo-click-results\\\">{{count}}</span>\\n\\n<button id=\\\"nui-demo-up-btn\\\" nui-button type=\\\"button\\\" [isRepeat]=\\\"isRepeat === 'true'\\\" icon=\\\"caret-up\\\" (click)=\\\"onCountUpClick()\\\">\\n</button>\\n<button id=\\\"nui-demo-primary-compact-btn\\\" nui-button type=\\\"button\\\" size=\\\"compact\\\" displayStyle=\\\"primary\\\" i18n>\\n    Compact\\n</button>\\n<button id=\\\"nui-demo-primary-large-plus-icon-btn\\\" nui-button type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"primary\\\" icon=\\\"add\\\" [iconRight]=\\\"true\\\" i18n>\\n    Large + icon\\n</button>\\n<button id=\\\"nui-demo-primary-large-plus-icon-disabled-btn\\\" nui-button type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"primary\\\" icon=\\\"add\\\" [iconRight]=\\\"true\\\"\\n        [disabled]=\\\"true\\\" i18n>\\n    Disabled\\n</button>\\n<button id=\\\"nui-demo-primary-large-plus-icon-busy-btn\\\" nui-button type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"primary\\\" icon=\\\"add\\\" [iconRight]=\\\"true\\\"\\n        [isBusy]=\\\"true\\\" i18n>\\n    Busy\\n</button>\\n<button nui-button id=\\\"nui-demo-default-compact-btn\\\" type=\\\"button\\\" size=\\\"compact\\\" displayStyle=\\\"default\\\" icon=\\\"add\\\" i18n>\\n    Compact\\n</button>\\n<button id=\\\"nui-default-large-btn\\\" nui-button class=\\\"testClass\\\" type=\\\"button\\\" size=\\\"large\\\" displayStyle=\\\"default\\\" icon=\\\"add\\\" i18n>\\n    Large + icon\\n</button>\\n<button id=\\\"nui-demo-action-compact-btn\\\" nui-button type=\\\"button\\\" size=\\\"compact\\\" displayStyle=\\\"action\\\" i18n>\\n    Compact\\n</button>\\n<button id=\\\"nui-demo-btn-with-icon\\\" nui-button type=\\\"button\\\" icon=\\\"add\\\" i18n>\\n    Icon\\n</button>\\n\\n<nui-with-button-long-text-example id=\\\"nui-demo-long-text-btn\\\"></nui-with-button-long-text-example>\\n\";","export default \"<button nui-button type=\\\"button\\\" displayStyle=\\\"destructive\\\" i18n>Click me!</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-with-icon-right-example\\\",\\n    templateUrl: \\\"./button-with-icon-right.example.component.html\\\",\\n})\\nexport class ButtonWithIconRightExampleComponent {}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-with-button-long-text-example\",\n    templateUrl: \"./button-with-long-text-example.component.html\",\n})\nexport class ButtonWithLongTextExampleComponent {\n    public disableWidthRestriction = true;\n\n    public toggleWidthRestriction() {\n         this.disableWidthRestriction = !this.disableWidthRestriction;\n    }\n}\n","<button [class.unlimited-width]=\"disableWidthRestriction\" nui-button type=\"button\" (click)=\"toggleWidthRestriction()\" i18n>\n    Toggle button's max-width restriction with a press of a button\n</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-group-example\",\n    templateUrl: \"./button-group.example.component.html\",\n})\nexport class ButtonGroupExampleComponent {}\n","<div class=\"btn-group\">\n    <button nui-button type=\"button\" i18n>First</button>\n    <button nui-button type=\"button\" i18n>Second</button>\n    <button nui-button type=\"button\" i18n>Third</button>\n    <button nui-button type=\"button\" i18n>Fourth</button>\n    <button nui-button type=\"button\" i18n>Fifth</button>\n</div>\n","export default \"<p>\\n    <code>nui-button</code> allows for easy customization of a button such as changing the size and display style,\\n    configuring an icon, making a button auto-repeatable, etc. Typically, the <code>nui-button</code> attribute is\\n    applied to the native <code>button</code> tag, but it can be applied other HTML elements as well.\\n</p>\\n\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiButtonModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    This first example demonstrates the default values for the inputs. For example, <code>displayStyle</code> is not\\n    being set explicitly here, so the resulting button is shown with the default styling. See the\\n    <strong>Display Style</strong> section for additional display styles.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-button-basic-example></nui-button-basic-example>\\n</nui-example-wrapper>\\n\\n<nui-message type=\\\"warning\\\">\\n    <strong>Reminder:</strong> The default type of any HTML button is \\\"submit\\\". If submit behavior is not desired for\\n    your use case, be sure to set <code>type=\\\"button\\\"</code> explicitly.\\n</nui-message>\\n\\n<h2>Display Style</h2>\\n<p>\\n    To override the default display style, set the <code>displayStyle</code> input to one of the following string\\n    values: <code>'primary'</code>, <code>'action'</code>, or <code>'destructive'</code>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-display-style-primary\\\" exampleTitle=\\\"Primary\\\">\\n    <nui-button-display-style-primary-example></nui-button-display-style-primary-example>\\n</nui-example-wrapper>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-display-style-action\\\" exampleTitle=\\\"Action\\\">\\n    <nui-button-display-style-action-example></nui-button-display-style-action-example>\\n</nui-example-wrapper>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-display-style-destructive\\\" exampleTitle=\\\"Destructive\\\">\\n    <nui-button-display-style-destructive-example></nui-button-display-style-destructive-example>\\n</nui-example-wrapper>\\n\\n<h2>Size</h2>\\n<p>\\n    To override the default size, set the <code>size</code> input to one of the following string values:\\n    <code>'compact'</code>, or <code>'large'</code>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-size\\\" exampleTitle=\\\"Size\\\">\\n    <nui-button-size-example></nui-button-size-example>\\n</nui-example-wrapper>\\n\\n<h2>Removing Width Restriction</h2>\\n<p>\\n    By default all Nova buttons have a <code>max-width: 250px</code> set for their inner content;\\n    in case that width is exceeded, their content will be truncated to fit within that maximum width.\\n</p>\\n<p>\\n    In order to remove that restriction, you can apply the <code>unlimited-width</code> CSS class\\n    to the <code>button</code> element as shown in the example below.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"button-long-text\\\" exampleTitle=\\\"Removing the Width Limitation\\\">\\n    <nui-with-button-long-text-example></nui-with-button-long-text-example>\\n</nui-example-wrapper>\\n\\n\\n<h2>Adding an Icon</h2>\\n<p>\\n    To add an icon, pass an icon name to the <code>icon</code> input. For a list of supported icons and icon names see\\n    the documentation for <a target=\\\"_blank\\\" href=\\\"../components/IconComponent.html\\\">IconComponent</a>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-with-icon\\\" exampleTitle=\\\"Default Placement\\\">\\n    <nui-button-with-icon-example></nui-button-with-icon-example>\\n</nui-example-wrapper>\\n\\n<p>\\n    The default left placement of the icon can be overridden. To place the icon to the right of the text within the\\n    button set the <code>iconRight</code> input to true.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-with-icon-right\\\" exampleTitle=\\\"Right Placement\\\">\\n    <nui-button-with-icon-right-example></nui-button-with-icon-right-example>\\n</nui-example-wrapper>\\n\\n<p>\\n    You can optionally set the icon's color through the <code>iconColor</code> input. When no value is provided for\\n    <code>iconColor</code>, the default color is determined by the button's <code>displayStyle</code> setting.\\n</p>\\n\\n<p>\\n    <strong>Note:</strong> For <code>displayStyle</code> \\\"primary\\\", the icon color is not configurable and is set to\\n    \\\"white\\\".\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-with-icon-custom-color\\\" exampleTitle=\\\"Custom Color\\\">\\n    <nui-button-with-icon-custom-color-example></nui-button-with-icon-custom-color-example>\\n</nui-example-wrapper>\\n\\n<p>\\n    To create an <code>nui-button</code> containing only an icon, set the <code>input</code> and leave the inner\\n    content empty.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-with-icon-only\\\" exampleTitle=\\\"Icon Only\\\">\\n    <nui-button-with-icon-only-example></nui-button-with-icon-only-example>\\n</nui-example-wrapper>\\n\\n<h2>Repeat</h2>\\n<p>\\n    To set <code>nui-button</code> to repeatedly emit click events while the button is pressed continuously, set the\\n    <code>isRepeat</code> input to true.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-repeatable\\\" exampleTitle=\\\"Repeat\\\">\\n    <nui-button-repeatable-example></nui-button-repeatable-example>\\n</nui-example-wrapper>\\n\\n<h2>Busy</h2>\\n<p>\\n    Set <code>nui-button</code> to busy by passing true to the <code>isBusy</code> input.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-busy\\\" exampleTitle=\\\"Busy\\\">\\n    <nui-button-busy-example></nui-button-busy-example>\\n</nui-example-wrapper>\\n\\n<h2>Grouping</h2>\\n<p>\\n    An adjacent set of <code>nui-button</code> instances can be given a style indicating they are part of a group. This\\n    can be done by placing them inside a <code>&lt;span&gt;</code> or <code>&lt;div&gt;</code> with the class\\n    <code>btn-group</code>. Some of the style accommodations for grouped buttons include rounded corners applied only\\n    to the left side of the left-most button and the right side of the right-most button and displaying only a single\\n    border between the buttons.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"button-group\\\" exampleTitle=\\\"Grouping\\\">\\n    <nui-button-group-example></nui-button-group-example>\\n</nui-example-wrapper>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiDocsModule, NuiMessageModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport {\n    ButtonBasicExampleComponent,\n    ButtonBusyExampleComponent,\n    ButtonDisplayStyleActionExampleComponent,\n    ButtonDisplayStyleDestructiveExampleComponent,\n    ButtonDisplayStylePrimaryExampleComponent,\n    ButtonDocsComponent,\n    ButtonGroupExampleComponent,\n    ButtonRepeatableExampleComponent,\n    ButtonSizeExampleComponent,\n    ButtonTestComponent,\n    ButtonVisualTestComponent,\n    ButtonWithIconCustomColorExampleComponent,\n    ButtonWithIconExampleComponent,\n    ButtonWithIconOnlyExampleComponent,\n    ButtonWithIconRightExampleComponent,\n    ButtonWithLongTextExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: ButtonDocsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"button-test\",\n        component: ButtonTestComponent,\n    },\n    {\n        path: \"button-visual-test\",\n        component: ButtonVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ButtonDocsComponent,\n        ButtonDisplayStyleActionExampleComponent,\n        ButtonDisplayStyleDestructiveExampleComponent,\n        ButtonDisplayStylePrimaryExampleComponent,\n        ButtonGroupExampleComponent,\n        ButtonRepeatableExampleComponent,\n        ButtonBasicExampleComponent,\n        ButtonBusyExampleComponent,\n        ButtonSizeExampleComponent,\n        ButtonTestComponent,\n        ButtonVisualTestComponent,\n        ButtonWithIconExampleComponent,\n        ButtonWithIconRightExampleComponent,\n        ButtonWithIconCustomColorExampleComponent,\n        ButtonWithIconOnlyExampleComponent,\n        ButtonWithLongTextExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class ButtonModule {\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-with-icon-only-example\\\",\\n    templateUrl: \\\"./button-with-icon-only.example.component.html\\\",\\n})\\nexport class ButtonWithIconOnlyExampleComponent {}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-with-icon-only-example\",\n    templateUrl: \"./button-with-icon-only.example.component.html\",\n})\nexport class ButtonWithIconOnlyExampleComponent {}\n","<button nui-button type=\"button\" icon=\"star-full\"></button>\n","var map = {\n\t\"./button-basic/button-basic.example.component.html\": \"3XmR\",\n\t\"./button-basic/button-basic.example.component.ts\": \"tQ2/\",\n\t\"./button-busy/button-busy.example.component.html\": \"X79h\",\n\t\"./button-busy/button-busy.example.component.ts\": \"Ac4+\",\n\t\"./button-display-style-action/button-display-style-action.example.component.html\": \"w1An\",\n\t\"./button-display-style-action/button-display-style-action.example.component.ts\": \"3LVe\",\n\t\"./button-display-style-destructive/button-display-style-destructive.example.component.html\": \"bNqU\",\n\t\"./button-display-style-destructive/button-display-style-destructive.example.component.ts\": \"QqQK\",\n\t\"./button-display-style-primary/button-display-style-primary.example.component.html\": \"2aQW\",\n\t\"./button-display-style-primary/button-display-style-primary.example.component.ts\": \"uHEg\",\n\t\"./button-docs/button-docs.example.component.html\": \"cuqC\",\n\t\"./button-docs/button-docs.example.component.ts\": \"LaiG\",\n\t\"./button-group/button-group.example.component.html\": \"ptgC\",\n\t\"./button-group/button-group.example.component.ts\": \"M9sE\",\n\t\"./button-long-text/button-with-long-text-example.component.html\": \"DJQC\",\n\t\"./button-long-text/button-with-long-text-example.component.ts\": \"4qDP\",\n\t\"./button-repeatable/button-repeatable.example.component.html\": \"NOaf\",\n\t\"./button-repeatable/button-repeatable.example.component.ts\": \"rcXP\",\n\t\"./button-size/button-size.example.component.html\": \"9oyA\",\n\t\"./button-size/button-size.example.component.ts\": \"KSXG\",\n\t\"./button-test/button-test.component.html\": \"ZsAX\",\n\t\"./button-test/button-test.component.ts\": \"T82f\",\n\t\"./button-visual-test/button-visual-test.component.html\": \"ZjBk\",\n\t\"./button-visual-test/button-visual-test.component.ts\": \"ZayP\",\n\t\"./button-with-icon-custom-color/button-with-icon-custom-color.example.component.html\": \"SXoX\",\n\t\"./button-with-icon-custom-color/button-with-icon-custom-color.example.component.ts\": \"rze8\",\n\t\"./button-with-icon-only/button-with-icon-only.example.component.html\": \"CzVH\",\n\t\"./button-with-icon-only/button-with-icon-only.example.component.ts\": \"fl7e\",\n\t\"./button-with-icon-right/button-with-icon-right.example.component.html\": \"3lLK\",\n\t\"./button-with-icon-right/button-with-icon-right.example.component.ts\": \"bVn8\",\n\t\"./button-with-icon/button-with-icon.example.component.html\": \"JtML\",\n\t\"./button-with-icon/button-with-icon.example.component.ts\": \"uvUU\",\n\t\"./button.module.ts\": \"rsMe\",\n\t\"./index.ts\": \"3LtH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"hRAe\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-with-icon-right-example\",\n    templateUrl: \"./button-with-icon-right.example.component.html\",\n})\nexport class ButtonWithIconRightExampleComponent {}\n","<button nui-button type=\"button\" icon=\"reload\" [iconRight]=\"true\" i18n>Click me!</button>\n","export default \"<div class=\\\"btn-group\\\">\\n    <button nui-button type=\\\"button\\\" i18n>First</button>\\n    <button nui-button type=\\\"button\\\" i18n>Second</button>\\n    <button nui-button type=\\\"button\\\" i18n>Third</button>\\n    <button nui-button type=\\\"button\\\" i18n>Fourth</button>\\n    <button nui-button type=\\\"button\\\" i18n>Fifth</button>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-repeatable-example\\\",\\n    templateUrl: \\\"./button-repeatable.example.component.html\\\",\\n})\\nexport class ButtonRepeatableExampleComponent {\\n    count = 100;\\n\\n    onCountUpClick() {\\n        this.count++;\\n    }\\n\\n    onCountDownClick() {\\n        this.count--;\\n    }\\n}\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiDocsModule, NuiMessageModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    ButtonBasicExampleComponent,\\n    ButtonBusyExampleComponent,\\n    ButtonDisplayStyleActionExampleComponent,\\n    ButtonDisplayStyleDestructiveExampleComponent,\\n    ButtonDisplayStylePrimaryExampleComponent,\\n    ButtonDocsComponent,\\n    ButtonGroupExampleComponent,\\n    ButtonRepeatableExampleComponent,\\n    ButtonSizeExampleComponent,\\n    ButtonTestComponent,\\n    ButtonVisualTestComponent,\\n    ButtonWithIconCustomColorExampleComponent,\\n    ButtonWithIconExampleComponent,\\n    ButtonWithIconOnlyExampleComponent,\\n    ButtonWithIconRightExampleComponent,\\n    ButtonWithLongTextExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: ButtonDocsComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"button-test\\\",\\n        component: ButtonTestComponent,\\n    },\\n    {\\n        path: \\\"button-visual-test\\\",\\n        component: ButtonVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        NuiMessageModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        ButtonDocsComponent,\\n        ButtonDisplayStyleActionExampleComponent,\\n        ButtonDisplayStyleDestructiveExampleComponent,\\n        ButtonDisplayStylePrimaryExampleComponent,\\n        ButtonGroupExampleComponent,\\n        ButtonRepeatableExampleComponent,\\n        ButtonBasicExampleComponent,\\n        ButtonBusyExampleComponent,\\n        ButtonSizeExampleComponent,\\n        ButtonTestComponent,\\n        ButtonVisualTestComponent,\\n        ButtonWithIconExampleComponent,\\n        ButtonWithIconRightExampleComponent,\\n        ButtonWithIconCustomColorExampleComponent,\\n        ButtonWithIconOnlyExampleComponent,\\n        ButtonWithLongTextExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class ButtonModule {\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-with-icon-custom-color-example\\\",\\n    templateUrl: \\\"./button-with-icon-custom-color.example.component.html\\\",\\n})\\nexport class ButtonWithIconCustomColorExampleComponent {}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-with-icon-example\",\n    templateUrl: \"./button-with-icon.example.component.html\",\n})\nexport class ButtonWithIconExampleComponent {}\n","<button nui-button type=\"button\" icon=\"add\" i18n>Click me!</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-display-style-primary-example\",\n    templateUrl: \"./button-display-style-primary.example.component.html\",\n})\nexport class ButtonDisplayStylePrimaryExampleComponent {}\n","<button nui-button type=\"button\" displayStyle=\"primary\" i18n>Click me!</button>\n","import { Component, Inject } from \"@angular/core\";\nimport { ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-button-basic-example\",\n    templateUrl: \"./button-basic.example.component.html\",\n})\nexport class ButtonBasicExampleComponent {\n    constructor(@Inject(ToastService) private toastService: ToastService) {\n    }\n\n    onClick() {\n        this.toastService.info({\n            message: $localize `Button clicked!`,\n            title: $localize `Event`,\n        });\n    }\n}\n","<button nui-button type=\"button\" (click)=\"onClick()\" i18n>Click me!</button>\n","export default \"import { Component, Inject } from \\\"@angular/core\\\";\\nimport { ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-basic-example\\\",\\n    templateUrl: \\\"./button-basic.example.component.html\\\",\\n})\\nexport class ButtonBasicExampleComponent {\\n    constructor(@Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    onClick() {\\n        this.toastService.info({\\n            message: $localize `Button clicked!`,\\n            title: $localize `Event`,\\n        });\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-display-style-primary-example\\\",\\n    templateUrl: \\\"./button-display-style-primary.example.component.html\\\",\\n})\\nexport class ButtonDisplayStylePrimaryExampleComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-button-with-icon-example\\\",\\n    templateUrl: \\\"./button-with-icon.example.component.html\\\",\\n})\\nexport class ButtonWithIconExampleComponent {}\\n\";","export default \"<button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" i18n>Click me!</button>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-button-with-icon-custom-color-example\",\n    templateUrl: \"./button-with-icon-custom-color.example.component.html\",\n})\nexport class ButtonWithIconCustomColorExampleComponent {}\n","<button nui-button type=\"button\" icon=\"power-on\" iconColor=\"orange\" i18n>Click me!</button>\n"]}