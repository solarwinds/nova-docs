var B,C=Object.freeze,U=Object.defineProperty,b=(t,n)=>C(U(t,"raw",{value:C(n||t.slice())}));(self.webpackChunk_nova_ui_bits=self.webpackChunk_nova_ui_bits||[]).push([[6527],{86087:function(t,n,o){var e={"./index.ts":97209,"./toast-basic-html/toast-basic-html.example.component.html":92980,"./toast-basic-html/toast-basic-html.example.component.ts":90025,"./toast-basic/toast-basic.example.component.html":99400,"./toast-basic/toast-basic.example.component.ts":34326,"./toast-config/toast-config.example.component.html":24638,"./toast-config/toast-config.example.component.ts":34743,"./toast-docs/toast-docs.example.component.html":83923,"./toast-docs/toast-docs.example.component.ts":15558,"./toast-events/toast-events.example.component.html":87739,"./toast-events/toast-events.example.component.ts":6742,"./toast-position/toast-position.example.component.html":33811,"./toast-position/toast-position.example.component.ts":75705,"./toast-sticky-error/toast-sticky-error.example.component.html":14074,"./toast-sticky-error/toast-sticky-error.example.component.ts":37700,"./toast-test/toast-test.component.html":40036,"./toast-test/toast-test.component.ts":22206,"./toast-type/toast-type.example.component.html":72411,"./toast-type/toast-type.example.component.ts":1331,"./toast-visual-test/toast-visual-test.component.html":70149,"./toast-visual-test/toast-visual-test.component.ts":63503,"./toast.module.ts":71136,"components/demo/toast/index.ts":97209,"components/demo/toast/toast-basic-html/toast-basic-html.example.component.html":92980,"components/demo/toast/toast-basic-html/toast-basic-html.example.component.ts":90025,"components/demo/toast/toast-basic/toast-basic.example.component.html":99400,"components/demo/toast/toast-basic/toast-basic.example.component.ts":34326,"components/demo/toast/toast-config/toast-config.example.component.html":24638,"components/demo/toast/toast-config/toast-config.example.component.ts":34743,"components/demo/toast/toast-docs/toast-docs.example.component.html":83923,"components/demo/toast/toast-docs/toast-docs.example.component.ts":15558,"components/demo/toast/toast-events/toast-events.example.component.html":87739,"components/demo/toast/toast-events/toast-events.example.component.ts":6742,"components/demo/toast/toast-position/toast-position.example.component.html":33811,"components/demo/toast/toast-position/toast-position.example.component.ts":75705,"components/demo/toast/toast-sticky-error/toast-sticky-error.example.component.html":14074,"components/demo/toast/toast-sticky-error/toast-sticky-error.example.component.ts":37700,"components/demo/toast/toast-test/toast-test.component.html":40036,"components/demo/toast/toast-test/toast-test.component.ts":22206,"components/demo/toast/toast-type/toast-type.example.component.html":72411,"components/demo/toast/toast-type/toast-type.example.component.ts":1331,"components/demo/toast/toast-visual-test/toast-visual-test.component.html":70149,"components/demo/toast/toast-visual-test/toast-visual-test.component.ts":63503,"components/demo/toast/toast.module.ts":71136};function s(t){var n=i(t);return o(n)}function i(t){if(!o.o(e,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e[t]}s.keys=function(){return Object.keys(e)},s.resolve=i,t.exports=s,s.id=86087},88085:function(t,n,o){"use strict";o.r(n),o.d(n,{ToastModule:function(){return S}});var e=o(3679),s=o(99763),i=o(14347),a=o(33018),l=o(74293);let r=(()=>{class t{constructor(t){this.toastService=t}ngOnInit(){this.toastService.setConfig({},"id")}onShowToast(t){this.toastService.info({title:$localize`Simple Toast.`,message:$localize`Hi there! I'm a simple toast message`,options:this.getOptions()})}getOptions(){return{timeOut:5e3,extendedTimeOut:2e3}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-basic-example"]],decls:2,vars:0,consts:function(){let t;return t=$localize`:␟a23cbb2f313fa1ca5fcd7e1344ae5f2e3eed8622␟2710356073868596677: Show Toast
`,[["nui-button","","type","button","id","nui-basic-toast-example",3,"click"],t]},template:function(t,n){1&t&&(a.TgZ(0,"button",0),a.NdJ("click",function(t){return n.onShowToast(t)}),a.SDv(1,1),a.qZA())},directives:[l.r],encapsulation:2}),t})(),c=(()=>{class t{constructor(t){this.toastService=t}ngOnInit(){this.toastService.setConfig({},"id")}onShowStickyError(t){this.toastService.error({title:$localize`Sticky Error`,message:$localize`Red Alert`,options:this.getOptions()})}onHideStickyError(t){this.toastService.clear()}getOptions(){return{clickToDismiss:!1,closeButton:!1,positionClass:"nui-toast--top-right",stickyError:!0}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-sticky-error-example"]],decls:4,vars:0,consts:function(){let t,n;return t=$localize`:␟73e91c8afb717051ce3a7e58319c404b668bb600␟84107991566850864: Show Sticky Error
`,n=$localize`:␟459669acb5eb3b7154ed38323a2e0d58c71e0e57␟6289058846217763443: Hide Sticky Error
`,[["nui-button","","type","button","id","nui-show-sticky-error-toast-example",3,"click"],t,["nui-button","","type","button","id","nui-hide-sticky-error-toast-example",3,"click"],n]},template:function(t,n){1&t&&(a.TgZ(0,"button",0),a.NdJ("click",function(t){return n.onShowStickyError(t)}),a.SDv(1,1),a.qZA(),a.TgZ(2,"button",2),a.NdJ("click",function(t){return n.onHideStickyError(t)}),a.SDv(3,3),a.qZA())},directives:[l.r],encapsulation:2}),t})(),p=(()=>{class t{constructor(t){this.toastService=t}ngOnInit(){this.toastService.setConfig({},"id")}onShowToast(t){this.toastService.info({title:$localize`Toast Configuration`,message:$localize`I'm pretty easy to configure`,options:this.getOptions()})}getOptions(){return{extendedTimeOut:2e3,clickToDismiss:!0,closeButton:!0,positionClass:"nui-toast--bottom-right",progressBar:!0,progressAnimation:"increasing",timeOut:5e3}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-config-example"]],decls:2,vars:0,consts:function(){let t;return t=$localize`:␟a23cbb2f313fa1ca5fcd7e1344ae5f2e3eed8622␟2710356073868596677: Show Toast
`,[["nui-button","","type","button","id","nui-toast-config-example",3,"click"],t]},template:function(t,n){1&t&&(a.TgZ(0,"button",0),a.NdJ("click",function(t){return n.onShowToast(t)}),a.SDv(1,1),a.qZA())},directives:[l.r],encapsulation:2}),t})();var u=o(70132);let d=(()=>{class t{constructor(t){this.toastService=t}ngOnInit(){this.toastService.setConfig({timeOut:5e3,extendedTimeOut:2e3},"id")}showToastWithEnabledHtml(){this.toastService.info({title:$localize`Toast with enableHtml set to true`,message:$localize`Hi there! I'm a simple toast message. <a href="#">Awesome link</a>`,options:{enableHtml:!0}})}showToastWithDisabledHtml(){this.toastService.info({title:$localize`Toast with enableHtml set to false`,message:$localize`Hi there! I'm a simple toast message <a href="#">Awesome link</a>`,options:{enableHtml:!1}})}showToastWithScriptTagIncluded(){this.toastService.info({title:$localize`Toast with forbidden tags and enableHtml set to true`,message:$localize(B||(B=b(['\n                Hi there! I\'m a toast message with forbidden tags:\n                <script>alert("You shall not pass")<\/script>\n                <object width="400" height="400"></object>\n                <iframe src="https://www.solarwinds.com/"></iframe>\n                <embed src="https://www.solarwinds.com/">\n                ']))),options:{enableHtml:!0}})}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-basic-html-example"]],decls:6,vars:0,consts:function(){let t,n,o;return t=$localize`:␟6c238ef6354bdb67a9c360b9f79b5d76a9b2c134␟2857066292756290229: Show Toast With Enabled Html
`,n=$localize`:␟96d6f7642a72377473e4f2cfe23bbd6bddc4d2c5␟6735198010678448747: Show Toast With Disabled Html
`,o=$localize`:␟471389986a59dc756f003fc933922002fcdfa7f7␟2205638554318306504: Show Toast With Script Tag
`,[["nui-button","","type","button","id","nui-basic-toast-html-example-1",3,"click"],t,["nui-button","","type","button","id","nui-basic-toast-html-example-2",1,"ml-3",3,"click"],n,["nui-button","","type","button","id","nui-basic-toast-html-example-3",1,"ml-3",3,"click"],o]},template:function(t,n){1&t&&(a.TgZ(0,"button",0),a.NdJ("click",function(){return n.showToastWithEnabledHtml()}),a.SDv(1,1),a.qZA(),a.TgZ(2,"button",2),a.NdJ("click",function(){return n.showToastWithDisabledHtml()}),a.SDv(3,3),a.qZA(),a.TgZ(4,"button",4),a.NdJ("click",function(){return n.showToastWithScriptTagIncluded()}),a.SDv(5,5),a.qZA())},directives:[l.r],encapsulation:2}),t})(),g=(()=>{class t{constructor(t){this.toastService=t}ngOnInit(){this.toastService.setConfig({},"id")}onShowInfo(t){this.toastService.info({title:$localize`Info`,message:$localize`E pluribus unum (/ˈiː ˈplʊərɪbəs ˈjuːnəm/; Latin: [ˈeː ˈpluːrɪbʊs ˈuːnũː]) is Latin for 'Out of many, one'`,options:this.getOptions()})}onShowSuccess(t){this.toastService.success({title:$localize`Success`,message:$localize`Well done!`,options:this.getOptions()})}onShowWarning(t){this.toastService.warning({title:$localize`Warning`,message:$localize`There can be only one.`,options:this.getOptions()})}onShowError(t){this.toastService.error({title:$localize`Error`,message:$localize`Nope.`,options:this.getOptions()})}clear(){this.toastService.clear()}getOptions(){return{timeOut:3e3,extendedTimeOut:1e3}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-type-example"]],decls:10,vars:0,consts:function(){let t,n,o,e,s;return t=$localize`:␟4e3660efdab9a36d0c2b9a75afb6890bc1df69f5␟5517331999189494774: Info
`,n=$localize`:␟a609e7659bae33288905f3784a78a7784015e4d6␟609261410959075051: Success
`,o=$localize`:␟a47f8ca31174264d79465f80f9f71bf77a0c2a98␟4289123064823197293: Warning
`,e=$localize`:␟bc512411febf67584bab5a3154c2fe915d63aa34␟6550673108079808986: Error
`,s=$localize`:␟faaede26c11a67ead8b7859f0b7fe4805cb990cc␟9203483089882456546: Hide Toasts
`,[["nui-button","","type","button","id","nui-info-toast",3,"click"],t,["nui-button","","type","button","id","nui-success-toast",3,"click"],n,["nui-button","","type","button","id","nui-warning-toast",3,"click"],o,["nui-button","","type","button","id","nui-error-toast",3,"click"],e,["nui-button","","type","button","id","nui-hide-all-toasts",3,"click"],s]},template:function(t,n){1&t&&(a.TgZ(0,"button",0),a.NdJ("click",function(t){return n.onShowInfo(t)}),a.SDv(1,1),a.qZA(),a.TgZ(2,"button",2),a.NdJ("click",function(t){return n.onShowSuccess(t)}),a.SDv(3,3),a.qZA(),a.TgZ(4,"button",4),a.NdJ("click",function(t){return n.onShowWarning(t)}),a.SDv(5,5),a.qZA(),a.TgZ(6,"button",6),a.NdJ("click",function(t){return n.onShowError(t)}),a.SDv(7,7),a.qZA(),a.TgZ(8,"button",8),a.NdJ("click",function(){return n.clear()}),a.SDv(9,9),a.qZA())},directives:[l.r],encapsulation:2}),t})();var m=o(18906),h=o(67077),T=o(38583);function f(t,n){if(1&t&&(a.TgZ(0,"nui-radio",5),a._uU(1),a.qZA()),2&t){const t=n.$implicit;a.s9C("id","nui-toast-position-"+t.className),a.Q6J("checked","nui-toast--top-right"===t.className)("value",t.className),a.xp6(1),a.hij(" ",t.displayValue," ")}}let v=(()=>{class t{constructor(t){this.toastService=t,this.toastPositions=[{displayValue:$localize`Top Right`,className:"nui-toast--top-right"},{displayValue:$localize`Top Left`,className:"nui-toast--top-left"},{displayValue:$localize`Bottom Right`,className:"nui-toast--bottom-right"},{displayValue:$localize`Bottom Left`,className:"nui-toast--bottom-left"},{displayValue:$localize`Top Full Width`,className:"nui-toast--top-full-width"},{displayValue:$localize`Bottom Full Width`,className:"nui-toast--bottom-full-width"},{displayValue:$localize`Top Center`,className:"nui-toast--top-center"},{displayValue:$localize`Bottom Center`,className:"nui-toast--bottom-center"},{displayValue:$localize`CUSTOM CLASS (top: 200px; right: 200px)`,className:"demoToastCustomClass"}],this.selectedPosition=this.toastPositions[0].className}ngOnInit(){this.toastService.setConfig({},"id")}onShowToast(t){this.toastService.info({title:$localize`Position Example`,message:this.selectedPosition,options:this.getOptions()})}getOptions(){return{timeOut:5e3,extendedTimeOut:2e3,positionClass:this.selectedPosition}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-position-example"]],decls:6,vars:2,consts:function(){let t;return t=$localize`:␟a23cbb2f313fa1ca5fcd7e1344ae5f2e3eed8622␟2710356073868596677: Show Toast
`,[[1,"nui-flex-container"],[3,"value","valueChange"],[3,"id","checked","value",4,"ngFor","ngForOf"],["nui-button","","type","button","id","nui-toast-position-example",3,"click"],t,[3,"id","checked","value"]]},template:function(t,n){1&t&&(a.TgZ(0,"div",0),a.TgZ(1,"div"),a.TgZ(2,"nui-radio-group",1),a.NdJ("valueChange",function(t){return n.selectedPosition=t}),a.YNc(3,f,2,4,"nui-radio",2),a.qZA(),a.qZA(),a.qZA(),a.TgZ(4,"button",3),a.NdJ("click",function(t){return n.onShowToast(t)}),a.SDv(5,4),a.qZA()),2&t&&(a.xp6(2),a.Q6J("value",n.selectedPosition),a.xp6(1),a.Q6J("ngForOf",n.toastPositions))},directives:[h.w,T.sg,l.r,h.U],encapsulation:2}),t})();var Z=o(71057);function x(t,n){if(1&t&&(a.TgZ(0,"div"),a.TgZ(1,"nui-message",4),a.TgZ(2,"div"),a.SDv(3,5),a.qZA(),a.qZA(),a.TgZ(4,"nui-message",4),a.TgZ(5,"div",6),a.SDv(6,7),a.qZA(),a.qZA(),a.qZA()),2&t){const t=a.oxw();a.xp6(1),a.Q6J("allowDismiss",!1),a.xp6(2),a.pQV(t.lastShown),a.QtT(3),a.xp6(1),a.Q6J("allowDismiss",!1),a.xp6(2),a.pQV(t.clickCount),a.QtT(6)}}function C(t,n){1&t&&(a.TgZ(0,"nui-message",4),a.SDv(1,8),a.qZA()),2&t&&a.Q6J("allowDismiss",!1)}let y=(()=>{class t{constructor(t){this.toastService=t,this.clickCount=0,this.toastCount=0}ngOnInit(){this.toastService.setConfig({},"id")}onShowToast(t){var n,o,e;const s=this.toastService.info({title:$localize`Toast Events`,message:$localize`Click Me!`,options:this.getOptions()});null===(n=s.onShown)||void 0===n||n.subscribe(()=>{++this.toastCount,this.isDisplayed=!0,this.lastShown=s.toastId}),null===(o=s.onClick)||void 0===o||o.subscribe(()=>{++this.clickCount}),null===(e=s.onHidden)||void 0===e||e.subscribe(()=>{--this.toastCount,this.isDisplayed=this.toastCount>0})}getOptions(){return{extendedTimeOut:5e3,clickToDismiss:!1,closeButton:!1,positionClass:"nui-toast--top-right",progressBar:!0,progressAnimation:"increasing",timeOut:1e4}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-events-example"]],decls:6,vars:2,consts:function(){let t,n,o,e;return t=$localize`:␟a23cbb2f313fa1ca5fcd7e1344ae5f2e3eed8622␟2710356073868596677: Show Toast
`,n=$localize`:␟b816f89110b7cac8b08b31cd862cb3c4a153fb2a␟4313065063045700681:ID of last toast shown: ${"\ufffd0\ufffd"}:INTERPOLATION:`,o=$localize`:␟3ba4d848c066c7d97bc1b561f0e2d1f98a4678cc␟182872845085764762: Clicks on toast: ${"\ufffd0\ufffd"}:INTERPOLATION: `,e=$localize`:␟96ac7902ce2837f009c3f03c468fca0ac0d308c0␟3981941284307704837:No toast displayed`,[[4,"ngIf","ngIfElse"],["notoast",""],["nui-button","","type","button","id","nui-toast-events-example",3,"click"],t,["type","info",3,"allowDismiss"],n,["id","toast-example-click-counter"],o,e]},template:function(t,n){if(1&t&&(a.YNc(0,x,7,4,"div",0),a.YNc(1,C,2,1,"ng-template",null,1,a.W1O),a._UZ(3,"nui-divider"),a.TgZ(4,"button",2),a.NdJ("click",function(t){return n.onShowToast(t)}),a.SDv(5,3),a.qZA()),2&t){const t=a.MAs(2);a.Q6J("ngIf",n.isDisplayed)("ngIfElse",t)}},directives:[T.O5,Z.X,l.r,m.q],encapsulation:2}),t})();const w=[{path:"",component:(()=>{class t{getToastDeclarationKey(t){return t}getToastConfigKey(t){return t}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-docs-example"]],decls:162,vars:5,consts:[["href","../interfaces/IToastDeclaration.html"],["filenamePrefix","toast-basic","exampleTitle","Basic usage"],["filenamePrefix","toast-basic-html","exampleTitle","Basic HTML Usage"],["filenamePrefix","toast-type","exampleTitle","Types"],["href","../interfaces/IToastConfig.html"],["filenamePrefix","toast-config","exampleTitle","Configuration"],["href","../miscellaneous/enumerations.html#ToastPositionClass"],["type","warning",3,"allowDismiss"],["filenamePrefix","toast-position","exampleTitle","Positioning"],["filenamePrefix","toast-sticky-error","exampleTitle","Sticky error"],["href","../interfaces/IActiveToast.html"],["filenamePrefix","toast-events","exampleTitle","Events"]],template:function(t,n){1&t&&(a.TgZ(0,"h2"),a._uU(1,"Required Modules"),a.qZA(),a.TgZ(2,"ul"),a.TgZ(3,"li"),a.TgZ(4,"code"),a._uU(5,"NuiToastModule"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(6,"h2"),a._uU(7,"Basic Usage"),a.qZA(),a.TgZ(8,"div"),a._uU(9," You can use "),a.TgZ(10,"code"),a._uU(11,"IToastService"),a.qZA(),a._uU(12,", "),a.TgZ(13,"code"),a._uU(14,"ToastService"),a.qZA(),a._uU(15,' to show a (usually) temporary message (toast), associated with some event. In example below we\'re showing a toast message when the "Show Toast" button is clicked. Following construction is used to create a toast: '),a.TgZ(16,"code"),a._uU(17,"IToastService.info(toastDeclaration: "),a.TgZ(18,"a",0),a._uU(19,"IToastDeclaration"),a.qZA(),a._uU(20,")"),a.qZA(),a._uU(21,". Any property in "),a.TgZ(22,"a",0),a.TgZ(23,"code"),a._uU(24,"IToastDeclaration"),a.qZA(),a.qZA(),a._uU(25," is optional.\n"),a.qZA(),a.TgZ(26,"p"),a._uU(27," When using the toast component with a title, a space is automatically inserted in front of the message body to create spacial separation from the title. In addition to the provided space, it's suggested that the user add a sentence-ending punctuation mark to the title to further emphasize this separation.\n"),a.qZA(),a.TgZ(28,"nui-example-wrapper",1),a._UZ(29,"nui-toast-basic-example"),a.qZA(),a.TgZ(30,"h2"),a._uU(31,"Basic Usage With Html"),a.qZA(),a.TgZ(32,"p"),a._uU(33," Toast allows HTML usage inside the "),a.TgZ(34,"code"),a._uU(35),a.qZA(),a._uU(36," container by default. Note: The provided value will be sanitized and rendered.\n"),a.qZA(),a.TgZ(37,"p"),a._uU(38," To configure a toast to display HTML as plain text, set the "),a.TgZ(39,"code"),a._uU(40),a.qZA(),a._uU(41," property in "),a.TgZ(42,"code"),a._uU(43),a.qZA(),a._uU(44," to "),a.TgZ(45,"code"),a._uU(46,"false"),a.qZA(),a._uU(47,".\n"),a.qZA(),a.TgZ(48,"p"),a._uU(49," When the "),a.TgZ(50,"code"),a._uU(51),a.qZA(),a._uU(52," flag is turned on, all the content will be sanitized, basic tags for changing fonts are often allowed, such as "),a.TgZ(53,"code"),a._uU(54,"<b>"),a.qZA(),a._uU(55,", "),a.TgZ(56,"code"),a._uU(57,"<i>"),a.qZA(),a._uU(58,", "),a.TgZ(59,"code"),a._uU(60,"<u>"),a.qZA(),a._uU(61,", "),a.TgZ(62,"code"),a._uU(63,"<em>"),a.qZA(),a._uU(64,", and "),a.TgZ(65,"code"),a._uU(66,"<strong>"),a.qZA(),a._uU(67,". More advanced tags such as "),a.TgZ(68,"code"),a._uU(69,"<script>"),a.qZA(),a._uU(70,", "),a.TgZ(71,"code"),a._uU(72,"<object>"),a.qZA(),a._uU(73,", "),a.TgZ(74,"code"),a._uU(75,"<embed>"),a.qZA(),a._uU(76,", and "),a.TgZ(77,"code"),a._uU(78,"<link>"),a.qZA(),a._uU(79," are removed by the sanitization process. Additionally, potentially dangerous attributes such as "),a.TgZ(80,"code"),a._uU(81,"onclick"),a.qZA(),a._uU(82," are removed in order to prevent malicious code from being injected.\n"),a.qZA(),a.TgZ(83,"nui-example-wrapper",2),a._UZ(84,"nui-toast-basic-html-example"),a.qZA(),a.TgZ(85,"h2"),a._uU(86,"Types"),a.qZA(),a.TgZ(87,"p"),a._uU(88," Toast types allows you to convey some contextual information about the message by applying different styles to toasts.\n"),a.qZA(),a.TgZ(89,"nui-example-wrapper",3),a._UZ(90,"nui-toast-type-example"),a.qZA(),a.TgZ(91,"h2"),a._uU(92,"Configuration"),a.qZA(),a.TgZ(93,"p"),a._uU(94," Toast messages are highly configurable via "),a.TgZ(95,"a",4),a._uU(96,"IToastConfig"),a.qZA(),a._uU(97," interface. The following example employs some of the more common settings: "),a._UZ(98,"br"),a.TgZ(99,"code"),a._uU(100,' extendedTimeOut: 2000, clickToDismiss: true, closeButton: true, positionClass: "toast-bottom-right", progressBar: true, progressAnimation: "increasing", timeOut: 5000 '),a.qZA(),a.qZA(),a.TgZ(101,"nui-example-wrapper",5),a._UZ(102,"nui-toast-config-example"),a.qZA(),a.TgZ(103,"h2"),a._uU(104,"Positioning"),a.qZA(),a.TgZ(105,"p"),a._uU(106," The position of a toast message is determined by the value of "),a.TgZ(107,"code"),a._uU(108,"IToastConfig.positionClass"),a.qZA(),a._uU(109,". By default toast is positioned top-right. To implement different positioning you must pass one of available options from "),a.TgZ(110,"a",6),a.TgZ(111,"code"),a._uU(112,"ToastPositionClass"),a.qZA(),a.qZA(),a._uU(113," to "),a.TgZ(114,"a",4),a.TgZ(115,"code"),a._uU(116,"IToastConfig"),a.qZA(),a.qZA(),a._uU(117," positionClass property."),a._UZ(118,"br"),a._UZ(119,"br"),a._uU(120," It is also possible to set a custom class to configure the position of the "),a.TgZ(121,"code"),a._uU(122,"nui-toast"),a.qZA(),a._uU(123,". Simply populate the "),a.TgZ(124,"code"),a._uU(125,"IToastConfig.positionClass"),a.qZA(),a._uU(126," with the custom css class name. "),a.TgZ(127,"nui-message",7),a._uU(128," Make sure you defined a custom class in a global stylesheet "),a.qZA(),a.qZA(),a.TgZ(129,"nui-example-wrapper",8),a._UZ(130,"nui-toast-position-example"),a.qZA(),a.TgZ(131,"h2"),a._uU(132,"Sticky Error"),a.qZA(),a.TgZ(133,"p"),a._uU(134," You can also optionally force error toasts to remain visible indefinitely using "),a.TgZ(135,"code"),a._uU(136,"IToastConfig.stickyError"),a.qZA(),a._uU(137,". Note, that this option is only available with "),a.TgZ(138,"code"),a._uU(139,"IToastService.error"),a.qZA(),a._uU(140,".\n"),a.qZA(),a.TgZ(141,"nui-example-wrapper",9),a._UZ(142,"nui-toast-sticky-error-example"),a.qZA(),a.TgZ(143,"h2"),a._uU(144,"Events"),a.qZA(),a.TgZ(145,"p"),a._uU(146," With "),a.TgZ(147,"a",10),a._uU(148,"IActiveToast"),a.qZA(),a._uU(149,", it's possible to capture (and act upon) following events per toast instance:\n"),a.qZA(),a.TgZ(150,"ul"),a.TgZ(151,"li"),a.TgZ(152,"code"),a._uU(153,"onShown"),a.qZA(),a.qZA(),a.TgZ(154,"li"),a.TgZ(155,"code"),a._uU(156,"onHidden"),a.qZA(),a.qZA(),a.TgZ(157,"li"),a.TgZ(158,"code"),a._uU(159,"onClick"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(160,"nui-example-wrapper",11),a._UZ(161,"nui-toast-events-example"),a.qZA()),2&t&&(a.xp6(35),a.Oqu(n.getToastDeclarationKey("message")),a.xp6(5),a.Oqu(n.getToastConfigKey("enableHtml")),a.xp6(3),a.Oqu(n.getToastDeclarationKey("options")),a.xp6(8),a.Oqu(n.getToastConfigKey("enableHtml")),a.xp6(76),a.Q6J("allowDismiss",!1))},directives:[u.h,r,d,g,p,m.q,v,c,y],encapsulation:2}),t})(),data:{srlc:{stage:i.We9.ga},showThemeSwitcher:!0}},{path:"toast-visual-test",component:(()=>{class t{constructor(t){this.toastService=t,this.errorMessage="Something went wrong + in addition there is an extremely\n    long line that verifies that the toast expands as more text comes into it. More or less text -\n    Toast messages must look good either way!"}ngOnInit(){this.toastService.setConfig({},"id")}showToastsAllPositions(t,n,o=!1){this.onShowInfo(t,n,o,"nui-toast--top-left"),this.onShowError(t,n,o,"nui-toast--top-right","Error",this.errorMessage),this.onShowSuccess(t,n,o,"nui-toast--bottom-left"),this.onShowWarning(t,n,o,"nui-toast--bottom-right"),this.onShowInfo(t,n,o,"nui-toast--top-center"),this.onShowError(t,n,o,"nui-toast--bottom-center")}showToastsFullWidth(t,n,o=!1){this.onShowSuccess(t,n,o,"nui-toast--top-full-width"),this.onShowWarning(t,n,o,"nui-toast--bottom-full-width")}showToastsAdjustSize(t,n,o=!1){this.onShowInfo(t,n,o,"nui-toast--top-right"),this.onShowSuccess(t,n,o,"nui-toast--top-right"),this.onShowWarning(t,n,o,"nui-toast--top-right"),this.onShowError(t,n,o,"nui-toast--top-right","Error",this.errorMessage)}showToastsNoHeader(t,n,o=!1,e=""){this.onShowInfo(t,n,o,"nui-toast--top-right",e),this.onShowSuccess(t,n,o,"nui-toast--top-right",e),this.onShowWarning(t,n,o,"nui-toast--top-right",e),this.onShowError(t,n,o,"nui-toast--top-right",e)}onShowInfo(t,n,o=!1,e,s="Information",i="Some info message"){this.toastService.info({title:s,message:`${i}`,options:this.getOptions(n,e,o)})}onShowError(t,n,o=!1,e,s="Failure!",i="Something went wrong"){this.toastService.error({title:s,message:`${i}`,options:this.getOptions(n,e,o)})}onShowSuccess(t,n,o=!1,e,s="Well Done!",i="You're great!"){this.toastService.success({title:s,message:`${i}`,options:this.getOptions(n,e,o)})}onShowWarning(t,n,o=!1,e,s="Attention!",i="Pay attention!"){this.toastService.warning({title:s,message:`${i}`,options:this.getOptions(n,e,o)})}callStickyToast(t){this.toastService.error({title:"Failure",message:"This error is sticky!",options:{stickyError:!0}})}clearToast(t){this.toastService.clear()}getOptions(t,n,o=!1){return{timeOut:t,extendedTimeOut:2e3,positionClass:n,progressBar:o}}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-visual"]],decls:51,vars:0,consts:[[1,"container","pt-5"],[1,"row"],[1,"col"],["id","nui-toast-positions",1,"d-flex","justify-content-start"],["id","nui-toast-button-all-positions",3,"click"],["id","nui-toast-fw",1,"d-flex","justify-content-start"],["id","nui-toast-position-fw",3,"click"],[1,"d-flex","justify-content-start"],["id","nui-toast-clear-all-toasts",3,"click"],["id","nui-toast-sticky",3,"click"],["id","nui-toast-buttons-chain",1,"d-flex","justify-content-start"],["id","nui-toast-adjust-size",3,"click"],["id","nui-toast-buttons-chain-no-header",1,"d-flex","justify-content-start"],["id","nui-toast-no-header",3,"click"],["id","nui-toast-button-all-positions-progress-bar",3,"click"]],template:function(t,n){1&t&&(a.TgZ(0,"div",0),a.TgZ(1,"div",1),a.TgZ(2,"div",2),a.TgZ(3,"h3"),a._uU(4,"Basic Toast Positioned defferently"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(5,"div",1),a.TgZ(6,"div",2),a.TgZ(7,"div",3),a.TgZ(8,"button",4),a.NdJ("click",function(t){return n.showToastsAllPositions(t,2e5)}),a._uU(9," Trigger all positions "),a.qZA(),a.qZA(),a.TgZ(10,"div",5),a.TgZ(11,"button",6),a.NdJ("click",function(t){return n.showToastsFullWidth(t,1e4)}),a._uU(12," Full Width "),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.TgZ(13,"div",1),a.TgZ(14,"div",2),a.TgZ(15,"h3"),a._uU(16,"Basic Toast Positioned defferently"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(17,"div",1),a.TgZ(18,"div",2),a.TgZ(19,"div",7),a.TgZ(20,"button",8),a.NdJ("click",function(t){return n.clearToast(t)}),a._uU(21," Clear All Toasts "),a.qZA(),a.TgZ(22,"button",9),a.NdJ("click",function(t){return n.callStickyToast(t)}),a._uU(23," Call Sticky Error! "),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.TgZ(24,"div",1),a.TgZ(25,"div",2),a.TgZ(26,"h3"),a._uU(27,"Toast messages adjust size"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(28,"div",1),a.TgZ(29,"div",2),a.TgZ(30,"div",10),a.TgZ(31,"button",11),a.NdJ("click",function(t){return n.showToastsAdjustSize(t,1e4)}),a._uU(32," Trigger all toast messages "),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.TgZ(33,"div",1),a.TgZ(34,"div",2),a.TgZ(35,"h3"),a._uU(36,"Toast messages with no header"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(37,"div",1),a.TgZ(38,"div",2),a.TgZ(39,"div",12),a.TgZ(40,"button",13),a.NdJ("click",function(t){return n.showToastsNoHeader(t,1e4)}),a._uU(41," Trigger all toast messages "),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.TgZ(42,"div",1),a.TgZ(43,"div",2),a.TgZ(44,"h3"),a._uU(45,"Toast messages with progress bar"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(46,"div",1),a.TgZ(47,"div",2),a.TgZ(48,"div",3),a.TgZ(49,"button",14),a.NdJ("click",function(t){return n.showToastsAllPositions(t,3e5,!0)}),a._uU(50," Trigger all positions "),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.qZA())},encapsulation:2}),t})(),data:{srlc:{hideIndicator:!0}}},{path:"test",component:(()=>{class t{constructor(t){this.toastService=t,this.defaults={message:"",title:"",options:{timeOut:5e3,extendedTimeOut:2e3,closeButton:!0,progressBar:!0,progressAnimation:"decreasing",toastClass:"nui-toast",positionClass:"nui-toast--top-right",maxOpened:0,newestOnTop:!0,enableHtml:!1}}}ngOnInit(){this.reset()}fireToast(){const t={error:t=>this.toastService.error(t),info:t=>this.toastService.info(t),success:t=>this.toastService.success(t),warning:t=>this.toastService.warning(t)};for(let n=0;n<this.count;n++)t[this.type](this.toast)}reset(){this.count=1,this.type="info",this.toast=Object.assign(Object.assign({},this.defaults),{options:Object.assign({},this.defaults.options)}),this.toastService.clear()}}return t.\u0275fac=function(n){return new(n||t)(a.Y36(i.klp))},t.\u0275cmp=a.Xpm({type:t,selectors:[["nui-toast-test"]],decls:130,vars:30,consts:[["id","nui-toast-test",1,"container"],[1,"py-2"],["for","txtCount",1,"px-3","w-25"],["type","number","id","txtCount",3,"ngModel","ngModelChange"],[1,"px-3","w-25"],["id","radioError","type","radio","name","type","value","error",3,"ngModel","ngModelChange"],["for","radioError",1,"px-3"],["id","radioInfo","type","radio","name","type","value","info",3,"ngModel","ngModelChange"],["for","radioInfo",1,"px-3"],["id","radioSuccess","type","radio","name","type","value","success",3,"ngModel","ngModelChange"],["for","radioSuccess",1,"px-3"],["id","radioWarning","type","radio","name","type","value","warning",3,"ngModel","ngModelChange"],["for","radioWarning",1,"px-3"],["for","txtMessage",1,"px-3","w-25"],["type","text","id","txtMessage",3,"ngModel","ngModelChange"],["for","txtTitle",1,"px-3","w-25"],["type","text","id","txtTitle",3,"ngModel","ngModelChange"],["for","txtTimeOut",1,"px-3","w-25"],["type","text","id","txtTimeOut",3,"ngModel","ngModelChange"],["for","txtExtendedTimeOut",1,"px-3","w-25"],["type","text","id","txtExtendedTimeOut",3,"ngModel","ngModelChange"],["for","chbCloseButton",1,"px-3","w-25"],["type","checkbox","id","chbCloseButton",3,"ngModel","ngModelChange"],["for","chbProgressBar",1,"px-3","w-25"],["type","checkbox","id","chbProgressBar",3,"ngModel","ngModelChange"],["id","radioIncreasing","type","radio","name","progressAnimation","value","increasing",3,"ngModel","ngModelChange"],["for","radioIncreasing",1,"px-3"],["id","radioDecreasing","type","radio","name","progressAnimation","value","decreasing",3,"ngModel","ngModelChange"],["for","radioDecreasing",1,"px-3"],["for","chbEnableHtml",1,"px-3","w-25"],["type","checkbox","id","chbEnableHtml",3,"ngModel","ngModelChange"],["for","txtToastClass",1,"px-3","w-25"],["type","text","id","txtToastClass",3,"ngModel","ngModelChange"],[1,"d-inline-block",2,"vertical-align","middle"],["id","radioTopCenter","type","radio","name","positionClass","value","nui-toast--top-center",3,"ngModel","ngModelChange"],["for","radioTopCenter",1,"px-3"],["id","radioTopLeft","type","radio","name","positionClass","value","nui-toast--top-left",3,"ngModel","ngModelChange"],["for","radioTopLeft",1,"px-3"],["id","radioTopRight","type","radio","name","positionClass","value","nui-toast--top-right",3,"ngModel","ngModelChange"],["for","radioTopRight",1,"px-3"],["id","radioTopFullWidth","type","radio","name","positionClass","value","nui-toast--top-full-width",3,"ngModel","ngModelChange"],["for","radioTopFullWidth",1,"px-3"],["id","radioBottomCenter","type","radio","name","positionClass","value","nui-toast--bottom-center",3,"ngModel","ngModelChange"],["for","radioBottomCenter",1,"px-3"],["id","radioBottomLeft","type","radio","name","positionClass","value","nui-toast--bottom-left",3,"ngModel","ngModelChange"],["for","radioBottomLeft",1,"px-3"],["id","radioBottomRight","type","radio","name","positionClass","value","nui-toast--bottom-right",3,"ngModel","ngModelChange"],["for","radioBottomRight",1,"px-3"],["id","radioBottomFullWidth","type","radio","name","positionClass","value","nui-toast--bottom-full-width",3,"ngModel","ngModelChange"],["for","radioBottomFullWidth",1,"px-3"],["id","radioCustomClass","type","radio","name","positionClass","value","demoToastCustomClass",3,"ngModel","ngModelChange"],["for","radioCustomClass",1,"px-3"],["for","chbClickToDismiss",1,"px-3","w-25"],["type","checkbox","id","chbClickToDismiss",3,"ngModel","ngModelChange"],["for","chbStickyError",1,"px-3","w-25"],["type","checkbox","id","chbStickyError",3,"ngModel","ngModelChange"],["for","txtMaxOpened",1,"px-3","w-25"],["type","number","id","txtMaxOpened",3,"ngModel","ngModelChange"],["for","chbAutoDismiss",1,"px-3","w-25"],["type","checkbox","id","chbAutoDismiss",3,"ngModel","ngModelChange"],["for","chbNewestOnTop",1,"px-3","w-25"],["type","checkbox","id","chbNewestOnTop",3,"ngModel","ngModelChange"],["for","chbPreventDuplicates",1,"px-3","w-25"],["type","checkbox","id","chbPreventDuplicates",3,"ngModel","ngModelChange"],[1,"p-5",2,"text-align","center"],["id","btnFire",1,"px-5",3,"click"],["id","btnReset",1,"px-3","ml-3",3,"click"]],template:function(t,n){1&t&&(a.TgZ(0,"div",0),a.TgZ(1,"div",1),a.TgZ(2,"h3"),a._uU(3,"Page settings"),a.qZA(),a.TgZ(4,"div"),a.TgZ(5,"label",2),a._uU(6," Number of toasts to show: "),a.qZA(),a.TgZ(7,"input",3),a.NdJ("ngModelChange",function(t){return n.count=t}),a.qZA(),a.qZA(),a.TgZ(8,"label",4),a._uU(9," Toast type "),a.qZA(),a.TgZ(10,"input",5),a.NdJ("ngModelChange",function(t){return n.type=t}),a.qZA(),a.TgZ(11,"label",6),a._uU(12," error "),a.qZA(),a.TgZ(13,"input",7),a.NdJ("ngModelChange",function(t){return n.type=t}),a.qZA(),a.TgZ(14,"label",8),a._uU(15," info "),a.qZA(),a.TgZ(16,"input",9),a.NdJ("ngModelChange",function(t){return n.type=t}),a.qZA(),a.TgZ(17,"label",10),a._uU(18," success "),a.qZA(),a.TgZ(19,"input",11),a.NdJ("ngModelChange",function(t){return n.type=t}),a.qZA(),a.TgZ(20,"label",12),a._uU(21," warning "),a.qZA(),a.qZA(),a.TgZ(22,"div",1),a.TgZ(23,"h3"),a._uU(24,"Toast Configuration"),a.qZA(),a.TgZ(25,"div"),a.TgZ(26,"label",13),a._uU(27," message "),a.qZA(),a.TgZ(28,"input",14),a.NdJ("ngModelChange",function(t){return n.toast.message=t}),a.qZA(),a.qZA(),a.TgZ(29,"div"),a.TgZ(30,"label",15),a._uU(31," title "),a.qZA(),a.TgZ(32,"input",16),a.NdJ("ngModelChange",function(t){return n.toast.title=t}),a.qZA(),a.qZA(),a.qZA(),a.TgZ(33,"div",1),a.TgZ(34,"h3"),a._uU(35,"Options"),a.qZA(),a.TgZ(36,"div"),a.TgZ(37,"label",17),a._uU(38," timeOut "),a.qZA(),a.TgZ(39,"input",18),a.NdJ("ngModelChange",function(t){return n.toast.options.timeOut=t}),a.qZA(),a.qZA(),a.TgZ(40,"div"),a.TgZ(41,"label",19),a._uU(42," extendedTimeOut "),a.qZA(),a.TgZ(43,"input",20),a.NdJ("ngModelChange",function(t){return n.toast.options.extendedTimeOut=t}),a.qZA(),a.qZA(),a.TgZ(44,"div"),a.TgZ(45,"label",21),a._uU(46,"closeButton"),a.qZA(),a.TgZ(47,"input",22),a.NdJ("ngModelChange",function(t){return n.toast.options.closeButton=t}),a.qZA(),a.qZA(),a.TgZ(48,"div"),a.TgZ(49,"label",23),a._uU(50,"progressBar"),a.qZA(),a.TgZ(51,"input",24),a.NdJ("ngModelChange",function(t){return n.toast.options.progressBar=t}),a.qZA(),a.qZA(),a.TgZ(52,"div"),a.TgZ(53,"label",4),a._uU(54,"progressAnimation"),a.qZA(),a.TgZ(55,"input",25),a.NdJ("ngModelChange",function(t){return n.toast.options.progressAnimation=t}),a.qZA(),a.TgZ(56,"label",26),a._uU(57," increasing "),a.qZA(),a.TgZ(58,"input",27),a.NdJ("ngModelChange",function(t){return n.toast.options.progressAnimation=t}),a.qZA(),a.TgZ(59,"label",28),a._uU(60," decreasing "),a.qZA(),a.qZA(),a.TgZ(61,"div"),a.TgZ(62,"label",29),a._uU(63,"enableHtml"),a.qZA(),a.TgZ(64,"input",30),a.NdJ("ngModelChange",function(t){return n.toast.options.enableHtml=t}),a.qZA(),a.qZA(),a.TgZ(65,"div"),a.TgZ(66,"label",31),a._uU(67,"toastClass"),a.qZA(),a.TgZ(68,"input",32),a.NdJ("ngModelChange",function(t){return n.toast.options.toastClass=t}),a.qZA(),a.qZA(),a.TgZ(69,"div"),a.TgZ(70,"label",4),a._uU(71,"positionClass"),a.qZA(),a.TgZ(72,"span",33),a.TgZ(73,"input",34),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(74,"label",35),a._uU(75," TOP_CENTER "),a.qZA(),a.TgZ(76,"input",36),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(77,"label",37),a._uU(78," TOP_LEFT "),a.qZA(),a.TgZ(79,"input",38),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(80,"label",39),a._uU(81," TOP_RIGHT "),a.qZA(),a.TgZ(82,"input",40),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(83,"label",41),a._uU(84," TOP_FULL_WIDTH "),a.qZA(),a._UZ(85,"br"),a.TgZ(86,"input",42),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(87,"label",43),a._uU(88," BOTTOM_CENTER "),a.qZA(),a.TgZ(89,"input",44),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(90,"label",45),a._uU(91," BOTTOM_LEFT "),a.qZA(),a.TgZ(92,"input",46),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(93,"label",47),a._uU(94," BOTTOM_RIGHT "),a.qZA(),a.TgZ(95,"input",48),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(96,"label",49),a._uU(97," BOTTOM_FULL_WIDTH "),a.qZA(),a.TgZ(98,"input",50),a.NdJ("ngModelChange",function(t){return n.toast.options.positionClass=t}),a.qZA(),a.TgZ(99,"label",51),a._uU(100," CUSTOM_CLASS "),a.qZA(),a.qZA(),a.qZA(),a.TgZ(101,"div"),a.TgZ(102,"label",52),a._uU(103,"clickToDismiss"),a.qZA(),a.TgZ(104,"input",53),a.NdJ("ngModelChange",function(t){return n.toast.options.clickToDismiss=t}),a.qZA(),a.qZA(),a.TgZ(105,"div"),a.TgZ(106,"label",54),a._uU(107,"stickyError"),a.qZA(),a.TgZ(108,"input",55),a.NdJ("ngModelChange",function(t){return n.toast.options.stickyError=t}),a.qZA(),a.qZA(),a.TgZ(109,"div"),a.TgZ(110,"label",56),a._uU(111,"maxOpened"),a.qZA(),a.TgZ(112,"input",57),a.NdJ("ngModelChange",function(t){return n.toast.options.maxOpened=t}),a.qZA(),a.qZA(),a.TgZ(113,"div"),a.TgZ(114,"label",58),a._uU(115,"autoDismiss"),a.qZA(),a.TgZ(116,"input",59),a.NdJ("ngModelChange",function(t){return n.toast.options.autoDismiss=t}),a.qZA(),a.qZA(),a.TgZ(117,"div"),a.TgZ(118,"label",60),a._uU(119,"newestOnTop"),a.qZA(),a.TgZ(120,"input",61),a.NdJ("ngModelChange",function(t){return n.toast.options.newestOnTop=t}),a.qZA(),a.qZA(),a.TgZ(121,"div"),a.TgZ(122,"label",62),a._uU(123,"preventDuplicates"),a.qZA(),a.TgZ(124,"input",63),a.NdJ("ngModelChange",function(t){return n.toast.options.preventDuplicates=t}),a.qZA(),a.qZA(),a.qZA(),a.TgZ(125,"div",64),a.TgZ(126,"button",65),a.NdJ("click",function(){return n.fireToast()}),a._uU(127," Fire Toast(s)! "),a.qZA(),a.TgZ(128,"button",66),a.NdJ("click",function(){return n.reset()}),a._uU(129," Reset form "),a.qZA(),a.qZA(),a.qZA()),2&t&&(a.xp6(7),a.Q6J("ngModel",n.count),a.xp6(3),a.Q6J("ngModel",n.type),a.xp6(3),a.Q6J("ngModel",n.type),a.xp6(3),a.Q6J("ngModel",n.type),a.xp6(3),a.Q6J("ngModel",n.type),a.xp6(9),a.Q6J("ngModel",n.toast.message),a.xp6(4),a.Q6J("ngModel",n.toast.title),a.xp6(7),a.Q6J("ngModel",n.toast.options.timeOut),a.xp6(4),a.Q6J("ngModel",n.toast.options.extendedTimeOut),a.xp6(4),a.Q6J("ngModel",n.toast.options.closeButton),a.xp6(4),a.Q6J("ngModel",n.toast.options.progressBar),a.xp6(4),a.Q6J("ngModel",n.toast.options.progressAnimation),a.xp6(3),a.Q6J("ngModel",n.toast.options.progressAnimation),a.xp6(6),a.Q6J("ngModel",n.toast.options.enableHtml),a.xp6(4),a.Q6J("ngModel",n.toast.options.toastClass),a.xp6(5),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(4),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(3),a.Q6J("ngModel",n.toast.options.positionClass),a.xp6(6),a.Q6J("ngModel",n.toast.options.clickToDismiss),a.xp6(4),a.Q6J("ngModel",n.toast.options.stickyError),a.xp6(4),a.Q6J("ngModel",n.toast.options.maxOpened),a.xp6(4),a.Q6J("ngModel",n.toast.options.autoDismiss),a.xp6(4),a.Q6J("ngModel",n.toast.options.newestOnTop),a.xp6(4),a.Q6J("ngModel",n.toast.options.preventDuplicates))},directives:[e.wV,e.Fj,e.JJ,e.On,e._,e.Wl],encapsulation:2}),t})(),data:{srlc:{hideIndicator:!0}}}];let S=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=a.oAB({type:t}),t.\u0275inj=a.cJS({providers:[{provide:i.V3$,useFactory:()=>o(86087)}],imports:[[i.Az_,i.tez,e.u5,e.UX,i.gkT,i.CUE,i.a51,i.vvu,s.Bz.forChild(w)],s.Bz]}),t})()},97209:function(t,n,o){"use strict";o.r(n),n.default='export * from "./toast-basic/toast-basic.example.component";\nexport * from "./toast-sticky-error/toast-sticky-error.example.component";\nexport * from "./toast-config/toast-config.example.component";\nexport * from "./toast-docs/toast-docs.example.component";\nexport * from "./toast-events/toast-events.example.component";\nexport * from "./toast-position/toast-position.example.component";\nexport * from "./toast-type/toast-type.example.component";\nexport * from "./toast-visual-test/toast-visual-test.component";\nexport * from "./toast-test/toast-test.component";\n'},92980:function(t,n,o){"use strict";o.r(n),n.default='<button\n    nui-button\n    type="button"\n    id="nui-basic-toast-html-example-1"\n    (click)="showToastWithEnabledHtml()"\n    i18n\n>\n    Show Toast With Enabled Html\n</button>\n<button\n    nui-button\n    type="button"\n    class="ml-3"\n    id="nui-basic-toast-html-example-2"\n    (click)="showToastWithDisabledHtml()"\n    i18n\n>\n    Show Toast With Disabled Html\n</button>\n<button\n    nui-button\n    type="button"\n    class="ml-3"\n    id="nui-basic-toast-html-example-3"\n    (click)="showToastWithScriptTagIncluded()"\n    i18n\n>\n    Show Toast With Script Tag\n</button>\n'},90025:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-basic-html-example",\n    templateUrl: "./toast-basic-html.example.component.html",\n})\nexport class ToastBasicHtmlExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig(\n            { timeOut: 5000, extendedTimeOut: 2000 },\n            "id"\n        );\n    }\n\n    public showToastWithEnabledHtml(): void {\n        this.toastService.info({\n            title: $localize`Toast with enableHtml set to true`,\n            message: $localize`Hi there! I\'m a simple toast message. <a href="#">Awesome link</a>`,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n\n    public showToastWithDisabledHtml(): void {\n        this.toastService.info({\n            title: $localize`Toast with enableHtml set to false`,\n            message: $localize`Hi there! I\'m a simple toast message <a href="#">Awesome link</a>`,\n            options: {\n                enableHtml: false,\n            },\n        });\n    }\n\n    public showToastWithScriptTagIncluded(): void {\n        this.toastService.info({\n            title: $localize`Toast with forbidden tags and enableHtml set to true`,\n            message: $localize`\n                Hi there! I\'m a toast message with forbidden tags:\n                <script>alert("You shall not pass")<\/script>\n                <object width="400" height="400"></object>\n                <iframe src="https://www.solarwinds.com/"></iframe>\n                <embed src="https://www.solarwinds.com/">\n                `,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n}\n'},99400:function(t,n,o){"use strict";o.r(n),n.default='<button\n    nui-button\n    type="button"\n    id="nui-basic-toast-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},34326:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-basic-example",\n    templateUrl: "./toast-basic.example.component.html",\n})\nexport class ToastBasicExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Simple Toast.`,\n            message: $localize`Hi there! I\'m a simple toast message`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n        };\n    }\n}\n'},24638:function(t,n,o){"use strict";o.r(n),n.default='<button\n    nui-button\n    type="button"\n    id="nui-toast-config-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},34743:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-config-example",\n    templateUrl: "./toast-config.example.component.html",\n})\nexport class ToastConfigExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Toast Configuration`,\n            message: $localize`I\'m pretty easy to configure`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 2000,\n            clickToDismiss: true,\n            closeButton: true,\n            positionClass: ToastPositionClass.BOTTOM_RIGHT,\n            progressBar: true,\n            progressAnimation: "increasing",\n            timeOut: 5000,\n        };\n    }\n}\n'},83923:function(t,n,o){"use strict";o.r(n),n.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiToastModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<div>\n    You can use <code>IToastService</code>, <code>ToastService</code> to show a\n    (usually) temporary message (toast), associated with some event. In example\n    below we\'re showing a toast message when the "Show Toast" button is clicked.\n    Following construction is used to create a toast:\n    <code\n        >IToastService.info(toastDeclaration:\n        <a href="../interfaces/IToastDeclaration.html">IToastDeclaration</a\n        >)</code\n    >. Any property in\n    <a href="../interfaces/IToastDeclaration.html"\n        ><code>IToastDeclaration</code></a\n    >\n    is optional.\n</div>\n<p>\n    When using the toast component with a title, a space is automatically\n    inserted in front of the message body to create spacial separation from the\n    title. In addition to the provided space, it\'s suggested that the user add a\n    sentence-ending punctuation mark to the title to further emphasize this\n    separation.\n</p>\n<nui-example-wrapper filenamePrefix="toast-basic" exampleTitle="Basic usage">\n    <nui-toast-basic-example></nui-toast-basic-example>\n</nui-example-wrapper>\n\n<h2>Basic Usage With Html</h2>\n<p>\n    Toast allows HTML usage inside the\n    <code>{{ getToastDeclarationKey("message") }}</code> container by default.\n    Note: The provided value will be sanitized and rendered.\n</p>\n<p>\n    To configure a toast to display HTML as plain text, set the\n    <code>{{ getToastConfigKey("enableHtml") }}</code> property in\n    <code>{{ getToastDeclarationKey("options") }}</code> to <code>false</code>.\n</p>\n<p>\n    When the <code>{{ getToastConfigKey("enableHtml") }}</code> flag is turned\n    on, all the content will be sanitized, basic tags for changing fonts are\n    often allowed, such as <code>&lt;b&gt;</code>, <code>&lt;i&gt;</code>,\n    <code>&lt;u&gt;</code>, <code>&lt;em&gt;</code>, and\n    <code>&lt;strong&gt;</code>. More advanced tags such as\n    <code>&lt;script&gt;</code>, <code>&lt;object&gt;</code>,\n    <code>&lt;embed&gt;</code>, and <code>&lt;link&gt;</code> are removed by the\n    sanitization process. Additionally, potentially dangerous attributes such as\n    <code>onclick</code> are removed in order to prevent malicious code from\n    being injected.\n</p>\n<nui-example-wrapper\n    filenamePrefix="toast-basic-html"\n    exampleTitle="Basic HTML Usage"\n>\n    <nui-toast-basic-html-example></nui-toast-basic-html-example>\n</nui-example-wrapper>\n\n<h2>Types</h2>\n<p>\n    Toast types allows you to convey some contextual information about the\n    message by applying different styles to toasts.\n</p>\n<nui-example-wrapper filenamePrefix="toast-type" exampleTitle="Types">\n    <nui-toast-type-example></nui-toast-type-example>\n</nui-example-wrapper>\n\n<h2>Configuration</h2>\n<p>\n    Toast messages are highly configurable via\n    <a href="../interfaces/IToastConfig.html">IToastConfig</a> interface. The\n    following example employs some of the more common settings:\n    <br />\n    <code>\n        extendedTimeOut: 2000, clickToDismiss: true, closeButton: true,\n        positionClass: "toast-bottom-right", progressBar: true,\n        progressAnimation: "increasing", timeOut: 5000\n    </code>\n</p>\n<nui-example-wrapper filenamePrefix="toast-config" exampleTitle="Configuration">\n    <nui-toast-config-example></nui-toast-config-example>\n</nui-example-wrapper>\n\n<h2>Positioning</h2>\n<p>\n    The position of a toast message is determined by the value of\n    <code>IToastConfig.positionClass</code>. By default toast is positioned\n    top-right. To implement different positioning you must pass one of available\n    options from\n    <a href="../miscellaneous/enumerations.html#ToastPositionClass"\n        ><code>ToastPositionClass</code></a\n    >\n    to\n    <a href="../interfaces/IToastConfig.html"><code>IToastConfig</code></a>\n    positionClass property.<br /><br />\n\n    It is also possible to set a custom class to configure the position of the\n    <code>nui-toast</code>. Simply populate the\n    <code>IToastConfig.positionClass</code> with the custom css class name.\n\n    <nui-message type="warning" [allowDismiss]="false">\n        Make sure you defined a custom class in a global stylesheet\n    </nui-message>\n</p>\n<nui-example-wrapper filenamePrefix="toast-position" exampleTitle="Positioning">\n    <nui-toast-position-example></nui-toast-position-example>\n</nui-example-wrapper>\n\n<h2>Sticky Error</h2>\n<p>\n    You can also optionally force error toasts to remain visible indefinitely\n    using\n    <code>IToastConfig.stickyError</code>. Note, that this option is only\n    available with <code>IToastService.error</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="toast-sticky-error"\n    exampleTitle="Sticky error"\n>\n    <nui-toast-sticky-error-example></nui-toast-sticky-error-example>\n</nui-example-wrapper>\n\n<h2>Events</h2>\n<p>\n    With <a href="../interfaces/IActiveToast.html">IActiveToast</a>, it\'s\n    possible to capture (and act upon) following events per toast instance:\n</p>\n<ul>\n    <li><code>onShown</code></li>\n    <li><code>onHidden</code></li>\n    <li><code>onClick</code></li>\n</ul>\n<nui-example-wrapper filenamePrefix="toast-events" exampleTitle="Events">\n    <nui-toast-events-example></nui-toast-events-example>\n</nui-example-wrapper>\n'},15558:function(t,n,o){"use strict";o.r(n),n.default='import { Component } from "@angular/core";\nimport { IToastConfig, IToastDeclaration } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-docs-example",\n    templateUrl: "./toast-docs.example.component.html",\n})\nexport class ToastExampleComponent {\n    getToastDeclarationKey(key: keyof IToastDeclaration): string {\n        return key;\n    }\n    getToastConfigKey(key: keyof IToastConfig): string {\n        return key;\n    }\n}\n'},87739:function(t,n,o){"use strict";o.r(n),n.default='<div *ngIf="isDisplayed; else notoast">\n    <nui-message type="info" [allowDismiss]="false">\n        <div i18n>ID of last toast shown: {{ lastShown }}</div>\n    </nui-message>\n    <nui-message type="info" [allowDismiss]="false">\n        <div id="toast-example-click-counter" i18n>\n            Clicks on toast: {{ clickCount }}\n        </div>\n    </nui-message>\n</div>\n<ng-template #notoast\n    ><nui-message type="info" [allowDismiss]="false" i18n\n        >No toast displayed</nui-message\n    ></ng-template\n>\n<nui-divider></nui-divider>\n<button\n    nui-button\n    type="button"\n    id="nui-toast-events-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},6742:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IActiveToast,\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-events-example",\n    templateUrl: "./toast-events.example.component.html",\n})\nexport class ToastEventsExampleComponent implements OnInit {\n    public lastShown?: number;\n    public clickCount = 0;\n    public toastCount = 0;\n    public isDisplayed: boolean;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        const toastInstance: IActiveToast = this.toastService.info({\n            title: $localize`Toast Events`,\n            message: $localize`Click Me!`,\n            options: this.getOptions(),\n        });\n        toastInstance.onShown?.subscribe(() => {\n            ++this.toastCount;\n            this.isDisplayed = true;\n            this.lastShown = toastInstance.toastId;\n        });\n\n        toastInstance.onClick?.subscribe(() => {\n            ++this.clickCount;\n        });\n\n        toastInstance.onHidden?.subscribe(() => {\n            --this.toastCount;\n            this.isDisplayed = this.toastCount > 0;\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 5000,\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            progressBar: true,\n            progressAnimation: "increasing",\n            timeOut: 10000,\n        };\n    }\n}\n'},33811:function(t,n,o){"use strict";o.r(n),n.default='<div class="nui-flex-container">\n    <div>\n        <nui-radio-group [(value)]="selectedPosition">\n            <nui-radio\n                *ngFor="let position of toastPositions"\n                id="{{ \'nui-toast-position-\' + position.className }}"\n                [checked]="position.className === \'nui-toast--top-right\'"\n                [value]="position.className"\n            >\n                {{ position.displayValue }}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n</div>\n<button\n    nui-button\n    type="button"\n    id="nui-toast-position-example"\n    (click)="onShowToast($event)"\n    i18n\n>\n    Show Toast\n</button>\n'},75705:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-position-example",\n    templateUrl: "./toast-position.example.component.html",\n})\nexport class ToastPositionExampleComponent implements OnInit {\n    public toastPositions = [\n        {\n            displayValue: $localize`Top Right`,\n            className: ToastPositionClass.TOP_RIGHT,\n        },\n        {\n            displayValue: $localize`Top Left`,\n            className: ToastPositionClass.TOP_LEFT,\n        },\n        {\n            displayValue: $localize`Bottom Right`,\n            className: ToastPositionClass.BOTTOM_RIGHT,\n        },\n        {\n            displayValue: $localize`Bottom Left`,\n            className: ToastPositionClass.BOTTOM_LEFT,\n        },\n        {\n            displayValue: $localize`Top Full Width`,\n            className: ToastPositionClass.TOP_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize`Bottom Full Width`,\n            className: ToastPositionClass.BOTTOM_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize`Top Center`,\n            className: ToastPositionClass.TOP_CENTER,\n        },\n        {\n            displayValue: $localize`Bottom Center`,\n            className: ToastPositionClass.BOTTOM_CENTER,\n        },\n        {\n            displayValue: $localize`CUSTOM CLASS (top: 200px; right: 200px)`,\n            className: "demoToastCustomClass",\n        },\n    ];\n    public selectedPosition: ToastPositionClass | string =\n        this.toastPositions[0].className;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Position Example`,\n            message: this.selectedPosition,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            positionClass: this.selectedPosition,\n        };\n    }\n}\n'},14074:function(t,n,o){"use strict";o.r(n),n.default='<button\n    nui-button\n    type="button"\n    id="nui-show-sticky-error-toast-example"\n    (click)="onShowStickyError($event)"\n    i18n\n>\n    Show Sticky Error\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-hide-sticky-error-toast-example"\n    (click)="onHideStickyError($event)"\n    i18n\n>\n    Hide Sticky Error\n</button>\n'},37700:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-sticky-error-example",\n    templateUrl: "./toast-sticky-error.example.component.html",\n})\nexport class ToastStickyErrorExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowStickyError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize`Sticky Error`,\n            message: $localize`Red Alert`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onHideStickyError(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            stickyError: true,\n        };\n    }\n}\n'},40036:function(t,n,o){"use strict";o.r(n),n.default='<div id="nui-toast-test" class="container">\n    <div class="py-2">\n        <h3>Page settings</h3>\n        <div>\n            <label class="px-3 w-25" for="txtCount">\n                Number of toasts to show:\n            </label>\n            <input type="number" id="txtCount" [(ngModel)]="count" />\n        </div>\n\n        <label class="px-3 w-25"> Toast type </label>\n        <input\n            id="radioError"\n            type="radio"\n            name="type"\n            value="error"\n            [(ngModel)]="type"\n        />\n        <label for="radioError" class="px-3"> error </label>\n        <input\n            id="radioInfo"\n            type="radio"\n            name="type"\n            value="info"\n            [(ngModel)]="type"\n        />\n        <label for="radioInfo" class="px-3"> info </label>\n        <input\n            id="radioSuccess"\n            type="radio"\n            name="type"\n            value="success"\n            [(ngModel)]="type"\n        />\n        <label for="radioSuccess" class="px-3"> success </label>\n        <input\n            id="radioWarning"\n            type="radio"\n            name="type"\n            value="warning"\n            [(ngModel)]="type"\n        />\n        <label for="radioWarning" class="px-3"> warning </label>\n    </div>\n\n    <div class="py-2">\n        <h3>Toast Configuration</h3>\n        <div>\n            <label class="px-3 w-25" for="txtMessage"> message </label>\n            <input type="text" id="txtMessage" [(ngModel)]="toast.message" />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtTitle"> title </label>\n            <input type="text" id="txtTitle" [(ngModel)]="toast.title" />\n        </div>\n    </div>\n\n    <div class="py-2">\n        <h3>Options</h3>\n        <div>\n            <label class="px-3 w-25" for="txtTimeOut"> timeOut </label>\n            <input\n                type="text"\n                id="txtTimeOut"\n                [(ngModel)]="toast.options.timeOut"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtExtendedTimeOut">\n                extendedTimeOut\n            </label>\n            <input\n                type="text"\n                id="txtExtendedTimeOut"\n                [(ngModel)]="toast.options.extendedTimeOut"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbCloseButton">closeButton</label>\n            <input\n                type="checkbox"\n                id="chbCloseButton"\n                [(ngModel)]="toast.options.closeButton"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbProgressBar">progressBar</label>\n            <input\n                type="checkbox"\n                id="chbProgressBar"\n                [(ngModel)]="toast.options.progressBar"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25">progressAnimation</label>\n            <input\n                id="radioIncreasing"\n                type="radio"\n                name="progressAnimation"\n                value="increasing"\n                [(ngModel)]="toast.options.progressAnimation"\n            />\n            <label for="radioIncreasing" class="px-3"> increasing </label>\n            <input\n                id="radioDecreasing"\n                type="radio"\n                name="progressAnimation"\n                value="decreasing"\n                [(ngModel)]="toast.options.progressAnimation"\n            />\n            <label for="radioDecreasing" class="px-3"> decreasing </label>\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbEnableHtml">enableHtml</label>\n            <input\n                type="checkbox"\n                id="chbEnableHtml"\n                [(ngModel)]="toast.options.enableHtml"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtToastClass">toastClass</label>\n            <input\n                type="text"\n                id="txtToastClass"\n                [(ngModel)]="toast.options.toastClass"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25">positionClass</label>\n            <span class="d-inline-block" style="vertical-align: middle">\n                <input\n                    id="radioTopCenter"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-center"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopCenter" class="px-3"> TOP_CENTER </label>\n                <input\n                    id="radioTopLeft"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-left"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopLeft" class="px-3"> TOP_LEFT </label>\n                <input\n                    id="radioTopRight"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-right"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopRight" class="px-3"> TOP_RIGHT </label>\n                <input\n                    id="radioTopFullWidth"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--top-full-width"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioTopFullWidth" class="px-3">\n                    TOP_FULL_WIDTH\n                </label>\n                <br />\n                <input\n                    id="radioBottomCenter"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-center"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomCenter" class="px-3">\n                    BOTTOM_CENTER\n                </label>\n                <input\n                    id="radioBottomLeft"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-left"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomLeft" class="px-3"> BOTTOM_LEFT </label>\n                <input\n                    id="radioBottomRight"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-right"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomRight" class="px-3">\n                    BOTTOM_RIGHT\n                </label>\n                <input\n                    id="radioBottomFullWidth"\n                    type="radio"\n                    name="positionClass"\n                    value="nui-toast--bottom-full-width"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioBottomFullWidth" class="px-3">\n                    BOTTOM_FULL_WIDTH\n                </label>\n                <input\n                    id="radioCustomClass"\n                    type="radio"\n                    name="positionClass"\n                    value="demoToastCustomClass"\n                    [(ngModel)]="toast.options.positionClass"\n                />\n                <label for="radioCustomClass" class="px-3">\n                    CUSTOM_CLASS\n                </label>\n            </span>\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbClickToDismiss"\n                >clickToDismiss</label\n            >\n            <input\n                type="checkbox"\n                id="chbClickToDismiss"\n                [(ngModel)]="toast.options.clickToDismiss"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbStickyError">stickyError</label>\n            <input\n                type="checkbox"\n                id="chbStickyError"\n                [(ngModel)]="toast.options.stickyError"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtMaxOpened">maxOpened</label>\n            <input\n                type="number"\n                id="txtMaxOpened"\n                [(ngModel)]="toast.options.maxOpened"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbAutoDismiss">autoDismiss</label>\n            <input\n                type="checkbox"\n                id="chbAutoDismiss"\n                [(ngModel)]="toast.options.autoDismiss"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbNewestOnTop">newestOnTop</label>\n            <input\n                type="checkbox"\n                id="chbNewestOnTop"\n                [(ngModel)]="toast.options.newestOnTop"\n            />\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbPreventDuplicates"\n                >preventDuplicates</label\n            >\n            <input\n                type="checkbox"\n                id="chbPreventDuplicates"\n                [(ngModel)]="toast.options.preventDuplicates"\n            />\n        </div>\n    </div>\n\n    <div class="p-5" style="text-align: center">\n        <button class="px-5" id="btnFire" (click)="fireToast()">\n            Fire Toast(s)!\n        </button>\n        <button class="px-3 ml-3" id="btnReset" (click)="reset()">\n            Reset form\n        </button>\n    </div>\n</div>\n'},22206:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IActiveToast,\n    IToastConfig,\n    IToastDeclaration,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-test",\n    templateUrl: "./toast-test.component.html",\n})\nexport class ToastTestComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    private defaults: IToastDeclaration = {\n        message: "",\n        title: "",\n        options: {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            closeButton: true,\n            progressBar: true,\n            progressAnimation: "decreasing",\n            toastClass: "nui-toast",\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            maxOpened: 0, // unlimited\n            newestOnTop: true,\n            enableHtml: false,\n        },\n    };\n    // Using intersection type to avoid adding optional chaining operator (?) multiple times in template\n    // because options property is optional.\n    public toast: IToastDeclaration & { options: IToastConfig };\n    public count: number;\n    public type: string;\n\n    ngOnInit() {\n        this.reset();\n    }\n\n    public fireToast() {\n        const funcs: Record<\n            string,\n            (toast: IToastDeclaration) => IActiveToast\n        > = {\n            error: (toast) => this.toastService.error(toast),\n            info: (toast) => this.toastService.info(toast),\n            success: (toast) => this.toastService.success(toast),\n            warning: (toast) => this.toastService.warning(toast),\n        };\n\n        for (let i = 0; i < this.count; i++) {\n            funcs[this.type](this.toast);\n        }\n    }\n\n    public reset() {\n        this.count = 1;\n        this.type = "info";\n        this.toast = {\n            ...this.defaults,\n            options: { ...this.defaults.options },\n        };\n        this.toastService.clear();\n    }\n}\n'},72411:function(t,n,o){"use strict";o.r(n),n.default='<button\n    nui-button\n    type="button"\n    id="nui-info-toast"\n    (click)="onShowInfo($event)"\n    i18n\n>\n    Info\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-success-toast"\n    (click)="onShowSuccess($event)"\n    i18n\n>\n    Success\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-warning-toast"\n    (click)="onShowWarning($event)"\n    i18n\n>\n    Warning\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-error-toast"\n    (click)="onShowError($event)"\n    i18n\n>\n    Error\n</button>\n<button\n    nui-button\n    type="button"\n    id="nui-hide-all-toasts"\n    (click)="clear()"\n    i18n\n>\n    Hide Toasts\n</button>\n'},1331:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-type-example",\n    templateUrl: "./toast-type.example.component.html",\n})\nexport class ToastTypeExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowInfo(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize`Info`,\n            message: $localize`E pluribus unum (/\u02c8i\u02d0 \u02c8pl\u028a\u0259r\u026ab\u0259s \u02c8ju\u02d0n\u0259m/; Latin: [\u02c8e\u02d0 \u02c8plu\u02d0r\u026ab\u028as \u02c8u\u02d0n\u0169\u02d0]) is Latin for \'Out of many, one\'`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowSuccess(highlightMode: boolean): void {\n        this.toastService.success({\n            title: $localize`Success`,\n            message: $localize`Well done!`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowWarning(highlightMode: boolean): void {\n        this.toastService.warning({\n            title: $localize`Warning`,\n            message: $localize`There can be only one.`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize`Error`,\n            message: $localize`Nope.`,\n            options: this.getOptions(),\n        });\n    }\n\n    public clear(): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 3000,\n            extendedTimeOut: 1000,\n        };\n    }\n}\n'},70149:function(t,n,o){"use strict";o.r(n),n.default='<div class="container pt-5">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-positions">\n                <button\n                    id="nui-toast-button-all-positions"\n                    (click)="showToastsAllPositions($event, 200000)"\n                >\n                    Trigger all positions\n                </button>\n            </div>\n            <div class="d-flex justify-content-start" id="nui-toast-fw">\n                <button\n                    id="nui-toast-position-fw"\n                    (click)="showToastsFullWidth($event, 10000)"\n                >\n                    Full Width\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start">\n                <button\n                    id="nui-toast-clear-all-toasts"\n                    (click)="clearToast($event)"\n                >\n                    Clear All Toasts\n                </button>\n                <button id="nui-toast-sticky" (click)="callStickyToast($event)">\n                    Call Sticky Error!\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages adjust size</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div\n                class="d-flex justify-content-start"\n                id="nui-toast-buttons-chain"\n            >\n                <button\n                    id="nui-toast-adjust-size"\n                    (click)="showToastsAdjustSize($event, 10000)"\n                >\n                    Trigger all toast messages\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages with no header</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div\n                class="d-flex justify-content-start"\n                id="nui-toast-buttons-chain-no-header"\n            >\n                <button\n                    id="nui-toast-no-header"\n                    (click)="showToastsNoHeader($event, 10000)"\n                >\n                    Trigger all toast messages\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages with progress bar</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-positions">\n                <button\n                    id="nui-toast-button-all-positions-progress-bar"\n                    (click)="showToastsAllPositions($event, 300000, true)"\n                >\n                    Trigger all positions\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n'},63503:function(t,n,o){"use strict";o.r(n),n.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IToastConfig,\n    IToastService,\n    ToastPositionClass,\n    ToastService,\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-visual",\n    templateUrl: "./toast-visual-test.component.html",\n})\nexport class ToastVisualTestComponent implements OnInit {\n    private errorMessage: string = `Something went wrong + in addition there is an extremely\n    long line that verifies that the toast expands as more text comes into it. More or less text -\n    Toast messages must look good either way!`;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) {}\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public showToastsAllPositions(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false\n    ): void {\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_LEFT\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            "Error",\n            this.errorMessage\n        );\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_LEFT\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_RIGHT\n        );\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_CENTER\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_CENTER\n        );\n    }\n\n    public showToastsFullWidth(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false\n    ) {\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_FULL_WIDTH\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.BOTTOM_FULL_WIDTH\n        );\n    }\n\n    public showToastsAdjustSize(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false\n    ): void {\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT\n        );\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            "Error",\n            this.errorMessage\n        );\n    }\n\n    public showToastsNoHeader(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        header: string = ""\n    ): void {\n        this.onShowInfo(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n        this.onShowSuccess(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n        this.onShowWarning(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n        this.onShowError(\n            highlightMode,\n            timeout,\n            progress,\n            ToastPositionClass.TOP_RIGHT,\n            header\n        );\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowInfo(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Information",\n        message: string = "Some info message"\n    ): void {\n        this.toastService.info({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowError(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Failure!",\n        message: string = "Something went wrong"\n    ): void {\n        this.toastService.error({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowSuccess(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Well Done!",\n        message: string = "You\'re great!"\n    ): void {\n        this.toastService.success({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowWarning(\n        highlightMode: boolean,\n        timeout: number,\n        progress: boolean = false,\n        position: ToastPositionClass,\n        title: string = "Attention!",\n        message: string = "Pay attention!"\n    ): void {\n        this.toastService.warning({\n            title: title,\n            message: `${message}`,\n            options: this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public callStickyToast(highlightMode: boolean) {\n        this.toastService.error({\n            title: "Failure",\n            message: "This error is sticky!",\n            options: { stickyError: true },\n        });\n    }\n\n    public clearToast(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(\n        timeout: number,\n        position: ToastPositionClass,\n        enableProgressBar: boolean = false\n    ): IToastConfig {\n        return {\n            timeOut: timeout,\n            extendedTimeOut: 2000,\n            positionClass: position,\n            progressBar: enableProgressBar,\n        };\n    }\n}\n'},71136:function(t,n,o){"use strict";o.r(n),n.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiToastModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ToastBasicExampleComponent,\n    ToastConfigExampleComponent,\n    ToastEventsExampleComponent,\n    ToastExampleComponent,\n    ToastPositionExampleComponent,\n    ToastStickyErrorExampleComponent,\n    ToastTestComponent,\n    ToastTypeExampleComponent,\n    ToastVisualTestComponent,\n} from "./index";\nimport { ToastBasicHtmlExampleComponent } from "./toast-basic-html/toast-basic-html.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: ToastExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "toast-visual-test",\n        component: ToastVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: ToastTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiToastModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiRadioModule,\n        NuiDividerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ToastBasicExampleComponent,\n        ToastBasicHtmlExampleComponent,\n        ToastConfigExampleComponent,\n        ToastEventsExampleComponent,\n        ToastExampleComponent,\n        ToastPositionExampleComponent,\n        ToastStickyErrorExampleComponent,\n        ToastTestComponent,\n        ToastTypeExampleComponent,\n        ToastVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport class ToastModule {}\n'}}]);