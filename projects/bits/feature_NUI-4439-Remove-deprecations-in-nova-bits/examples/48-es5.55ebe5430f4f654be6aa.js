!function(){var e,o,c,n,t,i,a,s,l,b,u,r,h,p,d,m,g,x,k,v,f;function C(e,o){return o||(o=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(o)}}))}function O(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function T(e,o){for(var c=0;c<o.length;c++){var n=o[c];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function S(e,o,c){return o&&T(e.prototype,o),c&&T(e,c),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"5O8t":function(T,B,F){"use strict";F.r(B),F.d(B,"CheckboxGroupModule",(function(){return se}));var G=F("8VHZ"),V=F("Fk62"),y=F("U04U"),w=F("Ub9n"),$=F("ZXzp"),I=F("Yvf7"),j=F("lFDV");function z(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",13),w.Oc(1),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("checked",n.isChecked(c)),w.Bb(1),w.Qc(" ",c," ")}}function M(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",14),w.Oc(1),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("hint",n.hints.indexOf(c)>=0?n.hints[n.hints.indexOf(c)]:null)("checked",n.isChecked(c)),w.Bb(1),w.Qc(" ",c," ")}}function P(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",15),w.Oc(1),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("checked",n.isChecked(c)),w.Bb(1),w.Qc(" ",c," ")}}var N,E=((N=function(){function e(o){O(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return S(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||N)(w.Nb(G.c))},N.\u0275cmp=w.Hb({type:N,selectors:[["nui-checkbox-group-test-example"]],decls:24,vars:26,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","checkboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"],[3,"value","checked"]],template:function(e,o){1&e&&(w.Tb(0,"div",0),w.Tb(1,"div",1),w.Tb(2,"nui-checkbox-group",2),w.Mc(3,z,2,3,"nui-checkbox",3),w.Tb(4,"nui-checkbox",4),w.Oc(5),w.Sb(),w.Sb(),w.Sb(),w.Tb(6,"div",5),w.Tb(7,"nui-checkbox-group",6),w.Mc(8,M,2,4,"nui-checkbox",7),w.Sb(),w.Sb(),w.Tb(9,"div",5),w.Tb(10,"form",8),w.Tb(11,"nui-checkbox-group",9),w.Mc(12,P,2,3,"nui-checkbox",10),w.Sb(),w.Sb(),w.Sb(),w.Tb(13,"div",5),w.Tb(14,"form",8),w.Tb(15,"nui-checkbox-group",11),w.Tb(16,"nui-checkbox",12),w.Oc(17),w.Sb(),w.Tb(18,"nui-checkbox",12),w.Oc(19),w.Sb(),w.Tb(20,"nui-checkbox",12),w.Oc(21),w.Sb(),w.Tb(22,"nui-checkbox",12),w.Oc(23),w.Sb(),w.Sb(),w.Sb(),w.Sb(),w.Sb()),2&e&&(w.Bb(2),w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables),w.Bb(1),w.sc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),w.Bb(1),w.Pc(o.disabledOne),w.Bb(2),w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables),w.Bb(2),w.sc("formGroup",o.testForm),w.Bb(2),w.sc("ngForOf",o.vegetables),w.Bb(2),w.sc("formGroup",o.testForm),w.Bb(2),w.sc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),w.Bb(1),w.Qc(" ",o.vegetables[0],""),w.Bb(1),w.sc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),w.Bb(1),w.Qc(" ",o.vegetables[1],""),w.Bb(1),w.sc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),w.Bb(1),w.Qc(" ",o.vegetables[2],""),w.Bb(1),w.sc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),w.Bb(1),w.Qc(" ",o.vegetables[3],""))},directives:[$.a,I.s,j.a,G.v,G.n,G.h,G.m,G.f],encapsulation:2}),N),D=F("WDcu");function Q(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",2),w.Zb(1,3),w.Oc(2),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("checked",n.isChecked(c)),w.Bb(2),w.Qc(" ",c," ")}}var U,H=((U=function(){function i(t){O(this,i),this.toastService=t,this.cabbage=$localize(e||(e=C(["Cabbage"]))),this.potato=$localize(o||(o=C(["Potato"]))),this.tomato=$localize(c||(c=C(["Tomato"]))),this.carrot=$localize(n||(n=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}return S(i,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}},{key:"onValueChange",value:function(e){this.toastService.success({message:$localize(t||(t=C(["Selected checkboxes: "])))+e})}}]),i}()).\u0275fac=function(e){return new(e||U)(w.Nb(y.Pb))},U.\u0275cmp=w.Hb({type:U,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){return[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],[3,"value","checked",4,"ngFor","ngForOf",6,"hint"],[3,"value","checked",6,"hint"],["hint",$localize(i||(i=C([":\u241fba785d6cbb33a003a3ce1d20077ba67264374284\u241f829155627086234075:This is some help text"])))]]},template:function(e,o){1&e&&(w.Tb(0,"nui-checkbox-group",0),w.hc("valuesChange",(function(e){return o.onValueChange(e)})),w.Mc(1,Q,3,3,"nui-checkbox",1),w.Sb()),2&e&&(w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables))},directives:[$.a,I.s,j.a],encapsulation:2}),U);function J(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",2),w.Oc(1),w.Sb()),2&e){var c=o.$implicit;w.sc("value",c),w.Bb(1),w.Qc(" ",c," ")}}var q,A=((q=function e(){O(this,e),this.cabbage=$localize(a||(a=C(["Cabbage"]))),this.potato=$localize(s||(s=C(["Potato"]))),this.tomato=$localize(l||(l=C(["Tomato"]))),this.carrot=$localize(b||(b=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}).\u0275fac=function(e){return new(e||q)},q.\u0275cmp=w.Hb({type:q,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&(w.Tb(0,"nui-checkbox-group",0),w.Mc(1,J,2,2,"nui-checkbox",1),w.Sb()),2&e&&(w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables))},directives:[$.a,I.s,j.a],encapsulation:2}),q),R=F("T50m");function L(e,o){1&e&&(w.Tb(0,"nui-message",7),w.Tb(1,"b"),w.Xb(2,8),w.Sb(),w.Sb()),2&e&&w.sc("allowDismiss",!0)}function _(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",9),w.Oc(1),w.Sb()),2&e){var c=o.$implicit;w.sc("value",c),w.Bb(1),w.Qc(" ",c," ")}}var Z,K=((Z=function(){function e(o,c){O(this,e),this.formBuilder=o,this.toastService=c,this.cabbage=$localize(u||(u=C(["Cabbage"]))),this.potato=$localize(r||(r=C(["Potato"]))),this.tomato=$localize(h||(h=C(["Tomato"]))),this.carrot=$localize(p||(p=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}return S(e,[{key:"ngOnInit",value:function(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[G.u.required,G.u.minLength(3)])})}},{key:"onSubmit",value:function(){console.log(this.myForm),this.toastService.success({message:$localize(d||(d=C(["Your form is valid!"])))})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||Z)(w.Nb(G.c),w.Nb(y.Pb))},Z.\u0275cmp=w.Hb({type:Z,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){return[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],$localize(m||(m=C([":\u241f71c77bb8cecdf11ec3eead24dd1ba506573fa9cd\u241f935187492052582731:Submit"]))),["type","critical",3,"allowDismiss"],$localize(g||(g=C([":\u241faaf9b8331666795542f417fe39c78014513ca737\u241f3498101055154698277:Select minimum 3 checkboxes!"]))),[3,"value"]]},template:function(e,o){1&e&&(w.Tb(0,"form",0),w.hc("submit",(function(){return o.onSubmit()})),w.Tb(1,"div",1),w.Mc(2,L,3,1,"nui-message",2),w.Tb(3,"nui-checkbox-group",3),w.Mc(4,_,2,2,"nui-checkbox",4),w.Sb(),w.Sb(),w.Tb(5,"button",5),w.Xb(6,6),w.Sb(),w.Sb()),2&e&&(w.sc("formGroup",o.myForm),w.Bb(2),w.sc("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),w.Bb(2),w.sc("ngForOf",o.vegetables),w.Bb(1),w.sc("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[G.v,G.n,G.h,I.t,$.a,G.m,G.f,G.t,I.s,R.a,j.a],encapsulation:2}),Z);function X(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",2),w.Oc(1),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("hint",n.hints.indexOf(c)>=0?n.hints[n.hints.indexOf(c)]:null)("checked",n.isChecked(c)),w.Bb(1),w.Qc(" ",c," ")}}var Y,W=((Y=function(){function e(){O(this,e),this.cabbage=$localize(x||(x=C(["Cabbage"]))),this.potato=$localize(k||(k=C(["Potato"]))),this.tomato=$localize(v||(v=C(["Tomato"]))),this.carrot=$localize(f||(f=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}return S(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||Y)},Y.\u0275cmp=w.Hb({type:Y,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(w.Tb(0,"nui-checkbox-group",0),w.Mc(1,X,2,4,"nui-checkbox",1),w.Sb()),2&e&&(w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables))},directives:[$.a,I.s,j.a],encapsulation:2}),Y);function ee(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",14),w.Oc(1),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("checked",n.isChecked(c)),w.Bb(1),w.Qc(" ",c," ")}}function oe(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",15),w.Oc(1),w.Sb()),2&e){var c=o.$implicit;w.sc("value",c),w.Bb(1),w.Qc(" ",c," ")}}function ce(e,o){if(1&e&&(w.Tb(0,"nui-checkbox",16),w.Oc(1),w.Sb()),2&e){var c=o.$implicit,n=w.lc();w.sc("value",c)("checked",n.isChecked(c)),w.Bb(1),w.Qc(" ",c," ")}}var ne,te,ie,ae=[{path:"",component:(te=function e(){O(this,e)},te.\u0275fac=function(e){return new(e||te)},te.\u0275cmp=w.Hb({type:te,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&(w.Tb(0,"h2"),w.Oc(1,"Required Modules"),w.Sb(),w.Tb(2,"ul"),w.Tb(3,"li"),w.Tb(4,"code"),w.Oc(5,"NuiCheckboxModule"),w.Sb(),w.Sb(),w.Sb(),w.Tb(6,"h2"),w.Oc(7,"Basic Usage"),w.Sb(),w.Tb(8,"p"),w.Oc(9," The "),w.Tb(10,"code"),w.Oc(11,"<nui-checkbox-group>"),w.Sb(),w.Oc(12," component is used for combining "),w.Tb(13,"code"),w.Oc(14,"<nui-checkbox>"),w.Sb(),w.Oc(15," components into a group. Use the "),w.Tb(16,"code"),w.Oc(17,"name"),w.Sb(),w.Oc(18,' input to set the "name" attribute for the inner '),w.Tb(19,"code"),w.Oc(20,"<nui-checkbox>"),w.Sb(),w.Oc(21," input elements. To get the values of the "),w.Tb(22,"code"),w.Oc(23,"<nui-checkbox>"),w.Sb(),w.Oc(24," child components use the "),w.Tb(25,"code"),w.Oc(26,"values"),w.Sb(),w.Oc(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),w.Tb(28,"code"),w.Oc(29,"(valuesChange)"),w.Sb(),w.Oc(30," output.\n"),w.Sb(),w.Tb(31,"nui-example-wrapper",0),w.Ob(32,"nui-checkbox-group-basic-example"),w.Sb(),w.Tb(33,"h2"),w.Oc(34,"Inline"),w.Sb(),w.Tb(35,"p"),w.Oc(36," Use the "),w.Tb(37,"code"),w.Oc(38,"nui-checkbox-group-inline"),w.Sb(),w.Oc(39," class to display checkbox group inline.\n"),w.Sb(),w.Tb(40,"nui-example-wrapper",1),w.Ob(41,"nui-checkbox-group-inline-example"),w.Sb(),w.Tb(42,"h2"),w.Oc(43,"Part of Form"),w.Sb(),w.Tb(44,"p"),w.Tb(45,"code"),w.Oc(46,"<nui-checkbox-group>"),w.Sb(),w.Oc(47," can be used in reactive forms.\n"),w.Sb(),w.Tb(48,"nui-example-wrapper",2),w.Ob(49,"nui-checkbox-group-in-form-example"),w.Sb(),w.Tb(50,"h2"),w.Oc(51,"Justified"),w.Sb(),w.Tb(52,"p"),w.Oc(53," To justify "),w.Tb(54,"code"),w.Oc(55,"<nui-checkbox>"),w.Sb(),w.Oc(56," to the width of "),w.Tb(57,"code"),w.Oc(58,"<nui-checkbox-group>"),w.Sb(),w.Oc(59," (or simply parent element, in case "),w.Tb(60,"code"),w.Oc(61,"<nui-checkbox>"),w.Sb(),w.Oc(62," is used not as a part of "),w.Tb(63,"code"),w.Oc(64,"<nui-checkbox-group>"),w.Sb(),w.Oc(65,"), add "),w.Tb(66,"code"),w.Oc(67,"nui-checkbox--justified"),w.Sb(),w.Oc(68," class to the "),w.Tb(69,"code"),w.Oc(70,"<nui-checkbox>"),w.Sb(),w.Oc(71,".\n"),w.Sb(),w.Tb(72,"nui-example-wrapper",3),w.Ob(73,"nui-checkbox-group-justified-example"),w.Sb())},directives:[D.a,H,A,K,W],encapsulation:2}),te),data:{srlc:{stage:y.Jb.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(ne=function(){function e(o){O(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return S(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}(),ne.\u0275fac=function(e){return new(e||ne)(w.Nb(G.c))},ne.\u0275cmp=w.Hb({type:ne,selectors:[["nui-checkbox-group-visual-test"]],decls:36,vars:26,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"]],template:function(e,o){1&e&&(w.Tb(0,"div",0),w.Tb(1,"div",1),w.Tb(2,"div",2),w.Tb(3,"h3"),w.Oc(4,"Basic Checkbox-Group with Hint Text"),w.Sb(),w.Tb(5,"nui-checkbox-group",3),w.Mc(6,ee,2,3,"nui-checkbox",4),w.Tb(7,"nui-checkbox",5),w.Oc(8),w.Sb(),w.Sb(),w.Ob(9,"hr"),w.Sb(),w.Tb(10,"div",2),w.Tb(11,"h3"),w.Oc(12,"Inline Checkbox-Group"),w.Sb(),w.Tb(13,"nui-checkbox-group",6),w.Mc(14,oe,2,2,"nui-checkbox",7),w.Sb(),w.Ob(15,"hr"),w.Sb(),w.Ob(16,"div",8),w.Tb(17,"div",2),w.Tb(18,"h3"),w.Oc(19,"Justified Checkbox-Group"),w.Sb(),w.Tb(20,"nui-checkbox-group",9),w.Mc(21,ce,2,3,"nui-checkbox",10),w.Sb(),w.Ob(22,"hr"),w.Sb(),w.Tb(23,"div",2),w.Tb(24,"h3"),w.Oc(25,"Disabled checkboxes within the form"),w.Sb(),w.Tb(26,"form",11),w.Tb(27,"nui-checkbox-group",12),w.Tb(28,"nui-checkbox",13),w.Oc(29),w.Sb(),w.Tb(30,"nui-checkbox",13),w.Oc(31),w.Sb(),w.Tb(32,"nui-checkbox",13),w.Oc(33),w.Sb(),w.Tb(34,"nui-checkbox",13),w.Oc(35),w.Sb(),w.Sb(),w.Sb(),w.Sb(),w.Sb(),w.Sb()),2&e&&(w.Bb(5),w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables),w.Bb(1),w.sc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),w.Bb(1),w.Pc(o.disabledOne),w.Bb(5),w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables),w.Bb(6),w.sc("values",o.selectedVegetables),w.Bb(1),w.sc("ngForOf",o.vegetables),w.Bb(5),w.sc("formGroup",o.testForm),w.Bb(2),w.sc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),w.Bb(1),w.Qc(" ",o.vegetables[0],""),w.Bb(1),w.sc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),w.Bb(1),w.Qc(" ",o.vegetables[1],""),w.Bb(1),w.sc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),w.Bb(1),w.Qc(" ",o.vegetables[2],""),w.Bb(1),w.sc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),w.Bb(1),w.Qc(" ",o.vegetables[3],""))},directives:[$.a,I.s,j.a,G.v,G.n,G.h,G.m,G.f],encapsulation:2}),ne),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:E,data:{srlc:{hideIndicator:!0}}}],se=((ie=function e(){O(this,e)}).\u0275mod=w.Lb({type:ie}),ie.\u0275inj=w.Kb({factory:function(e){return new(e||ie)},providers:[{provide:y.f,useFactory:function(){return F("NAmc")}}],imports:[[y.w,y.G,G.j,G.s,y.v,V.g.forChild(ae)],V.g]}),ie)},"6w1q":function(e,o,c){"use strict";c.r(o),o.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},AHj0:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},BGGx:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},E5Rp:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},I1CO:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},JpN6:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},Meyd:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},NAmc:function(e,o,c){var n={"./checkbox-group-basic/checkbox-group-basic.example.component.html":"BGGx","./checkbox-group-basic/checkbox-group-basic.example.component.ts":"E5Rp","./checkbox-group-docs/checkbox-group-docs.example.component.html":"e4QH","./checkbox-group-docs/checkbox-group-docs.example.component.ts":"RbIe","./checkbox-group-in-form/checkbox-group-in-form.example.component.html":"b2GL","./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":"Meyd","./checkbox-group-inline/checkbox-group-inline.example.component.html":"qH3u","./checkbox-group-inline/checkbox-group-inline.example.component.ts":"AHj0","./checkbox-group-justified/checkbox-group-justified.example.component.html":"TQG8","./checkbox-group-justified/checkbox-group-justified.example.component.ts":"eDV4","./checkbox-group-test/checkbox-group-test.component.html":"cPnd","./checkbox-group-test/checkbox-group-test.component.ts":"I1CO","./checkbox-group-visual-test/checkbox-group-visual-test.component.html":"Q2ZU","./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":"JpN6","./checkbox-group.module.ts":"whV8","./index.ts":"6w1q"};function t(e){var o=i(e);return c(o)}function i(e){if(!c.o(n,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}t.keys=function(){return Object.keys(n)},t.resolve=i,e.exports=t,t.id="NAmc"},Q2ZU:function(e,o,c){"use strict";c.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="checkboxGroup2">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n</div>\n'},RbIe:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},TQG8:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},b2GL:function(e,o,c){"use strict";c.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},cPnd:function(e,o,c){"use strict";c.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="checkboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},e4QH:function(e,o,c){"use strict";c.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},eDV4:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},qH3u:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},whV8:function(e,o,c){"use strict";c.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'}}])}();