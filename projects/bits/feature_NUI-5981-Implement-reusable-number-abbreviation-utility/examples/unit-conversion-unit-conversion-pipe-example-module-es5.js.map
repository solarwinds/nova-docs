{"version":3,"sources":["webpack:///demo/src/components/demo/pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts","webpack:///demo/src/components/demo/pipes/unit-conversion/unit-conversion-basic/unit-conversion-pipe-basic.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?4332","webpack:///demo/src/components/demo/pipes/unit-conversion/unit-conversion-pipe-example.module.ts","webpack:///demo/src/components/demo/pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.ts","webpack:///demo/src/components/demo/pipes/unit-conversion/docs/unit-conversion-pipe-docs.component.html"],"names":["UnitConversionPipeBasicExampleComponent","num","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","routes","path","component","data","ga","showThemeSwitcher","hideIndicator","UnitConversionPipeExampleModule","provide","useFactory","forChild","UnitConversionPipeDocsComponent"],"mappings":"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","file":"unit-conversion-unit-conversion-pipe-example-module-es5.js","sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"unit-conversion-pipe-basic-example\",\n    templateUrl: \"./unit-conversion-pipe-basic.example.component.html\",\n    styleUrls: [\"./unit-conversion-pipe-basic.example.component.less\"],\n})\nexport class UnitConversionPipeBasicExampleComponent {\n    public num = 998990;\n}\n","<div class=\"conversion d-flex flex-column align-items-end\">\n    {{ num | unitConversion : 2 : false : \"bitsPerSecond\" }}\n</div>\n<hr>\n<nui-form-field class=\"d-block mt-5\"\n                caption=\"Bits Per Second\"\n                [showOptionalText]=\"false\">\n    <nui-textbox-number type=\"number\"\n                        [(ngModel)]=\"num\"\n                        [minValue]=\"0\"\n                        [step]=\"10\"\n                        customBoxWidth=\"200px\"></nui-textbox-number>\n</nui-form-field>\n","var map = {\n\t\"./docs/unit-conversion-pipe-docs.component.html\": \"jxIk\",\n\t\"./docs/unit-conversion-pipe-docs.component.less\": \"6F/a\",\n\t\"./docs/unit-conversion-pipe-docs.component.ts\": \"wD7G\",\n\t\"./unit-conversion-basic/unit-conversion-pipe-basic.example.component.html\": \"Yw5f\",\n\t\"./unit-conversion-basic/unit-conversion-pipe-basic.example.component.less\": \"eD/Y\",\n\t\"./unit-conversion-basic/unit-conversion-pipe-basic.example.component.ts\": \"3uq/\",\n\t\"./unit-conversion-pipe-example.module.ts\": \"BWQn\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RLsK\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport { UnitConversionPipeDocsComponent } from \"./docs/unit-conversion-pipe-docs.component\";\nimport { UnitConversionPipeBasicExampleComponent } from \"./unit-conversion-basic/unit-conversion-pipe-basic.example.component\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: UnitConversionPipeDocsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"basic\",\n        component: UnitConversionPipeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        UnitConversionPipeDocsComponent,\n        UnitConversionPipeBasicExampleComponent,\n    ],\n    imports: [\n        FormsModule,\n        NuiCommonModule,\n        NuiDocsModule,\n        NuiFormFieldModule,\n        NuiTextboxModule,\n        RouterModule.forChild(routes),\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class UnitConversionPipeExampleModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl: \"./unit-conversion-pipe-docs.component.html\",\n    styleUrls: [\"./unit-conversion-pipe-docs.component.less\"],\n})\nexport class UnitConversionPipeDocsComponent { }\n","<p>\n    The <code><a href=\"../pipes/UnitConversionPipe.html#info\" target=\"_parent\">unitConversion</a></code> pipe can be used to convert a large value of a small\n    basic unit to a smaller value of a larger unit--for example, converting a quantity of 1024 in bytes to \"1 KB\". The converted unit label is automatically\n    appended to the output. Supported units are of type <code><a href=\"../miscellaneous/typealiases.html#UnitOption\" target=\"_blank\">UnitOption</a></code> and\n    include the following: <code>\"generic\"</code> (e.g. 1k for 1000), <code>\"bytes\"</code>, <code>\"bytesPerSecond\"</code>, <code>\"bitsPerSecond\"</code>, and\n    <code>\"hertz\"</code>.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCommonModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>To get started with using the pipe, take a look at the template source of the example below.</p>\n\n<h3>Parameters</h3>\n<p>The pipe accepts the following parameters:</p>\n<ul>\n    <li><strong>value</strong> - The value to be converted.</li>\n    <li><strong>scale</strong> - The decimal scale of the formatted value--for specifying how many significant digits to display to the right of the decimal.</li>\n    <li><strong>plusSign</strong> - Boolean for specifying whether to prefix the output with a '+' when the source value is greater than zero. Defaults to false.</li>\n    <li>\n        <strong>unit</strong> - The basic unit to use for the conversion. Accepts arguments of type\n        <code><a href=\"../miscellaneous/typealiases.html#UnitOption\" target=\"_blank\">UnitOption</a></code>.\n    </li>\n</ul>\n\n<nui-example-wrapper filenamePrefix=\"unit-conversion-pipe-basic\" exampleTitle=\"Basic Usage\">\n    <unit-conversion-pipe-basic-example></unit-conversion-pipe-basic-example>\n</nui-example-wrapper>\n"]}