(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{"+Uf0":function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},"19SM":function(e,o,c){var n={"./checkbox-group-basic/checkbox-group-basic.example.component.html":"dmI9","./checkbox-group-basic/checkbox-group-basic.example.component.ts":"Z7g5","./checkbox-group-docs/checkbox-group-docs.example.component.html":"lGTv","./checkbox-group-docs/checkbox-group-docs.example.component.ts":"+Uf0","./checkbox-group-in-form/checkbox-group-in-form.example.component.html":"NvPO","./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":"Y7Yd","./checkbox-group-inline/checkbox-group-inline.example.component.html":"FsbB","./checkbox-group-inline/checkbox-group-inline.example.component.ts":"8Z72","./checkbox-group-justified/checkbox-group-justified.example.component.html":"JoKC","./checkbox-group-justified/checkbox-group-justified.example.component.ts":"EiW/","./checkbox-group-test/checkbox-group-test.component.html":"Ut/2","./checkbox-group-test/checkbox-group-test.component.ts":"fuQ5","./checkbox-group-visual-test/checkbox-group-visual-test.component.html":"j3x3","./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":"EFDT","./checkbox-group.module.ts":"JpOM","./index.ts":"FDVP"};function t(e){var o=i(e);return c(o)}function i(e){if(!c.o(n,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}t.keys=function(){return Object.keys(n)},t.resolve=i,e.exports=t,t.id="19SM"},"8Z72":function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},EFDT:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},"EiW/":function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},FDVP:function(e,o,c){"use strict";c.r(o),o.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},FsbB:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},JoKC:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},JpOM:function(e,o,c){"use strict";c.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'},NvPO:function(e,o,c){"use strict";c.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},"Ut/2":function(e,o,c){"use strict";c.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group-in-form-example id="nui-demo-checkbox-group-part-of-form"></nui-checkbox-group-in-form-example>\n    </div>\n</div>\n'},Y7Yd:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},Z7g5:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},dMfj:function(e,o,c){"use strict";c.r(o),c.d(o,"CheckboxGroupModule",function(){return R});var n=c("3Pt+"),t=c("tyNb"),i=c("b5Xb"),a=c("fXoL"),l=c("s1l0"),s=c("ofXK"),b=c("Oh8U"),u=c("6urz");function r(e,o){1&e&&(a.Vb(0,"nui-message",7),a.Vb(1,"b"),a.Zb(2,8),a.Ub(),a.Ub()),2&e&&a.vc("allowDismiss",!0)}function h(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",9),a.Rc(1),a.Ub()),2&e){const e=o.$implicit;a.vc("value",e),a.Db(1),a.Tc(" ",e," ")}}let p=(()=>{class e{constructor(e,o){this.formBuilder=e,this.toastService=o,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}ngOnInit(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[n.u.required,n.u.minLength(3)])})}onSubmit(){console.log(this.myForm),this.toastService.success({message:$localize`Your form is valid!`})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Pb(n.c),a.Pb(i.Pb))},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){let e,o;return e=$localize`:␟71c77bb8cecdf11ec3eead24dd1ba506573fa9cd␟935187492052582731:Submit`,o=$localize`:␟aaf9b8331666795542f417fe39c78014513ca737␟3498101055154698277:Select minimum 3 checkboxes!`,[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],e,["type","critical",3,"allowDismiss"],o,[3,"value"]]},template:function(e,o){1&e&&(a.Vb(0,"form",0),a.jc("submit",function(){return o.onSubmit()}),a.Vb(1,"div",1),a.Pc(2,r,3,1,"nui-message",2),a.Vb(3,"nui-checkbox-group",3),a.Pc(4,h,2,2,"nui-checkbox",4),a.Ub(),a.Ub(),a.Vb(5,"button",5),a.Zb(6,6),a.Ub(),a.Ub()),2&e&&(a.vc("formGroup",o.myForm),a.Db(2),a.vc("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),a.Db(2),a.vc("ngForOf",o.vegetables),a.Db(1),a.vc("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[n.v,n.n,n.h,s.q,l.a,n.m,n.f,n.t,s.p,u.a,b.a],encapsulation:2}),e})();function d(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",12),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}function m(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",13),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("hint",c.hints.indexOf(e)>=0?c.hints[c.hints.indexOf(e)]:null)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}let g=(()=>{class e{constructor(e){this.formBuilder=e,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Pb(n.c))},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-test-example"]],decls:22,vars:24,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["id","nui-demo-checkbox-group-part-of-form"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(a.Vb(0,"div",0),a.Vb(1,"div",1),a.Vb(2,"nui-checkbox-group",2),a.Pc(3,d,2,3,"nui-checkbox",3),a.Vb(4,"nui-checkbox",4),a.Rc(5),a.Ub(),a.Ub(),a.Ub(),a.Vb(6,"div",5),a.Vb(7,"nui-checkbox-group",6),a.Pc(8,m,2,4,"nui-checkbox",7),a.Ub(),a.Ub(),a.Vb(9,"div",5),a.Vb(10,"form",8),a.Vb(11,"nui-checkbox-group",9),a.Vb(12,"nui-checkbox",10),a.Rc(13),a.Ub(),a.Vb(14,"nui-checkbox",10),a.Rc(15),a.Ub(),a.Vb(16,"nui-checkbox",10),a.Rc(17),a.Ub(),a.Vb(18,"nui-checkbox",10),a.Rc(19),a.Ub(),a.Ub(),a.Ub(),a.Ub(),a.Vb(20,"div",1),a.Qb(21,"nui-checkbox-group-in-form-example",11),a.Ub(),a.Ub()),2&e&&(a.Db(2),a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables),a.Db(1),a.vc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),a.Db(1),a.Sc(o.disabledOne),a.Db(2),a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables),a.Db(2),a.vc("formGroup",o.testForm),a.Db(2),a.vc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),a.Db(1),a.Tc(" ",o.vegetables[0],""),a.Db(1),a.vc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),a.Db(1),a.Tc(" ",o.vegetables[1],""),a.Db(1),a.vc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),a.Db(1),a.Tc(" ",o.vegetables[2],""),a.Db(1),a.vc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),a.Db(1),a.Tc(" ",o.vegetables[3],""))},directives:[l.a,s.p,b.a,n.v,n.n,n.h,n.m,n.f,p],encapsulation:2}),e})();var x=c("CVg4");function k(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",2),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}let v=(()=>{class e{constructor(e){this.toastService=e,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}onValueChange(e){this.toastService.success({message:$localize`Selected checkboxes: `+e})}}return e.\u0275fac=function(o){return new(o||e)(a.Pb(i.Pb))},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){let e;return e=$localize`:␟ba785d6cbb33a003a3ce1d20077ba67264374284␟829155627086234075:This is some help text`,[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],["hint",e,3,"value","checked",4,"ngFor","ngForOf"],["hint",e,3,"value","checked"]]},template:function(e,o){1&e&&(a.Vb(0,"nui-checkbox-group",0),a.jc("valuesChange",function(e){return o.onValueChange(e)}),a.Pc(1,k,2,3,"nui-checkbox",1),a.Ub()),2&e&&(a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables))},directives:[l.a,s.p,b.a],encapsulation:2}),e})();function f(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",2),a.Rc(1),a.Ub()),2&e){const e=o.$implicit;a.vc("value",e),a.Db(1),a.Tc(" ",e," ")}}let C=(()=>{class e{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&(a.Vb(0,"nui-checkbox-group",0),a.Pc(1,f,2,2,"nui-checkbox",1),a.Ub()),2&e&&(a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables))},directives:[l.a,s.p,b.a],encapsulation:2}),e})();function V(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",2),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("hint",c.hints.indexOf(e)>=0?c.hints[c.hints.indexOf(e)]:null)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}let U=(()=>{class e{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(a.Vb(0,"nui-checkbox-group",0),a.Pc(1,V,2,4,"nui-checkbox",1),a.Ub()),2&e&&(a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables))},directives:[l.a,s.p,b.a],encapsulation:2}),e})();function F(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",17),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}function O(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",18),a.Rc(1),a.Ub()),2&e){const e=o.$implicit;a.vc("value",e),a.Db(1),a.Tc(" ",e," ")}}function T(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",19),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}function D(e,o){if(1&e&&(a.Vb(0,"nui-checkbox",20),a.Rc(1),a.Ub()),2&e){const e=o.$implicit,c=a.nc();a.vc("value",e)("checked",c.isChecked(e)),a.Db(1),a.Tc(" ",e," ")}}const G=[{path:"",component:(()=>{class e{}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&(a.Vb(0,"h2"),a.Rc(1,"Required Modules"),a.Ub(),a.Vb(2,"ul"),a.Vb(3,"li"),a.Vb(4,"code"),a.Rc(5,"NuiCheckboxModule"),a.Ub(),a.Ub(),a.Ub(),a.Vb(6,"h2"),a.Rc(7,"Basic Usage"),a.Ub(),a.Vb(8,"p"),a.Rc(9," The "),a.Vb(10,"code"),a.Rc(11,"<nui-checkbox-group>"),a.Ub(),a.Rc(12," component is used for combining "),a.Vb(13,"code"),a.Rc(14,"<nui-checkbox>"),a.Ub(),a.Rc(15," components into a group. Use the "),a.Vb(16,"code"),a.Rc(17,"name"),a.Ub(),a.Rc(18,' input to set the "name" attribute for the inner '),a.Vb(19,"code"),a.Rc(20,"<nui-checkbox>"),a.Ub(),a.Rc(21," input elements. To get the values of the "),a.Vb(22,"code"),a.Rc(23,"<nui-checkbox>"),a.Ub(),a.Rc(24," child components use the "),a.Vb(25,"code"),a.Rc(26,"values"),a.Ub(),a.Rc(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),a.Vb(28,"code"),a.Rc(29,"(valuesChange)"),a.Ub(),a.Rc(30," output.\n"),a.Ub(),a.Vb(31,"nui-example-wrapper",0),a.Qb(32,"nui-checkbox-group-basic-example"),a.Ub(),a.Vb(33,"h2"),a.Rc(34,"Inline"),a.Ub(),a.Vb(35,"p"),a.Rc(36," Use the "),a.Vb(37,"code"),a.Rc(38,"nui-checkbox-group-inline"),a.Ub(),a.Rc(39," class to display checkbox group inline.\n"),a.Ub(),a.Vb(40,"nui-example-wrapper",1),a.Qb(41,"nui-checkbox-group-inline-example"),a.Ub(),a.Vb(42,"h2"),a.Rc(43,"Part of Form"),a.Ub(),a.Vb(44,"p"),a.Vb(45,"code"),a.Rc(46,"<nui-checkbox-group>"),a.Ub(),a.Rc(47," can be used in reactive forms.\n"),a.Ub(),a.Vb(48,"nui-example-wrapper",2),a.Qb(49,"nui-checkbox-group-in-form-example"),a.Ub(),a.Vb(50,"h2"),a.Rc(51,"Justified"),a.Ub(),a.Vb(52,"p"),a.Rc(53," To justify "),a.Vb(54,"code"),a.Rc(55,"<nui-checkbox>"),a.Ub(),a.Rc(56," to the width of "),a.Vb(57,"code"),a.Rc(58,"<nui-checkbox-group>"),a.Ub(),a.Rc(59," (or simply parent element, in case "),a.Vb(60,"code"),a.Rc(61,"<nui-checkbox>"),a.Ub(),a.Rc(62," is used not as a part of "),a.Vb(63,"code"),a.Rc(64,"<nui-checkbox-group>"),a.Ub(),a.Rc(65,"), add "),a.Vb(66,"code"),a.Rc(67,"nui-checkbox--justified"),a.Ub(),a.Rc(68," class to the "),a.Vb(69,"code"),a.Rc(70,"<nui-checkbox>"),a.Ub(),a.Rc(71,".\n"),a.Ub(),a.Vb(72,"nui-example-wrapper",3),a.Qb(73,"nui-checkbox-group-justified-example"),a.Ub())},directives:[x.a,v,C,p,U],encapsulation:2}),e})(),data:{srlc:{stage:i.Jb.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(()=>{class e{constructor(e){this.formBuilder=e,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Pb(n.c))},e.\u0275cmp=a.Jb({type:e,selectors:[["nui-checkbox-group-visual-test"]],decls:42,vars:28,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","enabledCheckboxGroup"],[3,"value","disabled","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","disabledCheckboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"],[3,"value","checked"]],template:function(e,o){1&e&&(a.Vb(0,"div",0),a.Vb(1,"div",1),a.Vb(2,"div",2),a.Vb(3,"h3"),a.Rc(4,"Basic Checkbox-Group with Hint Text"),a.Ub(),a.Vb(5,"nui-checkbox-group",3),a.Pc(6,F,2,3,"nui-checkbox",4),a.Vb(7,"nui-checkbox",5),a.Rc(8),a.Ub(),a.Ub(),a.Qb(9,"hr"),a.Ub(),a.Vb(10,"div",2),a.Vb(11,"h3"),a.Rc(12,"Inline Checkbox-Group"),a.Ub(),a.Vb(13,"nui-checkbox-group",6),a.Pc(14,O,2,2,"nui-checkbox",7),a.Ub(),a.Qb(15,"hr"),a.Ub(),a.Qb(16,"div",8),a.Vb(17,"div",2),a.Vb(18,"h3"),a.Rc(19,"Justified Checkbox-Group"),a.Ub(),a.Vb(20,"nui-checkbox-group",9),a.Pc(21,T,2,3,"nui-checkbox",10),a.Ub(),a.Qb(22,"hr"),a.Ub(),a.Vb(23,"div",2),a.Vb(24,"h3"),a.Rc(25,"Disabled checkboxes within the form"),a.Ub(),a.Vb(26,"form",11),a.Vb(27,"nui-checkbox-group",12),a.Vb(28,"nui-checkbox",13),a.Rc(29),a.Ub(),a.Vb(30,"nui-checkbox",13),a.Rc(31),a.Ub(),a.Vb(32,"nui-checkbox",13),a.Rc(33),a.Ub(),a.Vb(34,"nui-checkbox",13),a.Rc(35),a.Ub(),a.Ub(),a.Ub(),a.Ub(),a.Ub(),a.Vb(36,"div",14),a.Vb(37,"h3"),a.Rc(38,"Disabled checkboxes within the disabled form"),a.Ub(),a.Vb(39,"form",11),a.Vb(40,"nui-checkbox-group",15),a.Pc(41,D,2,3,"nui-checkbox",16),a.Ub(),a.Ub(),a.Ub(),a.Ub()),2&e&&(a.Db(5),a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables),a.Db(1),a.vc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),a.Db(1),a.Sc(o.disabledOne),a.Db(5),a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables),a.Db(6),a.vc("values",o.selectedVegetables),a.Db(1),a.vc("ngForOf",o.vegetables),a.Db(5),a.vc("formGroup",o.testForm),a.Db(2),a.vc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),a.Db(1),a.Tc(" ",o.vegetables[0],""),a.Db(1),a.vc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),a.Db(1),a.Tc(" ",o.vegetables[1],""),a.Db(1),a.vc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),a.Db(1),a.Tc(" ",o.vegetables[2],""),a.Db(1),a.vc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),a.Db(1),a.Tc(" ",o.vegetables[3],""),a.Db(4),a.vc("formGroup",o.testForm),a.Db(2),a.vc("ngForOf",o.vegetables))},directives:[l.a,s.p,b.a,n.v,n.n,n.h,n.m,n.f],encapsulation:2}),e})(),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:g,data:{srlc:{hideIndicator:!0}}}];let R=(()=>{class e{}return e.\u0275fac=function(o){return new(o||e)},e.\u0275mod=a.Nb({type:e}),e.\u0275inj=a.Mb({providers:[{provide:i.f,useFactory:()=>c("19SM")}],imports:[[i.w,i.G,n.j,n.s,i.v,t.f.forChild(G)],t.f]}),e})()},dmI9:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},fuQ5:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},j3x3:function(e,o,c){"use strict";c.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="enabledCheckboxGroup">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <h3>Disabled checkboxes within the disabled form</h3>\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="disabledCheckboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},lGTv:function(e,o,c){"use strict";c.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'}}]);