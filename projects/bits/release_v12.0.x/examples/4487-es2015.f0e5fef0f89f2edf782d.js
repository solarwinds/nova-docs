(self.webpackChunk_nova_ui_bits=self.webpackChunk_nova_ui_bits||[]).push([[4487],{27131:function(e,n,t){var o={"./custom-theme/custom-theme.example.component.html":64638,"./custom-theme/custom-theme.example.component.less":1513,"./custom-theme/custom-theme.example.component.ts":34289,"./theme-switch-service/theme-switch-service.example.component.html":4641,"./theme-switch-service/theme-switch-service.example.component.ts":11856,"./theming-docs/theming-docs.example.component.html":38386,"./theming-docs/theming-docs.example.component.less":70571,"./theming-docs/theming-docs.example.component.ts":31415,"./theming.module.ts":62745,"components/demo/theming/custom-theme/custom-theme.example.component.html":64638,"components/demo/theming/custom-theme/custom-theme.example.component.less":1513,"components/demo/theming/custom-theme/custom-theme.example.component.ts":34289,"components/demo/theming/theme-switch-service/theme-switch-service.example.component.html":4641,"components/demo/theming/theme-switch-service/theme-switch-service.example.component.ts":11856,"components/demo/theming/theming-docs/theming-docs.example.component.html":38386,"components/demo/theming/theming-docs/theming-docs.example.component.less":70571,"components/demo/theming/theming-docs/theming-docs.example.component.ts":31415,"components/demo/theming/theming.module.ts":62745};function r(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=a,e.exports=r,r.id=27131},94487:function(e,n,t){"use strict";t.r(n),t.d(n,{ThemingModule:function(){return u}});var o=t(99763),r=t(96811),a=t(38583),i=t(33018),s=t(74590);let c=(()=>{class e{constructor(e,n){this.customClassName="clown-party-theme",this.containerElement=n.children[0],this.renderer=e.createRenderer(null,null)}ngOnDestroy(){this.renderer.removeClass(this.containerElement,this.customClassName)}setTheme(e){this.renderer[e?"addClass":"removeClass"](this.containerElement,this.customClassName)}}return e.\u0275fac=function(n){return new(n||e)(i.Y36(i.FYo),i.Y36(a.K0))},e.\u0275cmp=i.Xpm({type:e,selectors:[["custom-theme-example"]],decls:2,vars:0,consts:function(){let e;return e=$localize`:␟d0f6e85c4cd1b5bf3a514e420982f5214d002512␟9116155268546990677: Clown Party Theme
`,[[3,"valueChange"],e]},template:function(e,n){1&e&&(i.TgZ(0,"nui-switch",0),i.NdJ("valueChange",function(e){return n.setTheme(e)}),i.SDv(1,1),i.qZA())},directives:[s.q],styles:[".clown-party-theme{--page-header-border-color: red;--nui-color-bg-light: fuchsia;--nui-color-bg-content: fuchsia;--nui-color-bg-secondary: #009fc9;--nui-color-semantic-ok-bg: #009fc9;--nui-color-text-default: white;--nui-color-text-link: #fdf40e}\n"],encapsulation:2}),e})(),l=(()=>{class e{constructor(e){this.themeSwitchService=e}ngOnInit(){this.themeSwitchService.enableColorSchemePreferenceHandling()}ngOnDestroy(){this.themeSwitchService.setDarkTheme(!1),this.themeSwitchService.disableColorSchemePreferenceHandling()}}return e.\u0275fac=function(n){return new(n||e)(i.Y36(r.ERq))},e.\u0275cmp=i.Xpm({type:e,selectors:[["theme-switch-service-example"]],decls:3,vars:3,consts:function(){let e;return e=$localize`:␟05479e7dc2d5177dcab1c7e0ac7df3595e4cc8d8␟8950414640429407165: Dark Theme
`,[[3,"value","valueChange"],e]},template:function(e,n){1&e&&(i.TgZ(0,"nui-switch",0),i.NdJ("valueChange",function(e){return n.themeSwitchService.setDarkTheme(e)}),i.SDv(1,1),i.ALo(2,"async"),i.qZA()),2&e&&i.Q6J("value",i.lcZ(2,1,n.themeSwitchService.isDarkModeEnabledSubject))},directives:[s.q],pipes:[a.Ov],encapsulation:2}),e})();var h=t(70132),m=t(52679);const d=[{path:"",component:(()=>{class e{constructor(){this.lessCode='\n@import (reference) "nui-framework-variables";\n\n.sample-class {\n    background: var(--nui-color-bg-workspace, @nui-color-bg-workspace)\n    border: 1px solid var(--nui-color-line-default, @nui-color-line-default);\n}'}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=i.Xpm({type:e,selectors:[["theming-docs-example"]],decls:130,vars:1,consts:[["href","../injectables/ThemeSwitchService.html","target","_blank"],["href","../injectables/ThemeSwitchService.html#setDarkTheme","target","_blank"],["href","../injectables/ThemeSwitchService.html#enableColorSchemePreferenceHandling","target","_blank"],["href","../injectables/ThemeSwitchService.html#disableColorSchemePreferenceHandling","target","_blank"],["href","https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/set-dark-mode","target","_blank"],["href","https://support.apple.com/en-us/HT208976","target","_blank"],["filenamePrefix","theme-switch-service.example","exampleTitle","Theme Switch Service"],["href","../injectables/ThemeSwitchService.html#isDarkModeEnabledSubject","target","_blank"],["href","../injectables/ThemeSwitchService.html#withRefreshRoute","target","_blank"],["href","https://www.w3schools.com/css/css3_variables.asp","target","_blank"],["language","less"],["href","https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-colors.less","target","_blank"],["href","https://angular.io/api/core/Renderer2","target","_blank"],["filenamePrefix","custom-theme.example","exampleTitle","Custom Themes"]],template:function(e,n){1&e&&(i.TgZ(0,"h1"),i._uU(1,"Theming"),i.qZA(),i.TgZ(2,"p"),i._uU(3," Nova currently supports two themes out of the box: "),i.TgZ(4,"em"),i._uU(5,"light"),i.qZA(),i._uU(6," and "),i.TgZ(7,"em"),i._uU(8,"dark"),i.qZA(),i._uU(9,". By default, apps using Nova are styled with the light theme.\n"),i.qZA(),i.TgZ(10,"h2"),i._uU(11,"Theme Switch Service"),i.qZA(),i.TgZ(12,"p"),i._uU(13," To configure your app to use the dark theme, you can add the "),i.TgZ(14,"code"),i._uU(15,"dark-nova-theme"),i.qZA(),i._uU(16," class to the app's root "),i.TgZ(17,"code"),i._uU(18,"html"),i.qZA(),i._uU(19," element. But, you don't have to do it manually. Nova provides a service that can be used to toggle the root "),i.TgZ(20,"code"),i._uU(21,"html"),i.qZA(),i._uU(22," element class on demand. To enable the dark theme, inject the "),i.TgZ(23,"code"),i.TgZ(24,"a",0),i._uU(25,"ThemeSwitchService"),i.qZA(),i.qZA(),i._uU(26," into a component and invoke its "),i.TgZ(27,"code"),i.TgZ(28,"a",1),i._uU(29,"setDarkTheme"),i.qZA(),i.qZA(),i._uU(30," method with a value of "),i.TgZ(31,"code"),i._uU(32,"true"),i.qZA(),i._uU(33,". To disable the dark theme invoke "),i.TgZ(34,"code"),i.TgZ(35,"a",1),i._uU(36,"setDarkTheme"),i.qZA(),i.qZA(),i._uU(37," with a value of "),i.TgZ(38,"code"),i._uU(39,"false"),i.qZA(),i._uU(40,".\n"),i.qZA(),i.TgZ(41,"p"),i._uU(42," Additionally, the service can be used to configure your app to respond to the user's light/dark mode system preference. To configure your app to do this, invoke the service's "),i.TgZ(43,"code"),i.TgZ(44,"a",2),i._uU(45,"enableColorSchemePreferenceHandling"),i.qZA(),i.qZA(),i._uU(46," method. If the user has configured their operating system to use the system-wide dark theme, your app will automatically be displayed with the dark theme. To disable system preference handling, invoke the "),i.TgZ(47,"code"),i.TgZ(48,"a",3),i._uU(49,"disableColorSchemePreferenceHandling"),i.qZA(),i.qZA(),i._uU(50," method.\n"),i.qZA(),i.TgZ(51,"p"),i._uU(52," The following example configures the service to respond to the user's light/dark system preference. To try it out, follow these links on how to change the setting for "),i.TgZ(53,"a",4),i._uU(54,"Windows 10"),i.qZA(),i._uU(55," and "),i.TgZ(56,"a",5),i._uU(57,"MacOS"),i.qZA(),i._uU(58,".\n"),i.qZA(),i.TgZ(59,"p"),i._uU(60," Additionally, the example invokes "),i.TgZ(61,"code"),i.TgZ(62,"a",1),i._uU(63,"setDarkTheme"),i.qZA(),i.qZA(),i._uU(64," with "),i.TgZ(65,"code"),i._uU(66,"true"),i.qZA(),i._uU(67," or "),i.TgZ(68,"code"),i._uU(69,"false"),i.qZA(),i._uU(70," each time the switch is toggled.\n"),i.qZA(),i.TgZ(71,"nui-example-wrapper",6),i._UZ(72,"theme-switch-service-example"),i.qZA(),i.TgZ(73,"h3"),i._uU(74,"Additional Properties"),i.qZA(),i.TgZ(75,"ul"),i.TgZ(76,"li"),i.TgZ(77,"code"),i.TgZ(78,"a",7),i._uU(79,"isDarkModeEnabledSubject"),i.qZA(),i.qZA(),i._uU(80," - The example above uses this "),i.TgZ(81,"code"),i._uU(82,"BehaviorSubject"),i.qZA(),i._uU(83," in its template to determine whether dark mode is enabled. "),i.qZA(),i.TgZ(84,"li"),i.TgZ(85,"code"),i.TgZ(86,"a",8),i._uU(87,"withRefreshRoute"),i.qZA(),i.qZA(),i._uU(88," - Set this boolean to true if you want the route to refresh each time the theme changes. This can come in handy if you have elements on the page whose styles can't be changed on the fly for some reason. "),i.qZA(),i.qZA(),i.TgZ(89,"h2"),i._uU(90,"Participation"),i.qZA(),i.TgZ(91,"p"),i._uU(92," To have the colors in your app participate in theming, ensure that the values of your color-oriented properties such as "),i.TgZ(93,"code"),i._uU(94,"background"),i.qZA(),i._uU(95," or "),i.TgZ(96,"code"),i._uU(97,"border"),i.qZA(),i._uU(98," take the form of CSS variables by invoking the CSS "),i.TgZ(99,"code"),i.TgZ(100,"a",9),i._uU(101,"var"),i.qZA(),i.qZA(),i._uU(102," function with the desired color property name and an optional fallback value. This will convert the CSS color properties defined by Nova to CSS variables whose values will update to correspond to the active theme.\n"),i.qZA(),i.TgZ(103,"nui-example-code",10),i._uU(104),i.qZA(),i.TgZ(105,"h2"),i._uU(106,"Custom Themes"),i.qZA(),i.TgZ(107,"p"),i._uU(108,"It's possible to create a custom theme by doing the following:"),i.qZA(),i.TgZ(109,"ol"),i.TgZ(110,"li"),i._uU(111," Provide alternate values for Nova's Less color variables defined "),i.TgZ(112,"a",11),i._uU(113,"here"),i.qZA(),i._uU(114,". "),i.qZA(),i.TgZ(115,"li"),i._uU(116," Create a CSS class containing color properties that use the alternate color values. "),i.qZA(),i.TgZ(117,"li"),i._uU(118," Use Angular's "),i.TgZ(119,"code"),i.TgZ(120,"a",12),i._uU(121,"Renderer2"),i.qZA(),i.qZA(),i._uU(122," to add the custom class to the element you want to apply the colors to. "),i.qZA(),i.qZA(),i.TgZ(123,"p"),i._uU(124," The following example applies a totally unusable clownish party theme to the root "),i.TgZ(125,"code"),i._uU(126,"html"),i.qZA(),i._uU(127," element when the switch is turned on. To see how the alternate color variables and properties are defined, take a look at the less file in the source expander.\n"),i.qZA(),i.TgZ(128,"nui-example-wrapper",13),i._UZ(129,"custom-theme-example"),i.qZA()),2&e&&(i.xp6(104),i.hij(" ",n.lessCode,"\n"))},directives:[h.h,l,m.i,c],styles:["[_nghost-%COMP%]   ul[_ngcontent-%COMP%]{padding-left:40px}[_nghost-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:disc}"]}),e})(),data:{srlc:{stage:r.We9.ga}}},{path:"theme-switch-service",component:l,data:{srlc:{hideIndicator:!0}}},{path:"custom-theme",component:c,data:{srlc:{hideIndicator:!0}}}];let u=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=i.oAB({type:e}),e.\u0275inj=i.cJS({providers:[{provide:r.V3$,useFactory:()=>t(27131)}],imports:[[r.gkT,r.vvu,r.cJ5,o.Bz.forChild(d)],o.Bz]}),e})()},64638:function(e,n,t){"use strict";t.r(n),n.default='<nui-switch (valueChange)="setTheme($event)" i18n>\n    Clown Party Theme\n</nui-switch>\n'},34289:function(e,n,t){"use strict";t.r(n),n.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { DOCUMENT } from "@angular/common";\nimport {\n    Component,\n    Inject,\n    OnDestroy,\n    Renderer2,\n    RendererFactory2,\n    ViewEncapsulation,\n} from "@angular/core";\n\n@Component({\n    selector: "custom-theme-example",\n    templateUrl: "./custom-theme.example.component.html",\n    styleUrls: ["./custom-theme.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CustomThemeExampleComponent implements OnDestroy {\n    private readonly renderer: Renderer2;\n    private readonly containerElement: Element;\n    private readonly customClassName = "clown-party-theme";\n\n    // Inject the RendererFactory2 for manipulating the DOM and inject the document for manipulation\n    constructor(\n        rendererFactory: RendererFactory2,\n        @Inject(DOCUMENT) document: Document\n    ) {\n        // Get the root html element\n        this.containerElement = document.children[0];\n        // Create a renderer instance\n        this.renderer = rendererFactory.createRenderer(null, null);\n    }\n\n    ngOnDestroy() {\n        // cleanup\n        this.renderer.removeClass(this.containerElement, this.customClassName);\n    }\n\n    public setTheme(value: boolean) {\n        // add/remove the custom class to the root html element based on the switch\'s value\n        this.renderer[value ? "addClass" : "removeClass"](\n            this.containerElement,\n            this.customClassName\n        );\n    }\n}\n'},4641:function(e,n,t){"use strict";t.r(n),n.default='<nui-switch\n    (valueChange)="themeSwitchService.setDarkTheme($event)"\n    [value]="themeSwitchService.isDarkModeEnabledSubject | async"\n    i18n\n>\n    Dark Theme\n</nui-switch>\n'},11856:function(e,n,t){"use strict";t.r(n),n.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnDestroy, OnInit } from "@angular/core";\n\nimport { ThemeSwitchService } from "@nova-ui/bits";\n\n@Component({\n    selector: "theme-switch-service-example",\n    templateUrl: "./theme-switch-service.example.component.html",\n})\nexport class ThemeSwitchServiceExampleComponent implements OnInit, OnDestroy {\n    // Inject the service\n    constructor(public themeSwitchService: ThemeSwitchService) {}\n\n    public ngOnInit() {\n        // Configure the service to listen for changes to the system color scheme preference.\n        // If the user already has dark mode enabled, the service will set the theme as soon\n        // as this method is called.\n        this.themeSwitchService.enableColorSchemePreferenceHandling();\n    }\n\n    public ngOnDestroy() {\n        // Switch back to the default theme\n        this.themeSwitchService.setDarkTheme(false);\n        // Stop the service from listening for changes to the system color scheme preference.\n        this.themeSwitchService.disableColorSchemePreferenceHandling();\n    }\n}\n'},38386:function(e,n,t){"use strict";t.r(n),n.default='<h1>Theming</h1>\n\n<p>\n    Nova currently supports two themes out of the box: <em>light</em> and\n    <em>dark</em>. By default, apps using Nova are styled with the light theme.\n</p>\n\n<h2>Theme Switch Service</h2>\n<p>\n    To configure your app to use the dark theme, you can add the\n    <code>dark-nova-theme</code> class to the app\'s root\n    <code>html</code> element. But, you don\'t have to do it manually. Nova\n    provides a service that can be used to toggle the root\n    <code>html</code> element class on demand. To enable the dark theme, inject\n    the\n    <code\n        ><a href="../injectables/ThemeSwitchService.html" target="_blank"\n            >ThemeSwitchService</a\n        ></code\n    >\n    into a component and invoke its\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#setDarkTheme"\n            target="_blank"\n            >setDarkTheme</a\n        ></code\n    >\n    method with a value of <code>true</code>. To disable the dark theme invoke\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#setDarkTheme"\n            target="_blank"\n            >setDarkTheme</a\n        ></code\n    >\n    with a value of <code>false</code>.\n</p>\n<p>\n    Additionally, the service can be used to configure your app to respond to\n    the user\'s light/dark mode system preference. To configure your app to do\n    this, invoke the service\'s\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#enableColorSchemePreferenceHandling"\n            target="_blank"\n            >enableColorSchemePreferenceHandling</a\n        ></code\n    >\n    method. If the user has configured their operating system to use the\n    system-wide dark theme, your app will automatically be displayed with the\n    dark theme. To disable system preference handling, invoke the\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#disableColorSchemePreferenceHandling"\n            target="_blank"\n            >disableColorSchemePreferenceHandling</a\n        ></code\n    >\n    method.\n</p>\n<p>\n    The following example configures the service to respond to the user\'s\n    light/dark system preference. To try it out, follow these links on how to\n    change the setting for\n    <a\n        href="https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/set-dark-mode"\n        target="_blank"\n        >Windows 10</a\n    >\n    and\n    <a href="https://support.apple.com/en-us/HT208976" target="_blank">MacOS</a\n    >.\n</p>\n<p>\n    Additionally, the example invokes\n    <code\n        ><a\n            href="../injectables/ThemeSwitchService.html#setDarkTheme"\n            target="_blank"\n            >setDarkTheme</a\n        ></code\n    >\n    with <code>true</code> or <code>false</code> each time the switch is\n    toggled.\n</p>\n<nui-example-wrapper\n    filenamePrefix="theme-switch-service.example"\n    exampleTitle="Theme Switch Service"\n>\n    <theme-switch-service-example></theme-switch-service-example>\n</nui-example-wrapper>\n\n<h3>Additional Properties</h3>\n<ul>\n    <li>\n        <code\n            ><a\n                href="../injectables/ThemeSwitchService.html#isDarkModeEnabledSubject"\n                target="_blank"\n                >isDarkModeEnabledSubject</a\n            ></code\n        >\n        - The example above uses this <code>BehaviorSubject</code> in its\n        template to determine whether dark mode is enabled.\n    </li>\n    <li>\n        <code\n            ><a\n                href="../injectables/ThemeSwitchService.html#withRefreshRoute"\n                target="_blank"\n                >withRefreshRoute</a\n            ></code\n        >\n        - Set this boolean to true if you want the route to refresh each time\n        the theme changes. This can come in handy if you have elements on the\n        page whose styles can\'t be changed on the fly for some reason.\n    </li>\n</ul>\n\n<h2>Participation</h2>\n<p>\n    To have the colors in your app participate in theming, ensure that the\n    values of your color-oriented properties such as <code>background</code> or\n    <code>border</code> take the form of CSS variables by invoking the CSS\n    <code\n        ><a\n            href="https://www.w3schools.com/css/css3_variables.asp"\n            target="_blank"\n            >var</a\n        ></code\n    >\n    function with the desired color property name and an optional fallback\n    value. This will convert the CSS color properties defined by Nova to CSS\n    variables whose values will update to correspond to the active theme.\n</p>\n<nui-example-code language="less">\n    {{ lessCode }}\n</nui-example-code>\n\n<h2>Custom Themes</h2>\n<p>It\'s possible to create a custom theme by doing the following:</p>\n<ol>\n    <li>\n        Provide alternate values for Nova\'s Less color variables defined\n        <a\n            href="https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-colors.less"\n            target="_blank"\n            >here</a\n        >.\n    </li>\n    <li>\n        Create a CSS class containing color properties that use the alternate\n        color values.\n    </li>\n    <li>\n        Use Angular\'s\n        <code\n            ><a href="https://angular.io/api/core/Renderer2" target="_blank"\n                >Renderer2</a\n            ></code\n        >\n        to add the custom class to the element you want to apply the colors to.\n    </li>\n</ol>\n<p>\n    The following example applies a totally unusable clownish party theme to the\n    root <code>html</code>\n    element when the switch is turned on. To see how the alternate color\n    variables and properties are defined, take a look at the less file in the\n    source expander.\n</p>\n<nui-example-wrapper\n    filenamePrefix="custom-theme.example"\n    exampleTitle="Custom Themes"\n>\n    <custom-theme-example></custom-theme-example>\n</nui-example-wrapper>\n'},31415:function(e,n,t){"use strict";t.r(n),n.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "theming-docs-example",\n    templateUrl: "./theming-docs.example.component.html",\n    styleUrls: ["./theming-docs.example.component.less"],\n})\nexport class ThemingDocsExampleComponent {\n    public lessCode = `\n@import (reference) "nui-framework-variables";\n\n.sample-class {\n    background: var(--nui-color-bg-workspace, @nui-color-bg-workspace)\n    border: 1px solid var(--nui-color-line-default, @nui-color-line-default);\n}`;\n}\n'},62745:function(e,n,t){"use strict";t.r(n),n.default='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiSwitchModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { CustomThemeExampleComponent } from "./custom-theme/custom-theme.example.component";\nimport { ThemeSwitchServiceExampleComponent } from "./theme-switch-service/theme-switch-service.example.component";\nimport { ThemingDocsExampleComponent } from "./theming-docs/theming-docs.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: ThemingDocsExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: "theme-switch-service",\n        component: ThemeSwitchServiceExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "custom-theme",\n        component: CustomThemeExampleComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiMessageModule,\n        NuiDocsModule,\n        NuiSwitchModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CustomThemeExampleComponent,\n        ThemingDocsExampleComponent,\n        ThemeSwitchServiceExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport class ThemingModule {}\n'},1513:function(e){"use strict";e.exports='export default "// Provide alternate values for the nova-defined color variables\\n// Note 1: This is only a subset of all nova-defined colors to provide the desired effect for demo purposes only.\\n//         The complete set can be found here: https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-colors.less\\n// Note 2: The alternate color values can optionally be provided in a separate file from the property assignment shown below.\\n@page-header-border-color: red;\\n@nui-color-bg-light: fuchsia;\\n@nui-color-bg-content: fuchsia;\\n@nui-color-bg-secondary: #009fc9;\\n@nui-color-semantic-ok-bg: #009fc9;\\n@nui-color-text-default: white;\\n@nui-color-text-link: #fdf40e;\\n\\n// Assign the alternate colors defined above to the corresponding properties in the theme\'s CSS class\\n// Note: Assigning the property values can be automated by the method shown here:\\n// https://github.com/solarwinds/nova/blob/main/packages/bits/src/styles/nui-framework-theme.less\\n.clown-party-theme {\\n    --page-header-border-color: @page-header-border-color;\\n    --nui-color-bg-light: @nui-color-bg-light;\\n    --nui-color-bg-content: @nui-color-bg-content;\\n    --nui-color-bg-secondary: @nui-color-bg-secondary;\\n    --nui-color-semantic-ok-bg: @nui-color-semantic-ok-bg;\\n    --nui-color-text-default: @nui-color-text-default;\\n    --nui-color-text-link: @nui-color-text-link;\\n}\\n";'},70571:function(e){"use strict";e.exports='export default ":host {\\n    ul {\\n        padding-left: 40px;\\n        li {\\n            list-style: disc;\\n        }\\n    }\\n}\\n";'}}]);