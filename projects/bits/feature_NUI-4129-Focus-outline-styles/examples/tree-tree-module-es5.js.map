{"version":3,"sources":["webpack:///demo/src/components/demo/common/tree/tree-docs/tree-docs.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-docs/tree-docs.example.component.html","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.ts","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.html","webpack:///demo/src/components/demo/common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.ts","webpack:///demo/src/components/demo/common/tree/tree-checkbox-lazy/tree-checkbox-lazy.component.html","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-visual-test.component.ts","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-visual-test.component.html","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.ts","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-paginator-test/tree-paginator-test.component.html","webpack:///demo/src/components/demo/common/tree/tree-visual-test/data.ts","webpack:///demo/src/components/demo/common/tree/tree-styling/tree-styling.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-styling/tree-styling.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?fcf0","webpack:///demo/src/components/demo/common/tree/tree-load-more/tree-load-more.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-load-more/tree-load-more.example.component.html","webpack:///demo/src/components/demo/common/tree/tree-basic/tree-basic.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-basic/tree-basic.example.component.html","webpack:///demo/src/components/demo/common/tree/index.ts","webpack:///demo/src/components/demo/common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-leaf-pagination/tree-leaf-pagination.example.component.html","webpack:///demo/src/components/demo/common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.html","webpack:///demo/src/components/demo/common/tree/tree-show-all-dialog/tree-show-all-dialog.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree.module.ts","webpack:///demo/src/components/demo/common/tree/tree-lazy/tree-lazy.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-lazy/tree-lazy.example.component.html","webpack:///demo/src/components/demo/common/tree/http-mock.service.ts","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.ts","webpack:///demo/src/components/demo/common/tree/tree-visual-test/tree-basic-test/tree-basic-test.component.html","webpack:///demo/src/components/demo/common/tree/tree-checkbox/tree-checkbox.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-checkbox/tree-checkbox.example.component.html","webpack:///demo/src/components/demo/common/tree/tree-with-additional-content/tree-with-additional-content.example.component.ts","webpack:///demo/src/components/demo/common/tree/tree-with-additional-content/tree-with-additional-content.example.component.html"],"names":["TreeDocsExampleComponent","initialSetupCode","replace","$event","stopPropagation","TreeCheckboxTestComponent","treeControl","node","children","dataSource","selectionModel","hasChild","_","length","descendants","getDescendants","every","child","isSelected","result","some","descendantsAllSelected","toggle","select","deselect","forEach","checkAllParentsSelection","parent","getParentNode","checkRootNodeSelection","nodeSelected","descAllSelected","find","n","search","i","Error","TREE_DATA","name","isLoading","HttpMock","res","servers","load","pipe","TreeCheckboxLazyComponent","http","differ","nestedNode","create","get","subscribe","cdkTree","renderNodeChanges","nodeOutlet","first","viewContainer","TreeVisualTestComponent","TreePaginatorTestComponent","eventBusService","pageSize","nodesTotalItems","getStream","id","next","hasPagination","paginatorOptions","page","loadNodeItems","nestedNodeDirective","getNodeItems","handleNodeTotalItems","total","handleNodeContent","items","nodeId","totalItems","clear","fruitsList","$localize","vegetablesList","itemList","Array","from","map","getRandomFrom","response","list","Math","floor","random","TREE_DATA_PAGINATOR","TREE_DATA_CHECKBOX","TextStyle","textStyle","icon","SECONDARY","DEFAULT","LABEL","TreeStylingExampleComponent","textStyles","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","webpackContextKeys","Object","resolve","module","exports","TreeLoadMoreExampleComponent","remainingItemsCount","MouseEvent","loadMoreItems","setRemainingItemsCount","push","TreeBasicExampleComponent","TreeLeafPaginationExampleComponent","ServerStatus","hasChildren","RESULTS_PER_PAGE","API_URL","VirtualScrollListDataSource","logger","cache","filters","reset","filtersChanged","virtualScroll","value","start","getBackendData","concat","itemsSource","repeat","paginator","count","toPromise","paging","end","params","set","ceil","toString","String","requestParams","getRequestParams","item","location","status","error","filterName","filter","previousFilters","TreeShowAllDialogExampleComponent","virtualScrollListDataSource","dialogService","destroy$","activeDialogRef","componentInstance","open","TreeDialogContentExampleComponent","size","activeDialogComponent","cdRef","detectChanges","setDsSearchFieldFor","subscribeToDialogScrolling","closed$","deregisterComponent","setTimeout","viewPortManager","registerComponent","observeNextPage$","applyFilters","outputsSubject","v","getFilters","type","complete","activeDialog","itemConfig","trackBy","index","setViewport","viewportRef","close","routes","path","component","data","beta","showThemeSwitcher","TreeModule","provide","useFactory","forChild","TreeLazyExampleComponent","HttpMockService","TreeBasicTestComponent","TreeCheckboxExampleComponent","TreeWithAdditionalContentExampleComponent"],"mappings":"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","file":"tree-tree-module-es5.js","sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-tree-docs-example\",\n    templateUrl: \"./tree-docs.example.component.html\",\n})\n\nexport class TreeDocsExampleComponent {\n    initialSetupCode = `\n// our module where we want to use tree features\nimport { CdkTreeModule } from \"@angular/cdk/tree\";\n\n@NgModule({\n    imports: [\n        CdkTreeModule,\n        // other modules that we might need\n    ],\n    declarations: [ /* our module declaration */],\n    exports:      [ /* our exports */ ],\n})\nexport class MyModule {}`\n        .replace(\"\\r\\n\", \"<br/>\") // nice rendering\n    ;\n}\n\n","<p>The Angular CDK Tree module provides a way to easily and declaratively create Tree interfaces.</p>\n<p>To get started, import <code>CdkTreeModule</code> into the NgModule where you want to use <code>cdk-tree</code> features:</p>\n\n<nui-example-code language=\"typescript\">{{ initialSetupCode }}</nui-example-code>\n\n<p>For more details on the implementation of the @angular/cdk/tree, check the documentation\n    <a href=\"https://material.angular.io/cdk/tree/overview\" target=\"_blank\">here</a></p>\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        Angular CDK's <code>CdkTreeModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>This example shows how easy it is to create a <code>cdk-tree</code> element. Our examples are using <code>nui-expander</code>\n    css styles which we recommend to use. To add <code>nui-expander</code> styles, add <code>.expander()</code> mixin to the\n    component styles. In the result, appropriate css classes are generated which are used in the examples. For example\n    <code>.nui-tree__body</code> applies dotted line to the body of branch, or <code>.nui-tree_header</code> applies\n    <code>cursor: pointer</code>. Look into examples to find more css classes or extend existing css rules to achieve your goal.</p>\n<nui-example-wrapper filenamePrefix=\"basic\" exampleTitle=\"Basic Usage\">\n    <nui-tree-basic-example></nui-tree-basic-example>\n</nui-example-wrapper>\n\n<h2>Tree Styling</h2>\n<p>To apply unique styles for the particular node, provide icon/css class/etc. to this node in the <code>dataSource</code>,\n    and use it as usually in the template of component. Check the source code below:</p>\n<nui-example-wrapper filenamePrefix=\"styling\" exampleTitle=\"Styling\">\n    <nui-tree-styling-example></nui-tree-styling-example>\n</nui-example-wrapper>\n\n<h2>Tree Lazy-loading</h2>\n<p>To implement lazy-loading on <code>CdkTree</code> component branches, use <code>renderNodeChanges</code> method,\n    in order to synchronize data-source with DOM representation after an asynchronous operation has finished. Pay attention\n    to the <code>isLoading</code> flag into yours node objects while implementing lazy-loading.\n</p>\n<nui-example-wrapper filenamePrefix=\"lazy\" exampleTitle=\"Lazy loading\">\n    <nui-tree-lazy-example></nui-tree-lazy-example>\n</nui-example-wrapper>\n\n<h2>Tree with checkboxes</h2>\n<p>For handling state of checkboxes <a href=\"https://github.com/angular/components/blob/master/src/cdk/collections/selection-model.ts\">SelectionModel</a>\n   is used. You can easily grab all the selected items using <code>SelectionModel.selected</code> or subscribe to the changes\n   using <code>SelectionModel.changed</code>. Check one of the checkboxes to see it in action.\n   This example also shows how to implement \"indeterminate\" state of checkbox for branches.</p>\n<nui-example-wrapper filenamePrefix=\"checkbox\" exampleTitle=\"Checkbox\">\n    <nui-tree-checkbox-example></nui-tree-checkbox-example>\n</nui-example-wrapper>\n\n<h2>Tree with Checkboxes and Lazy Loading</h2>\n<p>\n    In case some selectable options are to be lazy loaded, it is possible to load additional selectable options asynchronously, while \n    still be able to track the selection properly. In the following example there are several places where some additional options are being loaded \n    on demand. Once triggered, if the parent selectable node is selected, all the lazy-loaded selectables will get selected once they're loaded.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"checkbox-lazy\" exampleTitle=\"Checkbox with Lazy Loading\">\n    <nui-tree-checkbox-lazy></nui-tree-checkbox-lazy>\n</nui-example-wrapper>\n\n<h2>Tree with Pagination on Leaf nodes</h2>\n<p>\n    If you have many items on leaf nodes, you might be interested in loading the data by parts.\n    You can use pagination as one of the options for such a purpose.\n</p>\n<p>\n    The example below shows how to do that.\n    In terms of this example, it's assumed that an API can return a necessary set of data for the node by it's identificator.\n    When you expand the node, it will load the first page and then will display a paginator.\n    At this point, on the first data fetch, an API should return a total amount of items to pass it to the paginator.\n</p>\n<p>\n    It's also recommended to use <code>nui-paginator</code> for handling the pagination.\n</p>\n<nui-example-wrapper filenamePrefix=\"leaf-pagination\" exampleTitle=\"Pagination on the leaf nodes\">\n    <nui-tree-leaf-pagination-example></nui-tree-leaf-pagination-example>\n</nui-example-wrapper>\n\n<h2>Tree With Additional Elements</h2>\n<p>To customize tree nodes, add any template. Below you see several typical cases with adding additional templates (menu, tag) into the tree.</p>\n\n<nui-example-wrapper filenamePrefix=\"with-additional-content\" exampleTitle=\"Tree With Additional Content\">\n    <nui-tree-with-additional-content-example></nui-tree-with-additional-content-example>\n</nui-example-wrapper>\n\n<h2>Tree Load More Nodes</h2>\n<p>The example below shows how to load data in portions using \"Load More\"</p>\n\n<nui-example-wrapper filenamePrefix=\"load-more\" exampleTitle=\"Tree Load More Nodes\">\n    <nui-tree-load-more-example></nui-tree-load-more-example>\n</nui-example-wrapper>\n\n<h2>Tree With show all in dialog</h2>\n<p>\n    It's possible the case when there're too many items on the leaf node. In this case, it's also possible to display all the items on the separate screen.\n    For example, inside the <code>nui-dialog</code>.\n\n</p>\n<p>\n    Current example uses Nova test BE service to get the data.\n    It can send the data by some portions for a certain criteria.\n    In this current example, there're 3 nodes that fetch the data per location, the service is implementing Nova\n    <code><a href=\"../injectables/DataSourceService.html\" target=\"_blank\">DataSourceService</a></code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"show-all-dialog\" exampleTitle=\"Tree With show all in dialog\">\n    <nui-tree-show-all-dialog-example></nui-tree-show-all-dialog-example>\n</nui-example-wrapper>\n","import { ArrayDataSource, SelectionModel } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\n\nimport {FoodNode, TREE_DATA_CHECKBOX} from \"../data\";\n\n@Component({\n  selector: \"nui-tree-checkbox-test\",\n  templateUrl: \"./tree-checkbox-test.component.html\",\n  styleUrls: [\"./tree-checkbox-test.component.less\"],\n  host: { id: \"nui-tree-checkbox-example\" },\n  animations: [expand],\n})\n\nexport class TreeCheckboxTestComponent {\n    public treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    public dataSource = new ArrayDataSource(TREE_DATA_CHECKBOX);\n    public selectionModel = new SelectionModel<FoodNode>(true);\n\n    public hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n\n    /** Whether all the descendants of the node are selected. */\n    public descendantsAllSelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        return descendants.length > 0 && descendants.every(child => this.selectionModel.isSelected(child));\n    }\n\n    /** Whether part of the descendants are selected */\n    public descendantsPartiallySelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some(child => this.selectionModel.isSelected(child));\n        return result && !this.descendantsAllSelected(node);\n    }\n\n    /** Toggle the branch selection. Select/deselect all the descendants node */\n    public branchItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.selectionModel.isSelected(node)\n            ? this.selectionModel.select(...descendants)\n            : this.selectionModel.deselect(...descendants);\n\n        // Force update for the parent\n        descendants.forEach(child => this.selectionModel.isSelected(child));\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Toggle a leaf item selection. Check all the parents to see if they changed */\n    public leafItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Checks all the parents when a leaf node is selected/unselected */\n    private checkAllParentsSelection(node: FoodNode): void {\n        let parent: FoodNode | undefined = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n\n    /** Check root node checked state and change it accordingly */\n    private checkRootNodeSelection(node: FoodNode): void {\n        const nodeSelected = this.selectionModel.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected = descendants.length > 0 && descendants.every(child => this.selectionModel.isSelected(child));\n        if (nodeSelected && !descAllSelected) {\n            this.selectionModel.deselect(node);\n        } else if (!nodeSelected && descAllSelected) {\n            this.selectionModel.select(node);\n        }\n    }\n\n    /** Get the parent node of a node */\n    private getParentNode(node: FoodNode): FoodNode | undefined {\n        let parent: FoodNode | undefined;\n\n        // Don't need to get parent if node on the 0 level\n        if (TREE_DATA_CHECKBOX.find(n => n === node)) {\n            return;\n        }\n\n        const search = (n: FoodNode): FoodNode | undefined => {\n            if (parent || !n.children) {\n                return;\n            }\n            if (n.children.find(i => i === node)) {\n                parent = n;\n                return;\n            }\n            return n.children.find(search);\n        };\n\n        // invoke search on the level 0 items\n        TREE_DATA_CHECKBOX.forEach(search);\n\n        if (!parent) {\n            throw new Error(\"Parent wasn't found\");\n        }\n\n        return parent;\n    }\n}\n","<div class=\"d-flex justify-content-between\">\n    <cdk-tree [@.disabled]=\"true\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" style=\"flex: 50%;\">\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n            <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n            <nui-checkbox class=\"leaf-control\"\n                          [checked]=\"selectionModel.isSelected(node)\"\n                          (valueChange)=\"leafItemSelectionToggle(node)\">{{node.name}}</nui-checkbox>\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n            <div class=\"nui-tree__header\" cdkTreeNodeToggle>\n                <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n                <nui-checkbox class=\"branch-control\"\n                              (click)=\"$event.stopPropagation()\"\n                              [checked]=\"descendantsAllSelected(node)\"\n                              [indeterminate]=\"descendantsPartiallySelected(node)\"\n                              (valueChange)=\"branchItemSelectionToggle(node)\">{{node.item}}</nui-checkbox>\n                <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n            </div>\n            <div class=\"nui-tree__body\"\n                 [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n                 [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</div>\n","import { ArrayDataSource, SelectionModel } from \"@angular/cdk/collections\";\nimport { CdkNestedTreeNode, CdkTree, NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component, Injectable, IterableDiffer, IterableDiffers, ViewChild } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\ninterface ServerNode {\n    name: string;\n    children?: ServerNode[];\n    length?: number;\n    isLoading?: boolean;\n}\n\nconst TREE_DATA: ServerNode[] = [\n    {\n        name: \"Servers\",\n        children: [],\n        length: 3,\n        isLoading: false,\n    },\n];\n\n@Injectable()\nexport class HttpMock {\n    get(): Observable<ServerNode[]> {\n        const res = {\n            servers: [\n                {\n                    name: \"Microsoft Server\",\n                    children: [],\n                    length: 3,\n                    load: \"ms-servers\",\n                },\n                {\n                    name: \"Apache Tomcat\",\n                    children: [\n                        {name: \"Version 1\"},\n                        {\n                            name: \"Version 2\",\n                            children: [],\n                            load: \"apache-version-2\",\n                            length: 3,\n                        },\n                        {name: \"Version 3\"},\n                    ],\n                    length: 3,\n                    isLoading: false,\n                },\n                {name: \"nginx\"},\n            ],\n            \"apache-version-2\": [\n                {name: \"1.0.5\"},\n                {name: \"2.1.4\"},\n                {name: \"8.9.0\"},\n            ],\n            \"ms-servers\": [\n                {name: \"2019\"},\n                {name: \"2017\"},\n                {name: \"2013\"},\n            ],\n\n        };\n        return of(res as any).pipe(delay(3000));\n    }\n}\n\n\n@Component({\n  selector: \"nui-tree-checkbox-lazy\",\n  templateUrl: \"./tree-checkbox-lazy.component.html\",\n  styleUrls: [\"./tree-checkbox-lazy.component.less\"],\n  animations: [expand],\n  providers: [HttpMock],\n})\nexport class TreeCheckboxLazyComponent {\n\n    public selectionModel = new SelectionModel<ServerNode>(true);\n    treeControl = new NestedTreeControl<ServerNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<ServerNode>;\n\n    hasChild = (_: number, node: ServerNode) => node.length;\n\n    constructor(private http: HttpMock,\n                private differ: IterableDiffers) {\n    }\n\n    loadMore(node: any, nestedNode: CdkNestedTreeNode<any>): void {\n        const differ: IterableDiffer<ServerNode> = this.differ.find(node.children).create();\n\n        if (node.children?.length === node.length || node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        this.http.get().subscribe((res: any) => {\n            node.isLoading = false;\n            node?.load ? node.children = res[node?.load] : node.children = res.servers;\n            this.cdkTree.renderNodeChanges(node.children, differ, nestedNode.nodeOutlet.first.viewContainer, node);\n        });\n    }\n\n        public descendantsAllSelected(node: ServerNode): boolean {\n            const descendants = this.treeControl.getDescendants(node);\n            return descendants.length > 0 && descendants.every(child => this.selectionModel.isSelected(child));\n        }\n\n        public descendantsPartiallySelected(node: ServerNode): boolean {\n            const descendants = this.treeControl.getDescendants(node);\n            const result = descendants.some(child => this.selectionModel.isSelected(child));\n            return result && !this.descendantsAllSelected(node);\n        }\n\n        public branchItemSelectionToggle(node: ServerNode): void {\n            this.selectionModel.toggle(node);\n            const descendants = this.treeControl.getDescendants(node);\n            this.selectionModel.isSelected(node)\n                ? this.selectionModel.select(...descendants)\n                : this.selectionModel.deselect(...descendants);\n\n            descendants.forEach(child => {\n                this.selectionModel.isSelected(child);\n            });\n            this.checkAllParentsSelection(node);\n        }\n\n        public leafItemSelectionToggle(node: ServerNode): void {\n            this.selectionModel.toggle(node);\n            this.checkAllParentsSelection(node);\n        }\n\n        public isParentNodeCheckedOn(node: ServerNode) {\n            if (this.selectionModel.isSelected(<ServerNode>this.getParentNode(node))) {\n                this.selectionModel.select(node);\n            }\n            return this.selectionModel.isSelected(node);\n        }\n\n        private checkAllParentsSelection(node: ServerNode): void {\n            let parent: ServerNode | undefined = this.getParentNode(node);\n            while (parent) {\n                this.checkRootNodeSelection(parent);\n                parent = this.getParentNode(parent);\n            }\n        }\n\n        private checkRootNodeSelection(node: ServerNode): void {\n            const nodeSelected = this.selectionModel.isSelected(node);\n            const descendants = this.treeControl.getDescendants(node);\n            const descAllSelected = descendants.length > 0 && descendants.every(child => this.selectionModel.isSelected(child));\n            if (nodeSelected && !descAllSelected) {\n                this.selectionModel.deselect(node);\n            } else if (!nodeSelected && descAllSelected) {\n                this.selectionModel.select(node);\n            }\n        }\n\n        private getParentNode(node: ServerNode): ServerNode | undefined {\n            let parent: ServerNode | undefined;\n\n            if (TREE_DATA.find(n => n === node)) {\n                return;\n            }\n\n            const search = (n: ServerNode): ServerNode | undefined => {\n                if (parent || !n.children) {\n                    return;\n                }\n                if (n.children.find(i => i === node)) {\n                    parent = n;\n                    return;\n                }\n                return n.children.find(search);\n            };\n\n            TREE_DATA.forEach(search);\n\n            if (!parent) {\n                throw new Error(\"Parent wasn't found\");\n            }\n\n            return parent;\n        }\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        <nui-checkbox class=\"leaf-control\"\n                      [checked]=\"isParentNodeCheckedOn(node)\"\n                      (valueChange)=\"leafItemSelectionToggle(node)\">{{node.name}}</nui-checkbox>\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node #nestedNode=cdkNestedTreeNode *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\" cdkTreeNodeToggle (click)=\"loadMore(node, nestedNode)\">\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <nui-checkbox class=\"branch-control\"\n                          (click)=\"$event.stopPropagation()\"\n                          [checked]=\"descendantsAllSelected(node) || isParentNodeCheckedOn(node)\"\n                          [indeterminate]=\"descendantsPartiallySelected(node)\"\n                          (valueChange)=\"branchItemSelectionToggle(node)\">\n\n                          <span class=\"nui-tree__header-title\">{{ node.name }} ({{ node.length }})</span>\n            </nui-checkbox>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n            <nui-spinner *ngIf=\"node.isLoading\" [show]=\"node.isLoading\" [delay]=\"0\"></nui-spinner>\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"nui-tree-visual-test\",\n  templateUrl: \"./tree-visual-test.component.html\",\n})\n\nexport class TreeVisualTestComponent {}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <nui-tree-basic-test></nui-tree-basic-test>\n        </div>\n        <div class=\"col\">\n            <nui-tree-checkbox-test></nui-tree-checkbox-test>\n        </div>\n        <div class=\"col\">\n            <nui-tree-paginator-test></nui-tree-paginator-test>\n        </div>\n    </div>\n</div>\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { CdkNestedTreeNode, CdkTree, NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component, IterableDiffer, IterableDiffers, ViewChild } from \"@angular/core\";\nimport { EventBusService, expand } from \"@nova-ui/bits\";\n\nimport {FoodNode, HttpMock, IApiResponse, TREE_DATA_PAGINATOR} from \"../data\";\n\n@Component({\n  selector: \"nui-tree-paginator-test\",\n  templateUrl: \"./tree-paginator-test.component.html\",\n  styleUrls: [\"./tree-paginator-test.component.less\"],\n  host: { id: \"nui-tree-paginator-example\" },\n  animations: [expand],\n  providers: [HttpMock],\n})\nexport class TreePaginatorTestComponent {\n\n    public pageSize = 10; // used for 'nui-paginator'\n    public nodesTotalItems: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    public dataSource = new ArrayDataSource(TREE_DATA_PAGINATOR);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode) => node.children;\n\n    constructor(private http: HttpMock,\n                private differ: IterableDiffers,\n                private eventBusService: EventBusService) {\n    }\n\n    /** Load first page on first open */\n    public onToggleClick(node: FoodNode, nestedNode: CdkNestedTreeNode<any>) {\n        this.eventBusService.getStream({id: \"document-click\"}).next();\n\n        if (node.hasPagination && node.children && !node.children.length) {\n            const paginatorOptions = {\n                page: 1,\n                pageSize: this.pageSize,\n            };\n\n            this.loadNodeItems(node, nestedNode, paginatorOptions);\n        }\n    }\n\n    public loadNodeItems(node: FoodNode, nestedNodeDirective: CdkNestedTreeNode<any>, paginatorOptions: any): void {\n        if (node.isLoading) { return; }\n\n        node.isLoading = true;\n\n        this.http.getNodeItems(node.name, paginatorOptions.page, paginatorOptions.pageSize).subscribe((res: IApiResponse) => {\n            this.handleNodeTotalItems(node.name, res.total);\n            this.handleNodeContent(node, nestedNodeDirective, res.items);\n            node.isLoading = false;\n        });\n    }\n\n    private handleNodeTotalItems(nodeId: string, totalItems: number) {\n        this.nodesTotalItems[nodeId] = totalItems;\n    }\n\n    private handleNodeContent(node: FoodNode, nestedNodeDirective: CdkNestedTreeNode<any>, items: FoodNode[]) {\n        node.children = [];\n        const differ: IterableDiffer<FoodNode> = this.differ.find(node.children).create();\n        node.children = items;\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(node.children, differ, nestedNodeDirective.nodeOutlet.first.viewContainer, node);\n    }\n\n}\n","<cdk-tree [@.disabled]=\"true\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        {{node.name}}, fromPage: {{node.page}}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node #nestedNode=cdkNestedTreeNode *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\"\n            (click)=\"onToggleClick(node, nestedNode)\"\n            cdkTreeNodeToggle>\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n\n            <div nui-busy [busy]=\"node.isLoading\" style=\"min-height: 20px;\" (click)=\"$event.stopPropagation()\">\n                <ng-container cdkTreeNodeOutlet ></ng-container>\n                <nui-paginator *ngIf=\"node.hasPagination && nodesTotalItems[node.name]\"\n                    [id]=\"'nui-tree-paginator-component-' + node.name.toLowerCase()\"\n                    [page]=\"1\"\n                    [pageSize]=\"pageSize\"\n                    (pagerAction)=\"loadNodeItems(node, nestedNode, $event)\"\n                    [total]=\"nodesTotalItems[node.name]\">\n                </nui-paginator>\n            </div>\n\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","import {Injectable} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\nimport {delay} from \"rxjs/operators\";\n\nexport interface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\nexport interface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\n@Injectable()\nexport class HttpMock {\n    private fruitsList = [\n        $localize `apple`,\n        $localize `orange`,\n        $localize `banana`,\n        $localize `watermelon`,\n        $localize `peach`,\n        $localize `pineapple`,\n        $localize `lemon`,\n        $localize `mango`,\n    ];\n    private vegetablesList = [\n        $localize `tomato`,\n        $localize `cucumber`,\n        $localize `cabbage`,\n        $localize `pepper`,\n        $localize `carrot`,\n        $localize `onion`,\n        $localize `broccoli`,\n        $localize `corn`,\n    ];\n\n    private totalItems = 1337;\n\n    getNodeItems(nodeId: string, page: number, pageSize: number): Observable<IApiResponse> {\n        // nodeId can be handled on API depending on app needs\n        const itemList = nodeId === \"Vegetables\"\n            ? this.vegetablesList\n            : this.fruitsList;\n\n        const items: FoodNode[] = Array.from({ length: pageSize }).map(() => ({\n            name: this.getRandomFrom(itemList),\n            page,\n        }));\n\n        const response = {\n            items,\n            total: this.totalItems,\n        };\n        return of(response).pipe(delay(1000));\n    }\n\n    private getRandomFrom(list: any[]) {\n        return list[Math.floor(Math.random() * list.length)];\n    }\n}\n\n\nexport const TREE_DATA_PAGINATOR: FoodNode[] = [\n    {\n        name: \"Food\",\n        children: [\n            {\n                name: \"Vegetables\",\n                children: [],\n                hasPagination: true,\n            },\n            {\n                name: \"Fruits\",\n                children: [],\n                hasPagination: true,\n            },\n        ],\n    },\n\n];\n\nexport const TREE_DATA: FoodNode[] = [\n    {\n        name: \"Fruit\",\n        children: [\n            { name: \"Apple\" },\n            { name: \"Banana\" },\n            { name: \"Fruit loops\" },\n        ],\n    },\n    {\n        name: \"Vegetables\",\n        children: [\n            {\n                name: \"Green\",\n                children: [{ name: \"Broccoli\" }, { name: \"Brussels sprouts\" }],\n            },\n            {\n                name: \"Orange\",\n                children: [{ name: \"Pumpkins\" }, { name: \"Carrots\" }],\n            },\n            {\n                name: \"Red\",\n            },\n        ],\n    },\n    {\n        name: \"Meat\",\n    },\n];\n\nexport const TREE_DATA_CHECKBOX: FoodNode[] = [\n    {\n        name: \"Vegetables\",\n        children: [\n            {\n                name: \"Green\",\n                children: [{ name: \"Broccoli\" }, { name: \"Brussels sprouts\" }],\n            },\n            {\n                name: \"Orange\",\n                children: [{ name: \"Pumpkins\" }, { name: \"Carrots\" }],\n            },\n            {\n                name: \"Red\",\n            },\n        ],\n    },\n    {\n        name: \"Fruit\",\n        children: [\n            { name: \"Apple\" },\n            { name: \"Banana\" },\n            { name: \"Fruit loops\" },\n        ],\n    },\n    {\n        name: \"Meat\",\n    },\n];\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\n\n\ninterface FoodNode {\n    name: string;\n    textStyle?: string;\n    icon?: string;\n    children?: FoodNode[];\n}\n\nenum TextStyle {\n    DEFAULT = \"nui-text-default\",\n    SECONDARY = \"nui-text-secondary\",\n    LABEL = \"nui-text-label\",\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Custom Icons\",\n        textStyle: \"default\",\n        icon: \"email\",\n        children: [\n            { name: \"Apple\", icon: \"move-down\" },\n            { name: \"Carambola\", icon: \"add\" },\n            { name: \"Grapefruit\", icon: \"schedule\" },\n        ],\n    },\n    {\n        name: \"Custom Text Styles\",\n        textStyle: TextStyle.SECONDARY,\n        children: [\n            {\n                name: \"Green\",\n                textStyle: TextStyle.DEFAULT,\n                children: [\n                    { name: \"Broccoli\", textStyle: TextStyle.LABEL },\n                    { name: \"Brussels sprouts\", textStyle: TextStyle.SECONDARY },\n                ],\n            },\n            {\n                name: \"Orange\",\n                children: [\n                    { name: \"Pumpkins\" },\n                    { name: \"Carrots\", textStyle: TextStyle.SECONDARY },\n                ],\n            },\n            { name: \"Red\", textStyle: TextStyle.LABEL },\n        ],\n    },\n];\n\n\n@Component({\n    selector: \"nui-tree-styling-example\",\n    templateUrl: \"tree-styling.example.component.html\",\n    styleUrls: [\"tree-styling.example.component.less\"],\n    animations: [expand],\n})\n\nexport class TreeStylingExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n    textStyles: typeof TextStyle = TextStyle;\n\n    hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        <nui-icon class=\"nui-tree__icon\" *ngIf=\"node.icon\" [icon]=\"node.icon\"></nui-icon>\n        <span class=\"{{node.textStyle || textStyles.DEFAULT}}\">{{node.name}}</span>\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\" cdkTreeNodeToggle>\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <nui-icon class=\"nui-tree__icon\" *ngIf=\"node.icon\" [icon]=\"node.icon\"></nui-icon>\n            <span i18n class=\"nui-tree__header-title {{node.textStyle || textStyles.LABEL}}\">{{ node.name }}</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","var map = {\n\t\"./http-mock.service.ts\": \"aGgG\",\n\t\"./index.ts\": \"SMDe\",\n\t\"./tree-basic/tree-basic.example.component.html\": \"G8qU\",\n\t\"./tree-basic/tree-basic.example.component.less\": \"fsYv\",\n\t\"./tree-basic/tree-basic.example.component.ts\": \"qflF\",\n\t\"./tree-checkbox-lazy/tree-checkbox-lazy.component.html\": \"wGmj\",\n\t\"./tree-checkbox-lazy/tree-checkbox-lazy.component.less\": \"xPtD\",\n\t\"./tree-checkbox-lazy/tree-checkbox-lazy.component.ts\": \"J12e\",\n\t\"./tree-checkbox/tree-checkbox.example.component.html\": \"BU2E\",\n\t\"./tree-checkbox/tree-checkbox.example.component.less\": \"OPUk\",\n\t\"./tree-checkbox/tree-checkbox.example.component.ts\": \"aH8u\",\n\t\"./tree-docs/tree-docs.example.component.html\": \"5XLM\",\n\t\"./tree-docs/tree-docs.example.component.ts\": \"c4wz\",\n\t\"./tree-lazy/tree-lazy.component.example.less\": \"u/ue\",\n\t\"./tree-lazy/tree-lazy.example.component.html\": \"0pxp\",\n\t\"./tree-lazy/tree-lazy.example.component.ts\": \"L9Zh\",\n\t\"./tree-leaf-pagination/tree-leaf-pagination.component.example.less\": \"8NeV\",\n\t\"./tree-leaf-pagination/tree-leaf-pagination.example.component.html\": \"bE6u\",\n\t\"./tree-leaf-pagination/tree-leaf-pagination.example.component.ts\": \"3M5X\",\n\t\"./tree-load-more/tree-load-more.component.example.less\": \"dER6\",\n\t\"./tree-load-more/tree-load-more.example.component.html\": \"4odw\",\n\t\"./tree-load-more/tree-load-more.example.component.ts\": \"4zoD\",\n\t\"./tree-show-all-dialog/tree-show-all-dialog.component.example.less\": \"f+jd\",\n\t\"./tree-show-all-dialog/tree-show-all-dialog.example.component.html\": \"ik8z\",\n\t\"./tree-show-all-dialog/tree-show-all-dialog.example.component.ts\": \"0q3D\",\n\t\"./tree-styling/tree-styling.example.component.html\": \"DY+K\",\n\t\"./tree-styling/tree-styling.example.component.less\": \"irwK\",\n\t\"./tree-styling/tree-styling.example.component.ts\": \"Je5P\",\n\t\"./tree-visual-test/data.ts\": \"Gh8Q\",\n\t\"./tree-visual-test/tree-basic-test/tree-basic-test.component.html\": \"scDb\",\n\t\"./tree-visual-test/tree-basic-test/tree-basic-test.component.less\": \"lzqP\",\n\t\"./tree-visual-test/tree-basic-test/tree-basic-test.component.ts\": \"Hzex\",\n\t\"./tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.html\": \"qw8G\",\n\t\"./tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.less\": \"f1Ap\",\n\t\"./tree-visual-test/tree-checkbox-test/tree-checkbox-test.component.ts\": \"TOWG\",\n\t\"./tree-visual-test/tree-paginator-test/tree-paginator-test.component.html\": \"objm\",\n\t\"./tree-visual-test/tree-paginator-test/tree-paginator-test.component.less\": \"kio+\",\n\t\"./tree-visual-test/tree-paginator-test/tree-paginator-test.component.ts\": \"vKNe\",\n\t\"./tree-visual-test/tree-visual-test.component.html\": \"c751\",\n\t\"./tree-visual-test/tree-visual-test.component.ts\": \"Vx+0\",\n\t\"./tree-with-additional-content/tree-with-additional-content.example.component.html\": \"h/rE\",\n\t\"./tree-with-additional-content/tree-with-additional-content.example.component.less\": \"dMrx\",\n\t\"./tree-with-additional-content/tree-with-additional-content.example.component.ts\": \"ulVr\",\n\t\"./tree.module.ts\": \"7IbH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"ItIQ\";","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { CdkNestedTreeNode, CdkTree, NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component, IterableDiffer, IterableDiffers, ViewChild } from \"@angular/core\";\nimport { EventBusService, expand } from \"@nova-ui/bits\";\n\nimport { HttpMockService } from \"../http-mock.service\";\n\ninterface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\ninterface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Food\",\n        children: [\n            {\n                name: \"Vegetables\",\n                children: [],\n                page: 1,\n                hasPagination: true,\n            },\n            {\n                name: \"Fruits\",\n                children: [],\n                page: 1,\n                hasPagination: true,\n            },\n        ],\n    },\n\n];\n\n@Component({\n    selector: \"nui-tree-load-more-example\",\n    templateUrl: \"./tree-load-more.example.component.html\",\n    styleUrls: [\"./tree-load-more.component.example.less\"],\n    animations: [expand],\n    providers: [HttpMockService],\n})\n\nexport class TreeLoadMoreExampleComponent {\n    public pageSize = 10;\n    public remainingItemsCount: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    public dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode) => node.children;\n\n    constructor(private http: HttpMockService,\n                private differ: IterableDiffers,\n                private eventBusService: EventBusService) {\n    }\n\n    /** Load first page on first open */\n    public onToggleClick(node: FoodNode, nestedNode: CdkNestedTreeNode<any>) {\n        this.eventBusService.getStream({id: \"document-click\"}).next(new MouseEvent(\"click\"));\n\n        if (node.hasPagination && node.children && !node.children.length) {\n            node.page = 1;\n            this.loadMoreItems(node, nestedNode);\n        }\n    }\n\n    public loadMoreItems(node: FoodNode, nestedNodeDirective: CdkNestedTreeNode<any>): void {\n        if (node.isLoading) { return; }\n\n        node.isLoading = true;\n\n        const page = node.page ? node.page++ : 1;\n\n        this.http.getNodeItems(node.name, page, this.pageSize).subscribe((res: IApiResponse) => {\n            this.setRemainingItemsCount(node, res.total);\n            this.handleNodeContent(node, nestedNodeDirective, res.items);\n            node.isLoading = false;\n        });\n    }\n\n    private setRemainingItemsCount(node: FoodNode, totalItems: number) {\n        this.remainingItemsCount[node.name] = node.children ? totalItems - node.children?.length : totalItems;\n    }\n\n    private handleNodeContent(node: FoodNode, nestedNodeDirective: CdkNestedTreeNode<any>, items: FoodNode[]) {\n        const differ: IterableDiffer<FoodNode> = this.differ.find(node.children).create();\n        node.children?.push(...items);\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(node.children || [], differ, nestedNodeDirective.nodeOutlet.first.viewContainer, node);\n    }\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        {{node.name}}, fromPage: {{node.page}}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node #nestedNode=cdkNestedTreeNode *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\"\n            (click)=\"onToggleClick(node, nestedNode)\"\n            cdkTreeNodeToggle>\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n            <ng-container cdkTreeNodeOutlet ></ng-container>\n            <div *ngIf=\"node.hasPagination\">\n                <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n                <a *ngIf=\"!node.isLoading\" (click)=\"loadMoreItems(node, nestedNode)\">Load another {{pageSize}} (of {{remainingItemsCount[node.name]}})</a>\n                <nui-spinner *ngIf=\"node.isLoading\" [show]=\"node.isLoading\" [delay]=\"0\"></nui-spinner>\n            </div>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\n\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Fruit\",\n        children: [\n            { name: \"Apple\" },\n            { name: \"Banana\" },\n            { name: \"Fruit loops\" },\n        ],\n    },\n    {\n        name: \"Vegetables\",\n        children: [\n            {\n                name: \"Green\",\n                children: [{ name: \"Broccoli\" }, { name: \"Brussels sprouts\" }],\n            },\n            {\n                name: \"Orange\",\n                children: [{ name: \"Pumpkins\" }, { name: \"Carrots\" }],\n            },\n            {\n                name: \"Red\",\n            },\n        ],\n    },\n    {\n        name: \"Meat\",\n    },\n];\n\n\n@Component({\n    selector: \"nui-tree-basic-example\",\n    templateUrl: \"tree-basic.example.component.html\",\n    styleUrls: [\"tree-basic.example.component.less\"],\n    host: { id: \"nui-tree-basic-example\" },\n    animations: [expand],\n})\nexport class TreeBasicExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        {{node.name}}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\" cdkTreeNodeToggle>\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","export * from \"./tree-basic/tree-basic.example.component\";\nexport * from \"./tree-styling/tree-styling.example.component\";\nexport * from \"./tree-lazy/tree-lazy.example.component\";\nexport * from \"./tree-checkbox/tree-checkbox.example.component\";\nexport * from \"./tree-docs/tree-docs.example.component\";\nexport * from \"./tree-visual-test/tree-visual-test.component\";\nexport * from \"./tree-leaf-pagination/tree-leaf-pagination.example.component\";\nexport * from \"./tree-with-additional-content/tree-with-additional-content.example.component\";\nexport * from \"./tree-show-all-dialog/tree-show-all-dialog.example.component\";\nexport * from \"./tree-load-more/tree-load-more.example.component\";\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { CdkNestedTreeNode, CdkTree, NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component, IterableDiffer, IterableDiffers, ViewChild } from \"@angular/core\";\nimport { EventBusService, expand } from \"@nova-ui/bits\";\n\nimport { HttpMockService } from \"../http-mock.service\";\n\ninterface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\ninterface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Food\",\n        children: [\n            {\n                name: \"Vegetables\",\n                children: [],\n                hasPagination: true,\n            },\n            {\n                name: \"Fruits\",\n                children: [],\n                hasPagination: true,\n            },\n        ],\n    },\n\n];\n\n@Component({\n    selector: \"nui-tree-leaf-pagination-example\",\n    templateUrl: \"./tree-leaf-pagination.example.component.html\",\n    styleUrls: [\"./tree-leaf-pagination.component.example.less\"],\n    animations: [expand],\n    providers: [HttpMockService],\n})\n\nexport class TreeLeafPaginationExampleComponent {\n    public pageSize = 25; // used for 'nui-paginator'\n    public nodesTotalItems: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    public dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode) => node.children;\n\n    constructor(private http: HttpMockService,\n                private differ: IterableDiffers,\n                private eventBusService: EventBusService) {\n    }\n\n    /** Load first page on first open */\n    public onToggleClick(node: FoodNode, nestedNode: CdkNestedTreeNode<any>) {\n        this.eventBusService.getStream({id: \"document-click\"}).next(new MouseEvent(\"click\"));\n\n        if (node.hasPagination && node.children && !node.children.length) {\n            const paginatorOptions = {\n                page: 1,\n                pageSize: this.pageSize,\n            };\n\n            this.loadNodeItems(node, nestedNode, paginatorOptions);\n        }\n    }\n\n    public loadNodeItems(node: FoodNode, nestedNodeDirective: CdkNestedTreeNode<any>, paginatorOptions: any): void {\n        if (node.isLoading) { return; }\n\n        node.isLoading = true;\n\n        this.http.getNodeItems(node.name, paginatorOptions.page, paginatorOptions.pageSize).subscribe((res: IApiResponse) => {\n            this.handleNodeTotalItems(node.name, res.total);\n            this.handleNodeContent(node, nestedNodeDirective, res.items);\n            node.isLoading = false;\n        });\n    }\n\n    private handleNodeTotalItems(nodeId: string, totalItems: number) {\n        this.nodesTotalItems[nodeId] = totalItems;\n    }\n\n    private handleNodeContent(node: FoodNode, nestedNodeDirective: CdkNestedTreeNode<any>, items: FoodNode[]) {\n        node.children = [];\n        const differ: IterableDiffer<FoodNode> = this.differ.find(node.children).create();\n        node.children = items;\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(node.children, differ, nestedNodeDirective.nodeOutlet.first.viewContainer, node);\n    }\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        {{node.name}}, fromPage: {{node.page}}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node #nestedNode=cdkNestedTreeNode *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\"\n            (click)=\"onToggleClick(node, nestedNode)\"\n            cdkTreeNodeToggle>\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n\n            <div nui-busy [busy]=\"node.isLoading\" style=\"min-height: 20px;\">\n                <ng-container cdkTreeNodeOutlet ></ng-container>\n                <nui-paginator *ngIf=\"node.hasPagination && nodesTotalItems[node.name]\"\n                    [page]=\"1\"\n                    [pageSize]=\"pageSize\"\n                    (pagerAction)=\"loadNodeItems(node, nestedNode, $event)\"\n                    [total]=\"nodesTotalItems[node.name]\">\n                </nui-paginator>\n            </div>\n\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","<div style=\"max-width: 600px;\">\n    <cdk-tree class=\"nui-tree\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n            <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n            <div class=\"d-flex justify-content-between w-100\"><span>Node: {{node.name}}</span> <span> Status: {{node.status}}</span> </div>\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node #nestedNode=cdkNestedTreeNode *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree__branch\">\n            <div class=\"nui-tree__header\"\n                (click)=\"onToggleClick(node, nestedNode)\"\n                cdkTreeNodeToggle>\n                <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n                <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n            </div>\n            <div class=\"nui-tree__body\"\n                 [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n                 [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n\n                <div nui-busy [busy]=\"node.isLoading\" style=\"min-height: 20px;\">\n                    <ng-container cdkTreeNodeOutlet ></ng-container>\n                    <a *ngIf=\"node.hasChildren && nodesTotalItems[node.name]\"\n                        class=\"nui-tree__show-all\"\n                        (click)=\"showAll(node)\">Show All ({{nodesTotalItems[node.name]}})</a>\n                </div>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</div>\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { CdkNestedTreeNode, CdkTree, NestedTreeControl } from \"@angular/cdk/tree\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Injectable,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    OnDestroy,\n    ViewChild\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    DialogService,\n    EventBusService,\n    expand,\n    IDataSource,\n    IFilter,\n    INovaFilteringOutputs,\n    INovaFilters,\n    IRepeatItemConfig,\n    LoggerService,\n    nameof,\n    NuiActiveDialog,\n    NuiDialogRef,\n    RepeatComponent,\n    VirtualViewportManager\n} from \"@nova-ui/bits\";\nimport isEqual from \"lodash/isEqual\";\nimport isNil from \"lodash/isNil\";\nimport { Observable, of, Subject } from \"rxjs\";\nimport { catchError, delay, map, take, takeUntil, tap } from \"rxjs/operators\";\n\ninterface IServerNode extends Partial<IServer> {\n    name: string;\n    hasChildren?: boolean;\n    isLoading?: boolean;\n    children?: IServerNode[];\n}\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\nconst TREE_DATA: IServerNode[] = [\n    {\n        name: \"Nodes\",\n        hasChildren: true,\n        children: [\n            {\n                name: \"Brno\",\n                hasChildren: true,\n                children: [],\n            },\n            {\n                name: \"Austin\",\n                hasChildren: true,\n                children: [],\n            },\n            {\n                name: \"Kyiv\",\n                hasChildren: true,\n                children: [],\n            },\n        ],\n    },\n];\n\nconst RESULTS_PER_PAGE = 25;\n\nexport const API_URL = \"https://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class VirtualScrollListDataSource<T = any> extends DataSourceService<T> implements IDataSource {\n    // cache used to store our previous fetched results while scrolling\n    // and more data is automatically fetched from the backend\n    private cache = Array.from<IServer>({ length: 0 });\n    private previousFilters: INovaFilters;\n\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    public async getFilteredData(filters: INovaFilters): Promise<INovaFilteringOutputs> {\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const reset = this.filtersChanged(filters,\n            nameof<IServerFilters>(\"status\"),\n            nameof<IServerFilters>(\"location\"),\n            nameof<IServerFilters>(\"search\"),\n            nameof<IServerFilters>(\"sorter\")\n        );\n\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.cache = [];\n        }\n        return this.getBackendData(filters).pipe(\n            tap((response: IServersCollection) => {\n                // after receiving data we need to append it to our previous fetched results\n                this.cache = this.cache.concat(response.items);\n            }),\n            map((response: IServersCollection) => {\n                const itemsSource = this.cache;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    public reset() {\n        this.cache = [];\n    }\n\n    // build query params specific to our backend API\n    private getRequestParams(filters: INovaFilters): HttpParams {\n        const paging = filters.virtualScroll?.value ?? { start: 0, end: 0 };\n        const params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / RESULTS_PER_PAGE).toString())\n            // specify the maximum number of items we need to fetch for each request\n            .set(\n                \"pageSize\",\n                String(\n                    RESULTS_PER_PAGE\n                )\n            )\n            .set(\"searchField\", \"location\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        return params;\n    }\n\n    private getBackendData(filters: INovaFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = this.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, { params: requestParams })\n            .pipe(\n                delay(300),\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n\n    }\n\n    // checks if any of the filters specified by name have changed from the previous evaluation\n    public filtersChanged(filters: INovaFilters, ...filterNames: string[]) {\n        for (let i = 0; i < filterNames.length; i++) {\n            const filterName = filterNames[i];\n            const filter = filters[filterName];\n            if (!isNil(filter?.value) && this.previousFilters\n                && !isEqual(filter?.value, this.previousFilters[filterName]?.value)) {\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\n@Component({\n    selector: \"nui-tree-show-all-dialog-example\",\n    templateUrl: \"./tree-show-all-dialog.example.component.html\",\n    styleUrls: [\"./tree-show-all-dialog.component.example.less\"],\n    animations: [expand],\n    providers: [VirtualScrollListDataSource],\n})\nexport class TreeShowAllDialogExampleComponent implements OnDestroy {\n    private activeDialogRef: NuiDialogRef;\n    private get activeDialogComponent(): TreeDialogContentExampleComponent {\n        return this.activeDialogRef.componentInstance;\n    }\n    private destroy$ = new Subject();\n    @ViewChild(CdkTree) private cdkTree: CdkTree<IServerNode>;\n\n    public nodesTotalItems: { [key: string]: number } = {};\n\n    public treeControl = new NestedTreeControl<IServerNode>((node) => node.children);\n    public dataSource = new ArrayDataSource(TREE_DATA);\n\n    public hasChild = (_: number, node: IServerNode) => node.children;\n\n    constructor(\n        private virtualScrollListDataSource: VirtualScrollListDataSource,\n        private differ: IterableDiffers,\n        private eventBusService: EventBusService,\n        private dialogService: DialogService\n    ) {\n    }\n\n    public showAll(node: IServerNode) {\n        // setup the Dialog\n        this.activeDialogRef = this.dialogService.open(TreeDialogContentExampleComponent, { size: \"sm\" });\n        // pass the inputs to the context component\n        this.activeDialogComponent.items = [];\n        this.activeDialogComponent.isLoading = true;\n        this.activeDialogComponent.cdRef.detectChanges();\n\n        // Set location search criteria\n        this.setDsSearchFieldFor(node);\n        this.subscribeToDialogScrolling();\n\n        this.activeDialogRef.closed$.subscribe(() => {\n            this.virtualScrollListDataSource.deregisterComponent(\"virtualScroll\");\n            this.virtualScrollListDataSource.deregisterComponent(\"search\");\n            this.virtualScrollListDataSource.reset();\n        });\n    }\n\n    /**\n     * Register the viewport container to the DataSource\n     */\n    private subscribeToDialogScrolling() {\n        // 'setTimeout' to wait until the dialog is rendered\n        setTimeout(() => {\n            const viewPortManager = this.activeDialogComponent.viewPortManager;\n\n            this.virtualScrollListDataSource.registerComponent({\n                virtualScroll: { componentInstance: viewPortManager },\n            });\n\n            viewPortManager.observeNextPage$({ pageSize: RESULTS_PER_PAGE })\n                .pipe(\n                    tap(() => {\n                        this.virtualScrollListDataSource.applyFilters();\n                        this.virtualScrollListDataSource.outputsSubject\n                            .subscribe((v: any) => {\n                                if (!this.activeDialogComponent) { return; } // in case dialog was closed early\n                                const items = v.repeat.itemsSource as IServer[];\n                                this.activeDialogComponent.items = items;\n                                this.activeDialogComponent.isLoading = false;\n                                this.activeDialogComponent.cdRef.detectChanges();\n                            });\n                    }),\n                    takeUntil(this.destroy$)\n                ).subscribe();\n        });\n    }\n\n    /** Load first page on first open */\n    public onToggleClick(node: IServerNode, nestedNode: CdkNestedTreeNode<any>) {\n        this.eventBusService.getStream({id: \"document-click\"}).next();\n\n        if (node.hasChildren && node.children && !node.children.length) {\n            node.isLoading = true;\n            this.setDsSearchFieldFor(node);\n            this.virtualScrollListDataSource.applyFilters();\n            this.virtualScrollListDataSource.outputsSubject\n                .pipe(take(1))\n                .subscribe((v: any) => {\n                    const items = v.repeat.itemsSource as IServer[];\n\n                    this.handleNodeTotalItems(node.name, v.paginator.total);\n                    this.handleNodeContent(node, nestedNode, items);\n                    node.isLoading = false;\n                    this.virtualScrollListDataSource.deregisterComponent(\"search\");\n                });\n        }\n    }\n\n    private handleNodeTotalItems(nodeId: string, totalItems: number) {\n        this.nodesTotalItems[nodeId] = totalItems;\n    }\n\n    private handleNodeContent(node: IServerNode, nestedNodeDirective: CdkNestedTreeNode<any>, items: IServerNode[]) {\n        node.children = [];\n        const differ: IterableDiffer<IServerNode> = this.differ.find(node.children).create();\n        node.children = items;\n\n        // clear previously rendered leaf nodes\n        nestedNodeDirective.nodeOutlet.first.viewContainer.clear();\n        this.cdkTree.renderNodeChanges(node.children, differ, nestedNodeDirective.nodeOutlet.first.viewContainer, node);\n    }\n\n    /** Register node name as a search to get nodes of one location */\n    private setDsSearchFieldFor(node: IServerNode) {\n        this.virtualScrollListDataSource.registerComponent({\n            search: {\n                componentInstance: {\n                    getFilters: () => ({\n                        type: \"search\",\n                        value: node.name,\n                    }),\n                },\n            },\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n}\n\n@Component({\n    selector: \"nui-dialog-content-dialog-example\",\n    template: `\n        <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n\n        <div nui-busy [busy]=\"isLoading\">\n            <div class=\"d-flex flex-row\">\n                <nui-repeat class=\"virtual-scroll-list-repeat\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"repeatItemTemplate\"\n                    [itemsSource]=\"items\"\n                    [virtualScroll]=\"true\"\n                    [itemSize]=\"30\"\n                ></nui-repeat>\n            </div>\n        </div>\n\n        <nui-dialog-footer>\n            <button nui-button type=\"button\" (click)=\"close()\" i18n>\n                Close\n            </button>\n        </nui-dialog-footer>\n\n        <ng-template #repeatItemTemplate let-item=\"item\">\n            <div class=\"d-flex justify-content-between w-100\"><span>Node: {{item.name}}</span> <span> Status: {{item.status}}</span> </div>\n        </ng-template>\n    `,\n    animations: [],\n    providers: [VirtualViewportManager],\n    styles: [`\n        .virtual-scroll-list-repeat {\n            height: 400px; // height has to be defined if using 'nui-repeat' with virtual scroll\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeDialogContentExampleComponent implements AfterViewInit {\n    @Input() items: IServerNode[] = [];\n    @Input() isLoading: boolean = false;\n\n    public itemConfig: IRepeatItemConfig = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent)\n    public repeat: RepeatComponent;\n\n    constructor(public cdRef: ChangeDetectorRef,\n        public viewPortManager: VirtualViewportManager,\n        @Inject(NuiActiveDialog) public activeDialog: any\n        ) {}\n\n    ngAfterViewInit() {\n        this.viewPortManager.setViewport(this.repeat.viewportRef);\n    }\n\n    close() {\n        this.activeDialog.close();\n    }\n\n}\n\n","import { CdkTreeModule } from \"@angular/cdk/tree\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiPaginatorModule,\n    NuiRepeatModule,\n    NuiSpinnerModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    TreeBasicExampleComponent,\n    TreeCheckboxExampleComponent,\n    TreeDialogContentExampleComponent,\n    TreeDocsExampleComponent,\n    TreeLazyExampleComponent,\n    TreeLeafPaginationExampleComponent,\n    TreeLoadMoreExampleComponent,\n    TreeShowAllDialogExampleComponent,\n    TreeStylingExampleComponent,\n    TreeVisualTestComponent,\n    TreeWithAdditionalContentExampleComponent\n} from \"./index\";\nimport { TreeCheckboxLazyComponent } from \"./tree-checkbox-lazy/tree-checkbox-lazy.component\";\nimport { TreeBasicTestComponent } from \"./tree-visual-test/tree-basic-test/tree-basic-test.component\";\nimport { TreeCheckboxTestComponent } from \"./tree-visual-test/tree-checkbox-test/tree-checkbox-test.component\";\nimport { TreePaginatorTestComponent } from \"./tree-visual-test/tree-paginator-test/tree-paginator-test.component\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: TreeDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"basic\",\n        component: TreeBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"lazy\",\n        component: TreeLazyExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"leaf-pagination\",\n        component: TreeLeafPaginationExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"show-all-dialog\",\n        component: TreeShowAllDialogExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"styling\",\n        component: TreeStylingExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"with-additional-content\",\n        component: TreeWithAdditionalContentExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"checkbox\",\n        component: TreeCheckboxExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"checkbox-lazy\",\n        component: TreeCheckboxLazyComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"load-more\",\n        component: TreeLoadMoreExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"tree-visual-test\",\n        component: TreeVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        CdkTreeModule,\n        NuiDocsModule,\n        NuiCommonModule,\n        NuiIconModule,\n        NuiButtonModule,\n        NuiExpanderModule,\n        NuiButtonModule,\n        NuiMenuModule,\n        NuiSpinnerModule,\n        NuiCheckboxModule,\n        NuiPaginatorModule,\n        NuiDialogModule,\n        NuiRepeatModule,\n        NuiBusyModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TreeBasicExampleComponent,\n        TreeDocsExampleComponent,\n        TreeStylingExampleComponent,\n        TreeVisualTestComponent,\n        TreeLazyExampleComponent,\n        TreeCheckboxExampleComponent,\n        TreeLeafPaginationExampleComponent,\n        TreeWithAdditionalContentExampleComponent,\n        TreeShowAllDialogExampleComponent,\n        TreeDialogContentExampleComponent,\n        TreeLoadMoreExampleComponent,\n        TreeBasicTestComponent,\n        TreeCheckboxTestComponent,\n        TreePaginatorTestComponent,\n        TreeCheckboxLazyComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n    entryComponents: [\n        TreeDialogContentExampleComponent,\n    ],\n})\nexport class TreeModule {\n}\n\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { CdkNestedTreeNode, CdkTree, NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component, Injectable, IterableDiffer, IterableDiffers, ViewChild } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n    length?: number;\n    isLoading?: boolean;\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Fruit\",\n        children: [],\n        length: 3,\n        isLoading: false,\n    },\n];\n\n@Injectable()\nclass HttpMock {\n    get(): Observable<FoodNode[]> {\n        const res: FoodNode[] = [\n            {name: \"Banana\"},\n            {\n                name: \"Fruit\",\n                children: [],\n                length: 3,\n                isLoading: false,\n            },\n            {name: \"Fruit loops\"},\n        ];\n        return of(res).pipe(delay(3000));\n    }\n}\n\n@Component({\n    selector: \"nui-tree-lazy-example\",\n    templateUrl: \"./tree-lazy.example.component.html\",\n    styleUrls: [\"./tree-lazy.component.example.less\"],\n    animations: [expand],\n    providers: [HttpMock],\n})\nexport class TreeLazyExampleComponent {\n\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    @ViewChild(CdkTree) private cdkTree: CdkTree<FoodNode>;\n\n    hasChild = (_: number, node: FoodNode) => node.length;\n\n    constructor(private http: HttpMock,\n                private differ: IterableDiffers) {\n    }\n\n    loadMore(node: FoodNode, nestedNode: CdkNestedTreeNode<any>): void {\n        const differ: IterableDiffer<FoodNode> = this.differ.find(node.children).create();\n\n        if (node.children?.length === node.length || node.isLoading) {\n            return;\n        }\n\n        node.isLoading = true;\n\n        this.http.get().subscribe((res: FoodNode[]) => {\n            node.isLoading = false;\n            node.children = res;\n            this.cdkTree.renderNodeChanges(node.children, differ, nestedNode.nodeOutlet.first.viewContainer, node);\n        });\n    }\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        {{node.name}}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node #nestedNode=cdkNestedTreeNode *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\" cdkTreeNodeToggle (click)=\"loadMore(node, nestedNode)\">\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <span class=\"nui-tree__header-title\">{{ node.name }} ({{ node.length }})</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n            <nui-spinner *ngIf=\"node.isLoading\" [show]=\"node.isLoading\" [delay]=\"0\"></nui-spinner>\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\ninterface FoodNode {\n    name: string;\n    page?: number;\n    children?: FoodNode[];\n    isLoading?: boolean;\n    hasPagination?: boolean;\n}\n\ninterface IApiResponse {\n    items: FoodNode[];\n    total: number;\n}\n\n@Injectable()\nexport class HttpMockService {\n    private fruitsList = [\n        $localize `apple`,\n        $localize `orange`,\n        $localize `banana`,\n        $localize `watermelon`,\n        $localize `peach`,\n        $localize `pineapple`,\n        $localize `lemon`,\n        $localize `mango`,\n    ];\n    private vegetablesList = [\n        $localize `tomato`,\n        $localize `cucumber`,\n        $localize `cabbage`,\n        $localize `pepper`,\n        $localize `carrot`,\n        $localize `onion`,\n        $localize `broccoli`,\n        $localize `corn`,\n    ];\n\n    private totalItems = 1337;\n\n    getNodeItems(nodeId: string, page: number, pageSize: number): Observable<IApiResponse> {\n        // nodeId can be handled on API depending on app needs\n        const itemList = nodeId === \"Vegetables\"\n            ? this.vegetablesList\n            : this.fruitsList;\n\n        const items: FoodNode[] = Array.from({ length: pageSize }).map(() => ({\n            name: this.getRandomFrom(itemList),\n            page,\n        }));\n\n        const response = {\n            items,\n            total: this.totalItems,\n        };\n        return of(response).pipe(delay(1000));\n    }\n\n    private getRandomFrom(list: any[]) {\n        return list[Math.floor(Math.random() * list.length)];\n    }\n}\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\n\nimport {FoodNode, TREE_DATA} from \"../data\";\n\n@Component({\n  selector: \"nui-tree-basic-test\",\n  templateUrl: \"./tree-basic-test.component.html\",\n  styleUrls: [\"./tree-basic-test.component.less\"],\n  host: { id: \"nui-tree-basic-example\" },\n  animations: [expand],\n})\n\nexport class TreeBasicTestComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n}\n","<cdk-tree [@.disabled]=\"true\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n        <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n        {{node.name}}\n    </cdk-nested-tree-node>\n    <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n        <div class=\"nui-tree__header\" cdkTreeNodeToggle>\n            <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n            <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n        </div>\n        <div class=\"nui-tree__body\"\n             [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n             [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n            <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n    </cdk-nested-tree-node>\n</cdk-tree>\n","import { ArrayDataSource, SelectionModel } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component } from \"@angular/core\";\nimport { expand } from \"@nova-ui/bits\";\n\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Vegetables\",\n        children: [\n            {\n                name: \"Green\",\n                children: [{ name: \"Broccoli\" }, { name: \"Brussels sprouts\" }],\n            },\n            {\n                name: \"Orange\",\n                children: [{ name: \"Pumpkins\" }, { name: \"Carrots\" }],\n            },\n            {\n                name: \"Red\",\n            },\n        ],\n    },\n    {\n        name: \"Fruit\",\n        children: [\n            { name: \"Apple\" },\n            { name: \"Banana\" },\n            { name: \"Fruit loops\" },\n        ],\n    },\n    {\n        name: \"Meat\",\n    },\n];\n\n\n@Component({\n    selector: \"nui-tree-checkbox-example\",\n    templateUrl: \"tree-checkbox.example.component.html\",\n    styleUrls: [\"tree-checkbox.example.component.less\"],\n    host: { id: \"nui-tree-checkbox-example\" },\n    animations: [expand],\n})\nexport class TreeCheckboxExampleComponent {\n    public treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    public dataSource = new ArrayDataSource(TREE_DATA);\n    public selectionModel = new SelectionModel<FoodNode>(true);\n\n    public hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n\n    /** Whether all the descendants of the node are selected. */\n    public descendantsAllSelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        return descendants.length > 0 && descendants.every(child => this.selectionModel.isSelected(child));\n    }\n\n    /** Whether part of the descendants are selected */\n    public descendantsPartiallySelected(node: FoodNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some(child => this.selectionModel.isSelected(child));\n        return result && !this.descendantsAllSelected(node);\n    }\n\n    /** Toggle the branch selection. Select/deselect all the descendants node */\n    public branchItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.selectionModel.isSelected(node)\n            ? this.selectionModel.select(...descendants)\n            : this.selectionModel.deselect(...descendants);\n\n        // Force update for the parent\n        descendants.forEach(child => this.selectionModel.isSelected(child));\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Toggle a leaf item selection. Check all the parents to see if they changed */\n    public leafItemSelectionToggle(node: FoodNode): void {\n        this.selectionModel.toggle(node);\n        this.checkAllParentsSelection(node);\n    }\n\n    /** Checks all the parents when a leaf node is selected/unselected */\n    private checkAllParentsSelection(node: FoodNode): void {\n        let parent: FoodNode | undefined = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n\n    /** Check root node checked state and change it accordingly */\n    private checkRootNodeSelection(node: FoodNode): void {\n        const nodeSelected = this.selectionModel.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected = descendants.length > 0 && descendants.every(child => this.selectionModel.isSelected(child));\n        if (nodeSelected && !descAllSelected) {\n            this.selectionModel.deselect(node);\n        } else if (!nodeSelected && descAllSelected) {\n            this.selectionModel.select(node);\n        }\n    }\n\n    /** Get the parent node of a node */\n    private getParentNode(node: FoodNode): FoodNode | undefined {\n        let parent: FoodNode | undefined;\n\n        // Don't need to get parent if node on the 0 level\n        if (TREE_DATA.find(n => n === node)) {\n            return;\n        }\n\n        const search = (n: FoodNode): FoodNode | undefined => {\n            if (parent || !n.children) {\n                return;\n            }\n            if (n.children.find(i => i === node)) {\n                parent = n;\n                return;\n            }\n            return n.children.find(search);\n        };\n\n        // invoke search on the level 0 items\n        TREE_DATA.forEach(search);\n\n        if (!parent) {\n            throw new Error(\"Parent wasn't found\");\n        }\n\n        return parent;\n    }\n}\n","<div class=\"d-flex justify-content-between\">\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" style=\"flex: 50%;\">\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n            <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n            <nui-checkbox class=\"leaf-control\"\n                          [checked]=\"selectionModel.isSelected(node)\"\n                          (valueChange)=\"leafItemSelectionToggle(node)\">{{node.name}}</nui-checkbox>\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n            <div class=\"nui-tree__header\" cdkTreeNodeToggle>\n                <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n                <nui-checkbox class=\"branch-control\"\n                              (click)=\"$event.stopPropagation()\"\n                              [checked]=\"descendantsAllSelected(node)\"\n                              [indeterminate]=\"descendantsPartiallySelected(node)\"\n                              (valueChange)=\"branchItemSelectionToggle(node)\">{{node.item}}</nui-checkbox>\n                <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n            </div>\n            <div class=\"nui-tree__body\"\n                 [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n                 [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n\n    <ul class=\"list-group list-group-striped\" style=\"flex: 50%;\">\n        <li class=\"list-group-item\"\n            *ngFor=\"let selected of selectionModel.selected\">\n            {{ selected.name }}\n        </li>\n    </ul>\n</div>\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { Component } from \"@angular/core\";\nimport { EventBusService, expand } from \"@nova-ui/bits\";\n\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n    {\n        name: \"Fruit\",\n        children: [\n            { name: \"Apple\" },\n            { name: \"Banana\" },\n            { name: \"Fruit loops\" },\n        ],\n    },\n    {\n        name: \"Vegetables\",\n        children: [\n            {\n                name: \"Green\",\n                children: [{ name: \"Broccoli\" }, { name: \"Brussels sprouts\" }],\n            },\n            {\n                name: \"Orange\",\n                children: [{ name: \"Pumpkins\" }, { name: \"Carrots\" }],\n            },\n            {\n                name: \"Red\",\n            },\n        ],\n    },\n    {\n        name: \"Meat\",\n    },\n];\n\n\n@Component({\n    selector: \"nui-tree-with-additional-content-example\",\n    templateUrl: \"tree-with-additional-content.example.component.html\",\n    styleUrls: [\"tree-with-additional-content.example.component.less\"],\n    host: { id: \"tree-with-additional-content-example\" },\n    animations: [expand],\n})\nexport class TreeWithAdditionalContentExampleComponent {\n    treeControl = new NestedTreeControl<FoodNode>((node) => node.children);\n    dataSource = new ArrayDataSource(TREE_DATA);\n\n    public items = [\"Item 1\", \"Item 2\", \"Item 3\"];\n\n    public hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n\n    constructor(private eventBusService: EventBusService) {\n    }\n\n    public onToggleClick() {\n        this.eventBusService.getStream({id: \"document-click\"}).next(new MouseEvent(\"click\"));\n    }\n}\n","<div style=\"width: 360px;\">\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n            <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n            <span class=\"nui-tree__leaf-title\"> {{node.name}} </span>\n            <nui-menu icon=\"menu\" id=\"nui-demo-basic-menu\"\n                    [appendToBody]=\"true\"\n                    displayStyle=\"action\">\n                <nui-menu-action *ngFor=\"let item of items\">\n                    {{item}}\n                </nui-menu-action>\n            </nui-menu>\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n            <div class=\"nui-tree__header\" cdkTreeNodeToggle (click)=\"onToggleClick()\">\n                <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n                <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n                <div class=\"nui-badge-counter\"\n                    [attr.data-before]=\"node.children.length\">\n                </div>\n            </div>\n            <div class=\"nui-tree__body\"\n                [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n                [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</div>\n"]}