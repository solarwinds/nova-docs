{"version":3,"sources":["webpack:///./demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.ts?ff5d","webpack:///./demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html?ffc7","./demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.less","webpack:///./demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.html?d774","webpack:///./demo/src/components/demo/popup/popup.module.ts?e3c0","./demo/src/components/demo/popup/popup.module.ts","./demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.html","./demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.ts","webpack:///./demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts?f47a","webpack:///./demo/src/components/demo/popup/popup-docs/popup-docs.example.component.ts?00af","webpack:///./demo/src/components/demo/popup/popup-docs/popup-docs.example.component.html?0902","webpack:///./demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.html?145a","./demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.less","./demo/src/components/demo/popup/popup-docs/popup-docs.example.component.ts","./demo/src/components/demo/popup/popup-docs/popup-docs.example.component.html","./demo/src/components/demo/popup/popup-test/popup-test.example.component.less","webpack:///./demo/src/components/demo/popup/popup-test/popup-test.example.component.html?1a59","webpack:///./demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.ts?2606","./demo/src/components/demo/popup/popup-test/popup-test.example.component.html","./demo/src/components/demo/popup/popup-test/popup-test.example.component.ts","./demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.ts","./demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.html","webpack:///./demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.ts?2d91","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?75f5","./demo/src/components/demo/popup/index.ts","webpack:///./demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.ts?4099","./demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.html","./demo/src/components/demo/popup/popup-with-custom-width/popup-with-custom-width.example.component.ts","webpack:///./demo/src/components/demo/popup/popup-append-to-body/popup-append-to-body.example.component.html?5a4e","webpack:///./demo/src/components/demo/popup/popup-test/popup-test.example.component.ts?6ea1","webpack:///./demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.ts?91da","webpack:///./demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.html?99c1","webpack:///./demo/src/components/demo/popup/popup-with-custom-content/popup-with-custom-content.example.component.html?a3f3","./demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.html","./demo/src/components/demo/popup/popup-different-directions/popup-different-directions.example.component.ts","./demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.html","./demo/src/components/demo/popup/popup-with-custom-styling/popup-with-custom-styling.example.component.ts","./demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.html","./demo/src/components/demo/popup/popup-simple-usage/popup-simple-usage.example.component.ts","webpack:///./demo/src/components/demo/popup/index.ts?cd7f"],"names":[],"mappings":"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","file":"demo-popup-popup-module-es2015.js","sourcesContent":["export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-append-to-body-example\\\",\\n    templateUrl: \\\"./popup-append-to-body.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupAppendToBodyExampleComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n\\n}\\n\";","export default \"<nui-popup  contextClass=\\\"nui-demo-custom-class\\\">\\n    <button nui-button\\n            nuiPopupToggle\\n            width=\\\"90px\\\"\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n            Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \"// The following styles are used for demonstration purposes only\\n\\n.popup-adapter-overlay {\\n    .nui-demo-custom-class.nui-overlay {\\n        background-color: yellowgreen !important;\\n        font-family: 'Courier New', Courier, monospace;\\n        font-weight: bold;\\n        text-decoration: underline overline black dotted;\\n        padding: 20px;\\n    }\\n\\n}\\n\";","export default \"<nui-popup [width]=\\\"width\\\">\\n    <button nui-button\\n            nuiPopupToggle\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n        Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiCheckboxModule,\\n    NuiDocsModule,\\n    NuiMenuModule,\\n    NuiMessageModule,\\n    NuiPopupModule,\\n    NuiSearchModule,\\n    NuiTextboxModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    PopupAppendToBodyExampleComponent,\\n    PopupDifferentDirectionsExampleComponent,\\n    PopupExampleComponent,\\n    PopupSimpleExampleComponent,\\n    PopupTestComponent,\\n    PopupWithCustomContentComponent,\\n    PopupWithCustomStylingComponent,\\n    PopupWithCustomWidthComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: PopupExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.support,\\n                \\\"eolDate\\\": new Date(\\\"2020-07-09\\\"),\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"popup-test\\\",\\n        component: PopupTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"basic\\\",\\n        component: PopupSimpleExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiPopupModule,\\n        NuiMessageModule,\\n        NuiButtonModule,\\n        ReactiveFormsModule,\\n        FormsModule,\\n        NuiCheckboxModule,\\n        NuiSearchModule,\\n        NuiDocsModule,\\n        NuiMenuModule,\\n        RouterModule.forChild(routes),\\n        NuiTextboxModule,\\n    ],\\n    declarations: [\\n        PopupSimpleExampleComponent,\\n        PopupDifferentDirectionsExampleComponent,\\n        PopupWithCustomStylingComponent,\\n        PopupWithCustomWidthComponent,\\n        PopupWithCustomContentComponent,\\n        PopupTestComponent,\\n        PopupAppendToBodyExampleComponent,\\n        PopupExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class PopupModule {\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPopupModule,\n    NuiSearchModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    PopupAppendToBodyExampleComponent,\n    PopupDifferentDirectionsExampleComponent,\n    PopupExampleComponent,\n    PopupSimpleExampleComponent,\n    PopupTestComponent,\n    PopupWithCustomContentComponent,\n    PopupWithCustomStylingComponent,\n    PopupWithCustomWidthComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: PopupExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.support,\n                \"eolDate\": new Date(\"2020-07-09\"),\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"popup-test\",\n        component: PopupTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"basic\",\n        component: PopupSimpleExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiPopupModule,\n        NuiMessageModule,\n        NuiButtonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        NuiCheckboxModule,\n        NuiSearchModule,\n        NuiDocsModule,\n        NuiMenuModule,\n        RouterModule.forChild(routes),\n        NuiTextboxModule,\n    ],\n    declarations: [\n        PopupSimpleExampleComponent,\n        PopupDifferentDirectionsExampleComponent,\n        PopupWithCustomStylingComponent,\n        PopupWithCustomWidthComponent,\n        PopupWithCustomContentComponent,\n        PopupTestComponent,\n        PopupAppendToBodyExampleComponent,\n        PopupExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class PopupModule {\n}\n","<nui-popup [appendToBody]=\"true\">\n    <button nui-button\n            nuiPopupToggle\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n            Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-append-to-body-example\",\n    templateUrl: \"./popup-append-to-body.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupAppendToBodyExampleComponent {\n\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n\n}\n","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-with-custom-styling-example\\\",\\n    templateUrl: \\\"./popup-with-custom-styling.example.component.html\\\",\\n    styleUrls: [\\\"popup-with-custom-styling.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupWithCustomStylingComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-popup-docs-example\\\",\\n    templateUrl: \\\"./popup-docs.example.component.html\\\",\\n})\\nexport class PopupExampleComponent {}\\n\";","export default \"<p>\\n    <code>&lt;nui-popup&gt;</code> is a base component for the most of dropdown-like Nova components, but this doesn't limit it's abilities.\\n    It allows you to put any HTML templates into it's body to build more complex and exciting components.\\n</p>\\n<nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n    <strong>Pay attention!</strong> The following examples demonstrate only basic scenarios. To get familiar with more complex use cases, you can refer to \\n    the documentation for components built on top of the <code>nui-popup</code>, such as \\n    <a href=\\\"../components/ComboboxComponent.html#example\\\" target=\\\"_blank\\\">nui-combobox</a>, \\n    <a href=\\\"../components/MenuComponent.html#example\\\" target=\\\"_blank\\\">nui-menu</a>, \\n    <a href=\\\"../components/SelectComponent.html#example\\\" target=\\\"_blank\\\">nui-select</a>, etc.,\\n    and explore their internal structure in the codebase.\\n</nui-message>\\n<!-- ------------------------------------------------------------------------------------------- -->\\n<h2>Basic Usage</h2>\\n<p>\\n    A simple popup can be added to the page by adding a <code>&lt;nui-popup&gt;</code> element.\\n    It must wrap two types of elements: one that toggles the popup and one that defines the content.\\n    To achieve this, the element responsible for toggling the popup must contain the <code>nuiPopupToggle</code> directive.\\n    The area with the content must be wrapped up inside a <code>div</code> with the <code>popupAreaContent</code> directive \\n    assigned to it.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-simple-usage\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-popup-simple-usage-example></nui-popup-simple-usage-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Width</h2>\\n<p>\\n    One can change the width of the popup by setting the <code>width</code> input.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-with-custom-width\\\" exampleTitle=\\\"Custom Width\\\">\\n    <nui-popup-with-custom-width-example></nui-popup-with-custom-width-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Appended to Body</h2>\\n<p>\\n    <code>nui-popup</code> can be appended to the body of the page if required. To achieve this, add the <code>appendToBody</code> \\n    input to the component.\\n</p>\\n<nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n    <strong>Please be aware</strong> that the positioning of the <code>nui-popup</code> component is treated differently when the <code>appendToBody</code> \\n    input is used. There is a technical limitation that causes the <code>directionTop</code> and <code>directionRight</code> inputs not\\n    to work when <code>appendToBody</code> is true. In this case, the positioning of the component is controlled exclusively by the \\n    <code>edgeDetectionService</code>.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"popup-append-to-body\\\" exampleTitle=\\\"Appended to Body\\\">\\n    <nui-popup-append-to-body-example></nui-popup-append-to-body-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Open Direction</h2>\\n<p>\\n    Even though <code>nui-popup</code> automatically detects the window edges and adjusts the open direction accordingly\\n    thanks to the <code>edgeDetectionService</code>, it's possible to force the <code>nui-popup</code> to open in\\n    a specific direction. Available inputs are: <code>directionRight</code> and <code>directionTop</code>, which receive boolean values.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-different-directions\\\" exampleTitle=\\\"Custom Open Direction\\\">\\n    <nui-popup-different-directions-example></nui-popup-different-directions-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Classes</h2>\\n<p>\\n    It is also easy to apply custom classes to the popup. Use the <code>contextClass</code> input to pass the desired css class.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-with-custom-styling\\\" exampleTitle=\\\"Custom Styling\\\">\\n    <nui-popup-with-custom-styling-example></nui-popup-with-custom-styling-example>\\n</nui-example-wrapper>\\n\\n<!-- ------------------------------------------------------------------------------------------- -->\\n\\n<h2>Custom Content</h2>\\n<p>\\n    You can put pretty much anything you want inside the <code>nui-popup</code> component. You can use it to build more complex components, and \\n    configure them to your liking.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"popup-with-custom-content\\\" exampleTitle=\\\"Custom Content\\\">\\n    <nui-popup-with-custom-content-example></nui-popup-with-custom-content-example>\\n</nui-example-wrapper>\\n\";","export default \"<nui-popup>\\n    <button nui-button\\n            nuiPopupToggle\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n        Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\" nuiTooltip=\\\"This icon is draggable\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \".nui-demo-popover-custom-form-styles {\\n    padding: 20px;\\n}\\n\\n.top-buffer {\\n    margin-top: 5px;\\n}\\n\\na[nuiPopupToggle] {\\n    cursor: pointer;\\n}\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-popup-docs-example\",\n    templateUrl: \"./popup-docs.example.component.html\",\n})\nexport class PopupExampleComponent {}\n","<p>\n    <code>&lt;nui-popup&gt;</code> is a base component for the most of dropdown-like Nova components, but this doesn't limit it's abilities.\n    It allows you to put any HTML templates into it's body to build more complex and exciting components.\n</p>\n<nui-message [allowDismiss]=\"false\" type=\"warning\">\n    <strong>Pay attention!</strong> The following examples demonstrate only basic scenarios. To get familiar with more complex use cases, you can refer to \n    the documentation for components built on top of the <code>nui-popup</code>, such as \n    <a href=\"../components/ComboboxComponent.html#example\" target=\"_blank\">nui-combobox</a>, \n    <a href=\"../components/MenuComponent.html#example\" target=\"_blank\">nui-menu</a>, \n    <a href=\"../components/SelectComponent.html#example\" target=\"_blank\">nui-select</a>, etc.,\n    and explore their internal structure in the codebase.\n</nui-message>\n<!-- ------------------------------------------------------------------------------------------- -->\n<h2>Basic Usage</h2>\n<p>\n    A simple popup can be added to the page by adding a <code>&lt;nui-popup&gt;</code> element.\n    It must wrap two types of elements: one that toggles the popup and one that defines the content.\n    To achieve this, the element responsible for toggling the popup must contain the <code>nuiPopupToggle</code> directive.\n    The area with the content must be wrapped up inside a <code>div</code> with the <code>popupAreaContent</code> directive \n    assigned to it.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-simple-usage\" exampleTitle=\"Basic Usage\">\n    <nui-popup-simple-usage-example></nui-popup-simple-usage-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Width</h2>\n<p>\n    One can change the width of the popup by setting the <code>width</code> input.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-with-custom-width\" exampleTitle=\"Custom Width\">\n    <nui-popup-with-custom-width-example></nui-popup-with-custom-width-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Appended to Body</h2>\n<p>\n    <code>nui-popup</code> can be appended to the body of the page if required. To achieve this, add the <code>appendToBody</code> \n    input to the component.\n</p>\n<nui-message [allowDismiss]=\"false\" type=\"warning\">\n    <strong>Please be aware</strong> that the positioning of the <code>nui-popup</code> component is treated differently when the <code>appendToBody</code> \n    input is used. There is a technical limitation that causes the <code>directionTop</code> and <code>directionRight</code> inputs not\n    to work when <code>appendToBody</code> is true. In this case, the positioning of the component is controlled exclusively by the \n    <code>edgeDetectionService</code>.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"popup-append-to-body\" exampleTitle=\"Appended to Body\">\n    <nui-popup-append-to-body-example></nui-popup-append-to-body-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Open Direction</h2>\n<p>\n    Even though <code>nui-popup</code> automatically detects the window edges and adjusts the open direction accordingly\n    thanks to the <code>edgeDetectionService</code>, it's possible to force the <code>nui-popup</code> to open in\n    a specific direction. Available inputs are: <code>directionRight</code> and <code>directionTop</code>, which receive boolean values.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-different-directions\" exampleTitle=\"Custom Open Direction\">\n    <nui-popup-different-directions-example></nui-popup-different-directions-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Classes</h2>\n<p>\n    It is also easy to apply custom classes to the popup. Use the <code>contextClass</code> input to pass the desired css class.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-with-custom-styling\" exampleTitle=\"Custom Styling\">\n    <nui-popup-with-custom-styling-example></nui-popup-with-custom-styling-example>\n</nui-example-wrapper>\n\n<!-- ------------------------------------------------------------------------------------------- -->\n\n<h2>Custom Content</h2>\n<p>\n    You can put pretty much anything you want inside the <code>nui-popup</code> component. You can use it to build more complex components, and \n    configure them to your liking.\n</p>\n<nui-example-wrapper filenamePrefix=\"popup-with-custom-content\" exampleTitle=\"Custom Content\">\n    <nui-popup-with-custom-content-example></nui-popup-with-custom-content-example>\n</nui-example-wrapper>\n","export default \"// The following styles are used for demonstration purposes only\\n.nui-demo-custom-class {\\n    background-color: yellowgreen !important;\\n    font-family: 'Courier New', Courier, monospace;\\n    font-weight: bold;\\n    text-decoration: underline overline black dotted;\\n    padding: 20px;\\n}\";","export default \"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row mt-5\\\">\\n        <div class=\\\"col\\\">\\n            <p>\\n                Simple example\\n            </p>\\n            <nui-popup id=\\\"nui-demo-popup-simple\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                Custom width\\n            </p>\\n            <nui-popup [width]=\\\"width\\\" id=\\\"nui-demo-popup-custom-width\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                Append to Body\\n            </p>\\n            <nui-popup [appendToBody]=\\\"true\\\" [directionRight]=true id=\\\"nui-demo-popup-append-to-body\\\" contextClass=\\\"additional-host-class\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n    </div>\\n    <div class=\\\"row mt-5\\\">\\n        <div class=\\\"col\\\">\\n            <p>\\n                Open Direction Right\\n            </p>\\n            <nui-popup [directionRight]=\\\"true\\\" id=\\\"nui-demo-popup-direction-right\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                Open Direction Top\\n            </p>\\n            <nui-popup [directionRight]=\\\"false\\\" [directionTop]=\\\"true\\\" id=\\\"nui-demo-popup-direction-top\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <p>\\n                IsOpen = true\\n            </p>\\n            <nui-popup id=\\\"nui-demo-popup-isOpen-true\\\" [isOpen]=\\\"true\\\">\\n                <button nuiPopupToggle>Click</button>\\n                <div popupAreaContent>\\n                    <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                        <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                    </ng-container>\\n                </div>\\n            </nui-popup>\\n        </div>\\n    </div>\\n</div>\";","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-simple-usage-example\\\",\\n    templateUrl: \\\"./popup-simple-usage.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupSimpleExampleComponent {\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n}\\n\";","\n<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col\">\n            <p>\n                Simple example\n            </p>\n            <nui-popup id=\"nui-demo-popup-simple\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                Custom width\n            </p>\n            <nui-popup [width]=\"width\" id=\"nui-demo-popup-custom-width\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                Append to Body\n            </p>\n            <nui-popup [appendToBody]=\"true\" [directionRight]=true id=\"nui-demo-popup-append-to-body\" contextClass=\"additional-host-class\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col\">\n            <p>\n                Open Direction Right\n            </p>\n            <nui-popup [directionRight]=\"true\" id=\"nui-demo-popup-direction-right\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                Open Direction Top\n            </p>\n            <nui-popup [directionRight]=\"false\" [directionTop]=\"true\" id=\"nui-demo-popup-direction-top\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n        <div class=\"col\">\n            <p>\n                IsOpen = true\n            </p>\n            <nui-popup id=\"nui-demo-popup-isOpen-true\" [isOpen]=\"true\">\n                <button nuiPopupToggle>Click</button>\n                <div popupAreaContent>\n                    <ng-container *ngFor=\"let item of itemsSource\">\n                        <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                    </ng-container>\n                </div>\n            </nui-popup>\n        </div>\n    </div>\n</div>","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-popup-test\",\n    templateUrl: \"./popup-test.example.component.html\",\n    styleUrls: [\"popup-test.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupTestComponent {\n\n    public width = \"200px\";\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        \"Item 1\",\n        \"Item 2\",\n        \"Item 3\",\n        \"Item 4\",\n        \"Item 5\",\n    ];\n\n    public handleClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n\n@Component({\n    selector: \"nui-popup-with-custom-content-example\",\n    templateUrl: \"./popup-with-custom-content.example.component.html\",\n    styleUrls: [\"./popup-with-custom-content.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomContentComponent implements OnInit {\n\n    public demoFormGroup: FormGroup;\n    public icon = \"caret-down\";\n    public width = \"200px\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    public ngOnInit() {\n        this.demoFormGroup = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.itemsSource[0], this.itemsSource[1], this.itemsSource[2]], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public handleClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n}\n","<div class=\"row top-buffer\">\n    <div class=\"col-3 nui-text-default\" i18n>\n        Simple search bar\n    </div>\n    <div class=\"col-3 nui-text-default\" i18n>\n        Popover with Form and Checkbox Group Inside\n    </div>\n</div>\n<div class=\"row top-buffer\">\n    <div class=\"col-3\">\n        <nui-popup>\n            <button nui-button type=\"button\" nuiPopupToggle icon=\"search\"></button>\n            <div popupAreaContent>\n                <ng-container>\n                    <nui-search (click)=\"handleClick($event)\"></nui-search>\n                </ng-container>\n            </div>\n        </nui-popup>\n    </div>\n    <div class=\"col-3\">\n        <nui-popup [width]=\"width\" contextClass=\"nui-demo-popover-custom-form-styles\">\n            <a nuiPopupToggle i18n>More Options...</a>\n            <div popupAreaContent>\n                <ng-container>\n                    <form [formGroup]=\"demoFormGroup\" (click)=\"handleClick($event)\">\n                        <div class=\"form-group\">\n                            <nui-message [allowDismiss]=\"false\" type=\"critical\" *ngIf=\"!demoFormGroup.controls['checkboxGroup'].valid && demoFormGroup.controls['checkboxGroup'].touched\" >\n                                <b i18n>Select minimum 3 checkboxes!</b>\n                            </nui-message>\n                            <nui-checkbox-group formControlName=\"checkboxGroup\"\n                                                name=\"item\" required>\n                                <nui-checkbox *ngFor=\"let item of itemsSource\"\n                                                [value]=\"item\">\n                                    {{item}}\n                                </nui-checkbox>\n                            </nui-checkbox-group>\n                        </div>\n                        <button nui-button type=\"submit\" [disabled]=\"demoFormGroup.controls['checkboxGroup'].invalid\" i18n>Submit</button>\n                    </form>\n                </ng-container>\n            </div>\n        </nui-popup>\n    </div>\n</div>\n","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-with-custom-width-example\\\",\\n    templateUrl: \\\"./popup-with-custom-width.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupWithCustomWidthComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public width = \\\"130px\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n}\\n\";","var map = {\n\t\"./index.ts\": \"zX8v\",\n\t\"./popup-append-to-body/popup-append-to-body.example.component.html\": \"Wk4U\",\n\t\"./popup-append-to-body/popup-append-to-body.example.component.ts\": \"/11A\",\n\t\"./popup-different-directions/popup-different-directions.example.component.html\": \"mcGX\",\n\t\"./popup-different-directions/popup-different-directions.example.component.ts\": \"QJnK\",\n\t\"./popup-docs/popup-docs.example.component.html\": \"CQIr\",\n\t\"./popup-docs/popup-docs.example.component.ts\": \"AK8X\",\n\t\"./popup-simple-usage/popup-simple-usage.example.component.html\": \"FFqk\",\n\t\"./popup-simple-usage/popup-simple-usage.example.component.ts\": \"JgZo\",\n\t\"./popup-test/popup-test.example.component.html\": \"GlmZ\",\n\t\"./popup-test/popup-test.example.component.less\": \"GPOX\",\n\t\"./popup-test/popup-test.example.component.ts\": \"bqGP\",\n\t\"./popup-with-custom-content/popup-with-custom-content.example.component.html\": \"o/N5\",\n\t\"./popup-with-custom-content/popup-with-custom-content.example.component.less\": \"FOM3\",\n\t\"./popup-with-custom-content/popup-with-custom-content.example.component.ts\": \"kdon\",\n\t\"./popup-with-custom-styling/popup-with-custom-styling.example.component.html\": \"/8cC\",\n\t\"./popup-with-custom-styling/popup-with-custom-styling.example.component.less\": \"0Grj\",\n\t\"./popup-with-custom-styling/popup-with-custom-styling.example.component.ts\": \"9Hqo\",\n\t\"./popup-with-custom-width/popup-with-custom-width.example.component.html\": \"13R7\",\n\t\"./popup-with-custom-width/popup-with-custom-width.example.component.ts\": \"LZGP\",\n\t\"./popup.module.ts\": \"48Cw\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"MT7e\";","export * from \"./popup-simple-usage/popup-simple-usage.example.component\";\nexport * from \"./popup-docs/popup-docs.example.component\";\nexport * from \"./popup-different-directions/popup-different-directions.example.component\";\nexport * from \"./popup-with-custom-styling/popup-with-custom-styling.example.component\";\nexport * from \"./popup-with-custom-width/popup-with-custom-width.example.component\";\nexport * from \"./popup-with-custom-content/popup-with-custom-content.example.component\";\nexport * from \"./popup-test/popup-test.example.component\";\nexport * from \"./popup-append-to-body/popup-append-to-body.example.component\";\n","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-different-directions-example\\\",\\n    templateUrl: \\\"./popup-different-directions.example.component.html\\\",\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupDifferentDirectionsExampleComponent {\\n\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor() {}\\n\\n}\\n\";","<nui-popup [width]=\"width\">\n    <button nui-button\n            nuiPopupToggle\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-with-custom-width-example\",\n    templateUrl: \"./popup-with-custom-width.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomWidthComponent {\n\n    public icon = \"caret-down\";\n    public width = \"130px\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n}\n","export default \"<nui-popup [appendToBody]=\\\"true\\\">\\n    <button nui-button\\n            nuiPopupToggle\\n            type=\\\"button\\\"\\n            [icon]=\\\"icon\\\"\\n            [iconRight]=\\\"true\\\"\\n            class=\\\"menu-button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            i18n>\\n            Click\\n    </button>\\n    <div popupAreaContent>\\n        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n        </ng-container>\\n    </div>\\n</nui-popup>\\n\";","export default \"import { Component, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-popup-test\\\",\\n    templateUrl: \\\"./popup-test.example.component.html\\\",\\n    styleUrls: [\\\"popup-test.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupTestComponent {\\n\\n    public width = \\\"200px\\\";\\n    public icon = \\\"caret-down\\\";\\n    public itemsSource: string[] = [\\n        \\\"Item 1\\\",\\n        \\\"Item 2\\\",\\n        \\\"Item 3\\\",\\n        \\\"Item 4\\\",\\n        \\\"Item 5\\\",\\n    ];\\n\\n    public handleClick(event: MouseEvent) {\\n        event.stopPropagation();\\n    }\\n\\n}\\n\";","export default \"import { Component, OnInit, ViewEncapsulation } from \\\"@angular/core\\\";\\nimport { FormBuilder, FormGroup, Validators } from \\\"@angular/forms\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-popup-with-custom-content-example\\\",\\n    templateUrl: \\\"./popup-with-custom-content.example.component.html\\\",\\n    styleUrls: [\\\"./popup-with-custom-content.example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class PopupWithCustomContentComponent implements OnInit {\\n\\n    public demoFormGroup: FormGroup;\\n    public icon = \\\"caret-down\\\";\\n    public width = \\\"200px\\\";\\n    public itemsSource: string[] = [\\n        $localize `Item 1`,\\n        $localize `Item 2`,\\n        $localize `Item 3`,\\n        $localize `Item 4`,\\n    ];\\n\\n    constructor(private formBuilder: FormBuilder) {}\\n\\n    public ngOnInit() {\\n        this.demoFormGroup = this.formBuilder.group({\\n            checkboxGroup: this.formBuilder.control([this.itemsSource[0], this.itemsSource[1], this.itemsSource[2]], [\\n                Validators.required, Validators.minLength(3)]),\\n        });\\n    }\\n\\n    public handleClick(event: MouseEvent) {\\n        event.stopPropagation();\\n    }\\n\\n}\\n\";","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col nui-text-default\\\" i18n>Bottom Right</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <nui-popup [directionRight]=\\\"true\\\">\\n                    <button nui-button\\n                            nuiPopupToggle\\n                            type=\\\"button\\\"\\n                            [icon]=\\\"icon\\\"\\n                            [iconRight]=\\\"true\\\"\\n                            class=\\\"menu-button\\\"\\n                            [isEmpty]=\\\"false\\\"\\n                            i18n>\\n                        Click\\n                    </button>\\n                    <div popupAreaContent>\\n                        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                        </ng-container>\\n                    </div>\\n                </nui-popup>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col nui-text-default\\\" i18n>Top Left</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <nui-popup  [directionTop]=\\\"true\\\">\\n                    <button nui-button\\n                            nuiPopupToggle\\n                            type=\\\"button\\\"\\n                            [icon]=\\\"icon\\\"\\n                            [iconRight]=\\\"true\\\"\\n                            class=\\\"menu-button\\\"\\n                            [isEmpty]=\\\"false\\\"\\n                            i18n>\\n                        Click\\n                    </button>\\n                    <div popupAreaContent>\\n                        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                        </ng-container>\\n                    </div>\\n                </nui-popup>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col nui-text-default\\\" i18n>Top Right</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <nui-popup  [directionTop]=\\\"true\\\" [directionRight]=\\\"true\\\">\\n                    <button nui-button\\n                            nuiPopupToggle\\n                            type=\\\"button\\\"\\n                            [icon]=\\\"icon\\\"\\n                            [iconRight]=\\\"true\\\"\\n                            class=\\\"menu-button\\\"\\n                            [isEmpty]=\\\"false\\\"\\n                            i18n>\\n                        Click\\n                    </button>\\n                    <div popupAreaContent>\\n                        <ng-container *ngFor=\\\"let item of itemsSource\\\">\\n                            <nui-menu-item tabindex=\\\"0\\\">{{item}}</nui-menu-item>\\n                        </ng-container>\\n                    </div>\\n                </nui-popup>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row top-buffer\\\">\\n    <div class=\\\"col-3 nui-text-default\\\" i18n>\\n        Simple search bar\\n    </div>\\n    <div class=\\\"col-3 nui-text-default\\\" i18n>\\n        Popover with Form and Checkbox Group Inside\\n    </div>\\n</div>\\n<div class=\\\"row top-buffer\\\">\\n    <div class=\\\"col-3\\\">\\n        <nui-popup>\\n            <button nui-button type=\\\"button\\\" nuiPopupToggle icon=\\\"search\\\"></button>\\n            <div popupAreaContent>\\n                <ng-container>\\n                    <nui-search (click)=\\\"handleClick($event)\\\"></nui-search>\\n                </ng-container>\\n            </div>\\n        </nui-popup>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n        <nui-popup [width]=\\\"width\\\" contextClass=\\\"nui-demo-popover-custom-form-styles\\\">\\n            <a nuiPopupToggle i18n>More Options...</a>\\n            <div popupAreaContent>\\n                <ng-container>\\n                    <form [formGroup]=\\\"demoFormGroup\\\" (click)=\\\"handleClick($event)\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <nui-message [allowDismiss]=\\\"false\\\" type=\\\"critical\\\" *ngIf=\\\"!demoFormGroup.controls['checkboxGroup'].valid && demoFormGroup.controls['checkboxGroup'].touched\\\" >\\n                                <b i18n>Select minimum 3 checkboxes!</b>\\n                            </nui-message>\\n                            <nui-checkbox-group formControlName=\\\"checkboxGroup\\\"\\n                                                name=\\\"item\\\" required>\\n                                <nui-checkbox *ngFor=\\\"let item of itemsSource\\\"\\n                                                [value]=\\\"item\\\">\\n                                    {{item}}\\n                                </nui-checkbox>\\n                            </nui-checkbox-group>\\n                        </div>\\n                        <button nui-button type=\\\"submit\\\" [disabled]=\\\"demoFormGroup.controls['checkboxGroup'].invalid\\\" i18n>Submit</button>\\n                    </form>\\n                </ng-container>\\n            </div>\\n        </nui-popup>\\n    </div>\\n</div>\\n\";","<div class=\"row\">\n    <div class=\"col\">\n        <div class=\"row\">\n            <div class=\"col nui-text-default\" i18n>Bottom Right</div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <nui-popup [directionRight]=\"true\">\n                    <button nui-button\n                            nuiPopupToggle\n                            type=\"button\"\n                            [icon]=\"icon\"\n                            [iconRight]=\"true\"\n                            class=\"menu-button\"\n                            [isEmpty]=\"false\"\n                            i18n>\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor=\"let item of itemsSource\">\n                            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n    <div class=\"col\">\n        <div class=\"row\">\n            <div class=\"col nui-text-default\" i18n>Top Left</div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <nui-popup  [directionTop]=\"true\">\n                    <button nui-button\n                            nuiPopupToggle\n                            type=\"button\"\n                            [icon]=\"icon\"\n                            [iconRight]=\"true\"\n                            class=\"menu-button\"\n                            [isEmpty]=\"false\"\n                            i18n>\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor=\"let item of itemsSource\">\n                            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n    <div class=\"col\">\n        <div class=\"row\">\n            <div class=\"col nui-text-default\" i18n>Top Right</div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <nui-popup  [directionTop]=\"true\" [directionRight]=\"true\">\n                    <button nui-button\n                            nuiPopupToggle\n                            type=\"button\"\n                            [icon]=\"icon\"\n                            [iconRight]=\"true\"\n                            class=\"menu-button\"\n                            [isEmpty]=\"false\"\n                            i18n>\n                        Click\n                    </button>\n                    <div popupAreaContent>\n                        <ng-container *ngFor=\"let item of itemsSource\">\n                            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n                        </ng-container>\n                    </div>\n                </nui-popup>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-different-directions-example\",\n    templateUrl: \"./popup-different-directions.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupDifferentDirectionsExampleComponent {\n\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n\n}\n","<nui-popup  contextClass=\"nui-demo-custom-class\">\n    <button nui-button\n            nuiPopupToggle\n            width=\"90px\"\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n            Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-with-custom-styling-example\",\n    templateUrl: \"./popup-with-custom-styling.example.component.html\",\n    styleUrls: [\"popup-with-custom-styling.example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupWithCustomStylingComponent {\n\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    constructor() {}\n\n}\n","<nui-popup>\n    <button nui-button\n            nuiPopupToggle\n            type=\"button\"\n            [icon]=\"icon\"\n            [iconRight]=\"true\"\n            class=\"menu-button\"\n            [isEmpty]=\"false\"\n            i18n>\n        Click\n    </button>\n    <div popupAreaContent>\n        <ng-container *ngFor=\"let item of itemsSource\">\n            <nui-menu-item tabindex=\"0\" nuiTooltip=\"This icon is draggable\">{{item}}</nui-menu-item>\n        </ng-container>\n    </div>\n</nui-popup>\n","import { Component, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-popup-simple-usage-example\",\n    templateUrl: \"./popup-simple-usage.example.component.html\",\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PopupSimpleExampleComponent {\n    public icon = \"caret-down\";\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n}\n","export default \"export * from \\\"./popup-simple-usage/popup-simple-usage.example.component\\\";\\nexport * from \\\"./popup-docs/popup-docs.example.component\\\";\\nexport * from \\\"./popup-different-directions/popup-different-directions.example.component\\\";\\nexport * from \\\"./popup-with-custom-styling/popup-with-custom-styling.example.component\\\";\\nexport * from \\\"./popup-with-custom-width/popup-with-custom-width.example.component\\\";\\nexport * from \\\"./popup-with-custom-content/popup-with-custom-content.example.component\\\";\\nexport * from \\\"./popup-test/popup-test.example.component\\\";\\nexport * from \\\"./popup-append-to-body/popup-append-to-body.example.component\\\";\\n\";"],"sourceRoot":"webpack:///"}