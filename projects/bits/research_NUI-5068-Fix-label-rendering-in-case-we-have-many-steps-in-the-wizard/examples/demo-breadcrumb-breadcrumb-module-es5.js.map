{"version":3,"sources":["webpack:///demo/src/components/demo/breadcrumb/breadcrumb.module.ts?d892","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.ts?e44a","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.html?ede3","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.ts?082a","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.html?1976","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.ts","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.html","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.ts","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-visual-test/breadcrumb-visual-test.component.html","webpack:///demo/src/components/demo/breadcrumb/index.ts?6ee6","webpack:///demo/src/components/demo/breadcrumb/index.ts","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.ts?7e56","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-docs/breadcrumb-docs.example.component.html?9765","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.ts","webpack:///demo/src/components/demo/breadcrumb/breadcrumb-basic/breadcrumb-basic.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?beee","webpack:///demo/src/components/demo/breadcrumb/breadcrumb.module.ts"],"names":["BreadcrumbDocsExampleComponent","routesExample","BreadcrumbVisualTestComponent","router","routerState","breadcrumbStateService","breadcrumbSource","getBreadcrumbState","routerSubscription","getNavigationSubscription","subscribe","navigate","relativeTo","unsubscribe","onNavigation","relativeNavigation","BreadcrumbFirstSubviewLevelComponent","goNext","BreadcrumbSecondSubviewLevelComponent","BreadcrumbBasicExampleComponent","BreadcrumbCountriesSubviewComponent","BreadcrumbSingleCountryComponent","BreadcrumbOfficesSubviewComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","routes","path","component","data","breadcrumb","ga","showThemeSwitcher","children","url","BreadcrumbModule","provide","useFactory","forChild"],"mappings":"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","file":"demo-breadcrumb-breadcrumb-module-es5.js","sourcesContent":["export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiBreadcrumbModule, NuiButtonModule, NuiDocsModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    BreadcrumbBasicExampleComponent,\\n    BreadcrumbCountriesSubviewComponent,\\n    BreadcrumbDocsExampleComponent,\\n    BreadcrumbFirstSubviewLevelComponent,\\n    BreadcrumbOfficesSubviewComponent,\\n    BreadcrumbSecondSubviewLevelComponent,\\n    BreadcrumbSingleCountryComponent,\\n    BreadcrumbVisualTestComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: BreadcrumbDocsExampleComponent,\\n        data: {\\n            breadcrumb: \\\"Root\\\",\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n        children: [\\n            {\\n                path: \\\"countries\\\",\\n                component: BreadcrumbCountriesSubviewComponent,\\n                data: {\\n                    breadcrumb: \\\"Countries\\\",\\n                    url: \\\"https://tesla.com\\\",\\n                    showThemeSwitcher: true,\\n                },\\n                children: [\\n                    {\\n                        path: \\\"usa\\\",\\n                        component: BreadcrumbSingleCountryComponent,\\n                        data: {\\n                            breadcrumb: \\\"USA\\\",\\n                            showThemeSwitcher: true,\\n                        },\\n                    },\\n                    {\\n                        path: \\\"ukraine\\\",\\n                        component: BreadcrumbSingleCountryComponent,\\n                        data: {\\n                            breadcrumb: \\\"Ukraine\\\",\\n                            showThemeSwitcher: true,\\n                        },\\n                    },\\n                ],\\n            },\\n            {\\n                path: \\\"offices\\\",\\n                component: BreadcrumbOfficesSubviewComponent,\\n                data: {\\n                    breadcrumb: \\\"Offices\\\",\\n                    showThemeSwitcher: true,\\n                },\\n            },\\n        ],\\n    },\\n    {\\n        path: \\\"breadcrumb-visual-test\\\",\\n        component: BreadcrumbVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n            breadcrumb: \\\"Root\\\",\\n        },\\n        children: [\\n            {\\n                path: \\\"first-subroute\\\",\\n                component: BreadcrumbFirstSubviewLevelComponent,\\n                data: {\\n                    breadcrumb: \\\"First Level\\\",\\n                    \\\"srlc\\\": {\\n                        \\\"hideIndicator\\\": true,\\n                    },\\n                },\\n                children: [\\n                    {\\n                        path: \\\"second-subroute\\\",\\n                        component: BreadcrumbSecondSubviewLevelComponent,\\n                        data: {\\n                            breadcrumb: \\\"Second Level\\\",\\n                            \\\"srlc\\\": {\\n                                \\\"hideIndicator\\\": true,\\n                            },\\n                        },\\n                    },\\n                ],\\n            },\\n        ],\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiDocsModule,\\n        NuiBreadcrumbModule,\\n        NuiButtonModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        BreadcrumbDocsExampleComponent,\\n        BreadcrumbBasicExampleComponent,\\n        BreadcrumbCountriesSubviewComponent,\\n        BreadcrumbSingleCountryComponent,\\n        BreadcrumbOfficesSubviewComponent,\\n        BreadcrumbVisualTestComponent,\\n        BreadcrumbFirstSubviewLevelComponent,\\n        BreadcrumbSecondSubviewLevelComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class BreadcrumbModule {\\n}\\n\";","export default \"import { Component, OnDestroy, OnInit } from \\\"@angular/core\\\";\\nimport { ActivatedRoute, Router } from \\\"@angular/router\\\";\\nimport { BreadcrumbItem, BreadcrumbStateService } from \\\"@nova-ui/bits\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-visual-test\\\",\\n    templateUrl: \\\"./breadcrumb-visual-test.component.html\\\",\\n})\\nexport class BreadcrumbVisualTestComponent implements OnInit, OnDestroy {\\n    public breadcrumbSource: Array<BreadcrumbItem>;\\n    private routerSubscription: Subscription;\\n\\n    constructor(private router: Router,\\n                private routerState: ActivatedRoute,\\n                private breadcrumbStateService: BreadcrumbStateService) { }\\n\\n    ngOnInit() {\\n        this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState);\\n        this.routerSubscription = this.breadcrumbStateService.getNavigationSubscription(this.router)\\n            .subscribe(() => this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState));\\n    }\\n\\n    public onNavigation(routerState: string): void {\\n        this.router.navigate([routerState]);\\n    }\\n\\n    public relativeNavigation(routerState: string): void {\\n        this.router.navigate([routerState], {relativeTo: this.routerState});\\n    }\\n\\n    ngOnDestroy() {\\n        this.routerSubscription.unsubscribe();\\n    }\\n}\\n\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-first-level\\\",\\n    template: `\\n        <div class=\\\"container\\\">\\n            <div>\\n                Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi\\n                optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda\\n                est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus\\n                saepe eveniet, ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\\n                a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus\\n                asperiores repellat.\\n            </div>\\n            <button id=\\\"nui-demo-breadcrumb-show-third-view\\\" (click)=\\\"goNext()\\\">Show second level</button>\\n            <router-outlet></router-outlet>\\n        </div>`,\\n})\\nexport class BreadcrumbFirstSubviewLevelComponent {\\n    constructor(private router: Router,\\n                private routerState: ActivatedRoute) {\\n    }\\n\\n    goNext() {\\n        this.router.navigate([\\\"second-subroute\\\"], {relativeTo: this.routerState});\\n    }\\n}\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-second-level\\\",\\n    template: `\\n        <div>\\n            <p>Some data here</p>\\n        </div>`,\\n})\\nexport class BreadcrumbSecondSubviewLevelComponent {\\n}\\n\";","export default \"<nui-breadcrumb id=\\\"nui-demo-breadcrumb-basic\\\"\\n                [items]=\\\"breadcrumbSource\\\"\\n                (navigation)=\\\"onNavigation($event)\\\"></nui-breadcrumb>\\n<div class=\\\"container\\\">\\n    <div i18n class=\\\"nui-text-default\\\">Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem\\n        aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo\\n        enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos,\\n        qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit, amet,\\n        consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt, ut labore et dolore magnam aliquam\\n        quaerat voluptatem.\\n    </div>\\n    <button id=\\\"nui-demo-breadcrumb-show-countries\\\"\\n            nui-button\\n            type=\\\"button\\\"\\n            (click)=\\\"relativeNavigation('countries')\\\"\\n            i18n>Show countries\\n    </button>\\n    <button id=\\\"nui-demo-breadcrumb-show-offices\\\"\\n            nui-button\\n            class=\\\"ml-1\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"relativeNavigation('offices')\\\"\\n            i18n>Show offices\\n    </button>\\n    <router-outlet></router-outlet>\\n\\n</div>\\n\";","export default \"import { Component, OnDestroy, OnInit } from \\\"@angular/core\\\";\\nimport { ActivatedRoute, Router } from \\\"@angular/router\\\";\\nimport { BreadcrumbItem, BreadcrumbStateService } from \\\"@nova-ui/bits\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-basic-example\\\",\\n    templateUrl: \\\"./breadcrumb-basic.example.component.html\\\",\\n})\\nexport class BreadcrumbBasicExampleComponent implements OnInit, OnDestroy {\\n    public breadcrumbSource: Array<BreadcrumbItem>;\\n    private routerSubscription: Subscription;\\n\\n    constructor(private router: Router,\\n                private routerState: ActivatedRoute,\\n                private breadcrumbStateService: BreadcrumbStateService) { }\\n\\n    ngOnInit() {\\n        this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState, \\\"/breadcrumb/\\\");\\n        this.routerSubscription = this.breadcrumbStateService.getNavigationSubscription(this.router)\\n            .subscribe(() => this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState, \\\"/breadcrumb/\\\"));\\n    }\\n\\n    public onNavigation(routerState: string): void {\\n        void this.router.navigate([routerState]);\\n    }\\n\\n    public relativeNavigation(routerState: string): void {\\n        void this.router.navigate([routerState], {relativeTo: this.routerState});\\n    }\\n\\n    ngOnDestroy() {\\n        this.routerSubscription.unsubscribe();\\n    }\\n}\\n\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-first-subview\\\",\\n    template: `\\n        <div class=\\\"container\\\">\\n            <div i18n class=\\\"nui-text-default\\\">\\n                Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi\\n                optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda\\n                est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus\\n                saepe eveniet, ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\\n                a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus\\n                asperiores repellat.\\n            </div>\\n            <button id=\\\"nui-demo-breadcrumb-show-first-country\\\"\\n                    nui-button\\n                    type=\\\"button\\\"\\n                    (click)=\\\"relativeNavigation('usa')\\\"\\n                    i18n>USA</button>\\n            <button id=\\\"nui-demo-breadcrumb-show-second-country\\\"\\n                    class=\\\"ml-1\\\"\\n                    nui-button\\n                    type=\\\"button\\\"\\n                    (click)=\\\"relativeNavigation('ukraine')\\\"\\n                    i18n>Ukraine</button>\\n            <router-outlet></router-outlet>\\n        </div>`,\\n})\\nexport class BreadcrumbCountriesSubviewComponent {\\n    constructor(private router: Router,\\n                private routerState: ActivatedRoute) {\\n    }\\n\\n    public relativeNavigation(routerState: string): void {\\n        this.router.navigate([routerState], {relativeTo: this.routerState});\\n    }\\n}\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-second-subview\\\",\\n    template: `\\n        <div>\\n            <p i18n class=\\\"nui-text-default\\\">Some data about country here</p>\\n        </div>`,\\n})\\nexport class BreadcrumbSingleCountryComponent {\\n}\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-offices-subview\\\",\\n    template: `\\n        <div>\\n            <p i18n class=\\\"nui-text-default\\\">Some data about offices here</p>\\n        </div>`,\\n})\\nexport class BreadcrumbOfficesSubviewComponent {\\n}\\n\";","export default \"<nui-breadcrumb id=\\\"nui-demo-breadcrumb-visual-test\\\"\\n                [items]=\\\"breadcrumbSource\\\"\\n                (navigation)=\\\"onNavigation($event)\\\"></nui-breadcrumb>\\n<div class=\\\"container\\\">\\n    <div>Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem\\n        aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo\\n        enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos,\\n        qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit, amet,\\n        consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt, ut labore et dolore magnam aliquam\\n        quaerat voluptatem.\\n    </div>\\n    <button id=\\\"nui-demo-breadcrumb-show-second-view\\\" (click)=\\\"relativeNavigation('first-subroute')\\\">Show first level</button>\\n    <router-outlet></router-outlet>\\n\\n</div>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-breadcrumb-docs-example\",\n    templateUrl: \"./breadcrumb-docs.example.component.html\",\n})\nexport class BreadcrumbDocsExampleComponent {\n    public routesExample = `{\n        path: \"breadcrumb\",\n        component: components.BreadcrumbDocsExampleComponent,\n        data: { breadcrumb: \"Root\" },\n        children: [\n            {\n                path: \"first-subroute\",\n                component: components.BreadcrumbFirstSubviewComponent,\n                data: {\n                    breadcrumb: \"First Level\",\n                    url: \"https://spacex.com\"\n                },\n                children: [\n                    {\n                        path: \"second-subroute\",\n                        component: components.BreadcrumbSecondSubviewComponent,\n                        data: { breadcrumb: \"Second Level\" },\n                    },\n                ],\n            },\n        ],\n    }`;\n}\n","<p>\n    The <code>&lt;nui-breadcrumb&gt;</code> component represents a structure of nested items. Its state is based on data from each route that\n    takes part in this structure.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiBreadcrumbModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>To use breadcrumb do the following:</p>\n<ol>\n    <li>Place an <code>&lt;nui-breadcrumb&gt;</code> in the template of a top level component.</li>\n    <li>Configure a RoutingModule with a tree structure of routes similar to the following:\n        <nui-example-code language=\"typescript\">{{routesExample}}</nui-example-code>\n    </li>\n    <li>Specify a <code>breadcrumb</code> item name in the <code>route.data</code> object.</li>\n    <li>Optionally, specify a <code>url</code> - the external url for the breadcrumb to navigate (using CTRL + Click, or simple Middle Click events). \n        This setting should also be in the <code>route.data</code> object.<br />\n        <mark>NOTE: regular left mouse click events will still navigate you using the angular router.</mark>\n    </li>\n    <li>Get the initial data set for the breadcrumb via <code><a href=\"../injectables/BreadcrumbStateService.html\" target=\"_blank\">\n        BreadcrumbStateService</a>.getBreadcrumbState(routerState: ActivatedRoute)</code>.\n    </li>\n    <li>Subscribe to router changes using <code><a href=\"../injectables/BreadcrumbStateService.html\" target=\"_blank\">\n        BreadcrumbStateService</a>.getNavigationSubscription(router: Router)</code> and update input data for the\n        <code>BreadcrumbComponent</code>.\n    </li>\n    <li>To perform navigation via <code>&lt;nui-breadcrumb&gt;</code> component items, subscribe to the <code>navigation</code>\n        output. The subscription event payload is an absolute route path that can be used to trigger the navigation.\n    </li>\n</ol>\n<p>\n    In addition to the above, the following example also illustrates how to perform a relative navigation.\n</p>\n<nui-example-wrapper filenamePrefix=\"breadcrumb-basic\" exampleTitle=\"Basic Usage\">\n    <nui-breadcrumb-basic-example></nui-breadcrumb-basic-example>\n</nui-example-wrapper>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BreadcrumbItem, BreadcrumbStateService } from \"@nova-ui/bits\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"nui-breadcrumb-visual-test\",\n    templateUrl: \"./breadcrumb-visual-test.component.html\",\n})\nexport class BreadcrumbVisualTestComponent implements OnInit, OnDestroy {\n    public breadcrumbSource: Array<BreadcrumbItem>;\n    private routerSubscription: Subscription;\n\n    constructor(private router: Router,\n                private routerState: ActivatedRoute,\n                private breadcrumbStateService: BreadcrumbStateService) { }\n\n    ngOnInit() {\n        this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState);\n        this.routerSubscription = this.breadcrumbStateService.getNavigationSubscription(this.router)\n            .subscribe(() => this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState));\n    }\n\n    public onNavigation(routerState: string): void {\n        this.router.navigate([routerState]);\n    }\n\n    public relativeNavigation(routerState: string): void {\n        this.router.navigate([routerState], {relativeTo: this.routerState});\n    }\n\n    ngOnDestroy() {\n        this.routerSubscription.unsubscribe();\n    }\n}\n\n\n@Component({\n    selector: \"nui-breadcrumb-first-level\",\n    template: `\n        <div class=\"container\">\n            <div>\n                Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi\n                optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda\n                est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus\n                saepe eveniet, ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\n                a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus\n                asperiores repellat.\n            </div>\n            <button id=\"nui-demo-breadcrumb-show-third-view\" (click)=\"goNext()\">Show second level</button>\n            <router-outlet></router-outlet>\n        </div>`,\n})\nexport class BreadcrumbFirstSubviewLevelComponent {\n    constructor(private router: Router,\n                private routerState: ActivatedRoute) {\n    }\n\n    goNext() {\n        this.router.navigate([\"second-subroute\"], {relativeTo: this.routerState});\n    }\n}\n\n@Component({\n    selector: \"nui-breadcrumb-second-level\",\n    template: `\n        <div>\n            <p>Some data here</p>\n        </div>`,\n})\nexport class BreadcrumbSecondSubviewLevelComponent {\n}\n","<nui-breadcrumb id=\"nui-demo-breadcrumb-visual-test\"\n                [items]=\"breadcrumbSource\"\n                (navigation)=\"onNavigation($event)\"></nui-breadcrumb>\n<div class=\"container\">\n    <div>Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem\n        aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo\n        enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos,\n        qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit, amet,\n        consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt, ut labore et dolore magnam aliquam\n        quaerat voluptatem.\n    </div>\n    <button id=\"nui-demo-breadcrumb-show-second-view\" (click)=\"relativeNavigation('first-subroute')\">Show first level</button>\n    <router-outlet></router-outlet>\n\n</div>\n","export default \"export * from \\\"./breadcrumb-docs/breadcrumb-docs.example.component\\\";\\nexport * from \\\"./breadcrumb-basic/breadcrumb-basic.example.component\\\";\\nexport * from \\\"./breadcrumb-visual-test/breadcrumb-visual-test.component\\\";\\n\";","export * from \"./breadcrumb-docs/breadcrumb-docs.example.component\";\nexport * from \"./breadcrumb-basic/breadcrumb-basic.example.component\";\nexport * from \"./breadcrumb-visual-test/breadcrumb-visual-test.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-breadcrumb-docs-example\\\",\\n    templateUrl: \\\"./breadcrumb-docs.example.component.html\\\",\\n})\\nexport class BreadcrumbDocsExampleComponent {\\n    public routesExample = `{\\n        path: \\\"breadcrumb\\\",\\n        component: components.BreadcrumbDocsExampleComponent,\\n        data: { breadcrumb: \\\"Root\\\" },\\n        children: [\\n            {\\n                path: \\\"first-subroute\\\",\\n                component: components.BreadcrumbFirstSubviewComponent,\\n                data: {\\n                    breadcrumb: \\\"First Level\\\",\\n                    url: \\\"https://spacex.com\\\"\\n                },\\n                children: [\\n                    {\\n                        path: \\\"second-subroute\\\",\\n                        component: components.BreadcrumbSecondSubviewComponent,\\n                        data: { breadcrumb: \\\"Second Level\\\" },\\n                    },\\n                ],\\n            },\\n        ],\\n    }`;\\n}\\n\";","export default \"<p>\\n    The <code>&lt;nui-breadcrumb&gt;</code> component represents a structure of nested items. Its state is based on data from each route that\\n    takes part in this structure.\\n</p>\\n\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiBreadcrumbModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>To use breadcrumb do the following:</p>\\n<ol>\\n    <li>Place an <code>&lt;nui-breadcrumb&gt;</code> in the template of a top level component.</li>\\n    <li>Configure a RoutingModule with a tree structure of routes similar to the following:\\n        <nui-example-code language=\\\"typescript\\\">{{routesExample}}</nui-example-code>\\n    </li>\\n    <li>Specify a <code>breadcrumb</code> item name in the <code>route.data</code> object.</li>\\n    <li>Optionally, specify a <code>url</code> - the external url for the breadcrumb to navigate (using CTRL + Click, or simple Middle Click events). \\n        This setting should also be in the <code>route.data</code> object.<br />\\n        <mark>NOTE: regular left mouse click events will still navigate you using the angular router.</mark>\\n    </li>\\n    <li>Get the initial data set for the breadcrumb via <code><a href=\\\"../injectables/BreadcrumbStateService.html\\\" target=\\\"_blank\\\">\\n        BreadcrumbStateService</a>.getBreadcrumbState(routerState: ActivatedRoute)</code>.\\n    </li>\\n    <li>Subscribe to router changes using <code><a href=\\\"../injectables/BreadcrumbStateService.html\\\" target=\\\"_blank\\\">\\n        BreadcrumbStateService</a>.getNavigationSubscription(router: Router)</code> and update input data for the\\n        <code>BreadcrumbComponent</code>.\\n    </li>\\n    <li>To perform navigation via <code>&lt;nui-breadcrumb&gt;</code> component items, subscribe to the <code>navigation</code>\\n        output. The subscription event payload is an absolute route path that can be used to trigger the navigation.\\n    </li>\\n</ol>\\n<p>\\n    In addition to the above, the following example also illustrates how to perform a relative navigation.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"breadcrumb-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-breadcrumb-basic-example></nui-breadcrumb-basic-example>\\n</nui-example-wrapper>\\n\";","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BreadcrumbItem, BreadcrumbStateService } from \"@nova-ui/bits\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"nui-breadcrumb-basic-example\",\n    templateUrl: \"./breadcrumb-basic.example.component.html\",\n})\nexport class BreadcrumbBasicExampleComponent implements OnInit, OnDestroy {\n    public breadcrumbSource: Array<BreadcrumbItem>;\n    private routerSubscription: Subscription;\n\n    constructor(private router: Router,\n                private routerState: ActivatedRoute,\n                private breadcrumbStateService: BreadcrumbStateService) { }\n\n    ngOnInit() {\n        this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState, \"/breadcrumb/\");\n        this.routerSubscription = this.breadcrumbStateService.getNavigationSubscription(this.router)\n            .subscribe(() => this.breadcrumbSource = this.breadcrumbStateService.getBreadcrumbState(this.routerState, \"/breadcrumb/\"));\n    }\n\n    public onNavigation(routerState: string): void {\n        void this.router.navigate([routerState]);\n    }\n\n    public relativeNavigation(routerState: string): void {\n        void this.router.navigate([routerState], {relativeTo: this.routerState});\n    }\n\n    ngOnDestroy() {\n        this.routerSubscription.unsubscribe();\n    }\n}\n\n\n@Component({\n    selector: \"nui-breadcrumb-first-subview\",\n    template: `\n        <div class=\"container\">\n            <div i18n class=\"nui-text-default\">\n                Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi\n                optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda\n                est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus\n                saepe eveniet, ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\n                a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus\n                asperiores repellat.\n            </div>\n            <button id=\"nui-demo-breadcrumb-show-first-country\"\n                    nui-button\n                    type=\"button\"\n                    (click)=\"relativeNavigation('usa')\"\n                    i18n>USA</button>\n            <button id=\"nui-demo-breadcrumb-show-second-country\"\n                    class=\"ml-1\"\n                    nui-button\n                    type=\"button\"\n                    (click)=\"relativeNavigation('ukraine')\"\n                    i18n>Ukraine</button>\n            <router-outlet></router-outlet>\n        </div>`,\n})\nexport class BreadcrumbCountriesSubviewComponent {\n    constructor(private router: Router,\n                private routerState: ActivatedRoute) {\n    }\n\n    public relativeNavigation(routerState: string): void {\n        this.router.navigate([routerState], {relativeTo: this.routerState});\n    }\n}\n\n@Component({\n    selector: \"nui-breadcrumb-second-subview\",\n    template: `\n        <div>\n            <p i18n class=\"nui-text-default\">Some data about country here</p>\n        </div>`,\n})\nexport class BreadcrumbSingleCountryComponent {\n}\n\n@Component({\n    selector: \"nui-breadcrumb-offices-subview\",\n    template: `\n        <div>\n            <p i18n class=\"nui-text-default\">Some data about offices here</p>\n        </div>`,\n})\nexport class BreadcrumbOfficesSubviewComponent {\n}\n","<nui-breadcrumb id=\"nui-demo-breadcrumb-basic\"\n                [items]=\"breadcrumbSource\"\n                (navigation)=\"onNavigation($event)\"></nui-breadcrumb>\n<div class=\"container\">\n    <div i18n class=\"nui-text-default\">Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem\n        aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo\n        enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos,\n        qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit, amet,\n        consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt, ut labore et dolore magnam aliquam\n        quaerat voluptatem.\n    </div>\n    <button id=\"nui-demo-breadcrumb-show-countries\"\n            nui-button\n            type=\"button\"\n            (click)=\"relativeNavigation('countries')\"\n            i18n>Show countries\n    </button>\n    <button id=\"nui-demo-breadcrumb-show-offices\"\n            nui-button\n            class=\"ml-1\"\n            type=\"button\"\n            (click)=\"relativeNavigation('offices')\"\n            i18n>Show offices\n    </button>\n    <router-outlet></router-outlet>\n\n</div>\n","var map = {\n\t\"./breadcrumb-basic/breadcrumb-basic.example.component.html\": \"7eMc\",\n\t\"./breadcrumb-basic/breadcrumb-basic.example.component.ts\": \"CCq/\",\n\t\"./breadcrumb-docs/breadcrumb-docs.example.component.html\": \"l2UY\",\n\t\"./breadcrumb-docs/breadcrumb-docs.example.component.ts\": \"flZM\",\n\t\"./breadcrumb-visual-test/breadcrumb-visual-test.component.html\": \"GXaX\",\n\t\"./breadcrumb-visual-test/breadcrumb-visual-test.component.ts\": \"5Eqh\",\n\t\"./breadcrumb.module.ts\": \"2JLQ\",\n\t\"./index.ts\": \"buaM\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"poqR\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiBreadcrumbModule, NuiButtonModule, NuiDocsModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport {\n    BreadcrumbBasicExampleComponent,\n    BreadcrumbCountriesSubviewComponent,\n    BreadcrumbDocsExampleComponent,\n    BreadcrumbFirstSubviewLevelComponent,\n    BreadcrumbOfficesSubviewComponent,\n    BreadcrumbSecondSubviewLevelComponent,\n    BreadcrumbSingleCountryComponent,\n    BreadcrumbVisualTestComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: BreadcrumbDocsExampleComponent,\n        data: {\n            breadcrumb: \"Root\",\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n        children: [\n            {\n                path: \"countries\",\n                component: BreadcrumbCountriesSubviewComponent,\n                data: {\n                    breadcrumb: \"Countries\",\n                    url: \"https://tesla.com\",\n                    showThemeSwitcher: true,\n                },\n                children: [\n                    {\n                        path: \"usa\",\n                        component: BreadcrumbSingleCountryComponent,\n                        data: {\n                            breadcrumb: \"USA\",\n                            showThemeSwitcher: true,\n                        },\n                    },\n                    {\n                        path: \"ukraine\",\n                        component: BreadcrumbSingleCountryComponent,\n                        data: {\n                            breadcrumb: \"Ukraine\",\n                            showThemeSwitcher: true,\n                        },\n                    },\n                ],\n            },\n            {\n                path: \"offices\",\n                component: BreadcrumbOfficesSubviewComponent,\n                data: {\n                    breadcrumb: \"Offices\",\n                    showThemeSwitcher: true,\n                },\n            },\n        ],\n    },\n    {\n        path: \"breadcrumb-visual-test\",\n        component: BreadcrumbVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n            breadcrumb: \"Root\",\n        },\n        children: [\n            {\n                path: \"first-subroute\",\n                component: BreadcrumbFirstSubviewLevelComponent,\n                data: {\n                    breadcrumb: \"First Level\",\n                    \"srlc\": {\n                        \"hideIndicator\": true,\n                    },\n                },\n                children: [\n                    {\n                        path: \"second-subroute\",\n                        component: BreadcrumbSecondSubviewLevelComponent,\n                        data: {\n                            breadcrumb: \"Second Level\",\n                            \"srlc\": {\n                                \"hideIndicator\": true,\n                            },\n                        },\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDocsModule,\n        NuiBreadcrumbModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BreadcrumbDocsExampleComponent,\n        BreadcrumbBasicExampleComponent,\n        BreadcrumbCountriesSubviewComponent,\n        BreadcrumbSingleCountryComponent,\n        BreadcrumbOfficesSubviewComponent,\n        BreadcrumbVisualTestComponent,\n        BreadcrumbFirstSubviewLevelComponent,\n        BreadcrumbSecondSubviewLevelComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class BreadcrumbModule {\n}\n"]}