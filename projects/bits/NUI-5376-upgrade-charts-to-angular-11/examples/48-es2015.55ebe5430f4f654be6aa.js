(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"5O8t":function(e,o,c){"use strict";c.r(o),c.d(o,"CheckboxGroupModule",(function(){return w}));var t=c("8VHZ"),n=c("Fk62"),i=c("U04U"),a=c("Ub9n"),s=c("ZXzp"),l=c("Yvf7"),b=c("lFDV");function u(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",13),a.Oc(1),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("checked",c.isChecked(e)),a.Bb(1),a.Qc(" ",e," ")}}function r(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",14),a.Oc(1),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("hint",c.hints.indexOf(e)>=0?c.hints[c.hints.indexOf(e)]:null)("checked",c.isChecked(e)),a.Bb(1),a.Qc(" ",e," ")}}function h(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",15),a.Oc(1),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("checked",c.isChecked(e)),a.Bb(1),a.Qc(" ",e," ")}}let p=(()=>{class e{constructor(e){this.formBuilder=e,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Nb(t.c))},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-test-example"]],decls:24,vars:26,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","checkboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"],[3,"value","checked"]],template:function(e,o){1&e&&(a.Tb(0,"div",0),a.Tb(1,"div",1),a.Tb(2,"nui-checkbox-group",2),a.Mc(3,u,2,3,"nui-checkbox",3),a.Tb(4,"nui-checkbox",4),a.Oc(5),a.Sb(),a.Sb(),a.Sb(),a.Tb(6,"div",5),a.Tb(7,"nui-checkbox-group",6),a.Mc(8,r,2,4,"nui-checkbox",7),a.Sb(),a.Sb(),a.Tb(9,"div",5),a.Tb(10,"form",8),a.Tb(11,"nui-checkbox-group",9),a.Mc(12,h,2,3,"nui-checkbox",10),a.Sb(),a.Sb(),a.Sb(),a.Tb(13,"div",5),a.Tb(14,"form",8),a.Tb(15,"nui-checkbox-group",11),a.Tb(16,"nui-checkbox",12),a.Oc(17),a.Sb(),a.Tb(18,"nui-checkbox",12),a.Oc(19),a.Sb(),a.Tb(20,"nui-checkbox",12),a.Oc(21),a.Sb(),a.Tb(22,"nui-checkbox",12),a.Oc(23),a.Sb(),a.Sb(),a.Sb(),a.Sb(),a.Sb()),2&e&&(a.Bb(2),a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables),a.Bb(1),a.sc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),a.Bb(1),a.Pc(o.disabledOne),a.Bb(2),a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables),a.Bb(2),a.sc("formGroup",o.testForm),a.Bb(2),a.sc("ngForOf",o.vegetables),a.Bb(2),a.sc("formGroup",o.testForm),a.Bb(2),a.sc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),a.Bb(1),a.Qc(" ",o.vegetables[0],""),a.Bb(1),a.sc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),a.Bb(1),a.Qc(" ",o.vegetables[1],""),a.Bb(1),a.sc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),a.Bb(1),a.Qc(" ",o.vegetables[2],""),a.Bb(1),a.sc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),a.Bb(1),a.Qc(" ",o.vegetables[3],""))},directives:[s.a,l.s,b.a,t.v,t.n,t.h,t.m,t.f],encapsulation:2}),e})();var d=c("WDcu");function m(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",2),a.Zb(1,3),a.Oc(2),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("checked",c.isChecked(e)),a.Bb(2),a.Qc(" ",e," ")}}let g=(()=>{class e{constructor(e){this.toastService=e,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}onValueChange(e){this.toastService.success({message:$localize`Selected checkboxes: `+e})}}return e.\u0275fac=function(o){return new(o||e)(a.Nb(i.Pb))},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){return[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],[3,"value","checked",4,"ngFor","ngForOf",6,"hint"],[3,"value","checked",6,"hint"],["hint",$localize`:␟ba785d6cbb33a003a3ce1d20077ba67264374284␟829155627086234075:This is some help text`]]},template:function(e,o){1&e&&(a.Tb(0,"nui-checkbox-group",0),a.hc("valuesChange",(function(e){return o.onValueChange(e)})),a.Mc(1,m,3,3,"nui-checkbox",1),a.Sb()),2&e&&(a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables))},directives:[s.a,l.s,b.a],encapsulation:2}),e})();function x(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",2),a.Oc(1),a.Sb()),2&e){const e=o.$implicit;a.sc("value",e),a.Bb(1),a.Qc(" ",e," ")}}let k=(()=>{class e{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&(a.Tb(0,"nui-checkbox-group",0),a.Mc(1,x,2,2,"nui-checkbox",1),a.Sb()),2&e&&(a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables))},directives:[s.a,l.s,b.a],encapsulation:2}),e})();var v=c("T50m");function f(e,o){1&e&&(a.Tb(0,"nui-message",7),a.Tb(1,"b"),a.Xb(2,8),a.Sb(),a.Sb()),2&e&&a.sc("allowDismiss",!0)}function C(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",9),a.Oc(1),a.Sb()),2&e){const e=o.$implicit;a.sc("value",e),a.Bb(1),a.Qc(" ",e," ")}}let O=(()=>{class e{constructor(e,o){this.formBuilder=e,this.toastService=o,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}ngOnInit(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[t.u.required,t.u.minLength(3)])})}onSubmit(){console.log(this.myForm),this.toastService.success({message:$localize`Your form is valid!`})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Nb(t.c),a.Nb(i.Pb))},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){return[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],$localize`:␟71c77bb8cecdf11ec3eead24dd1ba506573fa9cd␟935187492052582731:Submit`,["type","critical",3,"allowDismiss"],$localize`:␟aaf9b8331666795542f417fe39c78014513ca737␟3498101055154698277:Select minimum 3 checkboxes!`,[3,"value"]]},template:function(e,o){1&e&&(a.Tb(0,"form",0),a.hc("submit",(function(){return o.onSubmit()})),a.Tb(1,"div",1),a.Mc(2,f,3,1,"nui-message",2),a.Tb(3,"nui-checkbox-group",3),a.Mc(4,C,2,2,"nui-checkbox",4),a.Sb(),a.Sb(),a.Tb(5,"button",5),a.Xb(6,6),a.Sb(),a.Sb()),2&e&&(a.sc("formGroup",o.myForm),a.Bb(2),a.sc("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),a.Bb(2),a.sc("ngForOf",o.vegetables),a.Bb(1),a.sc("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[t.v,t.n,t.h,l.t,s.a,t.m,t.f,t.t,l.s,v.a,b.a],encapsulation:2}),e})();function T(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",2),a.Oc(1),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("hint",c.hints.indexOf(e)>=0?c.hints[c.hints.indexOf(e)]:null)("checked",c.isChecked(e)),a.Bb(1),a.Qc(" ",e," ")}}let S=(()=>{class e{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(a.Tb(0,"nui-checkbox-group",0),a.Mc(1,T,2,4,"nui-checkbox",1),a.Sb()),2&e&&(a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables))},directives:[s.a,l.s,b.a],encapsulation:2}),e})();function B(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",14),a.Oc(1),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("checked",c.isChecked(e)),a.Bb(1),a.Qc(" ",e," ")}}function F(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",15),a.Oc(1),a.Sb()),2&e){const e=o.$implicit;a.sc("value",e),a.Bb(1),a.Qc(" ",e," ")}}function G(e,o){if(1&e&&(a.Tb(0,"nui-checkbox",16),a.Oc(1),a.Sb()),2&e){const e=o.$implicit,c=a.lc();a.sc("value",e)("checked",c.isChecked(e)),a.Bb(1),a.Qc(" ",e," ")}}const V=[{path:"",component:(()=>{class e{}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&(a.Tb(0,"h2"),a.Oc(1,"Required Modules"),a.Sb(),a.Tb(2,"ul"),a.Tb(3,"li"),a.Tb(4,"code"),a.Oc(5,"NuiCheckboxModule"),a.Sb(),a.Sb(),a.Sb(),a.Tb(6,"h2"),a.Oc(7,"Basic Usage"),a.Sb(),a.Tb(8,"p"),a.Oc(9," The "),a.Tb(10,"code"),a.Oc(11,"<nui-checkbox-group>"),a.Sb(),a.Oc(12," component is used for combining "),a.Tb(13,"code"),a.Oc(14,"<nui-checkbox>"),a.Sb(),a.Oc(15," components into a group. Use the "),a.Tb(16,"code"),a.Oc(17,"name"),a.Sb(),a.Oc(18,' input to set the "name" attribute for the inner '),a.Tb(19,"code"),a.Oc(20,"<nui-checkbox>"),a.Sb(),a.Oc(21," input elements. To get the values of the "),a.Tb(22,"code"),a.Oc(23,"<nui-checkbox>"),a.Sb(),a.Oc(24," child components use the "),a.Tb(25,"code"),a.Oc(26,"values"),a.Sb(),a.Oc(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),a.Tb(28,"code"),a.Oc(29,"(valuesChange)"),a.Sb(),a.Oc(30," output.\n"),a.Sb(),a.Tb(31,"nui-example-wrapper",0),a.Ob(32,"nui-checkbox-group-basic-example"),a.Sb(),a.Tb(33,"h2"),a.Oc(34,"Inline"),a.Sb(),a.Tb(35,"p"),a.Oc(36," Use the "),a.Tb(37,"code"),a.Oc(38,"nui-checkbox-group-inline"),a.Sb(),a.Oc(39," class to display checkbox group inline.\n"),a.Sb(),a.Tb(40,"nui-example-wrapper",1),a.Ob(41,"nui-checkbox-group-inline-example"),a.Sb(),a.Tb(42,"h2"),a.Oc(43,"Part of Form"),a.Sb(),a.Tb(44,"p"),a.Tb(45,"code"),a.Oc(46,"<nui-checkbox-group>"),a.Sb(),a.Oc(47," can be used in reactive forms.\n"),a.Sb(),a.Tb(48,"nui-example-wrapper",2),a.Ob(49,"nui-checkbox-group-in-form-example"),a.Sb(),a.Tb(50,"h2"),a.Oc(51,"Justified"),a.Sb(),a.Tb(52,"p"),a.Oc(53," To justify "),a.Tb(54,"code"),a.Oc(55,"<nui-checkbox>"),a.Sb(),a.Oc(56," to the width of "),a.Tb(57,"code"),a.Oc(58,"<nui-checkbox-group>"),a.Sb(),a.Oc(59," (or simply parent element, in case "),a.Tb(60,"code"),a.Oc(61,"<nui-checkbox>"),a.Sb(),a.Oc(62," is used not as a part of "),a.Tb(63,"code"),a.Oc(64,"<nui-checkbox-group>"),a.Sb(),a.Oc(65,"), add "),a.Tb(66,"code"),a.Oc(67,"nui-checkbox--justified"),a.Sb(),a.Oc(68," class to the "),a.Tb(69,"code"),a.Oc(70,"<nui-checkbox>"),a.Sb(),a.Oc(71,".\n"),a.Sb(),a.Tb(72,"nui-example-wrapper",3),a.Ob(73,"nui-checkbox-group-justified-example"),a.Sb())},directives:[d.a,g,k,O,S],encapsulation:2}),e})(),data:{srlc:{stage:i.Jb.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(()=>{class e{constructor(e){this.formBuilder=e,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Nb(t.c))},e.\u0275cmp=a.Hb({type:e,selectors:[["nui-checkbox-group-visual-test"]],decls:36,vars:26,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"]],template:function(e,o){1&e&&(a.Tb(0,"div",0),a.Tb(1,"div",1),a.Tb(2,"div",2),a.Tb(3,"h3"),a.Oc(4,"Basic Checkbox-Group with Hint Text"),a.Sb(),a.Tb(5,"nui-checkbox-group",3),a.Mc(6,B,2,3,"nui-checkbox",4),a.Tb(7,"nui-checkbox",5),a.Oc(8),a.Sb(),a.Sb(),a.Ob(9,"hr"),a.Sb(),a.Tb(10,"div",2),a.Tb(11,"h3"),a.Oc(12,"Inline Checkbox-Group"),a.Sb(),a.Tb(13,"nui-checkbox-group",6),a.Mc(14,F,2,2,"nui-checkbox",7),a.Sb(),a.Ob(15,"hr"),a.Sb(),a.Ob(16,"div",8),a.Tb(17,"div",2),a.Tb(18,"h3"),a.Oc(19,"Justified Checkbox-Group"),a.Sb(),a.Tb(20,"nui-checkbox-group",9),a.Mc(21,G,2,3,"nui-checkbox",10),a.Sb(),a.Ob(22,"hr"),a.Sb(),a.Tb(23,"div",2),a.Tb(24,"h3"),a.Oc(25,"Disabled checkboxes within the form"),a.Sb(),a.Tb(26,"form",11),a.Tb(27,"nui-checkbox-group",12),a.Tb(28,"nui-checkbox",13),a.Oc(29),a.Sb(),a.Tb(30,"nui-checkbox",13),a.Oc(31),a.Sb(),a.Tb(32,"nui-checkbox",13),a.Oc(33),a.Sb(),a.Tb(34,"nui-checkbox",13),a.Oc(35),a.Sb(),a.Sb(),a.Sb(),a.Sb(),a.Sb(),a.Sb()),2&e&&(a.Bb(5),a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables),a.Bb(1),a.sc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),a.Bb(1),a.Pc(o.disabledOne),a.Bb(5),a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables),a.Bb(6),a.sc("values",o.selectedVegetables),a.Bb(1),a.sc("ngForOf",o.vegetables),a.Bb(5),a.sc("formGroup",o.testForm),a.Bb(2),a.sc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),a.Bb(1),a.Qc(" ",o.vegetables[0],""),a.Bb(1),a.sc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),a.Bb(1),a.Qc(" ",o.vegetables[1],""),a.Bb(1),a.sc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),a.Bb(1),a.Qc(" ",o.vegetables[2],""),a.Bb(1),a.sc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),a.Bb(1),a.Qc(" ",o.vegetables[3],""))},directives:[s.a,l.s,b.a,t.v,t.n,t.h,t.m,t.f],encapsulation:2}),e})(),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:p,data:{srlc:{hideIndicator:!0}}}];let w=(()=>{class e{}return e.\u0275mod=a.Lb({type:e}),e.\u0275inj=a.Kb({factory:function(o){return new(o||e)},providers:[{provide:i.f,useFactory:()=>c("NAmc")}],imports:[[i.w,i.G,t.j,t.s,i.v,n.g.forChild(V)],n.g]}),e})()},"6w1q":function(e,o,c){"use strict";c.r(o),o.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},AHj0:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},BGGx:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},E5Rp:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},I1CO:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},JpN6:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},Meyd:function(e,o,c){"use strict";c.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},NAmc:function(e,o,c){var t={"./checkbox-group-basic/checkbox-group-basic.example.component.html":"BGGx","./checkbox-group-basic/checkbox-group-basic.example.component.ts":"E5Rp","./checkbox-group-docs/checkbox-group-docs.example.component.html":"e4QH","./checkbox-group-docs/checkbox-group-docs.example.component.ts":"RbIe","./checkbox-group-in-form/checkbox-group-in-form.example.component.html":"b2GL","./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":"Meyd","./checkbox-group-inline/checkbox-group-inline.example.component.html":"qH3u","./checkbox-group-inline/checkbox-group-inline.example.component.ts":"AHj0","./checkbox-group-justified/checkbox-group-justified.example.component.html":"TQG8","./checkbox-group-justified/checkbox-group-justified.example.component.ts":"eDV4","./checkbox-group-test/checkbox-group-test.component.html":"cPnd","./checkbox-group-test/checkbox-group-test.component.ts":"I1CO","./checkbox-group-visual-test/checkbox-group-visual-test.component.html":"Q2ZU","./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":"JpN6","./checkbox-group.module.ts":"whV8","./index.ts":"6w1q"};function n(e){var o=i(e);return c(o)}function i(e){if(!c.o(t,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}n.keys=function(){return Object.keys(t)},n.resolve=i,e.exports=n,n.id="NAmc"},Q2ZU:function(e,o,c){"use strict";c.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="checkboxGroup2">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n</div>\n'},RbIe:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},TQG8:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},b2GL:function(e,o,c){"use strict";c.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},cPnd:function(e,o,c){"use strict";c.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="checkboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},e4QH:function(e,o,c){"use strict";c.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},eDV4:function(e,o,c){"use strict";c.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},qH3u:function(e,o,c){"use strict";c.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},whV8:function(e,o,c){"use strict";c.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'}}]);