(self.webpackChunk_nova_ui_bits=self.webpackChunk_nova_ui_bits||[]).push([[681],{94978:function(e,o,n){var t={"./checkbox-group-basic/checkbox-group-basic.example.component.html":38218,"./checkbox-group-basic/checkbox-group-basic.example.component.ts":41708,"./checkbox-group-docs/checkbox-group-docs.example.component.html":48600,"./checkbox-group-docs/checkbox-group-docs.example.component.ts":52023,"./checkbox-group-in-form/checkbox-group-in-form.example.component.html":99415,"./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":87782,"./checkbox-group-inline/checkbox-group-inline.example.component.html":62359,"./checkbox-group-inline/checkbox-group-inline.example.component.ts":2661,"./checkbox-group-justified/checkbox-group-justified.example.component.html":82620,"./checkbox-group-justified/checkbox-group-justified.example.component.ts":43725,"./checkbox-group-test/checkbox-group-test.component.html":86127,"./checkbox-group-test/checkbox-group-test.component.ts":97822,"./checkbox-group-visual-test/checkbox-group-visual-test.component.html":14308,"./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":57559,"./checkbox-group.module.ts":11753,"./index.ts":60792,"components/demo/checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.html":38218,"components/demo/checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.ts":41708,"components/demo/checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.html":48600,"components/demo/checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.ts":52023,"components/demo/checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.html":99415,"components/demo/checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.ts":87782,"components/demo/checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.html":62359,"components/demo/checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.ts":2661,"components/demo/checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.html":82620,"components/demo/checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.ts":43725,"components/demo/checkbox-group/checkbox-group-test/checkbox-group-test.component.html":86127,"components/demo/checkbox-group/checkbox-group-test/checkbox-group-test.component.ts":97822,"components/demo/checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.html":14308,"components/demo/checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.ts":57559,"components/demo/checkbox-group/checkbox-group.module.ts":11753,"components/demo/checkbox-group/index.ts":60792};function c(e){var o=i(e);return n(o)}function i(e){if(!n.o(t,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}c.keys=function(){return Object.keys(t)},c.resolve=i,e.exports=c,c.id=94978},60681:function(e,o,n){"use strict";n.r(o),n.d(o,{CheckboxGroupModule:function(){return O}});var t=n(3679),c=n(99763),i=n(14347),a=n(33018),s=n(36822),u=n(38583),l=n(56573),r=n(74293);function b(e,o){1&e&&(a.TgZ(0,"nui-message",7),a.TgZ(1,"b"),a.SDv(2,8),a.qZA(),a.qZA()),2&e&&a.Q6J("allowDismiss",!0)}function h(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",9),a._uU(1),a.qZA()),2&e){const e=o.$implicit;a.Q6J("value",e),a.xp6(1),a.hij(" ",e," ")}}let p=(()=>{class e{constructor(e,o){this.formBuilder=e,this.toastService=o,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}ngOnInit(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[t.kI.required,t.kI.minLength(3)])})}onSubmit(){console.log(this.myForm),this.toastService.success({message:$localize`Your form is valid!`})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Y36(t.qu),a.Y36(i.klp))},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){let e,o;return e=$localize`:␟71c77bb8cecdf11ec3eead24dd1ba506573fa9cd␟935187492052582731:Submit`,o=$localize`:␟aaf9b8331666795542f417fe39c78014513ca737␟3498101055154698277:Select minimum 3 checkboxes!`,[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],e,["type","critical",3,"allowDismiss"],o,[3,"value"]]},template:function(e,o){1&e&&(a.TgZ(0,"form",0),a.NdJ("submit",function(){return o.onSubmit()}),a.TgZ(1,"div",1),a.YNc(2,b,3,1,"nui-message",2),a.TgZ(3,"nui-checkbox-group",3),a.YNc(4,h,2,2,"nui-checkbox",4),a.qZA(),a.qZA(),a.TgZ(5,"button",5),a.SDv(6,6),a.qZA(),a.qZA()),2&e&&(a.Q6J("formGroup",o.myForm),a.xp6(2),a.Q6J("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),a.xp6(2),a.Q6J("ngForOf",o.vegetables),a.xp6(1),a.Q6J("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[t._Y,t.JL,t.sg,u.O5,s.A,t.JJ,t.u,t.Q7,u.sg,r.r,l.b],encapsulation:2}),e})();function d(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",12),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}function g(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",13),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("hint",n.hints.indexOf(e)>=0?n.hints[n.hints.indexOf(e)]:null)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}let m=(()=>{class e{constructor(e){this.formBuilder=e,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Y36(t.qu))},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-test-example"]],decls:22,vars:24,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["id","nui-demo-checkbox-group-part-of-form"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(a.TgZ(0,"div",0),a.TgZ(1,"div",1),a.TgZ(2,"nui-checkbox-group",2),a.YNc(3,d,2,3,"nui-checkbox",3),a.TgZ(4,"nui-checkbox",4),a._uU(5),a.qZA(),a.qZA(),a.qZA(),a.TgZ(6,"div",5),a.TgZ(7,"nui-checkbox-group",6),a.YNc(8,g,2,4,"nui-checkbox",7),a.qZA(),a.qZA(),a.TgZ(9,"div",5),a.TgZ(10,"form",8),a.TgZ(11,"nui-checkbox-group",9),a.TgZ(12,"nui-checkbox",10),a._uU(13),a.qZA(),a.TgZ(14,"nui-checkbox",10),a._uU(15),a.qZA(),a.TgZ(16,"nui-checkbox",10),a._uU(17),a.qZA(),a.TgZ(18,"nui-checkbox",10),a._uU(19),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.TgZ(20,"div",1),a._UZ(21,"nui-checkbox-group-in-form-example",11),a.qZA(),a.qZA()),2&e&&(a.xp6(2),a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables),a.xp6(1),a.Q6J("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),a.xp6(1),a.Oqu(o.disabledOne),a.xp6(2),a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables),a.xp6(2),a.Q6J("formGroup",o.testForm),a.xp6(2),a.Q6J("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),a.xp6(1),a.hij(" ",o.vegetables[0],""),a.xp6(1),a.Q6J("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),a.xp6(1),a.hij(" ",o.vegetables[1],""),a.xp6(1),a.Q6J("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),a.xp6(1),a.hij(" ",o.vegetables[2],""),a.xp6(1),a.Q6J("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),a.xp6(1),a.hij(" ",o.vegetables[3],""))},directives:[s.A,u.sg,l.b,t._Y,t.JL,t.sg,t.JJ,t.u,p],encapsulation:2}),e})();var x=n(70132);function k(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",2),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}let v=(()=>{class e{constructor(e){this.toastService=e,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}onValueChange(e){this.toastService.success({message:$localize`Selected checkboxes: `+e})}}return e.\u0275fac=function(o){return new(o||e)(a.Y36(i.klp))},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){let e;return e=$localize`:␟ba785d6cbb33a003a3ce1d20077ba67264374284␟829155627086234075:This is some help text`,[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],["hint",e,3,"value","checked",4,"ngFor","ngForOf"],["hint",e,3,"value","checked"]]},template:function(e,o){1&e&&(a.TgZ(0,"nui-checkbox-group",0),a.NdJ("valuesChange",function(e){return o.onValueChange(e)}),a.YNc(1,k,2,3,"nui-checkbox",1),a.qZA()),2&e&&(a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables))},directives:[s.A,u.sg,l.b],encapsulation:2}),e})();function f(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",2),a._uU(1),a.qZA()),2&e){const e=o.$implicit;a.Q6J("value",e),a.xp6(1),a.hij(" ",e," ")}}let Z=(()=>{class e{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&(a.TgZ(0,"nui-checkbox-group",0),a.YNc(1,f,2,2,"nui-checkbox",1),a.qZA()),2&e&&(a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables))},directives:[s.A,u.sg,l.b],encapsulation:2}),e})();function C(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",2),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("hint",n.hints.indexOf(e)>=0?n.hints[n.hints.indexOf(e)]:null)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}let T=(()=>{class e{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&(a.TgZ(0,"nui-checkbox-group",0),a.YNc(1,C,2,4,"nui-checkbox",1),a.qZA()),2&e&&(a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables))},directives:[s.A,u.sg,l.b],encapsulation:2}),e})();function A(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",17),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}function q(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",18),a._uU(1),a.qZA()),2&e){const e=o.$implicit;a.Q6J("value",e),a.xp6(1),a.hij(" ",e," ")}}function F(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",19),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}function U(e,o){if(1&e&&(a.TgZ(0,"nui-checkbox",20),a._uU(1),a.qZA()),2&e){const e=o.$implicit,n=a.oxw();a.Q6J("value",e)("checked",n.isChecked(e)),a.xp6(1),a.hij(" ",e," ")}}const _=[{path:"",component:(()=>{class e{}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&(a.TgZ(0,"h2"),a._uU(1,"Required Modules"),a.qZA(),a.TgZ(2,"ul"),a.TgZ(3,"li"),a.TgZ(4,"code"),a._uU(5,"NuiCheckboxModule"),a.qZA(),a.qZA(),a.qZA(),a.TgZ(6,"h2"),a._uU(7,"Basic Usage"),a.qZA(),a.TgZ(8,"p"),a._uU(9," The "),a.TgZ(10,"code"),a._uU(11,"<nui-checkbox-group>"),a.qZA(),a._uU(12," component is used for combining "),a.TgZ(13,"code"),a._uU(14,"<nui-checkbox>"),a.qZA(),a._uU(15," components into a group. Use the "),a.TgZ(16,"code"),a._uU(17,"name"),a.qZA(),a._uU(18,' input to set the "name" attribute for the inner '),a.TgZ(19,"code"),a._uU(20,"<nui-checkbox>"),a.qZA(),a._uU(21," input elements. To get the values of the "),a.TgZ(22,"code"),a._uU(23,"<nui-checkbox>"),a.qZA(),a._uU(24," child components use the "),a.TgZ(25,"code"),a._uU(26,"values"),a.qZA(),a._uU(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),a.TgZ(28,"code"),a._uU(29,"(valuesChange)"),a.qZA(),a._uU(30," output.\n"),a.qZA(),a.TgZ(31,"nui-example-wrapper",0),a._UZ(32,"nui-checkbox-group-basic-example"),a.qZA(),a.TgZ(33,"h2"),a._uU(34,"Inline"),a.qZA(),a.TgZ(35,"p"),a._uU(36," Use the "),a.TgZ(37,"code"),a._uU(38,"nui-checkbox-group-inline"),a.qZA(),a._uU(39," class to display checkbox group inline.\n"),a.qZA(),a.TgZ(40,"nui-example-wrapper",1),a._UZ(41,"nui-checkbox-group-inline-example"),a.qZA(),a.TgZ(42,"h2"),a._uU(43,"Part of Form"),a.qZA(),a.TgZ(44,"p"),a.TgZ(45,"code"),a._uU(46,"<nui-checkbox-group>"),a.qZA(),a._uU(47," can be used in reactive forms.\n"),a.qZA(),a.TgZ(48,"nui-example-wrapper",2),a._UZ(49,"nui-checkbox-group-in-form-example"),a.qZA(),a.TgZ(50,"h2"),a._uU(51,"Justified"),a.qZA(),a.TgZ(52,"p"),a._uU(53," To justify "),a.TgZ(54,"code"),a._uU(55,"<nui-checkbox>"),a.qZA(),a._uU(56," to the width of "),a.TgZ(57,"code"),a._uU(58,"<nui-checkbox-group>"),a.qZA(),a._uU(59," (or simply parent element, in case "),a.TgZ(60,"code"),a._uU(61,"<nui-checkbox>"),a.qZA(),a._uU(62," is used not as a part of "),a.TgZ(63,"code"),a._uU(64,"<nui-checkbox-group>"),a.qZA(),a._uU(65,"), add "),a.TgZ(66,"code"),a._uU(67,"nui-checkbox--justified"),a.qZA(),a._uU(68," class to the "),a.TgZ(69,"code"),a._uU(70,"<nui-checkbox>"),a.qZA(),a._uU(71,".\n"),a.qZA(),a.TgZ(72,"nui-example-wrapper",3),a._UZ(73,"nui-checkbox-group-justified-example"),a.qZA())},directives:[x.h,v,Z,p,T],encapsulation:2}),e})(),data:{srlc:{stage:i.We9.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(()=>{class e{constructor(e){this.formBuilder=e,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(e){return this.selectedVegetables.indexOf(e)>-1}}return e.\u0275fac=function(o){return new(o||e)(a.Y36(t.qu))},e.\u0275cmp=a.Xpm({type:e,selectors:[["nui-checkbox-group-visual-test"]],decls:42,vars:28,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","enabledCheckboxGroup"],[3,"value","disabled","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","disabledCheckboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"],[3,"value","checked"]],template:function(e,o){1&e&&(a.TgZ(0,"div",0),a.TgZ(1,"div",1),a.TgZ(2,"div",2),a.TgZ(3,"h3"),a._uU(4,"Basic Checkbox-Group with Hint Text"),a.qZA(),a.TgZ(5,"nui-checkbox-group",3),a.YNc(6,A,2,3,"nui-checkbox",4),a.TgZ(7,"nui-checkbox",5),a._uU(8),a.qZA(),a.qZA(),a._UZ(9,"hr"),a.qZA(),a.TgZ(10,"div",2),a.TgZ(11,"h3"),a._uU(12,"Inline Checkbox-Group"),a.qZA(),a.TgZ(13,"nui-checkbox-group",6),a.YNc(14,q,2,2,"nui-checkbox",7),a.qZA(),a._UZ(15,"hr"),a.qZA(),a._UZ(16,"div",8),a.TgZ(17,"div",2),a.TgZ(18,"h3"),a._uU(19,"Justified Checkbox-Group"),a.qZA(),a.TgZ(20,"nui-checkbox-group",9),a.YNc(21,F,2,3,"nui-checkbox",10),a.qZA(),a._UZ(22,"hr"),a.qZA(),a.TgZ(23,"div",2),a.TgZ(24,"h3"),a._uU(25,"Disabled checkboxes within the form"),a.qZA(),a.TgZ(26,"form",11),a.TgZ(27,"nui-checkbox-group",12),a.TgZ(28,"nui-checkbox",13),a._uU(29),a.qZA(),a.TgZ(30,"nui-checkbox",13),a._uU(31),a.qZA(),a.TgZ(32,"nui-checkbox",13),a._uU(33),a.qZA(),a.TgZ(34,"nui-checkbox",13),a._uU(35),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.TgZ(36,"div",14),a.TgZ(37,"h3"),a._uU(38,"Disabled checkboxes within the disabled form"),a.qZA(),a.TgZ(39,"form",11),a.TgZ(40,"nui-checkbox-group",15),a.YNc(41,U,2,3,"nui-checkbox",16),a.qZA(),a.qZA(),a.qZA(),a.qZA()),2&e&&(a.xp6(5),a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables),a.xp6(1),a.Q6J("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),a.xp6(1),a.Oqu(o.disabledOne),a.xp6(5),a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables),a.xp6(6),a.Q6J("values",o.selectedVegetables),a.xp6(1),a.Q6J("ngForOf",o.vegetables),a.xp6(5),a.Q6J("formGroup",o.testForm),a.xp6(2),a.Q6J("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),a.xp6(1),a.hij(" ",o.vegetables[0],""),a.xp6(1),a.Q6J("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),a.xp6(1),a.hij(" ",o.vegetables[1],""),a.xp6(1),a.Q6J("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),a.xp6(1),a.hij(" ",o.vegetables[2],""),a.xp6(1),a.Q6J("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),a.xp6(1),a.hij(" ",o.vegetables[3],""),a.xp6(4),a.Q6J("formGroup",o.testForm),a.xp6(2),a.Q6J("ngForOf",o.vegetables))},directives:[s.A,u.sg,l.b,t._Y,t.JL,t.sg,t.JJ,t.u],encapsulation:2}),e})(),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:m,data:{srlc:{hideIndicator:!0}}}];let O=(()=>{class e{}return e.\u0275fac=function(o){return new(o||e)},e.\u0275mod=a.oAB({type:e}),e.\u0275inj=a.cJS({providers:[{provide:i.V3$,useFactory:()=>n(94978)}],imports:[[i.LRI,i.vvu,t.u5,t.UX,i.Az_,c.Bz.forChild(_)],c.Bz]}),e})()},38218:function(e,o,n){"use strict";n.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},41708:function(e,o,n){"use strict";n.r(o),o.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},48600:function(e,o,n){"use strict";n.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},52023:function(e,o,n){"use strict";n.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},99415:function(e,o,n){"use strict";n.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},87782:function(e,o,n){"use strict";n.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},62359:function(e,o,n){"use strict";n.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},2661:function(e,o,n){"use strict";n.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},82620:function(e,o,n){"use strict";n.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},43725:function(e,o,n){"use strict";n.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},86127:function(e,o,n){"use strict";n.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group-in-form-example id="nui-demo-checkbox-group-part-of-form"></nui-checkbox-group-in-form-example>\n    </div>\n</div>\n'},97822:function(e,o,n){"use strict";n.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},14308:function(e,o,n){"use strict";n.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="enabledCheckboxGroup">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <h3>Disabled checkboxes within the disabled form</h3>\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="disabledCheckboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},57559:function(e,o,n){"use strict";n.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},11753:function(e,o,n){"use strict";n.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'},60792:function(e,o,n){"use strict";n.r(o),o.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'}}]);