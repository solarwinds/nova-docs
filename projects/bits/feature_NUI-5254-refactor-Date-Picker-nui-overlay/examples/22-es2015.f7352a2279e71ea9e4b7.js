(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"28xp":function(e,n,t){"use strict";t.r(n),n.default='import { AfterViewInit, Component, ViewChild } from "@angular/core";\nimport { OverlayComponent } from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\n\n@Component({\n    selector: "nui-overlay-simple-usage-example",\n    templateUrl: "./overlay-simple-usage.example.component.html",\n})\nexport class OverlaySimpleExampleComponent implements AfterViewInit {\n    private destroy$: Subject<any> = new Subject();\n\n    @ViewChild(OverlayComponent) public overlay: OverlayComponent;\n\n    ngAfterViewInit() {\n        this.overlay.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(_ => this.overlay.hide());\n    }\n}\n'},"7YjB":function(e,n,t){"use strict";t.r(n),n.default='import { FlexibleConnectedPositionStrategy, OverlayRef } from "@angular/cdk/overlay";\nimport { Component, TemplateRef, ViewChild, ViewEncapsulation } from "@angular/core";\nimport { DialogService, NuiDialogRef, OverlayComponent } from "@nova-ui/bits";\n\n@Component({\n  selector: "nui-overlay-custom-dialog",\n  templateUrl: "./overlay-custom-dialog.component.html",\n  styleUrls: ["./overlay-custom-dialog.component.less"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayCustomDialogComponent {\n    private overlayRef: OverlayRef;\n    private activeDialog: NuiDialogRef;\n\n    @ViewChild("overlay1") overlay1: OverlayComponent;\n    @ViewChild("overlay2") overlay2: OverlayComponent;\n\n    constructor(private dialogService: DialogService) { }\n\n    triggerOverlay(ref: HTMLElement, overlay: OverlayComponent) {\n        // Here we set the new element reference to the overlay conponent. The overlay will now connect to it\n        overlay.toggleReference = ref;\n        // Toggling the overlay to get an access to the \'overlayRef\'\n        overlay.toggle();\n\n        this.overlayRef = overlay.getOverlayRef();\n        // Here we update the positions for the overlay. By default, the overlay service connects the overlay to the bottom-left\n        // corner of the toggle reference element. We change this behavior here by setting new positions, since we want overlay to\n        // stick to the upper-top corner of the parent container\n        (this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy).withPositions([{\n            originX: "start",\n            originY: "top",\n            overlayX: "start",\n            overlayY: "top",\n        }]);\n        // We update the size of the overlay container to follow the dimentions of the new \'toggle reference\' container we set in the very first step\n        this.overlayRef.updateSize({\n            width: ref.getBoundingClientRect().width,\n            height: ref.getBoundingClientRect().height,\n        });\n    }\n\n}\n'},"9JQV":function(e,n,t){"use strict";t.r(n),n.default='<button nui-button\n        #toggleButton\n        type="button"\n        [isEmpty]="false"\n        (click)="overlay.toggle()"\n        i18n>\n        Toggle the Overlay\n</button>\n\n<nui-overlay #overlay [toggleReference]="toggleButton[\'el\'].nativeElement">\n    <img src="https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg" class="w-100">\n</nui-overlay>\n'},"9Shi":function(e,n,t){"use strict";t.r(n),n.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-overlay-docs-example",\n    templateUrl: "./overlay-docs.example.component.html",\n})\nexport class OverlayDocsComponent {}\n'},AMh2:function(e,n,t){"use strict";t.r(n),n.default="@import (reference) url('mixins.less');\n\n.arrow-example {\n    @button-width: 180px;\n    @button-height: 50px;\n\n    .toggle-button {\n        height: @button-height;\n        width: @button-width;\n    }\n\n    .dnd-button {\n        width: @button-width;\n        height: @button-height;\n        .setCssVariable(background-color, nui-color-bg-content);\n    }\n\n    .select {\n        width: 200px;\n        margin: 15px;\n    }\n\n}\n\n.custom-overlay-panel-class {\n    width: 300px;\n}\n"},AO0J:function(e,n,t){"use strict";t.r(n),n.default='<button nui-button\n        #toggleButton\n        class="mr-3"\n        type="button"\n        [isEmpty]="false"\n        (click)="overlay.toggle()"\n        i18n>\n    Toggle the Overlay\n</button>\n\n<button nui-button\n        type="button"\n        [isEmpty]="false"\n        (click)="setViewportMargin(30)"\n        i18n>\n    Viewport margin 30px\n</button>\n\n<button nui-button\n        type="button"\n        [isEmpty]="false"\n        (click)="setViewportMargin(100)"\n        i18n>\n    Viewport margin 100px\n</button>\n\n<nui-overlay #overlay\n    [toggleReference]="toggleButton[\'el\'].nativeElement"\n    [viewportMargin]="viewportMargin"\n    [overlayConfig]="overlayConfig"\n    >\n    <nui-menu-item *ngFor="let item of items">{{ item }}</nui-menu-item>\n</nui-overlay>\n'},Fbgq:function(e,n,t){"use strict";t.r(n),n.default='<div class="container">\n    <div class="d-flex nested-row" #parent>\n        <div class="w-100 h-100 col">\n            <div class="container nested-row nested-row__child" #child1>Click the button below to trigger overlay over this text</div>\n            <button nui-button\n                    type="button"\n                    class="mt-3 mr-auto ml-auto d-flex"\n                    (click)="triggerOverlay(child1, overlay1)">Toggle Overlay</button>\n        </div>\n    </div>\n    <button nui-button\n            type="button"\n            class="mt-3 mr-auto ml-auto d-flex"\n            (click)="triggerOverlay(parent, overlay2)">Toggle General Overlay</button>\n</div>\n\n<nui-overlay #overlay1>\n    <div class="h-100 overlay-class_1">\n        <div class="h-100 container d-flex flex-column justify-content-center align-items-center">\n            <h1>Overlay</h1>\n            <p>(opacity: 0.7)</p>\n        </div>\n    </div>\n</nui-overlay>\n\n<nui-overlay #overlay2>\n    <div class="h-100 overlay-class_2">\n        <div class="h-100 container d-flex flex-column justify-content-center align-items-center">\n            <h1>Overlay 2</h1>\n            <p>(opacity: 0.8)</p>\n        </div>\n    </div>\n</nui-overlay>\n'},GceN:function(e,n,t){"use strict";t.r(n),n.default="// The following styles are used for demonstration purposes only\n.nui-demo-custom-class {\n    background-color: yellowgreen !important;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: bold;\n    text-decoration: underline overline black dotted;\n    padding: 20px;\n}"},Kala:function(e,n,t){"use strict";t.r(n),n.default='@import (reference) "nui-framework-colors";\n@import (reference) "nui-framework-spaces";\n@import (reference) "nui-framework-typography";\n\n.overlay {\n    &-class {\n        // background: radial-gradient(circle, rgba(255,255,255,0.94) 70%, rgba(255,255,255,0) 100%);\n        display: flex;\n        height: 100%;\n        background-color: @nui-color-overlay-busy;\n    }\n\n    &-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        max-width: 460px;\n        margin: auto;\n        padding: (@nui-space-md * 2);\n        background-color: @nui-color-bg-content;\n        box-shadow: 0px 0px 10px 12px @nui-color-bg-content;\n        // background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, @nui-color-bg-content 5%, @nui-color-bg-content 95%, rgba(0, 0, 0, 0) 100%);\n\n        .header {\n            display: flex;\n            justify-content: center;\n            margin-bottom: @nui-space-md;\n            .nui-text-widget();\n\n            nui-icon {\n                margin-right: @nui-space-xs;\n            }\n        }\n\n        .body {\n            display: flex;\n            text-align: center;\n            .nui-text-size(default);\n        }\n\n        .footer {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n\n            button[displayStyle="action"] {\n                margin-right: @nui-space-md;\n            }\n        }\n    }\n}\n\nbutton[displayStyle="action"] {\n    margin-right: @nui-space-md;\n}\n\nh1 {\n    margin-bottom: @nui-space-md;\n}\n'},Mcz5:function(e,n,t){"use strict";t.r(n),n.default='import { Component, ViewEncapsulation } from "@angular/core";\n\n@Component({\n    selector: "nui-overlay-test",\n    templateUrl: "./overlay-test.example.component.html",\n    styleUrls: ["overlay-test.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayTestComponent {\n\n}\n'},MijJ:function(e,n,t){"use strict";t.r(n),n.default=".nested-row {\n    min-height: 200px;\n    border: 1px #222 dashed;\n    padding: 1em;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    &__child {\n        margin: 0;\n        min-height: 150px;\n        border: 1px hotpink dashed;\n    }\n}\n\n.overlay-class {\n\n    &_1 {\n        background-color: khaki;\n        opacity: 0.7;\n    }\n\n    &_2 {\n        background-color: lightskyblue;\n        opacity: 0.8;\n    }\n}\n"},RZiz:function(e,n,t){"use strict";t.r(n),n.default='import { FlexibleConnectedPositionStrategy, OverlayConfig } from "@angular/cdk/overlay";\nimport { AfterViewInit, Component, OnDestroy, ViewChild, ViewEncapsulation } from "@angular/core";\nimport { FormControl } from "@angular/forms";\nimport { IOverlayPositionServiceConfig, OverlayComponent, OverlayPlacement } from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\nconst CUSTOM_OVERLAY_PANEL_CLASS = "custom-overlay-panel-class";\n\n@Component({\n    selector: "nui-overlay-arrow-example",\n    templateUrl: "./overlay-arrow.example.component.html",\n    styleUrls: ["./overlay-arrow.example.component.less"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayArrowExampleComponent implements AfterViewInit, OnDestroy {\n    private destroy$: Subject<any> = new Subject();\n\n    public possiblePositions: OverlayPlacement[] = [\n        OverlayPlacement.Top,\n        OverlayPlacement.Bottom,\n        OverlayPlacement.Left,\n        OverlayPlacement.Right,\n    ];\n\n    public overlayConfig: OverlayConfig = {\n        panelClass: [CUSTOM_OVERLAY_PANEL_CLASS],\n    };\n\n    public positionSelectControl = new FormControl(this.possiblePositions[0]);\n    public arrowSelectControl = new FormControl(true);\n    @ViewChild(OverlayComponent) public overlay: OverlayComponent;\n\n    ngAfterViewInit() {\n        this.handlePosition();\n\n        this.overlay.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(_ => this.overlay.hide());\n    }\n\n    public handlePosition() {\n        // set the positions when showing the popup\n        this.overlay.show$.subscribe(() => {\n            this.overlay.overlayPositionService.setOverlayPositionConfig(this.getPositionServiceConfig());\n            // get available positions for the overlay from overlay.overlayPositionService\n            const availablePositions = this.overlay.overlayPositionService.getPossiblePositionsForPlacement(this.positionSelectControl.value);\n            // FlexibleConnectedPositionStrategy is default strategy of overlay component.\n            const positionStrategy = this.overlay.getOverlayRef().getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n                positionStrategy\n                    // !!! using default \'30\' value breaks the edges, when displaying overlay from right, for the sake of the example, it\'s set to \'0\'.\n                    .withViewportMargin(0)\n                    .withPositions(availablePositions);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private getPositionServiceConfig(): IOverlayPositionServiceConfig | undefined {\n        const isArrowNeeded = this.arrowSelectControl.value;\n        // define config with NO paddings for the overlay in case there\'s no arrow\n        const noArrowCfg = {\n            arrowPadding: 0, // you can use custom numbers here\n            arrowSize: 0, // you can use custom numbers here\n        };\n\n        // \'undefined\' is set to take default paddings and arrow size as in the style guides.\n        const positionServiceConfig  = isArrowNeeded ? undefined : noArrowCfg;\n\n        return positionServiceConfig;\n    }\n}\n'},Tc3w:function(e,n,t){"use strict";t.r(n),n.default='import { Component } from "@angular/core";\n\n\n@Component({\n    selector: "nui-overlay-show-hide-toggle-example",\n    templateUrl: "./overlay-show-hide-toggle.example.component.html",\n})\nexport class OverlayShowHideToggleExampleComponent {\n}\n'},US77:function(e,n,t){"use strict";t.r(n),n.default='<button nui-button\n        #toggleButton\n        type="button"\n        (click)="popup.toggle()"\n        i18n>\n        Overlay component with Custom Styles\n</button>\n\n<nui-overlay #popup\n              [toggleReference]="toggleButton[\'el\'].nativeElement"\n              [overlayConfig]="config">\n    <ng-container *ngFor="let item of itemsSource">\n        <nui-overlay-item class="list-item">{{item}}</nui-overlay-item>\n    </ng-container>\n</nui-overlay>\n'},Vrql:function(e,n,t){"use strict";t.r(n),n.default='import { OverlayConfig } from "@angular/cdk/overlay";\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from "@angular/core";\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-overlay-custom-container-example",\n    templateUrl: "./overlay-custom-container.example.component.html",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OverlayCustomContainerExampleComponent {\n\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    @ViewChild("customContainerId", {static: true}) customContainer: ElementRef;\n\n    public overlayConfig: OverlayConfig = {\n        panelClass: OVERLAY_WITH_POPUP_STYLES_CLASS,\n    };\n}\n'},WAyy:function(e,n,t){"use strict";t.r(n),n.default='import { OverlayConfig } from "@angular/cdk/overlay";\nimport { Component, ViewEncapsulation } from "@angular/core";\nimport { OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\n\n\n@Component({\n    selector: "nui-overlay-custom-styles-example",\n    templateUrl: "./overlay-custom-styles.example.component.html",\n    styleUrls: ["./overlay-custom-styles.example.component.less"],\n    // This is done to make class from the less file global.\n    // Make sure the class from the less file is added to your global style sheet.\n    encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayCustomStylesExampleComponent {\n\n    public itemsSource: string[] = [\n        $localize `Item 1`,\n        $localize `Item 2`,\n        $localize `Item 3`,\n        $localize `Item 4`,\n    ];\n\n    public config: OverlayConfig = {\n        panelClass: [OVERLAY_WITH_POPUP_STYLES_CLASS, "nui-overlay-styling-demo-custom-class"],\n    };\n}\n'},WoII:function(e,n,t){"use strict";t.r(n),n.default='<p>\n    <code>&lt;nui-overlay&gt;</code> is a base component for the most of dropdown-like Nova components, but this doesn\'t limit it\'s abilities.\n    It allows you to put any content into it\'s body to build more complex and exciting components. <br><br>\n\n    How <code>nui-overlay</code> is different from the legacy <code>nui-popup</code>? The <code>nui-overlay</code> it is built using the modern and powerful\n    <code>CDK Overlay</code> kindly provided, and well supported by <code>Angular CDK</code> team. It provides a better flexibility, customization,\n    and in general is extremely easy to use.\n</p>\n<nui-message [allowDismiss]="false" type="warning">\n    <strong>Pay attention!</strong> The following examples demonstrate only basic scenarios. To get familiar with more complex use cases, you can refer to\n    the documentation for components built on top of the <code>nui-overlay</code>, such as\n    <a href="../components/ComboboxV2Component.html#example" target="_blank">nui-combobox-v2</a>,\n    <a href="../components/SelectV2Component.html#example" target="_blank">nui-select-v2</a>, etc.,\n    and explore their internal structure in the codebase.\n</nui-message>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiOverlayModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    A simple popup can be added to the page by adding a <code>&lt;nui-overlay&gt;</code> element.\n    Inside the <code>nui-overlay</code> element put anything you see as its content. Then define an element which will be a toggle for the\n    <code>nui-overlay</code> at the same level, and sent it as a reference to the popup\'s <code>toggleReference</code> @Input. That is it!\n\n    <nui-message type="info">\n        By default, <code>nui-overlay</code> can be closed only by toggling it via its <code>toggleReference</code> component, which means\n        it won\'t close if click evens are triggered anywhere else on the page. Meaning this, it is recommended to subscribe to the popup\'s\n        <code>clickOutside</code> @Output and close the nui-overlay using it\'s public <code>toggle()</code> method.\n    </nui-message>\n</p>\n<nui-example-wrapper filenamePrefix="overlay-simple-usage.example" exampleTitle="Basic Usage">\n    <nui-overlay-simple-usage-example></nui-overlay-simple-usage-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Using with popup styles</h2>\n<p>\n    By default, overlay doesn\'t have a specific styling. You can apply popup styles to the basic overlay component.\n    It includes such properties as <code>paddings</code>, <code>background-color</code> etc.\n</p>\n<p>\n    To do that, you have to pass <code>"with-popup-styles"</code> class as a <code>panelClass</code> for the <code>overlayConfig</code>.\n    You can import <code>OVERLAY_WITH_POPUP_STYLES_CLASS</code> from <code>@nova-ui/bits</code> or just pass <code>"with-popup-styles"</code> as a string.\n</p>\n<nui-example-wrapper filenamePrefix="overlay-popup-styles.example" exampleTitle="Using with popup styles">\n    <nui-overlay-popup-styles-example></nui-overlay-popup-styles-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Overlay Configuration</h2>\n<p>\n    <code>nui-overlay</code> has all the benefits the <code>Angular CDK Overlay</code> provides, including a rich and flexible configuration.\n    Use <code>overlayConfig</code> @Input of the component and follow the interface to configure the overlay to your likings. Please also reference\n    the <a href="https://material.angular.io/cdk/overlay/api#OverlayConfig"> official Angular CDK documentation</a> to see more information on how to configure the overlay.\n</p>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Viewport Margin</h2>\n<p>\n    You can easily manage edges of the container using <code>viewportMargin</code> input.\n    It sets a minimum distance in px the overlay may be positioned to the edge of the viewport.\n    Default value of <code>viewportMargin</code> is 30px.\n</p>\n\n<nui-example-wrapper filenamePrefix="overlay-viewport-margin.example" exampleTitle="Viewport Margin Example">\n    <nui-overlay-viewport-margin-example></nui-overlay-viewport-margin-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Toggle Types</h2>\n<p>\n    Not only the <code>toggleReference</code> is bale to show the <code>nui-overlay</code> up. The popover can be toggled with any other clickable element on the page.\n    The public methods responsible for this are quite self-descriptive: <code>show()</code> will only pop the popup up, <code>hide()</code> will hide the popup from the view, and\n    <code>toggle()</code> will do both. This adds a flexibiility on how you want your popup-ve to get toggled.\n</p>\n\n<nui-message type="info">\n    Notice below how <code>nui-overlay</code> is not closed if you click outside of its <code>toggleReference</code>. This is because we do not subscribe to its\n    <code>clickOutside</code> @Output, and so we are only able to close the popup via a specific button, like <code>Hide</code>, or <code>Toggle</code>.\n</nui-message>\n\n<nui-example-wrapper filenamePrefix="overlay-show-hide-toggle.example" exampleTitle="Types of Overlay component Toggle">\n    <nui-overlay-show-hide-toggle-example></nui-overlay-show-hide-toggle-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Styles</h2>\n<p>\n    In case tweaking the <code>nui-overlay</code> overlay styles via the <code>overlayConfig</code> was not enough, and brute force is needed, one can use the\n    <code>styles</code> @Input to pass in the object with the inline styles to throw into the overlay.\n</p>\n\n<nui-example-wrapper filenamePrefix="overlay-custom-styles.example" exampleTitle="Custom Styles Example">\n    <nui-overlay-custom-styles-example></nui-overlay-custom-styles-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Container</h2>\n<p>\n    By default, the <code>nui-overlay</code> container appends to body. This is a default behavior suggested by the angular material cdk overlay. But there are cases when\n    it is necessary to have overlay container append to some custom container. It is possible to attache the popup container to any custom container by simply providing\n    either a <code>selector</code>, or an <code>element reference</code> to the <code>customContainer</code> @Input. See two ways of doing that in the example below.\n</p>\n\n<nui-example-wrapper filenamePrefix="overlay-custom-container.example" exampleTitle="Custom Container Example">\n    <nui-overlay-custom-container-example></nui-overlay-custom-container-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Positioning and Arrow</h2>\n<p>\n    By default, <code>&lt;nui-overlay&gt;</code> can be opened <code>top</code> or <code>bottom</code>.\n</p>\n<p>\n    It\'s possible to apply custom positioning to the <code>&lt;nui-overlay&gt;</code>.\n    For that, use <a href="../../classes/OverlayPositionService.html" target="_blank">OverlayPositionService</a> (see usage in the example).\n    It returns a set of available positions prioritizing them e.g. for <code>top</code> it will be: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.\n</p>\n<p>\n    Also, <code>&lt;nui-overlay&gt;</code> support using arrow at the edge of the overlay that points to the toggle reference.\n    To use that, you need to put <code>&lt;nui-overlay-arrow&gt;</code> inside the <code>&lt;nui-overlay&gt;</code> (as in the example).\n</p>\n<p>\n    Arrow positioning uses specific CSS classes that are added automatically if using <a href="../../classes/OverlayPositionService.html" target="_blank">OverlayPositionService</a>.\n    So, to use arrow inside the overlay you need to get a set of available positions with OverlayPositionService, pass them to the overlay component (see example)\n    and put <code>&lt;nui-overlay-arrow&gt;</code> inside the <code>&lt;nui-overlay&gt;</code> template.\n</p>\n<p>\n    <strong>Drag the toggle to the edges of the viewport to see how it behaves.</strong>\n</p>\n\n<nui-example-wrapper filenamePrefix="overlay-arrow.example" exampleTitle="Positioning and Arrow">\n    <nui-overlay-arrow-example></nui-overlay-arrow-example>\n</nui-example-wrapper>\n\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n<h2>Setting Up Scrollable Containers</h2>\n<p>\n    By default, <code>cdk-overlay</code> reacts on <code>document</code> scroll events, but there are numerous cases when multiple scrollable containers on the\n    page are possible, or the scrollable container appears is a different place in the DOM, e.g. inside the appended to body overlay container. In\n    this case it is advised to set the <code><a href="https://material.angular.io/cdk/scrolling/api#CdkScrollable" target="_blank">cdkScrollable</a></code> directive\n    to the container considered scrollable.\n</p>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Dialog Overlay</h2>\n<p>\n    There are numerous cases when a user would want a lightweight dialog-looking overlay placed over the parent container\n    to quickly confirm things, or make sure a users are immediately informed about any sort of state, progress etc. This can be\n    done fast and easily with <code>nui-overlay</code> component with a few lines of code involved. By default, the <code>nui-overlay</code>\n    position strategy is configured to attach the created cdk overlay to the bottom-left corner of the toggle reference, so it could be easily used\n    for the most common use cases - selects, menus, comboboxes etc. To fill the parent container with the overlay we need to set new positions,\n    so that the overlay would be attached to the top-left corner of the toggle reference container. Afterwards, all we need is toggle the overlay\n    and using its overlay reference adjust the size of the overlay to the dimensions of the toggle reference container. And that\'s it! Please check\n    the comments in the code snippets below.\n</p>\n\n<nui-example-wrapper filenamePrefix="overlay-custom-dialog" exampleTitle="Custom Dialog Overlay">\n    <nui-overlay-custom-dialog></nui-overlay-custom-dialog>\n</nui-example-wrapper>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n\n<h2>Custom Dialog Overlay Inside the nui-dialog</h2>\n<p>\n    This is yet another use case of the dialog-like overlay, this time inside the <code>nui-dialog</code> component.\n    Click the button in the exampel below and attempt to cancel the dialog.\n</p>\n\n<nui-example-wrapper filenamePrefix="custom-confirmation-inside-dialog" exampleTitle="Custom Overlay Dialog inside the nui-dialog">\n    <nui-custom-confirmation-inside-dialog></nui-custom-confirmation-inside-dialog>\n</nui-example-wrapper>\n\x3c!-- ------------------------------------------------------------------------------------------- --\x3e\n'},Xw5q:function(e,n,t){var o={"./index.ts":"q3si","./overlay-arrow/overlay-arrow.example.component.html":"xfxU","./overlay-arrow/overlay-arrow.example.component.less":"AMh2","./overlay-arrow/overlay-arrow.example.component.ts":"RZiz","./overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.html":"wNqF","./overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.less":"Kala","./overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component.ts":"Ze+C","./overlay-custom-container/overlay-custom-container.example.component.html":"mODz","./overlay-custom-container/overlay-custom-container.example.component.ts":"Vrql","./overlay-custom-dialog/overlay-custom-dialog.component.html":"Fbgq","./overlay-custom-dialog/overlay-custom-dialog.component.less":"MijJ","./overlay-custom-dialog/overlay-custom-dialog.component.ts":"7YjB","./overlay-custom-styles/overlay-custom-styles.example.component.html":"US77","./overlay-custom-styles/overlay-custom-styles.example.component.less":"t2gJ","./overlay-custom-styles/overlay-custom-styles.example.component.ts":"WAyy","./overlay-docs/overlay-docs.example.component.html":"WoII","./overlay-docs/overlay-docs.example.component.ts":"9Shi","./overlay-popup-styles/overlay-popup-styles.example.component.html":"ik1l","./overlay-popup-styles/overlay-popup-styles.example.component.ts":"shKv","./overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.html":"lM1q","./overlay-show-hide-toggle/overlay-show-hide-toggle.example.component.ts":"Tc3w","./overlay-simple-usage/overlay-simple-usage.example.component.html":"9JQV","./overlay-simple-usage/overlay-simple-usage.example.component.ts":"28xp","./overlay-test/overlay-test.example.component.html":"hx2c","./overlay-test/overlay-test.example.component.less":"GceN","./overlay-test/overlay-test.example.component.ts":"Mcz5","./overlay-viewport-margin/overlay-viewport-margin-example.component.ts":"tTY2","./overlay-viewport-margin/overlay-viewport-margin.example.component.html":"AO0J","./overlay.module.ts":"zUvS"};function i(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id="Xw5q"},"Ze+C":function(e,n,t){"use strict";t.r(n),n.default='import { FlexibleConnectedPositionStrategy, OverlayRef } from "@angular/cdk/overlay";\nimport { Component, TemplateRef, ViewChild } from "@angular/core";\nimport { DialogService, NuiDialogRef, OverlayComponent } from "@nova-ui/bits";\n\n@Component({\n  selector: "nui-custom-confirmation-inside-dialog",\n  templateUrl: "./overlay-custom-confirmation-inside-dialog.component.html",\n  styleUrls: ["./overlay-custom-confirmation-inside-dialog.component.less"],\n})\nexport class CustomConfirmationInsideDialogComponent {\n    private overlayRef: OverlayRef;\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) { }\n\n    triggerOverlay(overlay: OverlayComponent) {\n        // Toggling the overlay to get an access to the \'overlayRef\'\n        overlay.toggle();\n\n        this.overlayRef = overlay.getOverlayRef();\n        // Here we update the positions for the overlay. By default, the overlay service connects the overlay to the bottom-left\n        // corner of the toggle reference element. We change this behavior here by setting new positions, since we want overlay to\n        // stick to the upper-top corner of the parent container\n        (this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy).withPositions([{\n            originX: "start",\n            originY: "top",\n            overlayX: "start",\n            overlayY: "top",\n        }]);\n        // We update the size of the overlay container to follow the dimentions of the new \'toggle reference\' container we set in the very first step\n        this.updateOverlayDimensions(overlay);\n    }\n\n    public open(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: "lg", backdrop: "static", useOverlay: true});\n    }\n\n    public actionDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onContainerResize(overlay: OverlayComponent) {\n        this.updateOverlayDimensions(overlay);\n    }\n\n    private updateOverlayDimensions(overlay: OverlayComponent) {\n        this.overlayRef?.updateSize({\n            width: overlay.toggleReference.getBoundingClientRect().width,\n            height: overlay.toggleReference.getBoundingClientRect().height,\n        });\n    }\n}\n'},fDxq:function(e,n,t){"use strict";t.r(n),t.d(n,"OverlayModule",function(){return K});var o=t("5+WD"),i=t("3Pt+"),a=t("tyNb"),l=t("b5Xb"),r=t("XNiG"),s=t("1G5W"),c=t("fXoL"),u=t("6urz"),p=t("eWZz");let m=(()=>{class e{constructor(){this.destroy$=new r.a}ngAfterViewInit(){this.overlay.clickOutside.pipe(Object(s.a)(this.destroy$)).subscribe(e=>this.overlay.hide())}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-simple-usage-example"]],viewQuery:function(e,n){if(1&e&&c.Tc(l.rb,1),2&e){let e;c.Cc(e=c.jc())&&(n.overlay=e.first)}},decls:6,vars:2,consts:function(){let e;return e=$localize`:␟8103d11e54ef41e73f4b43063cafb433df3618c3␟1401953185868182023: Toggle the Overlay
`,[["nui-button","","type","button",3,"isEmpty","click"],["toggleButton",""],e,[3,"toggleReference"],["overlay",""],["src","https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg",1,"w-100"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"button",0,1),c.ic("click",function(){return c.Gc(e),c.Dc(4).toggle()}),c.Yb(2,2),c.Tb(),c.Ub(3,"nui-overlay",3,4),c.Pb(5,"img",5),c.Tb()}if(2&e){const e=c.Dc(1);c.tc("isEmpty",!1),c.Cb(3),c.tc("toggleReference",e.el.nativeElement)}},directives:[u.a,p.a],encapsulation:2}),e})(),d=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-show-hide-toggle-example"]],decls:13,vars:1,consts:function(){let e,n,t,o;return e=$localize`:␟67b09ba4f12b59fa6133909bc6942bee91312175␟1318583375584668386: Overlay component Appears Here `,n=$localize`:␟8170a9fefe235e0cb48f2227009d2bc8c7785997␟7100500716620381498: Show `,t=$localize`:␟6ea3355ec181654a96749d04bbb3b4a5a118814e␟5472590031277847974: Hide `,o=$localize`:␟fa225a2e368b90ddeafcb4dd16b0f1fe8f4eeaec␟5912220945673240504: Toggle `,[[1,"d-flex"],["nui-button","","type","button",1,"mr-5"],["toggleButton",""],e,["nui-button","","type","button",3,"click"],n,t,o,[3,"toggleReference"],["popup",""],["src","https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg",1,"w-100"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"div",0),c.Ub(1,"button",1,2),c.Yb(3,3),c.Tb(),c.Ub(4,"button",4),c.ic("click",function(){return c.Gc(e),c.Dc(11).show()}),c.Yb(5,5),c.Tb(),c.Ub(6,"button",4),c.ic("click",function(){return c.Gc(e),c.Dc(11).hide()}),c.Yb(7,6),c.Tb(),c.Ub(8,"button",4),c.ic("click",function(){return c.Gc(e),c.Dc(11).toggle()}),c.Yb(9,7),c.Tb(),c.Tb(),c.Ub(10,"nui-overlay",8,9),c.Pb(12,"img",10),c.Tb()}if(2&e){const e=c.Dc(2);c.Cb(10),c.tc("toggleReference",e.el.nativeElement)}},directives:[u.a,p.a],encapsulation:2}),e})();var b=t("ofXK"),g=t("WpiY");function y(e,n){if(1&e&&(c.Sb(0),c.Ub(1,"nui-overlay-item",6),c.Oc(2),c.Tb(),c.Rb()),2&e){const e=n.$implicit;c.Cb(2),c.Pc(e)}}let v=(()=>{class e{constructor(){this.itemsSource=[$localize`Item 1`,$localize`Item 2`,$localize`Item 3`,$localize`Item 4`],this.config={panelClass:[l.qb,"nui-overlay-styling-demo-custom-class"]}}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-custom-styles-example"]],decls:6,vars:3,consts:function(){let e;return e=$localize`:␟fbcba93863d4ab1e8b0fe3bbea67183b8c0d2a88␟3235225124073300163: Overlay component with Custom Styles
`,[["nui-button","","type","button",3,"click"],["toggleButton",""],e,[3,"toggleReference","overlayConfig"],["popup",""],[4,"ngFor","ngForOf"],[1,"list-item"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"button",0,1),c.ic("click",function(){return c.Gc(e),c.Dc(4).toggle()}),c.Yb(2,2),c.Tb(),c.Ub(3,"nui-overlay",3,4),c.Mc(5,y,3,1,"ng-container",5),c.Tb()}if(2&e){const e=c.Dc(1);c.Cb(3),c.tc("toggleReference",e.el.nativeElement)("overlayConfig",n.config),c.Cb(2),c.tc("ngForOf",n.itemsSource)}},directives:[u.a,p.a,b.p,g.a],styles:[".nui-overlay-styling-demo-custom-class{border:1px solid red}.nui-overlay-styling-demo-custom-class .nui-overlay{border:2px dashed red;padding:10px;background-color:#faebd7}"],encapsulation:2}),e})();const f=["customContainerId"];function h(e,n){if(1&e&&(c.Sb(0),c.Ub(1,"nui-overlay-item",13),c.Oc(2),c.Tb(),c.Rb()),2&e){const e=n.$implicit;c.Cb(2),c.Pc(e)}}function w(e,n){if(1&e&&(c.Sb(0),c.Ub(1,"nui-overlay-item",13),c.Oc(2),c.Tb(),c.Rb()),2&e){const e=n.$implicit;c.Cb(2),c.Pc(e)}}let O=(()=>{class e{constructor(){this.itemsSource=[$localize`Item 1`,$localize`Item 2`,$localize`Item 3`,$localize`Item 4`],this.overlayConfig={panelClass:l.qb}}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-custom-container-example"]],viewQuery:function(e,n){if(1&e&&c.Tc(f,3),2&e){let e;c.Cc(e=c.jc())&&(n.customContainer=e.first)}},decls:20,vars:8,consts:function(){let e,n;return e=$localize`:␟ab27221be1c464b741a20c143f7b17353cc4d733␟527918565009424587: Click `,n=$localize`:␟ab27221be1c464b741a20c143f7b17353cc4d733␟527918565009424587: Click `,[[1,"row"],[1,"col","customContainer"],["nui-button","","type","button",3,"click"],["toggleButton2",""],e,[1,"col"],["customContainerId",""],["toggleButton1",""],n,[3,"toggleReference","customContainer","overlayConfig"],["overlay1",""],[4,"ngFor","ngForOf"],["overlay2",""],[1,"list-item"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"div",0),c.Ub(1,"div",1),c.Ub(2,"div"),c.Oc(3,"Overlay component with Custom Container (via .class)"),c.Tb(),c.Ub(4,"button",2,3),c.ic("click",function(){return c.Gc(e),c.Dc(15).toggle()}),c.Yb(6,4),c.Tb(),c.Tb(),c.Ub(7,"div",5,6),c.Ub(9,"div"),c.Oc(10,"Overlay component with Custom Container (via ElementRef)"),c.Tb(),c.Ub(11,"button",2,7),c.ic("click",function(){return c.Gc(e),c.Dc(18).toggle()}),c.Yb(13,8),c.Tb(),c.Tb(),c.Tb(),c.Ub(14,"nui-overlay",9,10),c.Mc(16,h,3,1,"ng-container",11),c.Tb(),c.Ub(17,"nui-overlay",9,12),c.Mc(19,w,3,1,"ng-container",11),c.Tb()}if(2&e){const e=c.Dc(5),t=c.Dc(12);c.Cb(14),c.tc("toggleReference",e.el.nativeElement)("customContainer",".customContainer")("overlayConfig",n.overlayConfig),c.Cb(2),c.tc("ngForOf",n.itemsSource),c.Cb(1),c.tc("toggleReference",t.el.nativeElement)("customContainer",n.customContainer)("overlayConfig",n.overlayConfig),c.Cb(2),c.tc("ngForOf",n.itemsSource)}},directives:[u.a,p.a,b.p,g.a],encapsulation:2,changeDetection:0}),e})();var x=t("4pDv"),C=t("CVg4");const T=["overlayWithStyles"],U=["overlayNoStyles"];let S=(()=>{class e{constructor(){this.destroy$=new r.a,this.overlayConfig={panelClass:[l.qb]}}ngAfterViewInit(){this.overlayWithStyles.clickOutside.pipe(Object(s.a)(this.destroy$)).subscribe(e=>this.overlayWithStyles.hide()),this.overlayNoStyles.clickOutside.pipe(Object(s.a)(this.destroy$)).subscribe(e=>this.overlayNoStyles.hide())}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-popup-styles-example"]],viewQuery:function(e,n){if(1&e&&(c.Tc(T,1),c.Tc(U,1)),2&e){let e;c.Cc(e=c.jc())&&(n.overlayWithStyles=e.first),c.Cc(e=c.jc())&&(n.overlayNoStyles=e.first)}},decls:14,vars:5,consts:function(){let e,n;return e=$localize`:␟acfd1d4f273dbaa37e3831edc2acfb99f00402f8␟1294272575454975787: With popup styles
`,n=$localize`:␟4537d16a07b2d96237f4e0c42b31d830510c351e␟7702005166665732547: No popup styles
`,[["nui-button","","type","button",3,"isEmpty","click"],["toggleButton",""],e,[3,"toggleReference","overlayConfig"],["overlayWithStyles",""],[2,"width","300px"],["nui-button","","type","button",2,"float","right",3,"isEmpty","click"],["toggleButton2",""],n,[3,"toggleReference"],["overlayNoStyles",""]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"button",0,1),c.ic("click",function(){return c.Gc(e),c.Dc(4).toggle()}),c.Yb(2,2),c.Tb(),c.Ub(3,"nui-overlay",3,4),c.Ub(5,"div",5),c.Oc(6," Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum "),c.Tb(),c.Tb(),c.Ub(7,"button",6,7),c.ic("click",function(){return c.Gc(e),c.Dc(11).toggle()}),c.Yb(9,8),c.Tb(),c.Ub(10,"nui-overlay",9,10),c.Ub(12,"div",5),c.Oc(13," Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum "),c.Tb(),c.Tb()}if(2&e){const e=c.Dc(1),t=c.Dc(8);c.tc("isEmpty",!1),c.Cb(3),c.tc("toggleReference",e.el.nativeElement)("overlayConfig",n.overlayConfig),c.Cb(4),c.tc("isEmpty",!1),c.Cb(3),c.tc("toggleReference",t.el.nativeElement)}},directives:[u.a,p.a],encapsulation:2}),e})();var k=t("fNSn");function P(e,n){if(1&e&&(c.Ub(0,"nui-menu-item"),c.Oc(1),c.Tb()),2&e){const e=n.$implicit;c.Cb(1),c.Pc(e)}}let D=(()=>{class e{constructor(){this.items=Array.from({length:50}).map((e,n)=>`Item ${n}`),this.overlayConfig={panelClass:l.qb},this.destroy$=new r.a}ngAfterViewInit(){this.overlay.clickOutside.pipe(Object(s.a)(this.destroy$)).subscribe(e=>this.overlay.hide())}setViewportMargin(e){this.viewportMargin=e}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-viewport-margin-example"]],viewQuery:function(e,n){if(1&e&&c.Tc(l.rb,1),2&e){let e;c.Cc(e=c.jc())&&(n.overlay=e.first)}},decls:10,vars:7,consts:function(){let e,n,t;return e=$localize`:␟f5a0526d49d8297f0c9a96b6b8e7543b78640108␟1514880720976633746: Toggle the Overlay
`,n=$localize`:␟dec99057e7b181e1665cddded89b59ad1105fa46␟3248923618303214454: Viewport margin 30px
`,t=$localize`:␟cf29a66a99005506d7d5dba3bc4a413624e338ad␟4157796081279696701: Viewport margin 100px
`,[["nui-button","","type","button",1,"mr-3",3,"isEmpty","click"],["toggleButton",""],e,["nui-button","","type","button",3,"isEmpty","click"],n,t,[3,"toggleReference","viewportMargin","overlayConfig"],["overlay",""],[4,"ngFor","ngForOf"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"button",0,1),c.ic("click",function(){return c.Gc(e),c.Dc(8).toggle()}),c.Yb(2,2),c.Tb(),c.Ub(3,"button",3),c.ic("click",function(){return n.setViewportMargin(30)}),c.Yb(4,4),c.Tb(),c.Ub(5,"button",3),c.ic("click",function(){return n.setViewportMargin(100)}),c.Yb(6,5),c.Tb(),c.Ub(7,"nui-overlay",6,7),c.Mc(9,P,2,1,"nui-menu-item",8),c.Tb()}if(2&e){const e=c.Dc(1);c.tc("isEmpty",!1),c.Cb(3),c.tc("isEmpty",!1),c.Cb(2),c.tc("isEmpty",!1),c.Cb(2),c.tc("toggleReference",e.el.nativeElement)("viewportMargin",n.viewportMargin)("overlayConfig",n.overlayConfig),c.Cb(2),c.tc("ngForOf",n.items)}},directives:[u.a,p.a,b.p,k.a],encapsulation:2}),e})();var M=t("UpNd"),E=t("jlyz"),I=t("tpGn");function R(e,n){1&e&&c.Pb(0,"nui-overlay-arrow")}function q(e,n){if(1&e&&(c.Ub(0,"nui-select-v2-option",16),c.Oc(1),c.Tb()),2&e){const e=n.$implicit;c.tc("value",e),c.Cb(1),c.Pc(e)}}function A(e,n){if(1&e&&(c.Ub(0,"nui-select-v2-option",16),c.Oc(1),c.Tb()),2&e){const e=n.$implicit;c.tc("value",e),c.Cb(1),c.Pc(e)}}const _=function(){return[!0,!1]};let V=(()=>{class e{constructor(){this.destroy$=new r.a,this.possiblePositions=[l.sb.Top,l.sb.Bottom,l.sb.Left,l.sb.Right],this.overlayConfig={panelClass:["custom-overlay-panel-class"]},this.positionSelectControl=new i.d(this.possiblePositions[0]),this.arrowSelectControl=new i.d(!0)}ngAfterViewInit(){this.handlePosition(),this.overlay.clickOutside.pipe(Object(s.a)(this.destroy$)).subscribe(e=>this.overlay.hide())}handlePosition(){this.overlay.show$.subscribe(()=>{this.overlay.overlayPositionService.setOverlayPositionConfig(this.getPositionServiceConfig());const e=this.overlay.overlayPositionService.getPossiblePositionsForPlacement(this.positionSelectControl.value);this.overlay.getOverlayRef().getConfig().positionStrategy.withViewportMargin(0).withPositions(e)})}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}getPositionServiceConfig(){return this.arrowSelectControl.value?void 0:{arrowPadding:0,arrowSize:0}}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-arrow-example"]],viewQuery:function(e,n){if(1&e&&c.Tc(l.rb,1),2&e){let e;c.Cc(e=c.jc())&&(n.overlay=e.first)}},decls:19,vars:10,consts:function(){let e,n,t,o;return e=$localize`:␟56f27c9b883bce94b103546998b5e9113c4ba371␟1963585083210045586: Draggable toggle `,n=$localize`:␟f411ac469fc579340371cc9dfc2d268d3b353c5e␟6526995600349250063: Reset draggable button `,t=$localize`:␟287859636848ff7b196ec972dfbd46581b93db52␟5193880631304758661:Select Position`,o=$localize`:␟5204274026c6b64ba43eb5c1a5f60d868078e8aa␟7936791469018810193:Select Arrow`,[[1,"arrow-example"],[1,"d-flex","justify-content-between","align-items-center","mb-5"],["cdkDrag","",1,"dnd-button"],["draggable","cdkDrag"],["nui-button","","type","button",1,"toggle-button",3,"isEmpty","click"],["toggleButton",""],e,["nui-button","","type","button",1,"h-50",3,"isEmpty","click"],n,[3,"toggleReference","overlayConfig"],["overlay",""],["src","https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg",1,"w-100"],[4,"ngIf"],["placeholder",t,1,"select",3,"formControl"],[3,"value",4,"ngFor","ngForOf"],["placeholder",o,1,"select",3,"formControl"],[3,"value"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"div",0),c.Ub(1,"div",1),c.Ub(2,"div",2,3),c.Ub(4,"button",4,5),c.ic("click",function(){return c.Gc(e),c.Dc(10).toggle()}),c.Yb(6,6),c.Tb(),c.Tb(),c.Ub(7,"button",7),c.ic("click",function(){return c.Gc(e),c.Dc(3).reset()}),c.Yb(8,8),c.Tb(),c.Tb(),c.Ub(9,"nui-overlay",9,10),c.Pb(11,"img",11),c.Mc(12,R,1,0,"nui-overlay-arrow",12),c.Tb(),c.Oc(13," Position: "),c.Ub(14,"nui-select-v2",13),c.Mc(15,q,2,2,"nui-select-v2-option",14),c.Tb(),c.Oc(16," Arrow: "),c.Ub(17,"nui-select-v2",15),c.Mc(18,A,2,2,"nui-select-v2-option",14),c.Tb(),c.Tb()}if(2&e){const e=c.Dc(5);c.Cb(4),c.tc("isEmpty",!1),c.Cb(3),c.tc("isEmpty",!1),c.Cb(2),c.tc("toggleReference",e.el.nativeElement)("overlayConfig",n.overlayConfig),c.Cb(3),c.tc("ngIf",n.arrowSelectControl.value),c.Cb(2),c.tc("formControl",n.positionSelectControl),c.Cb(1),c.tc("ngForOf",n.possiblePositions),c.Cb(2),c.tc("formControl",n.arrowSelectControl),c.Cb(1),c.tc("ngForOf",c.xc(9,_))}},directives:[o.a,u.a,p.a,b.q,M.a,i.m,i.e,b.p,E.a,I.a],styles:[".arrow-example .toggle-button{height:50px;width:180px}.arrow-example .dnd-button{width:180px;height:50px;background-color:var(--nui-color-bg-content,#fff)}.arrow-example .select{width:200px;margin:15px}.custom-overlay-panel-class{width:300px}"],encapsulation:2}),e})();const N=["overlay1"],z=["overlay2"];let $=(()=>{class e{constructor(e){this.dialogService=e}triggerOverlay(e,n){n.toggleReference=e,n.toggle(),this.overlayRef=n.getOverlayRef(),this.overlayRef.getConfig().positionStrategy.withPositions([{originX:"start",originY:"top",overlayX:"start",overlayY:"top"}]),this.overlayRef.updateSize({width:e.getBoundingClientRect().width,height:e.getBoundingClientRect().height})}}return e.\u0275fac=function(n){return new(n||e)(c.Ob(l.i))},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-custom-dialog"]],viewQuery:function(e,n){if(1&e&&(c.Tc(N,1),c.Tc(z,1)),2&e){let e;c.Cc(e=c.jc())&&(n.overlay1=e.first),c.Cc(e=c.jc())&&(n.overlay2=e.first)}},decls:27,vars:0,consts:[[1,"container"],[1,"d-flex","nested-row"],["parent",""],[1,"w-100","h-100","col"],[1,"container","nested-row","nested-row__child"],["child1",""],["nui-button","","type","button",1,"mt-3","mr-auto","ml-auto","d-flex",3,"click"],["overlay1",""],[1,"h-100","overlay-class_1"],[1,"h-100","container","d-flex","flex-column","justify-content-center","align-items-center"],["overlay2",""],[1,"h-100","overlay-class_2"]],template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"div",0),c.Ub(1,"div",1,2),c.Ub(3,"div",3),c.Ub(4,"div",4,5),c.Oc(6,"Click the button below to trigger overlay over this text"),c.Tb(),c.Ub(7,"button",6),c.ic("click",function(){c.Gc(e);const t=c.Dc(5),o=c.Dc(12);return n.triggerOverlay(t,o)}),c.Oc(8,"Toggle Overlay"),c.Tb(),c.Tb(),c.Tb(),c.Ub(9,"button",6),c.ic("click",function(){c.Gc(e);const t=c.Dc(2),o=c.Dc(20);return n.triggerOverlay(t,o)}),c.Oc(10,"Toggle General Overlay"),c.Tb(),c.Tb(),c.Ub(11,"nui-overlay",null,7),c.Ub(13,"div",8),c.Ub(14,"div",9),c.Ub(15,"h1"),c.Oc(16,"Overlay"),c.Tb(),c.Ub(17,"p"),c.Oc(18,"(opacity: 0.7)"),c.Tb(),c.Tb(),c.Tb(),c.Tb(),c.Ub(19,"nui-overlay",null,10),c.Ub(21,"div",11),c.Ub(22,"div",9),c.Ub(23,"h1"),c.Oc(24,"Overlay 2"),c.Tb(),c.Ub(25,"p"),c.Oc(26,"(opacity: 0.8)"),c.Tb(),c.Tb(),c.Tb(),c.Tb()}},directives:[u.a,p.a],styles:[".nested-row{min-height:200px;border:1px dashed #222;padding:1em;height:100%;display:flex;justify-content:center;align-items:center;text-align:center}.nested-row__child{margin:0;min-height:150px;border:1px dashed #ff69b4}.overlay-class_1{background-color:khaki;opacity:.7}.overlay-class_2{background-color:#87cefa;opacity:.8}"],encapsulation:2}),e})();var Y=t("ujIh"),j=t("skCw"),L=t("NHEo"),B=t("45Bz");function F(e,n){if(1&e){const e=c.Vb();c.Ub(0,"div",6,7),c.ic("containerResize",function(){c.Gc(e);const n=c.Dc(12);return c.mc().onContainerResize(n)}),c.Ub(2,"nui-dialog-header",8),c.ic("closed",function(){return(0,n.close)()}),c.Tb(),c.Ub(3,"div",9),c.Ub(4,"p"),c.Yb(5,10),c.Tb(),c.Tb(),c.Ub(6,"nui-dialog-footer"),c.Ub(7,"button",11),c.ic("click",function(){c.Gc(e);const n=c.Dc(12);return c.mc().triggerOverlay(n)}),c.Yb(8,12),c.Tb(),c.Ub(9,"button",13),c.ic("click",function(){c.Gc(e);const t=n.close;return c.mc().actionDone(),t()}),c.Yb(10,14),c.Tb(),c.Tb(),c.Tb(),c.Ub(11,"nui-overlay",15,16),c.Ub(13,"div",17),c.Ub(14,"div",18),c.Ub(15,"div",19),c.Oc(16," Are you sure you want to quit? "),c.Tb(),c.Ub(17,"div",20),c.Ub(18,"button",21),c.ic("click",function(){return c.Gc(e),c.Dc(12).hide()}),c.Oc(19,"No"),c.Tb(),c.Ub(20,"button",11),c.ic("click",function(){c.Gc(e);const t=n.close;return c.Dc(12).hide(),t()}),c.Oc(21,"Yes"),c.Tb(),c.Tb(),c.Tb(),c.Tb(),c.Tb()}if(2&e){const e=c.Dc(1);c.Cb(11),c.tc("toggleReference",e)}}function W(e,n){if(1&e){const e=c.Vb();c.Ub(0,"div",6,22),c.ic("containerResize",function(){c.Gc(e);const n=c.Dc(20);return c.mc().onContainerResize(n)}),c.Ub(2,"nui-dialog-header",23),c.ic("closed",function(){return(0,n.close)()}),c.Tb(),c.Ub(3,"div",9),c.Ub(4,"p"),c.Yb(5,24),c.Tb(),c.Ub(6,"p"),c.Yb(7,25),c.Tb(),c.Ub(8,"p"),c.Yb(9,26),c.Tb(),c.Ub(10,"p"),c.Yb(11,27),c.Tb(),c.Ub(12,"p"),c.Yb(13,28),c.Tb(),c.Tb(),c.Ub(14,"nui-dialog-footer"),c.Ub(15,"button",11),c.ic("click",function(){c.Gc(e);const n=c.Dc(20);return c.mc().triggerOverlay(n)}),c.Yb(16,29),c.Tb(),c.Ub(17,"button",13),c.ic("click",function(){c.Gc(e);const t=n.close;return c.mc().actionDone(),t()}),c.Yb(18,30),c.Tb(),c.Tb(),c.Tb(),c.Ub(19,"nui-overlay",15,31),c.Ub(21,"div",17),c.Ub(22,"div",18),c.Ub(23,"div",19),c.Pb(24,"nui-icon",32),c.Ub(25,"span"),c.Oc(26,"Confirmation Title with Severity"),c.Tb(),c.Tb(),c.Ub(27,"div",33),c.Ub(28,"p"),c.Oc(29," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus. "),c.Tb(),c.Tb(),c.Ub(30,"div",20),c.Ub(31,"button",21),c.ic("click",function(){return c.Gc(e),c.Dc(20).hide()}),c.Oc(32,"Cancel"),c.Tb(),c.Ub(33,"button",11),c.ic("click",function(){c.Gc(e);const t=n.close;return c.Dc(20).hide(),t()}),c.Oc(34,"Yes"),c.Tb(),c.Tb(),c.Tb(),c.Tb(),c.Tb()}if(2&e){const e=c.Dc(1);c.Cb(19),c.tc("toggleReference",e)}}let G=(()=>{class e{constructor(e){this.dialogService=e}triggerOverlay(e){e.toggle(),this.overlayRef=e.getOverlayRef(),this.overlayRef.getConfig().positionStrategy.withPositions([{originX:"start",originY:"top",overlayX:"start",overlayY:"top"}]),this.updateOverlayDimensions(e)}open(e){this.activeDialog=this.dialogService.open(e,{size:"lg",backdrop:"static",useOverlay:!0})}actionDone(){this.activeDialog.close()}onContainerResize(e){this.updateOverlayDimensions(e)}updateOverlayDimensions(e){var n;null===(n=this.overlayRef)||void 0===n||n.updateSize({width:e.toggleReference.getBoundingClientRect().width,height:e.toggleReference.getBoundingClientRect().height})}}return e.\u0275fac=function(n){return new(n||e)(c.Ob(l.i))},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-custom-confirmation-inside-dialog"]],decls:8,vars:0,consts:function(){let e,n,t,o,i,a,l,r,s,c,u,p,m,d;return e=$localize`:␟b37956781d4525308454d483be8c66447da39538␟2590927982756485133:Click me!`,n=$localize`:␟4fae7ec74ab426bc02aa763082e9487e37e02eef␟5158891734870228735:Larger Content`,t=$localize`:␟eeb379308b8767b98aa0d27308f4f8dd6b46e559␟5892089246202495025:Dialog title`,o=$localize`:␟d52a8e92acae5789a376e4bda79f9b667681d073␟32921365146792976: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus. Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus. Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh. `,i=$localize`:␟fb4d1e0ce01940692d80037663169dffea9bf880␟2396240877469461361: Cancel `,a=$localize`:␟ddfdafd89fb7feae4ddfbbe5281c5797c054b97b␟7877743393246811554: Action `,l=$localize`:␟eeb379308b8767b98aa0d27308f4f8dd6b46e559␟5892089246202495025:Dialog title`,r=$localize`:␟d52a8e92acae5789a376e4bda79f9b667681d073␟32921365146792976: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum. Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus. Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus. Maecenas eget arcu ac ante sagittis eleifend vel ut purus. Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue. Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh. `,s=$localize`:␟02136a67aa4e099be28d15bed0b691c8ce19ba1e␟7111726668742865853: Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac. Duis faucibus vehicula elit. Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex. Vivamus porta risus vitae risus tempus accumsan. `,c=$localize`:␟07a4de6aff56dc7e8f7cf0cc58c5f3e2c69c466f␟5630758500957807765: Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi. Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim. Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl. In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet. Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt. Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo. Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien. `,u=$localize`:␟b8ce3d523ee34e7c5fe0d84a0b36da552781e335␟6834562474176054660: Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id. Sed tempor enim vel diam tincidunt condimentum. Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio. Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia. Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo. Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet. Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim. Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque. `,p=$localize`:␟645fa9ed60578f355e5e66a466fd02fc9ace91cb␟2887945398801586391: Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante. Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris. Maecenas orci est, volutpat sit amet elit in, gravida finibus justo. Vestibulum eget eros id risus elementum interdum eu quis nisi. Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem. Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex. Nam lobortis quam eget arcu tristique, id suscipit enim volutpat. Quisque pretium vel nisl eu aliquet. `,m=$localize`:␟fb4d1e0ce01940692d80037663169dffea9bf880␟2396240877469461361: Cancel `,d=$localize`:␟ddfdafd89fb7feae4ddfbbe5281c5797c054b97b␟7877743393246811554: Action `,[["id","nui-demo-default-dialog-btn","nui-button","","type","button",3,"click"],e,["content",""],["longContent",""],["nui-button","","type","button",1,"ml-3",3,"click"],n,["nuiResizeObserver","",3,"containerResize"],["dialog",""],["title",t,3,"closed"],[1,"dialog-body"],o,["nui-button","","type","button",3,"click"],i,["nui-button","","type","button","displayStyle","primary",3,"click"],a,[3,"toggleReference"],["overlay",""],[1,"overlay-class"],[1,"overlay-content"],[1,"header"],[1,"footer"],["nui-button","","displayStyle","action","type","button",3,"click"],["dialogLarge",""],["title",l,3,"closed"],r,s,c,u,p,m,d,["overlayLarge",""],["icon","status_critical"],[1,"body"]]},template:function(e,n){if(1&e){const e=c.Vb();c.Ub(0,"button",0),c.ic("click",function(){c.Gc(e);const t=c.Dc(3);return n.open(t)}),c.Yb(1,1),c.Tb(),c.Mc(2,F,22,1,"ng-template",null,2,c.Nc),c.Mc(4,W,35,1,"ng-template",null,3,c.Nc),c.Ub(6,"button",4),c.ic("click",function(){c.Gc(e);const t=c.Dc(5);return n.open(t)}),c.Yb(7,5),c.Tb()}},directives:[u.a,Y.a,j.a,L.a,p.a,B.a],styles:[".overlay-class[_ngcontent-%COMP%]{display:flex;height:100%;background-color:hsla(0,0%,100%,.9)}.overlay-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;max-width:460px;margin:auto;padding:30px;background-color:#fff;box-shadow:0 0 10px 12px #fff}.overlay-content[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:15px;line-height:22px;font-size:16px;font-weight:600;color:var(--nui-color-text-default,#111)}.overlay-content[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   nui-icon[_ngcontent-%COMP%]{margin-right:5px}.overlay-content[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]{display:flex;text-align:center;line-height:18px;font-size:13px}.overlay-content[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center}.overlay-content[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   button[displayStyle=action][_ngcontent-%COMP%], button[displayStyle=action][_ngcontent-%COMP%]{margin-right:15px}h1[_ngcontent-%COMP%]{margin-bottom:15px}"]}),e})();const H=[{path:"",component:(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-docs-example"]],decls:301,vars:1,consts:[["type","warning",3,"allowDismiss"],["href","../components/ComboboxV2Component.html#example","target","_blank"],["href","../components/SelectV2Component.html#example","target","_blank"],["type","info"],["filenamePrefix","overlay-simple-usage.example","exampleTitle","Basic Usage"],["filenamePrefix","overlay-popup-styles.example","exampleTitle","Using with popup styles"],["href","https://material.angular.io/cdk/overlay/api#OverlayConfig"],["filenamePrefix","overlay-viewport-margin.example","exampleTitle","Viewport Margin Example"],["filenamePrefix","overlay-show-hide-toggle.example","exampleTitle","Types of Overlay component Toggle"],["filenamePrefix","overlay-custom-styles.example","exampleTitle","Custom Styles Example"],["filenamePrefix","overlay-custom-container.example","exampleTitle","Custom Container Example"],["href","../../classes/OverlayPositionService.html","target","_blank"],["filenamePrefix","overlay-arrow.example","exampleTitle","Positioning and Arrow"],["href","https://material.angular.io/cdk/scrolling/api#CdkScrollable","target","_blank"],["filenamePrefix","overlay-custom-dialog","exampleTitle","Custom Dialog Overlay"],["filenamePrefix","custom-confirmation-inside-dialog","exampleTitle","Custom Overlay Dialog inside the nui-dialog"]],template:function(e,n){1&e&&(c.Ub(0,"p"),c.Ub(1,"code"),c.Oc(2,"<nui-overlay>"),c.Tb(),c.Oc(3," is a base component for the most of dropdown-like Nova components, but this doesn't limit it's abilities. It allows you to put any content into it's body to build more complex and exciting components. "),c.Pb(4,"br"),c.Pb(5,"br"),c.Oc(6," How "),c.Ub(7,"code"),c.Oc(8,"nui-overlay"),c.Tb(),c.Oc(9," is different from the legacy "),c.Ub(10,"code"),c.Oc(11,"nui-popup"),c.Tb(),c.Oc(12,"? The "),c.Ub(13,"code"),c.Oc(14,"nui-overlay"),c.Tb(),c.Oc(15," it is built using the modern and powerful "),c.Ub(16,"code"),c.Oc(17,"CDK Overlay"),c.Tb(),c.Oc(18," kindly provided, and well supported by "),c.Ub(19,"code"),c.Oc(20,"Angular CDK"),c.Tb(),c.Oc(21," team. It provides a better flexibility, customization, and in general is extremely easy to use.\n"),c.Tb(),c.Ub(22,"nui-message",0),c.Ub(23,"strong"),c.Oc(24,"Pay attention!"),c.Tb(),c.Oc(25," The following examples demonstrate only basic scenarios. To get familiar with more complex use cases, you can refer to the documentation for components built on top of the "),c.Ub(26,"code"),c.Oc(27,"nui-overlay"),c.Tb(),c.Oc(28,", such as "),c.Ub(29,"a",1),c.Oc(30,"nui-combobox-v2"),c.Tb(),c.Oc(31,", "),c.Ub(32,"a",2),c.Oc(33,"nui-select-v2"),c.Tb(),c.Oc(34,", etc., and explore their internal structure in the codebase.\n"),c.Tb(),c.Ub(35,"h2"),c.Oc(36,"Required Modules"),c.Tb(),c.Ub(37,"ul"),c.Ub(38,"li"),c.Ub(39,"code"),c.Oc(40,"NuiOverlayModule"),c.Tb(),c.Tb(),c.Tb(),c.Ub(41,"h2"),c.Oc(42,"Basic Usage"),c.Tb(),c.Ub(43,"p"),c.Oc(44," A simple popup can be added to the page by adding a "),c.Ub(45,"code"),c.Oc(46,"<nui-overlay>"),c.Tb(),c.Oc(47," element. Inside the "),c.Ub(48,"code"),c.Oc(49,"nui-overlay"),c.Tb(),c.Oc(50," element put anything you see as its content. Then define an element which will be a toggle for the "),c.Ub(51,"code"),c.Oc(52,"nui-overlay"),c.Tb(),c.Oc(53," at the same level, and sent it as a reference to the popup's "),c.Ub(54,"code"),c.Oc(55,"toggleReference"),c.Tb(),c.Oc(56," @Input. That is it! "),c.Ub(57,"nui-message",3),c.Oc(58," By default, "),c.Ub(59,"code"),c.Oc(60,"nui-overlay"),c.Tb(),c.Oc(61," can be closed only by toggling it via its "),c.Ub(62,"code"),c.Oc(63,"toggleReference"),c.Tb(),c.Oc(64," component, which means it won't close if click evens are triggered anywhere else on the page. Meaning this, it is recommended to subscribe to the popup's "),c.Ub(65,"code"),c.Oc(66,"clickOutside"),c.Tb(),c.Oc(67," @Output and close the nui-overlay using it's public "),c.Ub(68,"code"),c.Oc(69,"toggle()"),c.Tb(),c.Oc(70," method. "),c.Tb(),c.Tb(),c.Ub(71,"nui-example-wrapper",4),c.Pb(72,"nui-overlay-simple-usage-example"),c.Tb(),c.Ub(73,"h2"),c.Oc(74,"Using with popup styles"),c.Tb(),c.Ub(75,"p"),c.Oc(76," By default, overlay doesn't have a specific styling. You can apply popup styles to the basic overlay component. It includes such properties as "),c.Ub(77,"code"),c.Oc(78,"paddings"),c.Tb(),c.Oc(79,", "),c.Ub(80,"code"),c.Oc(81,"background-color"),c.Tb(),c.Oc(82," etc.\n"),c.Tb(),c.Ub(83,"p"),c.Oc(84," To do that, you have to pass "),c.Ub(85,"code"),c.Oc(86,'"with-popup-styles"'),c.Tb(),c.Oc(87," class as a "),c.Ub(88,"code"),c.Oc(89,"panelClass"),c.Tb(),c.Oc(90," for the "),c.Ub(91,"code"),c.Oc(92,"overlayConfig"),c.Tb(),c.Oc(93,". You can import "),c.Ub(94,"code"),c.Oc(95,"OVERLAY_WITH_POPUP_STYLES_CLASS"),c.Tb(),c.Oc(96," from "),c.Ub(97,"code"),c.Oc(98,"@nova-ui/bits"),c.Tb(),c.Oc(99," or just pass "),c.Ub(100,"code"),c.Oc(101,'"with-popup-styles"'),c.Tb(),c.Oc(102," as a string.\n"),c.Tb(),c.Ub(103,"nui-example-wrapper",5),c.Pb(104,"nui-overlay-popup-styles-example"),c.Tb(),c.Ub(105,"h2"),c.Oc(106,"Overlay Configuration"),c.Tb(),c.Ub(107,"p"),c.Ub(108,"code"),c.Oc(109,"nui-overlay"),c.Tb(),c.Oc(110," has all the benefits the "),c.Ub(111,"code"),c.Oc(112,"Angular CDK Overlay"),c.Tb(),c.Oc(113," provides, including a rich and flexible configuration. Use "),c.Ub(114,"code"),c.Oc(115,"overlayConfig"),c.Tb(),c.Oc(116," @Input of the component and follow the interface to configure the overlay to your likings. Please also reference the "),c.Ub(117,"a",6),c.Oc(118," official Angular CDK documentation"),c.Tb(),c.Oc(119," to see more information on how to configure the overlay.\n"),c.Tb(),c.Ub(120,"h2"),c.Oc(121,"Viewport Margin"),c.Tb(),c.Ub(122,"p"),c.Oc(123," You can easily manage edges of the container using "),c.Ub(124,"code"),c.Oc(125,"viewportMargin"),c.Tb(),c.Oc(126," input. It sets a minimum distance in px the overlay may be positioned to the edge of the viewport. Default value of "),c.Ub(127,"code"),c.Oc(128,"viewportMargin"),c.Tb(),c.Oc(129," is 30px.\n"),c.Tb(),c.Ub(130,"nui-example-wrapper",7),c.Pb(131,"nui-overlay-viewport-margin-example"),c.Tb(),c.Ub(132,"h2"),c.Oc(133,"Toggle Types"),c.Tb(),c.Ub(134,"p"),c.Oc(135," Not only the "),c.Ub(136,"code"),c.Oc(137,"toggleReference"),c.Tb(),c.Oc(138," is bale to show the "),c.Ub(139,"code"),c.Oc(140,"nui-overlay"),c.Tb(),c.Oc(141," up. The popover can be toggled with any other clickable element on the page. The public methods responsible for this are quite self-descriptive: "),c.Ub(142,"code"),c.Oc(143,"show()"),c.Tb(),c.Oc(144," will only pop the popup up, "),c.Ub(145,"code"),c.Oc(146,"hide()"),c.Tb(),c.Oc(147," will hide the popup from the view, and "),c.Ub(148,"code"),c.Oc(149,"toggle()"),c.Tb(),c.Oc(150," will do both. This adds a flexibiility on how you want your popup-ve to get toggled.\n"),c.Tb(),c.Ub(151,"nui-message",3),c.Oc(152," Notice below how "),c.Ub(153,"code"),c.Oc(154,"nui-overlay"),c.Tb(),c.Oc(155," is not closed if you click outside of its "),c.Ub(156,"code"),c.Oc(157,"toggleReference"),c.Tb(),c.Oc(158,". This is because we do not subscribe to its "),c.Ub(159,"code"),c.Oc(160,"clickOutside"),c.Tb(),c.Oc(161," @Output, and so we are only able to close the popup via a specific button, like "),c.Ub(162,"code"),c.Oc(163,"Hide"),c.Tb(),c.Oc(164,", or "),c.Ub(165,"code"),c.Oc(166,"Toggle"),c.Tb(),c.Oc(167,".\n"),c.Tb(),c.Ub(168,"nui-example-wrapper",8),c.Pb(169,"nui-overlay-show-hide-toggle-example"),c.Tb(),c.Ub(170,"h2"),c.Oc(171,"Custom Styles"),c.Tb(),c.Ub(172,"p"),c.Oc(173," In case tweaking the "),c.Ub(174,"code"),c.Oc(175,"nui-overlay"),c.Tb(),c.Oc(176," overlay styles via the "),c.Ub(177,"code"),c.Oc(178,"overlayConfig"),c.Tb(),c.Oc(179," was not enough, and brute force is needed, one can use the "),c.Ub(180,"code"),c.Oc(181,"styles"),c.Tb(),c.Oc(182," @Input to pass in the object with the inline styles to throw into the overlay.\n"),c.Tb(),c.Ub(183,"nui-example-wrapper",9),c.Pb(184,"nui-overlay-custom-styles-example"),c.Tb(),c.Ub(185,"h2"),c.Oc(186,"Custom Container"),c.Tb(),c.Ub(187,"p"),c.Oc(188," By default, the "),c.Ub(189,"code"),c.Oc(190,"nui-overlay"),c.Tb(),c.Oc(191," container appends to body. This is a default behavior suggested by the angular material cdk overlay. But there are cases when it is necessary to have overlay container append to some custom container. It is possible to attache the popup container to any custom container by simply providing either a "),c.Ub(192,"code"),c.Oc(193,"selector"),c.Tb(),c.Oc(194,", or an "),c.Ub(195,"code"),c.Oc(196,"element reference"),c.Tb(),c.Oc(197," to the "),c.Ub(198,"code"),c.Oc(199,"customContainer"),c.Tb(),c.Oc(200," @Input. See two ways of doing that in the example below.\n"),c.Tb(),c.Ub(201,"nui-example-wrapper",10),c.Pb(202,"nui-overlay-custom-container-example"),c.Tb(),c.Ub(203,"h2"),c.Oc(204,"Positioning and Arrow"),c.Tb(),c.Ub(205,"p"),c.Oc(206," By default, "),c.Ub(207,"code"),c.Oc(208,"<nui-overlay>"),c.Tb(),c.Oc(209," can be opened "),c.Ub(210,"code"),c.Oc(211,"top"),c.Tb(),c.Oc(212," or "),c.Ub(213,"code"),c.Oc(214,"bottom"),c.Tb(),c.Oc(215,".\n"),c.Tb(),c.Ub(216,"p"),c.Oc(217," It's possible to apply custom positioning to the "),c.Ub(218,"code"),c.Oc(219,"<nui-overlay>"),c.Tb(),c.Oc(220,". For that, use "),c.Ub(221,"a",11),c.Oc(222,"OverlayPositionService"),c.Tb(),c.Oc(223," (see usage in the example). It returns a set of available positions prioritizing them e.g. for "),c.Ub(224,"code"),c.Oc(225,"top"),c.Tb(),c.Oc(226," it will be: "),c.Ub(227,"code"),c.Oc(228,"top"),c.Tb(),c.Oc(229,", "),c.Ub(230,"code"),c.Oc(231,"bottom"),c.Tb(),c.Oc(232,", "),c.Ub(233,"code"),c.Oc(234,"left"),c.Tb(),c.Oc(235,", "),c.Ub(236,"code"),c.Oc(237,"right"),c.Tb(),c.Oc(238,".\n"),c.Tb(),c.Ub(239,"p"),c.Oc(240," Also, "),c.Ub(241,"code"),c.Oc(242,"<nui-overlay>"),c.Tb(),c.Oc(243," support using arrow at the edge of the overlay that points to the toggle reference. To use that, you need to put "),c.Ub(244,"code"),c.Oc(245,"<nui-overlay-arrow>"),c.Tb(),c.Oc(246," inside the "),c.Ub(247,"code"),c.Oc(248,"<nui-overlay>"),c.Tb(),c.Oc(249," (as in the example).\n"),c.Tb(),c.Ub(250,"p"),c.Oc(251," Arrow positioning uses specific CSS classes that are added automatically if using "),c.Ub(252,"a",11),c.Oc(253,"OverlayPositionService"),c.Tb(),c.Oc(254,". So, to use arrow inside the overlay you need to get a set of available positions with OverlayPositionService, pass them to the overlay component (see example) and put "),c.Ub(255,"code"),c.Oc(256,"<nui-overlay-arrow>"),c.Tb(),c.Oc(257," inside the "),c.Ub(258,"code"),c.Oc(259,"<nui-overlay>"),c.Tb(),c.Oc(260," template.\n"),c.Tb(),c.Ub(261,"p"),c.Ub(262,"strong"),c.Oc(263,"Drag the toggle to the edges of the viewport to see how it behaves."),c.Tb(),c.Tb(),c.Ub(264,"nui-example-wrapper",12),c.Pb(265,"nui-overlay-arrow-example"),c.Tb(),c.Ub(266,"h2"),c.Oc(267,"Setting Up Scrollable Containers"),c.Tb(),c.Ub(268,"p"),c.Oc(269," By default, "),c.Ub(270,"code"),c.Oc(271,"cdk-overlay"),c.Tb(),c.Oc(272," reacts on "),c.Ub(273,"code"),c.Oc(274,"document"),c.Tb(),c.Oc(275," scroll events, but there are numerous cases when multiple scrollable containers on the page are possible, or the scrollable container appears is a different place in the DOM, e.g. inside the appended to body overlay container. In this case it is advised to set the "),c.Ub(276,"code"),c.Ub(277,"a",13),c.Oc(278,"cdkScrollable"),c.Tb(),c.Tb(),c.Oc(279," directive to the container considered scrollable.\n"),c.Tb(),c.Ub(280,"h2"),c.Oc(281,"Custom Dialog Overlay"),c.Tb(),c.Ub(282,"p"),c.Oc(283," There are numerous cases when a user would want a lightweight dialog-looking overlay placed over the parent container to quickly confirm things, or make sure a users are immediately informed about any sort of state, progress etc. This can be done fast and easily with "),c.Ub(284,"code"),c.Oc(285,"nui-overlay"),c.Tb(),c.Oc(286," component with a few lines of code involved. By default, the "),c.Ub(287,"code"),c.Oc(288,"nui-overlay"),c.Tb(),c.Oc(289," position strategy is configured to attach the created cdk overlay to the bottom-left corner of the toggle reference, so it could be easily used for the most common use cases - selects, menus, comboboxes etc. To fill the parent container with the overlay we need to set new positions, so that the overlay would be attached to the top-left corner of the toggle reference container. Afterwards, all we need is toggle the overlay and using its overlay reference adjust the size of the overlay to the dimensions of the toggle reference container. And that's it! Please check the comments in the code snippets below.\n"),c.Tb(),c.Ub(290,"nui-example-wrapper",14),c.Pb(291,"nui-overlay-custom-dialog"),c.Tb(),c.Ub(292,"h2"),c.Oc(293,"Custom Dialog Overlay Inside the nui-dialog"),c.Tb(),c.Ub(294,"p"),c.Oc(295," This is yet another use case of the dialog-like overlay, this time inside the "),c.Ub(296,"code"),c.Oc(297,"nui-dialog"),c.Tb(),c.Oc(298," component. Click the button in the exampel below and attempt to cancel the dialog.\n"),c.Tb(),c.Ub(299,"nui-example-wrapper",15),c.Pb(300,"nui-custom-confirmation-inside-dialog"),c.Tb()),2&e&&(c.Cb(22),c.tc("allowDismiss",!1))},directives:[x.a,C.a,m,S,D,d,v,O,V,$,G],encapsulation:2}),e})(),data:{srlc:{stage:l.Jb.beta},showThemeSwitcher:!0}},{path:"basic",component:m,data:{srlc:{hideIndicator:!0}}},{path:"with-popup-styles",component:S,data:{srlc:{hideIndicator:!0}}},{path:"custom-styles",component:v,data:{srlc:{hideIndicator:!0}}},{path:"arrow",component:V,data:{srlc:{hideIndicator:!0}}},{path:"custom-container",component:O,data:{srlc:{hideIndicator:!0}}},{path:"toggle-examples",component:d,data:{srlc:{hideIndicator:!0}}},{path:"viewport-margin",component:D,data:{srlc:{hideIndicator:!0}}},{path:"custom-dialog",component:$,data:{srlc:{hideIndicator:!0}}},{path:"custom-confirmation-dialog",component:G,data:{srlc:{hideIndicator:!0}}},{path:"overlay-test",component:(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=c.Ib({type:e,selectors:[["nui-overlay-test"]],decls:0,vars:0,template:function(e,n){},styles:[".nui-demo-custom-class{background-color:#9acd32!important;font-family:Courier New,Courier,monospace;font-weight:700;-webkit-text-decoration:underline overline #000 dotted;text-decoration:underline overline #000 dotted;padding:20px}"],encapsulation:2}),e})(),data:{srlc:{hideIndicator:!0}}}];let K=(()=>{class e{}return e.\u0275mod=c.Mb({type:e}),e.\u0275inj=c.Lb({factory:function(n){return new(n||e)},providers:[{provide:l.f,useFactory:()=>t("Xw5q")}],imports:[[l.y,l.Z,l.P,l.O,l.N,l.v,l.H,l.D,l.J,i.s,i.j,l.w,l.X,l.G,l.M,o.h,a.f.forChild(H)],a.f]}),e})()},hx2c:function(e,n,t){"use strict";t.r(n),n.default=""},ik1l:function(e,n,t){"use strict";t.r(n),n.default='<button nui-button\n        #toggleButton\n        type="button"\n        [isEmpty]="false"\n        (click)="overlayWithStyles.toggle()"\n        i18n>\n        With popup styles\n</button>\n\n<nui-overlay #overlayWithStyles [toggleReference]="toggleButton[\'el\'].nativeElement" [overlayConfig]="overlayConfig">\n    <div style="width: 300px;">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\n    </div>\n</nui-overlay>\n\n<button nui-button\n        #toggleButton2\n        type="button"\n        [isEmpty]="false"\n        (click)="overlayNoStyles.toggle()"\n        style="float: right;"\n        i18n>\n        No popup styles\n</button>\n\n<nui-overlay #overlayNoStyles [toggleReference]="toggleButton2[\'el\'].nativeElement">\n    <div style="width: 300px;">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\n    </div>\n</nui-overlay>\n'},lM1q:function(e,n,t){"use strict";t.r(n),n.default='<div class="d-flex">\n    <button nui-button\n            #toggleButton\n            type="button"\n            class="mr-5"\n            i18n>\n            Overlay component Appears Here\n    </button>\n    <button nui-button\n            type="button"\n            (click)="popup.show()"\n            i18n>\n            Show\n    </button>\n    <button nui-button\n            type="button"\n            (click)="popup.hide()"\n            i18n>\n            Hide\n    </button>\n    <button nui-button\n            type="button"\n            (click)="popup.toggle()"\n            i18n>\n            Toggle\n    </button>\n</div>\n\n<nui-overlay #popup [toggleReference]="toggleButton[\'el\'].nativeElement">\n    <img src="https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg" class="w-100">\n</nui-overlay>\n'},mODz:function(e,n,t){"use strict";t.r(n),n.default='<div class="row">\n    <div class="col customContainer">\n        <div>Overlay component with Custom Container (via .class)</div>\n        <button nui-button\n                #toggleButton2\n                type="button"\n                (click)="overlay1.toggle()"\n                i18n>\n                Click\n        </button>\n    </div>\n    <div class="col" #customContainerId>\n        <div>Overlay component with Custom Container (via ElementRef)</div>\n        <button nui-button\n                #toggleButton1\n                type="button"\n                (click)="overlay2.toggle()"\n                i18n>\n                Click\n        </button>\n    </div>\n</div>\n\n<nui-overlay #overlay1\n              [toggleReference]="toggleButton2[\'el\'].nativeElement"\n              [customContainer]="\'.customContainer\'"\n              [overlayConfig]="overlayConfig">\n    <ng-container *ngFor="let item of itemsSource">\n        <nui-overlay-item class="list-item">{{item}}</nui-overlay-item>\n    </ng-container>\n</nui-overlay>\n\n<nui-overlay #overlay2\n              [toggleReference]="toggleButton1[\'el\'].nativeElement"\n              [customContainer]="customContainer"\n              [overlayConfig]="overlayConfig">\n    <ng-container *ngFor="let item of itemsSource">\n        <nui-overlay-item class="list-item">{{item}}</nui-overlay-item>\n    </ng-container>\n</nui-overlay>\n\n'},q3si:function(e,n,t){"use strict";t.r(n),n.default='export * from "./overlay-simple-usage/overlay-simple-usage.example.component";\nexport * from "./overlay-show-hide-toggle/overlay-show-hide-toggle.example.component";\nexport * from "./overlay-custom-styles/overlay-custom-styles.example.component";\nexport * from "./overlay-custom-container/overlay-custom-container.example.component";\nexport * from "./overlay-docs/overlay-docs.example.component";\nexport * from "./overlay-test/overlay-test.example.component";\nexport * from "./overlay-viewport-margin/overlay-viewport-margin-example.component";\nexport * from "./overlay-arrow/overlay-arrow.example.component";\nexport * from "./overlay-popup-styles/overlay-popup-styles.example.component";\nexport * from "./overlay-custom-dialog/overlay-custom-dialog.component";\nexport * from "./overlay-custom-confirmation-inside-dialog/overlay-custom-confirmation-inside-dialog.component";\n'},shKv:function(e,n,t){"use strict";t.r(n),n.default='import { OverlayConfig } from "@angular/cdk/overlay";\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";\nimport { OverlayComponent, OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\n\n@Component({\n    selector: "nui-overlay-popup-styles-example",\n    templateUrl: "./overlay-popup-styles.example.component.html",\n})\nexport class OverlayPopupStylesExampleComponent implements AfterViewInit, OnDestroy {\n\n    private destroy$: Subject<any> = new Subject();\n\n    public overlayConfig: OverlayConfig = {\n        panelClass: [OVERLAY_WITH_POPUP_STYLES_CLASS],\n    };\n\n    @ViewChild("overlayWithStyles") public overlayWithStyles: OverlayComponent;\n    @ViewChild("overlayNoStyles") public overlayNoStyles: OverlayComponent;\n\n    ngAfterViewInit() {\n        this.overlayWithStyles.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(_ => this.overlayWithStyles.hide());\n\n        this.overlayNoStyles.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(_ => this.overlayNoStyles.hide());\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},t2gJ:function(e,n,t){"use strict";t.r(n),n.default="// This is how the global styles look like\n\n.nui-overlay-styling-demo-custom-class {\n    border: 1px solid red;\n\n    .nui-overlay {\n        border: 2px red dashed;\n        padding: 10px;\n        background-color: antiquewhite;\n    }\n}\n"},tTY2:function(e,n,t){"use strict";t.r(n),n.default='import { OverlayConfig } from "@angular/cdk/overlay";\nimport { AfterViewInit, Component, OnDestroy, ViewChild, ViewEncapsulation } from "@angular/core";\nimport { OverlayComponent, OVERLAY_WITH_POPUP_STYLES_CLASS } from "@nova-ui/bits";\nimport { Subject } from "rxjs";\nimport { takeUntil } from "rxjs/operators";\n\n\n@Component({\n    selector: "nui-overlay-viewport-margin-example",\n    templateUrl: "./overlay-viewport-margin.example.component.html",\n    encapsulation: ViewEncapsulation.Emulated,\n})\nexport class OverlayViewportMarginExampleComponent implements AfterViewInit, OnDestroy {\n    public viewportMargin: number;\n    public items = Array.from({ length : 50 }).map((_, i) => `Item ${i}`);\n    public overlayConfig: OverlayConfig = {\n        panelClass: OVERLAY_WITH_POPUP_STYLES_CLASS,\n    };\n\n    private destroy$: Subject<any> = new Subject();\n\n    @ViewChild(OverlayComponent) public overlay: OverlayComponent;\n\n    public ngAfterViewInit() {\n        this.overlay.clickOutside\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(_ => this.overlay.hide());\n    }\n\n    public setViewportMargin(margin: number) {\n        this.viewportMargin = margin;\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n'},wNqF:function(e,n,t){"use strict";t.r(n),n.default='<button id="nui-demo-default-dialog-btn"\n        nui-button\n        type="button"\n        (click)="open(content)"\n        i18n>Click me!</button>\n\n<ng-template #content let-close="close" let-dismiss="dismiss">\n    <div #dialog nuiResizeObserver (containerResize)="onContainerResize(overlay)">\n        <nui-dialog-header title="Dialog title" i18n-title (closed)="close()"></nui-dialog-header>\n        <div class="dialog-body">\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n                Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n                Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n                Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n            </p>\n        </div>\n        <nui-dialog-footer>\n            <button nui-button type="button" (click)="triggerOverlay(overlay)" i18n>\n                Cancel\n            </button>\n            <button nui-button type="button" displayStyle="primary" (click)="actionDone(); close()" i18n>\n                Action\n            </button>\n        </nui-dialog-footer>\n    </div>\n    \x3c!-- By setting the [toggleReference] below we choose the container to apply our overlay to. The chosen container \n         can later be accessed via the overlay\'s \'overlayRef\' --\x3e\n    <nui-overlay #overlay [toggleReference]="dialog">\n        <div class="overlay-class">\n            <div class="overlay-content">\n                <div class="header">\n                    Are you sure you want to quit?\n                </div>\n                <div class="footer">\n                    <button nui-button displayStyle="action" type="button" (click)="overlay.hide()">No</button>\n                    <button nui-button type="button" (click)="overlay.hide(); close()">Yes</button>\n                </div>\n            </div>\n        </div>\n    </nui-overlay>\n</ng-template>\n\n<ng-template #longContent let-close="close">\n    <div #dialogLarge nuiResizeObserver (containerResize)="onContainerResize(overlayLarge)">\n        <nui-dialog-header title="Dialog title" i18n-title (closed)="close()"></nui-dialog-header>\n        <div class="dialog-body">\n            <p i18n>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n                Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n                Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n                Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n            </p>\n    \n            <p i18n>\n                Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\n                Duis faucibus vehicula elit.\n                Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\n                Vivamus porta risus vitae risus tempus accumsan.\n            </p>\n    \n            <p i18n>\n                Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\n                Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\n                Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\n                In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n                Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n                Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\n                Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\n            </p>\n    \n            <p i18n>\n                Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\n                Sed tempor enim vel diam tincidunt condimentum.\n                Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\n                Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\n                Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\n                Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\n                Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\n                Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\n            </p>\n    \n            <p i18n>\n                Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\n                Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\n                Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\n                Vestibulum eget eros id risus elementum interdum eu quis nisi.\n                Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n                Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\n                Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\n                Quisque pretium vel nisl eu aliquet.\n            </p>\n        </div>\n        <nui-dialog-footer>\n            <button nui-button type="button"\n                    (click)="triggerOverlay(overlayLarge)" i18n>\n                Cancel\n            </button>\n            <button nui-button type="button"\n                    displayStyle="primary"\n                    (click)="actionDone(); close()" i18n>\n                Action\n            </button>\n        </nui-dialog-footer>\n    </div>\n\n    <nui-overlay #overlayLarge [toggleReference]="dialogLarge">\n        <div class="overlay-class">\n            <div class="overlay-content">\n                <div class="header">\n                    <nui-icon icon="status_critical"></nui-icon>\n                    <span>Confirmation Title with Severity</span>\n                </div>\n                <div class="body">\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                        Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    </p>\n                </div>\n                <div class="footer">\n                    <button nui-button displayStyle="action" type="button" (click)="overlayLarge.hide()">Cancel</button>\n                    <button nui-button type="button" (click)="overlayLarge.hide(); close()">Yes</button>\n                </div>\n            </div>\n        </div>\n    </nui-overlay>\n</ng-template>\n\n<button class="ml-3" nui-button type="button" (click)="open(longContent)" i18n>Larger Content</button>\n\n'},xfxU:function(e,n,t){"use strict";t.r(n),n.default='<div class="arrow-example">\n    <div class="d-flex justify-content-between align-items-center mb-5">\n        <div class="dnd-button" cdkDrag #draggable=cdkDrag>\n            <button nui-button\n                class="toggle-button"\n                #toggleButton\n                type="button"\n                [isEmpty]="false"\n                (click)="overlay.toggle()"\n                i18n>\n                Draggable toggle\n            </button>\n        </div>\n\n        <button nui-button\n            class="h-50"\n            type="button"\n            [isEmpty]="false"\n            (click)="draggable.reset()"\n            i18n>\n            Reset draggable button\n        </button>\n    </div>\n\n\n    <nui-overlay #overlay\n        [toggleReference]="toggleButton[\'el\'].nativeElement"\n        [overlayConfig]="overlayConfig"\n        >\n        <img src="https://cdn.stocksnap.io/img-thumbs/960w/thumbs%20up-hand_QUWPLI693K.jpg" class="w-100">\n        <nui-overlay-arrow *ngIf="arrowSelectControl.value"></nui-overlay-arrow>\n    </nui-overlay>\n\n\n    Position: <nui-select-v2 placeholder="Select Position" i18n-placeholder [formControl]="positionSelectControl" class="select">\n        <nui-select-v2-option *ngFor="let position of possiblePositions" [value]="position">{{position}}</nui-select-v2-option>\n    </nui-select-v2>\n\n    Arrow: <nui-select-v2 placeholder="Select Arrow" i18n-placeholder [formControl]="arrowSelectControl" class="select">\n        <nui-select-v2-option *ngFor="let arrow of [true, false]" [value]="arrow">{{arrow}}</nui-select-v2-option>\n    </nui-select-v2>\n\n</div>\n\n'},zUvS:function(e,n,t){"use strict";t.r(n),n.default='import { DragDropModule } from "@angular/cdk/drag-drop";\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiCommonModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiOverlayAdditionsModule,\n    NuiOverlayModule,\n    NuiSearchModule,\n    NuiSelectV2Module,\n    SrlcStage\n} from "@nova-ui/bits";\n\nimport {\n    CustomConfirmationInsideDialogComponent,\n    OverlayArrowExampleComponent,\n    OverlayCustomContainerExampleComponent,\n    OverlayCustomDialogComponent,\n    OverlayCustomStylesExampleComponent,\n    OverlayDocsComponent,\n    OverlayPopupStylesExampleComponent,\n    OverlayShowHideToggleExampleComponent,\n    OverlaySimpleExampleComponent,\n    OverlayTestComponent,\n    OverlayViewportMarginExampleComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: OverlayDocsComponent,\n        data: {\n            "srlc": {\n                stage: SrlcStage.beta,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "basic",\n        component: OverlaySimpleExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "with-popup-styles",\n        component: OverlayPopupStylesExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "custom-styles",\n        component: OverlayCustomStylesExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "arrow",\n        component: OverlayArrowExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "custom-container",\n        component: OverlayCustomContainerExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "toggle-examples",\n        component: OverlayShowHideToggleExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "viewport-margin",\n        component: OverlayViewportMarginExampleComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "custom-dialog",\n        component: OverlayCustomDialogComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "custom-confirmation-dialog",\n        component: CustomConfirmationInsideDialogComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "overlay-test",\n        component: OverlayTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCommonModule,\n        NuiSelectV2Module,\n        NuiOverlayModule,\n        NuiOverlayAdditionsModule,\n        NuiMessageModule,\n        NuiButtonModule,\n        NuiExpanderModule,\n        NuiDialogModule,\n        NuiIconModule,\n        ReactiveFormsModule,\n        FormsModule,\n        NuiCheckboxModule,\n        NuiSearchModule,\n        NuiDocsModule,\n        NuiMenuModule,\n        DragDropModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        OverlaySimpleExampleComponent,\n        OverlayShowHideToggleExampleComponent,\n        OverlayTestComponent,\n        OverlayCustomStylesExampleComponent,\n        OverlayCustomContainerExampleComponent,\n        OverlayDocsComponent,\n        OverlayViewportMarginExampleComponent,\n        OverlayArrowExampleComponent,\n        OverlayPopupStylesExampleComponent,\n        OverlayCustomDialogComponent,\n        CustomConfirmationInsideDialogComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class OverlayModule {\n}\n'}}]);