{"version":3,"sources":["./demo/src/components/demo/sorter/sorter.module.ts","./demo/src/components/demo/sorter/sorter-basic/sorter-basic.example.component.ts","./demo/src/components/demo/sorter/sorter-basic/sorter-basic.example.component.html","webpack:///./demo/src/components/demo/sorter/sorter-docs/sorter-docs.example.component.ts?ea03","./demo/src/components/demo/sorter/sorter-docs/sorter-docs.example.component.ts","./demo/src/components/demo/sorter/sorter-docs/sorter-docs.example.component.html","webpack:///./demo/src/components/demo/sorter/sorter.module.ts?f1f9","./demo/src/components/demo/sorter/sorter-test/sorter-test.example.component.less","webpack:///./demo/src/components/demo/sorter/sorter-visual-test/sorter-visual-test-harness.component.html?1385","webpack:///./demo/src/components/demo/sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.html?16ae","webpack:///./demo/src/components/demo/sorter/sorter-docs/sorter-docs.example.component.html?23ef","./demo/src/components/demo/sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.less","webpack:///./demo/src/components/demo/sorter/sorter-test/sorter-test.example.component.html?2b16","./demo/src/components/demo/sorter/sorter-basic/sorter-basic.example.component.less","webpack:///./demo/src/components/demo/sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.ts?32c9","./demo/src/components/demo/sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.less","webpack:///./demo/src/components/demo/sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.html?7644","webpack:///./demo/src/components/demo/sorter/sorter-basic/sorter-basic.example.component.html?7bfe","webpack:///./demo/src/components/demo/sorter/sorter-visual-test/sorter-visual-test-harness.component.ts?7e63","webpack:///./demo/src/components/demo/sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.ts?86ce","webpack:///./demo/src/components/demo/sorter/sorter-basic/sorter-basic.example.component.ts?9a21","./demo/src/components/demo/sorter/sorter-test/sorter-test.example.component.ts","./demo/src/components/demo/sorter/sorter-test/sorter-test.example.component.html","./demo/src/components/demo/sorter/sorter-visual-test/sorter-visual-test-harness.component.ts","./demo/src/components/demo/sorter/sorter-visual-test/sorter-visual-test-harness.component.html","./demo/src/components/demo/sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.ts","./demo/src/components/demo/sorter/sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.html","webpack:///./demo/src/components/demo/sorter/sorter-test/sorter-test.example.component.ts?bfe3","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?96c0","./demo/src/components/demo/sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.ts","./demo/src/components/demo/sorter/sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.html"],"names":[],"mappings":"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","file":"demo-sorter-sorter-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRepeatModule,\n    NuiSorterModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport { SorterBasicExampleComponent } from \"./sorter-basic/sorter-basic.example.component\";\nimport { SorterExampleComponent } from \"./sorter-docs/sorter-docs.example.component\";\nimport { SorterLegacyStringInputUsageVisualTestComponent } from \"./sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component\";\nimport { SorterRecommendedUsageVisualTestComponent } from \"./sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component\";\nimport { SorterVisualTestHarnessComponent } from \"./sorter-visual-test/sorter-visual-test-harness.component\";\nimport {SorterTestExampleComponent} from \"./sorter-test/sorter-test.example.component\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: SorterExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"sorter-test\",\n        component: SorterTestExampleComponent,\n    },\n    {\n        path: \"visual-test\",\n        component: SorterVisualTestHarnessComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiSorterModule,\n        NuiRepeatModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SorterBasicExampleComponent,\n        SorterLegacyStringInputUsageVisualTestComponent,\n        SorterExampleComponent,\n        SorterRecommendedUsageVisualTestComponent,\n        SorterVisualTestHarnessComponent,\n        SorterTestExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class SorterModule {\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { IMenuItem, ISorterChanges, SorterDirection } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: \"nui-sorter-basic-example\",\n    templateUrl: \"./sorter-basic.example.component.html\",\n    styleUrls: [\"./sorter-basic.example.component.less\"],\n})\nexport class SorterBasicExampleComponent implements OnInit {\n    public readonly columns: IMenuItem[] = [\n        {\n            title: $localize`Title`,\n            value: \"title\",\n        },\n        {\n            title: $localize`Year`,\n            value: \"year\",\n        },\n        {\n            title: $localize`Director`,\n            value: \"director\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[1].value;\n    public items: IFilm[] = getData();\n\n    public ngOnInit() {\n        this.sortItems(this.sortBy, this.initialSortDirection);\n    }\n\n    public onSorterAction(changeEvent: ISorterChanges) {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(this.items, [sortBy], [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\n    }\n}\n\nfunction getData(): IFilm[] {\n    return [\n        { title: \"Vertigo\", year: \"1958\", director: \"Alfred Hitchcock\" },\n        { title: \"Citizen Kane\", year: \"1941\", director: \"Orson Welles\" },\n        { title: \"2001: A Space Odyssey\", year: \"1968\", director: \"Stanley Kubrick\" },\n        { title: \"The Godfather\", year: \"1972\", director: \"Francis Ford Coppola\" },\n        { title: \"Mulholland Dr.\", year: \"2001\", director: \"David Lynch\" },\n        { title: \"Taxi Driver\", year: \"1976\", director: \"Martin Scorsese\" },\n        { title: \"La Dolce Vita\", year: \"1960\", director: \"Federico Fellini\" },\n        { title: \"The Silence of the Lambs\", year: \"1991\", director: \"Jonathan Demme\" },\n        { title: \"The Terminator\", year: \"1984\", director: \"James Cameron\" },\n    ];\n}\n","<nui-sorter id=\"nui-demo-sorter\"\n            i18n-caption\n            caption=\"Sorter Caption\"\n            [itemsSource]=\"columns\"\n            [selectedItem]=\"sortBy\"\n            [sortDirection]=\"initialSortDirection\"\n            (sorterAction)=\"onSorterAction($event)\">\n</nui-sorter>\n<nui-repeat [itemsSource]=\"items\" [repeatItemTemplateRef]=\"repeatItemTemplate\">\n    <div repeatHeaderTemplate>\n        <div class=\"sorter-flex-header\">\n            <div class=\"sorter-flex-row\">\n                <div class=\"sorter-flex-item header-item\" *ngFor=\"let col of columns;\">{{ col.title }}</div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item=\"item\">\n    <div class=\"sorter-flex-row\">\n        <div class=\"sorter-flex-item\">{{item.title}}</div>\n        <div class=\"sorter-flex-item\">{{item.year}}</div>\n        <div class=\"sorter-flex-item\">{{item.director}}</div>\n    </div>\n</ng-template>\n","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { IMenuItem, ISortedItem, ISorterChanges, SorterComponent } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-sorter-docs-example\\\",\\n    templateUrl: \\\"./sorter-docs.example.component.html\\\",\\n})\\nexport class SorterExampleComponent {\\n    getSorterPropKey(key: keyof SorterComponent): string {\\n        return key;\\n    }\\n\\n    getISorterChangesInterfaceKey(key: keyof ISorterChanges): string {\\n        return key;\\n    }\\n\\n    getISortedItemInterfaceKey(key: keyof ISortedItem): string {\\n        return key;\\n    }\\n\\n    getIMenuItemInterfaceKey(key: keyof IMenuItem): string {\\n        return key;\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\nimport { IMenuItem, ISortedItem, ISorterChanges, SorterComponent } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-sorter-docs-example\",\n    templateUrl: \"./sorter-docs.example.component.html\",\n})\nexport class SorterExampleComponent {\n    getSorterPropKey(key: keyof SorterComponent): string {\n        return key;\n    }\n\n    getISorterChangesInterfaceKey(key: keyof ISorterChanges): string {\n        return key;\n    }\n\n    getISortedItemInterfaceKey(key: keyof ISortedItem): string {\n        return key;\n    }\n\n    getIMenuItemInterfaceKey(key: keyof IMenuItem): string {\n        return key;\n    }\n}\n","<p>\n    The <code>nui-sorter</code> component provides a toggle mechanism for sorting a set of items in\n    ascending or descending order. The value to sort by can be selected by the user via a dropdown.\n</p>\n\n<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSorterModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<h3>Inputs</h3>\n<p>\n    <code>{{ getSorterPropKey(\"itemsSource\") }}</code> - To get the sorter working, provide an array of\n    type <code><a href=\"../interfaces/IMenuItem.html\" target=\"_blank\">IMenuItem[]</a></code> to the\n    <code>{{ getSorterPropKey(\"itemsSource\") }}</code> input. Each item in the array should be set with a\n    <code>{{ getIMenuItemInterfaceKey(\"title\") }}</code> and\n    <code>{{ getIMenuItemInterfaceKey(\"value\") }}</code> for populating the sorter dropdown. The title\n    property is for display and can be localized. The value property is what's actually used for sorting.\n</p>\n<p>\n    <code>{{ getSorterPropKey(\"selectedItem\") }}</code> - To specify an initial value to sort by,\n    optionally set the <code>{{ getSorterPropKey(\"selectedItem\") }}</code> input with an item's\n    <code>{{ getIMenuItemInterfaceKey(\"value\") }}</code> from the\n    <code>{{ getSorterPropKey(\"itemsSource\") }}</code> array. By default, the initial sort-by value is\n    the <code>{{ getIMenuItemInterfaceKey(\"value\") }}</code> of the first item in the\n    <code>{{ getSorterPropKey(\"itemsSource\") }}</code>\n</p>\n<p>\n    <code>{{ getSorterPropKey(\"sortDirection\") }}</code> - To specify an initial sorting direction,\n    optionally set the <code>{{ getSorterPropKey(\"sortDirection\") }}</code> input with a value of type\n    <code><a href=\"../miscellaneous/enumerations.html#SorterDirection\" target=\"_blank\">SorterDirection</a></code>.\n    By default, the initial sorting direction is <code>SorterDirection.ascending</code>.\n</p>\n<p>\n    <code>{{ getSorterPropKey(\"caption\") }}</code> - To specify a caption, optionally set the\n    <code>{{ getSorterPropKey(\"caption\") }}</code> input with a string value.\n</p>\n\n<h3>Sorter Action Output</h3>\n<p>\n    The sorter responds to user interaction by emitting a\n    <code>{{ getSorterPropKey(\"sorterAction\") }}</code> output with an\n    <code><a href=\"../interfaces/ISorterChanges.html\" target=\"_blank\">ISorterChanges</a></code> payload.\n    The <code>{{ getISorterChangesInterfaceKey(\"oldValue\") }}</code> and\n    <code>{{ getISorterChangesInterfaceKey(\"newValue\") }}</code> in the payload are each of type\n    <code><a href=\"../interfaces/ISortedItem.html\" target=\"_blank\">ISortedItem</a></code>. User\n    actions that trigger the output include changing the sorting direction and selecting a new item\n    to sort by. Bind to this output to set a new value for the\n    <code>{{ getSorterPropKey(\"selectedItem\") }}</code> input and to sort your items according to the\n    payload's\n    <code>{{ getISorterChangesInterfaceKey(\"newValue\") }}.{{ getISortedItemInterfaceKey(\"sortBy\") }}</code>\n    value.\n</p>\n\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    <strong>Note:</strong> The sorter component does not emit an initial sorterAction output. As a\n    result, be sure to perform an initial sorting of your items in your component's\n    <code>ngOnInit</code>. Thereafter, user-initiated sorting can be handled via your sorterAction output\n    handler.\n</nui-message>\n\n<nui-example-wrapper filenamePrefix=\"sorter-basic\" exampleTitle=\"Simple Sorter\">\n    <nui-sorter-basic-example></nui-sorter-basic-example>\n</nui-example-wrapper>\n","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiDocsModule,\\n    NuiMessageModule,\\n    NuiRepeatModule,\\n    NuiSorterModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { SorterBasicExampleComponent } from \\\"./sorter-basic/sorter-basic.example.component\\\";\\nimport { SorterExampleComponent } from \\\"./sorter-docs/sorter-docs.example.component\\\";\\nimport { SorterLegacyStringInputUsageVisualTestComponent } from \\\"./sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component\\\";\\nimport { SorterRecommendedUsageVisualTestComponent } from \\\"./sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component\\\";\\nimport { SorterVisualTestHarnessComponent } from \\\"./sorter-visual-test/sorter-visual-test-harness.component\\\";\\nimport {SorterTestExampleComponent} from \\\"./sorter-test/sorter-test.example.component\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: SorterExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"sorter-test\\\",\\n        component: SorterTestExampleComponent,\\n    },\\n    {\\n        path: \\\"visual-test\\\",\\n        component: SorterVisualTestHarnessComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiSorterModule,\\n        NuiRepeatModule,\\n        NuiMessageModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        SorterBasicExampleComponent,\\n        SorterLegacyStringInputUsageVisualTestComponent,\\n        SorterExampleComponent,\\n        SorterRecommendedUsageVisualTestComponent,\\n        SorterVisualTestHarnessComponent,\\n        SorterTestExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class SorterModule {\\n}\\n\";","export default \"@col-width: 180px;\\n\\n.sorter-flex-row {\\n    display: flex;    \\n    flex-grow: 0;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    width: 100%;\\n    padding: 0px 10px;\\n}\\n.sorter-flex-header{\\n    padding-left: 3px;\\n    margin-left: 5px;\\n    margin-right: 10px;\\n}\\n.header-item {\\n    font-weight: bold;  \\n    margin-top: 10px;\\n}\\n.sorter-flex-item {\\n    padding: 5px;\\n    flex-grow: 1;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    padding-right: 10px;\\n    width: @col-width;\\n}\\n\";","export default \"<div class=\\\"container\\\">\\n    <h2>Sorter</h2>\\n    <nui-sorter-recommended-usage-visual-test></nui-sorter-recommended-usage-visual-test>\\n    <br>\\n    <h2>Sorter With Legacy String Input</h2>\\n    <nui-sorter-legacy-string-input-usage-visual-test></nui-sorter-legacy-string-input-usage-visual-test>\\n</div>\\n\";","export default \"<nui-sorter id=\\\"nui-demo-sorter-legacy-string-input\\\"\\n            caption=\\\"Sorter Caption\\\"\\n            [itemsSource]=\\\"columns\\\"\\n            [selectedItem]=\\\"sortBy\\\"\\n            [sortDirection]=\\\"initialSortDirection\\\"\\n            (sorterAction)=\\\"onSorterAction($event)\\\">\\n</nui-sorter>\\n<nui-repeat [itemsSource]=\\\"items\\\" [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n    <div repeatHeaderTemplate>\\n        <div class=\\\"sorter-flex-header\\\">\\n            <div class=\\\"sorter-flex-row\\\">\\n                <div class=\\\"sorter-flex-item header-item\\\" *ngFor=\\\"let col of columns;\\\">{{ col | titlecase }}</div>\\n            </div>\\n        </div>\\n    </div>\\n</nui-repeat>\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"sorter-flex-row\\\">\\n        <div class=\\\"sorter-flex-item\\\">{{item.title}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.year}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.director}}</div>\\n    </div>\\n</ng-template>\\n\";","export default \"<p>\\n    The <code>nui-sorter</code> component provides a toggle mechanism for sorting a set of items in\\n    ascending or descending order. The value to sort by can be selected by the user via a dropdown.\\n</p>\\n\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiSorterModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<h3>Inputs</h3>\\n<p>\\n    <code>{{ getSorterPropKey(\\\"itemsSource\\\") }}</code> - To get the sorter working, provide an array of\\n    type <code><a href=\\\"../interfaces/IMenuItem.html\\\" target=\\\"_blank\\\">IMenuItem[]</a></code> to the\\n    <code>{{ getSorterPropKey(\\\"itemsSource\\\") }}</code> input. Each item in the array should be set with a\\n    <code>{{ getIMenuItemInterfaceKey(\\\"title\\\") }}</code> and\\n    <code>{{ getIMenuItemInterfaceKey(\\\"value\\\") }}</code> for populating the sorter dropdown. The title\\n    property is for display and can be localized. The value property is what's actually used for sorting.\\n</p>\\n<p>\\n    <code>{{ getSorterPropKey(\\\"selectedItem\\\") }}</code> - To specify an initial value to sort by,\\n    optionally set the <code>{{ getSorterPropKey(\\\"selectedItem\\\") }}</code> input with an item's\\n    <code>{{ getIMenuItemInterfaceKey(\\\"value\\\") }}</code> from the\\n    <code>{{ getSorterPropKey(\\\"itemsSource\\\") }}</code> array. By default, the initial sort-by value is\\n    the <code>{{ getIMenuItemInterfaceKey(\\\"value\\\") }}</code> of the first item in the\\n    <code>{{ getSorterPropKey(\\\"itemsSource\\\") }}</code>\\n</p>\\n<p>\\n    <code>{{ getSorterPropKey(\\\"sortDirection\\\") }}</code> - To specify an initial sorting direction,\\n    optionally set the <code>{{ getSorterPropKey(\\\"sortDirection\\\") }}</code> input with a value of type\\n    <code><a href=\\\"../miscellaneous/enumerations.html#SorterDirection\\\" target=\\\"_blank\\\">SorterDirection</a></code>.\\n    By default, the initial sorting direction is <code>SorterDirection.ascending</code>.\\n</p>\\n<p>\\n    <code>{{ getSorterPropKey(\\\"caption\\\") }}</code> - To specify a caption, optionally set the\\n    <code>{{ getSorterPropKey(\\\"caption\\\") }}</code> input with a string value.\\n</p>\\n\\n<h3>Sorter Action Output</h3>\\n<p>\\n    The sorter responds to user interaction by emitting a\\n    <code>{{ getSorterPropKey(\\\"sorterAction\\\") }}</code> output with an\\n    <code><a href=\\\"../interfaces/ISorterChanges.html\\\" target=\\\"_blank\\\">ISorterChanges</a></code> payload.\\n    The <code>{{ getISorterChangesInterfaceKey(\\\"oldValue\\\") }}</code> and\\n    <code>{{ getISorterChangesInterfaceKey(\\\"newValue\\\") }}</code> in the payload are each of type\\n    <code><a href=\\\"../interfaces/ISortedItem.html\\\" target=\\\"_blank\\\">ISortedItem</a></code>. User\\n    actions that trigger the output include changing the sorting direction and selecting a new item\\n    to sort by. Bind to this output to set a new value for the\\n    <code>{{ getSorterPropKey(\\\"selectedItem\\\") }}</code> input and to sort your items according to the\\n    payload's\\n    <code>{{ getISorterChangesInterfaceKey(\\\"newValue\\\") }}.{{ getISortedItemInterfaceKey(\\\"sortBy\\\") }}</code>\\n    value.\\n</p>\\n\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    <strong>Note:</strong> The sorter component does not emit an initial sorterAction output. As a\\n    result, be sure to perform an initial sorting of your items in your component's\\n    <code>ngOnInit</code>. Thereafter, user-initiated sorting can be handled via your sorterAction output\\n    handler.\\n</nui-message>\\n\\n<nui-example-wrapper filenamePrefix=\\\"sorter-basic\\\" exampleTitle=\\\"Simple Sorter\\\">\\n    <nui-sorter-basic-example></nui-sorter-basic-example>\\n</nui-example-wrapper>\\n\";","export default \"@col-width: 180px;\\n\\n.sorter-flex-row {\\n    display: flex;    \\n    flex-grow: 0;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    width: 100%;\\n    padding: 0px 10px;\\n}\\n.sorter-flex-header{\\n    padding-left: 3px;\\n    margin-left: 5px;\\n    margin-right: 10px;\\n}\\n.header-item {\\n    font-weight: bold;  \\n    margin-top: 10px;\\n}\\n.sorter-flex-item {\\n    padding: 5px;\\n    flex-grow: 1;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    padding-right: 10px;\\n    width: @col-width;\\n}\\n\";","export default \"<nui-sorter id=\\\"nui-demo-sorter\\\"\\n            i18n-caption\\n            caption=\\\"Sorter Caption\\\"\\n            [itemsSource]=\\\"columns\\\"\\n            [selectedItem]=\\\"sortBy\\\"\\n            [sortDirection]=\\\"sortDirection\\\"\\n            (sorterAction)=\\\"onSorterAction($event)\\\">\\n</nui-sorter>\\n<button (click)=\\\"resetSorter()\\\">reset sorter</button>\\n<button (click)=\\\"updateSorterByProperty()\\\">update sorter by property</button>\\n<button (click)=\\\"updateSorterByMethod()\\\">update sorter by method</button>\\n<button (click)=\\\"updateSorterDirection()\\\">update sorter direction</button>\\n\\n<nui-repeat [itemsSource]=\\\"items\\\" [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n    <div repeatHeaderTemplate>\\n        <div class=\\\"sorter-flex-header\\\">\\n            <div class=\\\"sorter-flex-row\\\">\\n                <div class=\\\"sorter-flex-item header-item\\\" *ngFor=\\\"let col of columns;\\\">{{ col.title }}</div>\\n            </div>\\n        </div>\\n    </div>\\n</nui-repeat>\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"sorter-flex-row\\\">\\n        <div class=\\\"sorter-flex-item\\\">{{item.title}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.year}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.director}}</div>\\n    </div>\\n</ng-template>\\n\";","export default \"@col-width: 180px;\\n\\n.sorter-flex-row {\\n    display: flex;    \\n    flex-grow: 0;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    width: 100%;\\n    padding: 0px 10px;\\n}\\n.sorter-flex-header{\\n    padding-left: 3px;\\n    margin-left: 5px;\\n    margin-right: 10px;\\n}\\n.header-item {\\n    font-weight: bold;  \\n    margin-top: 10px;\\n}\\n.sorter-flex-item {\\n    padding: 5px;\\n    flex-grow: 1;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    padding-right: 10px;\\n    width: @col-width;\\n}\\n\";","export default \"import { Component, OnInit } from \\\"@angular/core\\\";\\nimport { IMenuItem, ISorterChanges, SorterDirection } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\ninterface IFilm {\\n    title: string;\\n    year: string;\\n    director: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-sorter-recommended-usage-visual-test\\\",\\n    templateUrl: \\\"./sorter-recommended-usage-visual-test.component.html\\\",\\n    styleUrls: [\\\"./sorter-recommended-usage-visual-test.component.less\\\"],\\n})\\nexport class SorterRecommendedUsageVisualTestComponent implements OnInit {\\n    public readonly columns: IMenuItem[] = [\\n        {\\n            title: $localize`LongColumnNameForTitleLongColumnNameForTitle`,\\n            value: \\\"title\\\",\\n        },\\n        {\\n            title: $localize`Year`,\\n            value: \\\"year\\\",\\n        },\\n        {\\n            title: $localize`Director`,\\n            value: \\\"director\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.columns[1].value;\\n\\n    public items: IFilm[] = [\\n        { title: \\\"Vertigo\\\", year: \\\"1958\\\", director: \\\"Alfred Hitchcock\\\" },\\n        { title: \\\"Citizen Kane\\\", year: \\\"1941\\\", director: \\\"Orson Welles\\\" },\\n        { title: \\\"2001: A Space Odyssey\\\", year: \\\"1968\\\", director: \\\"Stanley Kubrick\\\" },\\n        { title: \\\"The Godfather\\\", year: \\\"1972\\\", director: \\\"Francis Ford Coppola\\\" },\\n        { title: \\\"Mulholland Dr.\\\", year: \\\"2001\\\", director: \\\"David Lynch\\\" },\\n        { title: \\\"Taxi Driver\\\", year: \\\"1976\\\", director: \\\"Martin Scorsese\\\" },\\n        { title: \\\"La Dolce Vita\\\", year: \\\"1960\\\", director: \\\"Federico Fellini\\\" },\\n        { title: \\\"The Silence of the Lambs\\\", year: \\\"1991\\\", director: \\\"Jonathan Demme\\\" },\\n        { title: \\\"The Terminator\\\", year: \\\"1984\\\", director: \\\"James Cameron\\\" },\\n    ];\\n\\n    ngOnInit() {\\n        this.sortItems(this.sortBy, this.initialSortDirection);\\n    }\\n\\n    onSorterAction(changeEvent: ISorterChanges) {\\n        this.sortBy = changeEvent.newValue.sortBy;\\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\\n    }\\n\\n    private sortItems(sortBy: string, direction: SorterDirection) {\\n        this.items = _orderBy(this.items, [sortBy],\\n            [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\\n    }\\n}\\n\";","export default \"@col-width: 180px;\\n\\n.sorter-flex-row {\\n    display: flex;\\n    flex-grow: 0;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    width: 100%;\\n    padding: 0px 10px;\\n}\\n.sorter-flex-header{\\n    padding-left: 3px;\\n    margin-left: 5px;\\n    margin-right: 10px;\\n}\\n.header-item {\\n    font-weight: bold;\\n    margin-top: 10px;\\n}\\n.sorter-flex-item {\\n    padding: 5px;\\n    flex-grow: 1;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    padding-right: 10px;\\n    width: @col-width;\\n}\\n\";","export default \"<nui-sorter id=\\\"nui-demo-sorter\\\"\\n            caption=\\\"Sorter Caption\\\"\\n            [itemsSource]=\\\"columns\\\"\\n            [selectedItem]=\\\"sortBy\\\"\\n            [sortDirection]=\\\"initialSortDirection\\\"\\n            (sorterAction)=\\\"onSorterAction($event)\\\">\\n</nui-sorter>\\n<nui-repeat [itemsSource]=\\\"items\\\" [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n    <div repeatHeaderTemplate>\\n        <div class=\\\"sorter-flex-header\\\">\\n            <div class=\\\"sorter-flex-row\\\">\\n                <div class=\\\"sorter-flex-item header-item\\\" *ngFor=\\\"let col of columns;\\\">\\n                    {{ col.title }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</nui-repeat>\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"sorter-flex-row\\\">\\n        <div class=\\\"sorter-flex-item\\\">{{item.title}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.year}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.director}}</div>\\n    </div>\\n</ng-template>\\n\";","export default \"<nui-sorter id=\\\"nui-demo-sorter\\\"\\n            i18n-caption\\n            caption=\\\"Sorter Caption\\\"\\n            [itemsSource]=\\\"columns\\\"\\n            [selectedItem]=\\\"sortBy\\\"\\n            [sortDirection]=\\\"initialSortDirection\\\"\\n            (sorterAction)=\\\"onSorterAction($event)\\\">\\n</nui-sorter>\\n<nui-repeat [itemsSource]=\\\"items\\\" [repeatItemTemplateRef]=\\\"repeatItemTemplate\\\">\\n    <div repeatHeaderTemplate>\\n        <div class=\\\"sorter-flex-header\\\">\\n            <div class=\\\"sorter-flex-row\\\">\\n                <div class=\\\"sorter-flex-item header-item\\\" *ngFor=\\\"let col of columns;\\\">{{ col.title }}</div>\\n            </div>\\n        </div>\\n    </div>\\n</nui-repeat>\\n<ng-template #repeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"sorter-flex-row\\\">\\n        <div class=\\\"sorter-flex-item\\\">{{item.title}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.year}}</div>\\n        <div class=\\\"sorter-flex-item\\\">{{item.director}}</div>\\n    </div>\\n</ng-template>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    templateUrl: \\\"./sorter-visual-test-harness.component.html\\\",\\n})\\nexport class SorterVisualTestHarnessComponent { }\\n\";","export default \"import { AfterViewInit, Component } from \\\"@angular/core\\\";\\nimport { ISorterChanges, SorterDirection } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\ninterface IFilm {\\n    title: string;\\n    year: string;\\n    director: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-sorter-legacy-string-input-usage-visual-test\\\",\\n    templateUrl: \\\"./sorter-legacy-string-input-usage-visual-test.component.html\\\",\\n    styleUrls: [\\\"./sorter-legacy-string-input-usage-visual-test.component.less\\\"],\\n})\\nexport class SorterLegacyStringInputUsageVisualTestComponent implements AfterViewInit {\\n    public readonly columns = [\\\"title\\\", \\\"year\\\", \\\"director\\\"];\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.columns[1];\\n\\n    public items: IFilm[] = [\\n        { title: \\\"Vertigo\\\", year: \\\"1958\\\", director: \\\"Alfred Hitchcock\\\" },\\n        { title: \\\"Citizen Kane\\\", year: \\\"1941\\\", director: \\\"Orson Welles\\\" },\\n        { title: \\\"2001: A Space Odyssey\\\", year: \\\"1968\\\", director: \\\"Stanley Kubrick\\\" },\\n        { title: \\\"The Godfather\\\", year: \\\"1972\\\", director: \\\"Francis Ford Coppola\\\" },\\n        { title: \\\"Mulholland Dr.\\\", year: \\\"2001\\\", director: \\\"David Lynch\\\" },\\n        { title: \\\"Taxi Driver\\\", year: \\\"1976\\\", director: \\\"Martin Scorsese\\\" },\\n        { title: \\\"La Dolce Vita\\\", year: \\\"1960\\\", director: \\\"Federico Fellini\\\" },\\n        { title: \\\"The Silence of the Lambs\\\", year: \\\"1991\\\", director: \\\"Jonathan Demme\\\" },\\n        { title: \\\"The Terminator\\\", year: \\\"1984\\\", director: \\\"James Cameron\\\" },\\n    ];\\n\\n    ngAfterViewInit() {\\n        this.sortItems(this.sortBy, this.initialSortDirection);\\n    }\\n\\n    onSorterAction(changeEvent: ISorterChanges) {\\n        this.sortBy = changeEvent.newValue.sortBy;\\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\\n    }\\n\\n    private sortItems(sortBy: string, direction: SorterDirection) {\\n        this.items = _orderBy(this.items, [sortBy],\\n            [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\\n    }\\n}\\n\";","export default \"import { Component, OnInit } from \\\"@angular/core\\\";\\nimport { IMenuItem, ISorterChanges, SorterDirection } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\ninterface IFilm {\\n    title: string;\\n    year: string;\\n    director: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-sorter-basic-example\\\",\\n    templateUrl: \\\"./sorter-basic.example.component.html\\\",\\n    styleUrls: [\\\"./sorter-basic.example.component.less\\\"],\\n})\\nexport class SorterBasicExampleComponent implements OnInit {\\n    public readonly columns: IMenuItem[] = [\\n        {\\n            title: $localize`Title`,\\n            value: \\\"title\\\",\\n        },\\n        {\\n            title: $localize`Year`,\\n            value: \\\"year\\\",\\n        },\\n        {\\n            title: $localize`Director`,\\n            value: \\\"director\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.columns[1].value;\\n    public items: IFilm[] = getData();\\n\\n    public ngOnInit() {\\n        this.sortItems(this.sortBy, this.initialSortDirection);\\n    }\\n\\n    public onSorterAction(changeEvent: ISorterChanges) {\\n        this.sortBy = changeEvent.newValue.sortBy;\\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\\n    }\\n\\n    private sortItems(sortBy: string, direction: SorterDirection) {\\n        this.items = _orderBy(this.items, [sortBy], [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\\n    }\\n}\\n\\nfunction getData(): IFilm[] {\\n    return [\\n        { title: \\\"Vertigo\\\", year: \\\"1958\\\", director: \\\"Alfred Hitchcock\\\" },\\n        { title: \\\"Citizen Kane\\\", year: \\\"1941\\\", director: \\\"Orson Welles\\\" },\\n        { title: \\\"2001: A Space Odyssey\\\", year: \\\"1968\\\", director: \\\"Stanley Kubrick\\\" },\\n        { title: \\\"The Godfather\\\", year: \\\"1972\\\", director: \\\"Francis Ford Coppola\\\" },\\n        { title: \\\"Mulholland Dr.\\\", year: \\\"2001\\\", director: \\\"David Lynch\\\" },\\n        { title: \\\"Taxi Driver\\\", year: \\\"1976\\\", director: \\\"Martin Scorsese\\\" },\\n        { title: \\\"La Dolce Vita\\\", year: \\\"1960\\\", director: \\\"Federico Fellini\\\" },\\n        { title: \\\"The Silence of the Lambs\\\", year: \\\"1991\\\", director: \\\"Jonathan Demme\\\" },\\n        { title: \\\"The Terminator\\\", year: \\\"1984\\\", director: \\\"James Cameron\\\" },\\n    ];\\n}\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { IMenuItem, ISorterChanges, SorterComponent, SorterDirection } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { BehaviorSubject } from \"rxjs\";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: \"nui-sorter-test-example\",\n    templateUrl: \"./sorter-test.example.component.html\",\n    styleUrls: [\"./sorter-test.example.component.less\"],\n})\nexport class SorterTestExampleComponent implements OnInit {\n    private readonly emptyColumns: IMenuItem[] = [{\n        title: $localize`Empty`,\n        value: \"\",\n    }];\n    public readonly dataColumns: IMenuItem[] = [\n        {\n            title: $localize`Title`,\n            value: \"title\",\n        },\n        {\n            title: $localize`Year`,\n            value: \"year\",\n        },\n        {\n            title: $localize`Director`,\n            value: \"director\",\n        },\n    ];\n\n    public columns: IMenuItem[] = this.dataColumns;\n\n    @ViewChild(SorterComponent)\n    private sorter: SorterComponent;\n\n    private readonly showSubject = new BehaviorSubject(true);\n    public readonly show$ = this.showSubject.asObservable();\n    public sortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[0].value;\n    public items: IFilm[] = getData();\n\n    public ngOnInit() {\n        this.sortItems(this.sortBy, this.sortDirection);\n    }\n\n    public updateSorterDirection() {\n        const old = this.sortDirection;\n        this.sortDirection = (old === SorterDirection.ascending) ?\n        SorterDirection.descending : SorterDirection.ascending;\n    }\n\n    public onSorterAction(changeEvent: ISorterChanges) {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\n    }\n\n    private delayPromise(delay: number = 0): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    public async resetSorter() {\n        this.showSubject.next(false);\n        await this.delayPromise();\n        this.columns = this.emptyColumns;\n        this.sortBy = \"\";\n        this.showSubject.next(true);\n        console.log(\"THIS\", this);\n    }\n\n    public updateSorterByProperty() {\n        this.columns = this.dataColumns;\n        this.sortBy = this.dataColumns[1].value;\n    }\n\n    public updateSorterByMethod() {\n        this.columns = this.dataColumns;\n        this.sorter.select(this.dataColumns[2]);\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(this.items, [sortBy], [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\n    }\n}\n\nfunction getData(): IFilm[] {\n    return [\n        { title: \"Vertigo\", year: \"1958\", director: \"Alfred Hitchcock\" },\n        { title: \"Citizen Kane\", year: \"1941\", director: \"Orson Welles\" },\n        { title: \"2001: A Space Odyssey\", year: \"1968\", director: \"Stanley Kubrick\" },\n        { title: \"The Godfather\", year: \"1972\", director: \"Francis Ford Coppola\" },\n        { title: \"Mulholland Dr.\", year: \"2001\", director: \"David Lynch\" },\n        { title: \"Taxi Driver\", year: \"1976\", director: \"Martin Scorsese\" },\n        { title: \"La Dolce Vita\", year: \"1960\", director: \"Federico Fellini\" },\n        { title: \"The Silence of the Lambs\", year: \"1991\", director: \"Jonathan Demme\" },\n        { title: \"The Terminator\", year: \"1984\", director: \"James Cameron\" },\n    ];\n}\n","<nui-sorter id=\"nui-demo-sorter\"\n            i18n-caption\n            caption=\"Sorter Caption\"\n            [itemsSource]=\"columns\"\n            [selectedItem]=\"sortBy\"\n            [sortDirection]=\"sortDirection\"\n            (sorterAction)=\"onSorterAction($event)\">\n</nui-sorter>\n<button (click)=\"resetSorter()\">reset sorter</button>\n<button (click)=\"updateSorterByProperty()\">update sorter by property</button>\n<button (click)=\"updateSorterByMethod()\">update sorter by method</button>\n<button (click)=\"updateSorterDirection()\">update sorter direction</button>\n\n<nui-repeat [itemsSource]=\"items\" [repeatItemTemplateRef]=\"repeatItemTemplate\">\n    <div repeatHeaderTemplate>\n        <div class=\"sorter-flex-header\">\n            <div class=\"sorter-flex-row\">\n                <div class=\"sorter-flex-item header-item\" *ngFor=\"let col of columns;\">{{ col.title }}</div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item=\"item\">\n    <div class=\"sorter-flex-row\">\n        <div class=\"sorter-flex-item\">{{item.title}}</div>\n        <div class=\"sorter-flex-item\">{{item.year}}</div>\n        <div class=\"sorter-flex-item\">{{item.director}}</div>\n    </div>\n</ng-template>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl: \"./sorter-visual-test-harness.component.html\",\n})\nexport class SorterVisualTestHarnessComponent { }\n","<div class=\"container\">\n    <h2>Sorter</h2>\n    <nui-sorter-recommended-usage-visual-test></nui-sorter-recommended-usage-visual-test>\n    <br>\n    <h2>Sorter With Legacy String Input</h2>\n    <nui-sorter-legacy-string-input-usage-visual-test></nui-sorter-legacy-string-input-usage-visual-test>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { IMenuItem, ISorterChanges, SorterDirection } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: \"nui-sorter-recommended-usage-visual-test\",\n    templateUrl: \"./sorter-recommended-usage-visual-test.component.html\",\n    styleUrls: [\"./sorter-recommended-usage-visual-test.component.less\"],\n})\nexport class SorterRecommendedUsageVisualTestComponent implements OnInit {\n    public readonly columns: IMenuItem[] = [\n        {\n            title: $localize`LongColumnNameForTitleLongColumnNameForTitle`,\n            value: \"title\",\n        },\n        {\n            title: $localize`Year`,\n            value: \"year\",\n        },\n        {\n            title: $localize`Director`,\n            value: \"director\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[1].value;\n\n    public items: IFilm[] = [\n        { title: \"Vertigo\", year: \"1958\", director: \"Alfred Hitchcock\" },\n        { title: \"Citizen Kane\", year: \"1941\", director: \"Orson Welles\" },\n        { title: \"2001: A Space Odyssey\", year: \"1968\", director: \"Stanley Kubrick\" },\n        { title: \"The Godfather\", year: \"1972\", director: \"Francis Ford Coppola\" },\n        { title: \"Mulholland Dr.\", year: \"2001\", director: \"David Lynch\" },\n        { title: \"Taxi Driver\", year: \"1976\", director: \"Martin Scorsese\" },\n        { title: \"La Dolce Vita\", year: \"1960\", director: \"Federico Fellini\" },\n        { title: \"The Silence of the Lambs\", year: \"1991\", director: \"Jonathan Demme\" },\n        { title: \"The Terminator\", year: \"1984\", director: \"James Cameron\" },\n    ];\n\n    ngOnInit() {\n        this.sortItems(this.sortBy, this.initialSortDirection);\n    }\n\n    onSorterAction(changeEvent: ISorterChanges) {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(this.items, [sortBy],\n            [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\n    }\n}\n","<nui-sorter id=\"nui-demo-sorter\"\n            caption=\"Sorter Caption\"\n            [itemsSource]=\"columns\"\n            [selectedItem]=\"sortBy\"\n            [sortDirection]=\"initialSortDirection\"\n            (sorterAction)=\"onSorterAction($event)\">\n</nui-sorter>\n<nui-repeat [itemsSource]=\"items\" [repeatItemTemplateRef]=\"repeatItemTemplate\">\n    <div repeatHeaderTemplate>\n        <div class=\"sorter-flex-header\">\n            <div class=\"sorter-flex-row\">\n                <div class=\"sorter-flex-item header-item\" *ngFor=\"let col of columns;\">\n                    {{ col.title }}\n                </div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item=\"item\">\n    <div class=\"sorter-flex-row\">\n        <div class=\"sorter-flex-item\">{{item.title}}</div>\n        <div class=\"sorter-flex-item\">{{item.year}}</div>\n        <div class=\"sorter-flex-item\">{{item.director}}</div>\n    </div>\n</ng-template>\n","export default \"import { Component, OnInit, ViewChild } from \\\"@angular/core\\\";\\nimport { IMenuItem, ISorterChanges, SorterComponent, SorterDirection } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { BehaviorSubject } from \\\"rxjs\\\";\\n\\ninterface IFilm {\\n    title: string;\\n    year: string;\\n    director: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-sorter-test-example\\\",\\n    templateUrl: \\\"./sorter-test.example.component.html\\\",\\n    styleUrls: [\\\"./sorter-test.example.component.less\\\"],\\n})\\nexport class SorterTestExampleComponent implements OnInit {\\n    private readonly emptyColumns: IMenuItem[] = [{\\n        title: $localize`Empty`,\\n        value: \\\"\\\",\\n    }];\\n    public readonly dataColumns: IMenuItem[] = [\\n        {\\n            title: $localize`Title`,\\n            value: \\\"title\\\",\\n        },\\n        {\\n            title: $localize`Year`,\\n            value: \\\"year\\\",\\n        },\\n        {\\n            title: $localize`Director`,\\n            value: \\\"director\\\",\\n        },\\n    ];\\n\\n    public columns: IMenuItem[] = this.dataColumns;\\n\\n    @ViewChild(SorterComponent)\\n    private sorter: SorterComponent;\\n\\n    private readonly showSubject = new BehaviorSubject(true);\\n    public readonly show$ = this.showSubject.asObservable();\\n    public sortDirection = SorterDirection.ascending;\\n    public sortBy = this.columns[0].value;\\n    public items: IFilm[] = getData();\\n\\n    public ngOnInit() {\\n        this.sortItems(this.sortBy, this.sortDirection);\\n    }\\n\\n    public updateSorterDirection() {\\n        const old = this.sortDirection;\\n        this.sortDirection = (old === SorterDirection.ascending) ?\\n        SorterDirection.descending : SorterDirection.ascending;\\n    }\\n\\n    public onSorterAction(changeEvent: ISorterChanges) {\\n        this.sortBy = changeEvent.newValue.sortBy;\\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\\n    }\\n\\n    private delayPromise(delay: number = 0): Promise<void> {\\n        return new Promise((resolve) => {\\n            setTimeout(resolve, delay);\\n        });\\n    }\\n\\n    public async resetSorter() {\\n        this.showSubject.next(false);\\n        await this.delayPromise();\\n        this.columns = this.emptyColumns;\\n        this.sortBy = \\\"\\\";\\n        this.showSubject.next(true);\\n        console.log(\\\"THIS\\\", this);\\n    }\\n\\n    public updateSorterByProperty() {\\n        this.columns = this.dataColumns;\\n        this.sortBy = this.dataColumns[1].value;\\n    }\\n\\n    public updateSorterByMethod() {\\n        this.columns = this.dataColumns;\\n        this.sorter.select(this.dataColumns[2]);\\n    }\\n\\n    private sortItems(sortBy: string, direction: SorterDirection) {\\n        this.items = _orderBy(this.items, [sortBy], [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\\n    }\\n}\\n\\nfunction getData(): IFilm[] {\\n    return [\\n        { title: \\\"Vertigo\\\", year: \\\"1958\\\", director: \\\"Alfred Hitchcock\\\" },\\n        { title: \\\"Citizen Kane\\\", year: \\\"1941\\\", director: \\\"Orson Welles\\\" },\\n        { title: \\\"2001: A Space Odyssey\\\", year: \\\"1968\\\", director: \\\"Stanley Kubrick\\\" },\\n        { title: \\\"The Godfather\\\", year: \\\"1972\\\", director: \\\"Francis Ford Coppola\\\" },\\n        { title: \\\"Mulholland Dr.\\\", year: \\\"2001\\\", director: \\\"David Lynch\\\" },\\n        { title: \\\"Taxi Driver\\\", year: \\\"1976\\\", director: \\\"Martin Scorsese\\\" },\\n        { title: \\\"La Dolce Vita\\\", year: \\\"1960\\\", director: \\\"Federico Fellini\\\" },\\n        { title: \\\"The Silence of the Lambs\\\", year: \\\"1991\\\", director: \\\"Jonathan Demme\\\" },\\n        { title: \\\"The Terminator\\\", year: \\\"1984\\\", director: \\\"James Cameron\\\" },\\n    ];\\n}\\n\";","var map = {\n\t\"./sorter-basic/sorter-basic.example.component.html\": \"e/4S\",\n\t\"./sorter-basic/sorter-basic.example.component.less\": \"MYqL\",\n\t\"./sorter-basic/sorter-basic.example.component.ts\": \"miG2\",\n\t\"./sorter-docs/sorter-docs.example.component.html\": \"I+9q\",\n\t\"./sorter-docs/sorter-docs.example.component.ts\": \"6gPP\",\n\t\"./sorter-test/sorter-test.example.component.html\": \"KxaQ\",\n\t\"./sorter-test/sorter-test.example.component.less\": \"9z4P\",\n\t\"./sorter-test/sorter-test.example.component.ts\": \"v+OT\",\n\t\"./sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.html\": \"Fq5Q\",\n\t\"./sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.less\": \"IFsN\",\n\t\"./sorter-visual-test/sorter-legacy-string-input-usage/sorter-legacy-string-input-usage-visual-test.component.ts\": \"hs6M\",\n\t\"./sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.html\": \"dkSH\",\n\t\"./sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.less\": \"bSMB\",\n\t\"./sorter-visual-test/sorter-recommended-usage/sorter-recommended-usage-visual-test.component.ts\": \"Msn7\",\n\t\"./sorter-visual-test/sorter-visual-test-harness.component.html\": \"E4VQ\",\n\t\"./sorter-visual-test/sorter-visual-test-harness.component.ts\": \"fmNZ\",\n\t\"./sorter.module.ts\": \"8flc\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"vU4O\";","import { AfterViewInit, Component } from \"@angular/core\";\nimport { ISorterChanges, SorterDirection } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\ninterface IFilm {\n    title: string;\n    year: string;\n    director: string;\n}\n\n@Component({\n    selector: \"nui-sorter-legacy-string-input-usage-visual-test\",\n    templateUrl: \"./sorter-legacy-string-input-usage-visual-test.component.html\",\n    styleUrls: [\"./sorter-legacy-string-input-usage-visual-test.component.less\"],\n})\nexport class SorterLegacyStringInputUsageVisualTestComponent implements AfterViewInit {\n    public readonly columns = [\"title\", \"year\", \"director\"];\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.columns[1];\n\n    public items: IFilm[] = [\n        { title: \"Vertigo\", year: \"1958\", director: \"Alfred Hitchcock\" },\n        { title: \"Citizen Kane\", year: \"1941\", director: \"Orson Welles\" },\n        { title: \"2001: A Space Odyssey\", year: \"1968\", director: \"Stanley Kubrick\" },\n        { title: \"The Godfather\", year: \"1972\", director: \"Francis Ford Coppola\" },\n        { title: \"Mulholland Dr.\", year: \"2001\", director: \"David Lynch\" },\n        { title: \"Taxi Driver\", year: \"1976\", director: \"Martin Scorsese\" },\n        { title: \"La Dolce Vita\", year: \"1960\", director: \"Federico Fellini\" },\n        { title: \"The Silence of the Lambs\", year: \"1991\", director: \"Jonathan Demme\" },\n        { title: \"The Terminator\", year: \"1984\", director: \"James Cameron\" },\n    ];\n\n    ngAfterViewInit() {\n        this.sortItems(this.sortBy, this.initialSortDirection);\n    }\n\n    onSorterAction(changeEvent: ISorterChanges) {\n        this.sortBy = changeEvent.newValue.sortBy;\n        this.sortItems(changeEvent.newValue.sortBy, changeEvent.newValue.direction);\n    }\n\n    private sortItems(sortBy: string, direction: SorterDirection) {\n        this.items = _orderBy(this.items, [sortBy],\n            [direction as (SorterDirection.ascending | SorterDirection.descending)]) as IFilm[];\n    }\n}\n","<nui-sorter id=\"nui-demo-sorter-legacy-string-input\"\n            caption=\"Sorter Caption\"\n            [itemsSource]=\"columns\"\n            [selectedItem]=\"sortBy\"\n            [sortDirection]=\"initialSortDirection\"\n            (sorterAction)=\"onSorterAction($event)\">\n</nui-sorter>\n<nui-repeat [itemsSource]=\"items\" [repeatItemTemplateRef]=\"repeatItemTemplate\">\n    <div repeatHeaderTemplate>\n        <div class=\"sorter-flex-header\">\n            <div class=\"sorter-flex-row\">\n                <div class=\"sorter-flex-item header-item\" *ngFor=\"let col of columns;\">{{ col | titlecase }}</div>\n            </div>\n        </div>\n    </div>\n</nui-repeat>\n<ng-template #repeatItemTemplate let-item=\"item\">\n    <div class=\"sorter-flex-row\">\n        <div class=\"sorter-flex-item\">{{item.title}}</div>\n        <div class=\"sorter-flex-item\">{{item.year}}</div>\n        <div class=\"sorter-flex-item\">{{item.director}}</div>\n    </div>\n</ng-template>\n"],"sourceRoot":"webpack:///"}