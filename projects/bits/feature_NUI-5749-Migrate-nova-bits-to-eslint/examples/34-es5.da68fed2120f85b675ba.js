!function(){var t,o,e,n,i,s,a,l,c,r,u,p,d,b,m,h,g,T,f,v,C,y,x,O,w,S,M,k,U,I,P,E,D,H,$,B,z,N,W,A,F,j,L,R,_,Y,V,G,K;function Q(t,o){return o||(o=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(o)}}))}function q(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}function J(t,o){for(var e=0;e<o.length;e++){var n=o[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Z(t,o,e){return o&&J(t.prototype,o),e&&J(t,e),t}(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{"+SQs":function(t,o,e){"use strict";e.r(o),o.default='<div *ngIf="isDisplayed; else notoast">\n    <nui-message type="info" [allowDismiss]="false">\n        <div i18n>ID of last toast shown: {{lastShown}}</div>\n    </nui-message>\n    <nui-message type="info" [allowDismiss]="false">\n        <div id="toast-example-click-counter" i18n>Clicks on toast: {{clickCount}}</div>\n    </nui-message>\n</div>\n<ng-template #notoast><nui-message type="info" [allowDismiss]="false" i18n>No toast displayed</nui-message></ng-template>\n<nui-divider></nui-divider>\n<button nui-button type="button" id="nui-toast-events-example" (click)="onShowToast($event)" i18n>Show Toast</button>\n'},"/aG4":function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-type-example",\n    templateUrl: "./toast-type.example.component.html",\n})\nexport class ToastTypeExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowInfo(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Info`,\n            message: $localize `E pluribus unum (/\u02c8i\u02d0 \u02c8pl\u028a\u0259r\u026ab\u0259s \u02c8ju\u02d0n\u0259m/; Latin: [\u02c8e\u02d0 \u02c8plu\u02d0r\u026ab\u028as \u02c8u\u02d0n\u0169\u02d0]) is Latin for \'Out of many, one\'`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onShowSuccess(highlightMode: boolean): void {\n        this.toastService.success({\n            title: $localize `Success`,\n            message: $localize `Well done!`,\n            options:  this.getOptions(),\n        });\n    }\n\n    public onShowWarning(highlightMode: boolean): void {\n        this.toastService.warning({\n            title: $localize `Warning`,\n            message: $localize `There can be only one.`,\n            options:  this.getOptions(),\n        });\n    }\n\n    public onShowError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize `Error`,\n            message: $localize `Nope.`,\n            options:  this.getOptions(),\n        });\n    }\n\n    public clear(): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 3000,\n            extendedTimeOut: 1000,\n        };\n    }\n}\n'},"0/8W":function(t,o,e){"use strict";e.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiToastModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<div>\n    You can use <code>IToastService</code>, <code>ToastService</code> to show a (usually) temporary message (toast),\n    associated with some event. In example below we\'re showing a toast message when the "Show Toast" button is clicked.\n    Following construction is used to create a toast:\n    <code>IToastService.info(toastDeclaration: <a href="../interfaces/IToastDeclaration.html">IToastDeclaration</a>)</code>.\n    Any property in <a href="../interfaces/IToastDeclaration.html"><code>IToastDeclaration</code></a> is optional.\n</div>\n<p>\n    When using the toast component with a title, a space is automatically inserted in front of the message body to create spacial separation from the title.\n    In addition to the provided space, it\'s suggested that the user add a sentence-ending punctuation mark to the title to further emphasize this separation.\n</p>\n<nui-example-wrapper filenamePrefix="toast-basic" exampleTitle="Basic usage">\n    <nui-toast-basic-example></nui-toast-basic-example>\n</nui-example-wrapper>\n\n<h2>Basic Usage With Html</h2>\n<p>\n    Toast allows HTML usage inside the <code>{{getToastDeclarationKey("message")}}</code> container by\n    default. Note: The provided value will be sanitized and rendered.\n</p>\n<p>\n    To configure a toast to display HTML as plain text, set the\n    <code>{{getToastConfigKey("enableHtml")}}</code> property in\n    <code>{{getToastDeclarationKey("options")}}</code> to <code>false</code>.\n</p>\n<p>\n    When the <code>{{getToastConfigKey("enableHtml")}}</code> flag is turned on, all the content will be\n    sanitized, basic tags for changing fonts are often allowed, such as <code>&lt;b&gt;</code>, \n    <code>&lt;i&gt;</code>, <code>&lt;u&gt;</code>, <code>&lt;em&gt;</code>, and \n    <code>&lt;strong&gt;</code>. More advanced tags such as <code>&lt;script&gt;</code>,\n    <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>, and <code>&lt;link&gt;</code> are removed by\n    the sanitization process. Additionally, potentially dangerous attributes such as\n    <code>onclick</code> are removed in order to prevent malicious code from being injected.\n</p>\n<nui-example-wrapper filenamePrefix="toast-basic-html" exampleTitle="Basic HTML Usage">\n    <nui-toast-basic-html-example></nui-toast-basic-html-example>\n</nui-example-wrapper>\n\n<h2>Types</h2>\n<p>\n    Toast types allows you to convey some contextual information about the message by applying different styles to toasts.\n</p>\n<nui-example-wrapper filenamePrefix="toast-type" exampleTitle="Types">\n    <nui-toast-type-example></nui-toast-type-example>\n</nui-example-wrapper>\n\n<h2>Configuration</h2>\n<p>\n    Toast messages are highly configurable via <a href="../interfaces/IToastConfig.html">IToastConfig</a> interface.\n    The following example employs some of the more common settings:\n    <br/>\n    <code>\n        extendedTimeOut: 2000,\n        clickToDismiss: true,\n        closeButton: true,\n        positionClass: "toast-bottom-right",\n        progressBar: true,\n        progressAnimation: "increasing",\n        timeOut: 5000\n    </code>\n</p>\n<nui-example-wrapper filenamePrefix="toast-config" exampleTitle="Configuration">\n    <nui-toast-config-example></nui-toast-config-example>\n</nui-example-wrapper>\n\n<h2>Positioning</h2>\n<p>\n    The position of a toast message is determined by the value of <code>IToastConfig.positionClass</code>.\n    By default toast is positioned top-right. To implement different positioning you must pass one of available\n    options from <a href="../miscellaneous/enumerations.html#ToastPositionClass"><code>ToastPositionClass</code></a>\n    to <a href="../interfaces/IToastConfig.html"><code>IToastConfig</code></a> positionClass property.<br /><br />\n\n    It is also possible to set a custom class to configure the position of the <code>nui-toast</code>.  Simply populate\n    the <code>IToastConfig.positionClass</code> with the custom css class name.\n\n    <nui-message type="warning" [allowDismiss]="false">\n        Make sure you defined a custom class in a global stylesheet\n    </nui-message>\n</p>\n<nui-example-wrapper filenamePrefix="toast-position" exampleTitle="Positioning">\n    <nui-toast-position-example></nui-toast-position-example>\n</nui-example-wrapper>\n\n<h2>Sticky Error</h2>\n<p>\n    You can also optionally force error toasts to remain visible indefinitely using <code>IToastConfig.stickyError</code>.\n    Note, that this option is only available with <code>IToastService.error</code>.\n</p>\n<nui-example-wrapper filenamePrefix="toast-sticky-error" exampleTitle="Sticky error">\n    <nui-toast-sticky-error-example></nui-toast-sticky-error-example>\n</nui-example-wrapper>\n\n<h2>Events</h2>\n<p>\n    With <a href="../interfaces/IActiveToast.html">IActiveToast</a>, it\'s possible to\n    capture (and act upon) following events per toast instance:\n</p>\n<ul>\n    <li><code>onShown</code></li>\n    <li><code>onHidden</code></li>\n    <li><code>onClick</code></li>\n</ul>\n<nui-example-wrapper filenamePrefix="toast-events" exampleTitle="Events">\n    <nui-toast-events-example></nui-toast-events-example>\n</nui-example-wrapper>\n'},"1Fq8":function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-position-example",\n    templateUrl: "./toast-position.example.component.html",\n})\nexport class ToastPositionExampleComponent implements OnInit {\n    public toastPositions = [\n        {\n            displayValue: $localize `Top Right`,\n            className: ToastPositionClass.TOP_RIGHT,\n        },\n        {\n            displayValue: $localize `Top Left`,\n            className: ToastPositionClass.TOP_LEFT,\n        },\n        {\n            displayValue: $localize `Bottom Right`,\n            className: ToastPositionClass.BOTTOM_RIGHT,\n        },\n        {\n            displayValue: $localize `Bottom Left`,\n            className: ToastPositionClass.BOTTOM_LEFT,\n        },\n        {\n            displayValue: $localize `Top Full Width`,\n            className: ToastPositionClass.TOP_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize `Bottom Full Width`,\n            className: ToastPositionClass.BOTTOM_FULL_WIDTH,\n        },\n        {\n            displayValue: $localize `Top Center`,\n            className: ToastPositionClass.TOP_CENTER,\n        },\n        {\n            displayValue: $localize `Bottom Center`,\n            className: ToastPositionClass.BOTTOM_CENTER,\n        },\n        {\n            displayValue: $localize `CUSTOM CLASS (top: 200px; right: 200px)`,\n            className: "demoToastCustomClass",\n        },\n    ];\n    public selectedPosition: ToastPositionClass | string = this.toastPositions[0].className;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Position Example`,\n            message: this.selectedPosition,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            positionClass: this.selectedPosition,\n        };\n    }\n}\n'},"32Qo":function(t,o,e){"use strict";e.r(o),o.default='<button nui-button type="button" id="nui-show-sticky-error-toast-example" (click)="onShowStickyError($event)" i18n>Show Sticky Error</button>\n<button nui-button type="button" id="nui-hide-sticky-error-toast-example" (click)="onHideStickyError($event)" i18n>Hide Sticky Error</button>\n'},Cfpd:function(t,o,e){"use strict";e.r(o),o.default='<div class="container pt-5">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-positions">\n                <button id="nui-toast-button-all-positions" (click)="showToastsAllPositions($event, 200000)">Trigger all positions</button>\n            </div>\n            <div class="d-flex justify-content-start" id="nui-toast-fw">\n                <button id="nui-toast-position-fw" (click)="showToastsFullWidth($event, 10000)">Full Width</button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Basic Toast Positioned defferently</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start">\n                <button id="nui-toast-clear-all-toasts" (click)="clearToast($event)">Clear All Toasts</button>\n                <button id="nui-toast-sticky" (click)="callStickyToast($event)">Call Sticky Error!</button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages adjust size</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-buttons-chain">\n                <button id="nui-toast-adjust-size" (click)="showToastsAdjustSize($event, 10000)">Trigger all toast messages</button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages with no header</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-buttons-chain-no-header">\n                <button id="nui-toast-no-header" (click)="showToastsNoHeader($event, 10000)">Trigger all toast messages</button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <h3>Toast messages with progress bar</h3>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="d-flex justify-content-start" id="nui-toast-positions">\n                <button id="nui-toast-button-all-positions-progress-bar" (click)="showToastsAllPositions($event, 300000, true)">Trigger all positions</button>\n            </div>\n        </div>\n    </div>\n</div>\n'},"Dy+8":function(t,o,e){"use strict";e.r(o),o.default='<button nui-button type="button" id="nui-basic-toast-example" (click)="onShowToast($event)" i18n>Show Toast</button>\n'},"F+Re":function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-config-example",\n    templateUrl: "./toast-config.example.component.html",\n})\nexport class ToastConfigExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Toast Configuration`,\n            message: $localize `I\'m pretty easy to configure`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 2000,\n            clickToDismiss: true,\n            closeButton: true,\n            positionClass: ToastPositionClass.BOTTOM_RIGHT,\n            progressBar: true,\n            progressAnimation: "increasing",\n            timeOut: 5000,\n        };\n    }\n}\n'},F45P:function(t,o,e){"use strict";e.r(o),o.default='<div id="nui-toast-test" class="container">\n    <div class="py-2">\n        <h3>Page settings</h3>\n        <div>\n            <label class="px-3 w-25" for="txtCount"> Number of toasts to show: </label>\n            <input type="number" id="txtCount" [(ngModel)]="count">\n        </div>\n\n        <label class="px-3 w-25"> Toast type </label>\n        <input id="radioError" type="radio" name="type" value="error" [(ngModel)]="type">\n        <label for="radioError" class="px-3"> error </label>\n        <input id="radioInfo" type="radio" name="type" value="info" [(ngModel)]="type">\n        <label for="radioInfo" class="px-3"> info </label>\n        <input id="radioSuccess" type="radio" name="type" value="success" [(ngModel)]="type">\n        <label for="radioSuccess" class="px-3"> success </label>\n        <input id="radioWarning" type="radio" name="type" value="warning" [(ngModel)]="type">\n        <label for="radioWarning" class="px-3"> warning </label>\n    </div>\n\n    <div class="py-2">\n        <h3>Toast Configuration</h3>\n        <div>\n            <label class="px-3 w-25" for="txtMessage"> message </label>\n            <input type="text" id="txtMessage" [(ngModel)]="toast.message">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtTitle"> title </label>\n            <input type="text" id="txtTitle" [(ngModel)]="toast.title">\n        </div>\n    </div>\n\n    <div class="py-2">\n        <h3>Options</h3>\n        <div>\n            <label class="px-3 w-25" for="txtTimeOut"> timeOut </label>\n            <input type="text" id="txtTimeOut" [(ngModel)]="toast.options.timeOut">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtExtendedTimeOut"> extendedTimeOut </label>\n            <input type="text" id="txtExtendedTimeOut" [(ngModel)]="toast.options.extendedTimeOut">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbCloseButton">closeButton</label>\n            <input type="checkbox" id="chbCloseButton" [(ngModel)]="toast.options.closeButton">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbProgressBar">progressBar</label>\n            <input type="checkbox" id="chbProgressBar" [(ngModel)]="toast.options.progressBar">\n        </div>\n        <div>\n            <label class="px-3 w-25">progressAnimation</label>\n            <input id="radioIncreasing" type="radio" name="progressAnimation" value="increasing"\n                [(ngModel)]="toast.options.progressAnimation">\n            <label for="radioIncreasing" class="px-3"> increasing </label>\n            <input id="radioDecreasing" type="radio" name="progressAnimation" value="decreasing"\n                [(ngModel)]="toast.options.progressAnimation">\n            <label for="radioDecreasing" class="px-3"> decreasing </label>\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbEnableHtml">enableHtml</label>\n            <input type="checkbox" id="chbEnableHtml" [(ngModel)]="toast.options.enableHtml">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtToastClass">toastClass</label>\n            <input type="text" id="txtToastClass" [(ngModel)]="toast.options.toastClass">\n        </div>\n        <div>\n            <label class="px-3 w-25">positionClass</label>\n            <span class="d-inline-block" style="vertical-align: middle;">\n                <input id="radioTopCenter" type="radio" name="positionClass" value="nui-toast--top-center"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioTopCenter" class="px-3"> TOP_CENTER </label>\n                <input id="radioTopLeft" type="radio" name="positionClass" value="nui-toast--top-left"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioTopLeft" class="px-3"> TOP_LEFT </label>\n                <input id="radioTopRight" type="radio" name="positionClass" value="nui-toast--top-right"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioTopRight" class="px-3"> TOP_RIGHT </label>\n                <input id="radioTopFullWidth" type="radio" name="positionClass" value="nui-toast--top-full-width"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioTopFullWidth" class="px-3"> TOP_FULL_WIDTH </label>\n                <br>\n                <input id="radioBottomCenter" type="radio" name="positionClass" value="nui-toast--bottom-center"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioBottomCenter" class="px-3"> BOTTOM_CENTER </label>\n                <input id="radioBottomLeft" type="radio" name="positionClass" value="nui-toast--bottom-left"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioBottomLeft" class="px-3"> BOTTOM_LEFT </label>\n                <input id="radioBottomRight" type="radio" name="positionClass" value="nui-toast--bottom-right"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioBottomRight" class="px-3"> BOTTOM_RIGHT </label>\n                <input id="radioBottomFullWidth" type="radio" name="positionClass" value="nui-toast--bottom-full-width"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioBottomFullWidth" class="px-3"> BOTTOM_FULL_WIDTH </label>\n                <input id="radioCustomClass" type="radio" name="positionClass" value="demoToastCustomClass"\n                    [(ngModel)]="toast.options.positionClass">\n                <label for="radioCustomClass" class="px-3"> CUSTOM_CLASS </label>\n            </span>\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbClickToDismiss">clickToDismiss</label>\n            <input type="checkbox" id="chbClickToDismiss" [(ngModel)]="toast.options.clickToDismiss">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbStickyError">stickyError</label>\n            <input type="checkbox" id="chbStickyError" [(ngModel)]="toast.options.stickyError">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="txtMaxOpened">maxOpened</label>\n            <input type="number" id="txtMaxOpened" [(ngModel)]="toast.options.maxOpened">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbAutoDismiss">autoDismiss</label>\n            <input type="checkbox" id="chbAutoDismiss" [(ngModel)]="toast.options.autoDismiss">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbNewestOnTop">newestOnTop</label>\n            <input type="checkbox" id="chbNewestOnTop" [(ngModel)]="toast.options.newestOnTop">\n        </div>\n        <div>\n            <label class="px-3 w-25" for="chbPreventDuplicates">preventDuplicates</label>\n            <input type="checkbox" id="chbPreventDuplicates" [(ngModel)]="toast.options.preventDuplicates">\n        </div>\n\n    </div>\n\n    <div class="p-5" style="text-align: center">\n        <button class="px-5" id="btnFire" (click)="fireToast()">Fire Toast(s)!</button>\n        <button class="px-3 ml-3" id="btnReset" (click)="reset()">Reset form</button>\n    </div>\n</div>\n'},GjN6:function(t,o,e){"use strict";e.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiToastModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport {\n    ToastBasicExampleComponent,\n    ToastConfigExampleComponent,\n    ToastEventsExampleComponent,\n    ToastExampleComponent,\n    ToastPositionExampleComponent,\n    ToastStickyErrorExampleComponent,\n    ToastTestComponent,\n    ToastTypeExampleComponent,\n    ToastVisualTestComponent,\n} from "./index";\nimport { ToastBasicHtmlExampleComponent } from "./toast-basic-html/toast-basic-html.example.component";\n\nconst routes = [\n    {\n        path: "",\n        component: ToastExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "toast-visual-test",\n        component: ToastVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "test",\n        component: ToastTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiToastModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiMessageModule,\n        NuiRadioModule,\n        NuiDividerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        ToastBasicExampleComponent,\n        ToastBasicHtmlExampleComponent,\n        ToastConfigExampleComponent,\n        ToastEventsExampleComponent,\n        ToastExampleComponent,\n        ToastPositionExampleComponent,\n        ToastStickyErrorExampleComponent,\n        ToastTestComponent,\n        ToastTypeExampleComponent,\n        ToastVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class ToastModule {\n}\n'},JpLm:function(t,o,e){"use strict";e.r(o),o.default='<button nui-button type="button" id="nui-info-toast" (click)="onShowInfo($event)" i18n>Info</button>\n<button nui-button type="button" id="nui-success-toast" (click)="onShowSuccess($event)" i18n>Success</button>\n<button nui-button type="button" id="nui-warning-toast" (click)="onShowWarning($event)" i18n>Warning</button>\n<button nui-button type="button" id="nui-error-toast" (click)="onShowError($event)" i18n>Error</button>\n<button nui-button type="button" id="nui-hide-all-toasts" (click)="clear()" i18n>Hide Toasts</button>\n'},L9yT:function(t,o,e){"use strict";e.r(o),o.default='export * from "./toast-basic/toast-basic.example.component";\nexport * from "./toast-sticky-error/toast-sticky-error.example.component";\nexport * from "./toast-config/toast-config.example.component";\nexport * from "./toast-docs/toast-docs.example.component";\nexport * from "./toast-events/toast-events.example.component";\nexport * from "./toast-position/toast-position.example.component";\nexport * from "./toast-type/toast-type.example.component";\nexport * from "./toast-visual-test/toast-visual-test.component";\nexport * from "./toast-test/toast-test.component";\n'},QfmY:function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IActiveToast, IToastConfig, IToastService, ToastPositionClass, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-events-example",\n    templateUrl: "./toast-events.example.component.html",\n})\n\nexport class ToastEventsExampleComponent implements OnInit {\n    public lastShown?: number;\n    public clickCount = 0;\n    public toastCount = 0;\n    public isDisplayed: boolean;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        const toastInstance: IActiveToast = this.toastService.info({\n            title: $localize `Toast Events`,\n            message: $localize `Click Me!`,\n            options: this.getOptions(),\n        });\n        toastInstance.onShown?.subscribe(() => {\n            ++this.toastCount;\n            this.isDisplayed = true;\n            this.lastShown = toastInstance.toastId;\n        });\n\n        toastInstance.onClick?.subscribe(() => {\n            ++this.clickCount;\n        });\n\n        toastInstance.onHidden?.subscribe(() => {\n            --this.toastCount;\n            this.isDisplayed = this.toastCount > 0;\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            extendedTimeOut: 5000,\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            progressBar: true,\n            progressAnimation: "increasing",\n            timeOut: 10000,\n        };\n    }\n}\n'},Tkmm:function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-visual",\n    templateUrl: "./toast-visual-test.component.html",\n})\nexport class ToastVisualTestComponent implements OnInit {\n\n    private errorMessage: string = `Something went wrong + in addition there is an extremely\n    long line that verifies that the toast expands as more text comes into it. More or less text -\n    Toast messages must look good either way!`;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public showToastsAllPositions(highlightMode: boolean, timeout: number, progress: boolean = false): void {\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_LEFT);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, "Error", this.errorMessage);\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_LEFT);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_RIGHT);\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_CENTER);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_CENTER);\n    }\n\n    public showToastsFullWidth(highlightMode: boolean, timeout: number, progress: boolean = false) {\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_FULL_WIDTH);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.BOTTOM_FULL_WIDTH);\n    }\n\n    public showToastsAdjustSize(highlightMode: boolean, timeout: number, progress: boolean = false): void {\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, "Error", this.errorMessage);\n    }\n\n    public showToastsNoHeader(highlightMode: boolean, timeout: number, progress: boolean = false, header: string = ""): void {\n        this.onShowInfo(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n        this.onShowSuccess(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n        this.onShowWarning(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n        this.onShowError(highlightMode, timeout, progress, ToastPositionClass.TOP_RIGHT, header);\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowInfo(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = "Information", message: string = "Some info message"): void {\n        this.toastService.info({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowError(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = "Failure!", message: string = "Something went wrong"): void {\n        this.toastService.error({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowSuccess(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = "Well Done!", message: string = "You\'re great!"): void {\n        this.toastService.success({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    // eslint-disable-next-line max-len\n    public onShowWarning(highlightMode: boolean, timeout: number, progress: boolean = false, position: ToastPositionClass, title: string = "Attention!", message: string = "Pay attention!"): void {\n        this.toastService.warning({\n            title: title,\n            message: `${message}`,\n            options:  this.getOptions(timeout, position, progress),\n        });\n    }\n\n    public callStickyToast(highlightMode: boolean) {\n        this.toastService.error({\n            title: "Failure",\n            message: "This error is sticky!",\n            options: { stickyError: true },\n        });\n    }\n\n    public clearToast(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(timeout: number, position: ToastPositionClass, enableProgressBar: boolean = false): IToastConfig {\n        return {\n            timeOut: timeout,\n            extendedTimeOut: 2000,\n            positionClass: position,\n            progressBar: enableProgressBar,\n        };\n    }\n}\n'},WCz1:function(t,o,e){"use strict";e.r(o),o.default='<button nui-button type="button" id="nui-toast-config-example" (click)="onShowToast($event)" i18n>Show Toast</button>\n'},"aI/t":function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastPositionClass, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-sticky-error-example",\n    templateUrl: "./toast-sticky-error.example.component.html",\n})\nexport class ToastStickyErrorExampleComponent implements OnInit {\n    public selectedPosition: string;\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowStickyError(highlightMode: boolean): void {\n        this.toastService.error({\n            title: $localize `Sticky Error`,\n            message: $localize `Red Alert`,\n            options: this.getOptions(),\n        });\n    }\n\n    public onHideStickyError(highlightMode: boolean): void {\n        this.toastService.clear();\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            clickToDismiss: false,\n            closeButton: false,\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            stickyError: true,\n        };\n    }\n}\n'},"dsr+":function(J,X,tt){"use strict";tt.r(X),tt.d(X,"ToastModule",function(){return Ht});var ot,et,nt,it,st,at=tt("3Pt+"),lt=tt("tyNb"),ct=tt("b5Xb"),rt=tt("fXoL"),ut=tt("6urz"),pt=((nt=function(){function e(t){q(this,e),this.toastService=t}return Z(e,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"onShowToast",value:function(e){this.toastService.info({title:$localize(t||(t=Q(["Simple Toast."]))),message:$localize(o||(o=Q(["Hi there! I'm a simple toast message"]))),options:this.getOptions()})}},{key:"getOptions",value:function(){return{timeOut:5e3,extendedTimeOut:2e3}}}]),e}()).\u0275fac=function(t){return new(t||nt)(rt.Ob(ct.Pb))},nt.\u0275cmp=rt.Ib({type:nt,selectors:[["nui-toast-basic-example"]],decls:2,vars:0,consts:function(){return[["nui-button","","type","button","id","nui-basic-toast-example",3,"click"],$localize(e||(e=Q([":\u241f4600bd30106171bfee8c959a00f710ab918c38a8\u241f557759875456545576:Show Toast"])))]},template:function(t,o){1&t&&(rt.Ub(0,"button",0),rt.ic("click",function(t){return o.onShowToast(t)}),rt.Yb(1,1),rt.Tb())},directives:[ut.a],encapsulation:2}),nt),dt=((et=function(){function t(o){q(this,t),this.toastService=o}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"onShowStickyError",value:function(t){this.toastService.error({title:$localize(n||(n=Q(["Sticky Error"]))),message:$localize(i||(i=Q(["Red Alert"]))),options:this.getOptions()})}},{key:"onHideStickyError",value:function(t){this.toastService.clear()}},{key:"getOptions",value:function(){return{clickToDismiss:!1,closeButton:!1,positionClass:"nui-toast--top-right",stickyError:!0}}}]),t}()).\u0275fac=function(t){return new(t||et)(rt.Ob(ct.Pb))},et.\u0275cmp=rt.Ib({type:et,selectors:[["nui-toast-sticky-error-example"]],decls:4,vars:0,consts:function(){return[["nui-button","","type","button","id","nui-show-sticky-error-toast-example",3,"click"],$localize(s||(s=Q([":\u241f769d24d01154ec76a304a2aed1a8dba2e1a0e132\u241f1418452172334753158:Show Sticky Error"]))),["nui-button","","type","button","id","nui-hide-sticky-error-toast-example",3,"click"],$localize(a||(a=Q([":\u241fa877daaceb1a90cd5bcd3a7c5b38403e9a3bc6cd\u241f4793455388032648365:Hide Sticky Error"])))]},template:function(t,o){1&t&&(rt.Ub(0,"button",0),rt.ic("click",function(t){return o.onShowStickyError(t)}),rt.Yb(1,1),rt.Tb(),rt.Ub(2,"button",2),rt.ic("click",function(t){return o.onHideStickyError(t)}),rt.Yb(3,3),rt.Tb())},directives:[ut.a],encapsulation:2}),et),bt=((ot=function(){function t(o){q(this,t),this.toastService=o}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"onShowToast",value:function(t){this.toastService.info({title:$localize(l||(l=Q(["Toast Configuration"]))),message:$localize(c||(c=Q(["I'm pretty easy to configure"]))),options:this.getOptions()})}},{key:"getOptions",value:function(){return{extendedTimeOut:2e3,clickToDismiss:!0,closeButton:!0,positionClass:"nui-toast--bottom-right",progressBar:!0,progressAnimation:"increasing",timeOut:5e3}}}]),t}()).\u0275fac=function(t){return new(t||ot)(rt.Ob(ct.Pb))},ot.\u0275cmp=rt.Ib({type:ot,selectors:[["nui-toast-config-example"]],decls:2,vars:0,consts:function(){return[["nui-button","","type","button","id","nui-toast-config-example",3,"click"],$localize(r||(r=Q([":\u241f4600bd30106171bfee8c959a00f710ab918c38a8\u241f557759875456545576:Show Toast"])))]},template:function(t,o){1&t&&(rt.Ub(0,"button",0),rt.ic("click",function(t){return o.onShowToast(t)}),rt.Yb(1,1),rt.Tb())},directives:[ut.a],encapsulation:2}),ot),mt=tt("CVg4"),ht=((st=function(){function t(o){q(this,t),this.toastService=o}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({timeOut:5e3,extendedTimeOut:2e3},"id")}},{key:"showToastWithEnabledHtml",value:function(){this.toastService.info({title:$localize(u||(u=Q(["Toast with enableHtml set to true"]))),message:$localize(p||(p=Q(['Hi there! I\'m a simple toast message. <a href="#">Awesome link</a>']))),options:{enableHtml:!0}})}},{key:"showToastWithDisabledHtml",value:function(){this.toastService.info({title:$localize(d||(d=Q(["Toast with enableHtml set to false"]))),message:$localize(b||(b=Q(['Hi there! I\'m a simple toast message <a href="#">Awesome link</a>']))),options:{enableHtml:!1}})}},{key:"showToastWithScriptTagIncluded",value:function(){this.toastService.info({title:$localize(m||(m=Q(["Toast with forbidden tags and enableHtml set to true"]))),message:$localize(h||(h=Q(['\n                Hi there! I\'m a toast message with forbidden tags:\n                <script>alert("You shall not pass")<\/script>\n                <object width="400" height="400"></object>\n                <iframe src="https://www.solarwinds.com/"></iframe>\n                <embed src="https://www.solarwinds.com/">\n                ']))),options:{enableHtml:!0}})}}]),t}()).\u0275fac=function(t){return new(t||st)(rt.Ob(ct.Pb))},st.\u0275cmp=rt.Ib({type:st,selectors:[["nui-toast-basic-html-example"]],decls:6,vars:0,consts:function(){return[["nui-button","","type","button","id","nui-basic-toast-html-example-1",3,"click"],$localize(g||(g=Q([":\u241f27566112355468c9e7353a6f45d007dba0219eec\u241f1368572126231475464:Show Toast With Enabled Html"]))),["nui-button","","type","button","id","nui-basic-toast-html-example-2",1,"ml-3",3,"click"],$localize(T||(T=Q([":\u241f440d58731188d4062fc6fc799fb09e0b03f0d532\u241f5715801552135569347:Show Toast With Disabled Html"]))),["nui-button","","type","button","id","nui-basic-toast-html-example-3",1,"ml-3",3,"click"],$localize(f||(f=Q([":\u241f0e53f74fc9c19a5b6f50c819b0393d237055b260\u241f4608929713413799658:Show Toast With Script Tag"])))]},template:function(t,o){1&t&&(rt.Ub(0,"button",0),rt.ic("click",function(){return o.showToastWithEnabledHtml()}),rt.Yb(1,1),rt.Tb(),rt.Ub(2,"button",2),rt.ic("click",function(){return o.showToastWithDisabledHtml()}),rt.Yb(3,3),rt.Tb(),rt.Ub(4,"button",4),rt.ic("click",function(){return o.showToastWithScriptTagIncluded()}),rt.Yb(5,5),rt.Tb())},directives:[ut.a],encapsulation:2}),st),gt=((it=function(){function t(o){q(this,t),this.toastService=o}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"onShowInfo",value:function(t){this.toastService.info({title:$localize(v||(v=Q(["Info"]))),message:$localize(C||(C=Q(["E pluribus unum (/\u02c8i\u02d0 \u02c8pl\u028a\u0259r\u026ab\u0259s \u02c8ju\u02d0n\u0259m/; Latin: [\u02c8e\u02d0 \u02c8plu\u02d0r\u026ab\u028as \u02c8u\u02d0n\u0169\u02d0]) is Latin for 'Out of many, one'"]))),options:this.getOptions()})}},{key:"onShowSuccess",value:function(t){this.toastService.success({title:$localize(y||(y=Q(["Success"]))),message:$localize(x||(x=Q(["Well done!"]))),options:this.getOptions()})}},{key:"onShowWarning",value:function(t){this.toastService.warning({title:$localize(O||(O=Q(["Warning"]))),message:$localize(w||(w=Q(["There can be only one."]))),options:this.getOptions()})}},{key:"onShowError",value:function(t){this.toastService.error({title:$localize(S||(S=Q(["Error"]))),message:$localize(M||(M=Q(["Nope."]))),options:this.getOptions()})}},{key:"clear",value:function(){this.toastService.clear()}},{key:"getOptions",value:function(){return{timeOut:3e3,extendedTimeOut:1e3}}}]),t}()).\u0275fac=function(t){return new(t||it)(rt.Ob(ct.Pb))},it.\u0275cmp=rt.Ib({type:it,selectors:[["nui-toast-type-example"]],decls:10,vars:0,consts:function(){return[["nui-button","","type","button","id","nui-info-toast",3,"click"],$localize(k||(k=Q([":\u241f321e4419a943044e674beb55b8039f42a9761ca5\u241f314315645942131479:Info"]))),["nui-button","","type","button","id","nui-success-toast",3,"click"],$localize(U||(U=Q([":\u241f1e035e6ccfab771cad4226b2ad230cb0d4a88cba\u241f4648900870671159218:Success"]))),["nui-button","","type","button","id","nui-warning-toast",3,"click"],$localize(I||(I=Q([":\u241fa8059e31694578c1b0344a76a345357dd60e8f01\u241f6759205696902713848:Warning"]))),["nui-button","","type","button","id","nui-error-toast",3,"click"],$localize(P||(P=Q([":\u241f6080b77234e92ad41bb52653b239c4c4f851317d\u241f1519954996184640001:Error"]))),["nui-button","","type","button","id","nui-hide-all-toasts",3,"click"],$localize(E||(E=Q([":\u241f0b45df9a6e1d444dc5379c1fa5b4cfecdb843433\u241f4637772438513653125:Hide Toasts"])))]},template:function(t,o){1&t&&(rt.Ub(0,"button",0),rt.ic("click",function(t){return o.onShowInfo(t)}),rt.Yb(1,1),rt.Tb(),rt.Ub(2,"button",2),rt.ic("click",function(t){return o.onShowSuccess(t)}),rt.Yb(3,3),rt.Tb(),rt.Ub(4,"button",4),rt.ic("click",function(t){return o.onShowWarning(t)}),rt.Yb(5,5),rt.Tb(),rt.Ub(6,"button",6),rt.ic("click",function(t){return o.onShowError(t)}),rt.Yb(7,7),rt.Tb(),rt.Ub(8,"button",8),rt.ic("click",function(){return o.clear()}),rt.Yb(9,9),rt.Tb())},directives:[ut.a],encapsulation:2}),it),Tt=tt("4pDv"),ft=tt("lLUT"),vt=tt("ofXK");function Ct(t,o){if(1&t&&(rt.Ub(0,"nui-radio",5),rt.Oc(1),rt.Tb()),2&t){var e=o.$implicit;rt.uc("id","nui-toast-position-"+e.className),rt.tc("checked","nui-toast--top-right"===e.className)("value",e.className),rt.Cb(1),rt.Qc(" ",e.displayValue," ")}}var yt,xt=((yt=function(){function t(o){q(this,t),this.toastService=o,this.toastPositions=[{displayValue:$localize(D||(D=Q(["Top Right"]))),className:"nui-toast--top-right"},{displayValue:$localize(H||(H=Q(["Top Left"]))),className:"nui-toast--top-left"},{displayValue:$localize($||($=Q(["Bottom Right"]))),className:"nui-toast--bottom-right"},{displayValue:$localize(B||(B=Q(["Bottom Left"]))),className:"nui-toast--bottom-left"},{displayValue:$localize(z||(z=Q(["Top Full Width"]))),className:"nui-toast--top-full-width"},{displayValue:$localize(N||(N=Q(["Bottom Full Width"]))),className:"nui-toast--bottom-full-width"},{displayValue:$localize(W||(W=Q(["Top Center"]))),className:"nui-toast--top-center"},{displayValue:$localize(A||(A=Q(["Bottom Center"]))),className:"nui-toast--bottom-center"},{displayValue:$localize(F||(F=Q(["CUSTOM CLASS (top: 200px; right: 200px)"]))),className:"demoToastCustomClass"}],this.selectedPosition=this.toastPositions[0].className}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"onShowToast",value:function(t){this.toastService.info({title:$localize(j||(j=Q(["Position Example"]))),message:this.selectedPosition,options:this.getOptions()})}},{key:"getOptions",value:function(){return{timeOut:5e3,extendedTimeOut:2e3,positionClass:this.selectedPosition}}}]),t}()).\u0275fac=function(t){return new(t||yt)(rt.Ob(ct.Pb))},yt.\u0275cmp=rt.Ib({type:yt,selectors:[["nui-toast-position-example"]],decls:6,vars:2,consts:function(){return[[1,"nui-flex-container"],[3,"value","valueChange"],[3,"id","checked","value",4,"ngFor","ngForOf"],["nui-button","","type","button","id","nui-toast-position-example",3,"click"],$localize(L||(L=Q([":\u241f4600bd30106171bfee8c959a00f710ab918c38a8\u241f557759875456545576:Show Toast"]))),[3,"id","checked","value"]]},template:function(t,o){1&t&&(rt.Ub(0,"div",0),rt.Ub(1,"div"),rt.Ub(2,"nui-radio-group",1),rt.ic("valueChange",function(t){return o.selectedPosition=t}),rt.Mc(3,Ct,2,4,"nui-radio",2),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(4,"button",3),rt.ic("click",function(t){return o.onShowToast(t)}),rt.Yb(5,4),rt.Tb()),2&t&&(rt.Cb(2),rt.tc("value",o.selectedPosition),rt.Cb(1),rt.tc("ngForOf",o.toastPositions))},directives:[ft.b,vt.p,ut.a,ft.a],encapsulation:2}),yt),Ot=tt("UGtJ");function wt(t,o){if(1&t&&(rt.Ub(0,"div"),rt.Ub(1,"nui-message",4),rt.Ub(2,"div"),rt.Yb(3,5),rt.Tb(),rt.Tb(),rt.Ub(4,"nui-message",4),rt.Ub(5,"div",6),rt.Yb(6,7),rt.Tb(),rt.Tb(),rt.Tb()),2&t){var e=rt.mc();rt.Cb(1),rt.tc("allowDismiss",!1),rt.Cb(2),rt.cc(e.lastShown),rt.Zb(3),rt.Cb(1),rt.tc("allowDismiss",!1),rt.Cb(2),rt.cc(e.clickCount),rt.Zb(6)}}function St(t,o){1&t&&(rt.Ub(0,"nui-message",4),rt.Yb(1,8),rt.Tb()),2&t&&rt.tc("allowDismiss",!1)}var Mt,kt,Ut,It,Pt,Et=((Mt=function(){function t(o){q(this,t),this.toastService=o,this.clickCount=0,this.toastCount=0}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"onShowToast",value:function(t){var o,e,n,i=this,s=this.toastService.info({title:$localize(R||(R=Q(["Toast Events"]))),message:$localize(_||(_=Q(["Click Me!"]))),options:this.getOptions()});null===(o=s.onShown)||void 0===o||o.subscribe(function(){++i.toastCount,i.isDisplayed=!0,i.lastShown=s.toastId}),null===(e=s.onClick)||void 0===e||e.subscribe(function(){++i.clickCount}),null===(n=s.onHidden)||void 0===n||n.subscribe(function(){--i.toastCount,i.isDisplayed=i.toastCount>0})}},{key:"getOptions",value:function(){return{extendedTimeOut:5e3,clickToDismiss:!1,closeButton:!1,positionClass:"nui-toast--top-right",progressBar:!0,progressAnimation:"increasing",timeOut:1e4}}}]),t}()).\u0275fac=function(t){return new(t||Mt)(rt.Ob(ct.Pb))},Mt.\u0275cmp=rt.Ib({type:Mt,selectors:[["nui-toast-events-example"]],decls:6,vars:2,consts:function(){return[[4,"ngIf","ngIfElse"],["notoast",""],["nui-button","","type","button","id","nui-toast-events-example",3,"click"],$localize(Y||(Y=Q([":\u241f4600bd30106171bfee8c959a00f710ab918c38a8\u241f557759875456545576:Show Toast"]))),["type","info",3,"allowDismiss"],$localize(V||(V=Q([":\u241fd98536b483e331cf4f990a2fc9e1f196f349074b\u241f4218629065715888947:ID of last toast shown: ",":INTERPOLATION:"])),"\ufffd0\ufffd"),["id","toast-example-click-counter"],$localize(G||(G=Q([":\u241fe1957753eda54a65e03415b2dbc397a8a957d5d4\u241f8440842198532666033:Clicks on toast: ",":INTERPOLATION:"])),"\ufffd0\ufffd"),$localize(K||(K=Q([":\u241f96ac7902ce2837f009c3f03c468fca0ac0d308c0\u241f3981941284307704837:No toast displayed"])))]},template:function(t,o){if(1&t&&(rt.Mc(0,wt,7,4,"div",0),rt.Mc(1,St,2,1,"ng-template",null,1,rt.Nc),rt.Pb(3,"nui-divider"),rt.Ub(4,"button",2),rt.ic("click",function(t){return o.onShowToast(t)}),rt.Yb(5,3),rt.Tb()),2&t){var e=rt.Dc(2);rt.tc("ngIf",o.isDisplayed)("ngIfElse",e)}},directives:[vt.q,Ot.a,ut.a,Tt.a],encapsulation:2}),Mt),Dt=[{path:"",component:(It=function(){function t(){q(this,t)}return Z(t,[{key:"getToastDeclarationKey",value:function(t){return t}},{key:"getToastConfigKey",value:function(t){return t}}]),t}(),It.\u0275fac=function(t){return new(t||It)},It.\u0275cmp=rt.Ib({type:It,selectors:[["nui-toast-docs-example"]],decls:162,vars:5,consts:[["href","../interfaces/IToastDeclaration.html"],["filenamePrefix","toast-basic","exampleTitle","Basic usage"],["filenamePrefix","toast-basic-html","exampleTitle","Basic HTML Usage"],["filenamePrefix","toast-type","exampleTitle","Types"],["href","../interfaces/IToastConfig.html"],["filenamePrefix","toast-config","exampleTitle","Configuration"],["href","../miscellaneous/enumerations.html#ToastPositionClass"],["type","warning",3,"allowDismiss"],["filenamePrefix","toast-position","exampleTitle","Positioning"],["filenamePrefix","toast-sticky-error","exampleTitle","Sticky error"],["href","../interfaces/IActiveToast.html"],["filenamePrefix","toast-events","exampleTitle","Events"]],template:function(t,o){1&t&&(rt.Ub(0,"h2"),rt.Oc(1,"Required Modules"),rt.Tb(),rt.Ub(2,"ul"),rt.Ub(3,"li"),rt.Ub(4,"code"),rt.Oc(5,"NuiToastModule"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(6,"h2"),rt.Oc(7,"Basic Usage"),rt.Tb(),rt.Ub(8,"div"),rt.Oc(9," You can use "),rt.Ub(10,"code"),rt.Oc(11,"IToastService"),rt.Tb(),rt.Oc(12,", "),rt.Ub(13,"code"),rt.Oc(14,"ToastService"),rt.Tb(),rt.Oc(15,' to show a (usually) temporary message (toast), associated with some event. In example below we\'re showing a toast message when the "Show Toast" button is clicked. Following construction is used to create a toast: '),rt.Ub(16,"code"),rt.Oc(17,"IToastService.info(toastDeclaration: "),rt.Ub(18,"a",0),rt.Oc(19,"IToastDeclaration"),rt.Tb(),rt.Oc(20,")"),rt.Tb(),rt.Oc(21,". Any property in "),rt.Ub(22,"a",0),rt.Ub(23,"code"),rt.Oc(24,"IToastDeclaration"),rt.Tb(),rt.Tb(),rt.Oc(25," is optional.\n"),rt.Tb(),rt.Ub(26,"p"),rt.Oc(27," When using the toast component with a title, a space is automatically inserted in front of the message body to create spacial separation from the title. In addition to the provided space, it's suggested that the user add a sentence-ending punctuation mark to the title to further emphasize this separation.\n"),rt.Tb(),rt.Ub(28,"nui-example-wrapper",1),rt.Pb(29,"nui-toast-basic-example"),rt.Tb(),rt.Ub(30,"h2"),rt.Oc(31,"Basic Usage With Html"),rt.Tb(),rt.Ub(32,"p"),rt.Oc(33," Toast allows HTML usage inside the "),rt.Ub(34,"code"),rt.Oc(35),rt.Tb(),rt.Oc(36," container by default. Note: The provided value will be sanitized and rendered.\n"),rt.Tb(),rt.Ub(37,"p"),rt.Oc(38," To configure a toast to display HTML as plain text, set the "),rt.Ub(39,"code"),rt.Oc(40),rt.Tb(),rt.Oc(41," property in "),rt.Ub(42,"code"),rt.Oc(43),rt.Tb(),rt.Oc(44," to "),rt.Ub(45,"code"),rt.Oc(46,"false"),rt.Tb(),rt.Oc(47,".\n"),rt.Tb(),rt.Ub(48,"p"),rt.Oc(49," When the "),rt.Ub(50,"code"),rt.Oc(51),rt.Tb(),rt.Oc(52," flag is turned on, all the content will be sanitized, basic tags for changing fonts are often allowed, such as "),rt.Ub(53,"code"),rt.Oc(54,"<b>"),rt.Tb(),rt.Oc(55,", "),rt.Ub(56,"code"),rt.Oc(57,"<i>"),rt.Tb(),rt.Oc(58,", "),rt.Ub(59,"code"),rt.Oc(60,"<u>"),rt.Tb(),rt.Oc(61,", "),rt.Ub(62,"code"),rt.Oc(63,"<em>"),rt.Tb(),rt.Oc(64,", and "),rt.Ub(65,"code"),rt.Oc(66,"<strong>"),rt.Tb(),rt.Oc(67,". More advanced tags such as "),rt.Ub(68,"code"),rt.Oc(69,"<script>"),rt.Tb(),rt.Oc(70,", "),rt.Ub(71,"code"),rt.Oc(72,"<object>"),rt.Tb(),rt.Oc(73,", "),rt.Ub(74,"code"),rt.Oc(75,"<embed>"),rt.Tb(),rt.Oc(76,", and "),rt.Ub(77,"code"),rt.Oc(78,"<link>"),rt.Tb(),rt.Oc(79," are removed by the sanitization process. Additionally, potentially dangerous attributes such as "),rt.Ub(80,"code"),rt.Oc(81,"onclick"),rt.Tb(),rt.Oc(82," are removed in order to prevent malicious code from being injected.\n"),rt.Tb(),rt.Ub(83,"nui-example-wrapper",2),rt.Pb(84,"nui-toast-basic-html-example"),rt.Tb(),rt.Ub(85,"h2"),rt.Oc(86,"Types"),rt.Tb(),rt.Ub(87,"p"),rt.Oc(88," Toast types allows you to convey some contextual information about the message by applying different styles to toasts.\n"),rt.Tb(),rt.Ub(89,"nui-example-wrapper",3),rt.Pb(90,"nui-toast-type-example"),rt.Tb(),rt.Ub(91,"h2"),rt.Oc(92,"Configuration"),rt.Tb(),rt.Ub(93,"p"),rt.Oc(94," Toast messages are highly configurable via "),rt.Ub(95,"a",4),rt.Oc(96,"IToastConfig"),rt.Tb(),rt.Oc(97," interface. The following example employs some of the more common settings: "),rt.Pb(98,"br"),rt.Ub(99,"code"),rt.Oc(100,' extendedTimeOut: 2000, clickToDismiss: true, closeButton: true, positionClass: "toast-bottom-right", progressBar: true, progressAnimation: "increasing", timeOut: 5000 '),rt.Tb(),rt.Tb(),rt.Ub(101,"nui-example-wrapper",5),rt.Pb(102,"nui-toast-config-example"),rt.Tb(),rt.Ub(103,"h2"),rt.Oc(104,"Positioning"),rt.Tb(),rt.Ub(105,"p"),rt.Oc(106," The position of a toast message is determined by the value of "),rt.Ub(107,"code"),rt.Oc(108,"IToastConfig.positionClass"),rt.Tb(),rt.Oc(109,". By default toast is positioned top-right. To implement different positioning you must pass one of available options from "),rt.Ub(110,"a",6),rt.Ub(111,"code"),rt.Oc(112,"ToastPositionClass"),rt.Tb(),rt.Tb(),rt.Oc(113," to "),rt.Ub(114,"a",4),rt.Ub(115,"code"),rt.Oc(116,"IToastConfig"),rt.Tb(),rt.Tb(),rt.Oc(117," positionClass property."),rt.Pb(118,"br"),rt.Pb(119,"br"),rt.Oc(120," It is also possible to set a custom class to configure the position of the "),rt.Ub(121,"code"),rt.Oc(122,"nui-toast"),rt.Tb(),rt.Oc(123,". Simply populate the "),rt.Ub(124,"code"),rt.Oc(125,"IToastConfig.positionClass"),rt.Tb(),rt.Oc(126," with the custom css class name. "),rt.Ub(127,"nui-message",7),rt.Oc(128," Make sure you defined a custom class in a global stylesheet "),rt.Tb(),rt.Tb(),rt.Ub(129,"nui-example-wrapper",8),rt.Pb(130,"nui-toast-position-example"),rt.Tb(),rt.Ub(131,"h2"),rt.Oc(132,"Sticky Error"),rt.Tb(),rt.Ub(133,"p"),rt.Oc(134," You can also optionally force error toasts to remain visible indefinitely using "),rt.Ub(135,"code"),rt.Oc(136,"IToastConfig.stickyError"),rt.Tb(),rt.Oc(137,". Note, that this option is only available with "),rt.Ub(138,"code"),rt.Oc(139,"IToastService.error"),rt.Tb(),rt.Oc(140,".\n"),rt.Tb(),rt.Ub(141,"nui-example-wrapper",9),rt.Pb(142,"nui-toast-sticky-error-example"),rt.Tb(),rt.Ub(143,"h2"),rt.Oc(144,"Events"),rt.Tb(),rt.Ub(145,"p"),rt.Oc(146," With "),rt.Ub(147,"a",10),rt.Oc(148,"IActiveToast"),rt.Tb(),rt.Oc(149,", it's possible to capture (and act upon) following events per toast instance:\n"),rt.Tb(),rt.Ub(150,"ul"),rt.Ub(151,"li"),rt.Ub(152,"code"),rt.Oc(153,"onShown"),rt.Tb(),rt.Tb(),rt.Ub(154,"li"),rt.Ub(155,"code"),rt.Oc(156,"onHidden"),rt.Tb(),rt.Tb(),rt.Ub(157,"li"),rt.Ub(158,"code"),rt.Oc(159,"onClick"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(160,"nui-example-wrapper",11),rt.Pb(161,"nui-toast-events-example"),rt.Tb()),2&t&&(rt.Cb(35),rt.Pc(o.getToastDeclarationKey("message")),rt.Cb(5),rt.Pc(o.getToastConfigKey("enableHtml")),rt.Cb(3),rt.Pc(o.getToastDeclarationKey("options")),rt.Cb(8),rt.Pc(o.getToastConfigKey("enableHtml")),rt.Cb(76),rt.tc("allowDismiss",!1))},directives:[mt.a,pt,ht,gt,bt,Tt.a,xt,dt,Et],encapsulation:2}),It),data:{srlc:{stage:ct.Jb.ga},showThemeSwitcher:!0}},{path:"toast-visual-test",component:(Ut=function(){function t(o){q(this,t),this.toastService=o,this.errorMessage="Something went wrong + in addition there is an extremely\n    long line that verifies that the toast expands as more text comes into it. More or less text -\n    Toast messages must look good either way!"}return Z(t,[{key:"ngOnInit",value:function(){this.toastService.setConfig({},"id")}},{key:"showToastsAllPositions",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.onShowInfo(t,o,e,"nui-toast--top-left"),this.onShowError(t,o,e,"nui-toast--top-right","Error",this.errorMessage),this.onShowSuccess(t,o,e,"nui-toast--bottom-left"),this.onShowWarning(t,o,e,"nui-toast--bottom-right"),this.onShowInfo(t,o,e,"nui-toast--top-center"),this.onShowError(t,o,e,"nui-toast--bottom-center")}},{key:"showToastsFullWidth",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.onShowSuccess(t,o,e,"nui-toast--top-full-width"),this.onShowWarning(t,o,e,"nui-toast--bottom-full-width")}},{key:"showToastsAdjustSize",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.onShowInfo(t,o,e,"nui-toast--top-right"),this.onShowSuccess(t,o,e,"nui-toast--top-right"),this.onShowWarning(t,o,e,"nui-toast--top-right"),this.onShowError(t,o,e,"nui-toast--top-right","Error",this.errorMessage)}},{key:"showToastsNoHeader",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"";this.onShowInfo(t,o,e,"nui-toast--top-right",n),this.onShowSuccess(t,o,e,"nui-toast--top-right",n),this.onShowWarning(t,o,e,"nui-toast--top-right",n),this.onShowError(t,o,e,"nui-toast--top-right",n)}},{key:"onShowInfo",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"Information",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"Some info message";this.toastService.info({title:i,message:"".concat(s),options:this.getOptions(o,n,e)})}},{key:"onShowError",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"Failure!",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"Something went wrong";this.toastService.error({title:i,message:"".concat(s),options:this.getOptions(o,n,e)})}},{key:"onShowSuccess",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"Well Done!",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"You're great!";this.toastService.success({title:i,message:"".concat(s),options:this.getOptions(o,n,e)})}},{key:"onShowWarning",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"Attention!",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"Pay attention!";this.toastService.warning({title:i,message:"".concat(s),options:this.getOptions(o,n,e)})}},{key:"callStickyToast",value:function(t){this.toastService.error({title:"Failure",message:"This error is sticky!",options:{stickyError:!0}})}},{key:"clearToast",value:function(t){this.toastService.clear()}},{key:"getOptions",value:function(t,o){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return{timeOut:t,extendedTimeOut:2e3,positionClass:o,progressBar:e}}}]),t}(),Ut.\u0275fac=function(t){return new(t||Ut)(rt.Ob(ct.Pb))},Ut.\u0275cmp=rt.Ib({type:Ut,selectors:[["nui-toast-visual"]],decls:51,vars:0,consts:[[1,"container","pt-5"],[1,"row"],[1,"col"],["id","nui-toast-positions",1,"d-flex","justify-content-start"],["id","nui-toast-button-all-positions",3,"click"],["id","nui-toast-fw",1,"d-flex","justify-content-start"],["id","nui-toast-position-fw",3,"click"],[1,"d-flex","justify-content-start"],["id","nui-toast-clear-all-toasts",3,"click"],["id","nui-toast-sticky",3,"click"],["id","nui-toast-buttons-chain",1,"d-flex","justify-content-start"],["id","nui-toast-adjust-size",3,"click"],["id","nui-toast-buttons-chain-no-header",1,"d-flex","justify-content-start"],["id","nui-toast-no-header",3,"click"],["id","nui-toast-button-all-positions-progress-bar",3,"click"]],template:function(t,o){1&t&&(rt.Ub(0,"div",0),rt.Ub(1,"div",1),rt.Ub(2,"div",2),rt.Ub(3,"h3"),rt.Oc(4,"Basic Toast Positioned defferently"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(5,"div",1),rt.Ub(6,"div",2),rt.Ub(7,"div",3),rt.Ub(8,"button",4),rt.ic("click",function(t){return o.showToastsAllPositions(t,2e5)}),rt.Oc(9,"Trigger all positions"),rt.Tb(),rt.Tb(),rt.Ub(10,"div",5),rt.Ub(11,"button",6),rt.ic("click",function(t){return o.showToastsFullWidth(t,1e4)}),rt.Oc(12,"Full Width"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(13,"div",1),rt.Ub(14,"div",2),rt.Ub(15,"h3"),rt.Oc(16,"Basic Toast Positioned defferently"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(17,"div",1),rt.Ub(18,"div",2),rt.Ub(19,"div",7),rt.Ub(20,"button",8),rt.ic("click",function(t){return o.clearToast(t)}),rt.Oc(21,"Clear All Toasts"),rt.Tb(),rt.Ub(22,"button",9),rt.ic("click",function(t){return o.callStickyToast(t)}),rt.Oc(23,"Call Sticky Error!"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(24,"div",1),rt.Ub(25,"div",2),rt.Ub(26,"h3"),rt.Oc(27,"Toast messages adjust size"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(28,"div",1),rt.Ub(29,"div",2),rt.Ub(30,"div",10),rt.Ub(31,"button",11),rt.ic("click",function(t){return o.showToastsAdjustSize(t,1e4)}),rt.Oc(32,"Trigger all toast messages"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(33,"div",1),rt.Ub(34,"div",2),rt.Ub(35,"h3"),rt.Oc(36,"Toast messages with no header"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(37,"div",1),rt.Ub(38,"div",2),rt.Ub(39,"div",12),rt.Ub(40,"button",13),rt.ic("click",function(t){return o.showToastsNoHeader(t,1e4)}),rt.Oc(41,"Trigger all toast messages"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(42,"div",1),rt.Ub(43,"div",2),rt.Ub(44,"h3"),rt.Oc(45,"Toast messages with progress bar"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(46,"div",1),rt.Ub(47,"div",2),rt.Ub(48,"div",3),rt.Ub(49,"button",14),rt.ic("click",function(t){return o.showToastsAllPositions(t,3e5,!0)}),rt.Oc(50,"Trigger all positions"),rt.Tb(),rt.Tb(),rt.Tb(),rt.Tb(),rt.Tb())},encapsulation:2}),Ut),data:{srlc:{hideIndicator:!0}}},{path:"test",component:(kt=function(){function t(o){q(this,t),this.toastService=o,this.defaults={message:"",title:"",options:{timeOut:5e3,extendedTimeOut:2e3,closeButton:!0,progressBar:!0,progressAnimation:"decreasing",toastClass:"nui-toast",positionClass:"nui-toast--top-right",maxOpened:0,newestOnTop:!0,enableHtml:!1}}}return Z(t,[{key:"ngOnInit",value:function(){this.reset()}},{key:"fireToast",value:function(){for(var t=this,o={error:function(o){return t.toastService.error(o)},info:function(o){return t.toastService.info(o)},success:function(o){return t.toastService.success(o)},warning:function(o){return t.toastService.warning(o)}},e=0;e<this.count;e++)o[this.type](this.toast)}},{key:"reset",value:function(){this.count=1,this.type="info",this.toast=Object.assign(Object.assign({},this.defaults),{options:Object.assign({},this.defaults.options)}),this.toastService.clear()}}]),t}(),kt.\u0275fac=function(t){return new(t||kt)(rt.Ob(ct.Pb))},kt.\u0275cmp=rt.Ib({type:kt,selectors:[["nui-toast-test"]],decls:130,vars:30,consts:[["id","nui-toast-test",1,"container"],[1,"py-2"],["for","txtCount",1,"px-3","w-25"],["type","number","id","txtCount",3,"ngModel","ngModelChange"],[1,"px-3","w-25"],["id","radioError","type","radio","name","type","value","error",3,"ngModel","ngModelChange"],["for","radioError",1,"px-3"],["id","radioInfo","type","radio","name","type","value","info",3,"ngModel","ngModelChange"],["for","radioInfo",1,"px-3"],["id","radioSuccess","type","radio","name","type","value","success",3,"ngModel","ngModelChange"],["for","radioSuccess",1,"px-3"],["id","radioWarning","type","radio","name","type","value","warning",3,"ngModel","ngModelChange"],["for","radioWarning",1,"px-3"],["for","txtMessage",1,"px-3","w-25"],["type","text","id","txtMessage",3,"ngModel","ngModelChange"],["for","txtTitle",1,"px-3","w-25"],["type","text","id","txtTitle",3,"ngModel","ngModelChange"],["for","txtTimeOut",1,"px-3","w-25"],["type","text","id","txtTimeOut",3,"ngModel","ngModelChange"],["for","txtExtendedTimeOut",1,"px-3","w-25"],["type","text","id","txtExtendedTimeOut",3,"ngModel","ngModelChange"],["for","chbCloseButton",1,"px-3","w-25"],["type","checkbox","id","chbCloseButton",3,"ngModel","ngModelChange"],["for","chbProgressBar",1,"px-3","w-25"],["type","checkbox","id","chbProgressBar",3,"ngModel","ngModelChange"],["id","radioIncreasing","type","radio","name","progressAnimation","value","increasing",3,"ngModel","ngModelChange"],["for","radioIncreasing",1,"px-3"],["id","radioDecreasing","type","radio","name","progressAnimation","value","decreasing",3,"ngModel","ngModelChange"],["for","radioDecreasing",1,"px-3"],["for","chbEnableHtml",1,"px-3","w-25"],["type","checkbox","id","chbEnableHtml",3,"ngModel","ngModelChange"],["for","txtToastClass",1,"px-3","w-25"],["type","text","id","txtToastClass",3,"ngModel","ngModelChange"],[1,"d-inline-block",2,"vertical-align","middle"],["id","radioTopCenter","type","radio","name","positionClass","value","nui-toast--top-center",3,"ngModel","ngModelChange"],["for","radioTopCenter",1,"px-3"],["id","radioTopLeft","type","radio","name","positionClass","value","nui-toast--top-left",3,"ngModel","ngModelChange"],["for","radioTopLeft",1,"px-3"],["id","radioTopRight","type","radio","name","positionClass","value","nui-toast--top-right",3,"ngModel","ngModelChange"],["for","radioTopRight",1,"px-3"],["id","radioTopFullWidth","type","radio","name","positionClass","value","nui-toast--top-full-width",3,"ngModel","ngModelChange"],["for","radioTopFullWidth",1,"px-3"],["id","radioBottomCenter","type","radio","name","positionClass","value","nui-toast--bottom-center",3,"ngModel","ngModelChange"],["for","radioBottomCenter",1,"px-3"],["id","radioBottomLeft","type","radio","name","positionClass","value","nui-toast--bottom-left",3,"ngModel","ngModelChange"],["for","radioBottomLeft",1,"px-3"],["id","radioBottomRight","type","radio","name","positionClass","value","nui-toast--bottom-right",3,"ngModel","ngModelChange"],["for","radioBottomRight",1,"px-3"],["id","radioBottomFullWidth","type","radio","name","positionClass","value","nui-toast--bottom-full-width",3,"ngModel","ngModelChange"],["for","radioBottomFullWidth",1,"px-3"],["id","radioCustomClass","type","radio","name","positionClass","value","demoToastCustomClass",3,"ngModel","ngModelChange"],["for","radioCustomClass",1,"px-3"],["for","chbClickToDismiss",1,"px-3","w-25"],["type","checkbox","id","chbClickToDismiss",3,"ngModel","ngModelChange"],["for","chbStickyError",1,"px-3","w-25"],["type","checkbox","id","chbStickyError",3,"ngModel","ngModelChange"],["for","txtMaxOpened",1,"px-3","w-25"],["type","number","id","txtMaxOpened",3,"ngModel","ngModelChange"],["for","chbAutoDismiss",1,"px-3","w-25"],["type","checkbox","id","chbAutoDismiss",3,"ngModel","ngModelChange"],["for","chbNewestOnTop",1,"px-3","w-25"],["type","checkbox","id","chbNewestOnTop",3,"ngModel","ngModelChange"],["for","chbPreventDuplicates",1,"px-3","w-25"],["type","checkbox","id","chbPreventDuplicates",3,"ngModel","ngModelChange"],[1,"p-5",2,"text-align","center"],["id","btnFire",1,"px-5",3,"click"],["id","btnReset",1,"px-3","ml-3",3,"click"]],template:function(t,o){1&t&&(rt.Ub(0,"div",0),rt.Ub(1,"div",1),rt.Ub(2,"h3"),rt.Oc(3,"Page settings"),rt.Tb(),rt.Ub(4,"div"),rt.Ub(5,"label",2),rt.Oc(6," Number of toasts to show: "),rt.Tb(),rt.Ub(7,"input",3),rt.ic("ngModelChange",function(t){return o.count=t}),rt.Tb(),rt.Tb(),rt.Ub(8,"label",4),rt.Oc(9," Toast type "),rt.Tb(),rt.Ub(10,"input",5),rt.ic("ngModelChange",function(t){return o.type=t}),rt.Tb(),rt.Ub(11,"label",6),rt.Oc(12," error "),rt.Tb(),rt.Ub(13,"input",7),rt.ic("ngModelChange",function(t){return o.type=t}),rt.Tb(),rt.Ub(14,"label",8),rt.Oc(15," info "),rt.Tb(),rt.Ub(16,"input",9),rt.ic("ngModelChange",function(t){return o.type=t}),rt.Tb(),rt.Ub(17,"label",10),rt.Oc(18," success "),rt.Tb(),rt.Ub(19,"input",11),rt.ic("ngModelChange",function(t){return o.type=t}),rt.Tb(),rt.Ub(20,"label",12),rt.Oc(21," warning "),rt.Tb(),rt.Tb(),rt.Ub(22,"div",1),rt.Ub(23,"h3"),rt.Oc(24,"Toast Configuration"),rt.Tb(),rt.Ub(25,"div"),rt.Ub(26,"label",13),rt.Oc(27," message "),rt.Tb(),rt.Ub(28,"input",14),rt.ic("ngModelChange",function(t){return o.toast.message=t}),rt.Tb(),rt.Tb(),rt.Ub(29,"div"),rt.Ub(30,"label",15),rt.Oc(31," title "),rt.Tb(),rt.Ub(32,"input",16),rt.ic("ngModelChange",function(t){return o.toast.title=t}),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(33,"div",1),rt.Ub(34,"h3"),rt.Oc(35,"Options"),rt.Tb(),rt.Ub(36,"div"),rt.Ub(37,"label",17),rt.Oc(38," timeOut "),rt.Tb(),rt.Ub(39,"input",18),rt.ic("ngModelChange",function(t){return o.toast.options.timeOut=t}),rt.Tb(),rt.Tb(),rt.Ub(40,"div"),rt.Ub(41,"label",19),rt.Oc(42," extendedTimeOut "),rt.Tb(),rt.Ub(43,"input",20),rt.ic("ngModelChange",function(t){return o.toast.options.extendedTimeOut=t}),rt.Tb(),rt.Tb(),rt.Ub(44,"div"),rt.Ub(45,"label",21),rt.Oc(46,"closeButton"),rt.Tb(),rt.Ub(47,"input",22),rt.ic("ngModelChange",function(t){return o.toast.options.closeButton=t}),rt.Tb(),rt.Tb(),rt.Ub(48,"div"),rt.Ub(49,"label",23),rt.Oc(50,"progressBar"),rt.Tb(),rt.Ub(51,"input",24),rt.ic("ngModelChange",function(t){return o.toast.options.progressBar=t}),rt.Tb(),rt.Tb(),rt.Ub(52,"div"),rt.Ub(53,"label",4),rt.Oc(54,"progressAnimation"),rt.Tb(),rt.Ub(55,"input",25),rt.ic("ngModelChange",function(t){return o.toast.options.progressAnimation=t}),rt.Tb(),rt.Ub(56,"label",26),rt.Oc(57," increasing "),rt.Tb(),rt.Ub(58,"input",27),rt.ic("ngModelChange",function(t){return o.toast.options.progressAnimation=t}),rt.Tb(),rt.Ub(59,"label",28),rt.Oc(60," decreasing "),rt.Tb(),rt.Tb(),rt.Ub(61,"div"),rt.Ub(62,"label",29),rt.Oc(63,"enableHtml"),rt.Tb(),rt.Ub(64,"input",30),rt.ic("ngModelChange",function(t){return o.toast.options.enableHtml=t}),rt.Tb(),rt.Tb(),rt.Ub(65,"div"),rt.Ub(66,"label",31),rt.Oc(67,"toastClass"),rt.Tb(),rt.Ub(68,"input",32),rt.ic("ngModelChange",function(t){return o.toast.options.toastClass=t}),rt.Tb(),rt.Tb(),rt.Ub(69,"div"),rt.Ub(70,"label",4),rt.Oc(71,"positionClass"),rt.Tb(),rt.Ub(72,"span",33),rt.Ub(73,"input",34),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(74,"label",35),rt.Oc(75," TOP_CENTER "),rt.Tb(),rt.Ub(76,"input",36),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(77,"label",37),rt.Oc(78," TOP_LEFT "),rt.Tb(),rt.Ub(79,"input",38),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(80,"label",39),rt.Oc(81," TOP_RIGHT "),rt.Tb(),rt.Ub(82,"input",40),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(83,"label",41),rt.Oc(84," TOP_FULL_WIDTH "),rt.Tb(),rt.Pb(85,"br"),rt.Ub(86,"input",42),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(87,"label",43),rt.Oc(88," BOTTOM_CENTER "),rt.Tb(),rt.Ub(89,"input",44),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(90,"label",45),rt.Oc(91," BOTTOM_LEFT "),rt.Tb(),rt.Ub(92,"input",46),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(93,"label",47),rt.Oc(94," BOTTOM_RIGHT "),rt.Tb(),rt.Ub(95,"input",48),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(96,"label",49),rt.Oc(97," BOTTOM_FULL_WIDTH "),rt.Tb(),rt.Ub(98,"input",50),rt.ic("ngModelChange",function(t){return o.toast.options.positionClass=t}),rt.Tb(),rt.Ub(99,"label",51),rt.Oc(100," CUSTOM_CLASS "),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(101,"div"),rt.Ub(102,"label",52),rt.Oc(103,"clickToDismiss"),rt.Tb(),rt.Ub(104,"input",53),rt.ic("ngModelChange",function(t){return o.toast.options.clickToDismiss=t}),rt.Tb(),rt.Tb(),rt.Ub(105,"div"),rt.Ub(106,"label",54),rt.Oc(107,"stickyError"),rt.Tb(),rt.Ub(108,"input",55),rt.ic("ngModelChange",function(t){return o.toast.options.stickyError=t}),rt.Tb(),rt.Tb(),rt.Ub(109,"div"),rt.Ub(110,"label",56),rt.Oc(111,"maxOpened"),rt.Tb(),rt.Ub(112,"input",57),rt.ic("ngModelChange",function(t){return o.toast.options.maxOpened=t}),rt.Tb(),rt.Tb(),rt.Ub(113,"div"),rt.Ub(114,"label",58),rt.Oc(115,"autoDismiss"),rt.Tb(),rt.Ub(116,"input",59),rt.ic("ngModelChange",function(t){return o.toast.options.autoDismiss=t}),rt.Tb(),rt.Tb(),rt.Ub(117,"div"),rt.Ub(118,"label",60),rt.Oc(119,"newestOnTop"),rt.Tb(),rt.Ub(120,"input",61),rt.ic("ngModelChange",function(t){return o.toast.options.newestOnTop=t}),rt.Tb(),rt.Tb(),rt.Ub(121,"div"),rt.Ub(122,"label",62),rt.Oc(123,"preventDuplicates"),rt.Tb(),rt.Ub(124,"input",63),rt.ic("ngModelChange",function(t){return o.toast.options.preventDuplicates=t}),rt.Tb(),rt.Tb(),rt.Tb(),rt.Ub(125,"div",64),rt.Ub(126,"button",65),rt.ic("click",function(){return o.fireToast()}),rt.Oc(127,"Fire Toast(s)!"),rt.Tb(),rt.Ub(128,"button",66),rt.ic("click",function(){return o.reset()}),rt.Oc(129,"Reset form"),rt.Tb(),rt.Tb(),rt.Tb()),2&t&&(rt.Cb(7),rt.tc("ngModel",o.count),rt.Cb(3),rt.tc("ngModel",o.type),rt.Cb(3),rt.tc("ngModel",o.type),rt.Cb(3),rt.tc("ngModel",o.type),rt.Cb(3),rt.tc("ngModel",o.type),rt.Cb(9),rt.tc("ngModel",o.toast.message),rt.Cb(4),rt.tc("ngModel",o.toast.title),rt.Cb(7),rt.tc("ngModel",o.toast.options.timeOut),rt.Cb(4),rt.tc("ngModel",o.toast.options.extendedTimeOut),rt.Cb(4),rt.tc("ngModel",o.toast.options.closeButton),rt.Cb(4),rt.tc("ngModel",o.toast.options.progressBar),rt.Cb(4),rt.tc("ngModel",o.toast.options.progressAnimation),rt.Cb(3),rt.tc("ngModel",o.toast.options.progressAnimation),rt.Cb(6),rt.tc("ngModel",o.toast.options.enableHtml),rt.Cb(4),rt.tc("ngModel",o.toast.options.toastClass),rt.Cb(5),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(4),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(3),rt.tc("ngModel",o.toast.options.positionClass),rt.Cb(6),rt.tc("ngModel",o.toast.options.clickToDismiss),rt.Cb(4),rt.tc("ngModel",o.toast.options.stickyError),rt.Cb(4),rt.tc("ngModel",o.toast.options.maxOpened),rt.Cb(4),rt.tc("ngModel",o.toast.options.autoDismiss),rt.Cb(4),rt.tc("ngModel",o.toast.options.newestOnTop),rt.Cb(4),rt.tc("ngModel",o.toast.options.preventDuplicates))},directives:[at.q,at.b,at.m,at.p,at.r,at.a],encapsulation:2}),kt),data:{srlc:{hideIndicator:!0}}}],Ht=((Pt=function t(){q(this,t)}).\u0275mod=rt.Mb({type:Pt}),Pt.\u0275inj=rt.Lb({factory:function(t){return new(t||Pt)},providers:[{provide:ct.f,useFactory:function(){return tt("l6xF")}}],imports:[[ct.v,ct.kb,at.j,at.s,ct.N,ct.V,ct.E,ct.G,lt.f.forChild(Dt)],lt.f]}),Pt)},evYZ:function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastConfig, IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-basic-example",\n    templateUrl: "./toast-basic.example.component.html",\n})\nexport class ToastBasicExampleComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({}, "id");\n    }\n\n    public onShowToast(highlightMode: boolean): void {\n        this.toastService.info({\n            title: $localize `Simple Toast.`,\n            message: $localize `Hi there! I\'m a simple toast message`,\n            options: this.getOptions(),\n        });\n    }\n\n    private getOptions(): IToastConfig {\n        return {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n        };\n    }\n}\n'},iMfI:function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport { IToastService, ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-basic-html-example",\n    templateUrl: "./toast-basic-html.example.component.html",\n})\nexport class ToastBasicHtmlExampleComponent implements OnInit {\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    ngOnInit() {\n        this.toastService.setConfig({ timeOut: 5000, extendedTimeOut: 2000 }, "id");\n    }\n\n    public showToastWithEnabledHtml(): void {\n        this.toastService.info({\n            title: $localize `Toast with enableHtml set to true`,\n            message: $localize `Hi there! I\'m a simple toast message. <a href="#">Awesome link</a>`,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n\n    public showToastWithDisabledHtml(): void {\n        this.toastService.info({\n            title: $localize `Toast with enableHtml set to false`,\n            message: $localize `Hi there! I\'m a simple toast message <a href="#">Awesome link</a>`,\n            options: {\n                enableHtml: false,\n            },\n        });\n    }\n\n    public showToastWithScriptTagIncluded(): void {\n        this.toastService.info({\n            title: $localize `Toast with forbidden tags and enableHtml set to true`,\n            message: $localize `\n                Hi there! I\'m a toast message with forbidden tags:\n                <script>alert("You shall not pass")<\/script>\n                <object width="400" height="400"></object>\n                <iframe src="https://www.solarwinds.com/"></iframe>\n                <embed src="https://www.solarwinds.com/">\n                `,\n            options: {\n                enableHtml: true, // Note: Default value\n            },\n        });\n    }\n\n}\n'},itjl:function(t,o,e){"use strict";e.r(o),o.default='import { Component, Inject, OnInit } from "@angular/core";\nimport {\n    IActiveToast,\n    IToastConfig,\n    IToastDeclaration,\n    IToastService,\n    ToastPositionClass,\n    ToastService\n} from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-test",\n    templateUrl: "./toast-test.component.html",\n})\nexport class ToastTestComponent implements OnInit {\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    private defaults: IToastDeclaration = {\n        message: "",\n        title: "",\n        options: {\n            timeOut: 5000,\n            extendedTimeOut: 2000,\n            closeButton: true,\n            progressBar: true,\n            progressAnimation: "decreasing",\n            toastClass: "nui-toast",\n            positionClass: ToastPositionClass.TOP_RIGHT,\n            maxOpened: 0,           // unlimited\n            newestOnTop: true,\n            enableHtml: false,\n        },\n    };\n    // Using intersection type to avoid adding optional chaining operator (?) multiple times in template\n    // because options property is optional.\n    public toast: IToastDeclaration & {options: IToastConfig};\n    public count: number;\n    public type: string;\n\n    ngOnInit() {\n        this.reset();\n    }\n\n    public fireToast() {\n        const funcs: Record<string, (toast: IToastDeclaration) => IActiveToast> = {\n            "error": (toast) => this.toastService.error(toast),\n            "info": (toast) => this.toastService.info(toast),\n            "success": (toast) => this.toastService.success(toast),\n            "warning": (toast) => this.toastService.warning(toast),\n        };\n\n        for (let i = 0; i < this.count; i++) {\n            funcs[this.type](this.toast);\n        }\n    }\n\n    public reset() {\n        this.count = 1;\n        this.type = "info";\n        this.toast = { ...this.defaults, options: { ...this.defaults.options } };\n        this.toastService.clear();\n    }\n}\n'},ixWd:function(t,o,e){"use strict";e.r(o),o.default='import { Component } from "@angular/core";\nimport { IToastConfig, IToastDeclaration } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-toast-docs-example",\n    templateUrl: "./toast-docs.example.component.html",\n})\nexport class ToastExampleComponent {\n    getToastDeclarationKey(key: keyof IToastDeclaration): string {\n        return key;\n    }\n    getToastConfigKey(key: keyof IToastConfig): string {\n        return key;\n    }\n}\n'},l6xF:function(t,o,e){var n={"./index.ts":"L9yT","./toast-basic-html/toast-basic-html.example.component.html":"lVOQ","./toast-basic-html/toast-basic-html.example.component.ts":"iMfI","./toast-basic/toast-basic.example.component.html":"Dy+8","./toast-basic/toast-basic.example.component.ts":"evYZ","./toast-config/toast-config.example.component.html":"WCz1","./toast-config/toast-config.example.component.ts":"F+Re","./toast-docs/toast-docs.example.component.html":"0/8W","./toast-docs/toast-docs.example.component.ts":"ixWd","./toast-events/toast-events.example.component.html":"+SQs","./toast-events/toast-events.example.component.ts":"QfmY","./toast-position/toast-position.example.component.html":"o5Nh","./toast-position/toast-position.example.component.ts":"1Fq8","./toast-sticky-error/toast-sticky-error.example.component.html":"32Qo","./toast-sticky-error/toast-sticky-error.example.component.ts":"aI/t","./toast-test/toast-test.component.html":"F45P","./toast-test/toast-test.component.ts":"itjl","./toast-type/toast-type.example.component.html":"JpLm","./toast-type/toast-type.example.component.ts":"/aG4","./toast-visual-test/toast-visual-test.component.html":"Cfpd","./toast-visual-test/toast-visual-test.component.ts":"Tkmm","./toast.module.ts":"GjN6"};function i(t){var o=s(t);return e(o)}function s(t){if(!e.o(n,t)){var o=new Error("Cannot find module '"+t+"'");throw o.code="MODULE_NOT_FOUND",o}return n[t]}i.keys=function(){return Object.keys(n)},i.resolve=s,t.exports=i,i.id="l6xF"},lVOQ:function(t,o,e){"use strict";e.r(o),o.default='<button nui-button type="button" id="nui-basic-toast-html-example-1" (click)="showToastWithEnabledHtml()" i18n>Show Toast With Enabled Html</button>\n<button nui-button type="button" class="ml-3" id="nui-basic-toast-html-example-2" (click)="showToastWithDisabledHtml()" i18n>Show Toast With Disabled Html</button>\n<button nui-button type="button" class="ml-3" id="nui-basic-toast-html-example-3" (click)="showToastWithScriptTagIncluded()" i18n>Show Toast With Script Tag</button>\n'},o5Nh:function(t,o,e){"use strict";e.r(o),o.default='<div class="nui-flex-container">\n    <div>\n        <nui-radio-group [(value)]="selectedPosition">\n            <nui-radio *ngFor="let position of toastPositions"\n                        id="{{\'nui-toast-position-\'+position.className}}"\n                        [checked]="position.className === \'nui-toast--top-right\'"\n                        [value]="position.className">\n                {{position.displayValue}}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n</div>\n<button nui-button type="button" id="nui-toast-position-example" (click)="onShowToast($event)" i18n>Show Toast</button>\n'}}])}();