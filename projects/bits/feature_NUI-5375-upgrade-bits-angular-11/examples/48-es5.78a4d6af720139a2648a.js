!function(){var e,o,t,c,n,i,a,b,l,s,u,r,h,p,d,m,g,x,k,v,f;function C(e,o){return o||(o=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(o)}}))}function O(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function T(e,o){for(var t=0;t<o.length;t++){var c=o[t];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}function U(e,o,t){return o&&T(e.prototype,o),t&&T(e,t),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"+Uf0":function(e,o,t){"use strict";t.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},"19SM":function(e,o,t){var c={"./checkbox-group-basic/checkbox-group-basic.example.component.html":"dmI9","./checkbox-group-basic/checkbox-group-basic.example.component.ts":"Z7g5","./checkbox-group-docs/checkbox-group-docs.example.component.html":"lGTv","./checkbox-group-docs/checkbox-group-docs.example.component.ts":"+Uf0","./checkbox-group-in-form/checkbox-group-in-form.example.component.html":"NvPO","./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":"Y7Yd","./checkbox-group-inline/checkbox-group-inline.example.component.html":"FsbB","./checkbox-group-inline/checkbox-group-inline.example.component.ts":"8Z72","./checkbox-group-justified/checkbox-group-justified.example.component.html":"JoKC","./checkbox-group-justified/checkbox-group-justified.example.component.ts":"EiW/","./checkbox-group-test/checkbox-group-test.component.html":"Ut/2","./checkbox-group-test/checkbox-group-test.component.ts":"fuQ5","./checkbox-group-visual-test/checkbox-group-visual-test.component.html":"j3x3","./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":"EFDT","./checkbox-group.module.ts":"JpOM","./index.ts":"FDVP"};function n(e){var o=i(e);return t(o)}function i(e){if(!t.o(c,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return c[e]}n.keys=function(){return Object.keys(c)},n.resolve=i,e.exports=n,n.id="19SM"},"8Z72":function(e,o,t){"use strict";t.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},EFDT:function(e,o,t){"use strict";t.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},"EiW/":function(e,o,t){"use strict";t.r(o),o.default='import { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() { }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},FDVP:function(e,o,t){"use strict";t.r(o),o.default='export * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'},FsbB:function(e,o,t){"use strict";t.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                    class="nui-checkbox-group-inline"\n                    [values]="selectedVegetables"\n                    name="vegetable">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},JoKC:function(e,o,t){"use strict";t.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                    name="vegetable"\n                    [values]="selectedVegetables">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                  [checked]="isChecked(vegetable)"\n                  class="nui-checkbox--justified">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},JpOM:function(e,o,t){"use strict";t.r(o),o.default='import { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCheckboxModule, NuiDocsModule, SrlcStage } from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            "srlc": {\n                "stage": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            "srlc": {\n                "hideIndicator": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CheckboxGroupModule {\n}\n'},NvPO:function(e,o,t){"use strict";t.r(o),o.default='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message [allowDismiss]="true" type="critical" *ngIf="!myForm.controls[\'checkboxGroup\'].valid && myForm.controls[\'checkboxGroup\'].touched" >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            formControlName="checkboxGroup"\n                            name="vegetable" required>\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button nui-button type="submit" [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid" i18n>Submit</button>\n</form>\n'},"Ut/2":function(e,o,t){"use strict";t.r(o),o.default='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                            name="vegetable"\n                            [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                          [value]="vegetable"\n                          hint="This is some help text"\n                          [checked]="isChecked(vegetable)">\n                {{vegetable}}\n            </nui-checkbox>\n            <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                          id="nui-demo-checkbox-group-1-disabled-checkbox"\n                          [value]="disabledOne"\n                          [checked]="!isChecked(disabledOne)"\n                          disabled="true">{{disabledOne}}</nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                        name="vegetable"\n                        [values]="selectedVegetables">\n            <nui-checkbox *ngFor="let vegetable of vegetables"\n                        [value]="vegetable"\n                        [hint]="(hints.indexOf(vegetable) >=0) ? hints[hints.indexOf(vegetable)] : null"\n                        [checked]="isChecked(vegetable)"\n                        class="nui-checkbox--justified">\n                {{vegetable}}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form"\n                            name="vegetable"\n                            formControlName="checkboxGroup">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                            [value]="vegetable"\n                            [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                            name="vegetable"\n                            formControlName="checkboxGroup2">\n                <nui-checkbox [value]="vegetables[0]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[0])">\n                    {{vegetables[0]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[1]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[1])">\n                    {{vegetables[1]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[2]"\n                                [disabled]="true"\n                                [checked]="isChecked(vegetables[2])">\n                    {{vegetables[2]}}</nui-checkbox>\n                <nui-checkbox [value]="vegetables[3]"\n                                [disabled]="false"\n                                [checked]="isChecked(vegetables[3])">\n                    {{vegetables[3]}}</nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},Y7Yd:function(e,o,t){"use strict";t.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(private formBuilder: FormBuilder,\n                private toastService: ToastService) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control([this.cabbage, this.potato], [\n                Validators.required, Validators.minLength(3)]),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({message: $localize `Your form is valid!`});\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},Z7g5:function(e,o,t){"use strict";t.r(o),o.default='import { Component } from "@angular/core";\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize `Cabbage`;\n    public potato = $localize `Potato`;\n    public tomato = $localize `Tomato`;\n    public carrot = $localize `Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange (event: any) {\n        this.toastService.success({message: $localize `Selected checkboxes: ` + event});\n    }\n\n}\n'},dMfj:function(T,F,G){"use strict";G.r(F),G.d(F,"CheckboxGroupModule",function(){return be});var V=G("3Pt+"),y=G("tyNb"),w=G("b5Xb"),$=G("fXoL"),I=G("s1l0"),B=G("ofXK"),P=G("Oh8U");function j(e,o){if(1&e&&($.Ub(0,"nui-checkbox",13),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}function z(e,o){if(1&e&&($.Ub(0,"nui-checkbox",14),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("hint",c.hints.indexOf(t)>=0?c.hints[c.hints.indexOf(t)]:null)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}function M(e,o){if(1&e&&($.Ub(0,"nui-checkbox",15),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}var S,E=((S=function(){function e(o){O(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return U(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||S)($.Ob(V.c))},S.\u0275cmp=$.Ib({type:S,selectors:[["nui-checkbox-group-test-example"]],decls:24,vars:26,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","checkboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"],[3,"value","checked"]],template:function(e,o){1&e&&($.Ub(0,"div",0),$.Ub(1,"div",1),$.Ub(2,"nui-checkbox-group",2),$.Mc(3,j,2,3,"nui-checkbox",3),$.Ub(4,"nui-checkbox",4),$.Oc(5),$.Tb(),$.Tb(),$.Tb(),$.Ub(6,"div",5),$.Ub(7,"nui-checkbox-group",6),$.Mc(8,z,2,4,"nui-checkbox",7),$.Tb(),$.Tb(),$.Ub(9,"div",5),$.Ub(10,"form",8),$.Ub(11,"nui-checkbox-group",9),$.Mc(12,M,2,3,"nui-checkbox",10),$.Tb(),$.Tb(),$.Tb(),$.Ub(13,"div",5),$.Ub(14,"form",8),$.Ub(15,"nui-checkbox-group",11),$.Ub(16,"nui-checkbox",12),$.Oc(17),$.Tb(),$.Ub(18,"nui-checkbox",12),$.Oc(19),$.Tb(),$.Ub(20,"nui-checkbox",12),$.Oc(21),$.Tb(),$.Ub(22,"nui-checkbox",12),$.Oc(23),$.Tb(),$.Tb(),$.Tb(),$.Tb(),$.Tb()),2&e&&($.Cb(2),$.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables),$.Cb(1),$.tc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),$.Cb(1),$.Pc(o.disabledOne),$.Cb(2),$.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables),$.Cb(2),$.tc("formGroup",o.testForm),$.Cb(2),$.tc("ngForOf",o.vegetables),$.Cb(2),$.tc("formGroup",o.testForm),$.Cb(2),$.tc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),$.Cb(1),$.Qc(" ",o.vegetables[0],""),$.Cb(1),$.tc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),$.Cb(1),$.Qc(" ",o.vegetables[1],""),$.Cb(1),$.tc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),$.Cb(1),$.Qc(" ",o.vegetables[2],""),$.Cb(1),$.tc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),$.Cb(1),$.Qc(" ",o.vegetables[3],""))},directives:[I.a,B.p,P.a,V.v,V.n,V.h,V.m,V.f],encapsulation:2}),S),N=G("CVg4");function D(e,o){if(1&e&&($.Ub(0,"nui-checkbox",2),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}var Q,J=((Q=function(){function i(n){O(this,i),this.toastService=n,this.cabbage=$localize(e||(e=C(["Cabbage"]))),this.potato=$localize(o||(o=C(["Potato"]))),this.tomato=$localize(t||(t=C(["Tomato"]))),this.carrot=$localize(c||(c=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}return U(i,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}},{key:"onValueChange",value:function(e){this.toastService.success({message:$localize(n||(n=C(["Selected checkboxes: "])))+e})}}]),i}()).\u0275fac=function(e){return new(e||Q)($.Ob(w.Pb))},Q.\u0275cmp=$.Ib({type:Q,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){var e;return[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],["hint",e=$localize(i||(i=C([":\u241fba785d6cbb33a003a3ce1d20077ba67264374284\u241f829155627086234075:This is some help text"]))),3,"value","checked",4,"ngFor","ngForOf"],["hint",e,3,"value","checked"]]},template:function(e,o){1&e&&($.Ub(0,"nui-checkbox-group",0),$.ic("valuesChange",function(e){return o.onValueChange(e)}),$.Mc(1,D,2,3,"nui-checkbox",1),$.Tb()),2&e&&($.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables))},directives:[I.a,B.p,P.a],encapsulation:2}),Q);function L(e,o){if(1&e&&($.Ub(0,"nui-checkbox",2),$.Oc(1),$.Tb()),2&e){var t=o.$implicit;$.tc("value",t),$.Cb(1),$.Qc(" ",t," ")}}var q,Y=((q=function e(){O(this,e),this.cabbage=$localize(a||(a=C(["Cabbage"]))),this.potato=$localize(b||(b=C(["Potato"]))),this.tomato=$localize(l||(l=C(["Tomato"]))),this.carrot=$localize(s||(s=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}).\u0275fac=function(e){return new(e||q)},q.\u0275cmp=$.Ib({type:q,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(e,o){1&e&&($.Ub(0,"nui-checkbox-group",0),$.Mc(1,L,2,2,"nui-checkbox",1),$.Tb()),2&e&&($.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables))},directives:[I.a,B.p,P.a],encapsulation:2}),q),R=G("6urz");function A(e,o){1&e&&($.Ub(0,"nui-message",7),$.Ub(1,"b"),$.Yb(2,8),$.Tb(),$.Tb()),2&e&&$.tc("allowDismiss",!0)}function _(e,o){if(1&e&&($.Ub(0,"nui-checkbox",9),$.Oc(1),$.Tb()),2&e){var t=o.$implicit;$.tc("value",t),$.Cb(1),$.Qc(" ",t," ")}}var K,H=((K=function(){function e(o,t){O(this,e),this.formBuilder=o,this.toastService=t,this.cabbage=$localize(u||(u=C(["Cabbage"]))),this.potato=$localize(r||(r=C(["Potato"]))),this.tomato=$localize(h||(h=C(["Tomato"]))),this.carrot=$localize(p||(p=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}return U(e,[{key:"ngOnInit",value:function(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[V.u.required,V.u.minLength(3)])})}},{key:"onSubmit",value:function(){console.log(this.myForm),this.toastService.success({message:$localize(d||(d=C(["Your form is valid!"])))})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||K)($.Ob(V.c),$.Ob(w.Pb))},K.\u0275cmp=$.Ib({type:K,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){return[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],$localize(m||(m=C([":\u241f71c77bb8cecdf11ec3eead24dd1ba506573fa9cd\u241f935187492052582731:Submit"]))),["type","critical",3,"allowDismiss"],$localize(g||(g=C([":\u241faaf9b8331666795542f417fe39c78014513ca737\u241f3498101055154698277:Select minimum 3 checkboxes!"]))),[3,"value"]]},template:function(e,o){1&e&&($.Ub(0,"form",0),$.ic("submit",function(){return o.onSubmit()}),$.Ub(1,"div",1),$.Mc(2,A,3,1,"nui-message",2),$.Ub(3,"nui-checkbox-group",3),$.Mc(4,_,2,2,"nui-checkbox",4),$.Tb(),$.Tb(),$.Ub(5,"button",5),$.Yb(6,6),$.Tb(),$.Tb()),2&e&&($.tc("formGroup",o.myForm),$.Cb(2),$.tc("ngIf",!o.myForm.controls.checkboxGroup.valid&&o.myForm.controls.checkboxGroup.touched),$.Cb(2),$.tc("ngForOf",o.vegetables),$.Cb(1),$.tc("disabled",o.myForm.disabled||o.myForm.controls.checkboxGroup.invalid))},directives:[V.v,V.n,V.h,B.q,I.a,V.m,V.f,V.t,B.p,R.a,P.a],encapsulation:2}),K);function Z(e,o){if(1&e&&($.Ub(0,"nui-checkbox",2),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("hint",c.hints.indexOf(t)>=0?c.hints[c.hints.indexOf(t)]:null)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}var X,W=((X=function(){function e(){O(this,e),this.cabbage=$localize(x||(x=C(["Cabbage"]))),this.potato=$localize(k||(k=C(["Potato"]))),this.tomato=$localize(v||(v=C(["Tomato"]))),this.carrot=$localize(f||(f=C(["Carrot"]))),this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}return U(e,[{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}()).\u0275fac=function(e){return new(e||X)},X.\u0275cmp=$.Ib({type:X,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(e,o){1&e&&($.Ub(0,"nui-checkbox-group",0),$.Mc(1,Z,2,4,"nui-checkbox",1),$.Tb()),2&e&&($.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables))},directives:[I.a,B.p,P.a],encapsulation:2}),X);function ee(e,o){if(1&e&&($.Ub(0,"nui-checkbox",14),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}function oe(e,o){if(1&e&&($.Ub(0,"nui-checkbox",15),$.Oc(1),$.Tb()),2&e){var t=o.$implicit;$.tc("value",t),$.Cb(1),$.Qc(" ",t," ")}}function te(e,o){if(1&e&&($.Ub(0,"nui-checkbox",16),$.Oc(1),$.Tb()),2&e){var t=o.$implicit,c=$.mc();$.tc("value",t)("checked",c.isChecked(t)),$.Cb(1),$.Qc(" ",t," ")}}var ce,ne,ie,ae=[{path:"",component:(ne=function e(){O(this,e)},ne.\u0275fac=function(e){return new(e||ne)},ne.\u0275cmp=$.Ib({type:ne,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(e,o){1&e&&($.Ub(0,"h2"),$.Oc(1,"Required Modules"),$.Tb(),$.Ub(2,"ul"),$.Ub(3,"li"),$.Ub(4,"code"),$.Oc(5,"NuiCheckboxModule"),$.Tb(),$.Tb(),$.Tb(),$.Ub(6,"h2"),$.Oc(7,"Basic Usage"),$.Tb(),$.Ub(8,"p"),$.Oc(9," The "),$.Ub(10,"code"),$.Oc(11,"<nui-checkbox-group>"),$.Tb(),$.Oc(12," component is used for combining "),$.Ub(13,"code"),$.Oc(14,"<nui-checkbox>"),$.Tb(),$.Oc(15," components into a group. Use the "),$.Ub(16,"code"),$.Oc(17,"name"),$.Tb(),$.Oc(18,' input to set the "name" attribute for the inner '),$.Ub(19,"code"),$.Oc(20,"<nui-checkbox>"),$.Tb(),$.Oc(21," input elements. To get the values of the "),$.Ub(22,"code"),$.Oc(23,"<nui-checkbox>"),$.Tb(),$.Oc(24," child components use the "),$.Ub(25,"code"),$.Oc(26,"values"),$.Tb(),$.Oc(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),$.Ub(28,"code"),$.Oc(29,"(valuesChange)"),$.Tb(),$.Oc(30," output.\n"),$.Tb(),$.Ub(31,"nui-example-wrapper",0),$.Pb(32,"nui-checkbox-group-basic-example"),$.Tb(),$.Ub(33,"h2"),$.Oc(34,"Inline"),$.Tb(),$.Ub(35,"p"),$.Oc(36," Use the "),$.Ub(37,"code"),$.Oc(38,"nui-checkbox-group-inline"),$.Tb(),$.Oc(39," class to display checkbox group inline.\n"),$.Tb(),$.Ub(40,"nui-example-wrapper",1),$.Pb(41,"nui-checkbox-group-inline-example"),$.Tb(),$.Ub(42,"h2"),$.Oc(43,"Part of Form"),$.Tb(),$.Ub(44,"p"),$.Ub(45,"code"),$.Oc(46,"<nui-checkbox-group>"),$.Tb(),$.Oc(47," can be used in reactive forms.\n"),$.Tb(),$.Ub(48,"nui-example-wrapper",2),$.Pb(49,"nui-checkbox-group-in-form-example"),$.Tb(),$.Ub(50,"h2"),$.Oc(51,"Justified"),$.Tb(),$.Ub(52,"p"),$.Oc(53," To justify "),$.Ub(54,"code"),$.Oc(55,"<nui-checkbox>"),$.Tb(),$.Oc(56," to the width of "),$.Ub(57,"code"),$.Oc(58,"<nui-checkbox-group>"),$.Tb(),$.Oc(59," (or simply parent element, in case "),$.Ub(60,"code"),$.Oc(61,"<nui-checkbox>"),$.Tb(),$.Oc(62," is used not as a part of "),$.Ub(63,"code"),$.Oc(64,"<nui-checkbox-group>"),$.Tb(),$.Oc(65,"), add "),$.Ub(66,"code"),$.Oc(67,"nui-checkbox--justified"),$.Tb(),$.Oc(68," class to the "),$.Ub(69,"code"),$.Oc(70,"<nui-checkbox>"),$.Tb(),$.Oc(71,".\n"),$.Tb(),$.Ub(72,"nui-example-wrapper",3),$.Pb(73,"nui-checkbox-group-justified-example"),$.Tb())},directives:[N.a,J,Y,H,W],encapsulation:2}),ne),data:{srlc:{stage:w.Jb.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(ce=function(){function e(o){O(this,e),this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}return U(e,[{key:"ngOnInit",value:function(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}},{key:"isChecked",value:function(e){return this.selectedVegetables.indexOf(e)>-1}}]),e}(),ce.\u0275fac=function(e){return new(e||ce)($.Ob(V.c))},ce.\u0275cmp=$.Ib({type:ce,selectors:[["nui-checkbox-group-visual-test"]],decls:36,vars:26,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"]],template:function(e,o){1&e&&($.Ub(0,"div",0),$.Ub(1,"div",1),$.Ub(2,"div",2),$.Ub(3,"h3"),$.Oc(4,"Basic Checkbox-Group with Hint Text"),$.Tb(),$.Ub(5,"nui-checkbox-group",3),$.Mc(6,ee,2,3,"nui-checkbox",4),$.Ub(7,"nui-checkbox",5),$.Oc(8),$.Tb(),$.Tb(),$.Pb(9,"hr"),$.Tb(),$.Ub(10,"div",2),$.Ub(11,"h3"),$.Oc(12,"Inline Checkbox-Group"),$.Tb(),$.Ub(13,"nui-checkbox-group",6),$.Mc(14,oe,2,2,"nui-checkbox",7),$.Tb(),$.Pb(15,"hr"),$.Tb(),$.Pb(16,"div",8),$.Ub(17,"div",2),$.Ub(18,"h3"),$.Oc(19,"Justified Checkbox-Group"),$.Tb(),$.Ub(20,"nui-checkbox-group",9),$.Mc(21,te,2,3,"nui-checkbox",10),$.Tb(),$.Pb(22,"hr"),$.Tb(),$.Ub(23,"div",2),$.Ub(24,"h3"),$.Oc(25,"Disabled checkboxes within the form"),$.Tb(),$.Ub(26,"form",11),$.Ub(27,"nui-checkbox-group",12),$.Ub(28,"nui-checkbox",13),$.Oc(29),$.Tb(),$.Ub(30,"nui-checkbox",13),$.Oc(31),$.Tb(),$.Ub(32,"nui-checkbox",13),$.Oc(33),$.Tb(),$.Ub(34,"nui-checkbox",13),$.Oc(35),$.Tb(),$.Tb(),$.Tb(),$.Tb(),$.Tb(),$.Tb()),2&e&&($.Cb(5),$.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables),$.Cb(1),$.tc("value",o.disabledOne)("checked",!o.isChecked(o.disabledOne)),$.Cb(1),$.Pc(o.disabledOne),$.Cb(5),$.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables),$.Cb(6),$.tc("values",o.selectedVegetables),$.Cb(1),$.tc("ngForOf",o.vegetables),$.Cb(5),$.tc("formGroup",o.testForm),$.Cb(2),$.tc("value",o.vegetables[0])("disabled",!0)("checked",o.isChecked(o.vegetables[0])),$.Cb(1),$.Qc(" ",o.vegetables[0],""),$.Cb(1),$.tc("value",o.vegetables[1])("disabled",!1)("checked",o.isChecked(o.vegetables[1])),$.Cb(1),$.Qc(" ",o.vegetables[1],""),$.Cb(1),$.tc("value",o.vegetables[2])("disabled",!0)("checked",o.isChecked(o.vegetables[2])),$.Cb(1),$.Qc(" ",o.vegetables[2],""),$.Cb(1),$.tc("value",o.vegetables[3])("disabled",!1)("checked",o.isChecked(o.vegetables[3])),$.Cb(1),$.Qc(" ",o.vegetables[3],""))},directives:[I.a,B.p,P.a,V.v,V.n,V.h,V.m,V.f],encapsulation:2}),ce),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:E,data:{srlc:{hideIndicator:!0}}}],be=((ie=function e(){O(this,e)}).\u0275mod=$.Mb({type:ie}),ie.\u0275inj=$.Lb({factory:function(e){return new(e||ie)},providers:[{provide:w.f,useFactory:function(){return G("19SM")}}],imports:[[w.w,w.G,V.j,V.s,w.v,y.f.forChild(ae)],y.f]}),ie)},dmI9:function(e,o,t){"use strict";t.r(o),o.default='<nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                    name="vegetable"\n                    [values]="selectedVegetables"\n                    (valuesChange)="onValueChange($event)">\n    <nui-checkbox *ngFor="let vegetable of vegetables"\n                  [value]="vegetable"\n                  i18n-hint\n                  hint="This is some help text"\n                  [checked]="isChecked(vegetable)">\n        {{vegetable}}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},fuQ5:function(e,o,t){"use strict";t.r(o),o.default='import { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\n\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables, disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},j3x3:function(e,o,t){"use strict";t.r(o),o.default='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-basic"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              hint="This is some help text"\n                              [checked]="isChecked(vegetable)">\n                    {{vegetable}}\n                </nui-checkbox>\n                <nui-checkbox hint="If it\'s not disabled ring the alarm!"\n                                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                                [value]="disabledOne"\n                                [checked]="!isChecked(disabledOne)"\n                                disabled="true">{{disabledOne}}</nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-inline"\n                                class="nui-checkbox-group-inline"\n                                [values]="selectedVegetables"\n                                name="vegetable">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group id="nui-demo-checkbox-group-justified"\n                                name="vegetable"\n                                [values]="selectedVegetables">\n                <nui-checkbox *ngFor="let vegetable of vegetables"\n                              [value]="vegetable"\n                              [checked]="isChecked(vegetable)"\n                              class="nui-checkbox--justified">\n                    {{vegetable}}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                                name="vegetable"\n                                formControlName="checkboxGroup2">\n                    <nui-checkbox [value]="vegetables[0]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[0])">\n                        {{vegetables[0]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[1]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[1])">\n                        {{vegetables[1]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[2]"\n                                    [disabled]="true"\n                                    [checked]="isChecked(vegetables[2])">\n                        {{vegetables[2]}}</nui-checkbox>\n                    <nui-checkbox [value]="vegetables[3]"\n                                    [disabled]="false"\n                                    [checked]="isChecked(vegetables[3])">\n                        {{vegetables[3]}}</nui-checkbox>\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n</div>\n'},lGTv:function(e,o,t){"use strict";t.r(o),o.default='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining <code>&lt;nui-checkbox&gt;</code> components into a\n    group. Use the <code>name</code> input to set the "name" attribute for the inner <code>&lt;nui-checkbox&gt;</code> input elements. To get the\n    values of the <code>&lt;nui-checkbox&gt;</code> child components use the <code>values</code> input which is an array of checked state values.\n    To act on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-basic" exampleTitle="Basic Usage">\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox group inline.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-inline" exampleTitle="Inline">\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p>\n    <code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-in-form" exampleTitle="Part of Form">\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element,\n    in case <code>&lt;nui-checkbox&gt;</code> is used not as a part of <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper filenamePrefix="checkbox-group-justified" exampleTitle="Justified">\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'}}])}();