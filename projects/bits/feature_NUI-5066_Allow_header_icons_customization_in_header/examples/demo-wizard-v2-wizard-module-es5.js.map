{"version":3,"sources":["webpack:///demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.ts?d1db","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.html?d6c5","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.html?dbfe","webpack:///demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.html?dd4c","webpack:///demo/src/components/demo/wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons-example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons-example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.less","webpack:///demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts?e9ed","webpack:///demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.html?03b1","webpack:///demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.html?03cc","webpack:///demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.ts?0aee","webpack:///demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.ts?0f3d","webpack:///demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.html?12b3","webpack:///demo/src/components/demo/wizard-v2/wizard.module.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.less","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.ts?3cbd","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom.component.html?3e2a","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?161e","webpack:///demo/src/components/demo/wizard-v2/wizard.module.ts?4cbf","webpack:///demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.ts?534a","webpack:///demo/src/components/demo/wizard-v2/wizard-remove-step/wizard-remove-step-example.component.html?53d2","webpack:///demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html?5648","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-footer/wizard-custom-footer-example.component.ts?58bc","webpack:///demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-dynamic/wizard-dynamic.example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom-example.component.html","webpack:///demo/src/components/demo/wizard-v2/index.ts?880a","webpack:///demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html?8d8c","webpack:///demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons-example.component.ts?98ee","webpack:///demo/src/components/demo/wizard-v2/wizard-dialog/wizard-dialog.example.component.ts?99b3","webpack:///demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-custom-layout/wizard-custom.component.less","webpack:///demo/src/components/demo/wizard-v2/wizard-with-custom-icons/wizard-with-custom-icons-example.component.html?a19f","webpack:///demo/src/components/demo/wizard-v2/wizard-async-validation-form/wizard-async-form-validation.example.component.ts?a995","webpack:///demo/src/components/demo/wizard-v2/wizard-busy/wizard-busy.example.component.ts?ae33","webpack:///demo/src/components/demo/wizard-v2/wizard-horizontal-layout/wizard-horizontal-example.component.html?b378","webpack:///demo/src/components/demo/wizard-v2/index.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.ts","webpack:///demo/src/components/demo/wizard-v2/wizard-docs/wizard-docs.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.html","webpack:///demo/src/components/demo/wizard-v2/wizard-vertical-layout/wizard-vertical-example.component.ts"],"names":["WizardWithCustomIconsExampleComponent","routes","path","component","data","alpha","showThemeSwitcher","WizardModule","provide","useFactory","forChild","WizardRemoveStepExampleComponent","steps","addStep","normalStep","$localize","templateRef","title","push","index","splice","removeStep","WizardHorizontalExampleComponent","WizardBusyExampleComponent","busy","setTimeout","toggleStepBusy","WizardCustomFooterExampleComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","WizardDynamicExampleComponent","enableDynamicStepWithButton","dynamicTemplate1","length","toggleStep","_animationDone","WizardCustomComponent","useExisting","horizontalStepTransition","WizardCustomExampleComponent","formBuilder","selectedIndex","formGroup","group","required","minLength","undefined","email","update","progress","wizard","selectionChange","pipe","i","subscribe","changes","c","step","stepControl","controls","forEach","key","field","selected","get","markAsTouched","useValue","displayDefaultIndicatorType","WizardDialogExampleComponent","dialogService","toastService","vegetables","selectedVegetables","vegetable","indexOf","values","content","activeDialog","open","size","windowClass","close","openDialog","fakeAsyncValidator","WizardAsyncFormValidationExampleComponent","form","status","markAllAsTouched","statusChanges","next","WizardDocsComponent","WizardVerticalExampleComponent"],"mappings":"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","file":"demo-wizard-v2-wizard-module-es5.js","sourcesContent":["export default \"import {\\n    AfterViewInit,\\n    Component,\\n    TemplateRef,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\n\\nimport {IWizardStepConfig } from \\\"../wizard-dynamic/wizard-dynamic.example.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-remove-step-example\\\",\\n    templateUrl: \\\"./wizard-remove-step-example.component.html\\\",\\n})\\nexport class WizardRemoveStepExampleComponent implements AfterViewInit {\\n    public steps: IWizardStepConfig[] = [];\\n\\n    @ViewChild(\\\"normalStep\\\") normalStep: TemplateRef<string>;\\n\\n    public ngAfterViewInit(): void {\\n        this.addStep(this.normalStep, $localize `Normal step`);\\n    }\\n\\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\\n        this.steps.push({title: title ?? `Dynamic Step`, templateRef: templateRef});\\n    }\\n\\n    public removeStep(index: number): void {\\n        this.steps.splice(index, 1);\\n    }\\n}\\n\";","export default \"<form [formGroup]=\\\"formGroup\\\">\\n    <nui-wizard-custom [linear]=\\\"true\\\" #wizard>\\n        <!-- Overview content-->\\n        <ng-container summary>\\n            <h2>Overview</h2>\\n            <nui-progress [show]=\\\"true\\\"\\n                          [stacked]=\\\"true\\\"\\n                          [percent]=\\\"progress| number: '1.0-0'\\\"\\n                          [showNumber]=\\\"true\\\">\\n            </nui-progress>\\n            <p>Step {{selectedIndex+1}} out of {{steps}} steps</p>\\n            <p>Name: {{formGroup.get(['personDetails', 'name'])?.value || \\\"Not provided\\\"}}</p>\\n            <p>Symptoms:\\n                <ng-container [ngSwitch]=\\\"formGroup.get(['personDetails','symptoms'])?.value\\\">\\n                    <ng-container *ngSwitchCase=\\\"true\\\">\\n                        {{ formGroup.get(['diseaseDetails','date']).valid ? \\\"Since \\\" + formGroup.get(['diseaseDetails','date'])?.value.format('D MMM YYYY') : \\\"Yes\\\" }}\\n                    </ng-container>\\n                    <ng-container *ngSwitchCase=\\\"false\\\" i18n>No</ng-container>\\n                    <ng-container *ngSwitchDefault i18n>Unknown</ng-container>\\n                </ng-container>\\n            </p>\\n            <p>Email: {{formGroup.get(['contactDetails', 'email'])?.value || \\\"Not provided\\\"}}</p>\\n        </ng-container>\\n\\n        <!--  content of the 1st step -->\\n        <nui-wizard-step-v2 i18n-label label=\\\"Person Details\\\"\\n                            formGroupName=\\\"personDetails\\\" [stepControl]=\\\"formGroup.get(['personDetails'])\\\">\\n            <!-- content of the current step -->\\n            <nui-form-field [control]=\\\"formGroup.get(['personDetails','name'])\\\" i18n-caption\\n                            caption=\\\"Name\\\">\\n                <nui-textbox formControlName=\\\"name\\\"></nui-textbox>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['personDetails','name'])?.errors?.required\\\"\\n                                        i18n>\\n                    This is required\\n                </nui-validation-message>\\n                <nui-validation-message for=\\\"minlength\\\"\\n                                        *ngIf=\\\"formGroup.get(['personDetails','name'])?.errors?.minlength\\\"\\n                                        i18n>\\n                    Minimum length is 3\\n                </nui-validation-message>\\n            </nui-form-field>\\n\\n            <nui-form-field [control]=\\\"formGroup.get(['personDetails','symptoms'])\\\" i18n-caption\\n                            caption=\\\"Do you have Covid ?\\\">\\n                <nui-checkbox formControlName=\\\"symptoms\\\" [indeterminate]=\\\"formGroup.get(['personDetails','symptoms'])?.pristine\\\" i18n>\\n                    Diseases symptoms\\n                </nui-checkbox>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['personDetails','symptoms'])?.errors?.required\\\"\\n                                        i18n>\\n                    This is required\\n                </nui-validation-message>\\n            </nui-form-field>\\n\\n            <!-- content of the footer -->\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <!--  content of the optional step -->\\n        <nui-wizard-step-v2 *ngIf=\\\"formGroup.get(['personDetails','symptoms'])?.value\\\"\\n                            i18n-label label=\\\"Disease Details\\\"\\n                            formGroupName=\\\"diseaseDetails\\\" [stepControl]=\\\"formGroup.get(['diseaseDetails'])\\\">\\n            <ng-template wizardStepLabel i18n>Disease Details for your Symptoms</ng-template>\\n            <nui-form-field [control]=\\\"formGroup.get(['diseaseDetails','date'])\\\" i18n-caption\\n                            caption=\\\"When did you noticed your first symptoms ?\\\">\\n                <nui-date-picker formControlName=\\\"date\\\" i18n></nui-date-picker>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['diseaseDetails','date'])?.errors?.required\\\"\\n                                        i18n>\\n                    Date when disease manifested is required\\n                </nui-validation-message>\\n            </nui-form-field>\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <!--  content of the 2nd step -->\\n        <nui-wizard-step-v2 i18n-label label=\\\"Contact Details\\\"\\n                            formGroupName=\\\"contactDetails\\\" [stepControl]=\\\"formGroup.get(['contactDetails'])\\\">\\n            <!-- content of the current step -->\\n            <nui-form-field [control]=\\\"formGroup.get(['contactDetails','email'])\\\" i18n-caption\\n                            caption=\\\"Email\\\">\\n                <nui-textbox type=\\\"email\\\" formControlName=\\\"email\\\"></nui-textbox>\\n                <nui-validation-message for=\\\"required\\\"\\n                                        *ngIf=\\\"formGroup.get(['contactDetails','email'])?.errors?.required\\\"\\n                                        i18n>\\n                    This is required\\n                </nui-validation-message>\\n\\n                <nui-validation-message for=\\\"email\\\"\\n                                        *ngIf=\\\"formGroup.get(['contactDetails','email'])?.errors?.email\\\"\\n                                        i18n>\\n                    Invalid email\\n                </nui-validation-message>\\n            </nui-form-field>\\n            <nui-form-field [control]=\\\"formGroup.get(['contactDetails','phone'])\\\" i18n-caption\\n                            caption=\\\"Phone\\\">\\n                <nui-textbox type=\\\"email\\\" formControlName=\\\"phone\\\"></nui-textbox>\\n            </nui-form-field>\\n\\n            <!-- content of the footer -->\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <!--  content of the final step -->\\n        <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n            <span i18n>Thanks for your feedback and take care</span>!\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <button type=\\\"button\\\" nui-button (click)=\\\"wizard.reset()\\\">Reset</button>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n\\n        <ng-template #wizardPrevious>\\n            <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">Back</button>\\n        </ng-template>\\n\\n        <ng-template #wizardNext>\\n            <button nuiWizardNext\\n                    type=\\\"button\\\"\\n                    nui-button\\n                    displayStyle=\\\"primary\\\"\\n                    icon=\\\"caret-right\\\"\\n                    iconRight=\\\"true\\\"\\n                    (click)=\\\"validate(wizard.selected)\\\"\\n            >Next\\n            </button>\\n        </ng-template>\\n    </nui-wizard-custom>\\n</form>\\n\";","export default \"<nui-wizard-horizontal>\\n\\n    <!--  content of the 1st step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the first step of our horizontal wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <div class=\\\"custom-footer step_1\\\">\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                <button nui-button type=\\\"button\\\" icon=\\\"add\\\" i18n>Custom button 1</button>\\n                <span i18n>This is some custom content added in the footer for our first step</span>\\n            </div>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the final step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>!\\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\\n        <ng-template wizardStepFooter>\\n            <div class=\\\"custom-footer step_2\\\">\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <button nui-button type=\\\"button\\\" icon=\\\"remove\\\" i18n>Custom button 2</button>\\n                <span i18n>This is some custom content added in the footer for out second step</span>\\n            </div>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n\";","export default \"<h2>Layout</h2>\\n<h3>Horizontal Layout Wizard</h3>\\n<p>\\n    To use the horizontal wizard component, place a <code>nui-wizard-horizontal</code> element in your template and include one or more\\n    <code><a href=\\\"../components/WizardStepComponent.html\\\" target=\\\"_blank\\\">nui-wizard-step-v2</a></code> elements as children of the\\n    <code>nui-wizard-horizontal</code> element.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-horizontal-layout\\\" exampleTitle=\\\"Horizontal Layout Wizard\\\">\\n    <nui-wizard-horizontal-example></nui-wizard-horizontal-example>\\n</nui-example-wrapper>\\n\\n<!--Will be updated in scope of the NUI-6099-->\\n\\n<!--<h3>Vertical Layout Wizard</h3>-->\\n<!--<nui-example-wrapper filenamePrefix=\\\"wizard-vertical-layout\\\" exampleTitle=\\\"Vertical Layout Wizard\\\">-->\\n<!--    <nui-wizard-vertical-example></nui-wizard-vertical-example>-->\\n<!--</nui-example-wrapper>-->\\n\\n<h3>Usage with a dialog</h3>\\n<p>You can pass an existing wizard component as content of the dialog window. </p>\\n<p>You should insert wizard component in dialog body. </p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-dialog\\\" exampleTitle=\\\"wizard in dialog\\\">\\n    <nui-wizard-v2-dialog-example></nui-wizard-v2-dialog-example>\\n</nui-example-wrapper>\\n\\n<h3>Busy step</h3>\\n<p>You can make your step busy to forbid actions.</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-busy\\\" exampleTitle=\\\"wizard step busy\\\">\\n    <nui-wizard-v2-busy-example></nui-wizard-v2-busy-example>\\n</nui-example-wrapper>\\n\\n<h3>Custom footer</h3>\\n<p>Customizing the footer layout content and style for each step is quite easy, as you can see in the example below:</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-custom-footer\\\" exampleTitle=\\\"Wizard with Custom Footer\\\">\\n    <nui-wizard-custom-footer-example></nui-wizard-custom-footer-example>\\n</nui-example-wrapper>\\n\\n<h3>Adding step dynamically</h3>\\n<p>You are able to add wizard steps dynamically.</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-dynamic\\\" exampleTitle=\\\"wizard add dynamic step\\\">\\n    <nui-wizard-dynamic-example></nui-wizard-dynamic-example>\\n</nui-example-wrapper>\\n\\n<h3>Removing step</h3>\\n<p>You are able to remove steps by index.</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-remove-step\\\" exampleTitle=\\\"wizard remove step\\\">\\n    <nui-wizard-remove-step-example></nui-wizard-remove-step-example>\\n</nui-example-wrapper>\\n\\n<h3>Custom Layout Wizard</h3>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-custom-layout\\\" exampleTitle=\\\"Custom Layout Wizard\\\">\\n    <nui-wizard-custom-example></nui-wizard-custom-example>\\n</nui-example-wrapper>\\n\\n<h3>Async Form Validation</h3>\\n<p>\\n    To handle async validation check 'PENDING' status of WizardV2Step stepControl\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-async-form-validation\\\" exampleTitle=\\\"Async Form Validation\\\">\\n    <nui-wizard-async-form-validation-example></nui-wizard-async-form-validation-example>\\n</nui-example-wrapper>\\n\\n<h2>Wizard with custom icons</h2>\\n<p>\\n    You are able to add custom icons to wizard.\\n</p>\\n<h3>Wizard with custom icons</h3>\\n<nui-example-wrapper filenamePrefix=\\\"wizard-horizontal-layout\\\" exampleTitle=\\\"Horizontal Layout Wizard\\\">\\n    <nui-wizard-with-custom-icons-example></nui-wizard-with-custom-icons-example>\\n</nui-example-wrapper>\\n\";","<nui-wizard-horizontal>\n\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <span i18n>This is the first step of our wizard</span>.\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <nui-wizard-step-v2 i18n-label label=\"Second step\">\n        <span i18n>This is the second step of our wizard</span>.\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-with-custom-icons-example\",\n    templateUrl: \"./wizard-with-custom-icons-example.component.html\",\n})\nexport class WizardWithCustomIconsExampleComponent {}\n","export default \".example-container {\\n    border: 1px red solid;\\n}\\n\";","export default \"import {AfterViewInit, Component, TemplateRef, ViewChild} from \\\"@angular/core\\\";\\n\\nexport interface IWizardStepConfig {\\n    title: string;\\n    templateRef: TemplateRef<string>;\\n}\\n\\n@Component({\\n    selector: \\\"nui-wizard-dynamic-example\\\",\\n    templateUrl: \\\"./wizard-dynamic.example.component.html\\\",\\n})\\nexport class WizardDynamicExampleComponent implements AfterViewInit {\\n    public enableDynamicStepWithButton = false;\\n    public steps: IWizardStepConfig[] = [];\\n\\n    @ViewChild(\\\"dynamicTemplate1\\\") dynamicTemplate1: TemplateRef<string>;\\n\\n    public ngAfterViewInit(): void {\\n        this.addStep(this.dynamicTemplate1, $localize `My first dynamic step`);\\n    }\\n\\n    public toggleStep() {\\n        this.enableDynamicStepWithButton = !this.enableDynamicStepWithButton;\\n    }\\n\\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\\n        this.steps.push({title: title ?? `Dynamic Step ${this.steps.length + 1}`, templateRef: templateRef});\\n    }\\n}\\n\";","export default \"<nui-wizard-vertical>\\n\\n    <!--  content of the 1st step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the first step of our vertical wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the 2nd step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Second step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the second step of our vertical wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the final step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>!\\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-vertical>\\n\";","export default \"<ng-template #dialogWizard>\\n    <div nui-busy [busy]=\\\"busy\\\">\\n        <div class=\\\"busy-content\\\">\\n            <nui-dialog-header i18n-title title=\\\"Wizard dialog\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n            <div class=\\\"dialog-body compact-mode\\\">\\n                <nui-wizard-horizontal>\\n\\n                    <!--  content of the 1st step -->\\n                    <nui-wizard-step-v2>\\n                        <!-- define the label which is displayed on the header stepper -->\\n                        <ng-template wizardStepLabel>Completed</ng-template>\\n\\n                        <!-- content of the current step -->\\n                        <span i18n>This is the first step of our horizontal wizard</span>.\\n\\n                        <!-- content of the footer -->\\n                        <ng-template wizardStepFooter>\\n                            <button type=\\\"button\\\" nui-button (click)=\\\"toggleBusy()\\\">\\n                                Toggle busy\\n                            </button>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <!--  content of the 2nd step -->\\n                    <nui-wizard-step-v2>\\n                        <!-- define the label which is displayed on the header stepper -->\\n                        <ng-template wizardStepLabel>Active</ng-template>\\n\\n                        <!-- content of the current step -->\\n                        <span i18n>This is the second step of our horizontal wizard</span>.\\n\\n                        <!-- content of the footer -->\\n                        <ng-template wizardStepFooter>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <!--  content of the 3rd step -->\\n                    <nui-wizard-step-v2>\\n                        <!-- define the label which is displayed on the header stepper -->\\n                        <ng-template wizardStepLabel>Not visited</ng-template>\\n\\n                        <!-- content of the current step -->\\n                        <span i18n>This is the third step of our horizontal wizard</span>.\\n\\n                        <!-- content of the footer -->\\n                        <ng-template wizardStepFooter>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <!--  content of the final step -->\\n                    <nui-wizard-step-v2>\\n                        <ng-template wizardStepLabel>Summary</ng-template>\\n                        <span i18n>We finally reached our last step</span>!\\n                        <ng-template wizardStepFooter>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardCancel\\\"></ng-container>\\n                            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                        </ng-template>\\n                    </nui-wizard-step-v2>\\n\\n                    <ng-template #wizardCancel>\\n                        <button type=\\\"button\\\" nui-button (click)=\\\"closeDialog()\\\">\\n                            Cancel\\n                        </button>\\n                    </ng-template>\\n\\n                    <ng-template #wizardPrevious>\\n                        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                            Previous\\n                        </button>\\n                    </ng-template>\\n\\n                    <ng-template #wizardNext>\\n                        <button nuiWizardNext\\n                                type=\\\"button\\\"\\n                                nui-button\\n                                displayStyle=\\\"primary\\\"\\n                                icon=\\\"caret-right\\\"\\n                                iconRight=\\\"true\\\"\\n                        >Next</button>\\n                    </ng-template>\\n                </nui-wizard-horizontal>\\n            </div>\\n        </div>\\n        <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Data is loading from remote server...\\\"></nui-spinner>\\n    </div>\\n</ng-template>\\n\\n<button nui-button type=\\\"button\\\"\\n        (click)=\\\"openDialog(dialogWizard)\\\"\\n        i18n>\\n    Open dialog wizard\\n</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-vertical-example\\\",\\n    templateUrl: \\\"./wizard-vertical-example.component.html\\\",\\n})\\nexport class WizardVerticalExampleComponent {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-horizontal-example\\\",\\n    templateUrl: \\\"./wizard-horizontal-example.component.html\\\",\\n})\\nexport class WizardHorizontalExampleComponent {}\\n\";","export default \"<div nui-busy [busy]=\\\"busy\\\" class=\\\"example-container\\\">\\n    <div class=\\\"busy-content\\\">\\n        <nui-wizard-horizontal>\\n\\n            <!--  content of the 1st step -->\\n            <nui-wizard-step-v2>\\n                <!-- define the label which is displayed on the header stepper -->\\n                <ng-template wizardStepLabel>Make step busy</ng-template>\\n\\n                <!-- content of the current step -->\\n                <p i18n>Welcome!</p>\\n\\n                <!-- content of the footer -->\\n                <ng-template wizardStepFooter>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <!--  content of the 2nd step -->\\n            <nui-wizard-step-v2>\\n                <!-- define the label which is displayed on the header stepper -->\\n                <ng-template wizardStepLabel>Final</ng-template>\\n\\n                <!-- content of the current step -->\\n                <nui-checkbox name=\\\"nui-demo-checkbox\\\"\\n                              i18n-title\\n                              title=\\\"Check box with help text\\\"\\n                              i18n-hint\\n                              hint=\\\"This is some help text\\\"\\n                              required=\\\"true\\\"\\n                              [value]=\\\"false\\\"\\n                              i18n>Check box with help text\\n                </nui-checkbox>\\n                <nui-checkbox name=\\\"nui-demo-checkbox-plain\\\"\\n                              [checked]=\\\"true\\\"\\n                              [value]=\\\"false\\\"\\n                              i18n>Plain checkbox\\n                </nui-checkbox>\\n\\n                <!-- content of the footer -->\\n                <ng-template wizardStepFooter>\\n                    <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                </ng-template>\\n            </nui-wizard-step-v2>\\n\\n            <ng-template #wizardPrevious>\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-template>\\n\\n            <ng-template #wizardNext>\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                >Next</button>\\n            </ng-template>\\n        </nui-wizard-horizontal>\\n    </div>\\n    <nui-spinner id=\\\"nui-demo-spinner\\\" size=\\\"large\\\" i18n-message message=\\\"Data is loading from remote server...\\\"></nui-spinner>\\n</div>\\n\\n<button nui-button type=\\\"button\\\" id=\\\"nui-demo-busy-button\\\" (click)=\\\"toggleStepBusy()\\\" i18n>Toggle busy on current step</button>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDatePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiFormFieldModule,\n    NuiIconModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    NuiRadioModule,\n    NuiSpinnerModule,\n    NuiTextboxModule,\n    NuiValidationMessageModule,\n    NuiWizardV2Module,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    WizardBusyExampleComponent,\n    WizardCustomComponent,\n    WizardCustomExampleComponent,\n    WizardCustomFooterExampleComponent,\n    WizardDialogExampleComponent,\n    WizardDocsComponent,\n    WizardDynamicExampleComponent,\n    WizardHorizontalExampleComponent,\n    WizardRemoveStepExampleComponent,\n    WizardVerticalExampleComponent,\n    WizardAsyncFormValidationExampleComponent,\n    WizardWithCustomIconsExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: WizardDocsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.alpha,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        NuiTextboxModule,\n        NuiRadioModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiValidationMessageModule,\n        NuiFormFieldModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n        NuiWizardV2Module,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        NuiProgressModule,\n        NuiDatePickerModule,\n        NuiIconModule,\n    ],\n    declarations: [\n        WizardDocsComponent,\n        WizardHorizontalExampleComponent,\n        WizardVerticalExampleComponent,\n        WizardCustomExampleComponent,\n        WizardCustomComponent,\n        WizardDialogExampleComponent,\n        WizardBusyExampleComponent,\n        WizardCustomFooterExampleComponent,\n        WizardDynamicExampleComponent,\n        WizardRemoveStepExampleComponent,\n        WizardAsyncFormValidationExampleComponent,\n        WizardWithCustomIconsExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class WizardModule {}\n","import {\n    AfterViewInit,\n    Component,\n    TemplateRef,\n    ViewChild,\n} from \"@angular/core\";\n\nimport {IWizardStepConfig } from \"../wizard-dynamic/wizard-dynamic.example.component\";\n\n@Component({\n    selector: \"nui-wizard-remove-step-example\",\n    templateUrl: \"./wizard-remove-step-example.component.html\",\n})\nexport class WizardRemoveStepExampleComponent implements AfterViewInit {\n    public steps: IWizardStepConfig[] = [];\n\n    @ViewChild(\"normalStep\") normalStep: TemplateRef<string>;\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.normalStep, $localize `Normal step`);\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\n        this.steps.push({title: title ?? `Dynamic Step`, templateRef: templateRef});\n    }\n\n    public removeStep(index: number): void {\n        this.steps.splice(index, 1);\n    }\n}\n","<nui-wizard-horizontal #wizard>\n    <nui-wizard-step-v2 *ngFor=\"let step of steps; let i = index; let isLast = last\">\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\n        <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n        <ng-template wizardStepFooter>\n            <ng-container *ngIf=\"i !== 0\">\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-container>\n            <ng-container *ngIf=\"!isLast\">\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                >Next</button>\n            </ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicStep>\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\n    </ng-template>\n\n    <ng-template #normalStep>\n        <p i18n>Hi! You can add next step dynamically</p>\n\n        <button nui-button type=\"button\" (click)=\"addStep(dynamicStep)\">\n            Add dynamic step w/template\n        </button>\n\n    </ng-template>\n</nui-wizard-horizontal>\n<div class=\"d-flex\">\n    <div class=\"\">\n        <span class=\"nui-textbox--bold\" [ngStyle]=\"{ 'font-weight': 'bold' }\">Step index to remove</span> <br>\n        <nui-textbox-number [minValue]=\"1\" #number></nui-textbox-number>\n    </div>\n    <button class=\"ml-3 h-25 align-self-end\"\n            displayStyle=\"destructive\"\n            nui-button type=\"button\"\n            [disabled]=\"+number.value < 1\"\n            (click)=\"removeStep(+number.value)\"\n            i18n>\n        Remove step dynamically\n    </button>\n</div>\n","<nui-wizard-horizontal>\n\n    <!--  content of the 1st step -->\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <!-- content of the current step -->\n        <span i18n>This is the first step of our horizontal wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the final step -->\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>!\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-horizontal-example\",\n    templateUrl: \"./wizard-horizontal-example.component.html\",\n})\nexport class WizardHorizontalExampleComponent {}\n","<div nui-busy [busy]=\"busy\" class=\"example-container\">\n    <div class=\"busy-content\">\n        <nui-wizard-horizontal>\n\n            <!--  content of the 1st step -->\n            <nui-wizard-step-v2>\n                <!-- define the label which is displayed on the header stepper -->\n                <ng-template wizardStepLabel>Make step busy</ng-template>\n\n                <!-- content of the current step -->\n                <p i18n>Welcome!</p>\n\n                <!-- content of the footer -->\n                <ng-template wizardStepFooter>\n                    <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <!--  content of the 2nd step -->\n            <nui-wizard-step-v2>\n                <!-- define the label which is displayed on the header stepper -->\n                <ng-template wizardStepLabel>Final</ng-template>\n\n                <!-- content of the current step -->\n                <nui-checkbox name=\"nui-demo-checkbox\"\n                              i18n-title\n                              title=\"Check box with help text\"\n                              i18n-hint\n                              hint=\"This is some help text\"\n                              required=\"true\"\n                              [value]=\"false\"\n                              i18n>Check box with help text\n                </nui-checkbox>\n                <nui-checkbox name=\"nui-demo-checkbox-plain\"\n                              [checked]=\"true\"\n                              [value]=\"false\"\n                              i18n>Plain checkbox\n                </nui-checkbox>\n\n                <!-- content of the footer -->\n                <ng-template wizardStepFooter>\n                    <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                </ng-template>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardPrevious>\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext>\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                >Next</button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </div>\n    <nui-spinner id=\"nui-demo-spinner\" size=\"large\" i18n-message message=\"Data is loading from remote server...\"></nui-spinner>\n</div>\n\n<button nui-button type=\"button\" id=\"nui-demo-busy-button\" (click)=\"toggleStepBusy()\" i18n>Toggle busy on current step</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-wizard-v2-busy-example\",\n    templateUrl: \"./wizard-busy.example.component.html\",\n    styleUrls: [\"./wizard-busy.example.component.less\"],\n})\nexport class WizardBusyExampleComponent  {\n    public busy: boolean;\n\n    public toggleStepBusy() {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n}\n","export default \".custom-footer {\\n    width: 100%;\\n    padding: 10px;\\n    border: 5px transparent solid;\\n    color: white;\\n\\n    &.step_1 {\\n        border-color: red;\\n        button {\\n            float: left;\\n        }\\n    }\\n\\n    &.step_2 {\\n        border-color: green;\\n        button {\\n            float: right;\\n        }\\n    }\\n\\n    button {\\n        min-width: 100px;\\n    }\\n}\\n\";","<nui-wizard-horizontal>\n\n    <!--  content of the 1st step -->\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <!-- content of the current step -->\n        <span i18n>This is the first step of our horizontal wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <div class=\"custom-footer step_1\">\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                <button nui-button type=\"button\" icon=\"add\" i18n>Custom button 1</button>\n                <span i18n>This is some custom content added in the footer for our first step</span>\n            </div>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the final step -->\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>!\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\n        <ng-template wizardStepFooter>\n            <div class=\"custom-footer step_2\">\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <button nui-button type=\"button\" icon=\"remove\" i18n>Custom button 2</button>\n                <span i18n>This is some custom content added in the footer for out second step</span>\n            </div>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-custom-footer-example\",\n    templateUrl: \"./wizard-custom-footer-example.component.html\",\n    styleUrls: [\"./wizard-custom-footer-example.component.less\"],\n})\nexport class WizardCustomFooterExampleComponent {}\n","export default \"import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from \\\"@angular/cdk/stepper\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    Component,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation,\\n} from \\\"@angular/core\\\";\\nimport { FormBuilder, FormGroup, Validators } from \\\"@angular/forms\\\";\\nimport { wizardAnimations, WizardDirective, WizardStepV2Component } from \\\"@nova-ui/bits\\\";\\nimport { tap } from \\\"rxjs/operators\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-custom\\\",\\n    templateUrl: \\\"wizard-custom.component.html\\\",\\n    styleUrls: [\\\"wizard-custom.component.less\\\"],\\n    host: {\\n        \\\"class\\\": \\\"nui-wizard-custom-layout\\\",\\n        \\\"aria-orientation\\\": \\\"horizontal\\\",\\n    },\\n    animations: [wizardAnimations.horizontalStepTransition],\\n    providers: [\\n        {provide: WizardDirective, useExisting: WizardCustomComponent},\\n        {provide: CdkStepper, useExisting: WizardCustomComponent},\\n    ],\\n    encapsulation: ViewEncapsulation.None,\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class WizardCustomComponent extends WizardDirective {}\\n\\n@Component({\\n    selector: \\\"nui-wizard-custom-example\\\",\\n    templateUrl: \\\"./wizard-custom-example.component.html\\\",\\n    styleUrls: [\\\"wizard-custom.component.less\\\"],\\n    providers: [{\\n        provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false},\\n    }],\\n})\\nexport class WizardCustomExampleComponent implements OnInit, AfterViewInit {\\n    public formGroup: FormGroup;\\n    public steps: number = 1;\\n    public selectedIndex: number = 0;\\n    public progress: number;\\n\\n    @ViewChild(\\\"wizard\\\") wizard: WizardCustomComponent;\\n\\n    constructor(private formBuilder: FormBuilder) {}\\n\\n    ngOnInit() {\\n        this.formGroup = new FormGroup({\\n            \\\"personDetails\\\": this.formBuilder.group({\\n                \\\"name\\\": [\\\"\\\", [Validators.required, Validators.minLength(3)]],\\n                \\\"symptoms\\\": [undefined, Validators.required],\\n            }),\\n            \\\"diseaseDetails\\\": this.formBuilder.group({\\n                \\\"date\\\": [\\\"\\\", Validators.required],\\n            }),\\n            \\\"contactDetails\\\": this.formBuilder.group({\\n                \\\"email\\\": [\\\"\\\", [Validators.required, Validators.email]],\\n                \\\"phone\\\": [\\\"\\\"],\\n            }),\\n        });\\n    }\\n\\n    ngAfterViewInit() {\\n        const update = (selectedIndex?: number, steps?: number) => {\\n            setTimeout(() => {\\n                if (steps) {\\n                    this.steps = steps;\\n                }\\n                if (selectedIndex !== undefined && selectedIndex >= 0) {\\n                    this.selectedIndex = selectedIndex;\\n                }\\n                this.progress = 100 * (1 + this.selectedIndex) / this.steps;\\n            });\\n        };\\n\\n        this.wizard.selectionChange.pipe(\\n            tap(i => {\\n                update(i.selectedIndex);\\n            })\\n        ).subscribe();\\n\\n        this.wizard.steps.changes.pipe(\\n            tap(c => {\\n                update(undefined, c.length);\\n            })\\n        ).subscribe();\\n    }\\n\\n    validate(step: WizardStepV2Component) {\\n        // mark all fields from current step as touched\\n        // in order to display the validation messages\\n        Object.keys((step.stepControl as FormGroup)?.controls || {})\\n            .forEach(key => {\\n                const field = this.wizard.selected.stepControl.get(key);\\n                field?.markAsTouched();\\n            });\\n    }\\n}\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row custom-header\\\">\\n        <div class=\\\"col-9 p-0\\\">\\n            <div class=\\\"nui-wizard-horizontal-header-container\\\">\\n                <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n                    <wizard-step-header\\n                        class=\\\"nui-wizard-horizontal-header\\\"\\n                        (click)=\\\"step.select()\\\"\\n                        (keydown)=\\\"_onKeydown($event)\\\"\\n                        [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                        [id]=\\\"_getStepLabelId(i)\\\"\\n                        [attr.aria-posinset]=\\\"i + 1\\\"\\n                        [attr.aria-setsize]=\\\"steps.length\\\"\\n                        [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                        [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                        [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                        [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                        [index]=\\\"i\\\"\\n                        [state]=\\\"getStepState(i, step.state)\\\"\\n                        [label]=\\\"step.label || step.stepLabel\\\"\\n                        [selected]=\\\"selectedIndex === i\\\"\\n                        [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                        [optional]=\\\"step.optional\\\"\\n                        [errorMessage]=\\\"step.errorMessage\\\"\\n                        [disableRipple]=\\\"disableRipple\\\">\\n                    </wizard-step-header>\\n                    <div *ngIf=\\\"!isLast\\\" class=\\\"nui-wizard-horizontal-line\\\"></div>\\n                </ng-container>\\n            </div>\\n            <div class=\\\"nui-wizard-horizontal-content-container\\\">\\n                <h2>\\n                    <ng-container *ngIf=\\\"selected.stepLabel\\\" [ngTemplateOutlet]=\\\"selected.stepLabel.template\\\"></ng-container>\\n                    <ng-container *ngIf=\\\"!selected.stepLabel\\\">{{selected.label}}</ng-container>\\n                </h2>\\n                <div *ngFor=\\\"let step of steps; let i = index\\\"\\n                     [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n                     class=\\\"nui-wizard-horizontal-content\\\" role=\\\"tabpanel\\\"\\n                     [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n                     (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n                     [id]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n                    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-3 custom-summary\\\">\\n            <ng-content select=[summary]></ng-content>\\n            <div *ngIf=\\\"selected.stepFooter\\\" class=\\\"row nui-wizard-horizontal-footer-container\\\">\\n                <wizard-footer [footer]=\\\"selected.stepFooter\\\"></wizard-footer>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","var map = {\n\t\"./index.ts\": \"iAoM\",\n\t\"./wizard-async-validation-form/wizard-async-form-validation.example.component.html\": \"jYwr\",\n\t\"./wizard-async-validation-form/wizard-async-form-validation.example.component.ts\": \"qZWR\",\n\t\"./wizard-busy/wizard-busy.example.component.html\": \"ErOQ\",\n\t\"./wizard-busy/wizard-busy.example.component.less\": \"5iu2\",\n\t\"./wizard-busy/wizard-busy.example.component.ts\": \"rjNf\",\n\t\"./wizard-custom-footer/wizard-custom-footer-example.component.html\": \"2/6m\",\n\t\"./wizard-custom-footer/wizard-custom-footer-example.component.less\": \"LiSh\",\n\t\"./wizard-custom-footer/wizard-custom-footer-example.component.ts\": \"WLwN\",\n\t\"./wizard-custom-layout/wizard-custom-example.component.html\": \"1sWM\",\n\t\"./wizard-custom-layout/wizard-custom-example.component.ts\": \"PL0w\",\n\t\"./wizard-custom-layout/wizard-custom.component.html\": \"PipA\",\n\t\"./wizard-custom-layout/wizard-custom.component.less\": \"nrQw\",\n\t\"./wizard-dialog/wizard-dialog.example.component.html\": \"A8yM\",\n\t\"./wizard-dialog/wizard-dialog.example.component.ts\": \"mbMD\",\n\t\"./wizard-docs/wizard-docs.component.html\": \"3Uzl\",\n\t\"./wizard-docs/wizard-docs.component.ts\": \"U0rU\",\n\t\"./wizard-dynamic/wizard-dynamic.example.component.html\": \"Vkgm\",\n\t\"./wizard-dynamic/wizard-dynamic.example.component.ts\": \"6e2i\",\n\t\"./wizard-horizontal-layout/wizard-horizontal-example.component.html\": \"s3gB\",\n\t\"./wizard-horizontal-layout/wizard-horizontal-example.component.ts\": \"Dz05\",\n\t\"./wizard-remove-step/wizard-remove-step-example.component.html\": \"U9Jp\",\n\t\"./wizard-remove-step/wizard-remove-step-example.component.ts\": \"0dsp\",\n\t\"./wizard-vertical-layout/wizard-vertical-example.component.html\": \"A7H6\",\n\t\"./wizard-vertical-layout/wizard-vertical-example.component.ts\": \"Cu7f\",\n\t\"./wizard-with-custom-icons/wizard-with-custom-icons-example.component.html\": \"oZ+g\",\n\t\"./wizard-with-custom-icons/wizard-with-custom-icons-example.component.ts\": \"mO7N\",\n\t\"./wizard.module.ts\": \"TL+W\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Ptpp\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiBusyModule,\\n    NuiButtonModule,\\n    NuiCheckboxModule,\\n    NuiDatePickerModule,\\n    NuiDialogModule,\\n    NuiDocsModule,\\n    NuiFormFieldModule,\\n    NuiIconModule,\\n    NuiMessageModule,\\n    NuiProgressModule,\\n    NuiRadioModule,\\n    NuiSpinnerModule,\\n    NuiTextboxModule,\\n    NuiValidationMessageModule,\\n    NuiWizardV2Module,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    WizardBusyExampleComponent,\\n    WizardCustomComponent,\\n    WizardCustomExampleComponent,\\n    WizardCustomFooterExampleComponent,\\n    WizardDialogExampleComponent,\\n    WizardDocsComponent,\\n    WizardDynamicExampleComponent,\\n    WizardHorizontalExampleComponent,\\n    WizardRemoveStepExampleComponent,\\n    WizardVerticalExampleComponent,\\n    WizardAsyncFormValidationExampleComponent,\\n    WizardWithCustomIconsExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: WizardDocsComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.alpha,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiMessageModule,\\n        NuiDocsModule,\\n        NuiTextboxModule,\\n        NuiRadioModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiValidationMessageModule,\\n        NuiFormFieldModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        RouterModule.forChild(routes),\\n        NuiWizardV2Module,\\n        NuiSpinnerModule,\\n        NuiBusyModule,\\n        NuiProgressModule,\\n        NuiDatePickerModule,\\n        NuiIconModule,\\n    ],\\n    declarations: [\\n        WizardDocsComponent,\\n        WizardHorizontalExampleComponent,\\n        WizardVerticalExampleComponent,\\n        WizardCustomExampleComponent,\\n        WizardCustomComponent,\\n        WizardDialogExampleComponent,\\n        WizardBusyExampleComponent,\\n        WizardCustomFooterExampleComponent,\\n        WizardDynamicExampleComponent,\\n        WizardRemoveStepExampleComponent,\\n        WizardAsyncFormValidationExampleComponent,\\n        WizardWithCustomIconsExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class WizardModule {}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-v2-example\\\",\\n    templateUrl: \\\"./wizard-docs.component.html\\\",\\n})\\nexport class WizardDocsComponent {}\\n\";","export default \"<nui-wizard-horizontal #wizard>\\n    <nui-wizard-step-v2 *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\\n        <ng-container *ngTemplateOutlet=\\\"step.templateRef\\\"></ng-container>\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngIf=\\\"i !== 0\\\">\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!isLast\\\">\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                >Next</button>\\n            </ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #dynamicStep>\\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\\n    </ng-template>\\n\\n    <ng-template #normalStep>\\n        <p i18n>Hi! You can add next step dynamically</p>\\n\\n        <button nui-button type=\\\"button\\\" (click)=\\\"addStep(dynamicStep)\\\">\\n            Add dynamic step w/template\\n        </button>\\n\\n    </ng-template>\\n</nui-wizard-horizontal>\\n<div class=\\\"d-flex\\\">\\n    <div class=\\\"\\\">\\n        <span class=\\\"nui-textbox--bold\\\" [ngStyle]=\\\"{ 'font-weight': 'bold' }\\\">Step index to remove</span> <br>\\n        <nui-textbox-number [minValue]=\\\"1\\\" #number></nui-textbox-number>\\n    </div>\\n    <button class=\\\"ml-3 h-25 align-self-end\\\"\\n            displayStyle=\\\"destructive\\\"\\n            nui-button type=\\\"button\\\"\\n            [disabled]=\\\"+number.value < 1\\\"\\n            (click)=\\\"removeStep(+number.value)\\\"\\n            i18n>\\n        Remove step dynamically\\n    </button>\\n</div>\\n\";","export default \"<nui-wizard-horizontal #wizardComponent>\\n    <!--Static step-->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Normal step\\\">\\n        <p i18n>Hi! You can add next step dynamically</p>\\n\\n        <button nui-button type=\\\"button\\\" (click)=\\\"addStep(dynamicTemplate2)\\\">\\n            Add dynamic step w/template\\n        </button>\\n\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <nui-wizard-step-v2 *ngIf=\\\"enableDynamicStepWithButton\\\" i18n-label label=\\\"Added dynamically\\\">\\n        <ng-template wizardStepLabel>Dynamic w/button</ng-template>\\n        <p i18n>Hi! I'm dynamic step that can be enabled/disabled programmatically via the toggle button under the wizard !</p>\\n\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-container *ngTemplateOutlet=\\\"dynamicStepWithTemplate\\\" ngProjectAs=\\\"nui-wizard-step-v2\\\"></ng-container>\\n    <ng-template #dynamicStepWithTemplate>\\n        <nui-wizard-step-v2>\\n            <ng-template wizardStepLabel>Dynamic w/template</ng-template>\\n            <p i18n>Hi! I'm dynamic step added automatically !</p>\\n\\n            <ng-template wizardStepFooter>\\n                <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n            </ng-template>\\n        </nui-wizard-step-v2>\\n    </ng-template>\\n\\n    <nui-wizard-step-v2 *ngFor=\\\"let step of steps\\\">\\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\\n        <ng-container *ngTemplateOutlet=\\\"step.templateRef\\\"></ng-container>\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #dynamicTemplate1>\\n        <p i18n>Hi! I'm dynamic step added automatically during ngAfterViewInit of this wizard using a TemplateRef!</p>\\n    </ng-template>\\n\\n    <ng-template #dynamicTemplate2>\\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\\n    </ng-template>\\n\\n\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n<div>\\n    <button nui-button type=\\\"button\\\" (click)=\\\"toggleStep()\\\">\\n        {{!enableDynamicStepWithButton ? \\\"Enable\\\" : \\\"Disable\\\" }} dynamic step w/button\\n    </button>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-custom-footer-example\\\",\\n    templateUrl: \\\"./wizard-custom-footer-example.component.html\\\",\\n    styleUrls: [\\\"./wizard-custom-footer-example.component.less\\\"],\\n})\\nexport class WizardCustomFooterExampleComponent {}\\n\";","import {AfterViewInit, Component, TemplateRef, ViewChild} from \"@angular/core\";\n\nexport interface IWizardStepConfig {\n    title: string;\n    templateRef: TemplateRef<string>;\n}\n\n@Component({\n    selector: \"nui-wizard-dynamic-example\",\n    templateUrl: \"./wizard-dynamic.example.component.html\",\n})\nexport class WizardDynamicExampleComponent implements AfterViewInit {\n    public enableDynamicStepWithButton = false;\n    public steps: IWizardStepConfig[] = [];\n\n    @ViewChild(\"dynamicTemplate1\") dynamicTemplate1: TemplateRef<string>;\n\n    public ngAfterViewInit(): void {\n        this.addStep(this.dynamicTemplate1, $localize `My first dynamic step`);\n    }\n\n    public toggleStep() {\n        this.enableDynamicStepWithButton = !this.enableDynamicStepWithButton;\n    }\n\n    public addStep(templateRef: TemplateRef<string>, title?: string) {\n        this.steps.push({title: title ?? `Dynamic Step ${this.steps.length + 1}`, templateRef: templateRef});\n    }\n}\n","<nui-wizard-horizontal #wizardComponent>\n    <!--Static step-->\n    <nui-wizard-step-v2 i18n-label label=\"Normal step\">\n        <p i18n>Hi! You can add next step dynamically</p>\n\n        <button nui-button type=\"button\" (click)=\"addStep(dynamicTemplate2)\">\n            Add dynamic step w/template\n        </button>\n\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <nui-wizard-step-v2 *ngIf=\"enableDynamicStepWithButton\" i18n-label label=\"Added dynamically\">\n        <ng-template wizardStepLabel>Dynamic w/button</ng-template>\n        <p i18n>Hi! I'm dynamic step that can be enabled/disabled programmatically via the toggle button under the wizard !</p>\n\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-container *ngTemplateOutlet=\"dynamicStepWithTemplate\" ngProjectAs=\"nui-wizard-step-v2\"></ng-container>\n    <ng-template #dynamicStepWithTemplate>\n        <nui-wizard-step-v2>\n            <ng-template wizardStepLabel>Dynamic w/template</ng-template>\n            <p i18n>Hi! I'm dynamic step added automatically !</p>\n\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n    </ng-template>\n\n    <nui-wizard-step-v2 *ngFor=\"let step of steps\">\n        <ng-template wizardStepLabel>{{step.title}}</ng-template>\n        <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #dynamicTemplate1>\n        <p i18n>Hi! I'm dynamic step added automatically during ngAfterViewInit of this wizard using a TemplateRef!</p>\n    </ng-template>\n\n    <ng-template #dynamicTemplate2>\n        <p i18n>Hi! I'm a step added dynamically using a TemplateRef by clicking a button from the first step !</p>\n    </ng-template>\n\n\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-horizontal>\n<div>\n    <button nui-button type=\"button\" (click)=\"toggleStep()\">\n        {{!enableDynamicStepWithButton ? \"Enable\" : \"Disable\" }} dynamic step w/button\n    </button>\n</div>\n","import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from \"@angular/cdk/stepper\";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { wizardAnimations, WizardDirective, WizardStepV2Component } from \"@nova-ui/bits\";\nimport { tap } from \"rxjs/operators\";\n\n@Component({\n    selector: \"nui-wizard-custom\",\n    templateUrl: \"wizard-custom.component.html\",\n    styleUrls: [\"wizard-custom.component.less\"],\n    host: {\n        \"class\": \"nui-wizard-custom-layout\",\n        \"aria-orientation\": \"horizontal\",\n    },\n    animations: [wizardAnimations.horizontalStepTransition],\n    providers: [\n        {provide: WizardDirective, useExisting: WizardCustomComponent},\n        {provide: CdkStepper, useExisting: WizardCustomComponent},\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WizardCustomComponent extends WizardDirective {}\n\n@Component({\n    selector: \"nui-wizard-custom-example\",\n    templateUrl: \"./wizard-custom-example.component.html\",\n    styleUrls: [\"wizard-custom.component.less\"],\n    providers: [{\n        provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false},\n    }],\n})\nexport class WizardCustomExampleComponent implements OnInit, AfterViewInit {\n    public formGroup: FormGroup;\n    public steps: number = 1;\n    public selectedIndex: number = 0;\n    public progress: number;\n\n    @ViewChild(\"wizard\") wizard: WizardCustomComponent;\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            \"personDetails\": this.formBuilder.group({\n                \"name\": [\"\", [Validators.required, Validators.minLength(3)]],\n                \"symptoms\": [undefined, Validators.required],\n            }),\n            \"diseaseDetails\": this.formBuilder.group({\n                \"date\": [\"\", Validators.required],\n            }),\n            \"contactDetails\": this.formBuilder.group({\n                \"email\": [\"\", [Validators.required, Validators.email]],\n                \"phone\": [\"\"],\n            }),\n        });\n    }\n\n    ngAfterViewInit() {\n        const update = (selectedIndex?: number, steps?: number) => {\n            setTimeout(() => {\n                if (steps) {\n                    this.steps = steps;\n                }\n                if (selectedIndex !== undefined && selectedIndex >= 0) {\n                    this.selectedIndex = selectedIndex;\n                }\n                this.progress = 100 * (1 + this.selectedIndex) / this.steps;\n            });\n        };\n\n        this.wizard.selectionChange.pipe(\n            tap(i => {\n                update(i.selectedIndex);\n            })\n        ).subscribe();\n\n        this.wizard.steps.changes.pipe(\n            tap(c => {\n                update(undefined, c.length);\n            })\n        ).subscribe();\n    }\n\n    validate(step: WizardStepV2Component) {\n        // mark all fields from current step as touched\n        // in order to display the validation messages\n        Object.keys((step.stepControl as FormGroup)?.controls || {})\n            .forEach(key => {\n                const field = this.wizard.selected.stepControl.get(key);\n                field?.markAsTouched();\n            });\n    }\n}\n","<div class=\"container\">\n    <div class=\"row custom-header\">\n        <div class=\"col-9 p-0\">\n            <div class=\"nui-wizard-horizontal-header-container\">\n                <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last\">\n                    <wizard-step-header\n                        class=\"nui-wizard-horizontal-header\"\n                        (click)=\"step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\n                        [id]=\"_getStepLabelId(i)\"\n                        [attr.aria-posinset]=\"i + 1\"\n                        [attr.aria-setsize]=\"steps.length\"\n                        [attr.aria-controls]=\"_getStepContentId(i)\"\n                        [attr.aria-selected]=\"selectedIndex == i\"\n                        [attr.aria-label]=\"step.ariaLabel || null\"\n                        [attr.aria-labelledby]=\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\"\n                        [index]=\"i\"\n                        [state]=\"getStepState(i, step.state)\"\n                        [label]=\"step.label || step.stepLabel\"\n                        [selected]=\"selectedIndex === i\"\n                        [active]=\"step.completed || selectedIndex === i || !linear\"\n                        [optional]=\"step.optional\"\n                        [errorMessage]=\"step.errorMessage\"\n                        [disableRipple]=\"disableRipple\">\n                    </wizard-step-header>\n                    <div *ngIf=\"!isLast\" class=\"nui-wizard-horizontal-line\"></div>\n                </ng-container>\n            </div>\n            <div class=\"nui-wizard-horizontal-content-container\">\n                <h2>\n                    <ng-container *ngIf=\"selected.stepLabel\" [ngTemplateOutlet]=\"selected.stepLabel.template\"></ng-container>\n                    <ng-container *ngIf=\"!selected.stepLabel\">{{selected.label}}</ng-container>\n                </h2>\n                <div *ngFor=\"let step of steps; let i = index\"\n                     [attr.tabindex]=\"selectedIndex === i ? 0 : null\"\n                     class=\"nui-wizard-horizontal-content\" role=\"tabpanel\"\n                     [@stepTransition]=\"_getAnimationDirection(i)\"\n                     (@stepTransition.done)=\"_animationDone.next($event)\"\n                     [id]=\"_getStepContentId(i)\"\n                     [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n                     [attr.aria-expanded]=\"selectedIndex === i\">\n                    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3 custom-summary\">\n            <ng-content select=[summary]></ng-content>\n            <div *ngIf=\"selected.stepFooter\" class=\"row nui-wizard-horizontal-footer-container\">\n                <wizard-footer [footer]=\"selected.stepFooter\"></wizard-footer>\n            </div>\n        </div>\n    </div>\n</div>\n","<form [formGroup]=\"formGroup\">\n    <nui-wizard-custom [linear]=\"true\" #wizard>\n        <!-- Overview content-->\n        <ng-container summary>\n            <h2>Overview</h2>\n            <nui-progress [show]=\"true\"\n                          [stacked]=\"true\"\n                          [percent]=\"progress| number: '1.0-0'\"\n                          [showNumber]=\"true\">\n            </nui-progress>\n            <p>Step {{selectedIndex+1}} out of {{steps}} steps</p>\n            <p>Name: {{formGroup.get(['personDetails', 'name'])?.value || \"Not provided\"}}</p>\n            <p>Symptoms:\n                <ng-container [ngSwitch]=\"formGroup.get(['personDetails','symptoms'])?.value\">\n                    <ng-container *ngSwitchCase=\"true\">\n                        {{ formGroup.get(['diseaseDetails','date']).valid ? \"Since \" + formGroup.get(['diseaseDetails','date'])?.value.format('D MMM YYYY') : \"Yes\" }}\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"false\" i18n>No</ng-container>\n                    <ng-container *ngSwitchDefault i18n>Unknown</ng-container>\n                </ng-container>\n            </p>\n            <p>Email: {{formGroup.get(['contactDetails', 'email'])?.value || \"Not provided\"}}</p>\n        </ng-container>\n\n        <!--  content of the 1st step -->\n        <nui-wizard-step-v2 i18n-label label=\"Person Details\"\n                            formGroupName=\"personDetails\" [stepControl]=\"formGroup.get(['personDetails'])\">\n            <!-- content of the current step -->\n            <nui-form-field [control]=\"formGroup.get(['personDetails','name'])\" i18n-caption\n                            caption=\"Name\">\n                <nui-textbox formControlName=\"name\"></nui-textbox>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['personDetails','name'])?.errors?.required\"\n                                        i18n>\n                    This is required\n                </nui-validation-message>\n                <nui-validation-message for=\"minlength\"\n                                        *ngIf=\"formGroup.get(['personDetails','name'])?.errors?.minlength\"\n                                        i18n>\n                    Minimum length is 3\n                </nui-validation-message>\n            </nui-form-field>\n\n            <nui-form-field [control]=\"formGroup.get(['personDetails','symptoms'])\" i18n-caption\n                            caption=\"Do you have Covid ?\">\n                <nui-checkbox formControlName=\"symptoms\" [indeterminate]=\"formGroup.get(['personDetails','symptoms'])?.pristine\" i18n>\n                    Diseases symptoms\n                </nui-checkbox>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['personDetails','symptoms'])?.errors?.required\"\n                                        i18n>\n                    This is required\n                </nui-validation-message>\n            </nui-form-field>\n\n            <!-- content of the footer -->\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <!--  content of the optional step -->\n        <nui-wizard-step-v2 *ngIf=\"formGroup.get(['personDetails','symptoms'])?.value\"\n                            i18n-label label=\"Disease Details\"\n                            formGroupName=\"diseaseDetails\" [stepControl]=\"formGroup.get(['diseaseDetails'])\">\n            <ng-template wizardStepLabel i18n>Disease Details for your Symptoms</ng-template>\n            <nui-form-field [control]=\"formGroup.get(['diseaseDetails','date'])\" i18n-caption\n                            caption=\"When did you noticed your first symptoms ?\">\n                <nui-date-picker formControlName=\"date\" i18n></nui-date-picker>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['diseaseDetails','date'])?.errors?.required\"\n                                        i18n>\n                    Date when disease manifested is required\n                </nui-validation-message>\n            </nui-form-field>\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <!--  content of the 2nd step -->\n        <nui-wizard-step-v2 i18n-label label=\"Contact Details\"\n                            formGroupName=\"contactDetails\" [stepControl]=\"formGroup.get(['contactDetails'])\">\n            <!-- content of the current step -->\n            <nui-form-field [control]=\"formGroup.get(['contactDetails','email'])\" i18n-caption\n                            caption=\"Email\">\n                <nui-textbox type=\"email\" formControlName=\"email\"></nui-textbox>\n                <nui-validation-message for=\"required\"\n                                        *ngIf=\"formGroup.get(['contactDetails','email'])?.errors?.required\"\n                                        i18n>\n                    This is required\n                </nui-validation-message>\n\n                <nui-validation-message for=\"email\"\n                                        *ngIf=\"formGroup.get(['contactDetails','email'])?.errors?.email\"\n                                        i18n>\n                    Invalid email\n                </nui-validation-message>\n            </nui-form-field>\n            <nui-form-field [control]=\"formGroup.get(['contactDetails','phone'])\" i18n-caption\n                            caption=\"Phone\">\n                <nui-textbox type=\"email\" formControlName=\"phone\"></nui-textbox>\n            </nui-form-field>\n\n            <!-- content of the footer -->\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <!--  content of the final step -->\n        <nui-wizard-step-v2 i18n-label label=\"Final step\">\n            <span i18n>Thanks for your feedback and take care</span>!\n            <ng-template wizardStepFooter>\n                <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                <button type=\"button\" nui-button (click)=\"wizard.reset()\">Reset</button>\n            </ng-template>\n        </nui-wizard-step-v2>\n\n        <ng-template #wizardPrevious>\n            <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">Back</button>\n        </ng-template>\n\n        <ng-template #wizardNext>\n            <button nuiWizardNext\n                    type=\"button\"\n                    nui-button\n                    displayStyle=\"primary\"\n                    icon=\"caret-right\"\n                    iconRight=\"true\"\n                    (click)=\"validate(wizard.selected)\"\n            >Next\n            </button>\n        </ng-template>\n    </nui-wizard-custom>\n</form>\n","export default \"export * from \\\"./wizard-docs/wizard-docs.component\\\";\\nexport * from \\\"./wizard-horizontal-layout/wizard-horizontal-example.component\\\";\\nexport * from \\\"./wizard-vertical-layout/wizard-vertical-example.component\\\";\\nexport * from \\\"./wizard-custom-layout/wizard-custom-example.component\\\";\\nexport * from \\\"./wizard-busy/wizard-busy.example.component\\\";\\nexport * from \\\"./wizard-dialog/wizard-dialog.example.component\\\";\\nexport * from \\\"./wizard-custom-footer/wizard-custom-footer-example.component\\\";\\nexport * from \\\"./wizard-dynamic/wizard-dynamic.example.component\\\";\\nexport * from \\\"./wizard-remove-step/wizard-remove-step-example.component\\\";\\nexport * from \\\"./wizard-async-validation-form/wizard-async-form-validation.example.component\\\";\\nexport * from \\\"./wizard-with-custom-icons/wizard-with-custom-icons-example.component\\\";\\n\";","export default \"<div nui-busy [busy]=\\\"busy\\\">\\n    <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\n        <nui-wizard-horizontal linear #wizard>\\n            <nui-wizard-step-v2 label=\\\"Person Details\\\"\\n                                formGroupName=\\\"personDetails\\\"\\n                                [stepControl]=\\\"form.get(['personDetails'])\\\">\\n                <nui-form-field [control]=\\\"form.get(['personDetails','name'])\\\"\\n                                i18n-caption\\n                                caption=\\\"Name\\\">\\n                    <nui-textbox formControlName=\\\"name\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['user','name'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n\\n                    <ng-template wizardStepFooter>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n                    </ng-template>\\n                </nui-form-field>\\n\\n            </nui-wizard-step-v2>\\n\\n            <nui-wizard-step-v2 formGroupName=\\\"contactDetails\\\"\\n                                [stepControl]=\\\"form.get(['contactDetails'])\\\">\\n\\n                <ng-template wizardStepLabel>\\n                    <span (click)=\\\"onNextClick(wizard.selected)\\\">Contact Details</span>\\n                </ng-template>\\n\\n                <nui-form-field [control]=\\\"form.get(['contactDetails','email'])\\\"\\n                                i18n-caption\\n                                caption=\\\"Email\\\">\\n                    <nui-textbox type=\\\"email\\\" formControlName=\\\"email\\\"></nui-textbox>\\n                    <nui-validation-message for=\\\"required\\\"\\n                                            *ngIf=\\\"form.get(['contactDetails','email'])?.errors?.required\\\"\\n                                            i18n>\\n                        This is required\\n                    </nui-validation-message>\\n\\n                    <nui-validation-message for=\\\"email\\\"\\n                                            *ngIf=\\\"form.get(['contactDetails','email'])?.errors?.email\\\"\\n                                            i18n>\\n                        Invalid email\\n                    </nui-validation-message>\\n\\n                    <ng-template wizardStepFooter>\\n                        <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n                    </ng-template>\\n                </nui-form-field>\\n            </nui-wizard-step-v2>\\n\\n            <ng-template #wizardPrevious>\\n                <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n                    Previous\\n                </button>\\n            </ng-template>\\n\\n            <ng-template #wizardNext>\\n                <button nuiWizardNext\\n                        type=\\\"button\\\"\\n                        nui-button\\n                        displayStyle=\\\"primary\\\"\\n                        icon=\\\"caret-right\\\"\\n                        iconRight=\\\"true\\\"\\n                        (click)=\\\"onNextClick(wizard.selected)\\\"\\n                >Next</button>\\n            </ng-template>\\n        </nui-wizard-horizontal>\\n    </form>\\n\\n    <nui-spinner size=\\\"large\\\"\\n                 i18n-message\\n                 message=\\\"Async Validation is firing...\\\">\\n    </nui-spinner>\\n</div>\\n\";","import { Component, Inject, TemplateRef, ViewChild } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService, WizardComponent } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-wizard-v2-dialog-example\",\n    templateUrl: \"./wizard-dialog.example.component.html\",\n})\nexport class WizardDialogExampleComponent {\n    @ViewChild(\"wizardComponent\") wizardComponent: WizardComponent;\n\n    public busy: boolean = false;\n    public activeDialog: NuiDialogRef;\n\n    constructor(\n        @Inject(DialogService) private dialogService: DialogService,\n        @Inject(ToastService) private toastService: ToastService\n    ) {}\n\n    public vegetables = [$localize `Cabbage`, $localize `Potato`, $localize `Tomato`, $localize `Carrot`];\n    public selectedVegetables = [$localize `Potato`, $localize `Tomato`];\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public valuesChanged(values: any[]) {\n        this.selectedVegetables = [...values];\n    }\n\n    public openDialog(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {\n            size: \"lg\",\n            windowClass: \"active-dialog\",\n        });\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public toggleBusy() {\n        this.busy = !this.busy;\n        setTimeout(() => {\n            this.busy = false;\n        }, 3000);\n    }\n}\n","<ng-template #dialogWizard>\n    <div nui-busy [busy]=\"busy\">\n        <div class=\"busy-content\">\n            <nui-dialog-header i18n-title title=\"Wizard dialog\" (closed)=\"closeDialog()\"></nui-dialog-header>\n            <div class=\"dialog-body compact-mode\">\n                <nui-wizard-horizontal>\n\n                    <!--  content of the 1st step -->\n                    <nui-wizard-step-v2>\n                        <!-- define the label which is displayed on the header stepper -->\n                        <ng-template wizardStepLabel>Completed</ng-template>\n\n                        <!-- content of the current step -->\n                        <span i18n>This is the first step of our horizontal wizard</span>.\n\n                        <!-- content of the footer -->\n                        <ng-template wizardStepFooter>\n                            <button type=\"button\" nui-button (click)=\"toggleBusy()\">\n                                Toggle busy\n                            </button>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <!--  content of the 2nd step -->\n                    <nui-wizard-step-v2>\n                        <!-- define the label which is displayed on the header stepper -->\n                        <ng-template wizardStepLabel>Active</ng-template>\n\n                        <!-- content of the current step -->\n                        <span i18n>This is the second step of our horizontal wizard</span>.\n\n                        <!-- content of the footer -->\n                        <ng-template wizardStepFooter>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <!--  content of the 3rd step -->\n                    <nui-wizard-step-v2>\n                        <!-- define the label which is displayed on the header stepper -->\n                        <ng-template wizardStepLabel>Not visited</ng-template>\n\n                        <!-- content of the current step -->\n                        <span i18n>This is the third step of our horizontal wizard</span>.\n\n                        <!-- content of the footer -->\n                        <ng-template wizardStepFooter>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <!--  content of the final step -->\n                    <nui-wizard-step-v2>\n                        <ng-template wizardStepLabel>Summary</ng-template>\n                        <span i18n>We finally reached our last step</span>!\n                        <ng-template wizardStepFooter>\n                            <ng-container *ngTemplateOutlet=\"wizardCancel\"></ng-container>\n                            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                        </ng-template>\n                    </nui-wizard-step-v2>\n\n                    <ng-template #wizardCancel>\n                        <button type=\"button\" nui-button (click)=\"closeDialog()\">\n                            Cancel\n                        </button>\n                    </ng-template>\n\n                    <ng-template #wizardPrevious>\n                        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                            Previous\n                        </button>\n                    </ng-template>\n\n                    <ng-template #wizardNext>\n                        <button nuiWizardNext\n                                type=\"button\"\n                                nui-button\n                                displayStyle=\"primary\"\n                                icon=\"caret-right\"\n                                iconRight=\"true\"\n                        >Next</button>\n                    </ng-template>\n                </nui-wizard-horizontal>\n            </div>\n        </div>\n        <nui-spinner size=\"large\" i18n-message message=\"Data is loading from remote server...\"></nui-spinner>\n    </div>\n</ng-template>\n\n<button nui-button type=\"button\"\n        (click)=\"openDialog(dialogWizard)\"\n        i18n>\n    Open dialog wizard\n</button>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n@Component({\\n    selector: \\\"nui-wizard-with-custom-icons-example\\\",\\n    templateUrl: \\\"./wizard-with-custom-icons-example.component.html\\\",\\n})\\nexport class WizardWithCustomIconsExampleComponent {}\\n\";","export default \"import { Component, Inject, TemplateRef, ViewChild } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService, WizardComponent } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-v2-dialog-example\\\",\\n    templateUrl: \\\"./wizard-dialog.example.component.html\\\",\\n})\\nexport class WizardDialogExampleComponent {\\n    @ViewChild(\\\"wizardComponent\\\") wizardComponent: WizardComponent;\\n\\n    public busy: boolean = false;\\n    public activeDialog: NuiDialogRef;\\n\\n    constructor(\\n        @Inject(DialogService) private dialogService: DialogService,\\n        @Inject(ToastService) private toastService: ToastService\\n    ) {}\\n\\n    public vegetables = [$localize `Cabbage`, $localize `Potato`, $localize `Tomato`, $localize `Carrot`];\\n    public selectedVegetables = [$localize `Potato`, $localize `Tomato`];\\n\\n    public isChecked(vegetable: string): boolean {\\n        return this.selectedVegetables.indexOf(vegetable) > -1;\\n    }\\n\\n    public valuesChanged(values: any[]) {\\n        this.selectedVegetables = [...values];\\n    }\\n\\n    public openDialog(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {\\n            size: \\\"lg\\\",\\n            windowClass: \\\"active-dialog\\\",\\n        });\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public toggleBusy() {\\n        this.busy = !this.busy;\\n        setTimeout(() => {\\n            this.busy = false;\\n        }, 3000);\\n    }\\n}\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { of } from \"rxjs\";\nimport { delay, take } from \"rxjs/operators\";\nimport { WizardHorizontalComponent, WizardStepV2Component } from \"@nova-ui/bits\";\n\nconst fakeAsyncValidator = (c: FormControl) => of(null).pipe(delay(4000));\n\n@Component({\n    selector: \"nui-wizard-async-form-validation-example\",\n    templateUrl: \"./wizard-async-form-validation.example.component.html\",\n})\nexport class WizardAsyncFormValidationExampleComponent implements OnInit {\n    public busy: boolean;\n\n    public form: FormGroup;\n\n    @ViewChild(\"wizard\") wizard: WizardHorizontalComponent;\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit(): void {\n        this.form = new FormGroup({\n            \"personDetails\": this.formBuilder.group({\n                \"name\": [\n                    \"\",\n                    [Validators.required, Validators.minLength(3)],\n                    [fakeAsyncValidator],\n                ],\n            }),\n            \"contactDetails\": this.formBuilder.group({\n                \"email\": [\"\", [Validators.required, Validators.email]],\n                \"phone\": [\"\"],\n            }),\n        });\n    }\n\n    public onNextClick(selected: WizardStepV2Component): void {\n        const { stepControl } = selected;\n\n        if (stepControl.status !== \"PENDING\") {\n            stepControl.markAllAsTouched();\n\n            return;\n        }\n\n        this.busy = true;\n        stepControl.statusChanges\n            .pipe(take(1))\n            .subscribe((status) => {\n                if (status === \"VALID\") {\n                    this.wizard.next();\n                    this.busy = false;\n                }\n            });\n    }\n}\n","<div nui-busy [busy]=\"busy\">\n    <form [formGroup]=\"form\" *ngIf=\"form\">\n        <nui-wizard-horizontal linear #wizard>\n            <nui-wizard-step-v2 label=\"Person Details\"\n                                formGroupName=\"personDetails\"\n                                [stepControl]=\"form.get(['personDetails'])\">\n                <nui-form-field [control]=\"form.get(['personDetails','name'])\"\n                                i18n-caption\n                                caption=\"Name\">\n                    <nui-textbox formControlName=\"name\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['user','name'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n\n                    <ng-template wizardStepFooter>\n                        <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n                    </ng-template>\n                </nui-form-field>\n\n            </nui-wizard-step-v2>\n\n            <nui-wizard-step-v2 formGroupName=\"contactDetails\"\n                                [stepControl]=\"form.get(['contactDetails'])\">\n\n                <ng-template wizardStepLabel>\n                    <span (click)=\"onNextClick(wizard.selected)\">Contact Details</span>\n                </ng-template>\n\n                <nui-form-field [control]=\"form.get(['contactDetails','email'])\"\n                                i18n-caption\n                                caption=\"Email\">\n                    <nui-textbox type=\"email\" formControlName=\"email\"></nui-textbox>\n                    <nui-validation-message for=\"required\"\n                                            *ngIf=\"form.get(['contactDetails','email'])?.errors?.required\"\n                                            i18n>\n                        This is required\n                    </nui-validation-message>\n\n                    <nui-validation-message for=\"email\"\n                                            *ngIf=\"form.get(['contactDetails','email'])?.errors?.email\"\n                                            i18n>\n                        Invalid email\n                    </nui-validation-message>\n\n                    <ng-template wizardStepFooter>\n                        <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n                    </ng-template>\n                </nui-form-field>\n            </nui-wizard-step-v2>\n\n            <ng-template #wizardPrevious>\n                <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n                    Previous\n                </button>\n            </ng-template>\n\n            <ng-template #wizardNext>\n                <button nuiWizardNext\n                        type=\"button\"\n                        nui-button\n                        displayStyle=\"primary\"\n                        icon=\"caret-right\"\n                        iconRight=\"true\"\n                        (click)=\"onNextClick(wizard.selected)\"\n                >Next</button>\n            </ng-template>\n        </nui-wizard-horizontal>\n    </form>\n\n    <nui-spinner size=\"large\"\n                 i18n-message\n                 message=\"Async Validation is firing...\">\n    </nui-spinner>\n</div>\n","export default \"@import (reference) \\\"../../../../../../src/styles/nui-framework-variables\\\";\\n@import (reference) \\\"../../../../../../src/styles/mixins.less\\\";\\n\\n.nui-wizard-custom-layout{\\n    .container {\\n        border: @nui-line-default solid;\\n        .setCssVariable(border-color, nui-color-line-default);\\n    }\\n\\n    .nui-wizard-step-header {\\n        border: @nui-line-default solid;\\n        border-radius: 5px;\\n        .setCssVariable(border-color, nui-color-line-default);\\n        .setCssVariable(background, nui-color-bg-content);\\n        flex-direction: row-reverse;\\n        justify-content: flex-end;\\n        padding: 0 8px;\\n    }\\n\\n    .nui-wizard-step-header--selected {\\n        .setCssVariable(background-color, nui-color-active);\\n\\n        color: @nui-color-text-light;\\n        border-color: transparent;\\n\\n        .nui-wizard-step-label{\\n            .setCssVariable(color, nui-color-text-inverse)\\n        }\\n\\n        .nui-wizard-step-header__icon--selected svg circle, .nui-wizard-step-header__icon--selected svg path {\\n            .setCssVariable(fill, nui-color-text-inverse)\\n        }\\n    }\\n\\n    .nui-wizard-step-icon{\\n        height: auto;\\n    }\\n\\n    .custom-header {\\n        .nui-wizard-horizontal-header-container {\\n            border-top: none;\\n\\n            .nui-wizard-horizontal-line {\\n                margin: 0;\\n            }\\n        }\\n\\n        //.nui-wizard-horizontal-content-container {\\n        //    padding: 0;\\n        //}\\n\\n        .custom-summary {\\n            border-left: @nui-line-default @nui-color-line-default solid;\\n        }\\n    }\\n\\n    .nui-wizard-footer {\\n        border: none;\\n        justify-content: space-between;\\n\\n        button {\\n            min-width: 0;\\n            margin: 0;\\n        }\\n    }\\n}\\n\";","export default \"<nui-wizard-horizontal>\\n\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <span i18n>This is the first step of our wizard</span>.\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <nui-wizard-step-v2 i18n-label label=\\\"Second step\\\">\\n        <span i18n>This is the second step of our wizard</span>.\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n\";","export default \"import { Component, OnInit, ViewChild } from \\\"@angular/core\\\";\\nimport { FormBuilder, FormControl, FormGroup, Validators } from \\\"@angular/forms\\\";\\nimport { of } from \\\"rxjs\\\";\\nimport { delay, take } from \\\"rxjs/operators\\\";\\nimport { WizardHorizontalComponent, WizardStepV2Component } from \\\"@nova-ui/bits\\\";\\n\\nconst fakeAsyncValidator = (c: FormControl) => of(null).pipe(delay(4000));\\n\\n@Component({\\n    selector: \\\"nui-wizard-async-form-validation-example\\\",\\n    templateUrl: \\\"./wizard-async-form-validation.example.component.html\\\",\\n})\\nexport class WizardAsyncFormValidationExampleComponent implements OnInit {\\n    public busy: boolean;\\n\\n    public form: FormGroup;\\n\\n    @ViewChild(\\\"wizard\\\") wizard: WizardHorizontalComponent;\\n\\n    constructor(private formBuilder: FormBuilder) {}\\n\\n    ngOnInit(): void {\\n        this.form = new FormGroup({\\n            \\\"personDetails\\\": this.formBuilder.group({\\n                \\\"name\\\": [\\n                    \\\"\\\",\\n                    [Validators.required, Validators.minLength(3)],\\n                    [fakeAsyncValidator],\\n                ],\\n            }),\\n            \\\"contactDetails\\\": this.formBuilder.group({\\n                \\\"email\\\": [\\\"\\\", [Validators.required, Validators.email]],\\n                \\\"phone\\\": [\\\"\\\"],\\n            }),\\n        });\\n    }\\n\\n    public onNextClick(selected: WizardStepV2Component): void {\\n        const { stepControl } = selected;\\n\\n        if (stepControl.status !== \\\"PENDING\\\") {\\n            stepControl.markAllAsTouched();\\n\\n            return;\\n        }\\n\\n        this.busy = true;\\n        stepControl.statusChanges\\n            .pipe(take(1))\\n            .subscribe((status) => {\\n                if (status === \\\"VALID\\\") {\\n                    this.wizard.next();\\n                    this.busy = false;\\n                }\\n            });\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-wizard-v2-busy-example\\\",\\n    templateUrl: \\\"./wizard-busy.example.component.html\\\",\\n    styleUrls: [\\\"./wizard-busy.example.component.less\\\"],\\n})\\nexport class WizardBusyExampleComponent  {\\n    public busy: boolean;\\n\\n    public toggleStepBusy() {\\n        this.busy = !this.busy;\\n        setTimeout(() => {\\n            this.busy = false;\\n        }, 3000);\\n    }\\n}\\n\";","export default \"<nui-wizard-horizontal>\\n\\n    <!--  content of the 1st step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"First step\\\">\\n        <!-- content of the current step -->\\n        <span i18n>This is the first step of our horizontal wizard</span>.\\n\\n        <!-- content of the footer -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardNext\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <!--  content of the final step -->\\n    <nui-wizard-step-v2 i18n-label label=\\\"Final step\\\">\\n        <span i18n>We finally reached our last step</span>!\\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\\n        <ng-template wizardStepFooter>\\n            <ng-container *ngTemplateOutlet=\\\"wizardPrevious\\\"></ng-container>\\n        </ng-template>\\n    </nui-wizard-step-v2>\\n\\n    <ng-template #wizardPrevious>\\n        <button type=\\\"button\\\" nuiWizardPrevious nui-button icon=\\\"caret-left\\\">\\n            Previous\\n        </button>\\n    </ng-template>\\n\\n    <ng-template #wizardNext>\\n        <button nuiWizardNext\\n                type=\\\"button\\\"\\n                nui-button\\n                displayStyle=\\\"primary\\\"\\n                icon=\\\"caret-right\\\"\\n                iconRight=\\\"true\\\"\\n        >Next</button>\\n    </ng-template>\\n</nui-wizard-horizontal>\\n\";","export * from \"./wizard-docs/wizard-docs.component\";\nexport * from \"./wizard-horizontal-layout/wizard-horizontal-example.component\";\nexport * from \"./wizard-vertical-layout/wizard-vertical-example.component\";\nexport * from \"./wizard-custom-layout/wizard-custom-example.component\";\nexport * from \"./wizard-busy/wizard-busy.example.component\";\nexport * from \"./wizard-dialog/wizard-dialog.example.component\";\nexport * from \"./wizard-custom-footer/wizard-custom-footer-example.component\";\nexport * from \"./wizard-dynamic/wizard-dynamic.example.component\";\nexport * from \"./wizard-remove-step/wizard-remove-step-example.component\";\nexport * from \"./wizard-async-validation-form/wizard-async-form-validation.example.component\";\nexport * from \"./wizard-with-custom-icons/wizard-with-custom-icons-example.component\";\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-wizard-v2-example\",\n    templateUrl: \"./wizard-docs.component.html\",\n})\nexport class WizardDocsComponent {}\n","<h2>Layout</h2>\n<h3>Horizontal Layout Wizard</h3>\n<p>\n    To use the horizontal wizard component, place a <code>nui-wizard-horizontal</code> element in your template and include one or more\n    <code><a href=\"../components/WizardStepComponent.html\" target=\"_blank\">nui-wizard-step-v2</a></code> elements as children of the\n    <code>nui-wizard-horizontal</code> element.\n</p>\n<nui-example-wrapper filenamePrefix=\"wizard-horizontal-layout\" exampleTitle=\"Horizontal Layout Wizard\">\n    <nui-wizard-horizontal-example></nui-wizard-horizontal-example>\n</nui-example-wrapper>\n\n<!--Will be updated in scope of the NUI-6099-->\n\n<!--<h3>Vertical Layout Wizard</h3>-->\n<!--<nui-example-wrapper filenamePrefix=\"wizard-vertical-layout\" exampleTitle=\"Vertical Layout Wizard\">-->\n<!--    <nui-wizard-vertical-example></nui-wizard-vertical-example>-->\n<!--</nui-example-wrapper>-->\n\n<h3>Usage with a dialog</h3>\n<p>You can pass an existing wizard component as content of the dialog window. </p>\n<p>You should insert wizard component in dialog body. </p>\n<nui-example-wrapper filenamePrefix=\"wizard-dialog\" exampleTitle=\"wizard in dialog\">\n    <nui-wizard-v2-dialog-example></nui-wizard-v2-dialog-example>\n</nui-example-wrapper>\n\n<h3>Busy step</h3>\n<p>You can make your step busy to forbid actions.</p>\n<nui-example-wrapper filenamePrefix=\"wizard-busy\" exampleTitle=\"wizard step busy\">\n    <nui-wizard-v2-busy-example></nui-wizard-v2-busy-example>\n</nui-example-wrapper>\n\n<h3>Custom footer</h3>\n<p>Customizing the footer layout content and style for each step is quite easy, as you can see in the example below:</p>\n<nui-example-wrapper filenamePrefix=\"wizard-custom-footer\" exampleTitle=\"Wizard with Custom Footer\">\n    <nui-wizard-custom-footer-example></nui-wizard-custom-footer-example>\n</nui-example-wrapper>\n\n<h3>Adding step dynamically</h3>\n<p>You are able to add wizard steps dynamically.</p>\n<nui-example-wrapper filenamePrefix=\"wizard-dynamic\" exampleTitle=\"wizard add dynamic step\">\n    <nui-wizard-dynamic-example></nui-wizard-dynamic-example>\n</nui-example-wrapper>\n\n<h3>Removing step</h3>\n<p>You are able to remove steps by index.</p>\n<nui-example-wrapper filenamePrefix=\"wizard-remove-step\" exampleTitle=\"wizard remove step\">\n    <nui-wizard-remove-step-example></nui-wizard-remove-step-example>\n</nui-example-wrapper>\n\n<h3>Custom Layout Wizard</h3>\n<nui-example-wrapper filenamePrefix=\"wizard-custom-layout\" exampleTitle=\"Custom Layout Wizard\">\n    <nui-wizard-custom-example></nui-wizard-custom-example>\n</nui-example-wrapper>\n\n<h3>Async Form Validation</h3>\n<p>\n    To handle async validation check 'PENDING' status of WizardV2Step stepControl\n</p>\n<nui-example-wrapper filenamePrefix=\"wizard-async-form-validation\" exampleTitle=\"Async Form Validation\">\n    <nui-wizard-async-form-validation-example></nui-wizard-async-form-validation-example>\n</nui-example-wrapper>\n\n<h2>Wizard with custom icons</h2>\n<p>\n    You are able to add custom icons to wizard.\n</p>\n<h3>Wizard with custom icons</h3>\n<nui-example-wrapper filenamePrefix=\"wizard-horizontal-layout\" exampleTitle=\"Horizontal Layout Wizard\">\n    <nui-wizard-with-custom-icons-example></nui-wizard-with-custom-icons-example>\n</nui-example-wrapper>\n","<nui-wizard-vertical>\n\n    <!--  content of the 1st step -->\n    <nui-wizard-step-v2 i18n-label label=\"First step\">\n        <!-- content of the current step -->\n        <span i18n>This is the first step of our vertical wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the 2nd step -->\n    <nui-wizard-step-v2 i18n-label label=\"Second step\">\n        <!-- content of the current step -->\n        <span i18n>This is the second step of our vertical wizard</span>.\n\n        <!-- content of the footer -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"wizardNext\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <!--  content of the final step -->\n    <nui-wizard-step-v2 i18n-label label=\"Final step\">\n        <span i18n>We finally reached our last step</span>!\n        <!-- Notice how both label and footer can be placed anywhere in the content of wizard step -->\n        <ng-template wizardStepFooter>\n            <ng-container *ngTemplateOutlet=\"wizardPrevious\"></ng-container>\n        </ng-template>\n    </nui-wizard-step-v2>\n\n    <ng-template #wizardPrevious>\n        <button type=\"button\" nuiWizardPrevious nui-button icon=\"caret-left\">\n            Previous\n        </button>\n    </ng-template>\n\n    <ng-template #wizardNext>\n        <button nuiWizardNext\n                type=\"button\"\n                nui-button\n                displayStyle=\"primary\"\n                icon=\"caret-right\"\n                iconRight=\"true\"\n        >Next</button>\n    </ng-template>\n</nui-wizard-vertical>\n","import { Component } from \"@angular/core\";\n@Component({\n    selector: \"nui-wizard-vertical-example\",\n    templateUrl: \"./wizard-vertical-example.component.html\",\n})\nexport class WizardVerticalExampleComponent {}\n"]}