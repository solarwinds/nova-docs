{"version":3,"sources":["./demo/src/components/demo/dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.ts","./demo/src/components/demo/dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.html","./demo/src/components/demo/dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.ts","./demo/src/components/demo/dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.html","./demo/src/components/demo/dialog/dialog-custom-class/dialog-custom-class.example.component.ts","./demo/src/components/demo/dialog/dialog-custom-class/dialog-custom-class.example.component.html","webpack:///./demo/src/components/demo/dialog/component-as-content/dialog-content.example.component.html?dbc7","./demo/src/components/demo/dialog/dialog-docs/dialog-docs.example.component.ts","./demo/src/components/demo/dialog/dialog-docs/dialog-docs.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-sizes/dialog-sizes.example.component.ts?da59","webpack:///./demo/src/components/demo/dialog/dialog-custom-class/dialog-custom-class.example.component.ts?e53b","webpack:///./demo/src/components/demo/dialog/dialog-docs/dialog-docs.example.component.ts?e818","webpack:///./demo/src/components/demo/dialog/dialog-after-opened/dialog-after-opened.example.component.ts?eceb","webpack:///./demo/src/components/demo/dialog/dialog-severity/dialog-severity.example.component.html?f41c","webpack:///./demo/src/components/demo/dialog/component-as-content/component-as-content.example.component.ts?02eb","webpack:///./demo/src/components/demo/dialog/dialog-test/dialog-zindex-test.component.html?078d","webpack:///./demo/src/components/demo/dialog/index.ts?0c7c","./demo/src/components/demo/dialog/component-as-content/dialog-content.example.component.ts","./demo/src/components/demo/dialog/component-as-content/dialog-content.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-severity/dialog-severity.example.component.ts?1066","./demo/src/components/demo/dialog/index.ts","webpack:///./demo/src/components/demo/dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.html?1441","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?6155","./demo/src/components/demo/dialog/header-buttons/header-buttons.example.component.ts","./demo/src/components/demo/dialog/header-buttons/header-buttons.example.component.html","./demo/src/components/demo/dialog/dialog-keyboard/dialog-with-keyboard.example.component.ts","./demo/src/components/demo/dialog/dialog-keyboard/dialog-with-keyboard.example.component.html","./demo/src/components/demo/dialog/dialog-severity/dialog-severity.example.component.ts","./demo/src/components/demo/dialog/dialog-severity/dialog-severity.example.component.html","webpack:///./demo/src/components/demo/dialog/confirmation-dialog/confirmation-dialog.example.component.html?2f95","webpack:///./demo/src/components/demo/dialog/dialog-visual-test/dialog-visual-test.component.html?2df4","webpack:///./demo/src/components/demo/dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.html?2ecb","webpack:///./demo/src/components/demo/dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.ts?3746","./demo/src/components/demo/dialog/dialog-position/dialog-position.example.component.ts","./demo/src/components/demo/dialog/dialog-position/dialog-position.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-test/dialog-zindex-test.component.ts?3cb8","webpack:///./demo/src/components/demo/dialog/simple-dialog/simple-dialog.example.component.html?3cd4","webpack:///./demo/src/components/demo/dialog/header-buttons/header-buttons.example.component.html?3e3e","webpack:///./demo/src/components/demo/dialog/dialog-custom-class/dialog-custom-class.example.component.html?4085","./demo/src/components/demo/dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.ts","./demo/src/components/demo/dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.html","./demo/src/components/demo/dialog/dialog-test/dialog-zindex-test.component.less","webpack:///./demo/src/components/demo/dialog/dialog-position/dialog-position.example.component.ts?4ed7","./demo/src/components/demo/dialog/component-as-content/component-as-content.example.component.ts","./demo/src/components/demo/dialog/component-as-content/component-as-content.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-visual-test/dialog-visual-test.component.ts?5bfb","./demo/src/components/demo/dialog/dialog-sizes/dialog-sizes.example.component.ts","./demo/src/components/demo/dialog/dialog-sizes/dialog-sizes.example.component.html","webpack:///./demo/src/components/demo/dialog/simple-dialog/simple-dialog.example.component.ts?5919","webpack:///./demo/src/components/demo/dialog/dialog-actions-before-closure/dialog-actions-before-closure.example.component.ts?5ded","./demo/src/components/demo/dialog/dialog-visual-test/dialog-visual-test.component.ts","./demo/src/components/demo/dialog/dialog-visual-test/dialog-visual-test.component.html","webpack:///./demo/src/components/demo/dialog/confirmation-dialog/confirmation-dialog.example.component.ts?65ea","webpack:///./demo/src/components/demo/dialog/dialog-keyboard/dialog-with-keyboard.example.component.ts?6ad6","./demo/src/components/demo/dialog/simple-dialog/simple-dialog.example.component.ts","./demo/src/components/demo/dialog/simple-dialog/simple-dialog.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-position/dialog-position.example.component.html?6df9","./demo/src/components/demo/dialog/dialog-after-opened/dialog-after-opened.example.component.ts","./demo/src/components/demo/dialog/dialog-after-opened/dialog-after-opened.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-docs/dialog-docs.example.component.html?7b49","./demo/src/components/demo/dialog/dialog-test/dialog-zindex-test.component.ts","./demo/src/components/demo/dialog/dialog-test/dialog-zindex-test.component.html","./demo/src/components/demo/dialog/confirmation-dialog/confirmation-dialog.example.component.ts","./demo/src/components/demo/dialog/confirmation-dialog/confirmation-dialog.example.component.html","webpack:///./demo/src/components/demo/dialog/dialog-inside-overlay/dialog-inside-overlay.example.component.html?8207","webpack:///./demo/src/components/demo/dialog/dialog-after-opened/dialog-after-opened.example.component.html?87dc","webpack:///./demo/src/components/demo/dialog/component-as-content/dialog-content.example.component.ts?8e3e","webpack:///./demo/src/components/demo/dialog/component-as-content/component-as-content.example.component.html?9750","webpack:///./demo/src/components/demo/dialog/dialog-static-backdrop/dialog-with-static-backdrop.example.component.ts?95b6","webpack:///./demo/src/components/demo/dialog/dialog.module.ts?997d","./demo/src/components/demo/dialog/dialog.module.ts","webpack:///./demo/src/components/demo/dialog/dialog-sizes/dialog-sizes.example.component.html?abcf","webpack:///./demo/src/components/demo/dialog/dialog-keyboard/dialog-with-keyboard.example.component.html?c9a8","webpack:///./demo/src/components/demo/dialog/header-buttons/header-buttons.example.component.ts?ce18"],"names":[],"mappings":"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","file":"demo-dialog-dialog-module-es2015.js","sourcesContent":["import { Component, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef } from \"@nova-ui/bits\";\nimport moment, { Moment } from \"moment/moment\";\n\n@Component({\n    selector: \"nui-dialog-inside-overlay-example\",\n    templateUrl: \"./dialog-inside-overlay.example.component.html\",\n})\nexport class DialogInsideOverlayExampleComponent {\n    public options1 = Array.from({ length: 25 }).map((_, i) => $localize `Item ${i}`);\n    public options2 = Array.from({ length: 25 }).map((_, i) => $localize `Item ${i}`);\n\n    public dt: Moment;\n    public selectedDate: Date;\n\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) {\n        this.dt = moment();\n        this.selectedDate = new Date(this.dt.valueOf());\n    }\n\n    /**\n     * Notice that the 'useOverlay' option is being passed in here\n     */\n    public openInOverlay(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\", useOverlay: true});\n    }\n\n    public onDone(): void {\n        this.activeDialog.close();\n    }\n\n    public onCancel(): void {\n        this.activeDialog.close();\n    }\n\n    public onModelChanged(event: any) {\n        this.selectedDate = new Date(event.valueOf());\n    }\n}\n","<nui-select-v2 id=\"select-to-open-dialog\" placeholder=\"Select an item\"\n               i18n-placeholder\n               [popupViewportMargin]=\"100\">\n    <nui-select-v2-option *ngFor=\"let option of options1\"\n                          [value]=\"option\"\n                          (click)=\"openInOverlay(headerButtonsContent)\">\n        {{ option }}\n    </nui-select-v2-option>\n</nui-select-v2>\n\n<ng-template  #headerButtonsContent let-close=\"close\">\n    <nui-dialog-header title=\"Dialog Title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p>\n            <nui-select-v2 class=\"mb-5\" placeholder=\"Select an item\" i18n-placeholder>\n                <nui-select-v2-option *ngFor=\"let option of options2\" [value]=\"option\">\n                    {{ option }}\n                </nui-select-v2-option>\n            </nui-select-v2>\n            <nui-date-time-picker class=\"date-time-picker\" (modelChanged)=\"onModelChanged($event)\" displayMode=\"inline\" [model]=\"dt\" [appendToBody]=\"true\"></nui-date-time-picker>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\" (click)=\"onCancel()\" i18n>Cancel</button>\n        <button nui-button type=\"button\" displayStyle=\"primary\" (click)=\"onDone()\" i18n>Action</button>\n    </nui-dialog-footer>\n</ng-template>\n","import { Component, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogEvent, NuiDialogRef } from \"@nova-ui/bits\";\nimport { take, takeUntil } from \"rxjs/operators\";\n\n@Component({\n    selector: \"nui-dialog-actions-before-closure-example\",\n    templateUrl: \"./dialog-actions-before-closure.example.component.html\",\n})\nexport class DialogActionBeforeClosureExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService) {}\n\n    public open(content: TemplateRef<string>) {\n        // You can return 'false' from the optional beforeDismiss function anytime you want to prevent the dialog from closing.\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\", beforeDismiss: this.beforeDismiss});\n\n        // You can use the beforeDismissed$ event to execute actions right before the dialog gets closed\n        this.activeDialog\n                .beforeDismissed$\n                    .pipe(\n                        // Be sure to unsubscribe on dialog closure\n                        takeUntil(this.activeDialog.closed$)\n                    )\n                    .subscribe(event => {\n                        // A dialog will typically close in response to the escape key\n                        if (event === NuiDialogEvent.EscapeKey) {\n                            console.log($localize`ESC CLOSED`);\n                        }\n                        // Covering the 'BACKDROP_CLICK' event in case of clearing the dialog by clicking the backdrop\n                        if (event === NuiDialogEvent.BackdropClick) {\n                            console.log($localize`BACKDROP CLICK CLOSED`);\n                            return;\n                        }\n                        // Here we cover the custom 'DONE' event which you can create and then capture within the 'beforeDismissed$' subscription\n                        // to run your custom logic in response to that event right before the dialog closure.  See 'actionDone' implementation below.\n                        if (event === \"DONE\") {\n                            console.log($localize`DONE`);\n                            return;\n                        }\n                        // Set of actions for all event origins before the dialog closes\n                        console.log($localize`BEFORE CLOSED`);\n                        // Manually close the dialog since the `beforeDismiss` implementation below short-circuits dismissal with its 'false' return value\n                        this.activeDialog.close();\n        });\n\n        // You can perform any required actions just after dialog closure here\n        this.activeDialog.closed$.pipe(take(1)).subscribe(() => {\n            console.log($localize`CLOSED`);\n        });\n    }\n\n    public actionDone(): void {\n        console.log($localize`ACTION DONE`);\n        this.activeDialog.dismiss(\"DONE\");\n    }\n\n    public actionCanceled(): void {\n        console.log($localize`ACTION CANCELED`);\n        this.activeDialog.dismiss();\n    }\n\n    public beforeDismiss() {\n        return false;\n    }\n\n    public closeFromHeader() {\n        console.log($localize`CLOSE BUTTON CLICKED`);\n        this.activeDialog.dismiss();\n    }\n}\n","<ng-template #content let-close=\"close\" let-dismiss=\"dismiss\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"closeFromHeader()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\" (click)=\"actionCanceled()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\" displayStyle=\"primary\" (click)=\"actionDone()\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-default-dialog-btn\" nui-button type=\"button\" (click)=\"open(content)\" i18n>Click me!</button>\n","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-custom-class-example\",\n    templateUrl: \"./dialog-custom-class.example.component.html\",\n})\nexport class DialogCustomClassExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public open(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {windowClass: \"demoDialogCustomClass\"});\n    }\n\n    public onButtonClick(title: string) {\n        title === \"Action\" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n    }\n}\n","<ng-template #content let-close=\"close\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"onButtonClick('Cancel')\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"onButtonClick('Action')\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-custom-class-btn\" nui-button type=\"button\" (click)=\"open(content)\" i18n>Custom width dialog</button>\n","export default \"<nui-dialog-header [title]=\\\"name\\\" (closed)=\\\"activeDialog.close()\\\"></nui-dialog-header>\\n<div class=\\\"dialog-body\\\">\\n    <p i18n>\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n        Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n        Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n        Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n        Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n        Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n    </p>\\n</div>\\n<nui-dialog-footer>\\n    <button nui-button type=\\\"button\\\"\\n            [isEmpty]=\\\"false\\\"\\n            (click)=\\\"onButtonClick('Cancel')\\\"\\n            i18n>\\n        Cancel\\n    </button>\\n    <button nui-button type=\\\"button\\\"\\n            displayStyle=\\\"primary\\\"\\n            [isEmpty]=\\\"false\\\"\\n            (click)=\\\"onButtonClick('Action')\\\"\\n            i18n>\\n        Action\\n    </button>\\n</nui-dialog-footer>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl: \"./dialog-docs.example.component.html\",\n})\nexport class DialogDocsComponent {}\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code> NuiDialogModule </code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>\n    Dialog can be added by passing <code>template</code> to the <code>DialogService's open</code> method.\n    You can pass the result of the dialog or the reason why dialog is dismissed by using <code>close</code> or <code>dismiss</code> methods in your ng-template.\n    All passed data can be handled by <code>result</code> property of dialog's <code>open</code> method.\n</p>\n<nui-example-wrapper filenamePrefix=\"simple-dialog\" exampleTitle=\"Simple dialog\">\n    <nui-simple-dialog-example></nui-simple-dialog-example>\n</nui-example-wrapper>\n\n<h2>Usage as a Component</h2>\n\n<p>You can pass an existing component as content of the dialog window. </p>\n<p>In this case remember to add content component as an entryComponents section of your NgModule.</p>\n<p>For this case you need to pass the component's class name to the <code>open</code> method of <code>DialogService</code>.</p>\n<p>See both example panels below.</p>\n<nui-example-wrapper filenamePrefix=\"component-as-content\" exampleTitle=\"Component as content for dialog\">\n    <nui-component-as-content-example></nui-component-as-content-example>\n</nui-example-wrapper>\n<nui-example-wrapper filenamePrefix=\"dialog-content\" exampleTitle=\"Dialog Content Example Component\">\n    <p>The code of this example panel is related to the example above. It only shows code.</p>\n</nui-example-wrapper>\n\n<h2>Severity</h2>\n\n<p>You can pass <code>severity</code> property to the <code>dialog-header</code>\ncomponent and it will show different severity styles. Possible values are: <code>critical, warning, info.</code></p>\n<p>You can also add custom action buttons to the Dialog header. </p>\n<p>In order to do so, you need to define them inside <code>dialog-header</code> component, as shown in the example below.</p>\n<nui-example-wrapper filenamePrefix=\"dialog-severity\" exampleTitle=\"Dialog Severity\">\n    <nui-dialog-severity-example></nui-dialog-severity-example>\n</nui-example-wrapper>\n\n<h2>Custom Dialog header</h2>\n\n<p>You can add custom action buttons to the Dialog header. </p>\n<p>In order to do so, you need to define them inside <code>dialog-header</code> component, as shown in the example below.</p>\n<nui-example-wrapper filenamePrefix=\"header-buttons\" exampleTitle=\"Custom Dialog Header\">\n    <nui-header-buttons-example></nui-header-buttons-example>\n</nui-example-wrapper>\n\n<h2>Dialog Sizes</h2>\n\n<p>You can define size of the dialog by passing it as second argument to <code>DialogService's</code>\n    <code>open</code> method. Possible sizes are: <code>sm,</code><code>md,</code> and <code>lg</code>.\n    Default size is <code>md</code>.\n</p>\n<nui-example-wrapper filenamePrefix=\"dialog-sizes\" exampleTitle=\"Dialog Sizes\">\n    <nui-dialog-sizes-example></nui-dialog-sizes-example>\n</nui-example-wrapper>\n\n<h2>Position on screen</h2>\n\n<p>When content is longer than available screen, dialog grows vertically by default.</p>\n<p>By adding <code>responsive-mode</code> class to the <code>dialog-body</code>, dialog will fit the available screen\n    and content will be scrollable inside the dialog. Also it's possible to remove padding from content in\n    <code>dialog-body</code>by adding <code>compact-mode</code> class</p>\n<nui-example-wrapper filenamePrefix=\"dialog-position\" exampleTitle=\"Dialog Positions\">\n    <nui-dialog-position-example></nui-dialog-position-example>\n</nui-example-wrapper>\n\n<h2>Custom class</h2>\n\n<p>It is possible to add custom class to the dialog window. In order to do it, you need to pass <code>windowClass</code>\noption into <code>DialogService open</code> method as second argument. </p>\n<p> Here's an example: <code>DialogService.open(content, {{ '{' }} windowClass: \"myCustomClass\" {{ '}' }}) </code> </p>\n<p> It will allow you to apply custom styles to the dialog if needed. </p>\n<p> Example below shows dialog with custom width (500px). </p>\n<p> NOTE: custom class is applied to the dialog component which appended into the <code>body</code> element.\n<p> That's why this class must be specified as <code>body</code> descendant class.</p>\n<nui-message type=\"info\">\n    Custom class styles can be overriden by default styles of <code>nui-dialog</code> component. In this case please make custom class selector more specific in your styles.\n</nui-message>\n<nui-example-wrapper filenamePrefix=\"dialog-custom-class\" exampleTitle=\"Custom Class\">\n    <nui-dialog-custom-class-example></nui-dialog-custom-class-example>\n</nui-example-wrapper>\n\n<h2>Confirmation Dialog</h2>\n\n<p>\n    You can use Confirmation Dialog by calling the <code>confirm</code> method of DialogService. Set the <code>message</code> input\n    to a string value that will serve as the confirmation message. Optionally, you can customize the title and button labels using\n    the <code>title</code>, <code>confirmText</code>, <code>dismissText</code> and <code>severity</code> properties defined in\n    <a target=\"_parent\" href=\"../interfaces/IConfirmationDialogOptions.html\">IConfirmationDialogOptions</a>.\n\n    <nui-message type=\"info\">\n        By default, when the confirmation dialog opens, the <code>Confirm</code> button is focused. Use <code>setFocus</code> input to\n        set the <code>Dismiss</code> button focused on dialog open.\n    </nui-message>\n</p>\n<nui-example-wrapper filenamePrefix=\"confirmation-dialog\" exampleTitle=\"Confirmation Dialog\">\n    <nui-confirmation-dialog-example></nui-confirmation-dialog-example>\n</nui-example-wrapper>\n\n<h2>Keyboard Options</h2>\n\n<p>\n    There is a field in <code>options</code> that allows dialog to be interacted with via keyboard. Usage: <code>{{ '{' }} keyboard: false {{ '}' }}</code>\n</p>\n\n<nui-example-wrapper filenamePrefix=\"dialog-with-keyboard\" exampleTitle=\"Dialog With Keyboard\">\n    <nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\n</nui-example-wrapper>\n\n<h2>Static Backdrop</h2>\n<p>\n    By default, nui-dialog closes if user clicks outside the dialog. It is handy though to keep the dialog on no matter where user clicks. To achieve this behavior,\n    it is recommended to use the <code>backdrop</code> input of the component and set <code>static</code> string to it.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"dialog-with-static-backdrop\" exampleTitle=\"Dialog With Static Backdrop\">\n    <nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\n</nui-example-wrapper>\n\n<h2>Dialog Inside Overlay</h2>\n<p>\n    The implementation of the <code>nui-dialog</code> is not currently based on <code>nui-overlay</code>, which means there might be a need to display the dialog properly\n    with overlay-based components, including nested ones. To make the dialog open inside the overlay container it is enough to passe in the <code>useOverlay</code> option\n    when opening the dialog.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"dialog-inside-overlay\" exampleTitle=\"Dialog Inside Overlay\">\n    <nui-dialog-inside-overlay-example></nui-dialog-inside-overlay-example>\n</nui-example-wrapper>\n\n<h2>Dialog Closure Actions</h2>\n<p>\n    The <code>nui-dialog</code> provides you with a number of ways to perform actions on it's closure. There are two built-in events <code>ESC</code> and <code>BACKDROP_CLICK</code>\n    which are triggered by the keyboard escape key and clicking the dialog's backdrop respectively. However, the user is able to create their own events, which they can pass as an argument into the\n    <code>dismiss(event)</code> method of the <code>dialogRef</code>. To capture the events there are two types of EventEmitters of the <code>dialogRef</code> - <code>closed$</code>\n    and <code>beforeDismissed$</code>. As can be determined from their names, the <code>closed$</code> event emitter will emit an event right after the dialog window is closed, while the\n    <code>beforeDismissed$</code> emits right before the dialog is dismissed.\n</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    <strong>Note:</strong> <code>beforeDissmissed$</code> is only emitted on dialog dismissal (or cancellation); it is not emitted on dialog submission.\n    <code>beforeDismissed$</code>works best in conjunction with the special <code>beforeDismiss</code> function, which can\n    be configured as an optional configuration parameter of the dialog. This function, if it returns <code>false</code>, will prevent the dialog from closing, until the <code>close</code>\n    method is called. All this lets you be very flexible in how exactly you want the dialog to be dismissed and when to perform certain actions.\n</nui-message>\n<p>\n    The example of the dialog's closure actions below shows how flexible a simple dialog can be in terms of performing certain actions at certain points of the dialog's lifecycle\n</p>\n\n<p>\n    For this example:\n</p>\n<ol>\n    <li>\n        <strong>BACKDROP click</strong> - The logic specific to the backdrop click is performed, and the dialog stays open in this case.\n    </li>\n    <li>\n        <strong>ESC key pressed</strong> - First, the logic specific to the ESC button click is performed. Then, general logic before the dialog dismissal is performed. And, finally, the logic to perform right after dialog closure is run.\n    </li>\n    <li>\n        <strong>ACTION button pressed</strong> - The logic specific to the ACTION button click is performed. Then, the custom DONE event is sent, and finally the event is captured and custom logic is run in response. The dialog stays open in this case.\n    </li>\n    <li>\n        <strong>CANCEL button pressed</strong> - The logic specific to the CANCEL button click is performed. Then, general logic before the dialog dismissal is performed. And, finally, the logic to perform right after dialog closure is run.\n    </li>\n    <li>\n        <strong>Header Close button pressed</strong> - The logic specific to the header Close button click is performed. Then, general logic before the dialog dismissal is performed. And, finally, the logic to perform right after dialog closure is run.\n    </li>\n</ol>\n\n\n<nui-example-wrapper filenamePrefix=\"dialog-actions-before-closure\" exampleTitle=\"Dialog Actions Before Closure\">\n    <nui-dialog-actions-before-closure-example></nui-dialog-actions-before-closure-example>\n</nui-example-wrapper>\n\n<h2>Dialog Open Actions</h2>\n<p>\n    It's possible to perform some actions in your code when a dialog is opened by subscribing to the\n    <code>DialogService</code>'s <code>afterOpened$</code> observable. It emits a\n    <code>NuiDialogRef</code> that contains the component's data. This works for both a confirmation\n    dialog and a dialog containing a consumer-defined component. The examples below trigger a toast on\n    the top right of the page when each dialog is opened.\n</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    To see the source code of the consumer-defined component used in this example, open the source\n    expander of the second example panel in this section.\n</nui-message>\n\n<nui-example-wrapper filenamePrefix=\"dialog-after-opened\" exampleTitle=\"Perform an action on dialog open\">\n    <nui-dialog-after-opened-example></nui-dialog-after-opened-example>\n</nui-example-wrapper>\n<nui-example-wrapper filenamePrefix=\"dialog-content\" exampleTitle=\"Dialog Content Example Component\">\n    <p>The code of this example panel is related to the example above. It only shows code.</p>\n</nui-example-wrapper>\n","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-sizes-example\\\",\\n    templateUrl: \\\"./dialog-sizes.example.component.html\\\",\\n})\\nexport class DialogSizesExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public open(content: TemplateRef<string>, size: any) {\\n        this.activeDialog = this.dialogService.open(content, {size});\\n    }\\n\\n    public onButtonClick(title: string) {\\n        title === \\\"Action\\\" ? this.actionDone() : this.actionCanceled();\\n        this.activeDialog.close();\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n    }\\n}\\n\";","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-custom-class-example\\\",\\n    templateUrl: \\\"./dialog-custom-class.example.component.html\\\",\\n})\\nexport class DialogCustomClassExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public open(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {windowClass: \\\"demoDialogCustomClass\\\"});\\n    }\\n\\n    public onButtonClick(title: string) {\\n        title === \\\"Action\\\" ? this.actionDone() : this.actionCanceled();\\n        this.activeDialog.close();\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    templateUrl: \\\"./dialog-docs.example.component.html\\\",\\n})\\nexport class DialogDocsComponent {}\\n\";","export default \"import { Component, Inject, OnDestroy, OnInit } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport { takeUntil } from \\\"rxjs/operators\\\";\\n\\nimport { DialogContentExampleComponent } from \\\"../component-as-content/dialog-content.example.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-after-opened-example\\\",\\n    templateUrl: \\\"./dialog-after-opened.example.component.html\\\",\\n})\\nexport class DialogAfterOpenedExampleComponent implements OnInit, OnDestroy {\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public destroy$$: Subject<void> = new Subject<void>();\\n\\n    public ngOnInit() {\\n        this.dialogService.afterOpened$.pipe(\\n            takeUntil(this.destroy$$)\\n        ).subscribe((dialog: NuiDialogRef) => {\\n            if (dialog.componentInstance) {\\n                this.toastService.info({ message: `${dialog.componentInstance.constructor.name} was opened` });\\n            }\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$$.next();\\n        this.destroy$$.complete();\\n    }\\n\\n    public openConfirmationDialog() {\\n        this.dialogService.confirm({\\n            message: $localize`Are you sure you want to do it?`,\\n            severity: \\\"info\\\",\\n            setFocus: \\\"confirm\\\",\\n            title: \\\"Confirmation dialog\\\",\\n        });\\n    }\\n\\n    public openWithComponent() {\\n        const dialogRef = this.dialogService.open(DialogContentExampleComponent, { size: \\\"sm\\\" });\\n        dialogRef.componentInstance.name = $localize `Dialog title`;\\n    }\\n}\\n\";","export default \"<ng-template #content let-close=\\\"close\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title [severity]=\\\"severity\\\" (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                [isEmpty]=\\\"false\\\"\\n                (click)=\\\"onButtonClick('Cancel')\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                [isEmpty]=\\\"false\\\"\\n                (click)=\\\"onButtonClick('Action')\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-critical-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, 'critical')\\\" i18n>Show Critical</button>\\n<button id=\\\"nui-demo-warning-dialog-btn\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, 'warning')\\\" i18n>Show Warning</button>\\n<button id=\\\"nui-demo-info-dialog-btn\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, 'info')\\\" i18n>Show Info</button>\\n\";","export default \"import { Component, Inject } from \\\"@angular/core\\\";\\nimport { DialogService } from \\\"@nova-ui/bits\\\";\\n\\nimport { DialogContentExampleComponent } from \\\"./dialog-content.example.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-component-as-content-example\\\",\\n    templateUrl: \\\"./component-as-content.example.component.html\\\",\\n})\\nexport class ComponentAsContentExampleComponent {\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    public openWithComponent() {\\n        const dialogRef = this.dialogService.open(DialogContentExampleComponent, { size: \\\"sm\\\" });\\n        dialogRef.componentInstance.name = $localize `Dialog title`;\\n    }\\n}\\n\";","export default \"<h2>Basic Usage</h2>\\n<nui-simple-dialog-example></nui-simple-dialog-example>\\n\\n<h2>Usage as a Component</h2>\\n<nui-component-as-content-example></nui-component-as-content-example>\\n\\n<h2>Severity</h2>\\n<nui-dialog-severity-example></nui-dialog-severity-example>\\n\\n<h2>Custom Dialog header</h2>\\n<nui-header-buttons-example></nui-header-buttons-example>\\n\\n<h2>Dialog Sizes</h2>\\n<nui-dialog-sizes-example></nui-dialog-sizes-example>\\n\\n<h2>Position on screen</h2>\\n<nui-dialog-position-example></nui-dialog-position-example>\\n\\n<h2>Custom class</h2>\\n<nui-dialog-custom-class-example></nui-dialog-custom-class-example>\\n\\n<h2>Confirmation Dialog</h2>\\n<nui-confirmation-dialog-example></nui-confirmation-dialog-example>\\n\\n<h2>Keyboard Options</h2>\\n<nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\\n\\n<h2>Static Backdrop</h2>\\n<nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\\n\\n<h2>Z-Index Strategy</h2>\\n<button id=\\\"nui-visual-test-open-overlay-btn\\\" nui-button type=\\\"button\\\"\\n        (click)=\\\"openOverlay(mainOverlayContent, '60%', '400px')\\\">\\n    Open overlay\\n</button>\\n\\n<ng-template #smallOverlayContent>\\n    <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-body\\\">\\n            <ng-container *ngTemplateOutlet=\\\"loremIpsum\\\"></ng-container>\\n        </div>\\n    </div>\\n    <div class=\\\"overlay-footer\\\">\\n        <button id=\\\"nui-visual-test-open-small-dialog-btn\\\" nui-button type=\\\"button\\\"\\n                (click)=\\\"openInnerDialog(smallDialogContent)\\\">\\n            Open small Dialog\\n        </button>\\n        <button id=\\\"nui-visual-test-close-overlay-from-small-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"closeOverlay()\\\">\\n            Close overlay\\n        </button>\\n    </div>\\n</ng-template>\\n<ng-template #mainOverlayContent>\\n    <div class=\\\"overlay-container\\\">\\n        <div class=\\\"overlay-body\\\">\\n            <p>This is the content of an CDK overlay container.</p>\\n            <ng-container *ngTemplateOutlet=\\\"tooltip;context: {text:'Main overlay tooltip'}\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"timeframeBarTemplate\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"menu\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"popup\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"select\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"combobox\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"popover\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"dtPicker\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"spinner\\\"></ng-container>\\n            <ng-container *ngTemplateOutlet=\\\"busyTemplate;context: {text:'Inner overlay tooltip'}\\\"></ng-container>\\n        </div>\\n    </div>\\n    <div class=\\\"overlay-footer\\\">\\n        <button nui-button type=\\\"button\\\" (click)=\\\"showToast()\\\">\\n            Show toast\\n        </button>\\n        <button id=\\\"nui-visual-test-switch-appendToBody-btn\\\"\\n                nui-button\\n                type=\\\"button\\\"\\n                (click)=\\\"toggleAppendToBody()\\\"\\n                i18n>\\n            appendToBody={{appendToBody}}\\n        </button>\\n        <button id=\\\"nui-visual-test-switch-busy-btn\\\"\\n                nui-button\\n                type=\\\"button\\\"\\n                (click)=\\\"toggleBusy()\\\"\\n                i18n>\\n            busy={{busy}}\\n        </button>\\n        <button id=\\\"nui-visual-test-inner-dialog-btn\\\" nui-button type=\\\"button\\\"\\n                (click)=\\\"openInnerDialog(innerDialogContent)\\\">\\n            Open Inner Dialog\\n        </button>\\n        <button nui-button type=\\\"button\\\" (click)=\\\"closeOverlay()\\\">\\n            Close overlay\\n        </button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #smallDialogContent let-close=\\\"close\\\" let-dismiss=\\\"dismiss\\\">\\n    <nui-dialog-header title=\\\"Small Dialog Title\\\" (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <ng-container *ngTemplateOutlet=\\\"loremIpsum\\\"></ng-container>\\n    </div>\\n    <nui-dialog-footer>\\n        <button id=\\\"nui-visual-test-close-small-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"close()\\\">\\n            Close\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<ng-template #innerDialogContent let-close=\\\"close\\\" let-dismiss=\\\"dismiss\\\">\\n    <nui-dialog-header title=\\\"Inner Dialog Title\\\" (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p>This is the content of a dialog.</p>\\n        <ng-container *ngTemplateOutlet=\\\"tooltip;context: {text:'Inner dialog tooltip'}\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"timeframeBarTemplate\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"menu\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"popup\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"select\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"combobox\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"popover\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"dtPicker\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"spinner\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"busyTemplate;context: {text:'Inner dialog tooltip'}\\\"></ng-container>\\n    </div>\\n    <nui-dialog-footer>\\n        <button id=\\\"nui-visual-test-open-overlay-from-dialog-btn\\\" nui-button type=\\\"button\\\"\\n                (click)=\\\"openOverlay(smallOverlayContent, '40%', '200px')\\\">\\n            +Overlay\\n        </button>\\n        <button id=\\\"nui-visual-test-open-small-dialog-from-dialog-btn\\\" nui-button type=\\\"button\\\"\\n                (click)=\\\"openInnerDialog(smallDialogContent)\\\">\\n            +Dialog\\n        </button>\\n        <button nui-button\\n                type=\\\"button\\\"\\n                (click)=\\\"toggleBusy()\\\"\\n                i18n>\\n            Switch busy\\n        </button>\\n        <button nui-button type=\\\"button\\\" (click)=\\\"showToast()\\\">Show toast</button>\\n        <button nui-button type=\\\"button\\\" (click)=\\\"closeDialog();close()\\\">Close</button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<ng-template #menu>\\n    <nui-menu [appendToBody]=\\\"appendToBody\\\" title=\\\"Menu\\\"class=\\\"clickable-visual-item\\\">\\n        <nui-menu-action *ngFor=\\\"let item of items\\\">{{item}}</nui-menu-action>\\n    </nui-menu>\\n</ng-template>\\n\\n<ng-template #popup>\\n    <nui-popup [appendToBody]=\\\"appendToBody\\\" class=\\\"clickable-visual-item\\\">\\n        <button nui-button\\n                nuiPopupToggle\\n                type=\\\"button\\\"\\n                icon=\\\"caret-down\\\"\\n                [iconRight]=\\\"true\\\"\\n                class=\\\"menu-button\\\"\\n                [isEmpty]=\\\"false\\\"\\n                i18n>\\n            Popup\\n        </button>\\n        <div popupAreaContent>\\n            <ng-container *ngFor=\\\"let item of items\\\">\\n                <nui-menu-item tabindex=\\\"0\\\" nuiTooltip=\\\"This tooltip is part of a menu item\\\">{{item}}</nui-menu-item>\\n            </ng-container>\\n        </div>\\n    </nui-popup>\\n</ng-template>\\n\\n<ng-template #select>\\n    <!-- select v1 -->\\n    <nui-select\\n        class=\\\"clickable-visual-item\\\"\\n        [itemsSource]=\\\"items\\\"\\n        [inline]=\\\"true\\\"\\n        [appendToBody]=\\\"appendToBody\\\"\\n        placeholder=\\\"Select v1\\\"\\n    ></nui-select>\\n\\n    <!-- select v2 -->\\n    <nui-select-v2\\n        class=\\\"clickable-visual-item d-inline-flex\\\"\\n        placeholder=\\\"Select v2\\\">\\n        <ng-container *ngFor=\\\"let item of items\\\">\\n            <nui-select-v2-option [value]=\\\"item\\\" i18n>{{item}}</nui-select-v2-option>\\n        </ng-container>\\n    </nui-select-v2>\\n\\n</ng-template>\\n\\n<ng-template #combobox>\\n    <nui-combobox\\n        class=\\\"clickable-visual-item\\\"\\n        [itemsSource]=\\\"items\\\"\\n        [inline]=\\\"true\\\"\\n        [appendToBody]=\\\"appendToBody\\\"\\n        i18n-placeholder\\n        placeholder=\\\"Combobox v1\\\"></nui-combobox>\\n\\n    <nui-combobox-v2\\n        class=\\\"clickable-visual-item d-inline-flex\\\"\\n        placeholder=\\\"Combobox v2\\\">\\n        <ng-container *ngFor=\\\"let item of items\\\">\\n            <nui-select-v2-option [value]=\\\"item\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                    <span [nuiComboboxV2OptionHighlight]=\\\"item\\\"></span>\\n                </div>\\n            </nui-select-v2-option>\\n        </ng-container>\\n    </nui-combobox-v2>\\n</ng-template>\\n\\n<ng-template #spinner>\\n    <nui-spinner size=\\\"large\\\"\\n                 [show]=\\\"true\\\"\\n                 message=\\\"Spinner\\\" i18n-message\\n                 helpText=\\\"Optional spinner description\\\" i18n-helpText>\\n    </nui-spinner>\\n</ng-template>\\n\\n<ng-template #busyTemplate let-text=\\\"text\\\">\\n    <div nui-busy [busy]=\\\"busy\\\" class=\\\"busy-content\\\">\\n        We used focus trigger so that the popover with a\\n        <span nuiTooltip=\\\"{{text}} {{longTextTooltip}}\\\"\\n            tooltipPlacement=\\\"bottom\\\"\\n            class=\\\"nui-text-widget--hoverable\\\">\\n            big tooltip\\n        </span> will remain open even after we move the mouse away from it even.\\n    </div>\\n</ng-template>\\n\\n<ng-template #dtPicker>\\n    <div class=\\\"inline-flex\\\">\\n        <nui-date-time-picker\\n            class=\\\"clickable-visual-item\\\"\\n            [appendToBody]=\\\"appendToBody\\\"\\n            [model]=\\\"dt\\\"\\n            displayMode=\\\"inline\\\">\\n        </nui-date-time-picker>\\n    </div>\\n</ng-template>\\n\\n<ng-template #timeframeBarTemplate>\\n    <nui-time-frame-bar [(timeFrame)]=\\\"timeFrame\\\">\\n\\n        <!-- content for default projection slot -->\\n        <nui-icon icon=\\\"calendar\\\" class=\\\"pr-3\\\"></nui-icon>\\n        {{timeFrame | timeFrame}}\\n\\n        <!-- content for time frame selection projection slot -->\\n        <nui-quick-picker timeFrameSelection>\\n            <nui-time-frame-picker></nui-time-frame-picker>\\n        </nui-quick-picker>\\n\\n    </nui-time-frame-bar>\\n</ng-template>\\n\\n<ng-template #popover>\\n    I'm a\\n    <nui-popover tabindex=\\\"1\\\"\\n                 class=\\\"clickable-visual-item\\\"\\n                 trigger=\\\"focus\\\"\\n                 [template]=\\\"popoverWithBasicUsage\\\">\\n        <span class=\\\"nui-text-widget--hoverable\\\">popover</span>\\n    </nui-popover>\\n    with Focus Trigger\\n    <ng-template #popoverWithBasicUsage>\\n        <span>I'm a popover with some content with a</span>&nbsp;\\n        <span nuiTooltip=\\\"Tooltip inside popover {{longTextTooltip}}\\\" class=\\\"nui-text-widget--hoverable\\\">tooltip</span>\\n        &nbsp;inside.\\n        <ng-container *ngTemplateOutlet=\\\"loremIpsum\\\"></ng-container>\\n    </ng-template>\\n</ng-template>\\n\\n<ng-template #tooltip let-text=\\\"text\\\">\\n    <span id=\\\"long-text-tooltip\\\"\\n          nuiTooltip=\\\"Tooltip should appear on top of any other components (popup, popover, menu,etc.) even if it's displayed after the popover has been displayed.\\\"\\n          tooltipPlacement=\\\"bottom\\\"\\n          class=\\\"nui-text-widget--hoverable\\\">I'm a long text tooltip!\\n    </span>\\n</ng-template>\\n\\n<ng-template #loremIpsum>\\n    <p>\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n        Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n        Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n        Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n    </p>\\n</ng-template>\\n\";","export default \"export * from \\\"./dialog-docs/dialog-docs.example.component\\\";\\nexport * from \\\"./simple-dialog/simple-dialog.example.component\\\";\\nexport * from \\\"./component-as-content/component-as-content.example.component\\\";\\nexport * from \\\"./component-as-content/dialog-content.example.component\\\";\\nexport * from \\\"./dialog-severity/dialog-severity.example.component\\\";\\nexport * from \\\"./dialog-sizes/dialog-sizes.example.component\\\";\\nexport * from \\\"./dialog-position/dialog-position.example.component\\\";\\nexport * from \\\"./header-buttons/header-buttons.example.component\\\";\\nexport * from \\\"./dialog-custom-class/dialog-custom-class.example.component\\\";\\nexport * from \\\"./confirmation-dialog/confirmation-dialog.example.component\\\";\\nexport * from \\\"./dialog-visual-test/dialog-visual-test.component\\\";\\nexport * from \\\"./dialog-keyboard/dialog-with-keyboard.example.component\\\";\\nexport * from \\\"./dialog-static-backdrop/dialog-with-static-backdrop.example.component\\\";\\nexport * from \\\"./dialog-inside-overlay/dialog-inside-overlay.example.component\\\";\\nexport * from \\\"./dialog-actions-before-closure/dialog-actions-before-closure.example.component\\\";\\nexport * from \\\"./dialog-test/dialog-zindex-test.component\\\";\\nexport * from \\\"./dialog-after-opened/dialog-after-opened.example.component\\\";\\nexport * from \\\"./dialog-actions-before-closure/dialog-actions-before-closure.example.component\\\";\\n\";","import { Component, Inject, Input } from \"@angular/core\";\nimport { IToastService, NuiActiveDialog, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-content-example\",\n    templateUrl: \"./dialog-content.example.component.html\",\n})\nexport class DialogContentExampleComponent {\n    @Input() name: string;\n\n    constructor(@Inject(NuiActiveDialog) public activeDialog: any,\n                @Inject(ToastService) private toastService: IToastService) {\n    }\n\n    public onButtonClick(title: string) {\n        title === \"Action\" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n    }\n}\n","<nui-dialog-header [title]=\"name\" (closed)=\"activeDialog.close()\"></nui-dialog-header>\n<div class=\"dialog-body\">\n    <p i18n>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n        Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n        Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n        Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n        Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n        Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    </p>\n</div>\n<nui-dialog-footer>\n    <button nui-button type=\"button\"\n            [isEmpty]=\"false\"\n            (click)=\"onButtonClick('Cancel')\"\n            i18n>\n        Cancel\n    </button>\n    <button nui-button type=\"button\"\n            displayStyle=\"primary\"\n            [isEmpty]=\"false\"\n            (click)=\"onButtonClick('Action')\"\n            i18n>\n        Action\n    </button>\n</nui-dialog-footer>\n","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-severity-example\\\",\\n    templateUrl: \\\"./dialog-severity.example.component.html\\\",\\n})\\nexport class DialogSeverityExampleComponent {\\n    public severity: string;\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public open(content: TemplateRef<string>, severity = \\\"\\\") {\\n        this.severity = severity;\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\"});\\n    }\\n\\n    public onButtonClick(title: string) {\\n        title === \\\"Action\\\" ? this.actionDone() : this.actionCanceled();\\n        this.activeDialog.close();\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n    }\\n}\\n\";","export * from \"./dialog-docs/dialog-docs.example.component\";\nexport * from \"./simple-dialog/simple-dialog.example.component\";\nexport * from \"./component-as-content/component-as-content.example.component\";\nexport * from \"./component-as-content/dialog-content.example.component\";\nexport * from \"./dialog-severity/dialog-severity.example.component\";\nexport * from \"./dialog-sizes/dialog-sizes.example.component\";\nexport * from \"./dialog-position/dialog-position.example.component\";\nexport * from \"./header-buttons/header-buttons.example.component\";\nexport * from \"./dialog-custom-class/dialog-custom-class.example.component\";\nexport * from \"./confirmation-dialog/confirmation-dialog.example.component\";\nexport * from \"./dialog-visual-test/dialog-visual-test.component\";\nexport * from \"./dialog-keyboard/dialog-with-keyboard.example.component\";\nexport * from \"./dialog-static-backdrop/dialog-with-static-backdrop.example.component\";\nexport * from \"./dialog-inside-overlay/dialog-inside-overlay.example.component\";\nexport * from \"./dialog-actions-before-closure/dialog-actions-before-closure.example.component\";\nexport * from \"./dialog-test/dialog-zindex-test.component\";\nexport * from \"./dialog-after-opened/dialog-after-opened.example.component\";\nexport * from \"./dialog-actions-before-closure/dialog-actions-before-closure.example.component\";\n","export default \"<ng-template #content let-close=\\\"close\\\" let-dismiss=\\\"dismiss\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"closeFromHeader()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\" (click)=\\\"actionCanceled()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"primary\\\" (click)=\\\"actionDone()\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-default-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content)\\\" i18n>Click me!</button>\\n\";","var map = {\n\t\"./component-as-content/component-as-content.example.component.html\": \"l1BV\",\n\t\"./component-as-content/component-as-content.example.component.ts\": \"Auv2\",\n\t\"./component-as-content/dialog-content.example.component.html\": \"28cg\",\n\t\"./component-as-content/dialog-content.example.component.ts\": \"jj5D\",\n\t\"./confirmation-dialog/confirmation-dialog.example.component.html\": \"L5Ws\",\n\t\"./confirmation-dialog/confirmation-dialog.example.component.ts\": \"Zep8\",\n\t\"./dialog-actions-before-closure/dialog-actions-before-closure.example.component.html\": \"FEGv\",\n\t\"./dialog-actions-before-closure/dialog-actions-before-closure.example.component.ts\": \"Xe06\",\n\t\"./dialog-after-opened/dialog-after-opened.example.component.html\": \"h9xv\",\n\t\"./dialog-after-opened/dialog-after-opened.example.component.ts\": \"7Osd\",\n\t\"./dialog-custom-class/dialog-custom-class.example.component.html\": \"QIXJ\",\n\t\"./dialog-custom-class/dialog-custom-class.example.component.ts\": \"5Tta\",\n\t\"./dialog-docs/dialog-docs.example.component.html\": \"e0nl\",\n\t\"./dialog-docs/dialog-docs.example.component.ts\": \"6BiM\",\n\t\"./dialog-inside-overlay/dialog-inside-overlay.example.component.html\": \"ggfY\",\n\t\"./dialog-inside-overlay/dialog-inside-overlay.example.component.ts\": \"N0bp\",\n\t\"./dialog-keyboard/dialog-with-keyboard.example.component.html\": \"yajv\",\n\t\"./dialog-keyboard/dialog-with-keyboard.example.component.ts\": \"ataZ\",\n\t\"./dialog-position/dialog-position.example.component.html\": \"bfkP\",\n\t\"./dialog-position/dialog-position.example.component.ts\": \"Ttcr\",\n\t\"./dialog-severity/dialog-severity.example.component.html\": \"9ByO\",\n\t\"./dialog-severity/dialog-severity.example.component.ts\": \"EGah\",\n\t\"./dialog-sizes/dialog-sizes.example.component.html\": \"q8+I\",\n\t\"./dialog-sizes/dialog-sizes.example.component.ts\": \"2ll4\",\n\t\"./dialog-static-backdrop/dialog-with-static-backdrop.example.component.html\": \"Lstl\",\n\t\"./dialog-static-backdrop/dialog-with-static-backdrop.example.component.ts\": \"lbYS\",\n\t\"./dialog-test/dialog-zindex-test.component.html\": \"B42D\",\n\t\"./dialog-test/dialog-zindex-test.component.less\": \"R7wm\",\n\t\"./dialog-test/dialog-zindex-test.component.ts\": \"PLjn\",\n\t\"./dialog-visual-test/dialog-visual-test.component.html\": \"LfRD\",\n\t\"./dialog-visual-test/dialog-visual-test.component.ts\": \"W/vu\",\n\t\"./dialog.module.ts\": \"mX2p\",\n\t\"./header-buttons/header-buttons.example.component.html\": \"Pj5b\",\n\t\"./header-buttons/header-buttons.example.component.ts\": \"zhgJ\",\n\t\"./index.ts\": \"DHxQ\",\n\t\"./simple-dialog/simple-dialog.example.component.html\": \"PNRQ\",\n\t\"./simple-dialog/simple-dialog.example.component.ts\": \"WRkj\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"GEiY\";","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-header-buttons-example\",\n    templateUrl: \"./header-buttons.example.component.html\",\n})\nexport class HeaderButtonsExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public open(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\"});\n    }\n\n    public onButtonClick(title: string) {\n        title === \"Action\" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({\n            message: $localize `Action Done!`,\n            title: $localize `Event`,\n        });\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({\n            message: $localize `Action Cancelled!`,\n            title: $localize `Event`,\n        });\n    }\n\n}\n","<ng-template #headerButtonsContent let-close=\"close\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\">\n        <button nui-button type=\"button\" displayStyle=\"action\" icon=\"fullscreen\"></button>\n        <button nui-button type=\"button\" displayStyle=\"action\" icon=\"menu\"></button>\n    </nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"onButtonClick('Cancel')\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"onButtonClick('Action')\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-custom-actions\" nui-button type=\"button\" (click)=\"open(headerButtonsContent)\" i18n>More actions</button>\n","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-with-keyboard-example\",\n    templateUrl: \"./dialog-with-keyboard.example.component.html\",\n})\nexport class DialogWithKeyboardExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public openWith(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\"});\n    }\n    public openWithout(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\", keyboard: false});\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n        this.activeDialog.close();\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n        this.activeDialog.close();\n    }\n}\n","<ng-template #content let-close=\"close\" let-dismiss=\"dismiss\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"actionCanceled(); close()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"actionDone(); close()\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-with-keyboard-dialog-btn\" nui-button type=\"button\" (click)=\"openWith(content)\" i18n>Close me with ESC button</button>\n<button id=\"nui-demo-without-keyboard-dialog-btn\" class=\"ml-4\" nui-button type=\"button\" (click)=\"openWithout(content)\" i18n>ESC button won't close me</button>\n","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-severity-example\",\n    templateUrl: \"./dialog-severity.example.component.html\",\n})\nexport class DialogSeverityExampleComponent {\n    public severity: string;\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public open(content: TemplateRef<string>, severity = \"\") {\n        this.severity = severity;\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\"});\n    }\n\n    public onButtonClick(title: string) {\n        title === \"Action\" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n    }\n}\n","<ng-template #content let-close=\"close\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title [severity]=\"severity\" (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                [isEmpty]=\"false\"\n                (click)=\"onButtonClick('Cancel')\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                [isEmpty]=\"false\"\n                (click)=\"onButtonClick('Action')\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-critical-dialog-btn\" nui-button type=\"button\" (click)=\"open(content, 'critical')\" i18n>Show Critical</button>\n<button id=\"nui-demo-warning-dialog-btn\" class=\"ml-4\" nui-button type=\"button\" (click)=\"open(content, 'warning')\" i18n>Show Warning</button>\n<button id=\"nui-demo-info-dialog-btn\" class=\"ml-4\" nui-button type=\"button\" (click)=\"open(content, 'info')\" i18n>Show Info</button>\n","export default \"<button id=\\\"nui-demo-confirmation-dialog-btn-info\\\" nui-button type=\\\"button\\\" (click)=\\\"openInfo()\\\" i18n>Show Info Confirmation</button>\\n<button id=\\\"nui-demo-confirmation-dialog-btn-warning\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"openWarning()\\\" i18n>Show Warning Confirmation</button>\\n<button id=\\\"nui-demo-confirmation-dialog-btn-critical\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"openCritical()\\\" i18n>Show Critical Confirmation</button>\\n\";","export default \"<div class=\\\"container\\\">\\n    <div>\\n        <ng-template #content let-close=\\\"close\\\">\\n            <nui-dialog-header title=\\\"Dialog title\\\"\\n                               [severity]=\\\"severity\\\"\\n                               (closed)=\\\"close()\\\">\\n            </nui-dialog-header>\\n            <div class=\\\"dialog-body\\\">\\n                <p>\\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n                </p>\\n            </div>\\n            <nui-dialog-footer>\\n                <button nui-button type=\\\"button\\\"\\n                        [isEmpty]=\\\"false\\\"\\n                        (click)=\\\"onButtonClick('Cancel')\\\">\\n                    Cancel\\n                </button>\\n                <button nui-button type=\\\"button\\\"\\n                        displayStyle=\\\"primary\\\"\\n                        [isEmpty]=\\\"false\\\"\\n                        (click)=\\\"onButtonClick('Action')\\\">\\n                    Action\\n                </button>\\n            </nui-dialog-footer>\\n        </ng-template>\\n\\n        <div>\\n            <h3>Basic Dialog</h3>\\n            <button id=\\\"nui-visual-test-default-dialog-btn\\\" (click)=\\\"open(content)\\\">\\n                Click me!\\n            </button>\\n            <hr/>\\n        </div>\\n\\n        <div>\\n            <h3>Dialogs with Different Severity</h3>\\n            <button id=\\\"nui-visual-test-critical-dialog-btn\\\" (click)=\\\"open(content, 'critical')\\\">\\n                Show Critical\\n            </button>\\n            <button id=\\\"nui-visual-test-warning-dialog-btn\\\" (click)=\\\"open(content, 'warning')\\\">\\n                Show Warning\\n            </button>\\n            <button id=\\\"nui-visual-test-info-dialog-btn\\\" (click)=\\\"open(content, 'info')\\\">\\n                Show Info\\n            </button>\\n            <hr/>\\n        </div>\\n\\n        <div>\\n            <h3>Dialogs with Different Sizes</h3>\\n            <button id=\\\"nui-visual-test-small-dialog-btn\\\" (click)=\\\"openSizes(content, 'sm')\\\">\\n                Show Small Dialog\\n            </button>\\n            <button id=\\\"nui-visual-test-medium-dialog-btn\\\" (click)=\\\"openSizes(content, 'md')\\\">\\n                Show Medium Dialog\\n            </button>\\n            <button id=\\\"nui-visual-test-large-dialog-btn\\\" (click)=\\\"openSizes(content, 'lg')\\\">\\n                Show Large Dialog\\n            </button>\\n            <hr/>\\n        </div>\\n    </div>\\n\\n    <div>\\n        <ng-template  #headerButtonsContent let-close=\\\"close\\\">\\n            <nui-dialog-header title=\\\"Dialog title\\\" (closed)=\\\"close()\\\">\\n                <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"fullscreen\\\"></button>\\n                <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"menu\\\"></button>\\n            </nui-dialog-header>\\n            <div class=\\\"dialog-body\\\">\\n                <p>\\n                    <nui-select id=\\\"nui-visual-basic-select\\\"\\n                                [itemsSource]=\\\"dataset.items\\\"\\n                                placeholder=\\\"Select item\\\"></nui-select>\\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n                </p>\\n            </div>\\n            <nui-dialog-footer>\\n                <button nui-button type=\\\"button\\\"\\n                        (click)=\\\"onButtonClick('Cancel')\\\">\\n                    Cancel\\n                </button>\\n                <button nui-button type=\\\"button\\\"\\n                        displayStyle=\\\"primary\\\"\\n                        (click)=\\\"onButtonClick('Action')\\\">\\n                    Action\\n                </button>\\n            </nui-dialog-footer>\\n        </ng-template>\\n\\n        <div>\\n            <h3>Custom Dialog Header</h3>\\n            <button id=\\\"nui-visual-test-custom-actions-dialog-btn\\\" (click)=\\\"open(headerButtonsContent)\\\">\\n                More actions\\n            </button>\\n            <hr/>\\n        </div>\\n    </div>\\n\\n    <div>\\n        <h3>Confirmation Dialogs with Defaults and Overrides</h3>\\n        <button id=\\\"nui-visual-test-confirmation-dialog-defaults-btn\\\" (click)=\\\"confirmationDefaults()\\\">\\n            Show Confirmation with defaults\\n        </button>\\n        <button id=\\\"nui-visual-test-confirmation-dialog-overrides-btn\\\" (click)=\\\"confirmationOverrides()\\\">\\n            Show Confirmation with overrides\\n        </button>\\n        <hr />\\n    </div>\\n\\n    <div>\\n        <ng-template #contentResponsiveMode let-close=\\\"close\\\">\\n            <nui-dialog-header title=\\\"Dialog title\\\" (closed)=\\\"close()\\\"></nui-dialog-header>\\n            <div class=\\\"dialog-body\\\" [ngClass]=\\\"{'responsive-mode': isResponsiveMode}\\\">\\n                <p>\\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n                </p>\\n\\n                <p>\\n                    Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\\n                    Duis faucibus vehicula elit.\\n                    Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\\n                    Vivamus porta risus vitae risus tempus accumsan.\\n                </p>\\n\\n                <p>\\n                    Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\\n                    Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\\n                    Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\\n                    In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n                    Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\\n                    Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\\n                    Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\\n                    Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\\n                </p>\\n\\n                <p>\\n                    Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\\n                    Sed tempor enim vel diam tincidunt condimentum.\\n                    Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\\n                    Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\\n                    Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\\n                    Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\\n                    Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\\n                    Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\\n                </p>\\n\\n                <p>\\n                    Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\\n                    Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\\n                    Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\\n                    Vestibulum eget eros id risus elementum interdum eu quis nisi.\\n                    Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\\n                    Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\\n                    Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\\n                    Quisque pretium vel nisl eu aliquet.\\n                </p>\\n\\n                <p>\\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n                </p>\\n\\n                <p>\\n                    Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\\n                    Duis faucibus vehicula elit.\\n                    Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\\n                    Vivamus porta risus vitae risus tempus accumsan.\\n                </p>\\n\\n                <p>\\n                    Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\\n                    Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\\n                    Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\\n                    In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n                    Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\\n                    Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\\n                    Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\\n                    Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\\n                </p>\\n\\n                <p>\\n                    Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\\n                    Sed tempor enim vel diam tincidunt condimentum.\\n                    Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\\n                    Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\\n                    Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\\n                    Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\\n                    Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\\n                    Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\\n                </p>\\n\\n                <p>\\n                    Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\\n                    Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\\n                    Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\\n                    Vestibulum eget eros id risus elementum interdum eu quis nisi.\\n                    Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\\n                    Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\\n                    Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\\n                    Quisque pretium vel nisl eu aliquet.\\n                </p>\\n            </div>\\n            <nui-dialog-footer>\\n                <button (click)=\\\"onButtonClick('Cancel')\\\" nui-button type=\\\"button\\\">\\n                    Cancel\\n                </button>\\n                <button displayStyle=\\\"primary\\\" (click)=\\\"onButtonClick('Action')\\\" nui-button type=\\\"button\\\">\\n                    Action\\n                </button>\\n            </nui-dialog-footer>\\n        </ng-template>\\n\\n        <div>\\n            <h3>Position on Screen</h3>\\n            <button id=\\\"nui-visual-test-long-dialog-btn\\\" (click)=\\\"openResponsive(contentResponsiveMode, { isResponsiveMode: false })\\\">\\n                Default mode\\n            </button>\\n            <button id=\\\"nui-visual-test-responsive-dialog-btn\\\" (click)=\\\"openResponsive(contentResponsiveMode, { isResponsiveMode: true })\\\">\\n                Responsive mode\\n            </button>\\n            <hr />\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<ng-template #content let-close=\\\"close\\\" let-dismiss=\\\"dismiss\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"actionCanceled(); close()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"actionDone(); close()\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<p>\\n    This example blocks the user from closing the dialog with a click outside of the dialog. Still able to close via the ESC key or dialog <code>Cancel</code> and\\n    <code>Close</code> buttons:\\n</p>\\n<button id=\\\"nui-demo-static-backdrop-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"openWith(content)\\\" i18n>Static Backdrop Only</button>\\n<p class=\\\"mt-3\\\">\\n    This example allows the user to close the dialog only with the <code>Cancel</code> and <code>Close</code> buttons:\\n</p>\\n<button id=\\\"nui-demo-static-backdrop-ESC-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"openWithout(content)\\\" i18n>Static Backdrop + ESC Key</button>\\n\";","export default \"import { Component, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef } from \\\"@nova-ui/bits\\\";\\nimport moment, { Moment } from \\\"moment/moment\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-inside-overlay-example\\\",\\n    templateUrl: \\\"./dialog-inside-overlay.example.component.html\\\",\\n})\\nexport class DialogInsideOverlayExampleComponent {\\n    public options1 = Array.from({ length: 25 }).map((_, i) => $localize `Item ${i}`);\\n    public options2 = Array.from({ length: 25 }).map((_, i) => $localize `Item ${i}`);\\n\\n    public dt: Moment;\\n    public selectedDate: Date;\\n\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(private dialogService: DialogService) {\\n        this.dt = moment();\\n        this.selectedDate = new Date(this.dt.valueOf());\\n    }\\n\\n    /**\\n     * Notice that the 'useOverlay' option is being passed in here\\n     */\\n    public openInOverlay(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\", useOverlay: true});\\n    }\\n\\n    public onDone(): void {\\n        this.activeDialog.close();\\n    }\\n\\n    public onCancel(): void {\\n        this.activeDialog.close();\\n    }\\n\\n    public onModelChanged(event: any) {\\n        this.selectedDate = new Date(event.valueOf());\\n    }\\n}\\n\";","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-position-example\",\n    templateUrl: \"./dialog-position.example.component.html\",\n})\nexport class DialogPositionExampleComponent {\n    public isResponsiveMode = false;\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public open(content: TemplateRef<string>, options: any) {\n        this.isResponsiveMode = options.isResponsiveMode;\n        this.activeDialog = this.dialogService.open(content);\n    }\n\n    public onButtonClick(title: string) {\n        title === \"Action\" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n    }\n}\n","<ng-template #content let-close=\"close\">\n    {{test}}\n\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\" [ngClass]=\"{'responsive-mode': isResponsiveMode}\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n\n        <p i18n>\n            Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\n            Duis faucibus vehicula elit.\n            Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\n            Vivamus porta risus vitae risus tempus accumsan.\n        </p>\n\n        <p i18n>\n            Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\n            Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\n            Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\n            In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n            Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n            Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n            Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\n            Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\n        </p>\n\n        <p i18n>\n            Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\n            Sed tempor enim vel diam tincidunt condimentum.\n            Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\n            Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\n            Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\n            Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\n            Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\n            Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\n        </p>\n\n        <p i18n>\n            Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\n            Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\n            Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\n            Vestibulum eget eros id risus elementum interdum eu quis nisi.\n            Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n            Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\n            Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\n            Quisque pretium vel nisl eu aliquet.\n        </p>\n\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n\n        <p i18n>\n            Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\n            Duis faucibus vehicula elit.\n            Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\n            Vivamus porta risus vitae risus tempus accumsan.\n        </p>\n\n        <p i18n>\n            Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\n            Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\n            Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\n            In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n            Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n            Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n            Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\n            Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\n        </p>\n\n        <p i18n>\n            Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\n            Sed tempor enim vel diam tincidunt condimentum.\n            Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\n            Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\n            Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\n            Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\n            Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\n            Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\n        </p>\n\n        <p i18n>\n            Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\n            Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\n            Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\n            Vestibulum eget eros id risus elementum interdum eu quis nisi.\n            Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n            Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\n            Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\n            Quisque pretium vel nisl eu aliquet.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"onButtonClick('Cancel')\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"onButtonClick('Action')\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"long-dialog\" nui-button type=\"button\" (click)=\"open(content, { isResponsiveMode: false })\" i18n>Default mode</button>\n<button id=\"responsive-dialog\" class=\"ml-4\" nui-button type=\"button\" (click)=\"open(content, { isResponsiveMode: true })\" i18n>Responsive mode</button>\n","export default \"import {Overlay, OverlayRef} from \\\"@angular/cdk/overlay\\\";\\nimport {TemplatePortal} from \\\"@angular/cdk/portal\\\";\\nimport {Component, OnInit, TemplateRef, ViewContainerRef, ViewEncapsulation} from \\\"@angular/core\\\";\\nimport {DialogService, ITimeframe, NuiDialogRef, ToastService} from \\\"@nova-ui/bits\\\";\\nimport moment from \\\"moment/moment\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-zindex--test\\\",\\n    templateUrl: \\\"./dialog-zindex-test.component.html\\\",\\n    styleUrls: [\\\"./dialog-zindex-test.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class DialogZIndexTestComponent implements OnInit {\\n    public busy: boolean = false;\\n    public appendToBody: boolean = false;\\n\\n    public timeFrame: ITimeframe;\\n\\n    public dt = moment(\\\"2018-02-02\\\");\\n    public items = [\\\"Long description item 1\\\", \\\"Item 2\\\", \\\"Item 3\\\", \\\"Item 4\\\", \\\"Item 5\\\", \\\"Item 6\\\"];\\n    public longTextTooltip = `\\n    which should appear on top of any other components (popup, popover, menu,etc.) even if it's displayed after the popover has been displayed.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n    `;\\n\\n    private activeDialogs: NuiDialogRef[] = [];\\n    private overlayRef: OverlayRef;\\n    private baseDate = moment([2018, 5, 1, 15, 0, 0]);\\n\\n    constructor(private dialogService: DialogService,\\n                private toastService: ToastService,\\n                private overlay: Overlay,\\n                private viewContainerRef: ViewContainerRef\\n    ) {}\\n\\n    public ngOnInit(): void {\\n        this.timeFrame = {\\n            startDatetime: this.baseDate.clone().subtract(1, \\\"weeks\\\"),\\n            endDatetime: this.baseDate.clone(),\\n        };\\n    }\\n\\n    public toggleBusy() {\\n        this.busy = !this.busy;\\n    }\\n\\n    public toggleAppendToBody() {\\n        this.appendToBody = !this.appendToBody;\\n    }\\n\\n    public openOverlay(templateRef: TemplateRef<string>, width: string, height: string) {\\n        const positionStrategy = this.overlay.position().global()\\n            .centerHorizontally()\\n            .centerVertically();\\n\\n        this.overlayRef = this.overlay.create({\\n            positionStrategy,\\n            hasBackdrop: true,\\n            panelClass: [\\\"main-overlay-panel\\\", \\\"d-flex\\\", \\\"flex-column\\\"],\\n            width: width,\\n            height: height,\\n            scrollStrategy: this.overlay.scrollStrategies.block(),\\n\\n        });\\n        const portal = new TemplatePortal(templateRef, this.viewContainerRef);\\n        this.overlayRef.attach(portal);\\n    }\\n\\n    public closeOverlay() {\\n        this.overlayRef.detach();\\n    }\\n\\n    public openInnerDialog(templateRef: TemplateRef<string>) {\\n        this.activeDialogs.push(this.dialogService.open(templateRef, {windowClass: \\\"inner-dialog\\\"}));\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialogs.pop()?.close();\\n    }\\n\\n    public showToast(): void {\\n        this.toastService.success({message: $localize`Sample toast displayed!`, title: $localize`Event`});\\n    }\\n}\\n\";","export default \"<ng-template #content let-close=\\\"close\\\" let-dismiss=\\\"dismiss\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\" (click)=\\\"actionCanceled(); close()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"primary\\\" (click)=\\\"actionDone(); close()\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-default-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content)\\\" i18n>Click me!</button>\\n\";","export default \"<ng-template #headerButtonsContent let-close=\\\"close\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\">\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"fullscreen\\\"></button>\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"menu\\\"></button>\\n    </nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"onButtonClick('Cancel')\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"onButtonClick('Action')\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-custom-actions\\\" nui-button type=\\\"button\\\" (click)=\\\"open(headerButtonsContent)\\\" i18n>More actions</button>\\n\";","export default \"<ng-template #content let-close=\\\"close\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"onButtonClick('Cancel')\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"onButtonClick('Action')\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-custom-class-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content)\\\" i18n>Custom width dialog</button>\\n\";","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-with-static-backdrop-example\",\n    templateUrl: \"./dialog-with-static-backdrop.example.component.html\",\n})\nexport class DialogWithStaticBackdropExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public openWith(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\", backdrop: \"static\"});\n    }\n    public openWithout(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\", keyboard: false, backdrop: \"static\"});\n    }\n\n    public actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n        this.activeDialog.close();\n    }\n\n    public actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n        this.activeDialog.close();\n    }\n}\n","<ng-template #content let-close=\"close\" let-dismiss=\"dismiss\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"actionCanceled(); close()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"actionDone(); close()\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<p>\n    This example blocks the user from closing the dialog with a click outside of the dialog. Still able to close via the ESC key or dialog <code>Cancel</code> and\n    <code>Close</code> buttons:\n</p>\n<button id=\"nui-demo-static-backdrop-dialog-btn\" nui-button type=\"button\" (click)=\"openWith(content)\" i18n>Static Backdrop Only</button>\n<p class=\"mt-3\">\n    This example allows the user to close the dialog only with the <code>Cancel</code> and <code>Close</code> buttons:\n</p>\n<button id=\"nui-demo-static-backdrop-ESC-dialog-btn\" nui-button type=\"button\" (click)=\"openWithout(content)\" i18n>Static Backdrop + ESC Key</button>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.main-overlay-panel {\\n    padding: @nui-space-sm;\\n    background: @nui-color-bg-content;\\n\\n    .overlay-footer {\\n        display: flex;\\n        justify-content: flex-end;\\n        padding: @nui-space-sm;\\n        button {\\n            margin-left: 15px;\\n        }\\n    }\\n}\\n\\n.busy-content {\\n    border: 1px @nui-color-line-default solid;\\n    padding: @nui-space-sm;\\n}\\n\\n.inline-flex {\\n    display: inline-flex;\\n}\\n\\n\";","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-position-example\\\",\\n    templateUrl: \\\"./dialog-position.example.component.html\\\",\\n})\\nexport class DialogPositionExampleComponent {\\n    public isResponsiveMode = false;\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public open(content: TemplateRef<string>, options: any) {\\n        this.isResponsiveMode = options.isResponsiveMode;\\n        this.activeDialog = this.dialogService.open(content);\\n    }\\n\\n    public onButtonClick(title: string) {\\n        title === \\\"Action\\\" ? this.actionDone() : this.actionCanceled();\\n        this.activeDialog.close();\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n    }\\n}\\n\";","import { Component, Inject } from \"@angular/core\";\nimport { DialogService } from \"@nova-ui/bits\";\n\nimport { DialogContentExampleComponent } from \"./dialog-content.example.component\";\n\n@Component({\n    selector: \"nui-component-as-content-example\",\n    templateUrl: \"./component-as-content.example.component.html\",\n})\nexport class ComponentAsContentExampleComponent {\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    public openWithComponent() {\n        const dialogRef = this.dialogService.open(DialogContentExampleComponent, { size: \"sm\" });\n        dialogRef.componentInstance.name = $localize `Dialog title`;\n    }\n}\n","<button nui-button type=\"button\" (click)=\"openWithComponent()\" i18n>Click me!</button>\n","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-visual-test\\\",\\n    templateUrl: \\\"./dialog-visual-test.component.html\\\",\\n})\\nexport class DialogVisualTestComponent {\\n    public severity: string;\\n    private activeDialog: NuiDialogRef;\\n    public isResponsiveMode = false;\\n    public dataset = {\\n        items: [\\n            \\\"Item 1\\\",\\n            \\\"Item 2\\\",\\n            \\\"Item 3\\\",\\n            \\\"Item 4\\\",\\n            \\\"Item 5\\\",\\n            \\\"Item 6\\\",\\n            \\\"Item 7\\\",\\n            \\\"Item 8\\\",\\n            \\\"Item 9\\\",\\n            \\\"Item 10\\\",\\n            \\\"Item 11\\\",\\n            \\\"Item 12\\\",\\n            \\\"Item 13\\\",\\n            \\\"Item 14\\\",\\n            \\\"Item 15\\\",\\n            \\\"Item 16\\\",\\n            \\\"Item 17\\\",\\n            \\\"Item 18\\\",\\n            \\\"Item 19\\\",\\n            \\\"Item 20\\\",\\n        ],\\n    };\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    public open(content: TemplateRef<string>, severity = \\\"\\\") {\\n        this.severity = severity;\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\"});\\n    }\\n\\n    public openSizes(content: TemplateRef<string>, size: any) {\\n        this.activeDialog = this.dialogService.open(content, {size});\\n    }\\n\\n    public openResponsive(content: TemplateRef<string>, options: any) {\\n        this.isResponsiveMode = options.isResponsiveMode;\\n        this.activeDialog = this.dialogService.open(content);\\n    }\\n\\n    public onButtonClick() {\\n        this.activeDialog.close();\\n    }\\n\\n    public confirmationDefaults() {\\n        this.dialogService.confirm({\\n            message: \\\"Should I do it?\\\",\\n        });\\n    }\\n\\n    public confirmationOverrides() {\\n        this.dialogService.confirm({\\n            message: \\\"Are you sure you want to do it?\\\",\\n            title: \\\"Format hard drive\\\",\\n            confirmText: \\\"Format\\\",\\n            dismissText: \\\"No!\\\",\\n            severity: \\\"warning\\\",\\n        });\\n    }\\n}\\n\";","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-sizes-example\",\n    templateUrl: \"./dialog-sizes.example.component.html\",\n})\nexport class DialogSizesExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public open(content: TemplateRef<string>, size: any) {\n        this.activeDialog = this.dialogService.open(content, {size});\n    }\n\n    public onButtonClick(title: string) {\n        title === \"Action\" ? this.actionDone() : this.actionCanceled();\n        this.activeDialog.close();\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n    }\n}\n","<ng-template #content let-close=\"close\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"onButtonClick('Cancel')\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"onButtonClick('Action')\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-small-dialog-btn\" nui-button type=\"button\" (click)=\"open(content, 'sm')\">Show Small Dialog</button>\n<button id=\"nui-demo-medium-dialog-btn\" class=\"ml-4\" nui-button type=\"button\" (click)=\"open(content, 'md')\">Show Medium Dialog</button>\n<button id=\"nui-demo-large-dialog-btn\" class=\"ml-4\" nui-button type=\"button\" (click)=\"open(content, 'lg')\">Show Large Dialog</button>\n","export default \"import { Component, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-simple-dialog-example\\\",\\n    templateUrl: \\\"./simple-dialog.example.component.html\\\",\\n})\\nexport class SimpleDialogExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(private dialogService: DialogService, private toastService: ToastService) {}\\n\\n    public open(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\"});\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n        this.activeDialog.close();\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n        this.activeDialog.close();\\n    }\\n}\\n\";","export default \"import { Component, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogEvent, NuiDialogRef } from \\\"@nova-ui/bits\\\";\\nimport { take, takeUntil } from \\\"rxjs/operators\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-actions-before-closure-example\\\",\\n    templateUrl: \\\"./dialog-actions-before-closure.example.component.html\\\",\\n})\\nexport class DialogActionBeforeClosureExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(private dialogService: DialogService) {}\\n\\n    public open(content: TemplateRef<string>) {\\n        // You can return 'false' from the optional beforeDismiss function anytime you want to prevent the dialog from closing.\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\", beforeDismiss: this.beforeDismiss});\\n\\n        // You can use the beforeDismissed$ event to execute actions right before the dialog gets closed\\n        this.activeDialog\\n                .beforeDismissed$\\n                    .pipe(\\n                        // Be sure to unsubscribe on dialog closure\\n                        takeUntil(this.activeDialog.closed$)\\n                    )\\n                    .subscribe(event => {\\n                        // A dialog will typically close in response to the escape key\\n                        if (event === NuiDialogEvent.EscapeKey) {\\n                            console.log($localize`ESC CLOSED`);\\n                        }\\n                        // Covering the 'BACKDROP_CLICK' event in case of clearing the dialog by clicking the backdrop\\n                        if (event === NuiDialogEvent.BackdropClick) {\\n                            console.log($localize`BACKDROP CLICK CLOSED`);\\n                            return;\\n                        }\\n                        // Here we cover the custom 'DONE' event which you can create and then capture within the 'beforeDismissed$' subscription\\n                        // to run your custom logic in response to that event right before the dialog closure.  See 'actionDone' implementation below.\\n                        if (event === \\\"DONE\\\") {\\n                            console.log($localize`DONE`);\\n                            return;\\n                        }\\n                        // Set of actions for all event origins before the dialog closes\\n                        console.log($localize`BEFORE CLOSED`);\\n                        // Manually close the dialog since the `beforeDismiss` implementation below short-circuits dismissal with its 'false' return value\\n                        this.activeDialog.close();\\n        });\\n\\n        // You can perform any required actions just after dialog closure here\\n        this.activeDialog.closed$.pipe(take(1)).subscribe(() => {\\n            console.log($localize`CLOSED`);\\n        });\\n    }\\n\\n    public actionDone(): void {\\n        console.log($localize`ACTION DONE`);\\n        this.activeDialog.dismiss(\\\"DONE\\\");\\n    }\\n\\n    public actionCanceled(): void {\\n        console.log($localize`ACTION CANCELED`);\\n        this.activeDialog.dismiss();\\n    }\\n\\n    public beforeDismiss() {\\n        return false;\\n    }\\n\\n    public closeFromHeader() {\\n        console.log($localize`CLOSE BUTTON CLICKED`);\\n        this.activeDialog.dismiss();\\n    }\\n}\\n\";","import { Component, Inject, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-dialog-visual-test\",\n    templateUrl: \"./dialog-visual-test.component.html\",\n})\nexport class DialogVisualTestComponent {\n    public severity: string;\n    private activeDialog: NuiDialogRef;\n    public isResponsiveMode = false;\n    public dataset = {\n        items: [\n            \"Item 1\",\n            \"Item 2\",\n            \"Item 3\",\n            \"Item 4\",\n            \"Item 5\",\n            \"Item 6\",\n            \"Item 7\",\n            \"Item 8\",\n            \"Item 9\",\n            \"Item 10\",\n            \"Item 11\",\n            \"Item 12\",\n            \"Item 13\",\n            \"Item 14\",\n            \"Item 15\",\n            \"Item 16\",\n            \"Item 17\",\n            \"Item 18\",\n            \"Item 19\",\n            \"Item 20\",\n        ],\n    };\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    public open(content: TemplateRef<string>, severity = \"\") {\n        this.severity = severity;\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\"});\n    }\n\n    public openSizes(content: TemplateRef<string>, size: any) {\n        this.activeDialog = this.dialogService.open(content, {size});\n    }\n\n    public openResponsive(content: TemplateRef<string>, options: any) {\n        this.isResponsiveMode = options.isResponsiveMode;\n        this.activeDialog = this.dialogService.open(content);\n    }\n\n    public onButtonClick() {\n        this.activeDialog.close();\n    }\n\n    public confirmationDefaults() {\n        this.dialogService.confirm({\n            message: \"Should I do it?\",\n        });\n    }\n\n    public confirmationOverrides() {\n        this.dialogService.confirm({\n            message: \"Are you sure you want to do it?\",\n            title: \"Format hard drive\",\n            confirmText: \"Format\",\n            dismissText: \"No!\",\n            severity: \"warning\",\n        });\n    }\n}\n","<div class=\"container\">\n    <div>\n        <ng-template #content let-close=\"close\">\n            <nui-dialog-header title=\"Dialog title\"\n                               [severity]=\"severity\"\n                               (closed)=\"close()\">\n            </nui-dialog-header>\n            <div class=\"dialog-body\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button nui-button type=\"button\"\n                        [isEmpty]=\"false\"\n                        (click)=\"onButtonClick('Cancel')\">\n                    Cancel\n                </button>\n                <button nui-button type=\"button\"\n                        displayStyle=\"primary\"\n                        [isEmpty]=\"false\"\n                        (click)=\"onButtonClick('Action')\">\n                    Action\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        <div>\n            <h3>Basic Dialog</h3>\n            <button id=\"nui-visual-test-default-dialog-btn\" (click)=\"open(content)\">\n                Click me!\n            </button>\n            <hr/>\n        </div>\n\n        <div>\n            <h3>Dialogs with Different Severity</h3>\n            <button id=\"nui-visual-test-critical-dialog-btn\" (click)=\"open(content, 'critical')\">\n                Show Critical\n            </button>\n            <button id=\"nui-visual-test-warning-dialog-btn\" (click)=\"open(content, 'warning')\">\n                Show Warning\n            </button>\n            <button id=\"nui-visual-test-info-dialog-btn\" (click)=\"open(content, 'info')\">\n                Show Info\n            </button>\n            <hr/>\n        </div>\n\n        <div>\n            <h3>Dialogs with Different Sizes</h3>\n            <button id=\"nui-visual-test-small-dialog-btn\" (click)=\"openSizes(content, 'sm')\">\n                Show Small Dialog\n            </button>\n            <button id=\"nui-visual-test-medium-dialog-btn\" (click)=\"openSizes(content, 'md')\">\n                Show Medium Dialog\n            </button>\n            <button id=\"nui-visual-test-large-dialog-btn\" (click)=\"openSizes(content, 'lg')\">\n                Show Large Dialog\n            </button>\n            <hr/>\n        </div>\n    </div>\n\n    <div>\n        <ng-template  #headerButtonsContent let-close=\"close\">\n            <nui-dialog-header title=\"Dialog title\" (closed)=\"close()\">\n                <button nui-button type=\"button\" displayStyle=\"action\" icon=\"fullscreen\"></button>\n                <button nui-button type=\"button\" displayStyle=\"action\" icon=\"menu\"></button>\n            </nui-dialog-header>\n            <div class=\"dialog-body\">\n                <p>\n                    <nui-select id=\"nui-visual-basic-select\"\n                                [itemsSource]=\"dataset.items\"\n                                placeholder=\"Select item\"></nui-select>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button nui-button type=\"button\"\n                        (click)=\"onButtonClick('Cancel')\">\n                    Cancel\n                </button>\n                <button nui-button type=\"button\"\n                        displayStyle=\"primary\"\n                        (click)=\"onButtonClick('Action')\">\n                    Action\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        <div>\n            <h3>Custom Dialog Header</h3>\n            <button id=\"nui-visual-test-custom-actions-dialog-btn\" (click)=\"open(headerButtonsContent)\">\n                More actions\n            </button>\n            <hr/>\n        </div>\n    </div>\n\n    <div>\n        <h3>Confirmation Dialogs with Defaults and Overrides</h3>\n        <button id=\"nui-visual-test-confirmation-dialog-defaults-btn\" (click)=\"confirmationDefaults()\">\n            Show Confirmation with defaults\n        </button>\n        <button id=\"nui-visual-test-confirmation-dialog-overrides-btn\" (click)=\"confirmationOverrides()\">\n            Show Confirmation with overrides\n        </button>\n        <hr />\n    </div>\n\n    <div>\n        <ng-template #contentResponsiveMode let-close=\"close\">\n            <nui-dialog-header title=\"Dialog title\" (closed)=\"close()\"></nui-dialog-header>\n            <div class=\"dialog-body\" [ngClass]=\"{'responsive-mode': isResponsiveMode}\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n                </p>\n\n                <p>\n                    Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\n                    Duis faucibus vehicula elit.\n                    Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\n                    Vivamus porta risus vitae risus tempus accumsan.\n                </p>\n\n                <p>\n                    Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\n                    Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\n                    Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\n                    In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n                    Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n                    Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\n                    Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\n                </p>\n\n                <p>\n                    Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\n                    Sed tempor enim vel diam tincidunt condimentum.\n                    Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\n                    Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\n                    Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\n                    Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\n                    Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\n                    Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\n                </p>\n\n                <p>\n                    Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\n                    Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\n                    Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\n                    Vestibulum eget eros id risus elementum interdum eu quis nisi.\n                    Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n                    Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\n                    Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\n                    Quisque pretium vel nisl eu aliquet.\n                </p>\n\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n                    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n                    Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n                    Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n                    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n                    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n                </p>\n\n                <p>\n                    Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\n                    Duis faucibus vehicula elit.\n                    Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\n                    Vivamus porta risus vitae risus tempus accumsan.\n                </p>\n\n                <p>\n                    Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\n                    Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\n                    Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\n                    In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\n                    Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\n                    Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\n                    Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\n                </p>\n\n                <p>\n                    Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\n                    Sed tempor enim vel diam tincidunt condimentum.\n                    Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\n                    Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\n                    Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\n                    Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\n                    Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\n                    Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\n                </p>\n\n                <p>\n                    Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\n                    Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\n                    Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\n                    Vestibulum eget eros id risus elementum interdum eu quis nisi.\n                    Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\n                    Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\n                    Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\n                    Quisque pretium vel nisl eu aliquet.\n                </p>\n            </div>\n            <nui-dialog-footer>\n                <button (click)=\"onButtonClick('Cancel')\" nui-button type=\"button\">\n                    Cancel\n                </button>\n                <button displayStyle=\"primary\" (click)=\"onButtonClick('Action')\" nui-button type=\"button\">\n                    Action\n                </button>\n            </nui-dialog-footer>\n        </ng-template>\n\n        <div>\n            <h3>Position on Screen</h3>\n            <button id=\"nui-visual-test-long-dialog-btn\" (click)=\"openResponsive(contentResponsiveMode, { isResponsiveMode: false })\">\n                Default mode\n            </button>\n            <button id=\"nui-visual-test-responsive-dialog-btn\" (click)=\"openResponsive(contentResponsiveMode, { isResponsiveMode: true })\">\n                Responsive mode\n            </button>\n            <hr />\n        </div>\n    </div>\n</div>\n","export default \"import { Component, Inject } from \\\"@angular/core\\\";\\nimport { DialogService, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-confirmation-dialog-example\\\",\\n    templateUrl: \\\"./confirmation-dialog.example.component.html\\\",\\n})\\nexport class ConfirmationDialogExampleComponent {\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public openInfo() {\\n        this.dialogService.confirm({ message: $localize `Are you sure you want to do it?`, severity: \\\"info\\\", setFocus: \\\"confirm\\\" }).result\\n            .then((result) => {\\n                this.toastService.info({message: result ? $localize `Confirmed` : $localize `Dismissed`});\\n            }, (reason) => {\\n                console.log(\\\"Rejected:\\\", reason);\\n            });\\n    }\\n    public openWarning() {\\n        this.dialogService.confirm({ message: $localize `Are you sure you want to do it?`, severity: \\\"warning\\\", setFocus: \\\"dismiss\\\" }).result\\n            .then((result) => {\\n                this.toastService.info({message: result ? $localize `Confirmed` : $localize `Dismissed`});\\n            }, (reason) => {\\n                console.log(\\\"Rejected:\\\", reason);\\n            });\\n    }\\n    public openCritical() {\\n        this.dialogService.confirm({ message: $localize `Are you sure you want to do it?`, severity: \\\"critical\\\", setFocus: \\\"dismiss\\\" }).result\\n            .then((result) => {\\n                this.toastService.info({message: result ? $localize `Confirmed` : $localize `Dismissed`});\\n            }, (reason) => {\\n                console.log(\\\"Rejected:\\\", reason);\\n            });\\n    }\\n}\\n\";","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-with-keyboard-example\\\",\\n    templateUrl: \\\"./dialog-with-keyboard.example.component.html\\\",\\n})\\nexport class DialogWithKeyboardExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public openWith(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\"});\\n    }\\n    public openWithout(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\", keyboard: false});\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n        this.activeDialog.close();\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n        this.activeDialog.close();\\n    }\\n}\\n\";","import { Component, TemplateRef } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-simple-dialog-example\",\n    templateUrl: \"./simple-dialog.example.component.html\",\n})\nexport class SimpleDialogExampleComponent {\n    private activeDialog: NuiDialogRef;\n\n    constructor(private dialogService: DialogService, private toastService: ToastService) {}\n\n    public open(content: TemplateRef<string>) {\n        this.activeDialog = this.dialogService.open(content, {size: \"sm\"});\n    }\n\n    private actionDone(): void {\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\n        this.activeDialog.close();\n    }\n\n    private actionCanceled(): void {\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\n        this.activeDialog.close();\n    }\n}\n","<ng-template #content let-close=\"close\" let-dismiss=\"dismiss\">\n    <nui-dialog-header title=\"Dialog title\" i18n-title (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p i18n>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n        </p>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\" (click)=\"actionCanceled(); close()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\" displayStyle=\"primary\" (click)=\"actionDone(); close()\" i18n>\n            Action\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<button id=\"nui-demo-default-dialog-btn\" nui-button type=\"button\" (click)=\"open(content)\" i18n>Click me!</button>\n","export default \"<ng-template #content let-close=\\\"close\\\">\\n    {{test}}\\n\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\" [ngClass]=\\\"{'responsive-mode': isResponsiveMode}\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n\\n        <p i18n>\\n            Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\\n            Duis faucibus vehicula elit.\\n            Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\\n            Vivamus porta risus vitae risus tempus accumsan.\\n        </p>\\n\\n        <p i18n>\\n            Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\\n            Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\\n            Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\\n            In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n            Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\\n            Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\\n            Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\\n            Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\\n        </p>\\n\\n        <p i18n>\\n            Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\\n            Sed tempor enim vel diam tincidunt condimentum.\\n            Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\\n            Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\\n            Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\\n            Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\\n            Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\\n            Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\\n        </p>\\n\\n        <p i18n>\\n            Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\\n            Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\\n            Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\\n            Vestibulum eget eros id risus elementum interdum eu quis nisi.\\n            Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\\n            Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\\n            Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\\n            Quisque pretium vel nisl eu aliquet.\\n        </p>\\n\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n\\n        <p i18n>\\n            Quisque ut pellentesque augue. Ut finibus malesuada lacus, a elementum odio eleifend ac.\\n            Duis faucibus vehicula elit.\\n            Pellentesque id metus enim. Praesent vestibulum ipsum vel venenatis vehicula. Donec vel erat ex.\\n            Vivamus porta risus vitae risus tempus accumsan.\\n        </p>\\n\\n        <p i18n>\\n            Duis euismod erat id metus euismod, interdum iaculis turpis tempus. Nulla facilisi.\\n            Pellentesque ut purus nec lorem aliquam dictum ut sit amet enim.\\n            Mauris laoreet vel mi eget suscipit. Aliquam ipsum lacus, varius sed felis non, aliquet ultrices nisl.\\n            In tincidunt quam sed faucibus vulputate. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n            Duis pellentesque elit sem, id aliquet metus egestas sit amet. Maecenas quis justo in turpis lacinia aliquet.\\n            Donec dignissim dolor nunc, in ultricies ligula sodales tincidunt.\\n            Phasellus in nisi ac metus rutrum efficitur eu sed mi. Praesent et porta leo.\\n            Curabitur sed maximus lectus. Aenean ac ex metus. Integer facilisis id sapien quis sodales. Nam at eros sapien.\\n        </p>\\n\\n        <p i18n>\\n            Mauris consequat lectus diam. Cras auctor vestibulum lectus, id pharetra nisl dapibus id.\\n            Sed tempor enim vel diam tincidunt condimentum.\\n            Ut elementum, ante in ultricies pulvinar, elit metus faucibus mauris, eu sodales lectus risus sit amet odio.\\n            Sed ullamcorper maximus ante, ut lobortis libero rutrum lacinia.\\n            Nam pretium erat ac velit egestas rutrum ultrices vel libero. Etiam sollicitudin tempus leo.\\n            Quisque a elit a orci fringilla molestie. Curabitur luctus dui risus, eget commodo lectus ullamcorper sit amet.\\n            Nulla turpis ante, venenatis tempor ex semper, semper vulputate enim.\\n            Duis sem nulla, egestas eu rhoncus et, egestas malesuada neque.\\n        </p>\\n\\n        <p i18n>\\n            Fusce ut malesuada est. Ut ut placerat nunc. Vivamus mauris nisi, luctus nec turpis quis, luctus porta ante.\\n            Aliquam erat volutpat. Nulla facilisi. Maecenas id vehicula sem. Sed vitae sodales orci, sed pretium mauris.\\n            Maecenas orci est, volutpat sit amet elit in, gravida finibus justo.\\n            Vestibulum eget eros id risus elementum interdum eu quis nisi.\\n            Donec ullamcorper enim tincidunt, volutpat sem et, gravida sem.\\n            Fusce vitae tellus mauris. Nam non bibendum urna. Ut vel pellentesque est, quis egestas ex.\\n            Nam lobortis quam eget arcu tristique, id suscipit enim volutpat.\\n            Quisque pretium vel nisl eu aliquet.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"onButtonClick('Cancel')\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"onButtonClick('Action')\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"long-dialog\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, { isResponsiveMode: false })\\\" i18n>Default mode</button>\\n<button id=\\\"responsive-dialog\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, { isResponsiveMode: true })\\\" i18n>Responsive mode</button>\\n\";","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { DialogService, NuiDialogRef, ToastService } from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nimport { DialogContentExampleComponent } from \"../component-as-content/dialog-content.example.component\";\n\n@Component({\n    selector: \"nui-dialog-after-opened-example\",\n    templateUrl: \"./dialog-after-opened.example.component.html\",\n})\nexport class DialogAfterOpenedExampleComponent implements OnInit, OnDestroy {\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public destroy$$: Subject<void> = new Subject<void>();\n\n    public ngOnInit() {\n        this.dialogService.afterOpened$.pipe(\n            takeUntil(this.destroy$$)\n        ).subscribe((dialog: NuiDialogRef) => {\n            if (dialog.componentInstance) {\n                this.toastService.info({ message: `${dialog.componentInstance.constructor.name} was opened` });\n            }\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroy$$.next();\n        this.destroy$$.complete();\n    }\n\n    public openConfirmationDialog() {\n        this.dialogService.confirm({\n            message: $localize`Are you sure you want to do it?`,\n            severity: \"info\",\n            setFocus: \"confirm\",\n            title: \"Confirmation dialog\",\n        });\n    }\n\n    public openWithComponent() {\n        const dialogRef = this.dialogService.open(DialogContentExampleComponent, { size: \"sm\" });\n        dialogRef.componentInstance.name = $localize `Dialog title`;\n    }\n}\n","<button nui-button type=\"button\" (click)=\"openConfirmationDialog()\" i18n>Confirmation</button>\n<button class=\"ml-4\" nui-button type=\"button\" (click)=\"openWithComponent()\" i18n>Custom Component</button>\n","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code> NuiDialogModule </code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n\\n<p>\\n    Dialog can be added by passing <code>template</code> to the <code>DialogService's open</code> method.\\n    You can pass the result of the dialog or the reason why dialog is dismissed by using <code>close</code> or <code>dismiss</code> methods in your ng-template.\\n    All passed data can be handled by <code>result</code> property of dialog's <code>open</code> method.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"simple-dialog\\\" exampleTitle=\\\"Simple dialog\\\">\\n    <nui-simple-dialog-example></nui-simple-dialog-example>\\n</nui-example-wrapper>\\n\\n<h2>Usage as a Component</h2>\\n\\n<p>You can pass an existing component as content of the dialog window. </p>\\n<p>In this case remember to add content component as an entryComponents section of your NgModule.</p>\\n<p>For this case you need to pass the component's class name to the <code>open</code> method of <code>DialogService</code>.</p>\\n<p>See both example panels below.</p>\\n<nui-example-wrapper filenamePrefix=\\\"component-as-content\\\" exampleTitle=\\\"Component as content for dialog\\\">\\n    <nui-component-as-content-example></nui-component-as-content-example>\\n</nui-example-wrapper>\\n<nui-example-wrapper filenamePrefix=\\\"dialog-content\\\" exampleTitle=\\\"Dialog Content Example Component\\\">\\n    <p>The code of this example panel is related to the example above. It only shows code.</p>\\n</nui-example-wrapper>\\n\\n<h2>Severity</h2>\\n\\n<p>You can pass <code>severity</code> property to the <code>dialog-header</code>\\ncomponent and it will show different severity styles. Possible values are: <code>critical, warning, info.</code></p>\\n<p>You can also add custom action buttons to the Dialog header. </p>\\n<p>In order to do so, you need to define them inside <code>dialog-header</code> component, as shown in the example below.</p>\\n<nui-example-wrapper filenamePrefix=\\\"dialog-severity\\\" exampleTitle=\\\"Dialog Severity\\\">\\n    <nui-dialog-severity-example></nui-dialog-severity-example>\\n</nui-example-wrapper>\\n\\n<h2>Custom Dialog header</h2>\\n\\n<p>You can add custom action buttons to the Dialog header. </p>\\n<p>In order to do so, you need to define them inside <code>dialog-header</code> component, as shown in the example below.</p>\\n<nui-example-wrapper filenamePrefix=\\\"header-buttons\\\" exampleTitle=\\\"Custom Dialog Header\\\">\\n    <nui-header-buttons-example></nui-header-buttons-example>\\n</nui-example-wrapper>\\n\\n<h2>Dialog Sizes</h2>\\n\\n<p>You can define size of the dialog by passing it as second argument to <code>DialogService's</code>\\n    <code>open</code> method. Possible sizes are: <code>sm,</code><code>md,</code> and <code>lg</code>.\\n    Default size is <code>md</code>.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"dialog-sizes\\\" exampleTitle=\\\"Dialog Sizes\\\">\\n    <nui-dialog-sizes-example></nui-dialog-sizes-example>\\n</nui-example-wrapper>\\n\\n<h2>Position on screen</h2>\\n\\n<p>When content is longer than available screen, dialog grows vertically by default.</p>\\n<p>By adding <code>responsive-mode</code> class to the <code>dialog-body</code>, dialog will fit the available screen\\n    and content will be scrollable inside the dialog. Also it's possible to remove padding from content in\\n    <code>dialog-body</code>by adding <code>compact-mode</code> class</p>\\n<nui-example-wrapper filenamePrefix=\\\"dialog-position\\\" exampleTitle=\\\"Dialog Positions\\\">\\n    <nui-dialog-position-example></nui-dialog-position-example>\\n</nui-example-wrapper>\\n\\n<h2>Custom class</h2>\\n\\n<p>It is possible to add custom class to the dialog window. In order to do it, you need to pass <code>windowClass</code>\\noption into <code>DialogService open</code> method as second argument. </p>\\n<p> Here's an example: <code>DialogService.open(content, {{ '{' }} windowClass: \\\"myCustomClass\\\" {{ '}' }}) </code> </p>\\n<p> It will allow you to apply custom styles to the dialog if needed. </p>\\n<p> Example below shows dialog with custom width (500px). </p>\\n<p> NOTE: custom class is applied to the dialog component which appended into the <code>body</code> element.\\n<p> That's why this class must be specified as <code>body</code> descendant class.</p>\\n<nui-message type=\\\"info\\\">\\n    Custom class styles can be overriden by default styles of <code>nui-dialog</code> component. In this case please make custom class selector more specific in your styles.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"dialog-custom-class\\\" exampleTitle=\\\"Custom Class\\\">\\n    <nui-dialog-custom-class-example></nui-dialog-custom-class-example>\\n</nui-example-wrapper>\\n\\n<h2>Confirmation Dialog</h2>\\n\\n<p>\\n    You can use Confirmation Dialog by calling the <code>confirm</code> method of DialogService. Set the <code>message</code> input\\n    to a string value that will serve as the confirmation message. Optionally, you can customize the title and button labels using\\n    the <code>title</code>, <code>confirmText</code>, <code>dismissText</code> and <code>severity</code> properties defined in\\n    <a target=\\\"_parent\\\" href=\\\"../interfaces/IConfirmationDialogOptions.html\\\">IConfirmationDialogOptions</a>.\\n\\n    <nui-message type=\\\"info\\\">\\n        By default, when the confirmation dialog opens, the <code>Confirm</code> button is focused. Use <code>setFocus</code> input to\\n        set the <code>Dismiss</code> button focused on dialog open.\\n    </nui-message>\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"confirmation-dialog\\\" exampleTitle=\\\"Confirmation Dialog\\\">\\n    <nui-confirmation-dialog-example></nui-confirmation-dialog-example>\\n</nui-example-wrapper>\\n\\n<h2>Keyboard Options</h2>\\n\\n<p>\\n    There is a field in <code>options</code> that allows dialog to be interacted with via keyboard. Usage: <code>{{ '{' }} keyboard: false {{ '}' }}</code>\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"dialog-with-keyboard\\\" exampleTitle=\\\"Dialog With Keyboard\\\">\\n    <nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\\n</nui-example-wrapper>\\n\\n<h2>Static Backdrop</h2>\\n<p>\\n    By default, nui-dialog closes if user clicks outside the dialog. It is handy though to keep the dialog on no matter where user clicks. To achieve this behavior,\\n    it is recommended to use the <code>backdrop</code> input of the component and set <code>static</code> string to it.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"dialog-with-static-backdrop\\\" exampleTitle=\\\"Dialog With Static Backdrop\\\">\\n    <nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\\n</nui-example-wrapper>\\n\\n<h2>Dialog Inside Overlay</h2>\\n<p>\\n    The implementation of the <code>nui-dialog</code> is not currently based on <code>nui-overlay</code>, which means there might be a need to display the dialog properly\\n    with overlay-based components, including nested ones. To make the dialog open inside the overlay container it is enough to passe in the <code>useOverlay</code> option\\n    when opening the dialog.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"dialog-inside-overlay\\\" exampleTitle=\\\"Dialog Inside Overlay\\\">\\n    <nui-dialog-inside-overlay-example></nui-dialog-inside-overlay-example>\\n</nui-example-wrapper>\\n\\n<h2>Dialog Closure Actions</h2>\\n<p>\\n    The <code>nui-dialog</code> provides you with a number of ways to perform actions on it's closure. There are two built-in events <code>ESC</code> and <code>BACKDROP_CLICK</code>\\n    which are triggered by the keyboard escape key and clicking the dialog's backdrop respectively. However, the user is able to create their own events, which they can pass as an argument into the\\n    <code>dismiss(event)</code> method of the <code>dialogRef</code>. To capture the events there are two types of EventEmitters of the <code>dialogRef</code> - <code>closed$</code>\\n    and <code>beforeDismissed$</code>. As can be determined from their names, the <code>closed$</code> event emitter will emit an event right after the dialog window is closed, while the\\n    <code>beforeDismissed$</code> emits right before the dialog is dismissed.\\n</p>\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    <strong>Note:</strong> <code>beforeDissmissed$</code> is only emitted on dialog dismissal (or cancellation); it is not emitted on dialog submission.\\n    <code>beforeDismissed$</code>works best in conjunction with the special <code>beforeDismiss</code> function, which can\\n    be configured as an optional configuration parameter of the dialog. This function, if it returns <code>false</code>, will prevent the dialog from closing, until the <code>close</code>\\n    method is called. All this lets you be very flexible in how exactly you want the dialog to be dismissed and when to perform certain actions.\\n</nui-message>\\n<p>\\n    The example of the dialog's closure actions below shows how flexible a simple dialog can be in terms of performing certain actions at certain points of the dialog's lifecycle\\n</p>\\n\\n<p>\\n    For this example:\\n</p>\\n<ol>\\n    <li>\\n        <strong>BACKDROP click</strong> - The logic specific to the backdrop click is performed, and the dialog stays open in this case.\\n    </li>\\n    <li>\\n        <strong>ESC key pressed</strong> - First, the logic specific to the ESC button click is performed. Then, general logic before the dialog dismissal is performed. And, finally, the logic to perform right after dialog closure is run.\\n    </li>\\n    <li>\\n        <strong>ACTION button pressed</strong> - The logic specific to the ACTION button click is performed. Then, the custom DONE event is sent, and finally the event is captured and custom logic is run in response. The dialog stays open in this case.\\n    </li>\\n    <li>\\n        <strong>CANCEL button pressed</strong> - The logic specific to the CANCEL button click is performed. Then, general logic before the dialog dismissal is performed. And, finally, the logic to perform right after dialog closure is run.\\n    </li>\\n    <li>\\n        <strong>Header Close button pressed</strong> - The logic specific to the header Close button click is performed. Then, general logic before the dialog dismissal is performed. And, finally, the logic to perform right after dialog closure is run.\\n    </li>\\n</ol>\\n\\n\\n<nui-example-wrapper filenamePrefix=\\\"dialog-actions-before-closure\\\" exampleTitle=\\\"Dialog Actions Before Closure\\\">\\n    <nui-dialog-actions-before-closure-example></nui-dialog-actions-before-closure-example>\\n</nui-example-wrapper>\\n\\n<h2>Dialog Open Actions</h2>\\n<p>\\n    It's possible to perform some actions in your code when a dialog is opened by subscribing to the\\n    <code>DialogService</code>'s <code>afterOpened$</code> observable. It emits a\\n    <code>NuiDialogRef</code> that contains the component's data. This works for both a confirmation\\n    dialog and a dialog containing a consumer-defined component. The examples below trigger a toast on\\n    the top right of the page when each dialog is opened.\\n</p>\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    To see the source code of the consumer-defined component used in this example, open the source\\n    expander of the second example panel in this section.\\n</nui-message>\\n\\n<nui-example-wrapper filenamePrefix=\\\"dialog-after-opened\\\" exampleTitle=\\\"Perform an action on dialog open\\\">\\n    <nui-dialog-after-opened-example></nui-dialog-after-opened-example>\\n</nui-example-wrapper>\\n<nui-example-wrapper filenamePrefix=\\\"dialog-content\\\" exampleTitle=\\\"Dialog Content Example Component\\\">\\n    <p>The code of this example panel is related to the example above. It only shows code.</p>\\n</nui-example-wrapper>\\n\";","import {Overlay, OverlayRef} from \"@angular/cdk/overlay\";\nimport {TemplatePortal} from \"@angular/cdk/portal\";\nimport {Component, OnInit, TemplateRef, ViewContainerRef, ViewEncapsulation} from \"@angular/core\";\nimport {DialogService, ITimeframe, NuiDialogRef, ToastService} from \"@nova-ui/bits\";\nimport moment from \"moment/moment\";\n\n@Component({\n    selector: \"nui-dialog-zindex--test\",\n    templateUrl: \"./dialog-zindex-test.component.html\",\n    styleUrls: [\"./dialog-zindex-test.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DialogZIndexTestComponent implements OnInit {\n    public busy: boolean = false;\n    public appendToBody: boolean = false;\n\n    public timeFrame: ITimeframe;\n\n    public dt = moment(\"2018-02-02\");\n    public items = [\"Long description item 1\", \"Item 2\", \"Item 3\", \"Item 4\", \"Item 5\", \"Item 6\"];\n    public longTextTooltip = `\n    which should appear on top of any other components (popup, popover, menu,etc.) even if it's displayed after the popover has been displayed.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n    Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n    Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n    Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    `;\n\n    private activeDialogs: NuiDialogRef[] = [];\n    private overlayRef: OverlayRef;\n    private baseDate = moment([2018, 5, 1, 15, 0, 0]);\n\n    constructor(private dialogService: DialogService,\n                private toastService: ToastService,\n                private overlay: Overlay,\n                private viewContainerRef: ViewContainerRef\n    ) {}\n\n    public ngOnInit(): void {\n        this.timeFrame = {\n            startDatetime: this.baseDate.clone().subtract(1, \"weeks\"),\n            endDatetime: this.baseDate.clone(),\n        };\n    }\n\n    public toggleBusy() {\n        this.busy = !this.busy;\n    }\n\n    public toggleAppendToBody() {\n        this.appendToBody = !this.appendToBody;\n    }\n\n    public openOverlay(templateRef: TemplateRef<string>, width: string, height: string) {\n        const positionStrategy = this.overlay.position().global()\n            .centerHorizontally()\n            .centerVertically();\n\n        this.overlayRef = this.overlay.create({\n            positionStrategy,\n            hasBackdrop: true,\n            panelClass: [\"main-overlay-panel\", \"d-flex\", \"flex-column\"],\n            width: width,\n            height: height,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n\n        });\n        const portal = new TemplatePortal(templateRef, this.viewContainerRef);\n        this.overlayRef.attach(portal);\n    }\n\n    public closeOverlay() {\n        this.overlayRef.detach();\n    }\n\n    public openInnerDialog(templateRef: TemplateRef<string>) {\n        this.activeDialogs.push(this.dialogService.open(templateRef, {windowClass: \"inner-dialog\"}));\n    }\n\n    public closeDialog() {\n        this.activeDialogs.pop()?.close();\n    }\n\n    public showToast(): void {\n        this.toastService.success({message: $localize`Sample toast displayed!`, title: $localize`Event`});\n    }\n}\n","<h2>Basic Usage</h2>\n<nui-simple-dialog-example></nui-simple-dialog-example>\n\n<h2>Usage as a Component</h2>\n<nui-component-as-content-example></nui-component-as-content-example>\n\n<h2>Severity</h2>\n<nui-dialog-severity-example></nui-dialog-severity-example>\n\n<h2>Custom Dialog header</h2>\n<nui-header-buttons-example></nui-header-buttons-example>\n\n<h2>Dialog Sizes</h2>\n<nui-dialog-sizes-example></nui-dialog-sizes-example>\n\n<h2>Position on screen</h2>\n<nui-dialog-position-example></nui-dialog-position-example>\n\n<h2>Custom class</h2>\n<nui-dialog-custom-class-example></nui-dialog-custom-class-example>\n\n<h2>Confirmation Dialog</h2>\n<nui-confirmation-dialog-example></nui-confirmation-dialog-example>\n\n<h2>Keyboard Options</h2>\n<nui-dialog-with-keyboard-example></nui-dialog-with-keyboard-example>\n\n<h2>Static Backdrop</h2>\n<nui-dialog-with-static-backdrop-example></nui-dialog-with-static-backdrop-example>\n\n<h2>Z-Index Strategy</h2>\n<button id=\"nui-visual-test-open-overlay-btn\" nui-button type=\"button\"\n        (click)=\"openOverlay(mainOverlayContent, '60%', '400px')\">\n    Open overlay\n</button>\n\n<ng-template #smallOverlayContent>\n    <div class=\"overlay-container\">\n        <div class=\"overlay-body\">\n            <ng-container *ngTemplateOutlet=\"loremIpsum\"></ng-container>\n        </div>\n    </div>\n    <div class=\"overlay-footer\">\n        <button id=\"nui-visual-test-open-small-dialog-btn\" nui-button type=\"button\"\n                (click)=\"openInnerDialog(smallDialogContent)\">\n            Open small Dialog\n        </button>\n        <button id=\"nui-visual-test-close-overlay-from-small-btn\" nui-button type=\"button\" (click)=\"closeOverlay()\">\n            Close overlay\n        </button>\n    </div>\n</ng-template>\n<ng-template #mainOverlayContent>\n    <div class=\"overlay-container\">\n        <div class=\"overlay-body\">\n            <p>This is the content of an CDK overlay container.</p>\n            <ng-container *ngTemplateOutlet=\"tooltip;context: {text:'Main overlay tooltip'}\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"timeframeBarTemplate\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"menu\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"popup\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"select\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"combobox\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"popover\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"dtPicker\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"spinner\"></ng-container>\n            <ng-container *ngTemplateOutlet=\"busyTemplate;context: {text:'Inner overlay tooltip'}\"></ng-container>\n        </div>\n    </div>\n    <div class=\"overlay-footer\">\n        <button nui-button type=\"button\" (click)=\"showToast()\">\n            Show toast\n        </button>\n        <button id=\"nui-visual-test-switch-appendToBody-btn\"\n                nui-button\n                type=\"button\"\n                (click)=\"toggleAppendToBody()\"\n                i18n>\n            appendToBody={{appendToBody}}\n        </button>\n        <button id=\"nui-visual-test-switch-busy-btn\"\n                nui-button\n                type=\"button\"\n                (click)=\"toggleBusy()\"\n                i18n>\n            busy={{busy}}\n        </button>\n        <button id=\"nui-visual-test-inner-dialog-btn\" nui-button type=\"button\"\n                (click)=\"openInnerDialog(innerDialogContent)\">\n            Open Inner Dialog\n        </button>\n        <button nui-button type=\"button\" (click)=\"closeOverlay()\">\n            Close overlay\n        </button>\n    </div>\n</ng-template>\n\n<ng-template #smallDialogContent let-close=\"close\" let-dismiss=\"dismiss\">\n    <nui-dialog-header title=\"Small Dialog Title\" (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <ng-container *ngTemplateOutlet=\"loremIpsum\"></ng-container>\n    </div>\n    <nui-dialog-footer>\n        <button id=\"nui-visual-test-close-small-dialog-btn\" nui-button type=\"button\" (click)=\"close()\">\n            Close\n        </button>\n    </nui-dialog-footer>\n</ng-template>\n\n<ng-template #innerDialogContent let-close=\"close\" let-dismiss=\"dismiss\">\n    <nui-dialog-header title=\"Inner Dialog Title\" (closed)=\"close()\"></nui-dialog-header>\n    <div class=\"dialog-body\">\n        <p>This is the content of a dialog.</p>\n        <ng-container *ngTemplateOutlet=\"tooltip;context: {text:'Inner dialog tooltip'}\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"timeframeBarTemplate\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"menu\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"popup\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"select\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"combobox\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"popover\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"dtPicker\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"spinner\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"busyTemplate;context: {text:'Inner dialog tooltip'}\"></ng-container>\n    </div>\n    <nui-dialog-footer>\n        <button id=\"nui-visual-test-open-overlay-from-dialog-btn\" nui-button type=\"button\"\n                (click)=\"openOverlay(smallOverlayContent, '40%', '200px')\">\n            +Overlay\n        </button>\n        <button id=\"nui-visual-test-open-small-dialog-from-dialog-btn\" nui-button type=\"button\"\n                (click)=\"openInnerDialog(smallDialogContent)\">\n            +Dialog\n        </button>\n        <button nui-button\n                type=\"button\"\n                (click)=\"toggleBusy()\"\n                i18n>\n            Switch busy\n        </button>\n        <button nui-button type=\"button\" (click)=\"showToast()\">Show toast</button>\n        <button nui-button type=\"button\" (click)=\"closeDialog();close()\">Close</button>\n    </nui-dialog-footer>\n</ng-template>\n\n<ng-template #menu>\n    <nui-menu [appendToBody]=\"appendToBody\" title=\"Menu\"class=\"clickable-visual-item\">\n        <nui-menu-action *ngFor=\"let item of items\">{{item}}</nui-menu-action>\n    </nui-menu>\n</ng-template>\n\n<ng-template #popup>\n    <nui-popup [appendToBody]=\"appendToBody\" class=\"clickable-visual-item\">\n        <button nui-button\n                nuiPopupToggle\n                type=\"button\"\n                icon=\"caret-down\"\n                [iconRight]=\"true\"\n                class=\"menu-button\"\n                [isEmpty]=\"false\"\n                i18n>\n            Popup\n        </button>\n        <div popupAreaContent>\n            <ng-container *ngFor=\"let item of items\">\n                <nui-menu-item tabindex=\"0\" nuiTooltip=\"This tooltip is part of a menu item\">{{item}}</nui-menu-item>\n            </ng-container>\n        </div>\n    </nui-popup>\n</ng-template>\n\n<ng-template #select>\n    <!-- select v1 -->\n    <nui-select\n        class=\"clickable-visual-item\"\n        [itemsSource]=\"items\"\n        [inline]=\"true\"\n        [appendToBody]=\"appendToBody\"\n        placeholder=\"Select v1\"\n    ></nui-select>\n\n    <!-- select v2 -->\n    <nui-select-v2\n        class=\"clickable-visual-item d-inline-flex\"\n        placeholder=\"Select v2\">\n        <ng-container *ngFor=\"let item of items\">\n            <nui-select-v2-option [value]=\"item\" i18n>{{item}}</nui-select-v2-option>\n        </ng-container>\n    </nui-select-v2>\n\n</ng-template>\n\n<ng-template #combobox>\n    <nui-combobox\n        class=\"clickable-visual-item\"\n        [itemsSource]=\"items\"\n        [inline]=\"true\"\n        [appendToBody]=\"appendToBody\"\n        i18n-placeholder\n        placeholder=\"Combobox v1\"></nui-combobox>\n\n    <nui-combobox-v2\n        class=\"clickable-visual-item d-inline-flex\"\n        placeholder=\"Combobox v2\">\n        <ng-container *ngFor=\"let item of items\">\n            <nui-select-v2-option [value]=\"item\">\n                <div class=\"d-flex align-items-center\">\n                    <span [nuiComboboxV2OptionHighlight]=\"item\"></span>\n                </div>\n            </nui-select-v2-option>\n        </ng-container>\n    </nui-combobox-v2>\n</ng-template>\n\n<ng-template #spinner>\n    <nui-spinner size=\"large\"\n                 [show]=\"true\"\n                 message=\"Spinner\" i18n-message\n                 helpText=\"Optional spinner description\" i18n-helpText>\n    </nui-spinner>\n</ng-template>\n\n<ng-template #busyTemplate let-text=\"text\">\n    <div nui-busy [busy]=\"busy\" class=\"busy-content\">\n        We used focus trigger so that the popover with a\n        <span nuiTooltip=\"{{text}} {{longTextTooltip}}\"\n            tooltipPlacement=\"bottom\"\n            class=\"nui-text-widget--hoverable\">\n            big tooltip\n        </span> will remain open even after we move the mouse away from it even.\n    </div>\n</ng-template>\n\n<ng-template #dtPicker>\n    <div class=\"inline-flex\">\n        <nui-date-time-picker\n            class=\"clickable-visual-item\"\n            [appendToBody]=\"appendToBody\"\n            [model]=\"dt\"\n            displayMode=\"inline\">\n        </nui-date-time-picker>\n    </div>\n</ng-template>\n\n<ng-template #timeframeBarTemplate>\n    <nui-time-frame-bar [(timeFrame)]=\"timeFrame\">\n\n        <!-- content for default projection slot -->\n        <nui-icon icon=\"calendar\" class=\"pr-3\"></nui-icon>\n        {{timeFrame | timeFrame}}\n\n        <!-- content for time frame selection projection slot -->\n        <nui-quick-picker timeFrameSelection>\n            <nui-time-frame-picker></nui-time-frame-picker>\n        </nui-quick-picker>\n\n    </nui-time-frame-bar>\n</ng-template>\n\n<ng-template #popover>\n    I'm a\n    <nui-popover tabindex=\"1\"\n                 class=\"clickable-visual-item\"\n                 trigger=\"focus\"\n                 [template]=\"popoverWithBasicUsage\">\n        <span class=\"nui-text-widget--hoverable\">popover</span>\n    </nui-popover>\n    with Focus Trigger\n    <ng-template #popoverWithBasicUsage>\n        <span>I'm a popover with some content with a</span>&nbsp;\n        <span nuiTooltip=\"Tooltip inside popover {{longTextTooltip}}\" class=\"nui-text-widget--hoverable\">tooltip</span>\n        &nbsp;inside.\n        <ng-container *ngTemplateOutlet=\"loremIpsum\"></ng-container>\n    </ng-template>\n</ng-template>\n\n<ng-template #tooltip let-text=\"text\">\n    <span id=\"long-text-tooltip\"\n          nuiTooltip=\"Tooltip should appear on top of any other components (popup, popover, menu,etc.) even if it's displayed after the popover has been displayed.\"\n          tooltipPlacement=\"bottom\"\n          class=\"nui-text-widget--hoverable\">I'm a long text tooltip!\n    </span>\n</ng-template>\n\n<ng-template #loremIpsum>\n    <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\n        Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\n        Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\n        Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\n    </p>\n</ng-template>\n","import { Component, Inject } from \"@angular/core\";\nimport { DialogService, ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-confirmation-dialog-example\",\n    templateUrl: \"./confirmation-dialog.example.component.html\",\n})\nexport class ConfirmationDialogExampleComponent {\n    constructor(@Inject(DialogService) private dialogService: DialogService,\n                @Inject(ToastService) private toastService: ToastService) {\n    }\n\n    public openInfo() {\n        this.dialogService.confirm({ message: $localize `Are you sure you want to do it?`, severity: \"info\", setFocus: \"confirm\" }).result\n            .then((result) => {\n                this.toastService.info({message: result ? $localize `Confirmed` : $localize `Dismissed`});\n            }, (reason) => {\n                console.log(\"Rejected:\", reason);\n            });\n    }\n    public openWarning() {\n        this.dialogService.confirm({ message: $localize `Are you sure you want to do it?`, severity: \"warning\", setFocus: \"dismiss\" }).result\n            .then((result) => {\n                this.toastService.info({message: result ? $localize `Confirmed` : $localize `Dismissed`});\n            }, (reason) => {\n                console.log(\"Rejected:\", reason);\n            });\n    }\n    public openCritical() {\n        this.dialogService.confirm({ message: $localize `Are you sure you want to do it?`, severity: \"critical\", setFocus: \"dismiss\" }).result\n            .then((result) => {\n                this.toastService.info({message: result ? $localize `Confirmed` : $localize `Dismissed`});\n            }, (reason) => {\n                console.log(\"Rejected:\", reason);\n            });\n    }\n}\n","<button id=\"nui-demo-confirmation-dialog-btn-info\" nui-button type=\"button\" (click)=\"openInfo()\" i18n>Show Info Confirmation</button>\n<button id=\"nui-demo-confirmation-dialog-btn-warning\" class=\"ml-4\" nui-button type=\"button\" (click)=\"openWarning()\" i18n>Show Warning Confirmation</button>\n<button id=\"nui-demo-confirmation-dialog-btn-critical\" class=\"ml-4\" nui-button type=\"button\" (click)=\"openCritical()\" i18n>Show Critical Confirmation</button>\n","export default \"<nui-select-v2 id=\\\"select-to-open-dialog\\\" placeholder=\\\"Select an item\\\"\\n               i18n-placeholder\\n               [popupViewportMargin]=\\\"100\\\">\\n    <nui-select-v2-option *ngFor=\\\"let option of options1\\\"\\n                          [value]=\\\"option\\\"\\n                          (click)=\\\"openInOverlay(headerButtonsContent)\\\">\\n        {{ option }}\\n    </nui-select-v2-option>\\n</nui-select-v2>\\n\\n<ng-template  #headerButtonsContent let-close=\\\"close\\\">\\n    <nui-dialog-header title=\\\"Dialog Title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p>\\n            <nui-select-v2 class=\\\"mb-5\\\" placeholder=\\\"Select an item\\\" i18n-placeholder>\\n                <nui-select-v2-option *ngFor=\\\"let option of options2\\\" [value]=\\\"option\\\">\\n                    {{ option }}\\n                </nui-select-v2-option>\\n            </nui-select-v2>\\n            <nui-date-time-picker class=\\\"date-time-picker\\\" (modelChanged)=\\\"onModelChanged($event)\\\" displayMode=\\\"inline\\\" [model]=\\\"dt\\\" [appendToBody]=\\\"true\\\"></nui-date-time-picker>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\" (click)=\\\"onCancel()\\\" i18n>Cancel</button>\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"primary\\\" (click)=\\\"onDone()\\\" i18n>Action</button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\";","export default \"<button nui-button type=\\\"button\\\" (click)=\\\"openConfirmationDialog()\\\" i18n>Confirmation</button>\\n<button class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"openWithComponent()\\\" i18n>Custom Component</button>\\n\";","export default \"import { Component, Inject, Input } from \\\"@angular/core\\\";\\nimport { IToastService, NuiActiveDialog, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-content-example\\\",\\n    templateUrl: \\\"./dialog-content.example.component.html\\\",\\n})\\nexport class DialogContentExampleComponent {\\n    @Input() name: string;\\n\\n    constructor(@Inject(NuiActiveDialog) public activeDialog: any,\\n                @Inject(ToastService) private toastService: IToastService) {\\n    }\\n\\n    public onButtonClick(title: string) {\\n        title === \\\"Action\\\" ? this.actionDone() : this.actionCanceled();\\n        this.activeDialog.close();\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n    }\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\" (click)=\\\"openWithComponent()\\\" i18n>Click me!</button>\\n\";","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-dialog-with-static-backdrop-example\\\",\\n    templateUrl: \\\"./dialog-with-static-backdrop.example.component.html\\\",\\n})\\nexport class DialogWithStaticBackdropExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public openWith(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\", backdrop: \\\"static\\\"});\\n    }\\n    public openWithout(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\", keyboard: false, backdrop: \\\"static\\\"});\\n    }\\n\\n    public actionDone(): void {\\n        this.toastService.success({message: $localize `Action Done!`, title: $localize `Event`});\\n        this.activeDialog.close();\\n    }\\n\\n    public actionCanceled(): void {\\n        this.toastService.info({message: $localize `Action Cancelled!`, title: $localize `Event`});\\n        this.activeDialog.close();\\n    }\\n}\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiBusyModule,\\n    NuiButtonModule,\\n    NuiDateTimePickerModule,\\n    NuiDialogModule,\\n    NuiDocsModule,\\n    NuiIconModule,\\n    NuiMenuModule,\\n    NuiMessageModule,\\n    NuiPopoverModule,\\n    NuiPopupModule,\\n    NuiSelectModule,\\n    NuiSelectV2Module,\\n    NuiSpinnerModule,\\n    NuiTimeFrameBarModule,\\n    NuiTimeFramePickerModule,\\n    NuiTooltipModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    ComponentAsContentExampleComponent,\\n    ConfirmationDialogExampleComponent,\\n    DialogActionBeforeClosureExampleComponent,\\n    DialogAfterOpenedExampleComponent,\\n    DialogContentExampleComponent,\\n    DialogCustomClassExampleComponent,\\n    DialogDocsComponent,\\n    DialogInsideOverlayExampleComponent,\\n    DialogPositionExampleComponent,\\n    DialogSeverityExampleComponent,\\n    DialogSizesExampleComponent,\\n    DialogVisualTestComponent,\\n    DialogWithKeyboardExampleComponent,\\n    DialogWithStaticBackdropExampleComponent,\\n    DialogZIndexTestComponent,\\n    HeaderButtonsExampleComponent,\\n    SimpleDialogExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: DialogDocsComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"dialog-test\\\",\\n        component: DialogDocsComponent,\\n        data: {\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"zindex-test\\\",\\n        component: DialogZIndexTestComponent,\\n    },\\n    {\\n        path: \\\"dialog-overlay\\\",\\n        component: DialogVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"dialog-actions-before-closure\\\",\\n        component: DialogActionBeforeClosureExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"dialog-visual-test\\\",\\n        component: DialogVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiDialogModule,\\n        NuiDocsModule,\\n        NuiButtonModule,\\n        NuiMessageModule,\\n        NuiSelectV2Module,\\n        RouterModule.forChild(routes),\\n        NuiSelectModule,\\n        NuiDialogModule,\\n        NuiDocsModule,\\n        NuiButtonModule,\\n        NuiMessageModule,\\n        NuiSelectModule,\\n        NuiPopoverModule,\\n        NuiTooltipModule,\\n        NuiDateTimePickerModule,\\n        NuiBusyModule,\\n        NuiSpinnerModule,\\n        NuiSelectV2Module,\\n        NuiMenuModule,\\n        NuiPopupModule,\\n        NuiTimeFrameBarModule,\\n        NuiTimeFramePickerModule,\\n        NuiIconModule,\\n    ],\\n    declarations: [\\n        DialogContentExampleComponent,\\n        ComponentAsContentExampleComponent,\\n        ConfirmationDialogExampleComponent,\\n        DialogCustomClassExampleComponent,\\n        DialogDocsComponent,\\n        DialogWithKeyboardExampleComponent,\\n        DialogPositionExampleComponent,\\n        DialogSeverityExampleComponent,\\n        DialogSizesExampleComponent,\\n        DialogInsideOverlayExampleComponent,\\n        DialogVisualTestComponent,\\n        HeaderButtonsExampleComponent,\\n        SimpleDialogExampleComponent,\\n        DialogWithStaticBackdropExampleComponent,\\n        DialogZIndexTestComponent,\\n        DialogActionBeforeClosureExampleComponent,\\n        DialogAfterOpenedExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n    entryComponents: [DialogContentExampleComponent],\\n})\\nexport class DialogModule {\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiDateTimePickerModule,\n    NuiDialogModule,\n    NuiDocsModule,\n    NuiIconModule,\n    NuiMenuModule,\n    NuiMessageModule,\n    NuiPopoverModule,\n    NuiPopupModule,\n    NuiSelectModule,\n    NuiSelectV2Module,\n    NuiSpinnerModule,\n    NuiTimeFrameBarModule,\n    NuiTimeFramePickerModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    ComponentAsContentExampleComponent,\n    ConfirmationDialogExampleComponent,\n    DialogActionBeforeClosureExampleComponent,\n    DialogAfterOpenedExampleComponent,\n    DialogContentExampleComponent,\n    DialogCustomClassExampleComponent,\n    DialogDocsComponent,\n    DialogInsideOverlayExampleComponent,\n    DialogPositionExampleComponent,\n    DialogSeverityExampleComponent,\n    DialogSizesExampleComponent,\n    DialogVisualTestComponent,\n    DialogWithKeyboardExampleComponent,\n    DialogWithStaticBackdropExampleComponent,\n    DialogZIndexTestComponent,\n    HeaderButtonsExampleComponent,\n    SimpleDialogExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: DialogDocsComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"dialog-test\",\n        component: DialogDocsComponent,\n        data: {\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"zindex-test\",\n        component: DialogZIndexTestComponent,\n    },\n    {\n        path: \"dialog-overlay\",\n        component: DialogVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"dialog-actions-before-closure\",\n        component: DialogActionBeforeClosureExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"dialog-visual-test\",\n        component: DialogVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiSelectV2Module,\n        RouterModule.forChild(routes),\n        NuiSelectModule,\n        NuiDialogModule,\n        NuiDocsModule,\n        NuiButtonModule,\n        NuiMessageModule,\n        NuiSelectModule,\n        NuiPopoverModule,\n        NuiTooltipModule,\n        NuiDateTimePickerModule,\n        NuiBusyModule,\n        NuiSpinnerModule,\n        NuiSelectV2Module,\n        NuiMenuModule,\n        NuiPopupModule,\n        NuiTimeFrameBarModule,\n        NuiTimeFramePickerModule,\n        NuiIconModule,\n    ],\n    declarations: [\n        DialogContentExampleComponent,\n        ComponentAsContentExampleComponent,\n        ConfirmationDialogExampleComponent,\n        DialogCustomClassExampleComponent,\n        DialogDocsComponent,\n        DialogWithKeyboardExampleComponent,\n        DialogPositionExampleComponent,\n        DialogSeverityExampleComponent,\n        DialogSizesExampleComponent,\n        DialogInsideOverlayExampleComponent,\n        DialogVisualTestComponent,\n        HeaderButtonsExampleComponent,\n        SimpleDialogExampleComponent,\n        DialogWithStaticBackdropExampleComponent,\n        DialogZIndexTestComponent,\n        DialogActionBeforeClosureExampleComponent,\n        DialogAfterOpenedExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n    entryComponents: [DialogContentExampleComponent],\n})\nexport class DialogModule {\n}\n","export default \"<ng-template #content let-close=\\\"close\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"onButtonClick('Cancel')\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"onButtonClick('Action')\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-small-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, 'sm')\\\">Show Small Dialog</button>\\n<button id=\\\"nui-demo-medium-dialog-btn\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, 'md')\\\">Show Medium Dialog</button>\\n<button id=\\\"nui-demo-large-dialog-btn\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"open(content, 'lg')\\\">Show Large Dialog</button>\\n\";","export default \"<ng-template #content let-close=\\\"close\\\" let-dismiss=\\\"dismiss\\\">\\n    <nui-dialog-header title=\\\"Dialog title\\\" i18n-title (closed)=\\\"close()\\\"></nui-dialog-header>\\n    <div class=\\\"dialog-body\\\">\\n        <p i18n>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam maximus faucibus bibendum.\\n            Aenean feugiat interdum leo sed posuere. Etiam at pulvinar enim, nec interdum purus.\\n            Duis elit metus, lobortis vitae quam a, malesuada cursus quam. Duis vel lacinia purus.\\n            Maecenas eget arcu ac ante sagittis eleifend vel ut purus.\\n            Pellentesque sit amet semper ipsum, eu vulputate tortor. Aliquam vitae nisi augue.\\n            Duis non erat sit amet sem venenatis accumsan at ullamcorper lorem. Morbi non turpis nibh.\\n        </p>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"actionCanceled(); close()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"actionDone(); close()\\\" i18n>\\n            Action\\n        </button>\\n    </nui-dialog-footer>\\n</ng-template>\\n\\n<button id=\\\"nui-demo-with-keyboard-dialog-btn\\\" nui-button type=\\\"button\\\" (click)=\\\"openWith(content)\\\" i18n>Close me with ESC button</button>\\n<button id=\\\"nui-demo-without-keyboard-dialog-btn\\\" class=\\\"ml-4\\\" nui-button type=\\\"button\\\" (click)=\\\"openWithout(content)\\\" i18n>ESC button won't close me</button>\\n\";","export default \"import { Component, Inject, TemplateRef } from \\\"@angular/core\\\";\\nimport { DialogService, NuiDialogRef, ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-header-buttons-example\\\",\\n    templateUrl: \\\"./header-buttons.example.component.html\\\",\\n})\\nexport class HeaderButtonsExampleComponent {\\n    private activeDialog: NuiDialogRef;\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService,\\n                @Inject(ToastService) private toastService: ToastService) {\\n    }\\n\\n    public open(content: TemplateRef<string>) {\\n        this.activeDialog = this.dialogService.open(content, {size: \\\"sm\\\"});\\n    }\\n\\n    public onButtonClick(title: string) {\\n        title === \\\"Action\\\" ? this.actionDone() : this.actionCanceled();\\n        this.activeDialog.close();\\n    }\\n\\n    private actionDone(): void {\\n        this.toastService.success({\\n            message: $localize `Action Done!`,\\n            title: $localize `Event`,\\n        });\\n    }\\n\\n    private actionCanceled(): void {\\n        this.toastService.info({\\n            message: $localize `Action Cancelled!`,\\n            title: $localize `Event`,\\n        });\\n    }\\n\\n}\\n\";"],"sourceRoot":"webpack:///"}