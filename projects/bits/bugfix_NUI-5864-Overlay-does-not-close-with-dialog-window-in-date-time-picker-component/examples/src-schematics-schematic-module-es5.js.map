{"version":3,"sources":["webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination.component.less","webpack:///demo/src/schematics/list/basic-list/basic-list.component.ts?f867","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?f8bf","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts?f98b","webpack:///demo/src/schematics/list/selection-list/selection-list.component.html?f9d5","webpack:///node_modules/graphql/jsutils/defineInspect.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/types.ts?fa3e","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.component.ts","webpack:///node_modules/apollo-angular/__ivy_ngcc__/fesm2015/ngApollo.js","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.ts?fca8","webpack:///demo/src/schematics/list/selection-list/types.ts?fd42","webpack:///node_modules/graphql/language/kinds.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.ts?feef","webpack:///node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.ts?d3e0","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.example.component.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.example.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.ts","webpack:///demo/src/schematics/table/basic-table/basic-table.component.html?d070","webpack:///demo/src/schematics/table/table-with-virtual-scroll/types.ts","webpack:///node_modules/graphql/version.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/types.ts?d149","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.example.component.ts?d1ac","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.html?d1eb","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list-data-source.service.ts?d205","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data-source.service.ts?d222","webpack:///node_modules/graphql/polyfills/find.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.less","webpack:///demo/src/schematics/utils/schematic-docs-page/schematic-docs-page.component.html?d7c9","webpack:///node_modules/graphql/type/scalars.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.component.less","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/table/table-with-search/table-with-search.component.html?d43e","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/virtual-scroll-custom-strategy.service.ts?d43b","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination-data.ts?d4dc","webpack:///node_modules/graphql/polyfills/objectValues.mjs","webpack:///demo/src/schematics/table/table-with-pagination/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?d5fa","webpack:///node_modules/apollo-link/lib/bundle.esm.js","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.ts?d6b1","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.html?d6cb","webpack:///node_modules/graphql/jsutils/invariant.mjs","webpack:///node_modules/graphql/polyfills/symbols.mjs","webpack:///node_modules/graphql/subscription/index.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.ts?d8b7","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.html?d8cf","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/list/paginated-list/paginated-list-data.ts?d8de","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.component.html?d8ed","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.html?d94f","webpack:///demo/src/schematics/utils/schematic-docs-command/schematic-docs-command.component.ts?d948","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/table/table-with-search/types.ts?d9da","webpack:///demo/src/schematics/utils/schematic-docs-example/schematic-docs-example.component.ts?da1c","webpack:///demo/src/schematics/table/table-with-search/table-with-search.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts?da49","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?dff0","webpack:///node_modules/graphql/graphql.mjs","webpack:///demo/src/schematics/table/basic-table/basic-table.component.ts?dc6f","webpack:///node_modules/graphql/utilities/astFromValue.mjs","webpack:///(webpack)/buildin/harmony-module.js","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.html?dd42","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list.component.html?dda6","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection.component.html","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection.component.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.module.ts","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list-data.ts?de3c","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/types.ts?dea9","webpack:///node_modules/graphql/utilities/printSchema.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/virtual-scroll-custom-strategy.service.ts?e0d3","webpack:///node_modules/graphql/utilities/TypeInfo.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.module.ts?e25a","webpack:///node_modules/graphql/type/directives.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination.component.ts?e2e6","webpack:///node_modules/optimism/lib/bundle.esm.js","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.module.ts?e7e0","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.module.ts?e759","webpack:///node_modules/graphql/type/schema.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/types.ts?e78d","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll-data.ts?e7db","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.ts?e417","webpack:///demo/src/schematics/utils/schematic-docs-cli-option/schematic-docs-cli-option.component.ts?e417","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.component.less","webpack:///node_modules/graphql/validation/rules/ScalarLeafsRule.mjs","webpack:///node_modules/graphql/utilities/assertValidName.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data-source.service.ts?e4f7","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?e503","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort-data-source.service.ts?e523","webpack:///node_modules/graphql/execution/values.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/utils/schematic-docs-command/schematic-docs-command.component.html?e685","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.html?e6df","webpack:///node_modules/graphql/utilities/coerceInputValue.mjs","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.example.component.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.example.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.html?e9a1","webpack:///node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.ts?eb27","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree-data-source.service.ts?efa4","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.html","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.service.ts?ed3f","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts?ed6f","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","webpack:///demo/src/schematics/list/search-list/search-list.component.ts?edb6","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.less","webpack:///node_modules/apollo-client/node_modules/symbol-observable/es/ponyfill.js","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.component.ts?f3fe","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts?f3f2","webpack:///node_modules/graphql/language/index.mjs","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?f011","webpack:///demo/src/schematics/table/basic-table/basic-table.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.html?f0df","webpack:///demo/src/schematics/utils/recursive-object-view.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/public-api.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.module.ts?f1e4","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data.ts?f1e8","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?f29a","webpack:///node_modules/graphql/jsutils/identityFunc.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.ts","webpack:///node_modules/graphql/subscription/subscribe.mjs","webpack:///node_modules/graphql/type/validate.mjs","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll.component.ts?f49a","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data-source.service.ts?f4cc","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.component.html?f58d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort.component.html?f5b7","webpack:///demo/src/schematics/table/table-schematic-example.component.ts","webpack:///demo/src/schematics/table/table-schematic-example.component.html","webpack:///node_modules/fast-json-stable-stringify/index.js","webpack:///node_modules/zen-observable/index.js","webpack:///node_modules/graphql/utilities/valueFromASTUntyped.mjs","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.module.ts","webpack:///node_modules/graphql/utilities/findBreakingChanges.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/public-api.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module.ts?02ff","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?0419","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?048e","webpack:///node_modules/graphql/language/blockString.mjs","webpack:///demo/src/schematics/table/table-with-search/table-with-search-data.ts?04e1","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?0568","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/public-api.ts","webpack:///demo/src/schematics/utils/schematic-docs-page/schematic-docs-page.component.ts?0be8","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data.ts?0bb5","webpack:///node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.component.html","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source.service.ts","webpack:///demo/src/schematics/list/selection-list/selection-list-data.ts?0945","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort-data.ts?095b","webpack:///node_modules/graphql/language/lexer.mjs","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection.component.ts?0a05","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.ts?0b1c","webpack:///node_modules/graphql/jsutils/promiseReduce.mjs","webpack:///demo/src/schematics/utils/schematic-json.component.ts?0fd7","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/types.ts?0c5f","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filter-group/basic-filter-group/item-picker/item-picker.component.html?0d35","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.module.ts?0d5d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.ts?0d6c","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.ts?0dc1","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.component.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/virtual-scroll-custom-strategy.service.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.module.ts?0e08","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filter-group/filter-group-schematic.example.component.ts?0f0a","webpack:///node_modules/graphql/jsutils/toObjMap.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data-source.service.ts","webpack:///node_modules/graphql/language/parser.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.service.ts?1111","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.module.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.component.less","webpack:///node_modules/graphql/validation/validate.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.html?1256","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?127b","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/list/search-list/search-list-data-source.service.ts?1308","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.ts?133a","webpack:///node_modules/graphql/language/directiveLocation.mjs","webpack:///node_modules/graphql/utilities/introspectionFromSchema.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.ts?1421","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.ts?1440","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.component.less","webpack:///node_modules/graphql/validation/specifiedRules.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.ts?155a","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/utils/recursive-object-view.component.ts?15a0","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.ts","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort.component.ts?160d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data.ts?1605","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.less","webpack:///demo/src/schematics/list/basic-list/types.ts?18ee","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.module.ts?1938","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.service.ts?1994","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?19d2","webpack:///demo/src/schematics/utils/schematic-docs-cli-option/schematic-docs-cli-option.component.html","webpack:///demo/src/schematics/utils/schematic-docs-cli-option/schematic-docs-cli-option.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.component.html?1ac4","webpack:///node_modules/graphql/execution/index.mjs","webpack:///demo/src/schematics/list/paginated-list/paginated-list.component.html?1b10","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.ts","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/types.ts","webpack:///demo/src/schematics/list/list-schematics-outlet.component.ts?1c01","webpack:///node_modules/extract-files/lib/ReactNativeFile.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.component.html?1c27","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.ts?1c7a","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.ts?1ca7","webpack:///demo/src/schematics/filter-group/basic-filter-group/item-picker/item-picker.module.ts?1d1d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data.ts?1d5f","webpack:///demo/src/schematics/list/paginated-list/paginated-list-data-source.service.ts?1db8","webpack:///demo/src/schematics/list/search-list/search-list-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.service.ts?1e72","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?1e92","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list.component.ts?1f33","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.ts?239f","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///node_modules/graphql/type/index.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.service.ts?208d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/types.ts?2135","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts?219f","webpack:///node_modules/apollo-angular-link-http/__ivy_ngcc__/fesm2015/ngApolloLinkHttp.js","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.module.ts?22e1","webpack:///demo/src/schematics/list/search-list/search-list-data.ts?2338","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts?2479","webpack:///demo/src/schematics/filter-group/basic-filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filter-group/basic-filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.html?2500","webpack:///node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/list/basic-list/basic-list-data.ts?260a","webpack:///node_modules/graphql/language/tokenKind.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.module.ts","webpack:///node_modules/apollo-cache-inmemory/lib/bundle.esm.js","webpack:///demo/src/schematics/filtered-view/filtered-view-schematics.outlet.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.example.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.example.component.html","webpack:///node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.ts?2871","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module.ts?28c0","webpack:///demo/src/schematics/filter-group/fake-http.service.ts?28f4","webpack:///demo/src/schematics/filtered-view/filtered-view-schematics.outlet.component.ts?2915","webpack:///demo/src/schematics/table/basic-table/basic-table.component.html","webpack:///demo/src/schematics/table/basic-table/basic-table.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.module.ts","webpack:///node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?2a28","webpack:///demo/src/schematics/schematics-docs.component.html?2add","webpack:///node_modules/graphql/language/visitor.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.service.ts?2c7c","webpack:///node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module.ts?2cf7","webpack:///node_modules/graphql/type/introspection.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?2e1d","webpack:///demo/src/schematics/filtered-view/filtered-view-schematic.example.component.ts?2f0b","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data-source.service.ts?335d","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/list/basic-list/basic-list.component.html","webpack:///demo/src/schematics/list/basic-list/basic-list.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html?3183","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/table/table-with-search/table-with-search-data-source.service.ts?31a1","webpack:///node_modules/graphql/utilities/valueFromAST.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///schematics/src sync ^\\.\\/.*\\/schema\\.json$","webpack:///node_modules/graphql/jsutils/instanceOf.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.html?3330","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filter-group/filter-group-schematic.example.component.html?3422","webpack:///demo/src/schematics/filter-group/basic-filter-group/item-picker/item-picker.component.ts?34b8","webpack:///demo/src/schematics/table/table-with-search/table-with-search-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/types.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.module.ts?35dc","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?361e","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts?3641","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module.ts?3725","webpack:///node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module.ts?3bd6","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.html?3892","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.component.ts?393f","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.less","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.component.ts?3990","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source.service.ts?3a86","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.ts?3aa6","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.ts?3ac1","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?3aff","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.less","webpack:///demo/src/schematics/utils/schematic-docs-example/schematic-docs-example.component.ts","webpack:///demo/src/schematics/utils/schematic-docs-example/schematic-docs-example.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?3c82","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.component.ts?3c96","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.html?3d4e","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.html?3dfb","webpack:///demo/src/schematics/table/table-with-sort/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.service.ts?3e44","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.module.ts?3e5f","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts?3ed3","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.ts?405f","webpack:///demo/src/schematics/filtered-view/filtered-view-schematic.example.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-schematic.example.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/utils/schematic-docs-command/schematic-docs-command.component.ts","webpack:///demo/src/schematics/utils/schematic-docs-command/schematic-docs-command.component.html","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.module.ts","webpack:///node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list.component.html","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list.component.ts","webpack:///node_modules/graphql/polyfills/arrayFrom.mjs","webpack:///node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table-data.ts?4763","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?4424","webpack:///node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?450a","webpack:///node_modules/apollo-utilities/lib/bundle.esm.js","webpack:///node_modules/graphql/error/formatError.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?4594","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html?4599","webpack:///demo/src/schematics/schematics-docs.component.html","webpack:///demo/src/schematics/schematics-docs.component.ts","webpack:///demo/src/schematics/list/list-schematic.example.component.ts?4689","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.ts","webpack:///node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.module.ts?4ba5","webpack:///node_modules/graphql/polyfills/isInteger.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.less","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination.component.html?4898","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.html?48da","webpack:///demo/src/schematics/filter-group/fake-http.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///node_modules/graphql/utilities/getOperationAST.mjs","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll-data-source.service.ts","webpack:///node_modules/graphql/utilities/stripIgnoredCharacters.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/public-api.ts","webpack:///node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.html?4faa","webpack:///node_modules/graphql/jsutils/suggestionList.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.module.ts?4c51","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.module.ts","webpack:///node_modules/graphql/utilities/buildClientSchema.mjs","webpack:///demo/src/schematics/list/paginated-list/paginated-list-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.less","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.example.component.ts?4ea6","webpack:///node_modules/graphql/jsutils/memoize3.mjs","webpack:///node_modules/graphql/index.mjs","webpack:///node_modules/extract-files/lib/extractFiles.mjs","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.example.component.html?50e3","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.ts?515a","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/table/basic-table/types.ts?526d","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/table/table-with-selection/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-schematic.example.component.html?576f","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/virtual-scroll-custom-strategy.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.component.html","webpack:///demo/src/schematics/table/table-with-virtual-scroll/types.ts?558f","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts?559d","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list-data.ts?55af","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.ts","webpack:///node_modules/graphql/validation/rules/UniqueTypeNamesRule.mjs","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll.component.html","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group.service.ts","webpack:///node_modules/graphql/jsutils/keyValMap.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/table/table-with-selection/types.ts?5a28","webpack:///demo/src/schematics/utils/schematic-docs-example/schematic-docs-example.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.html?5a48","webpack:///demo/src/schematics/list/selection-list/types.ts","webpack:///demo/src/schematics/table/table-with-search/types.ts","webpack:///node_modules/graphql/jsutils/mapValue.mjs","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.component.html?5f49","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data.ts?5f7a","webpack:///node_modules/graphql/utilities/lexicographicSortSchema.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/public-api.ts","webpack:///node_modules/graphql/utilities/index.mjs","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.example.component.ts?5d09","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination.component.html","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination.component.ts","webpack:///node_modules/graphql/language/predicates.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.module.ts?5e4e","webpack:///demo/src/schematics/table/table-with-sort/types.ts?5e7c","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.module.ts","webpack:///node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs","webpack:///node_modules/apollo-cache/lib/bundle.esm.js","webpack:///node_modules/graphql/polyfills/objectEntries.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/public-api.ts","webpack:///node_modules/graphql/jsutils/naturalCompare.mjs","webpack:///node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module.ts?6094","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.less","webpack:///demo/src/schematics/schematic.module.ts?60f6","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.less","webpack:///node_modules/graphql/utilities/buildASTSchema.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.module.ts?6284","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module.ts?677f","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data-source.service.ts?6486","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.ts","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.module.ts?65e8","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.html?6732","webpack:///demo/src/schematics/list/basic-list/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.less","webpack:///node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.ts?6974","webpack:///demo/src/schematics/table/table-schematic-example.component.html?6975","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data.ts?69c3","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.component.html?6a0b","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/list/search-list/search-list.component.html?6aee","webpack:///node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs","webpack:///node_modules/graphql/type/definition.mjs","webpack:///node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///node_modules/zen-observable-ts/lib/bundle.esm.js","webpack:///demo/src/schematics/table/table-schematic-example.component.ts?6c0c","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.less","webpack:///demo/src/schematics/table/basic-table/basic-table-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module.ts","webpack:///demo/src/schematics/utils/schematic-docs-example/schematic-docs-example.component.html?6d16","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.ts?6dd0","webpack:///node_modules/apollo-angular-link-http-common/__ivy_ngcc__/fesm2015/ngApolloLinkHttpCommon.js","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?6eec","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.component.ts?6ef9","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.component.html?7033","webpack:///demo/src/schematics/table/table-with-search/table-with-search.component.ts?70d2","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.html?70fe","webpack:///demo/src/schematics/utils/schematic-docs-page/schematic-docs-page.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.ts","webpack:///node_modules/graphql/utilities/extendSchema.mjs","webpack:///demo/src/schematics/table/table-with-pagination/types.ts?725d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?7286","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data-source.service.ts?72f1","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/public-api.ts","webpack:///demo/src/schematics/table/basic-table/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.ts?77ca","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/public-api.ts","webpack:///node_modules/apollo-client/bundle.esm.js","webpack:///node_modules/graphql/language/printer.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.html","webpack:///node_modules/graphql/error/GraphQLError.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?7634","webpack:///node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.mjs","webpack:///node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.ts?7b51","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.ts?7810","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.html?790d","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.module.ts?796b","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.less","webpack:///node_modules/graphql/jsutils/Path.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data-source.service.ts","webpack:///node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs","webpack:///demo/src/schematics/table/table-with-search/table-with-search.component.html","webpack:///demo/src/schematics/table/table-with-search/table-with-search.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.example.component.html?8382","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.html?83d1","webpack:///node_modules/graphql/jsutils/promiseForObject.mjs","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?83db","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html?8038","webpack:///node_modules/graphql/utilities/getOperationRootType.mjs","webpack:///demo/src/schematics/list/paginated-list/paginated-list.component.ts?81d7","webpack:///node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection.component.html?826c","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll-data.ts","webpack:///node_modules/graphql/utilities/concatAST.mjs","webpack:///node_modules/extract-files/lib/index.mjs","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list.component.less","webpack:///node_modules/@wry/context/lib/context.esm.js","webpack:///demo/src/schematics/list/basic-list/basic-list.component.html?847a","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.module.ts?84a5","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.html","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.ts","webpack:///node_modules/graphql/utilities/getIntrospectionQuery.mjs","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group.service.ts","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection-data-source.service.ts?8602","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.html?8637","webpack:///node_modules/graphql/utilities/findDeprecatedUsages.mjs","webpack:///demo/src/schematics/list/list-schematic.example.component.ts","webpack:///demo/src/schematics/list/list-schematic.example.component.html","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module.ts","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.module.ts","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.ts?8b79","webpack:///demo/src/schematics/filter-group/dialog-filter-group/public-api.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.component.ts?8b93","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.ts?890f","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data-source.service.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.module.ts?89bf","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group.service.ts?8a00","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll.component.html?8a86","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data-source.service.ts?8ab0","webpack:///node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.html?8f47","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.html?8f93","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.html?8fd8","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-group.service.ts?8fda","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data.ts","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.module.ts?8c2c","webpack:///node_modules/graphql/error/locatedError.mjs","webpack:///node_modules/graphql/validation/ValidationContext.mjs","webpack:///demo/src/schematics/utils/schematic-docs-cli-option/schematic-docs-cli-option.component.html?8cf7","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.module.ts?8df3","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.component.less","webpack:///demo/src/schematics/utils/schematic-json.component.ts","webpack:///node_modules/graphql/jsutils/safeArrayFrom.mjs","webpack:///node_modules/graphql/jsutils/keyMap.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.less","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.html?9081","webpack:///demo/src/schematics/list/selection-list/selection-list-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.html","webpack:///node_modules/graphql/language/ast.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.html?926c","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.html?92f7","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.module.ts?9318","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.ts?9783","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.module.ts?97ab","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.ts?97b8","webpack:///node_modules/graphql/polyfills/isFinite.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.service.ts?9451","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?9454","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/types.ts?94af","webpack:///node_modules/graphql/jsutils/isAsyncIterable.mjs","webpack:///node_modules/graphql-tag/src/index.js","webpack:///node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/types.ts","webpack:///demo/src/schematics/list/paginated-list/paginated-list.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html?98bd","webpack:///demo/src/schematics/filter-group/basic-filter-group/public-api.ts","webpack:///demo/src/schematics/list/selection-list/selection-list.component.less","webpack:///node_modules/graphql/error/index.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data.ts?9ac0","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.ts","webpack:///node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.ts?9cb4","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.less","webpack:///node_modules/graphql/language/source.mjs","webpack:///demo/src/schematics/schematics-docs.component.ts?9e6d","webpack:///demo/src/schematics/list/selection-list/selection-list.component.ts?9e9f","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html?9eb8","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.html?a005","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-group.component.html?a03c","webpack:///demo/src/schematics/list/list-schematic.example.component.html?a0f2","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.ts","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/public-api.ts","webpack:///demo/src/schematics/list/search-list/search-list.component.html","webpack:///demo/src/schematics/list/search-list/search-list.component.ts","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html?a2d4","webpack:///node_modules/graphql/error/syntaxError.mjs","webpack:///demo/src/schematics/list/paginated-list/paginated-list-data.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.html","webpack:///node_modules/zen-observable/lib/Observable.js","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.module.ts?a4ca","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.service.ts","webpack:///node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts?a57a","webpack:///node_modules/graphql/jsutils/didYouMean.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filter-group/basic-filter-group/item-picker/item-picker.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.ts?ab48","webpack:///node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-group.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.module.ts","webpack:///node_modules/ts-invariant/lib/invariant.esm.js","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.html?a9a9","webpack:///node_modules/@wry/equality/lib/equality.esm.js","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?afb3","webpack:///node_modules/apollo-client/node_modules/symbol-observable/es/index.js","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.html?ac8d","webpack:///demo/src/schematics/table/table-with-selection/table-with-selection-data.ts?aca1","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort.component.html","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort.component.ts","webpack:///demo/src/schematics/list/basic-list/basic-list.component.less","webpack:///node_modules/graphql/jsutils/inspect.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.html?adbe","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/types.ts?add0","webpack:///demo/src/schematics/table/table-with-pagination/table-with-pagination-data-source.service.ts?ae52","webpack:///demo/src/schematics/list/paginated-list/paginated-list.component.html","webpack:///demo/src/schematics/list/paginated-list/paginated-list.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/list/paginated-list/types.ts","webpack:///node_modules/graphql/utilities/typeComparators.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.html?b15e","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/list/search-list/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.ts?b255","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.ts?b28d","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.html?b28a","webpack:///demo/src/schematics/table/basic-table/basic-table-data.ts?b2ec","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table-data.ts","webpack:///node_modules/graphql/jsutils/devAssert.mjs","webpack:///demo/src/schematics/table/table-with-virtual-scroll/table-with-virtual-scroll-data-source.service.ts?b7b7","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.html?b416","webpack:///node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs","webpack:///demo/src/schematics/list/list-schematics-outlet.component.ts","webpack:///demo/src/schematics/list/basic-list/basic-list-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filter-group/public-api.ts","webpack:///node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs","webpack:///demo/src/schematics/list/search-list/search-list.component.less","webpack:///node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs","webpack:///demo/src/schematics/table/table-with-search/table-with-search-data-source.service.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.html?b6ed","webpack:///demo/src/schematics/list/virtual-scroll-list/virtual-scroll-list-data-source.service.ts","webpack:///node_modules/graphql/jsutils/printPathArray.mjs","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.module.ts","webpack:///node_modules/apollo-cache-inmemory/node_modules/tslib/tslib.es6.js","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/custom-template-filter-group.component.ts?b80f","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.component.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.html?b99e","webpack:///node_modules/graphql/validation/index.mjs","webpack:///node_modules/graphql/utilities/typeFromAST.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.less","webpack:///demo/src/schematics/filter-group/dialog-filter-group/dialog-filter-group.example.component.html?bfe4","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.service.ts?bfad","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.less","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.html?bd01","webpack:///node_modules/graphql/validation/rules/KnownDirectivesRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filter-group/public-api.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.component.ts?be9c","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filter-group/public-api.ts","webpack:///demo/src/schematics/filter-group/filter-group-schematic.example.component.ts","webpack:///demo/src/schematics/filter-group/filter-group-schematic.example.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-with-list/filtered-view-with-list.component.less","webpack:///demo/src/schematics/schematic.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filtered-view-with-table.module.ts?c3ec","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.html?c38a","webpack:///node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs","webpack:///node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.component.html?c0a8","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/types.ts","webpack:///demo/src/schematics/filter-group/basic-filter-group/basic-filter-group.component.less","webpack:///demo/src/schematics/utils/schematic-docs-page/schematic-docs-page.component.ts","webpack:///demo/src/schematics/utils/schematic-docs-page/schematic-docs-page.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.html","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html?c78c","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module.ts?c4a8","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts?c515","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.html","webpack:///node_modules/lodash/sortBy.js","webpack:///demo/src/schematics/table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html","webpack:///node_modules/graphql/language/location.mjs","webpack:///demo/src/schematics/table/table-with-sort/table-with-sort-data-source.service.ts","webpack:///node_modules/graphql/execution/execute.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data-source.service.ts?c93e","webpack:///demo/src/schematics/list/search-list/search-list-data.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts?c983","webpack:///node_modules/extract-files/lib/isExtractableFile.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.less","webpack:///demo/src/schematics/filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html?ca15","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.html?ca46","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/filter-group/filter-group.component.less","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?a2d1","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.ts?cfe2","webpack:///node_modules/graphql/jsutils/isPromise.mjs","webpack:///node_modules/graphql/utilities/separateOperations.mjs","webpack:///demo/src/schematics/filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.ts?cc28","webpack:///demo/src/schematics/list/selection-list/selection-list.component.html","webpack:///demo/src/schematics/list/selection-list/selection-list.component.ts","webpack:///demo/src/schematics/list/virtual-scroll-list/types.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/types.ts?ccfd","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.service.ts?cd1a","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.ts?cd2d","webpack:///demo/src/schematics/filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.ts?cdcb","webpack:///demo/src/schematics/filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data.ts?ce40","webpack:///demo/src/schematics/filter-group/dialog-filter-group/item-picker/item-picker.component.ts?ce52","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.ts","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.html","webpack:///node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.html?ce9b","webpack:///node_modules/lodash/difference.js","webpack:///node_modules/graphql/language/printLocation.mjs","webpack:///demo/src/schematics/filtered-view/filtered-view-with-table/types.ts?cf0e","webpack:///node_modules/graphql/subscription/mapAsyncIterator.mjs"],"names":["defineInspect","classObject","fn","prototype","toJSON","inspect","FilterGroupService","filterGroupItem","valuesToAppend","numberToDisplay","itemsToDisplay","displayedCheckboxesValues","allFilterOptions","slice","map","item","value","checkedCheckboxes","selectedFilterValues","difference","length","forEach","diff","push","filter","flattenedValuesToAppend","splice","indexOf","FilteredViewWithTableComponent","dataSource","cd","filterGroupItems","id","title","expanded","down","displayValue","active","chipsDataSource","groupedItems","flatItems","overflowPopoverPosition","bottomLeft","topLeft","setData","outputsSubscription","outputsSubject","subscribe","data","recalculateCounts","detectChanges","child","applyFilters","updateChips","source","overflowSource","reducer","accumulator","currentValue","items","overflowCounter","reduce","popover","updatePosition","event","group","filterGroups","find","i","deselectFilterItemByValue","label","e","onClick","deselectAllFilterItems","selected","markForCheck","filterData","filterOption","counts","count","unsubscribe","provide","useClass","onClear","onClearAll","onChipsOverflow","fromPromise","promiseFn","subscriber","then","result","closed","next","complete","error","ZoneScheduler","zone","now","Date","work","delay","state","run","schedule","fixObservable","obs","wrapWithZone","ngZone","pipe","QueryRef","obsQuery","options","wrapped","valueChanges","useInitialLoading","Object","assign","getCurrentResult","undefined","partial","stale","queryId","currentResult","getLastResult","getLastError","resetLastResults","variables","refetch","fetchMoreOptions","fetchMore","subscribeToMore","mapFn","updateQuery","stopPolling","pollInterval","startPolling","opts","setOptions","tryFetch","fetchResults","setVariables","APOLLO_OPTIONS","APOLLO_NAMED_OPTIONS","ApolloBase","_client","ensureClient","watchQuery","query","mutate","extra","useZone","client","Error","checkInstance","Apollo","_ngZone","apolloOptions","apolloNamedOptions","Map","createDefault","name","hasOwnProperty","createNamed","isDefault","get","getClient","setClient","has","set","ɵfac","Apollo_Factory","t","ɵprov","token","factory","ctorParameters","type","decorators","args","ngDevMode","Query","apollo","use","document","Query_Factory","Mutation","mutation","Mutation_Factory","Subscription","Subscription_Factory","SelectPipe","obj","SelectPipe_Factory","ɵpipe","pure","PROVIDERS","DECLARATIONS","ApolloModule","ɵmod","ɵinj","ApolloModule_Factory","providers","ngJitMode","declarations","exports","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","KnownTypeNamesRule","context","schema","getSchema","existingTypesMap","getTypeMap","create","definedTypes","_i2","_context$getDocument$2","getDocument","definitions","def","typeNames","keys","concat","NamedType","node","_1","parent","_2","ancestors","typeName","_ancestors$","definitionNode","isSDL","isSDLNode","isStandardTypeName","suggestedTypes","standardTypeNames","reportError","Array","isArray","RANDOM_ARRAY","color","status","BasicFilterGroupExampleComponent","dataSourceService","filteringState","repeat","itemsSource","FilteredViewWithTreeComponent","ServerStatus","version","versionInfo","major","minor","patch","preReleaseTag","list","predicate","call","MAX_INT","MIN_INT","serializeInt","outputValue","coercedValue","serializeObject","num","Number","coerceInt","inputValue","GraphQLInt","description","serialize","parseValue","parseLiteral","valueNode","kind","parseInt","serializeFloat","coerceFloat","GraphQLFloat","parseFloat","valueOf","valueOfResult","serializeString","toString","coerceString","GraphQLString","serializeBoolean","coerceBoolean","GraphQLBoolean","serializeID","String","coerceID","GraphQLID","specifiedScalarTypes","isSpecifiedScalarType","some","_ref","objectValues","values","key","validateOperation","operation","OPERATION_FIELDS","_i","_a","LinkError","_super","message","link","_this","isTerminating","request","toPromise","observable","completed","Promise","resolve","reject","warn","makePromise","promise","observer","bind","fromError","errorValue","transformOperation","transformedOperation","extensions","operationName","createOperation","starting","setContext","getContext","defineProperty","enumerable","getKey","JSON","stringify","passthrough","op","forward","of","toLink","handler","ApolloLink","empty","from","links","x","y","split","test","left","right","leftLink","rightLink","first","second","firstLink","nextLink","execute","invariant","condition","booleanCondition","Boolean","SYMBOL_ITERATOR","Symbol","iterator","SYMBOL_ASYNC_ITERATOR","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","graphql","argsOrSchema","rootValue","contextValue","variableValues","fieldResolver","typeResolver","_arguments","arguments","graphqlImpl","graphqlSync","schemaValidationErrors","errors","syntaxError","validationErrors","astFromValue","astValue","ofType","itemType","valuesNodes","itemNode","fieldNodes","_i4","_objectValues2","getFields","field","fieldValue","fields","serialized","stringNum","integerStringRegExp","TypeError","module","originalModule","webpackPolyfill","children","l","TableWithSelectionComponent","changeDetection","isBusy","totalItems","displayedColumns","sortedColumn","sortBy","direction","ascending","columnsToApplySearch","page","pageSize","selectedItems","selection","isAllPages","include","exclude","destroy$","busy","val","registerComponent","table","getFilterComponents","search","componentInstance","paginator","total","inputChange","onSearch","$event","index","onSearchCancel","sortData","onSelectionChanged","changePagination","CustomTemplateFilterGroupCompositeModule","printSchema","printFilteredSchema","n","isDefinedType","printIntrospectionSchema","directiveFilter","typeFilter","directives","getDirectives","types","printSchemaDefinition","directive","printDirective","printType","join","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","printDescription","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printSpecifiedByUrl","printImplementedInterfaces","interfaces","getInterfaces","printFields","getTypes","possibleTypes","getValues","printDeprecated","deprecationReason","printBlock","f","printInputValue","printArgs","indentation","every","arg","defaultAST","defaultValue","argDecl","isRepeatable","locations","reason","reasonAST","scalar","specifiedByUrl","url","urlAST","firstInBlock","commentDescriptions","printDescriptionWithComments","preferMultipleLines","blockString","prefix","replace","comment","line","nameFieldsProperties","FilteredViewWithTreeDataSource","logger","response","Subregion","tree","buildTree","filters","mainRequest","generateQuery","mainResponse","languages","currencies","subregion","language","currency","queryString","k","nodeValue","code","hasChildren","includes","TypeInfo","getFieldDefFn","initialType","_schema","_typeStack","_parentTypeStack","_inputTypeStack","_fieldDefStack","_defaultValueStack","_directive","_argument","_enumValue","_getFieldDef","getFieldDef","_proto","getType","getParentType","getInputType","getParentInputType","getDefaultValue","getDirective","getArgument","getEnumValue","enter","namedType","parentType","fieldDef","fieldType","typeConditionAST","typeCondition","outputType","inputType","_this$getDirective","argDef","argType","fieldOrDirective","listType","objectType","inputFieldType","inputField","enumType","enumValue","getValue","leave","pop","fieldNode","visitWithTypeInfo","typeInfo","visitor","apply","ItemPickerModule","_defineProperties","target","props","descriptor","configurable","writable","_createClass","Constructor","protoProps","staticProps","isDirective","GraphQLDirective","assertDirective","config","_config$isRepeatable","_config$args","astNode","argName","argConfig","toConfig","GraphQLIncludeDirective","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","ARGUMENT_DEFINITION","INPUT_FIELD_DEFINITION","ENUM_VALUE","GraphQLSpecifiedByDirective","SCALAR","specifiedDirectives","isSpecifiedDirective","_ref2","FilterGroupDialogComponent","activeDialog","selectorService","itemPickerOptions","selectedValues","dialogClosed","emit","closeDialog","close","selectedOptions","getSelectedItems","acceptDialogFilters","defaultDispose","Cache","max","dispose","Infinity","newest","oldest","entry","getEntry","older","newer","clean","size","parentEntrySlot","reusableEmptyArray","emptySetPool","POOL_TARGET_SIZE","assert","optionalMessage","valueIs","a","b","len","valueGet","valueCopy","Entry","parents","Set","childValues","dirtyChildren","dirty","recomputing","recompute","rememberParent","maybeReportOrphan","mightBeDirty","reallyRecompute","setDirty","reportDirty","maybeUnsubscribe","forgetChildren","forgetChild","add","reportDirtyChild","reportCleanChild","originalChildren","withValue","recomputeNewValue","maybeSubscribe","setClean","reportClean","childValue","removeDirtyChild","dc","reportOrphan","_value","KeyTrie","weakness","lookup","array","lookupArray","getChildTrie","isObjRef","weak","WeakMap","strong","keyTrie","defaultMakeCacheKey","caches","wrap","originalFunction","cache","Math","pow","disposable","makeCacheKey","optimistic","hasValue","clear","isSchema","GraphQLSchema","assertSchema","_config$directives","__validationErrors","assumeValid","extensionASTNodes","_queryType","_mutationType","_subscriptionType","subscription","_directives","allReferencedTypes","_config$types2","collectReferencedTypes","_this$_directives2","_i6","_directive$args2","_typeMap","_subTypeMap","_implementationsMap","_i8","_arrayFrom2","_i10","_namedType$getInterfa2","iface","implementations","objects","_i12","_namedType$getInterfa4","_iface","_implementations","getPossibleTypes","abstractType","getImplementations","interfaceType","isPossibleType","possibleType","isSubType","maybeSubType","_i14","_abstractType$getType2","_i16","_implementations$obje2","_type","_i18","_implementations$inte2","_type2","_this$extensionASTNod","typeSet","_i20","_namedType$getTypes2","memberType","_i22","_namedType$getInterfa6","_i24","_i26","_field$args2","_i28","_objectValues4","_field","ScalarLeafsRule","Field","selectionSet","fieldName","typeStr","_fieldName","_typeStr","NAME_RX","assertValidName","isValidNameError","getVariableValues","varDefNodes","inputs","maxErrors","coerced","coerceVariableValues","onError","coercedValues","_loop","varDefNode","varName","variable","varType","varTypeStr","_varTypeStr","_varTypeStr2","path","invalidValue","originalError","_ret","getArgumentValues","_node$arguments","argumentNodes","argNodeMap","_def$args2","argumentNode","isNull","variableName","getDirectiveValues","directiveDef","directiveNode","prop","coerceInputValue","defaultOnError","coerceInputValueImpl","errorPrefix","coercedList","itemValue","itemPath","fieldDefs","_Object$keys2","suggestions","parseResult","CustomTemplateFilterGroupExampleComponent","icon","FragmentsOnCompositeTypesRule","InlineFragment","FragmentDefinition","RESULTS_PER_PAGE","FilterGroupComponent","dialogService","detectFilterChanges","filterChanged","showAllButtonClicked","onDestroy$","isExpanded","metadata","allCategories","getAllFilterOptionsList","checkbox","filterItems","deselectFilterItem","checked","inputViewContainer","element","nativeElement","dispatchEvent","Event","CUSTOM_SCROLL_ITEMS_PER_PAGE","FilterGroupCompositeDialogComponent","NoDeprecatedCustomRule","Argument","ObjectField","inputObjectDef","inputFieldDef","EnumValue","enumValueDef","enumTypeDef","symbolObservablePonyfill","root","RecursiveObjectViewComponent","orderOfKeys","object","identityFunc","FilteredViewTableWithCustomVirtualScrollComponent","subscribeFieldResolver","subscribeImpl","reportGraphQLError","sourcePromise","createSourceEventStream","mapSourceToResponse","payload","resultOrStream","exeContext","executeSubscription","responseNames","responseName","info","resolveResult","_fieldDef$subscribe","resolveFn","eventStream","validateSchema","SchemaValidationContext","validateRootTypes","validateDirectives","validateTypes","getErrors","assertValidSchema","_errors","nodes","_nodes","addError","_getOperationTypeNode","getOperationTypeNode","_getOperationTypeNode2","_getOperationTypeNode3","operationNodes","getAllSubNodes","_context$schema$getDi2","validateName","_arg$astNode","getDeprecatedDirectiveNode","validateInputObjectCircularRefs","createInputObjectCircularRefsValidator","typeMap","validateFields","validateInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","getAllNodes","_field$astNode","_arg$astNode2","_arg$astNode3","ifaceTypeNames","_type$getInterfaces2","getAllImplementsInterfaceNodes","validateTypeImplementsAncestors","validateTypeImplementsInterface","typeFieldMap","ifaceField","typeField","_ifaceField$astNode","_typeField$astNode","_ifaceField$args2","ifaceArg","typeArg","_ifaceArg$astNode","_typeArg$astNode","_loop2","_typeField$args2","ifaceInterfaces","_iface$getInterfaces2","transitive","union","memberTypes","includedTypeNames","getUnionMemberTypeNodes","enumValues","valueName","inputObj","_field$astNode2","_field$astNode3","visitedTypes","fieldPath","fieldPathIndexByTypeName","detectCycleRecursive","_i30","cycleIndex","cyclePath","pathStr","fieldObj","getter","subNodes","_i32","_getAllNodes2","_getter","typeNode","ifaceNode","unionNode","_definitionNode$direc","TableSchematicExampleComponent","useValue","cmp","cycles","aobj","bobj","seen","isFinite","out","seenIndex","sort","Observable","valueFromASTUntyped","API_URL","FilteredViewListWithVirtualScrollDataSource","http","location","requestParams","getRequestParams","params","requests","filterRequestParams","lastFilters","getMultiFiltersNames","filterName","serverFilters","parse","filterViewRequest","flatCount","mapObj","statusResponse","locationResponse","paging","virtualScroll","start","end","ceil","multiFilters","extractMultiFilters","json","entries","o","sorter","toUpperCase","filterKeys","multiFilterArr","FilteredViewListWithPaginationComponent","FilteredViewTableWithCustomVirtualScrollDataSource","FilteredViewWithTreeModule","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","BreakingChangeType","TYPE_REMOVED","TYPE_CHANGED_KIND","TYPE_REMOVED_FROM_UNION","VALUE_REMOVED_FROM_ENUM","REQUIRED_INPUT_FIELD_ADDED","IMPLEMENTED_INTERFACE_REMOVED","FIELD_REMOVED","FIELD_CHANGED_KIND","REQUIRED_ARG_ADDED","ARG_REMOVED","ARG_CHANGED_KIND","DIRECTIVE_REMOVED","DIRECTIVE_ARG_REMOVED","REQUIRED_DIRECTIVE_ARG_ADDED","DIRECTIVE_REPEATABLE_REMOVED","DIRECTIVE_LOCATION_REMOVED","DangerousChangeType","VALUE_ADDED_TO_ENUM","TYPE_ADDED_TO_UNION","OPTIONAL_INPUT_FIELD_ADDED","OPTIONAL_ARG_ADDED","IMPLEMENTED_INTERFACE_ADDED","ARG_DEFAULT_VALUE_CHANGE","findBreakingChanges","oldSchema","newSchema","breakingChanges","findSchemaChanges","change","findDangerousChanges","dangerousChanges","findTypeChanges","findDirectiveChanges","schemaChanges","directivesDiff","_directivesDiff$remov2","removed","oldDirective","_directivesDiff$persi2","persisted","_oldDirective","newDirective","argsDiff","_argsDiff$added2","added","newArg","_argsDiff$removed2","oldArg","_oldDirective$locatio2","typesDiff","_typesDiff$removed2","oldType","_typesDiff$persisted2","_ref4","_oldType","newType","findEnumTypeChanges","findUnionTypeChanges","findInputObjectTypeChanges","findFieldChanges","findImplementedInterfacesChanges","constructor","typeKindName","fieldsDiff","_fieldsDiff$added2","newField","_fieldsDiff$removed2","oldField","_fieldsDiff$persisted2","_ref6","_oldField","_newField","isSafe","isChangeSafeForInputObjectFieldOrFieldArg","possibleTypesDiff","_possibleTypesDiff$ad2","newPossibleType","_possibleTypesDiff$re2","oldPossibleType","valuesDiff","_valuesDiff$added2","newValue","_valuesDiff$removed2","oldValue","interfacesDiff","_interfacesDiff$added2","newInterface","_interfacesDiff$remov2","oldInterface","_i34","_fieldsDiff$removed4","_i36","_fieldsDiff$persisted4","_ref8","_oldField2","findArgChanges","isChangeSafeForObjectOrInterfaceField","_i38","_argsDiff$removed4","_i40","_argsDiff$persisted2","_ref10","_oldArg","oldValueStr","stringifyValue","newValueStr","_i42","_argsDiff$added4","_newArg","ast","sortedAST","ObjectValue","objectNode","fieldA","fieldB","oldArray","newArray","oldMap","_ref11","newMap","_ref12","_i44","oldItem","newItem","_i46","_newItem","ItemPickerComponent","selectionChanged","selectionMode","multi","getSelectedOptions","dedentBlockStringValue","rawString","lines","commonIndent","getBlockStringIndentation","startLine","isBlank","endLine","str","_commonIndent","isFirstLine","isEmptyLine","indent","charCodeAt","printBlockString","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","KnownArgumentNamesRule","KnownArgumentNamesOnDirectivesRule","argNode","knownArgsNames","directiveArgs","definedDirectives","astDefinitions","_def$arguments","argsNodes","Directive","directiveName","knownArgs","_directiveNode$argume2","FilterGroupCustomDataSourceService","httpService","getData","Lexer","startOfFileToken","SOF","lastToken","lineStart","advance","lookahead","EOF","_token$next","readToken","COMMENT","isPunctuatorTokenKind","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","printCharCode","isNaN","fromCharCode","lexer","prev","body","bodyLength","pos","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","position","firstCode","isFloat","readDigits","isNameStart","chunkStart","charCode","uniCharCode","invalidSequence","rawValue","BLOCK_STRING","c","d","char2hex","FilterGroupModule","promiseReduce","callback","initialValue","previous","resolved","CustomTemplateFilterGroupCompositeComponent","VirtualScrollCustomStrategyService","itemsPerPage","reset","virtualScrollRange","fetchedItemsCount","toObjMap","getPrototypeOf","_objectEntries2","FilteredViewTableWithVirtualScrollSelectionDataSource","parser","Parser","parseDocument","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","_lexer","_options","parseName","loc","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","variableDefinitions","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","parseVariable","expectOptionalToken","selections","parseSelection","parseFragment","parseField","nameOrAlias","alias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","any","_this2","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","parseOperationTypeDefinition","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","startToken","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","FilteredViewWithTableModule","validate","documentAST","rules","abortObj","rule","validateSDL","schemaToExtend","visitors","assertValidSDL","assertValidSDLExtension","FilteredViewWithListComponent","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","INTERFACE","UNION","INPUT_OBJECT","introspectionFromSchema","optionsWithDefaults","directiveIsRepeatable","schemaDescription","inputValueDeprecation","specifiedRules","specifiedSDLRules","FilteredViewTableWithVirtualScrollDataSource","FilteredViewTreeComponent","cdRef","treeControl","sorterItems","$localize","hasChild","_","dataSourceTree","FilteredViewListWithPaginationModule","SchematicsDocsComponentType","SchematicsDocsCliOptionComponent","forComponent","componentType","fetch","dataSourceSetup","extendDS","defineFields","getFilteredData","tableScrollingSetup","vars","viewportManagerImport","viewChildren","provideViewport","injectViewport","oninitSubscribeBusy","registerScroll","ngAfterViewInitStart","ngAfterViewInitViewport","CustomDataSourceFilterGroupExampleComponent","filterGroupCustomDataSourceService","filterGroupSubscriptions","filteredData","changes","ReactNativeFile","uri","SearchListDataSource","FilterGroupsWrapperComponent","i18nHiddenFiltersMapping","filterGroup","emptyFilterGroupsCount","HttpLinkHandler","httpClient","requester","pick","init","includeQuery","includeExtensions","method","withCredentials","useMultipart","req","headers","sub","err","HttpLink","HttpLink_Factory","HttpLinkModule","HttpLinkModule_Factory","ItemPickerCompositeComponent","VariablesAreInputTypesRule","VariableDefinition","TokenKind","haveWarned","shouldWarn","answer","HeuristicFragmentMatcher","ensureReady","canBypassInit","match","idValue","store","isRootQuery","__typename","IntrospectionFragmentMatcher","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","__schema","implementingType","hasOwn","DepTrackingCache","depend","dataId","toObject","newData","defaultNormalizedCacheFactory","seed","StoreReader","_b","_c","cacheKeyRoot","_d","freezeResults","_e","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","fragmentMatcher","execContext","readQueryFromStore","diffQueryAgainstStore","returnPartialData","previousResult","rootId","fragmentMatcherFunction","queryDefinition","dataIdFromObject","cacheRedirects","execResult","generated","typename","hasMissingFields","missing","tolerable","defaultFragmentMatcher","mainDefinition","fragments","fragmentMap","finalResult","objectsToMerge","handleMissing","fieldResult","executeField","fragment","fragmentExecResult","resultKey","readStoreResult","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","childResult","assertIdValue","storeKeyName","resolver","getCacheKey","storeObj","ObjectCache","defaultNormalizedCacheFactory$1","WriteError","enhanceErrorWithDocument","enhancedError","stack","StoreWriter","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","resultFieldKey","writeFieldToStore","isDefered","isClient","substring","matches","fakeContext","storeValue","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","itemDataId","generatedKey","realKey","real","madeChanges","realValue","newRealValue","defaultConfig","defaultDataIdFromObject","addTypename","resultCaching","_id","hasOwn$1","OptimisticCacheLayer","optimisticId","transaction","InMemoryCache","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","restore","extract","read","transformDocument","write","broadcastWatches","watch","evict","removeOptimistic","idToRemove","toReapply","removedCount","layer","layer_1","performTransaction","recordOptimisticTransaction","FilteredViewSchematicOutletComponent","DialogFilterGroupExampleComponent","filterGroupService","dialogRef","open","dialogSubscription","appendHiddenFilters","VariablesInAllowedPositionRule","varDefMap","OperationDefinition","usages","getRecursiveVariableUsages","varDef","allowedVariableUsage","varDefaultValue","locationType","locationDefaultValue","hasNonNullVariableDefaultValue","hasLocationDefaultValue","nullableLocationType","BasicTableComponent","SingleFieldSubscriptionsRule","QueryDocumentKeys","Name","Document","Variable","SelectionSet","FragmentSpread","IntValue","FloatValue","StringValue","BooleanValue","NullValue","ListValue","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","visit","visitorKeys","inArray","edits","newRoot","isLeaving","isEdited","clone","editOffset","ii","editKey","editValue","visitFn","getVisitFn","_visitorKeys$node$kin","visitInParallel","skipping","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","UniqueInputFieldNamesRule","knownNameStack","knownNames","__Schema","__Type","__Directive","__DirectiveLocation","__InputValue","__TypeKind","TypeKind","NON_NULL","__Field","includeDeprecated","_args","_context","__EnumValue","_ref3","inputFields","_ref5","isDeprecated","valueAST","SchemaMetaFieldDef","_source","TypeMetaFieldDef","_ref7","TypeNameMetaFieldDef","_ref9","introspectionTypes","isIntrospectionType","BasicListComponent","initialSortDirection","itemConfig","trackBy","focusChange","focused","onSorterAction","onCancelSearch","valueFromAST","variableValue","_valueNode$values2","isMissingVariable","coercedObj","_error","webpackContext","webpackContextResolve","__webpack_require__","webpackContextKeys","instanceOf","valueClass","className","UniqueVariableNamesRule","knownVariableNames","FilteredViewTableWithVirtualScrollSelectionComponent","SchematicDocsExampleComponent","fileExtensionsRegex","rawData","_selectedFile","shouldCodeRender","setTimeout","componentSources","getSourcesByFilenamePrefix","exampleFolderName","fileName","selectedFile","selectedFileOpen","matchingFilePaths","filePath","prefixIndex","nextChar","dataset","fileObj","getFileData","splitPath","substr","pathToSourceCode","shifted","shift","fileContent","regExResultArray","exec","extension","onSelectedFileOpenChange","FilteredViewSchematicExampleComponent","FilteredViewTableWithCustomVirtualScrollModule","SchematicsDocsCommandComponent","CustomDataSourceFilterGroupsWrapperComponent","ItemPickerCompositeModule","UniqueFieldDefinitionNamesRule","existingTypeMap","knownFieldNames","checkFieldUniqueness","_node$fields","fieldNames","hasField","VirtualScrollListComponent","viewportManager","listItems$","setViewport","viewportRef","observeNextPage$","resetVirtualScroll","emitFirstPage","getFilters","computeFiltersChange","arrayFrom","thisArg","iteratorMethod","step","done","_result","_defKindToExtKind","PossibleTypeExtensionsRule","checkExtension","defNode","existingType","expectedKind","defKindToExtKind","typeToExtKind","kindStr","extensionKindToTypeName","allTypeNames","nodejsCustomInspectSymbol","FilteredViewListWithVirtualScrollComponent","isScalarValue","isNumberValue","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","nestedArgObj_1","listValue","nestedArgArrayObj","storeKeyNameFromField","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","queryArgs_1","filteredArgs_1","completeFieldName","stringifiedArgs","argumentsObjectFromField","argObj_1","resultKeyNameFromField","isField","isInlineFragment","isIdValue","idObject","toIdValue","idConfig","isJsonValue","jsonObject","defaultValueFromVariable","valueFromNode","onVariable","v","getDirectiveInfoFromField","directiveObj_1","shouldInclude","getInclusionDirectives","ifArgument","evaledValue","getDirectiveNames","doc","names","hasDirectives","hasClientExports","isInclusionDirective","directiveArguments","ifValue","getFragmentQueryDocument","fragmentName","actualFragmentName","definition","sources","getMutationDefinition","checkDocument","mutationDef","operations","getOperationDefinition","getOperationDefinitionOrDie","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","getDefaultValues","defaultValues","defaultValueObj","variablesInOperation","filterInPlace","elem","TYPENAME_FIELD","isEmpty","nullIfDocIsEmpty","getDirectiveMatcher","directiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","_key","shouldRemoveField","remove","getAllFragmentSpreadsFromSelectionSet","frag","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","skip","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","hasDirectivesInSelectionSet","nestedCheck","hasDirectivesInSelection","getDirectivesFromDocument","parentPath","_parent","currentPath","startsWith","selectionsWithDirectives","getArgumentMatcher","argumentMatcher","argument","aConfig","argMatcher","argMatchCount_1","allFragments","buildQueryFromSelectionSet","definitionOperation","removeClientSetsFromDocument","isTypenameOnly","canUseWeakMap","navigator","product","cloneDeep","cloneDeepHelper","copy_1","copy_2","getEnv","process","isEnv","env","isProduction","isDevelopment","isTest","tryFunctionOrLogError","console","graphQLResultHasError","deepFreeze","getOwnPropertyNames","isFrozen","maybeDeepFreeze","symbolIsPolyfilled","mergeDeep","mergeDeepArray","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","__proto__","warnOnceInDevelopment","msg","stripSymbols","formatError","_error$message","layoutSchema","tableSchema","addSchema","SchematicsDocsComponent","layoutJsonScheme","tableJsonScheme","addJsonScheme","objectKeys","schemaObjectFiller","properties","FilteredViewTableComponent","rowHeight","viewport","ProvidedRequiredArgumentsRule","ProvidedRequiredArgumentsOnDirectivesRule","_fieldNode$arguments","argNodes","_fieldDef$args2","argTypeStr","requiredArgsMap","isRequiredArgumentNode","requiredArgs","_directiveNode$argume","_argNodes","isInteger","floor","FakeHTTPService","receiveFilteredDataSubject","getFilteredDataSubject","FakeServer","sendFilteredData","receiveFilteredData","getOperationAST","_documentAST$definiti2","_definition$name","TableWithVirtualScrollDataSource","stripIgnoredCharacters","strippedBody","wasLastAddedTokenNonPunctuator","currentToken","tokenKind","isNonPunctuator","tokenBody","dedentBlockString","blockStr","rawStr","lastChar","LoneAnonymousOperationRule","operationCount","suggestionList","input","optionsByDistance","lexicalDistance","LexicalDistance","threshold","option","distance","measure","distanceDiff","_input","_inputLowerCase","toLowerCase","_inputArray","stringToArray","_rows","fill","optionLowerCase","tmp","aLength","bLength","rows","j","upRow","currentRow","smallestCell","_j","cost","currentCell","min","doubleDiagonalCell","strLength","buildClientSchema","introspection","schemaIntrospection","typeIntrospection","buildType","stdType","getObjectType","buildDirective","typeRef","itemRef","nullableRef","nullableType","getNamedType","getInterfaceType","buildScalarDef","buildObjectDef","buildInterfaceDef","buildUnionDef","buildEnumDef","buildInputObjectDef","scalarIntrospection","buildImplementationsList","implementingIntrospection","implementingIntrospectionStr","objectIntrospection","buildFieldDefMap","interfaceIntrospection","unionIntrospection","unionIntrospectionStr","enumIntrospection","enumIntrospectionStr","valueIntrospection","inputObjectIntrospection","inputObjectIntrospectionStr","buildInputValueDefMap","fieldIntrospection","buildField","fieldIntrospectionStr","inputValueIntrospections","buildInputValue","inputValueIntrospection","directiveIntrospection","directiveIntrospectionStr","_directiveIntrospectionStr","PaginatedListDataSource","memoize3","cache0","memoized","a1","a2","a3","cache1","cache2","cachedValue","extractFiles","isExtractableFile","files","addFile","paths","file","storedPaths","FileList","FilteredViewTableWithSelectionComponent","DialogFilterGroupCompositeComponent","UniqueTypeNamesRule","knownTypeNames","checkTypeName","TableWithVirtualScrollComponent","keyValMap","keyFn","valFn","mapValue","lexicographicSortSchema","schemaConfig","sortByName","sortNamedType","sortDirective","replaceMaybeType","replaceType","replaceNamedType","maybeType","sortArgs","sortObjMap","sortFields","fieldsMap","sortInputFields","sortTypes","arr","_config","_config2","_config3","_config4","sortValueFn","sortedMap","sortedKeys","mapToKey","obj1","obj2","key1","key2","TableWithPaginationComponent","isDefinitionNode","isExecutableDefinitionNode","isTypeSystemDefinitionNode","isTypeSystemExtensionNode","isSelectionNode","isValueNode","isTypeNode","isTypeDefinitionNode","isTypeExtensionNode","BasicFilterGroupCompositeModule","UniqueDirectivesPerLocationRule","uniqueDirectiveMap","schemaDirectives","typeDirectivesMap","seenDirectives","_node$directives2","queryFromPojo","selectionSetFromObj","fragmentFromPojo","nestedSelSet","justTypenameQuery","ApolloCache","transformForLink","readQuery","readFragment","writeQuery","writeFragment","writeData","typenameResult","dataToWrite","objectEntries","naturalCompare","aStr","bStr","aIdx","bIdx","aChar","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","UniqueFragmentNamesRule","knownFragmentNames","buildASTSchema","assumeValidSDL","emptySchemaConfig","stdDirective","buildSchema","FilteredViewTableWithPaginationComponent","CustomDataSourceFilterGroupCompositeComponent","LOCAL_DATA","NoSchemaIntrospectionCustomRule","UniqueArgumentNamesRule","knownArgNames","isType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","assertType","GraphQLScalarType","assertScalarType","GraphQLObjectType","assertObjectType","GraphQLInterfaceType","assertInterfaceType","GraphQLUnionType","assertUnionType","GraphQLEnumType","assertEnumType","GraphQLInputObjectType","assertInputObjectType","GraphQLList","assertListType","GraphQLNonNull","assertNonNullType","isInputType","isWrappingType","assertInputType","isOutputType","assertOutputType","isLeafType","assertLeafType","isCompositeType","assertCompositeType","isAbstractType","assertAbstractType","assertNullableType","assertWrappingType","isNullableType","getNullableType","isNamedType","assertNamedType","unwrappedType","resolveThunk","thunk","undefineIfEmpty","_config$parseValue","_config$serialize","_config$parseLiteral","isTypeOf","_fields","defineFieldMap","_interfaces","defineInterfaces","_proto2","fieldsToFieldsConfig","_resolveThunk","fieldMap","isPlainObj","fieldConfig","_fieldConfig$args","argsConfig","argsToArgsConfig","isRequiredArgument","resolveType","_proto3","_this$extensionASTNod2","_types","defineTypes","_proto4","_this$extensionASTNod3","_values","defineEnumValues","_valueLookup","_nameLookup","_proto5","valueStr","didYouMeanEnumValue","_variables","_valueStr","_this$extensionASTNod4","unknownValueStr","allNames","suggestedValues","valueMap","valueConfig","defineInputFieldMap","_proto6","_this$extensionASTNod5","isRequiredInputField","ValuesOfCorrectTypeRule","isValidValueNode","fieldNodeMap","_typeStr2","FilteredViewTableWithSelectionModule","shouldUseBody","shouldStringify","param","isBatching","shouldUseMultipart","multipartInfo","bodyOrParams","form","FormData","append","observe","responseType","reportProgress","mergeHeaders","destination","merged","getAll","prioritize","picked","FilteredViewTableWithVirtualScrollComponent","extendSchema","extendedConfig","extendSchemaImpl","_schemaDef","_schemaDef$descriptio","_schemaDef2","_options$assumeValid","typeDefs","typeExtensionsMap","directiveDefs","schemaDef","schemaExtensions","extendedTypeName","existingTypeExtensions","_schemaConfig$types2","extendNamedType","_stdTypeMap$name","stdTypeMap","getOperationTypes","replaceDirective","extendArg","extendScalarType","extendObjectType","extendInterfaceType","extendUnionType","extendEnumType","extendInputObjectType","_typeExtensionsMap$co","buildInputFieldMap","_typeExtensionsMap$ty","buildEnumValueMap","_typeExtensionsMap$co2","_getSpecifiedByUrl","extensionNode","getSpecifiedByUrl","_typeExtensionsMap$co3","buildInterfaces","extendField","buildFieldMap","_typeExtensionsMap$co4","_typeExtensionsMap$co5","buildUnionTypes","opTypes","_node$operationTypes","operationTypesNodes","operationType","_stdTypeMap$name2","getWrappedType","getDescription","buildArgumentMap","fieldConfigMap","nodeFields","getDeprecationReason","argConfigMap","inputFieldMap","_node$fields2","fieldsNodes","enumValueMap","_node$values","_node$interfaces","interfacesNodes","_node$types","typeNodes","_typeExtensionsMap$na","extensionNodes","allNodes","_extensionASTNodes","_allNodes","_extensionASTNodes2","_allNodes2","_extensionASTNodes3","_allNodes3","_extensionASTNodes4","_extensionASTNodes5","_allNodes4","deprecated","specifiedBy","getLeadingCommentBlock","comments","reverse","NetworkStatus","isNetworkRequestInFlight","networkStatus","isNonEmptyArray","isApolloError","generateErrorMessage","graphQLErrors","graphQLError","errorMessage","networkError","ApolloError","extraInfo","FetchType","hasError","policy","ObservableQuery","queryManager","shouldSubscribe","onSubscribe","observers","subscriptions","isTornDown","generateQueryId","opDef","queryName","removeQuery","lastResult","lastError","loading","getCurrentQueryResult","queryStoreValue","queryStore","fetchPolicy","isNetworkFetchPolicy","errorPolicy","ready","updateLastResult","isDifferentFromLastResult","newResult","snapshot","lastResultSnapshot","resetQueryStoreErrors","fetchQuery","combinedOptions","qid","normal","fetchMoreResult","stopQuery","startGraphQLSubscription","subscriptionData","oldFetchPolicy","getQueryWithPreviousResult","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","previousResult_1","query_1","fetchPolicy_1","transform","getLocalState","addExportedVariables","previousVariables","serverQuery","removeObservableQuery","observersWithMethod","MutationStore","getStore","mutationId","initMutation","markMutationError","markMutationResult","QueryStore","initQuery","previousQuery","isSetVariables","storePreviousVariables","isPoll","poll","isRefetch","fetchMoreForQueryId","markQueryResult","markQueryError","markQueryResultClient","observableQueryIds","capitalizeFirstLetter","charAt","LocalState","resolvers","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","newContext","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","defaultOperationType","resolveSelectionSet","resultsToMerge","resolveField","fragmentResult","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","resolveSubSelectedArray","multiplex","inner","asyncMap","activeNextCount","QueryManager","queryDeduplication","onBroadcast","ssrMode","clientAwareness","localState","mutationStore","idCounter","queries","fetchQueryRejectFns","transformCache","inFlightLinkObservables","pollingInfoByQueryId","getCache","stop","_info","stopQueryNoBroadcast","optimisticResponse","updateQueriesByName","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","update","generateUpdateQueriesInfo","self","_f","setQuery","getVariables","sent","ret","observableQuery","updater","markMutationInit","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","isNetworkOnly","needToFetch","shouldFetch","requestId","cancel","networkResult","updateQueryWatch","lastRequestId","invalidated","invalidate","fetchRequest","getQuery","hasForcedResolvers","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","transformed","forLink","cacheEntry_1","defaultVars","transformedOptions","watchedQuery","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observablePromise_1","queryIdOrObservable","foundObserveableQuery","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","cleanup","cleanupSub_1","errorsFromStore","fqrfId","result_1","newInfo","checkInFlight","interval","maybeFetch_1","poll_1","clearTimeout","timeout","DataStore","initialCache","ignoreErrors","writeWithErrors","optimistic_1","orig","cacheWrites_1","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","hasSuggestedDevtools","ApolloClient","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","clientAwarenessName","clientAwarenessVersion","disableNetworkFetches","defaultConnectToDevTools","window","__APOLLO_CLIENT__","top","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","userAgent","debug","devToolsHookCb","action","mutations","dataWithOptimisticResults","__actionHookForDevTools","cb","__requestRaw","initQueryManager","onResetStore","onClearStore","serializedState","setLocalStateFragmentMatcher","print","printDocASTReducer","MAX_LINE_LENGTH","varDefs","argsLine","isBlockString","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","_ref21","_ref22","_ref23","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline","_typeof","_classCallCheck","instance","_inherits","subClass","superClass","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","_isNativeFunction","Wrapper","_construct","Parent","Function","sham","Proxy","p","setPrototypeOf","GraphQLError","_Error","positions","_locations2","_source2","_positions2","_extensions2","_nodes$0$loc","_positions","_locations","_extensions","originalExtensions","captureStackTrace","printError","output","_error$nodes2","_error$locations2","FieldsOnCorrectTypeRule","suggestion","getSuggestedTypeNames","getSuggestedFieldNames","usageCount","_schema$getPossibleTy2","_possibleType$getInte2","_usageCount$possibleI","possibleInterface","typeA","typeB","usageCountDiff","possibleFieldNames","NoUnusedVariablesRule","variableDefs","variableNameUsed","_variableDefs2","variableDef","TableWithSelectionDataSource","FilteredViewTableWithPaginationDataSource","FilteredViewTableWithPaginationModule","addPath","pathToArray","flattened","curr","FilteredViewTableWithVirtualScrollSelectionModule","FilteredViewTableWithSelectionDataSource","NoUnusedFragmentsRule","operationDefs","fragmentDefs","fragmentNameUsed","_context$getRecursive2","getRecursivelyReferencedFragments","fragName","TableWithSearchComponent","promiseForObject","valuesAndPromises","resolvedObject","getOperationRootType","UniqueDirectiveNamesRule","knownDirectiveNames","concatAST","documents","currentContext","MISSING_VALUE","makeSlotClass","Slot","random","context_1","slots","saved","noContext","globalKey","host","setTimeoutWithContext","asyncFromGen","genFn","gen","boundNext","boundThrow","invokeNext","isPromiseLike","invokeThrow","wrappedFibers","wrapYieldingFiberMethods","Fiber","TableWithCustomVirtualScrollComponent","customVirtualScrollStrategyService","usefulItemsCount","previouslyLoadedCount","prepareNextPage","getIntrospectionQuery","optionsWithDefault","descriptions","inputDeprecation","findDeprecatedUsages","ListSchematicExampleComponent","CustomDataSourceFilterGroupCompositeModule","TableWithCustomVirtualScrollDataSource","NoFragmentCyclesRule","visitedFrags","spreadPath","spreadPathIndexByName","spreadNodes","getFragmentSpreads","spreadNode","spreadName","spreadFragment","getFragment","viaPath","s","locatedError","rawOriginalError","_inheritsLoose","ASTValidationContext","_ast","_fragments","_fragmentSpreads","_recursivelyReferencedFragments","_onError","frags","statement","spreads","setsToVisit","_set$selections2","collectedNames","nodesToVisit","_this$getFragmentSpre2","spread","SDLValidationContext","_ASTValidationContext","ValidationContext","_ASTValidationContext2","_typeInfo","_variableUsages","_recursiveVariableUsages","getVariableUsages","newUsages","_this$getRecursivelyR2","SchematicJsonComponent","schemaViewData","fieldsToDisplay","schemaJson","schematicFolderName","fillViewData","schemaJsonFields","enumField","defaultField","aliasField","safeArrayFrom","collection","keyMap","CustomTemplateFilterGroupsWrapperComponent","Location","endToken","Token","column","isNode","maybeNode","isFinitePolyfill","isAsyncIterable","maybeAsyncIterable","normalize","string","trim","docCache","fragmentSourceMap","cacheKeyFromLoc","resetCaches","printFragmentWarnings","processFragments","astFragmentMap","disableFragmentWarnings","stripLoc","removeLocAtThisLevel","docType","valueType","cacheKey","parsed","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","gql","literals","reasonMessage","subReason","OverlappingFieldsCanBeMergedRule","comparedFragmentPairs","PairSet","cachedFieldsAndFragmentNames","conflicts","findConflictsWithinSelectionSet","_ref2$","fields1","fields2","reasonMsg","_getFieldsAndFragment","getFieldsAndFragmentNames","fragmentNames","collectConflictsWithin","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","areMutuallyExclusive","_getReferencedFieldsA","getReferencedFieldsAndFragmentNames","fieldMap2","fragmentNames2","collectConflictsBetween","fragmentName1","fragmentName2","fragment1","fragment2","_getReferencedFieldsA2","fieldMap1","fragmentNames1","_getReferencedFieldsA3","findConflictsBetweenSubSelectionSets","parentType1","selectionSet1","parentType2","selectionSet2","_getFieldsAndFragment2","_getFieldsAndFragment3","_i3","_i5","conflict","findConflict","parentFieldsAreMutuallyExclusive","_i7","field1","field2","node1","def1","node2","def2","_node1$arguments","_node2$arguments","name1","name2","args1","args2","sameArguments","type1","type2","doTypesConflict","subfieldConflicts","arguments1","arguments2","argument1","argument2","sameValue","value1","value2","cached","nodeAndDefs","_collectFieldsAndFragmentNames","fragmentType","_i9","_selectionSet$selecti2","inlineFragmentType","allFields","_data","_pairSetAdd","FilteredViewWithListModule","FilteredViewListComponent","UniqueEnumValueNamesRule","knownValueNames","checkValueUniqueness","valueNodes","valueNames","valueDef","Source","locationOffset","isSource","SearchListComponent","hasSymbols","hasSymbol","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","ctor","isObservable","hostReportError","log","enqueue","cleanupSubscription","_cleanup","closeSubscription","_queue","_state","flushSubscription","queue","notifySubscription","m","onNotify","subscriptionObserver","SubscriptionObserver","_subscriber","C","_this3","_this4","hasSeed","acc","_this5","_len","startNext","flatMap","_this6","outer","completeIfDone","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_item","_len2","_key2","symbol","KnownFragmentNamesRule","MAX_SUGGESTIONS","didYouMean","firstArg","secondArg","subMessage","suggestionsArg","lastItem","UniqueOperationNamesRule","knownOperationNames","FilteredViewTableWithVirtualScrollModule","genericMessage","proto","InvariantError","framesToPop","wrapConsoleMethod","processStub","atLeastWeTried","invariant$1","previousComparisons","equal","check","aTag","bTag","previouslyCompared","aKeys","bKeys","keyCount","aIterator","isMap","aKey","aValue","bSet","global","TableWithSortComponent","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","formatValue","seenValues","formatObjectValue","previouslySeenValues","customInspectFn","getCustomFn","customValue","formatArray","formatObject","getObjectTag","remaining","tag","FilteredViewListWithPaginationDataSource","TableWithPaginationDataSource","PaginatedListComponent","isEqualType","isTypeSubTypeOf","superType","doTypesOverlap","onSelection","devAssert","NoUndefinedVariablesRule","variableNameDefined","ListSchematicsOutletComponent","ExecutableDefinitionsRule","_node$definitions2","defName","UniqueOperationTypesRule","definedOperationTypes","existingOperationTypes","checkOperationTypes","alreadyDefinedOperationType","TableWithSearchDataSource","VirtualScrollListDataSource","printPathArray","DialogFilterGroupCompositeModule","extendStatics","__extends","__","__assign","__rest","propertyIsEnumerable","__decorate","desc","r","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","__awaiter","P","generator","adopt","fulfilled","rejected","__generator","trys","ops","g","verb","__createBinding","k2","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","q","resume","settle","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","BasicFilterGroupCompositeComponent","typeFromAST","innerType","KnownDirectivesRule","locationsMap","_path","candidateLocation","getDirectiveLocationForASTPath","appliedTo","getDirectiveLocationForOperation","parentNode","BasicFilterGroupsWrapperComponent","FilterGroupSchematicExampleComponent","COUNTRIES_API","FilteredViewRoutes","FILTERED_VIEW_CHILD_ROUTES","Main","component","List","ListPagination","ListVirtualScroll","Table","TablePagination","TablePaginationSelection","TableVirtualScroll","TableVirtualScrollSelection","TableVirtualScrollCustom","staticRoutes","ga","showThemeSwitcher","SchematicModule","useFactory","httpLink","deps","forChild","LoneSchemaDefinitionRule","_oldSchema$astNode","alreadyDefined","schemaDefinitionsCount","PossibleFragmentSpreadsRule","fragType","parentTypeStr","fragTypeStr","getFragmentType","SchematicDocsPageComponent","angularJsonStylePreprocOptions","schematicHeading","FilteredViewListWithVirtualScrollModule","baseFlatten","baseOrderBy","baseRest","isIterateeCall","iteratees","getLocation","lineRegexp","TableWithSortDataSource","executeImpl","executeSync","assertValidExecutionArguments","buildExecutionContext","executeOperation","buildResponse","rawVariableValues","_operation$variableDe","_document$definitions2","coercedVariableValues","defaultFieldResolver","defaultTypeResolver","collectFields","executeFieldsSerially","executeFields","results","resolvedResult","containsPromise","runtimeType","visitedFragmentNames","shouldIncludeNode","getFieldEntryKey","doesFragmentConditionMatch","typeConditionNode","conditionalType","_fieldDef$resolve","returnType","buildResolveInfo","_contextValue","completeValue","rawError","handleFieldError","completeListValue","completeLeafValue","completeAbstractValue","completeObjectValue","completedResults","completedItem","serializedResult","_returnType$resolveTy","resolveTypeFn","resolvedRuntimeType","ensureValidRuntimeType","runtimeTypeOrName","runtimeTypeName","resolvedIsTypeOf","invalidReturnTypeError","collectAndExecuteSubfields","subFieldNodes","collectSubfields","_collectSubfields","promisedIsTypeOfResults","isTypeOfResult","isTypeOfResults","property","File","Blob","isPromise","separateOperations","depGraph","collectDependencies","separatedDocumentASTs","dependencies","_collectDependencies2","collectTransitiveDependencies","collected","fromName","immediateDeps","toName","SelectionListComponent","listService","updateSelectionState","selectionType","applySelector","selectItems","onSelectorOutput","onRepeatOutput","isObjectLike","baseDifference","isArrayLikeObject","printLocation","printSourceLocation","sourceLocation","firstLineColumnOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","leftPad","mapAsyncIterator","iterable","rejectCallback","$return","abruptClose","rethrow","mapResult","asyncMapValue","iteratorResult","mapReject","_return","_throw"],"mappings":"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;;;;;AAZR;;AACI;;AACA;;AAMJ;;AAEA;;;;AARU;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACFV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAgBA;AASA;;;;;;;;;;;;;;;;;;ACzBA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAOA;;;UAGMI,e;;;;;AACF,iCAAYC,UAAZ,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","file":"src-schematics-schematic-module-es5.js","sourcesContent":["export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-table-with-pagination__container {\\n    overflow: auto;\\n}\\n\\n.app-table-with-pagination-searchable__search {\\n    max-width: 350px;\\n    margin-bottom: @nui-space-xs;\\n    margin-left: auto;\\n}\\n\\n.app-table-with-pagination-scrolling-footer {\\n    height: 28px;\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    nameof,\\n    PaginatorComponent,\\n    RepeatComponent,\\n    SearchComponent,\\n    SorterComponent,\\n    SorterDirection,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    LOCAL_DATA,\\n    RESULTS_PER_PAGE,\\n} from \\\"./basic-list-data\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-basic-list\\\",\\n    templateUrl: \\\"./basic-list.component.html\\\",\\n    styleUrls: [\\\"./basic-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: ClientSideDataSource,\\n        },\\n    ],\\n})\\nexport class BasicListComponent implements AfterViewInit, OnDestroy {\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                this.filteringState = data;\\n\\n                this.totalItems = data.paginator?.total ?? 0;\\n\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // make 1st call to retrieve initial results\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n}\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { DialogFilterGroupCompositeComponent } from \\\"../dialog-filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-dialog-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\n\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(DialogFilterGroupCompositeComponent) filterGroups: QueryList<DialogFilterGroupCompositeComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: DialogFilterGroupCompositeComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","export default \"<div>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-selector class=\\\"app-selection-list-selector\\\"\\n                      [checkboxStatus]=\\\"filteringState.selector?.selectorState?.checkboxStatus\\\"\\n                      [items]=\\\"filteringState.selector?.selectorState?.selectorItems\\\"\\n                      (selectionChange)=\\\"onSelectorOutput($event)\\\">\\n        </nui-selector>\\n        <nui-sorter class=\\\"app-selection-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-selection-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"filteringState.repeat?.itemsSource.length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-selection-list-repeat\\\"\\n                    selectionMode=\\\"multi\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"filteringState.repeat?.itemsSource\\\"\\n                    (selectionChange)=\\\"onRepeatOutput($event)\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-paginator class=\\\"app-selection-list-paginator\\\"\\n                       [(page)]=\\\"page\\\"\\n                       [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeSet]=\\\"[10,20,30,40]\\\"\\n                       [total]=\\\"filteringState.paginator?.total\\\"\\n                       (pagerAction)=\\\"applyFilters()\\\">\\n        </nui-paginator>\\n    </div>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-with-table-table #child></app-filtered-view-with-table-table>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport { LOCAL_DATA } from \"./filtered-view-with-table-data\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-with-table\",\n    styleUrls: [\"./filtered-view-with-table.component.less\"],\n    templateUrl: \"./filtered-view-with-table.component.html\",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewWithTableComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n        // here we use ClientSideDataSource since the data we're working with is static (RANDOM_ARRAY)\n        // if you have a dynamic data source, you need to extend DataSourceService for your custom filtering behavior\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","import { InjectionToken, Injectable, NgZone, Optional, Inject, Pipe, NgModule } from '@angular/core';\nimport { ApolloClient } from 'apollo-client';\nimport { Observable, queueScheduler, observable, from } from 'rxjs';\nimport { observeOn, startWith } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction fromPromise(promiseFn) {\n    return new Observable(subscriber => {\n        promiseFn().then(result => {\n            if (!subscriber.closed) {\n                subscriber.next(result);\n                subscriber.complete();\n            }\n        }, error => {\n            if (!subscriber.closed) {\n                subscriber.error(error);\n            }\n        });\n        return () => subscriber.unsubscribe();\n    });\n}\nclass ZoneScheduler {\n    constructor(zone) {\n        this.zone = zone;\n        this.now = Date.now ? Date.now : () => +new Date();\n    }\n    schedule(work, delay = 0, state) {\n        return this.zone.run(() => queueScheduler.schedule(work, delay, state));\n    }\n}\n// XXX: Apollo's QueryObservable is not compatible with RxJS\n// TODO: remove it in one of future releases\n// https://github.com/ReactiveX/rxjs/blob/9fb0ce9e09c865920cf37915cc675e3b3a75050b/src/internal/util/subscribeTo.ts#L32\nfunction fixObservable(obs) {\n    obs[observable] = () => obs;\n    return obs;\n}\nfunction wrapWithZone(obs, ngZone) {\n    return obs.pipe(observeOn(new ZoneScheduler(ngZone)));\n}\n\nclass QueryRef {\n    constructor(obsQuery, ngZone, options) {\n        this.obsQuery = obsQuery;\n        const wrapped = wrapWithZone(from(fixObservable(this.obsQuery)), ngZone);\n        this.valueChanges = options.useInitialLoading\n            ? wrapped.pipe(startWith(Object.assign(Object.assign({}, this.obsQuery.getCurrentResult()), { error: undefined, partial: undefined, stale: true })))\n            : wrapped;\n        this.queryId = this.obsQuery.queryId;\n    }\n    // ObservableQuery's methods\n    result() {\n        return this.obsQuery.result();\n    }\n    currentResult() {\n        return this.obsQuery.currentResult();\n    }\n    getLastResult() {\n        return this.obsQuery.getLastResult();\n    }\n    getLastError() {\n        return this.obsQuery.getLastError();\n    }\n    resetLastResults() {\n        return this.obsQuery.resetLastResults();\n    }\n    refetch(variables) {\n        return this.obsQuery.refetch(variables);\n    }\n    fetchMore(fetchMoreOptions) {\n        return this.obsQuery.fetchMore(fetchMoreOptions);\n    }\n    subscribeToMore(options) {\n        // XXX: there's a bug in apollo-client typings\n        // it should not inherit types from ObservableQuery\n        return this.obsQuery.subscribeToMore(options);\n    }\n    updateQuery(mapFn) {\n        return this.obsQuery.updateQuery(mapFn);\n    }\n    stopPolling() {\n        return this.obsQuery.stopPolling();\n    }\n    startPolling(pollInterval) {\n        return this.obsQuery.startPolling(pollInterval);\n    }\n    setOptions(opts) {\n        return this.obsQuery.setOptions(opts);\n    }\n    setVariables(variables, tryFetch = false, fetchResults = true) {\n        return this.obsQuery.setVariables(variables, tryFetch, fetchResults);\n    }\n}\n\nconst APOLLO_OPTIONS = new InjectionToken('[apollo-angular] options');\nconst APOLLO_NAMED_OPTIONS = new InjectionToken('[apollo-angular] named options');\n\nclass ApolloBase {\n    constructor(ngZone, _client) {\n        this.ngZone = ngZone;\n        this._client = _client;\n    }\n    watchQuery(options) {\n        return new QueryRef(this.ensureClient().watchQuery(Object.assign({}, options)), this.ngZone, options);\n    }\n    query(options) {\n        return fromPromise(() => this.ensureClient().query(Object.assign({}, options)));\n    }\n    mutate(options) {\n        return fromPromise(() => this.ensureClient().mutate(Object.assign({}, options)));\n    }\n    subscribe(options, extra) {\n        const obs = from(fixObservable(this.ensureClient().subscribe(Object.assign({}, options))));\n        return extra && extra.useZone !== true\n            ? obs\n            : wrapWithZone(obs, this.ngZone);\n    }\n    /**\n     * Get an access to an instance of ApolloClient\n     */\n    getClient() {\n        return this._client;\n    }\n    /**\n     * Set a new instance of ApolloClient\n     * Remember to clean up the store before setting a new client.\n     *\n     * @param client ApolloClient instance\n     */\n    setClient(client) {\n        if (this._client) {\n            throw new Error('Client has been already defined');\n        }\n        this._client = client;\n    }\n    ensureClient() {\n        this.checkInstance();\n        return this._client;\n    }\n    checkInstance() {\n        if (!this._client) {\n            throw new Error('Client has not been defined yet');\n        }\n    }\n}\nclass Apollo extends ApolloBase {\n    constructor(_ngZone, apolloOptions, apolloNamedOptions) {\n        super(_ngZone);\n        this._ngZone = _ngZone;\n        this.map = new Map();\n        if (apolloOptions) {\n            this.createDefault(apolloOptions);\n        }\n        if (apolloNamedOptions && typeof apolloNamedOptions === 'object') {\n            for (const name in apolloNamedOptions) {\n                if (apolloNamedOptions.hasOwnProperty(name)) {\n                    const options = apolloNamedOptions[name];\n                    this.createNamed(name, options);\n                }\n            }\n        }\n    }\n    /**\n     * Create an instance of ApolloClient\n     * @param options Options required to create ApolloClient\n     * @param name client's name\n     */\n    create(options, name) {\n        if (isDefault(name)) {\n            this.createDefault(options);\n        }\n        else {\n            this.createNamed(name, options);\n        }\n    }\n    /**\n     * Use a default ApolloClient\n     */\n    default() {\n        return this;\n    }\n    /**\n     * Use a named ApolloClient\n     * @param name client's name\n     */\n    use(name) {\n        if (isDefault(name)) {\n            return this.default();\n        }\n        return this.map.get(name);\n    }\n    /**\n     * Create a default ApolloClient, same as `apollo.create(options)`\n     * @param options ApolloClient's options\n     */\n    createDefault(options) {\n        if (this.getClient()) {\n            throw new Error('Apollo has been already created.');\n        }\n        return this.setClient(new ApolloClient(options));\n    }\n    /**\n     * Create a named ApolloClient, same as `apollo.create(options, name)`\n     * @param name client's name\n     * @param options ApolloClient's options\n     */\n    createNamed(name, options) {\n        if (this.map.has(name)) {\n            throw new Error(`Client ${name} has been already created`);\n        }\n        this.map.set(name, new ApolloBase(this._ngZone, new ApolloClient(options)));\n    }\n    /**\n     * Remember to clean up the store before removing a client\n     * @param name client's name\n     */\n    removeClient(name) {\n        if (isDefault(name)) {\n            this._client = undefined;\n        }\n        else {\n            this.map.delete(name);\n        }\n    }\n}\nApollo.ɵfac = function Apollo_Factory(t) { return new (t || Apollo)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(APOLLO_OPTIONS, 8), ɵngcc0.ɵɵinject(APOLLO_NAMED_OPTIONS, 8)); };\nApollo.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Apollo, factory: Apollo.ɵfac });\nApollo.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APOLLO_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APOLLO_NAMED_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Apollo, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [APOLLO_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [APOLLO_NAMED_OPTIONS]\n            }] }]; }, null); })();\nfunction isDefault(name) {\n    return !name || name === 'default';\n}\n\nclass Query {\n    constructor(apollo) {\n        this.apollo = apollo;\n        this.client = 'default';\n    }\n    watch(variables, options) {\n        return this.apollo.use(this.client).watchQuery(Object.assign(Object.assign({}, options), { variables, query: this.document }));\n    }\n    fetch(variables, options) {\n        return this.apollo.use(this.client).query(Object.assign(Object.assign({}, options), { variables, query: this.document }));\n    }\n}\nQuery.ɵfac = function Query_Factory(t) { return new (t || Query)(ɵngcc0.ɵɵinject(Apollo)); };\nQuery.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Query, factory: Query.ɵfac });\nQuery.ctorParameters = () => [\n    { type: Apollo }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Query, [{\n        type: Injectable\n    }], function () { return [{ type: Apollo }]; }, null); })();\n\nclass Mutation {\n    constructor(apollo) {\n        this.apollo = apollo;\n        this.client = 'default';\n    }\n    mutate(variables, options) {\n        return this.apollo.use(this.client).mutate(Object.assign(Object.assign({}, options), { variables, mutation: this.document }));\n    }\n}\nMutation.ɵfac = function Mutation_Factory(t) { return new (t || Mutation)(ɵngcc0.ɵɵinject(Apollo)); };\nMutation.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Mutation, factory: Mutation.ɵfac });\nMutation.ctorParameters = () => [\n    { type: Apollo }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Mutation, [{\n        type: Injectable\n    }], function () { return [{ type: Apollo }]; }, null); })();\n\nclass Subscription {\n    constructor(apollo) {\n        this.apollo = apollo;\n        this.client = 'default';\n    }\n    subscribe(variables, options, extra) {\n        return this.apollo.use(this.client).subscribe(Object.assign(Object.assign({}, options), { variables, query: this.document }), extra);\n    }\n}\nSubscription.ɵfac = function Subscription_Factory(t) { return new (t || Subscription)(ɵngcc0.ɵɵinject(Apollo)); };\nSubscription.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Subscription, factory: Subscription.ɵfac });\nSubscription.ctorParameters = () => [\n    { type: Apollo }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Subscription, [{\n        type: Injectable\n    }], function () { return [{ type: Apollo }]; }, null); })();\n\nclass SelectPipe {\n    transform(obj, name = '') {\n        if (name !== '') {\n            return obj && obj.data && obj.data[name];\n        }\n    }\n}\nSelectPipe.ɵfac = function SelectPipe_Factory(t) { return new (t || SelectPipe)(); };\nSelectPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"select\", type: SelectPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'select'\n            }]\n    }], null, null); })();\n\nconst PROVIDERS = [Apollo];\nconst DECLARATIONS = [SelectPipe];\nclass ApolloModule {\n}\nApolloModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ApolloModule });\nApolloModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ApolloModule_Factory(t) { return new (t || ApolloModule)(); }, providers: PROVIDERS });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ApolloModule, { declarations: [SelectPipe], exports: [SelectPipe] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ApolloModule, [{\n        type: NgModule,\n        args: [{\n                providers: PROVIDERS,\n                declarations: DECLARATIONS,\n                exports: DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, Apollo, ApolloBase, ApolloModule, Mutation, Query, QueryRef, SelectPipe, Subscription, PROVIDERS as ɵa, DECLARATIONS as ɵb };\n\n//# sourceMappingURL=ngApollo.js.map","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"nui-filter-group-composite-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\n\\nexport class FilterGroupCompositeDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\";","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","import didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isTypeDefinitionNode, isTypeSystemDefinitionNode, isTypeSystemExtensionNode } from \"../../language/predicates.mjs\";\nimport { specifiedScalarTypes } from \"../../type/scalars.mjs\";\nimport { introspectionTypes } from \"../../type/introspection.mjs\";\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nexport function KnownTypeNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  var typeNames = Object.keys(existingTypesMap).concat(Object.keys(definedTypes));\n  return {\n    NamedType: function NamedType(node, _1, parent, _2, ancestors) {\n      var typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        var definitionNode = (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0 ? _ancestors$ : parent;\n        var isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && isStandardTypeName(typeName)) {\n          return;\n        }\n\n        var suggestedTypes = suggestionList(typeName, isSDL ? standardTypeNames.concat(typeNames) : typeNames);\n        context.reportError(new GraphQLError(\"Unknown type \\\"\".concat(typeName, \"\\\".\") + didYouMean(suggestedTypes), node));\n      }\n    }\n  };\n}\nvar standardTypeNames = [].concat(specifiedScalarTypes, introspectionTypes).map(function (type) {\n  return type.name;\n});\n\nfunction isStandardTypeName(typeName) {\n  return standardTypeNames.indexOf(typeName) !== -1;\n}\n\nfunction isSDLNode(value) {\n  return !Array.isArray(value) && (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value));\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    nameof,\\n    PaginatorComponent,\\n    RepeatComponent,\\n    SearchComponent,\\n    SorterComponent,\\n    SorterDirection,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    BehaviorSubject,\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-list-with-pagination-data\\\";\\nimport { FilteredViewListWithPaginationDataSource } from \\\"../filtered-view-list-with-pagination-data-source.service\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-list-with-pagination-list\\\",\\n    templateUrl: \\\"./filtered-view-list.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewListComponent implements OnInit, AfterViewInit, OnDestroy {\\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n    public isBusy = false;\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithPaginationDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.listItems$.next(data.repeat?.itemsSource || []);\\n\\n                this.filteringState = data;\\n\\n                this.totalItems = data.paginator?.total ?? 0;\\n\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // make 1st call to retrieve initial results\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n}\\n\";","import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n} from \"@nova-ui/bits\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { Subscription } from \"rxjs\";\n\nimport { IFilterGroupItem } from \"./public-api\";\n\ninterface ExampleItem {\n    color: string;\n    status: string;\n}\n\nconst RANDOM_ARRAY = [\n    {color: \"regular-azure\", status: \"Critical\"},\n    {color: \"regular-black\", status: \"Warning\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-yellow\", status: \"Critical\"},\n    {color: \"regular-yellow\", status: \"Warning\"},\n    {color: \"regular-black\", status: \"Up\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-azure\", status: \"Up\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-azure\", status: \"Critical\"},\n];\n\n@Component({\n    selector: \"app-basic-filter-group-composite-example\",\n    templateUrl: \"basic-filter-group.example.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n})\nexport class BasicFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"color\",\n            title: \"Color\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: \"azure\",\n                    displayValue: \"Azure FilterGroup Basic Example\",\n                    count: 3,\n                }, {\n                    value: \"black\",\n                    displayValue: \"Black\",\n                    count: 2,\n                }, {\n                    value: \"blue\",\n                    displayValue: \"Blue FilterGroup Basic Example\",\n                    count: 3,\n                }, {\n                    value: \"yellow\",\n                    displayValue: \"Yellow\",\n                    count: 2,\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"status\",\n            title: \"Status\",\n            allFilterOptions: [\n                {\n                    value: \"warning\",\n                    displayValue: \"Warning\",\n                    count: 2,\n                }, {\n                    value: \"critical\",\n                    displayValue: \"Critical\",\n                    count: 2,\n                },\n                {\n                    value: \"up\",\n                    displayValue: \"Up\",\n                    count: 5,\n                },\n            ],\n            selectedFilterValues: [],\n        },\n        {\n            id: \"vendor\",\n            title: \"Vendors\",\n            allFilterOptions: [],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n\n    private outputsSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n    }\n\n    ngAfterViewInit(): void {\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.filteringState = data;\n            // get counts of filters\n            this.recalculateCounts(data);\n        });\n        this.dataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.dataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, \"filteringState.repeat.itemsSource\"));\n    }\n\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value];\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n}\n","<ng-template #emptyListTemplate>\n    <div class=\"d-flex flex-column align-items-center\">\n        <nui-image [isWatermark]=\"true\" image=\"no-data-to-show\"></nui-image>\n        <p class=\"nui-text-small\">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-basic-filter-groups-wrapper>\n            <app-basic-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                        [filterGroupItem]=\"filterGroupItem\"\n                                        (filterChanged)=\"changeFilters($event)\"></app-basic-filter-group>\n        </app-basic-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf=\"hasItems(); else emptyListTemplate\">\n            <nui-repeat id=\"nui-composites-demo-repeat\"\n                        [itemsSource]=\"filteringState.repeat.itemsSource\"\n                        [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                        paddingSize=\"normal\">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-tree #child></app-filtered-view-tree>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {FilteredViewWithTreeDataSource} from \"./filtered-view-with-tree-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-with-tree\",\n    styleUrls: [\"./filtered-view-with-tree.component.less\"],\n    templateUrl: \"./filtered-view-with-tree.component.html\",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewWithTreeDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewWithTreeComponent implements AfterViewInit {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"subregion\",\n            title: \"Subregion\",\n            allFilterOptions: [\n                {\n                    value: \"Caribbean\",\n                    displayValue: \"Caribbean\",\n                },\n                {\n                    value: \"South America\",\n                    displayValue: \"South America\",\n                },\n                {\n                    value: \"Central America\",\n                    displayValue: \"Central America\",\n                },\n                {\n                    value: \"Northern America\",\n                    displayValue: \"Northern America\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n        {\n            id: \"language\",\n            title: \"Language\",\n            allFilterOptions: [\n                {\n                    value: \"English\",\n                    displayValue: \"English\",\n                },\n                {\n                    value: \"Dutch\",\n                    displayValue: \"Dutch\",\n                },\n                {\n                    value: \"French\",\n                    displayValue: \"French\",\n                },\n                {\n                    value: \"Spanish\",\n                    displayValue: \"Spanish\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n\n        {\n            id: \"currency\",\n            title: \"Currency\",\n            allFilterOptions: [\n                {\n                    value: \"USD\",\n                    displayValue: \"USD\",\n                },\n                {\n                    value: \"EUR\",\n                    displayValue: \"EUR\",\n                },\n                {\n                    value: \"CAD\",\n                    displayValue: \"CAD\",\n                },\n                {\n                    value: \"MXN\",\n                    displayValue: \"MXN\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewWithTreeDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.dataSource.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n}\n","export default \"<div class=\\\"app-basic-table__container\\\">\\n    <table nui-table [dataSource]=\\\"items\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","/**\n * Note: This file is autogenerated using \"resources/gen-version.js\" script and\n * automatically updated by \"npm version\" command.\n */\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nexport var version = '15.5.0';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexport var versionInfo = Object.freeze({\n  major: 15,\n  minor: 5,\n  patch: 0,\n  preReleaseTag: null\n});\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    LocalFilteringDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _get from \\\"lodash/get\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem } from \\\"./public-api\\\";\\n\\ninterface ExampleItem {\\n    color: string;\\n    status: string;\\n}\\n\\nconst RANDOM_ARRAY = [\\n    {color: \\\"regular-azure\\\", status: \\\"Critical\\\"},\\n    {color: \\\"regular-black\\\", status: \\\"Warning\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-yellow\\\", status: \\\"Critical\\\"},\\n    {color: \\\"regular-yellow\\\", status: \\\"Warning\\\"},\\n    {color: \\\"regular-black\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-azure\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-azure\\\", status: \\\"Critical\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"app-basic-filter-group-composite-example\\\",\\n    templateUrl: \\\"basic-filter-group.example.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: LocalFilteringDataSource,\\n    }],\\n})\\nexport class BasicFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"color\\\",\\n            title: \\\"Color\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: \\\"azure\\\",\\n                    displayValue: \\\"Azure FilterGroup Basic Example\\\",\\n                    count: 3,\\n                }, {\\n                    value: \\\"black\\\",\\n                    displayValue: \\\"Black\\\",\\n                    count: 2,\\n                }, {\\n                    value: \\\"blue\\\",\\n                    displayValue: \\\"Blue FilterGroup Basic Example\\\",\\n                    count: 3,\\n                }, {\\n                    value: \\\"yellow\\\",\\n                    displayValue: \\\"Yellow\\\",\\n                    count: 2,\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"warning\\\",\\n                    displayValue: \\\"Warning\\\",\\n                    count: 2,\\n                }, {\\n                    value: \\\"critical\\\",\\n                    displayValue: \\\"Critical\\\",\\n                    count: 2,\\n                },\\n                {\\n                    value: \\\"up\\\",\\n                    displayValue: \\\"Up\\\",\\n                    count: 5,\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n        {\\n            id: \\\"vendor\\\",\\n            title: \\\"Vendors\\\",\\n            allFilterOptions: [],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public filteringState: INovaFilteringOutputs = {\\n        repeat: {\\n            itemsSource: [],\\n        },\\n        color: [],\\n        status: [],\\n    };\\n\\n    private outputsSubscription: Subscription;\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>) {\\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.filteringState = data;\\n            // get counts of filters\\n            this.recalculateCounts(data);\\n        });\\n        this.dataSourceService.applyFilters();\\n    }\\n\\n    public changeFilters(event: IFilterGroupItem) {\\n        this.dataSourceService.applyFilters();\\n    }\\n\\n    public hasItems(): boolean {\\n        return !_isEmpty(_get(this, \\\"filteringState.repeat.itemsSource\\\"));\\n    }\\n\\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value];\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        if (this.outputsSubscription) {\\n            this.outputsSubscription.unsubscribe();\\n        }\\n    }\\n}\\n\";","export default \"<div class=\\\"app-filtered-view-with-table-table__container\\\">\\n    <table nui-table [dataSource]=\\\"items\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./virtual-scroll-list-data\\\";\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class VirtualScrollListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value ?? { start : 0, end: 0};\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE))\\n\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = VirtualScrollListDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewTableWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewTableWithPaginationDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewTableWithPaginationDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound]\nvar find = Array.prototype.find ? function (list, predicate) {\n  return Array.prototype.find.call(list, predicate);\n} : function (list, predicate) {\n  for (var _i2 = 0; _i2 < list.length; _i2++) {\n    var value = list[_i2];\n\n    if (predicate(value)) {\n      return value;\n    }\n  }\n};\nexport default find;\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"<div class=\\\"nui-schematic-docs-page\\\">\\n    <h1>{{ schematicHeading | titlecase }} Schematic</h1>\\n    <ng-content select=\\\"[schematicSummary]\\\"></ng-content>\\n    <h2 class=\\\"mt-4\\\">API</h2>\\n    <div>\\n        <p>\\n            Use the following command to generate a {{ schematicHeading | titlecase }}:\\n            <code>ng g @nova-ui/bits:{{ schematicFolderName }} --name=%name_of_component% --p=%prefix_for_component_selector%</code>\\n        </p>\\n        <p>\\n            The schematic generates styles with a reference to files that are stored in\\n            <code>node_modules/@nova-ui/bits/sdk/less</code>. You can provide this path in your project's\\n            <code>angular.json</code> to make these references work:\\n        </p>\\n        <p>\\n            <nui-example-code>\\n                {{ angularJsonStylePreprocOptions }}\\n            </nui-example-code>\\n        </p>\\n        <nui-schematic-json [schematicFolderName]=\\\"schematicFolderName\\\"></nui-schematic-json>\\n    </div>\\n\\n    <div class=\\\"nui-schematic-docs-examples\\\">\\n        <ng-content select=\\\"[schematicExamples]\\\"></ng-content>\\n    </div>\\n</div>\\n\";","import isFinite from \"../polyfills/isFinite.mjs\";\nimport isInteger from \"../polyfills/isInteger.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { GraphQLScalarType } from \"./definition.mjs\"; // As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\n\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction serializeInt(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 1 : 0;\n  }\n\n  var num = coercedValue;\n\n  if (typeof coercedValue === 'string' && coercedValue !== '') {\n    num = Number(coercedValue);\n  }\n\n  if (!isInteger(num)) {\n    throw new GraphQLError(\"Int cannot represent non-integer value: \".concat(inspect(coercedValue)));\n  }\n\n  if (num > MAX_INT || num < MIN_INT) {\n    throw new GraphQLError('Int cannot represent non 32-bit signed integer value: ' + inspect(coercedValue));\n  }\n\n  return num;\n}\n\nfunction coerceInt(inputValue) {\n  if (!isInteger(inputValue)) {\n    throw new GraphQLError(\"Int cannot represent non-integer value: \".concat(inspect(inputValue)));\n  }\n\n  if (inputValue > MAX_INT || inputValue < MIN_INT) {\n    throw new GraphQLError(\"Int cannot represent non 32-bit signed integer value: \".concat(inputValue));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n  serialize: serializeInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\"Int cannot represent non-integer value: \".concat(print(valueNode)), valueNode);\n    }\n\n    var num = parseInt(valueNode.value, 10);\n\n    if (num > MAX_INT || num < MIN_INT) {\n      throw new GraphQLError(\"Int cannot represent non 32-bit signed integer value: \".concat(valueNode.value), valueNode);\n    }\n\n    return num;\n  }\n});\n\nfunction serializeFloat(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 1 : 0;\n  }\n\n  var num = coercedValue;\n\n  if (typeof coercedValue === 'string' && coercedValue !== '') {\n    num = Number(coercedValue);\n  }\n\n  if (!isFinite(num)) {\n    throw new GraphQLError(\"Float cannot represent non numeric value: \".concat(inspect(coercedValue)));\n  }\n\n  return num;\n}\n\nfunction coerceFloat(inputValue) {\n  if (!isFinite(inputValue)) {\n    throw new GraphQLError(\"Float cannot represent non numeric value: \".concat(inspect(inputValue)));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n  serialize: serializeFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\"Float cannot represent non numeric value: \".concat(print(valueNode)), valueNode);\n    }\n\n    return parseFloat(valueNode.value);\n  }\n}); // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      var valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      // $FlowFixMe[incompatible-use]\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n\nfunction serializeString(outputValue) {\n  var coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n  // attempt to coerce object, function, symbol, or other types as strings.\n\n  if (typeof coercedValue === 'string') {\n    return coercedValue;\n  }\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 'true' : 'false';\n  }\n\n  if (isFinite(coercedValue)) {\n    return coercedValue.toString();\n  }\n\n  throw new GraphQLError(\"String cannot represent value: \".concat(inspect(outputValue)));\n}\n\nfunction coerceString(inputValue) {\n  if (typeof inputValue !== 'string') {\n    throw new GraphQLError(\"String cannot represent a non string value: \".concat(inspect(inputValue)));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n  serialize: serializeString,\n  parseValue: coerceString,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\"String cannot represent a non string value: \".concat(print(valueNode)), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\n\nfunction serializeBoolean(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue;\n  }\n\n  if (isFinite(coercedValue)) {\n    return coercedValue !== 0;\n  }\n\n  throw new GraphQLError(\"Boolean cannot represent a non boolean value: \".concat(inspect(coercedValue)));\n}\n\nfunction coerceBoolean(inputValue) {\n  if (typeof inputValue !== 'boolean') {\n    throw new GraphQLError(\"Boolean cannot represent a non boolean value: \".concat(inspect(inputValue)));\n  }\n\n  return inputValue;\n}\n\nexport var GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: serializeBoolean,\n  parseValue: coerceBoolean,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\"Boolean cannot represent a non boolean value: \".concat(print(valueNode)), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\n\nfunction serializeID(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'string') {\n    return coercedValue;\n  }\n\n  if (isInteger(coercedValue)) {\n    return String(coercedValue);\n  }\n\n  throw new GraphQLError(\"ID cannot represent value: \".concat(inspect(outputValue)));\n}\n\nfunction coerceID(inputValue) {\n  if (typeof inputValue === 'string') {\n    return inputValue;\n  }\n\n  if (isInteger(inputValue)) {\n    return inputValue.toString();\n  }\n\n  throw new GraphQLError(\"ID cannot represent value: \".concat(inspect(inputValue)));\n}\n\nexport var GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize: serializeID,\n  parseValue: coerceID,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError('ID cannot represent a non-string and non-integer value: ' + print(valueNode), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\nexport var specifiedScalarTypes = Object.freeze([GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(function (_ref) {\n    var name = _ref.name;\n    return type.name === name;\n  });\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.nui-filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"<div class=\\\"app-table-with-search__container\\\">\\n    <div class=\\\"app-table-with-search-searchable__search\\\">\\n        <nui-search [value]=\\\"searchTerm\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onSearchCancel()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <table nui-table [dataSource]=\\\"items\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n\\n    <footer class=\\\"app-table-with-search-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","export default \"import { ListRange } from \\\"@angular/cdk/collections\\\";\\nimport {\\n    Inject,\\n    Injectable,\\n} from \\\"@angular/core\\\";\\nimport {\\n    IFilter,\\n    IFilterPub,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { CUSTOM_SCROLL_ITEMS_PER_PAGE } from \\\"./table-with-custom-virtual-scroll-data\\\";\\n\\n@Injectable()\\nexport class VirtualScrollCustomStrategyService implements IFilterPub<IFilter<ListRange>> {\\n    public itemsPerPage: number;\\n\\n    protected virtualScrollRange: ListRange;\\n\\n    constructor(@Inject(CUSTOM_SCROLL_ITEMS_PER_PAGE) itemsPerPage: number) {\\n        this.itemsPerPage = itemsPerPage;\\n        this.reset();\\n    }\\n\\n    public getFilters(): IFilter<ListRange> {\\n        return {\\n            type: \\\"virtualScroll\\\",\\n            value: this.virtualScrollRange,\\n        };\\n    }\\n\\n    public reset() {\\n        this.virtualScrollRange = { start: 0, end: this.itemsPerPage };\\n    }\\n\\n    public prepareNextPage(fetchedItemsCount: number) {\\n        if (fetchedItemsCount < this.itemsPerPage) {\\n            // keep requesting the same page if not all expected items per page were loaded\\n        } else {\\n            // advances \\\"pagination\\\" to the next pages\\n            this.virtualScrollRange.start += this.itemsPerPage;\\n            this.virtualScrollRange.end = this.virtualScrollRange.start + this.itemsPerPage;\\n        }\\n    }\\n}\\n\";","export default \"// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 10;\\n\\n\";","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectValues = Object.values || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\n\nexport default objectValues;\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    var query = operation.query, variables = operation.variables, operationName = operation.operationName;\n    return JSON.stringify([operationName, query, variables]);\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { ApolloLink, concat, createOperation, empty, execute, from, fromError, fromPromise, makePromise, split, toPromise };\n//# sourceMappingURL=bundle.esm.js.map\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\n","export { subscribe, createSourceEventStream } from \"./subscribe.mjs\";\n","export default \"import { ArrayDataSource } from \\\"@angular/cdk/collections\\\";\\nimport { NestedTreeControl } from \\\"@angular/cdk/tree\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService, expand,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport { takeUntil, tap } from \\\"rxjs/operators\\\";\\n\\nimport { FilteredViewWithTreeDataSource } from \\\"../filtered-view-with-tree-data-source.service\\\";\\nimport {\\n    IServer,\\n} from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-tree\\\",\\n    templateUrl: \\\"./filtered-view-tree.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-tree.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    animations: [expand],\\n})\\nexport class FilteredViewTreeComponent implements OnDestroy, AfterViewInit {\\n\\n    treeControl = new NestedTreeControl<any>((node) => node.children);\\n    dataSourceTree: ArrayDataSource<any>;\\n\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n    public items: IServer[] = [];\\n    public filteringState: INovaFilteringOutputs = {};\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewWithTreeDataSource<IServer>,\\n        private cdRef: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    async ngAfterViewInit() {\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: any) => {\\n                // update the list of items to be rendered\\n                this.dataSourceTree = new ArrayDataSource(data.tree.itemsSource);\\n                this.cdRef.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    hasChild = (_: number, node: any) => !!node.children && node.children.length > 0;\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"<ng-template #emptyListTemplate>\\n    <div class=\\\"d-flex flex-column align-items-center\\\">\\n        <nui-image [isWatermark]=\\\"true\\\" image=\\\"no-data-to-show\\\"></nui-image>\\n        <p class=\\\"nui-text-small\\\">No data to show</p>\\n    </div>\\n</ng-template>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n    <div>{{item.status}}</div>\\n</ng-template>\\n\\n<nui-panel>\\n    <div nuiPanelEmbeddedBody>\\n        <app-custom-data-source-filter-groups-wrapper>\\n            <app-custom-data-source-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                        [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                        (filterChanged)=\\\"changeFilters($event)\\\"></app-custom-data-source-filter-group>\\n        </app-custom-data-source-filter-groups-wrapper>\\n    </div>\\n    <div>\\n        <div *ngIf=\\\"hasItems(); else emptyListTemplate\\\">\\n            <nui-repeat id=\\\"nui-composites-demo-repeat\\\"\\n                        [itemsSource]=\\\"filteringState.repeat.itemsSource\\\"\\n                        [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                        paddingSize=\\\"normal\\\">\\n            </nui-repeat>\\n        </div>\\n    </div>\\n</nui-panel>\\n\";","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","export default \"// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 20;\\n\\n\";","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"nui-filter-group-composite\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"nui-filter-group-composite__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between nui-filter-group-composite__checkbox\\\">\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"nui-filter-group-composite__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-table-with-selection-table #child></app-filtered-view-table-with-selection-table>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-schematic-docs-command\\\",\\n    templateUrl: \\\"./schematic-docs-command.component.html\\\",\\n})\\nexport class SchematicsDocsCommandComponent {}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","export default \"import { Component, Inject, Input, OnInit, Optional, SkipSelf, ViewEncapsulation } from \\\"@angular/core\\\";\\nimport _set from \\\"lodash/set\\\";\\n\\nimport { DEMO_PATH_TOKEN } from \\\"../../../../../src/constants/path.constant\\\";\\n\\n@Component({\\n    selector: \\\"nui-schematic-docs-example\\\",\\n    templateUrl: \\\"schematic-docs-example.component.html\\\",\\n    styleUrls: [\\\"schematic-docs-example.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class SchematicDocsExampleComponent implements OnInit {\\n    @Input() exampleFolderName: string;\\n    public componentSources: string[];\\n    public shouldCodeRender: boolean;\\n\\n    private fileExtensionsRegex = /.*\\\\.(ts|html|less)$/;\\n    private rawData: any = {};\\n\\n    private _selectedFile: string;\\n    private selectedFileOpen: boolean;\\n\\n    get selectedFile() {\\n        return this._selectedFile;\\n    }\\n\\n    set selectedFile(value: string) {\\n        this._selectedFile = value;\\n        // TODO Remove when NUI-2704 is finished\\n        this.shouldCodeRender = false;\\n        setTimeout(() => {\\n            this.shouldCodeRender = true;\\n        }, 100);\\n    }\\n\\n    constructor(@SkipSelf() @Optional() @Inject(DEMO_PATH_TOKEN) private context: any) {}\\n\\n    ngOnInit() {\\n        this.componentSources = this.getSourcesByFilenamePrefix(this.exampleFolderName);\\n    }\\n\\n    public getSource(fileName: string) {\\n        return this.rawData[fileName];\\n    }\\n\\n    public selectFile(name: string) {\\n        this.selectedFile = name;\\n        this.selectedFileOpen = true;\\n    }\\n\\n    public isSelectedFileOpen(): boolean {\\n        return this.selectedFileOpen;\\n    }\\n\\n    public onSelectedFileOpenChange(event: boolean) {\\n        this.selectedFileOpen = event;\\n    }\\n\\n    private getSourcesByFilenamePrefix(prefix: string) {\\n        const matchingFilePaths = this.context.keys().filter((filePath: string) => {\\n            const prefixIndex = filePath.indexOf(prefix);\\n            const nextChar = prefixIndex !== -1 ? filePath[prefixIndex + prefix.length] : undefined;\\n            return prefixIndex !== -1 && (nextChar === \\\".\\\" || nextChar === \\\"/\\\");\\n        });\\n\\n        return matchingFilePaths.reduce((dataset: any, fileName: any) => {\\n            const fileObj = this.getFileData(fileName);\\n            const splitPath = fileName.substr(fileName.indexOf(prefix)).split(\\\"/\\\");\\n            const pathToSourceCode = [];\\n\\n            this.rawData[splitPath[splitPath.length - 1]] = fileObj;\\n\\n            for (let i = splitPath.length; i > 0; i--) {\\n                const shifted = splitPath.shift();\\n                pathToSourceCode.push(shifted);\\n            }\\n            return _set(dataset, pathToSourceCode, fileObj);\\n        }, {});\\n    }\\n\\n    private getFileData(fileName: string) {\\n        let fileContent = \\\"\\\";\\n        const regExResultArray = this.fileExtensionsRegex.exec(fileName);\\n        if (regExResultArray) {\\n            fileContent = this.context(fileName).default;\\n\\n            const extension = <string>fileName.split(\\\".\\\").pop();\\n            if (extension === \\\"less\\\") {\\n                fileContent = fileContent.replace(\\n                    /@import \\\\(reference\\\\) \\\"([\\\\w-]+\\\\/){0,}([\\\\w-]+)(\\\\.less)?\\\"/g,\\n                    `@import (reference) \\\"@nova-ui/bits/sdk/less/$1$2\\\"`\\n                );\\n            }\\n        }\\n\\n        return fileContent;\\n    }\\n\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-table-with-search__container {\\n    overflow: auto;\\n}\\n\\n.app-table-with-search-searchable__search {\\n    max-width: 350px;\\n    margin-bottom: @nui-space-xs;\\n    margin-left: auto;\\n}\\n\\n.app-table-with-search-scrolling-footer {\\n    height: 28px;\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","import isPromise from \"./jsutils/isPromise.mjs\";\nimport { parse } from \"./language/parser.mjs\";\nimport { validate } from \"./validation/validate.mjs\";\nimport { validateSchema } from \"./type/validate.mjs\";\nimport { execute } from \"./execution/execute.mjs\";\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * contextValue:\n *    The context value is provided as an argument to resolver functions after\n *    field arguments. It is used to pass shared information useful at any point\n *    during executing this query, for example the currently logged in user and\n *    connections to databases or other services.\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n * typeResolver:\n *    A type resolver function to use when none is provided by the schema.\n *    If not provided, the default type resolver is used (which looks for a\n *    `__typename` field or alternatively calls the `isTypeOf` method).\n */\n\nexport function graphql(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  var _arguments = arguments;\n\n  /* eslint-enable no-redeclare */\n  // Always return a Promise for a consistent API.\n  return new Promise(function (resolve) {\n    return resolve( // Extract arguments from object args if provided.\n    _arguments.length === 1 ? graphqlImpl(argsOrSchema) : graphqlImpl({\n      schema: argsOrSchema,\n      source: source,\n      rootValue: rootValue,\n      contextValue: contextValue,\n      variableValues: variableValues,\n      operationName: operationName,\n      fieldResolver: fieldResolver,\n      typeResolver: typeResolver\n    }));\n  });\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function graphqlSync(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  var result = arguments.length === 1 ? graphqlImpl(argsOrSchema) : graphqlImpl({\n    schema: argsOrSchema,\n    source: source,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  }); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  var schema = args.schema,\n      source = args.source,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      typeResolver = args.typeResolver; // Validate Schema\n\n  var schemaValidationErrors = validateSchema(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors\n    };\n  } // Parse\n\n\n  var document;\n\n  try {\n    document = parse(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError]\n    };\n  } // Validate\n\n\n  var validationErrors = validate(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors\n    };\n  } // Execute\n\n\n  return execute({\n    schema: schema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  });\n}\n","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    PaginatorComponent,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    LOCAL_DATA,\\n    RESULTS_PER_PAGE,\\n} from \\\"./basic-table-data\\\";\\nimport { IServer } from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-basic-table\\\",\\n    templateUrl: \\\"./basic-table.component.html\\\",\\n    styleUrls: [\\\"./basic-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: ClientSideDataSource,\\n        },\\n    ],\\n})\\nexport class BasicTableComponent implements OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>\\n    ) {\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","import isFinite from \"../polyfills/isFinite.mjs\";\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport safeArrayFrom from \"../jsutils/safeArrayFrom.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { GraphQLID } from \"../type/scalars.mjs\";\nimport { isLeafType, isEnumType, isInputObjectType, isListType, isNonNullType } from \"../type/definition.mjs\";\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    var astValue = astFromValue(value, type.ofType);\n\n    if ((astValue === null || astValue === void 0 ? void 0 : astValue.kind) === Kind.NULL) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL\n    };\n  } // undefined\n\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    var items = safeArrayFrom(value);\n\n    if (items != null) {\n      var valuesNodes = [];\n\n      for (var _i2 = 0; _i2 < items.length; _i2++) {\n        var item = items[_i2];\n        var itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    var fieldNodes = [];\n\n    for (var _i4 = 0, _objectValues2 = objectValues(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name\n          },\n          value: fieldValue\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes\n    };\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    var serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n\n    if (typeof serialized === 'number' && isFinite(serialized)) {\n      var stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? {\n        kind: Kind.INT,\n        value: stringNum\n      } : {\n        kind: Kind.FLOAT,\n        value: stringNum\n      };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized\n        };\n      } // ID types can use Int literals.\n\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized\n      };\n    }\n\n    throw new TypeError(\"Cannot convert value to AST: \".concat(inspect(serialized), \".\"));\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || invariant(0, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nvar integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default \"<div class=\\\"nui-filter-group-composite-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"nui-filter-group-composite-dialog__body\\\">\\n        <app-item-picker-composite\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker-composite>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","export default \"<div nui-busy [busy]=\\\"isBusy\\\">\\n    <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Loading...\\\"></nui-spinner>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-sorter class=\\\"app-virtual-scroll-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-virtual-scroll-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"!isBusy && (listItems$ | async).length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-virtual-scroll-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"listItems$ | async\\\"\\n                    virtualScroll=\\\"true\\\"\\n                    itemSize=\\\"30\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <footer class=\\\"app-virtual-scroll-list-scrolling-footer\\\">\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n            <div class=\\\"p-1 d-flex\\\">\\n                <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                    Showing {{(listItems$ | async).length}} of {{ totalItems }}.\\n                </div>\\n                <div class=\\\"d-flex pt-3 pb-3\\\">\\n                    <ng-container i18n *ngIf=\\\"(listItems$ | async).length !== totalItems; else endOfData\\\">, scroll down for more.</ng-container>\\n                    <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\\n                </div>\\n            </div>\\n        </div>\\n    </footer>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","<h2>Selection result</h2>\n<div class=\"flex-row-container\">\n    <span class=\"flex-independent-row-item\">{{selection | json}}</span>\n</div>\n<div class=\"app-table-with-selection__container\">\n    <div class=\"app-table-with-selection-searchable__search\">\n        <nui-search [value]=\"searchTerm\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onSearchCancel()\">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]=\"items\"\n           [sortable]=\"true\"\n           [sortedColumn]=\"sortedColumn\"\n           (sortOrderChanged)=\"sortData($event)\"\n           [(selection)]=\"selection\"\n           (selectionChange)=\"onSelectionChanged($event)\"\n           [selectable]=\"true\"\n           [trackBy]=\"trackBy\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\" [rowObject]=\"row\"></tr>\n    </table>\n\n    <footer class=\"app-table-with-selection-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISelection,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-selection-data\";\nimport { TableWithSelectionDataSource } from \"./table-with-selection-data-source.service\";\nimport { IServer, IServerFilters } from \"./types\";\n\n@Component({\n    selector: \"app-table-with-selection\",\n    templateUrl: \"./table-with-selection.component.html\",\n    styleUrls: [\"./table-with-selection.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithSelectionDataSource,\n        },\n    ],\n})\nexport class TableWithSelectionComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: \"name\",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = [\"name\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    // row selection\n    public selectedItems: IServer[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [\"ABERN-SVR-ATQU9404\"],\n        exclude: [],\n    };\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithSelectionDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        // do something with the selection\n\n        // make component aware of the new selection value\n        // so it's displayed correctly\n        this.changeDetection.detectChanges();\n    }\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackBy(index: number, item: IServer) {\n        return item.name;\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NuiCheckboxModule, NuiExpanderModule, NuiPopoverModule } from \"@nova-ui/bits\";\n\nimport { CustomTemplateFilterGroupCompositeComponent } from \"./custom-template-filter-group.component\";\nimport { CustomTemplateFilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        CustomTemplateFilterGroupsWrapperComponent,\n        CustomTemplateFilterGroupCompositeComponent,\n    ],\n    exports: [\n        CustomTemplateFilterGroupsWrapperComponent,\n        CustomTemplateFilterGroupCompositeComponent,\n    ],\n})\n\nexport class CustomTemplateFilterGroupCompositeModule {\n}\n","export default \"// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 400;\\n\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { printBlockString } from \"../language/blockString.mjs\";\nimport { isIntrospectionType } from \"../type/introspection.mjs\";\nimport { GraphQLString, isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from \"../type/directives.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from \"../type/definition.mjs\";\nimport { astFromValue } from \"./astFromValue.mjs\";\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var types = objectValues(schema.getTypeMap()).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return printDescription({}, schema) + \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  }\n\n  if (isObjectType(type)) {\n    return printObject(type, options);\n  }\n\n  if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  }\n\n  if (isUnionType(type)) {\n    return printUnion(type, options);\n  }\n\n  if (isEnumType(type)) {\n    return printEnum(type, options);\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name) + printSpecifiedByUrl(type);\n}\n\nfunction printImplementedInterfaces(type) {\n  var interfaces = type.getInterfaces();\n  return interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n}\n\nfunction printObject(type, options) {\n  return printDescription(options, type) + \"type \".concat(type.name) + printImplementedInterfaces(type) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name) + printImplementedInterfaces(type) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  var types = type.getTypes();\n  var possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  var values = type.getValues().map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value.deprecationReason);\n  });\n  return printDescription(options, type) + \"enum \".concat(type.name) + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  });\n  return printDescription(options, type) + \"input \".concat(type.name) + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f.deprecationReason);\n  });\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var defaultAST = astFromValue(arg.defaultValue, arg.type);\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += \" = \".concat(print(defaultAST));\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  var reasonAST = astFromValue(reason, GraphQLString);\n\n  if (reasonAST && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByUrl(scalar) {\n  if (scalar.specifiedByUrl == null) {\n    return '';\n  }\n\n  var url = scalar.specifiedByUrl;\n  var urlAST = astFromValue(url, GraphQLString);\n  urlAST || invariant(0, 'Unexpected null value returned from `astFromValue` for specifiedByUrl');\n  return ' @specifiedBy(url: ' + print(urlAST) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var description = def.description;\n\n  if (description == null) {\n    return '';\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n    return printDescriptionWithComments(description, indentation, firstInBlock);\n  }\n\n  var preferMultipleLines = description.length > 70;\n  var blockString = printBlockString(description, '', preferMultipleLines);\n  var prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(description, indentation, firstInBlock) {\n  var prefix = indentation && !firstInBlock ? '\\n' : '';\n  var comment = description.split('\\n').map(function (line) {\n    return indentation + (line !== '' ? '# ' + line : '#');\n  }).join('\\n');\n  return prefix + comment + '\\n';\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Apollo } from \"apollo-angular\";\nimport { DocumentNode } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport isArray from \"lodash/isArray\";\nimport isPlainObject from \"lodash/isPlainObject\";\nimport {\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersCollection,\n    ISubregion,\n    ITreeNode,\n} from \"./types\";\n\nconst nameFieldsProperties = [\"name\", \"code\", \"__typename\"];\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewWithTreeDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private apollo: Apollo\n    ) {\n        super();\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.Subregion;\n\n                return {\n                    tree: { itemsSource: this.buildTree(itemsSource) },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<ISubregion> {\n        const mainRequest = this.apollo.query<ISubregion>({query: this.generateQuery(filters)});\n\n        return mainRequest.pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(mainResponse => mainResponse.data),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({} as ISubregion);\n            })\n        );\n    }\n\n    private generateQuery(filters: IServerFilters): DocumentNode {\n        let languages = \"\";\n        let currencies = \"\";\n        let subregion = \"\";\n\n        filters.language?.value.forEach(i => languages += `{officialLanguages_some: {name: \"${i}\"}},`);\n        filters.currency?.value.forEach(i => currencies += `{currencies_some: {code: \"${i}\"}},`);\n        filters.subregion?.value.forEach(i => subregion += `{name: \"${i}\"},`);\n\n        const queryString = `query {\n          Subregion(filter: {AND: [{region: {name: \"Americas\"}}], ${subregion ? \"OR: [\" + subregion + \"]\" : \"\"}}) {\n            name,\n            countries${languages || currencies ? \"(filter: {AND: [\" + languages + currencies + \"]})\" : \"\"} {\n              name,\n              population,\n              officialLanguages {\n                name\n              },\n              currencies {\n                code\n              }\n            }\n          }\n        }`;\n\n        return gql`${queryString}`;\n    }\n\n    private buildTree(value: any): ITreeNode[] {\n        const data: ITreeNode[] = [];\n\n        for (const k in value) {\n            if (value.hasOwnProperty(k) && k !== \"__typename\") {\n                const nodeValue: ITreeNode = value[k];\n                const node: ITreeNode = {} as ITreeNode;\n\n                if (isArray(nodeValue)) {\n                    node.name = `${k}`;\n                    node.children = this.buildTree(nodeValue);\n                } else if (isPlainObject(nodeValue)) {\n                    node.name = nodeValue.name || nodeValue.code || `${k}`;\n                    const hasChildren = Object.keys(nodeValue).filter((key: any) => !nameFieldsProperties.includes(key)).length;\n                    if (hasChildren) {\n                        node.children = this.buildTree(nodeValue);\n                    }\n                } else {\n                    if (!nameFieldsProperties.includes(k)) {\n                        node.name = `${k}`;\n                        node.children = [{name: nodeValue}];\n                    }\n                }\n\n                if (Object.keys(node).length) {\n                    data.push(node);\n                }\n            }\n        }\n\n        return data;\n    }\n\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","export default \"import { ListRange } from \\\"@angular/cdk/collections\\\";\\nimport {\\n    Inject,\\n    Injectable,\\n} from \\\"@angular/core\\\";\\nimport {\\n    IFilter,\\n    IFilterPub,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { CUSTOM_SCROLL_ITEMS_PER_PAGE } from \\\"../filtered-view-table-with-custom-virtual-scroll-data\\\";\\n\\n@Injectable()\\nexport class VirtualScrollCustomStrategyService implements IFilterPub<IFilter<ListRange>> {\\n    public itemsPerPage: number;\\n\\n    protected virtualScrollRange: ListRange;\\n\\n    constructor(@Inject(CUSTOM_SCROLL_ITEMS_PER_PAGE) itemsPerPage: number) {\\n        this.itemsPerPage = itemsPerPage;\\n        this.reset();\\n    }\\n\\n    public getFilters(): IFilter<ListRange> {\\n        return {\\n            type: \\\"virtualScroll\\\",\\n            value: this.virtualScrollRange,\\n        };\\n    }\\n\\n    public reset() {\\n        this.virtualScrollRange = { start: 0, end: this.itemsPerPage };\\n    }\\n\\n    public prepareNextPage(fetchedItemsCount: number) {\\n        if (fetchedItemsCount < this.itemsPerPage) {\\n            // keep requesting the same page if not all expected items per page were loaded\\n        } else {\\n            // advances \\\"pagination\\\" to the next pages\\n            this.virtualScrollRange.start += this.itemsPerPage;\\n            this.virtualScrollRange.end = this.virtualScrollRange.start + this.itemsPerPage;\\n        }\\n    }\\n}\\n\";","import find from \"../polyfills/find.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { isNode } from \"../language/ast.mjs\";\nimport { getVisitFn } from \"../language/visitor.mjs\";\nimport { isObjectType, isInterfaceType, isEnumType, isInputObjectType, isListType, isCompositeType, isInputType, isOutputType, getNullableType, getNamedType } from \"../type/definition.mjs\";\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from \"../type/introspection.mjs\";\nimport { typeFromAST } from \"./typeFromAST.mjs\";\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport var TypeInfo = /*#__PURE__*/function () {\n  function TypeInfo(schema, // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant code bases. You should never need to use it.\n  // It may disappear in the future.\n  getFieldDefFn, // Initial type may be provided in rare cases to facilitate traversals\n  // beginning somewhere other than documents.\n  initialType) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn !== null && getFieldDefFn !== void 0 ? getFieldDefFn : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  var _proto = TypeInfo.prototype;\n\n  _proto.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  _proto.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  _proto.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  _proto.getParentInputType = function getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  };\n\n  _proto.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  _proto.getDefaultValue = function getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  };\n\n  _proto.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  _proto.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  _proto.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  _proto.enter = function enter(node) {\n    var schema = this._schema; // Note: many of the types below are explicitly typed as \"mixed\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        {\n          var namedType = getNamedType(this.getType());\n\n          this._parentTypeStack.push(isCompositeType(namedType) ? namedType : undefined);\n\n          break;\n        }\n\n      case Kind.FIELD:\n        {\n          var parentType = this.getParentType();\n          var fieldDef;\n          var fieldType;\n\n          if (parentType) {\n            fieldDef = this._getFieldDef(schema, parentType, node);\n\n            if (fieldDef) {\n              fieldType = fieldDef.type;\n            }\n          }\n\n          this._fieldDefStack.push(fieldDef);\n\n          this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n          break;\n        }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n        {\n          var type;\n\n          switch (node.operation) {\n            case 'query':\n              type = schema.getQueryType();\n              break;\n\n            case 'mutation':\n              type = schema.getMutationType();\n              break;\n\n            case 'subscription':\n              type = schema.getSubscriptionType();\n              break;\n          }\n\n          this._typeStack.push(isObjectType(type) ? type : undefined);\n\n          break;\n        }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        {\n          var typeConditionAST = node.typeCondition;\n          var outputType = typeConditionAST ? typeFromAST(schema, typeConditionAST) : getNamedType(this.getType());\n\n          this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n          break;\n        }\n\n      case Kind.VARIABLE_DEFINITION:\n        {\n          var inputType = typeFromAST(schema, node.type);\n\n          this._inputTypeStack.push(isInputType(inputType) ? inputType : undefined);\n\n          break;\n        }\n\n      case Kind.ARGUMENT:\n        {\n          var _this$getDirective;\n\n          var argDef;\n          var argType;\n          var fieldOrDirective = (_this$getDirective = this.getDirective()) !== null && _this$getDirective !== void 0 ? _this$getDirective : this.getFieldDef();\n\n          if (fieldOrDirective) {\n            argDef = find(fieldOrDirective.args, function (arg) {\n              return arg.name === node.name.value;\n            });\n\n            if (argDef) {\n              argType = argDef.type;\n            }\n          }\n\n          this._argument = argDef;\n\n          this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n          this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n          break;\n        }\n\n      case Kind.LIST:\n        {\n          var listType = getNullableType(this.getInputType());\n          var itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n          this._defaultValueStack.push(undefined);\n\n          this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n          break;\n        }\n\n      case Kind.OBJECT_FIELD:\n        {\n          var objectType = getNamedType(this.getInputType());\n          var inputFieldType;\n          var inputField;\n\n          if (isInputObjectType(objectType)) {\n            inputField = objectType.getFields()[node.name.value];\n\n            if (inputField) {\n              inputFieldType = inputField.type;\n            }\n          }\n\n          this._defaultValueStack.push(inputField ? inputField.defaultValue : undefined);\n\n          this._inputTypeStack.push(isInputType(inputFieldType) ? inputFieldType : undefined);\n\n          break;\n        }\n\n      case Kind.ENUM:\n        {\n          var enumType = getNamedType(this.getInputType());\n          var enumValue;\n\n          if (isEnumType(enumType)) {\n            enumValue = enumType.getValue(node.value);\n          }\n\n          this._enumValue = enumValue;\n          break;\n        }\n    }\n  };\n\n  _proto.leave = function leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n\n  if (name === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      false);\n\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      true);\n      var result;\n\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewListComponent } from \\\"./filtered-view-list/filtered-view-list.component\\\";\\nimport { FilteredViewWithListComponent } from \\\"./filtered-view-with-list.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiSpinnerModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewWithListComponent,\\n        FilteredViewListComponent,\\n    ],\\n    exports: [\\n        FilteredViewWithListComponent,\\n        FilteredViewListComponent,\\n    ],\\n})\\n\\nexport class FilteredViewWithListModule {}\\n\";","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport objectEntries from \"../polyfills/objectEntries.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport defineInspect from \"../jsutils/defineInspect.mjs\";\nimport { DirectiveLocation } from \"../language/directiveLocation.mjs\";\nimport { GraphQLString, GraphQLBoolean } from \"./scalars.mjs\";\nimport { argsToArgsConfig, GraphQLNonNull } from \"./definition.mjs\";\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\"Expected \".concat(inspect(directive), \" to be a GraphQL directive.\"));\n  }\n\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective = /*#__PURE__*/function () {\n  function GraphQLDirective(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    config.name || devAssert(0, 'Directive must be named.');\n    Array.isArray(config.locations) || devAssert(0, \"@\".concat(config.name, \" locations must be an Array.\"));\n    var args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\"));\n    this.args = objectEntries(args).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && toObjMap(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  };\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLDirective, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLDirective';\n    }\n  }]);\n\n  return GraphQLDirective;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ARGUMENT_DEFINITION, DirectiveLocation.INPUT_FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * Used to provide a URL for specifying the behaviour of custom scalar definitions.\n */\n\nexport var GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behaviour of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behaviour of this scalar.'\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    ISortedItem,\\n    nameof,\\n    PaginatorComponent,\\n    SearchComponent,\\n    SorterDirection,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    debounceTime,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-pagination-data\\\";\\nimport { TableWithPaginationDataSource } from \\\"./table-with-pagination-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-table-with-pagination\\\",\\n    templateUrl: \\\"./table-with-pagination.component.html\\\",\\n    styleUrls: [\\\"./table-with-pagination.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: TableWithPaginationDataSource,\\n        },\\n    ],\\n})\\nexport class TableWithPaginationComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // sorting\\n    public sortedColumn: ISortedItem = {\\n        sortBy: \\\"name\\\",\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    // search\\n    public searchTerm: string;\\n    public columnsToApplySearch = [\\\"name\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: TableWithPaginationDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        // register filter to be able to sort\\n        this.dataSource.registerComponent(this.table.getFilterComponents());\\n        this.dataSource.registerComponent({\\n            search: { componentInstance: this.search },\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // listen for input change in order to perform the search\\n        this.search.inputChange.pipe(\\n            debounceTime(500),\\n            // perform actual search\\n            tap(() => this.onSearch()),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onSearchCancel() {\\n        await this.applyFilters();\\n    }\\n\\n    public async sortData(sortedColumn: ISortedItem) {\\n        this.sortedColumn = sortedColumn;\\n        await this.applyFilters();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","import { Slot } from '@wry/context';\nexport { asyncFromGen, bind as bindContext, noContext, setTimeout } from '@wry/context';\n\nfunction defaultDispose() { }\r\nvar Cache = /** @class */ (function () {\r\n    function Cache(max, dispose) {\r\n        if (max === void 0) { max = Infinity; }\r\n        if (dispose === void 0) { dispose = defaultDispose; }\r\n        this.max = max;\r\n        this.dispose = dispose;\r\n        this.map = new Map();\r\n        this.newest = null;\r\n        this.oldest = null;\r\n    }\r\n    Cache.prototype.has = function (key) {\r\n        return this.map.has(key);\r\n    };\r\n    Cache.prototype.get = function (key) {\r\n        var entry = this.getEntry(key);\r\n        return entry && entry.value;\r\n    };\r\n    Cache.prototype.getEntry = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry && entry !== this.newest) {\r\n            var older = entry.older, newer = entry.newer;\r\n            if (newer) {\r\n                newer.older = older;\r\n            }\r\n            if (older) {\r\n                older.newer = newer;\r\n            }\r\n            entry.older = this.newest;\r\n            entry.older.newer = entry;\r\n            entry.newer = null;\r\n            this.newest = entry;\r\n            if (entry === this.oldest) {\r\n                this.oldest = newer;\r\n            }\r\n        }\r\n        return entry;\r\n    };\r\n    Cache.prototype.set = function (key, value) {\r\n        var entry = this.getEntry(key);\r\n        if (entry) {\r\n            return entry.value = value;\r\n        }\r\n        entry = {\r\n            key: key,\r\n            value: value,\r\n            newer: null,\r\n            older: this.newest\r\n        };\r\n        if (this.newest) {\r\n            this.newest.newer = entry;\r\n        }\r\n        this.newest = entry;\r\n        this.oldest = this.oldest || entry;\r\n        this.map.set(key, entry);\r\n        return entry.value;\r\n    };\r\n    Cache.prototype.clean = function () {\r\n        while (this.oldest && this.map.size > this.max) {\r\n            this.delete(this.oldest.key);\r\n        }\r\n    };\r\n    Cache.prototype.delete = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry) {\r\n            if (entry === this.newest) {\r\n                this.newest = entry.older;\r\n            }\r\n            if (entry === this.oldest) {\r\n                this.oldest = entry.newer;\r\n            }\r\n            if (entry.newer) {\r\n                entry.newer.older = entry.older;\r\n            }\r\n            if (entry.older) {\r\n                entry.older.newer = entry.newer;\r\n            }\r\n            this.map.delete(key);\r\n            this.dispose(entry.value, key);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Cache;\r\n}());\n\nvar parentEntrySlot = new Slot();\n\nvar reusableEmptyArray = [];\r\nvar emptySetPool = [];\r\nvar POOL_TARGET_SIZE = 100;\r\n// Since this package might be used browsers, we should avoid using the\r\n// Node built-in assert module.\r\nfunction assert(condition, optionalMessage) {\r\n    if (!condition) {\r\n        throw new Error(optionalMessage || \"assertion failure\");\r\n    }\r\n}\r\nfunction valueIs(a, b) {\r\n    var len = a.length;\r\n    return (\r\n    // Unknown values are not equal to each other.\r\n    len > 0 &&\r\n        // Both values must be ordinary (or both exceptional) to be equal.\r\n        len === b.length &&\r\n        // The underlying value or exception must be the same.\r\n        a[len - 1] === b[len - 1]);\r\n}\r\nfunction valueGet(value) {\r\n    switch (value.length) {\r\n        case 0: throw new Error(\"unknown value\");\r\n        case 1: return value[0];\r\n        case 2: throw value[1];\r\n    }\r\n}\r\nfunction valueCopy(value) {\r\n    return value.slice(0);\r\n}\r\nvar Entry = /** @class */ (function () {\r\n    function Entry(fn, args) {\r\n        this.fn = fn;\r\n        this.args = args;\r\n        this.parents = new Set();\r\n        this.childValues = new Map();\r\n        // When this Entry has children that are dirty, this property becomes\r\n        // a Set containing other Entry objects, borrowed from emptySetPool.\r\n        // When the set becomes empty, it gets recycled back to emptySetPool.\r\n        this.dirtyChildren = null;\r\n        this.dirty = true;\r\n        this.recomputing = false;\r\n        this.value = [];\r\n        ++Entry.count;\r\n    }\r\n    // This is the most important method of the Entry API, because it\r\n    // determines whether the cached this.value can be returned immediately,\r\n    // or must be recomputed. The overall performance of the caching system\r\n    // depends on the truth of the following observations: (1) this.dirty is\r\n    // usually false, (2) this.dirtyChildren is usually null/empty, and thus\r\n    // (3) valueGet(this.value) is usually returned without recomputation.\r\n    Entry.prototype.recompute = function () {\r\n        assert(!this.recomputing, \"already recomputing\");\r\n        if (!rememberParent(this) && maybeReportOrphan(this)) {\r\n            // The recipient of the entry.reportOrphan callback decided to dispose\r\n            // of this orphan entry by calling entry.dispose(), so we don't need to\r\n            // (and should not) proceed with the recomputation.\r\n            return void 0;\r\n        }\r\n        return mightBeDirty(this)\r\n            ? reallyRecompute(this)\r\n            : valueGet(this.value);\r\n    };\r\n    Entry.prototype.setDirty = function () {\r\n        if (this.dirty)\r\n            return;\r\n        this.dirty = true;\r\n        this.value.length = 0;\r\n        reportDirty(this);\r\n        // We can go ahead and unsubscribe here, since any further dirty\r\n        // notifications we receive will be redundant, and unsubscribing may\r\n        // free up some resources, e.g. file watchers.\r\n        maybeUnsubscribe(this);\r\n    };\r\n    Entry.prototype.dispose = function () {\r\n        var _this = this;\r\n        forgetChildren(this).forEach(maybeReportOrphan);\r\n        maybeUnsubscribe(this);\r\n        // Because this entry has been kicked out of the cache (in index.js),\r\n        // we've lost the ability to find out if/when this entry becomes dirty,\r\n        // whether that happens through a subscription, because of a direct call\r\n        // to entry.setDirty(), or because one of its children becomes dirty.\r\n        // Because of this loss of future information, we have to assume the\r\n        // worst (that this entry might have become dirty very soon), so we must\r\n        // immediately mark this entry's parents as dirty. Normally we could\r\n        // just call entry.setDirty() rather than calling parent.setDirty() for\r\n        // each parent, but that would leave this entry in parent.childValues\r\n        // and parent.dirtyChildren, which would prevent the child from being\r\n        // truly forgotten.\r\n        this.parents.forEach(function (parent) {\r\n            parent.setDirty();\r\n            forgetChild(parent, _this);\r\n        });\r\n    };\r\n    Entry.count = 0;\r\n    return Entry;\r\n}());\r\nfunction rememberParent(child) {\r\n    var parent = parentEntrySlot.getValue();\r\n    if (parent) {\r\n        child.parents.add(parent);\r\n        if (!parent.childValues.has(child)) {\r\n            parent.childValues.set(child, []);\r\n        }\r\n        if (mightBeDirty(child)) {\r\n            reportDirtyChild(parent, child);\r\n        }\r\n        else {\r\n            reportCleanChild(parent, child);\r\n        }\r\n        return parent;\r\n    }\r\n}\r\nfunction reallyRecompute(entry) {\r\n    // Since this recomputation is likely to re-remember some of this\r\n    // entry's children, we forget our children here but do not call\r\n    // maybeReportOrphan until after the recomputation finishes.\r\n    var originalChildren = forgetChildren(entry);\r\n    // Set entry as the parent entry while calling recomputeNewValue(entry).\r\n    parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\r\n    if (maybeSubscribe(entry)) {\r\n        // If we successfully recomputed entry.value and did not fail to\r\n        // (re)subscribe, then this Entry is no longer explicitly dirty.\r\n        setClean(entry);\r\n    }\r\n    // Now that we've had a chance to re-remember any children that were\r\n    // involved in the recomputation, we can safely report any orphan\r\n    // children that remain.\r\n    originalChildren.forEach(maybeReportOrphan);\r\n    return valueGet(entry.value);\r\n}\r\nfunction recomputeNewValue(entry) {\r\n    entry.recomputing = true;\r\n    // Set entry.value as unknown.\r\n    entry.value.length = 0;\r\n    try {\r\n        // If entry.fn succeeds, entry.value will become a normal Value.\r\n        entry.value[0] = entry.fn.apply(null, entry.args);\r\n    }\r\n    catch (e) {\r\n        // If entry.fn throws, entry.value will become exceptional.\r\n        entry.value[1] = e;\r\n    }\r\n    // Either way, this line is always reached.\r\n    entry.recomputing = false;\r\n}\r\nfunction mightBeDirty(entry) {\r\n    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\r\n}\r\nfunction setClean(entry) {\r\n    entry.dirty = false;\r\n    if (mightBeDirty(entry)) {\r\n        // This Entry may still have dirty children, in which case we can't\r\n        // let our parents know we're clean just yet.\r\n        return;\r\n    }\r\n    reportClean(entry);\r\n}\r\nfunction reportDirty(child) {\r\n    child.parents.forEach(function (parent) { return reportDirtyChild(parent, child); });\r\n}\r\nfunction reportClean(child) {\r\n    child.parents.forEach(function (parent) { return reportCleanChild(parent, child); });\r\n}\r\n// Let a parent Entry know that one of its children may be dirty.\r\nfunction reportDirtyChild(parent, child) {\r\n    // Must have called rememberParent(child) before calling\r\n    // reportDirtyChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(mightBeDirty(child));\r\n    if (!parent.dirtyChildren) {\r\n        parent.dirtyChildren = emptySetPool.pop() || new Set;\r\n    }\r\n    else if (parent.dirtyChildren.has(child)) {\r\n        // If we already know this child is dirty, then we must have already\r\n        // informed our own parents that we are dirty, so we can terminate\r\n        // the recursion early.\r\n        return;\r\n    }\r\n    parent.dirtyChildren.add(child);\r\n    reportDirty(parent);\r\n}\r\n// Let a parent Entry know that one of its children is no longer dirty.\r\nfunction reportCleanChild(parent, child) {\r\n    // Must have called rememberChild(child) before calling\r\n    // reportCleanChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(!mightBeDirty(child));\r\n    var childValue = parent.childValues.get(child);\r\n    if (childValue.length === 0) {\r\n        parent.childValues.set(child, valueCopy(child.value));\r\n    }\r\n    else if (!valueIs(childValue, child.value)) {\r\n        parent.setDirty();\r\n    }\r\n    removeDirtyChild(parent, child);\r\n    if (mightBeDirty(parent)) {\r\n        return;\r\n    }\r\n    reportClean(parent);\r\n}\r\nfunction removeDirtyChild(parent, child) {\r\n    var dc = parent.dirtyChildren;\r\n    if (dc) {\r\n        dc.delete(child);\r\n        if (dc.size === 0) {\r\n            if (emptySetPool.length < POOL_TARGET_SIZE) {\r\n                emptySetPool.push(dc);\r\n            }\r\n            parent.dirtyChildren = null;\r\n        }\r\n    }\r\n}\r\n// If the given entry has a reportOrphan method, and no remaining parents,\r\n// call entry.reportOrphan and return true iff it returns true. The\r\n// reportOrphan function should return true to indicate entry.dispose()\r\n// has been called, and the entry has been removed from any other caches\r\n// (see index.js for the only current example).\r\nfunction maybeReportOrphan(entry) {\r\n    return entry.parents.size === 0 &&\r\n        typeof entry.reportOrphan === \"function\" &&\r\n        entry.reportOrphan() === true;\r\n}\r\n// Removes all children from this entry and returns an array of the\r\n// removed children.\r\nfunction forgetChildren(parent) {\r\n    var children = reusableEmptyArray;\r\n    if (parent.childValues.size > 0) {\r\n        children = [];\r\n        parent.childValues.forEach(function (_value, child) {\r\n            forgetChild(parent, child);\r\n            children.push(child);\r\n        });\r\n    }\r\n    // After we forget all our children, this.dirtyChildren must be empty\r\n    // and therefore must have been reset to null.\r\n    assert(parent.dirtyChildren === null);\r\n    return children;\r\n}\r\nfunction forgetChild(parent, child) {\r\n    child.parents.delete(parent);\r\n    parent.childValues.delete(child);\r\n    removeDirtyChild(parent, child);\r\n}\r\nfunction maybeSubscribe(entry) {\r\n    if (typeof entry.subscribe === \"function\") {\r\n        try {\r\n            maybeUnsubscribe(entry); // Prevent double subscriptions.\r\n            entry.unsubscribe = entry.subscribe.apply(null, entry.args);\r\n        }\r\n        catch (e) {\r\n            // If this Entry has a subscribe function and it threw an exception\r\n            // (or an unsubscribe function it previously returned now throws),\r\n            // return false to indicate that we were not able to subscribe (or\r\n            // unsubscribe), and this Entry should remain dirty.\r\n            entry.setDirty();\r\n            return false;\r\n        }\r\n    }\r\n    // Returning true indicates either that there was no entry.subscribe\r\n    // function or that it succeeded.\r\n    return true;\r\n}\r\nfunction maybeUnsubscribe(entry) {\r\n    var unsubscribe = entry.unsubscribe;\r\n    if (typeof unsubscribe === \"function\") {\r\n        entry.unsubscribe = void 0;\r\n        unsubscribe();\r\n    }\r\n}\n\n// A trie data structure that holds object keys weakly, yet can also hold\r\n// non-object keys, unlike the native `WeakMap`.\r\nvar KeyTrie = /** @class */ (function () {\r\n    function KeyTrie(weakness) {\r\n        this.weakness = weakness;\r\n    }\r\n    KeyTrie.prototype.lookup = function () {\r\n        var array = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            array[_i] = arguments[_i];\r\n        }\r\n        return this.lookupArray(array);\r\n    };\r\n    KeyTrie.prototype.lookupArray = function (array) {\r\n        var node = this;\r\n        array.forEach(function (key) { return node = node.getChildTrie(key); });\r\n        return node.data || (node.data = Object.create(null));\r\n    };\r\n    KeyTrie.prototype.getChildTrie = function (key) {\r\n        var map = this.weakness && isObjRef(key)\r\n            ? this.weak || (this.weak = new WeakMap())\r\n            : this.strong || (this.strong = new Map());\r\n        var child = map.get(key);\r\n        if (!child)\r\n            map.set(key, child = new KeyTrie(this.weakness));\r\n        return child;\r\n    };\r\n    return KeyTrie;\r\n}());\r\nfunction isObjRef(value) {\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value === null)\r\n                break;\r\n        // Fall through to return true...\r\n        case \"function\":\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\r\n// a unique object for any shallow-identical list of arguments. If you need\r\n// to implement a custom makeCacheKey function, you may find it helpful to\r\n// delegate the final work to defaultMakeCacheKey, which is why we export it\r\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\r\n// does not support WeakMap, or you have the ability to return a string key.\r\n// In those cases, just write your own custom makeCacheKey functions.\r\nvar keyTrie = new KeyTrie(typeof WeakMap === \"function\");\r\nfunction defaultMakeCacheKey() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return keyTrie.lookupArray(args);\r\n}\r\nvar caches = new Set();\r\nfunction wrap(originalFunction, options) {\r\n    if (options === void 0) { options = Object.create(null); }\r\n    var cache = new Cache(options.max || Math.pow(2, 16), function (entry) { return entry.dispose(); });\r\n    var disposable = !!options.disposable;\r\n    var makeCacheKey = options.makeCacheKey || defaultMakeCacheKey;\r\n    function optimistic() {\r\n        if (disposable && !parentEntrySlot.hasValue()) {\r\n            // If there's no current parent computation, and this wrapped\r\n            // function is disposable (meaning we don't care about entry.value,\r\n            // just dependency tracking), then we can short-cut everything else\r\n            // in this function, because entry.recompute() is going to recycle\r\n            // the entry object without recomputing anything, anyway.\r\n            return void 0;\r\n        }\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        if (key === void 0) {\r\n            return originalFunction.apply(null, arguments);\r\n        }\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var entry = cache.get(key);\r\n        if (entry) {\r\n            entry.args = args;\r\n        }\r\n        else {\r\n            entry = new Entry(originalFunction, args);\r\n            cache.set(key, entry);\r\n            entry.subscribe = options.subscribe;\r\n            if (disposable) {\r\n                entry.reportOrphan = function () { return cache.delete(key); };\r\n            }\r\n        }\r\n        var value = entry.recompute();\r\n        // Move this entry to the front of the least-recently used queue,\r\n        // since we just finished computing its value.\r\n        cache.set(key, entry);\r\n        caches.add(cache);\r\n        // Clean up any excess entries in the cache, but only if there is no\r\n        // active parent entry, meaning we're not in the middle of a larger\r\n        // computation that might be flummoxed by the cleaning.\r\n        if (!parentEntrySlot.hasValue()) {\r\n            caches.forEach(function (cache) { return cache.clean(); });\r\n            caches.clear();\r\n        }\r\n        // If options.disposable is truthy, the caller of wrap is telling us\r\n        // they don't care about the result of entry.recompute(), so we should\r\n        // avoid returning the value, so it won't be accidentally used.\r\n        return disposable ? void 0 : value;\r\n    }\r\n    optimistic.dirty = function () {\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        var child = key !== void 0 && cache.get(key);\r\n        if (child) {\r\n            child.setDirty();\r\n        }\r\n    };\r\n    return optimistic;\r\n}\n\nexport { KeyTrie, defaultMakeCacheKey, wrap };\n//# sourceMappingURL=bundle.esm.js.map\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { NuiButtonModule, NuiCheckboxModule, NuiDialogModule, NuiExpanderModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { BasicFilterGroupCompositeComponent } from \\\"./basic-filter-group.component\\\";\\nimport { FilterGroupCompositeDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { BasicFilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerCompositeModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiButtonModule,\\n        NuiDialogModule,\\n        ItemPickerCompositeModule,\\n        NuiExpanderModule,\\n        NuiCheckboxModule,\\n    ],\\n    declarations: [\\n        BasicFilterGroupsWrapperComponent,\\n        FilterGroupCompositeDialogComponent,\\n        BasicFilterGroupCompositeComponent,\\n    ],\\n    exports: [\\n        BasicFilterGroupsWrapperComponent,\\n        FilterGroupCompositeDialogComponent,\\n        BasicFilterGroupCompositeComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class BasicFilterGroupCompositeModule {\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport find from \"../polyfills/find.mjs\";\nimport arrayFrom from \"../polyfills/arrayFrom.mjs\";\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { __Schema } from \"./introspection.mjs\";\nimport { GraphQLDirective, isDirective, specifiedDirectives } from \"./directives.mjs\";\nimport { isObjectType, isInterfaceType, isUnionType, isInputObjectType, getNamedType } from \"./definition.mjs\";\n/**\n * Test if the given value is a GraphQL schema.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\"Expected \".concat(inspect(schema), \" to be a GraphQL schema.\"));\n  }\n\n  return schema;\n}\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n *     const characterInterface = new GraphQLInterfaceType({\n *       name: 'Character',\n *       ...\n *     });\n *\n *     const humanType = new GraphQLObjectType({\n *       name: 'Human',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const droidType = new GraphQLObjectType({\n *       name: 'Droid',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const schema = new GraphQLSchema({\n *       query: new GraphQLObjectType({\n *         name: 'Query',\n *         fields: {\n *           hero: { type: characterInterface, ... },\n *         }\n *       }),\n *       ...\n *       // Since this schema references only the `Character` interface it's\n *       // necessary to explicitly list the types that implement it if\n *       // you want them to be included in the final schema.\n *       types: [humanType, droidType],\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\n\nexport var GraphQLSchema = /*#__PURE__*/function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) || devAssert(0, 'Must provide configuration object.');\n    !config.types || Array.isArray(config.types) || devAssert(0, \"\\\"types\\\" must be Array if provided but got: \".concat(inspect(config.types), \".\"));\n    !config.directives || Array.isArray(config.directives) || devAssert(0, '\"directives\" must be Array if provided but got: ' + \"\".concat(inspect(config.directives), \".\"));\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives = (_config$directives = config.directives) !== null && _config$directives !== void 0 ? _config$directives : specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    var allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (var _i2 = 0, _config$types2 = config.types; _i2 < _config$types2.length; _i2++) {\n        var type = _config$types2[_i2];\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (var _i4 = 0, _this$_directives2 = this._directives; _i4 < _this$_directives2.length; _i4++) {\n      var directive = _this$_directives2[_i4];\n\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n          var arg = _directive$args2[_i6];\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (var _i8 = 0, _arrayFrom2 = arrayFrom(allReferencedTypes); _i8 < _arrayFrom2.length; _i8++) {\n      var namedType = _arrayFrom2[_i8];\n\n      if (namedType == null) {\n        continue;\n      }\n\n      var typeName = namedType.name;\n      typeName || devAssert(0, 'One of the provided types for building the Schema is missing a name.');\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\"Schema must contain uniquely named types but contains multiple types named \\\"\".concat(typeName, \"\\\".\"));\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (var _i10 = 0, _namedType$getInterfa2 = namedType.getInterfaces(); _i10 < _namedType$getInterfa2.length; _i10++) {\n          var iface = _namedType$getInterfa2[_i10];\n\n          if (isInterfaceType(iface)) {\n            var implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (var _i12 = 0, _namedType$getInterfa4 = namedType.getInterfaces(); _i12 < _namedType$getInterfa4.length; _i12++) {\n          var _iface = _namedType$getInterfa4[_i12];\n\n          if (isInterfaceType(_iface)) {\n            var _implementations = this._implementationsMap[_iface.name];\n\n            if (_implementations === undefined) {\n              _implementations = this._implementationsMap[_iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n\n            _implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  var _proto = GraphQLSchema.prototype;\n\n  _proto.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  _proto.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  _proto.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  _proto.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  _proto.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  _proto.getPossibleTypes = function getPossibleTypes(abstractType) {\n    return isUnionType(abstractType) ? abstractType.getTypes() : this.getImplementations(abstractType).objects;\n  };\n\n  _proto.getImplementations = function getImplementations(interfaceType) {\n    var implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0 ? implementations : {\n      objects: [],\n      interfaces: []\n    };\n  } // @deprecated: use isSubType instead - will be removed in v16.\n  ;\n\n  _proto.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    return this.isSubType(abstractType, possibleType);\n  };\n\n  _proto.isSubType = function isSubType(abstractType, maybeSubType) {\n    var map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (var _i14 = 0, _abstractType$getType2 = abstractType.getTypes(); _i14 < _abstractType$getType2.length; _i14++) {\n          var type = _abstractType$getType2[_i14];\n          map[type.name] = true;\n        }\n      } else {\n        var implementations = this.getImplementations(abstractType);\n\n        for (var _i16 = 0, _implementations$obje2 = implementations.objects; _i16 < _implementations$obje2.length; _i16++) {\n          var _type = _implementations$obje2[_i16];\n          map[_type.name] = true;\n        }\n\n        for (var _i18 = 0, _implementations$inte2 = implementations.interfaces; _i18 < _implementations$inte2.length; _i18++) {\n          var _type2 = _implementations$inte2[_i18];\n          map[_type2.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  };\n\n  _proto.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  _proto.getDirective = function getDirective(name) {\n    return find(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: objectValues(this.getTypeMap()),\n      directives: this.getDirectives().slice(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : [],\n      assumeValid: this.__validationErrors !== undefined\n    };\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLSchema, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLSchema';\n    }\n  }]);\n\n  return GraphQLSchema;\n}();\n\nfunction collectReferencedTypes(type, typeSet) {\n  var namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (var _i20 = 0, _namedType$getTypes2 = namedType.getTypes(); _i20 < _namedType$getTypes2.length; _i20++) {\n        var memberType = _namedType$getTypes2[_i20];\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (var _i22 = 0, _namedType$getInterfa6 = namedType.getInterfaces(); _i22 < _namedType$getInterfa6.length; _i22++) {\n        var interfaceType = _namedType$getInterfa6[_i22];\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (var _i24 = 0, _objectValues2 = objectValues(namedType.getFields()); _i24 < _objectValues2.length; _i24++) {\n        var field = _objectValues2[_i24];\n        collectReferencedTypes(field.type, typeSet);\n\n        for (var _i26 = 0, _field$args2 = field.args; _i26 < _field$args2.length; _i26++) {\n          var arg = _field$args2[_i26];\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (var _i28 = 0, _objectValues4 = objectValues(namedType.getFields()); _i28 < _objectValues4.length; _i28++) {\n        var _field = _objectValues4[_i28];\n        collectReferencedTypes(_field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","export default \"// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 400;\\n\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewTableWithSelectionDataSource,\\n} from \\\"./filtered-view-table-with-selection-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-selection\\\",\\n    styleUrls: [\\\"./filtered-view-table-with-selection.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-table-with-selection.component.html\\\",\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewTableWithSelectionDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewTableWithSelectionComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithSelectionDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","export default \"import { Component, Inject, Input, Optional } from \\\"@angular/core\\\";\\nimport { RepeatComponent } from \\\"@nova-ui/bits\\\";\\n\\nexport enum SchematicsDocsComponentType {\\n    \\\"list\\\" = \\\"list\\\",\\n    \\\"table\\\" = \\\"table\\\",\\n}\\n\\n@Component({\\n    selector: \\\"nui-schematic-cli-option\\\",\\n    templateUrl: \\\"./schematic-docs-cli-option.component.html\\\",\\n})\\nexport class SchematicsDocsCliOptionComponent {\\n    @Input() name: string;\\n\\n    public componentType = SchematicsDocsComponentType;\\n\\n    public fetch = `fetchURI = \\\"\\\\${this.url\\\\}/?page=\\\\${end / (end - start)}&results=\\\\${end - start}\\\"`;\\n\\n    public dataSourceSetup = {\\n        extendDS:\\n            `@Injectable()\\nexport class RandomuserTableDataSource extends DataSourceService<ITableModel> {\\n    constructor(private searchService: SearchService) {\\n        super();\\n    }\\n}`,\\n        defineFields:\\n            `private readonly url = \\\"https://yourserver.com/api\\\";\\nprivate cache = Array.from<ITableModel>({ length: 0 });\\npublic busy = new BehaviorSubject(false);`,\\n        getData:\\n            `public async getData(start: number = 0, end: number= 20): Promise<INovaFilteringOutputs> {\\n    let response: IRandomuserResponse = null;\\n    try {\\n        response = await\\n                    (await fetch(\\\"this.fetchURI\\\"))\\n                        .json();\\n                            return {\\n                                users: response.results.map((result: IRandomuserResults, i: number) => ({\\n                                    no: this.cache.length + i + 1,\\n                                    nameTitle: result.name.title,\\n                                    nameFirst: result.name.first,\\n                                    nameLast: result.name.last,\\n                                    gender: result.gender,\\n                                    country: result.location.country,\\n                                    city: result.location.city,\\n                                    postcode: result.location.postcode,\\n                                    email: result.email,\\n                                    cell: result.cell,\\n                                })),\\n                                total: response.results.length,\\n                                start: start,\\n                            } as UsersQueryResponse;\\n    } catch (e) {\\n        console.error(\\\"Error responding from server. Please visit https://https://randomuser.me/ to see if it's available\\\");\\n    }\\n}`,\\n        getFilteredData:\\n            `public async getFilteredData(filters: INovaFilters): Promise<INovaFilteringOutputs> {\\n    this.busy.next(true);\\n    const virtualScrollFilter = filters.virtualScroll && filters.virtualScroll.value;\\n    const start = virtualScrollFilter ? filters.virtualScroll.value.start : 0;\\n    const end = virtualScrollFilter ? filters.virtualScroll.value.end : 0;\\n\\n    this.getData(start, end).then((response: UsersQueryResponse) => {\\n        if (!response) { return; }\\n\\n        this.cache = this.cache.concat(response.users);\\n        this.dataSubject.next(this.cache);\\n        this.busy.next(false);\\n    });\\n\\n    return {\\n        repeat: {\\n            itemsSource: this.cache,\\n        },\\n        totalItems: 200,\\n    }\\n}`,\\n    };\\n\\n    public tableScrollingSetup = {\\n        vars:\\n            `\\n// will store the table data received from the server\\npublic totalItems: number = 0;\\npublic isBusy: boolean = false;\\n\\n// number of items to be fetched for each request\\npublic pageSize: number = 40;\\n\\nprivate onDestroy$: Subject<void> = new Subject<void>();\\n\\n// stores the cached table data dynamically changed after every request from the server\\n// this value is set to the dataSource input of the nui-table.\\npublic items: IServer[] = [];\\n\\n// define the array of columns for the table\\n// the table data from the datasource to the users var must come in the very same format.\\npublic displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n// datasource that you inject, or instantiate in constructor\\nprivate dataSource: TableWithVirtualScrollDataSource;\\n`,\\n        viewportManagerImport: `import { VirtualViewportManager } from \\\"@nova-ui/bits\\\";`,\\n        viewChildren:\\n            `\\n@ViewChild(CdkVirtualScrollViewport, { static: false }) viewport: CdkVirtualScrollViewport;\\n`,\\n        provideViewport:\\n            `\\n@Component({\\n    //\\n    providers: [VirtualViewportManager]\\n})\\n`,\\n        injectViewport:\\n            `\\nconstructor(private viewportManager: VirtualViewportManager) {}\\n`,\\n        oninitSubscribeBusy:\\n            `\\nngOnInit(): void {\\n    this.dataSource.busy.subscribe(busy => {\\n        this._isBusy = busy;\\n    });\\n}`,\\n        registerScroll:\\n            `private registerVirtualScroll() {\\n    this.dataSource.registerComponent({\\n        virtualScroll: { componentInstance: this.viewportManager },\\n    });\\n }`,\\n        ngAfterViewInitStart:\\n            `ngAfterViewInit(): void {\\n    this.registerVirtualScroll();\\n}`,\\n        ngAfterViewInitViewport:\\n            `this.viewportManager\\n    // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n    .setViewport(this.viewport)\\n    // Note: Initializing the stream with the desired page size, based on which\\n    // VirtualViewportManager will perform the observations and will emit\\n    // distinct ranges with step equal to provided pageSize\\n    .observeNextPage$({pageSize: this.range}).pipe(\\n    // Note: In case we know the total number of items we can stop the stream when dataset end is reached\\n    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\\n    filter(range => this.totalItems ? this.totalItems >= range.end : true),\\n    tap(() => this.dataSource.applyFilters()),\\n    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\\n    switchMap(() => this.dataSource.outputsSubject.pipe(\\n        tap((outputs: IFilteringOutputs) => {\\n            this._totalItems = outputs.totalItems;\\n            this.users = outputs.repeat.itemsSource || [];\\n            this.cd.detectChanges();\\n        })\\n    )),\\n    takeUntil(this.onDestroy$)\\n).subscribe();\\n        `,\\n\\n    };\\n\\n    public constructor(\\n        @Optional() @Inject(SchematicsDocsComponentType) public forComponent?: SchematicsDocsComponentType\\n    ) {}\\n\\n    public getRepeatPropKey(key: keyof RepeatComponent): string {\\n        return key;\\n    }\\n\\n    public for(forComponent: SchematicsDocsComponentType) {\\n        return this.forComponent === forComponent || !this.forComponent;\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","import inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { getNamedType, isLeafType } from \"../../type/definition.mjs\";\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            var fieldName = node.name.value;\n            var typeStr = inspect(type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" must not have a selection since type \\\"\").concat(typeStr, \"\\\" has no subfields.\"), selectionSet));\n          }\n        } else if (!selectionSet) {\n          var _fieldName = node.name.value;\n\n          var _typeStr = inspect(type);\n\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(_fieldName, \"\\\" of type \\\"\").concat(_typeStr, \"\\\" must have a selection of subfields. Did you mean \\\"\").concat(_fieldName, \" { ... }\\\"?\"), node));\n        }\n      }\n    }\n  };\n}\n","import devAssert from \"../jsutils/devAssert.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertValidName(name) {\n  var error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(0, 'Expected name to be a string.');\n\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new GraphQLError(\"Name \\\"\".concat(name, \"\\\" must not begin with \\\"__\\\", which is reserved by GraphQL introspection.\"));\n  }\n\n  if (!NAME_RX.test(name)) {\n    return new GraphQLError(\"Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \\\"\".concat(name, \"\\\" does not.\"));\n  }\n}\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./filtered-view-table-with-virtual-scroll-data\\\";\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewTableWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewTableWithVirtualScrollDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewTableWithVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { BasicFilterGroupCompositeComponent } from \\\"../basic-filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-basic-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\n\\nexport class BasicFilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(BasicFilterGroupCompositeComponent) filterGroups: QueryList<BasicFilterGroupCompositeComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: BasicFilterGroupCompositeComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class TableWithSortDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start))\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = TableWithSortDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","import find from \"../polyfills/find.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport printPathArray from \"../jsutils/printPathArray.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { isInputType, isNonNullType } from \"../type/definition.mjs\";\nimport { typeFromAST } from \"../utilities/typeFromAST.mjs\";\nimport { valueFromAST } from \"../utilities/valueFromAST.mjs\";\nimport { coerceInputValue } from \"../utilities/coerceInputValue.mjs\";\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n *\n * @internal\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  var errors = [];\n  var maxErrors = options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    var coerced = coerceVariableValues(schema, varDefNodes, inputs, function (error) {\n      if (maxErrors != null && errors.length >= maxErrors) {\n        throw new GraphQLError('Too many errors processing variables, error limit reached. Execution aborted.');\n      }\n\n      errors.push(error);\n    });\n\n    if (errors.length === 0) {\n      return {\n        coerced: coerced\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors: errors\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  var coercedValues = {};\n\n  var _loop = function _loop(_i2) {\n    var varDefNode = varDefNodes[_i2];\n    var varName = varDefNode.variable.name.value;\n    var varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      var varTypeStr = print(varDefNode.type);\n      onError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" expected value of type \\\"\").concat(varTypeStr, \"\\\" which cannot be used as an input type.\"), varDefNode.type));\n      return \"continue\";\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        var _varTypeStr = inspect(varType);\n\n        onError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of required type \\\"\").concat(_varTypeStr, \"\\\" was not provided.\"), varDefNode));\n      }\n\n      return \"continue\";\n    }\n\n    var value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      var _varTypeStr2 = inspect(varType);\n\n      onError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of non-null type \\\"\").concat(_varTypeStr2, \"\\\" must not be null.\"), varDefNode));\n      return \"continue\";\n    }\n\n    coercedValues[varName] = coerceInputValue(value, varType, function (path, invalidValue, error) {\n      var prefix = \"Variable \\\"$\".concat(varName, \"\\\" got invalid value \") + inspect(invalidValue);\n\n      if (path.length > 0) {\n        prefix += \" at \\\"\".concat(varName).concat(printPathArray(path), \"\\\"\");\n      }\n\n      onError(new GraphQLError(prefix + '; ' + error.message, varDefNode, undefined, undefined, undefined, error.originalError));\n    });\n  };\n\n  for (var _i2 = 0; _i2 < varDefNodes.length; _i2++) {\n    var _ret = _loop(_i2);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n *\n * @internal\n */\n\n\nexport function getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  var coercedValues = {}; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n  var argumentNodes = (_node$arguments = node.arguments) !== null && _node$arguments !== void 0 ? _node$arguments : [];\n  var argNodeMap = keyMap(argumentNodes, function (arg) {\n    return arg.name.value;\n  });\n\n  for (var _i4 = 0, _def$args2 = def.args; _i4 < _def$args2.length; _i4++) {\n    var argDef = _def$args2[_i4];\n    var name = argDef.name;\n    var argType = argDef.type;\n    var argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of required type \\\"\").concat(inspect(argType), \"\\\" \") + 'was not provided.', node);\n      }\n\n      continue;\n    }\n\n    var valueNode = argumentNode.value;\n    var isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      var variableName = valueNode.name.value;\n\n      if (variableValues == null || !hasOwnProperty(variableValues, variableName)) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of required type \\\"\").concat(inspect(argType), \"\\\" \") + \"was provided the variable \\\"$\".concat(variableName, \"\\\" which was not provided a runtime value.\"), valueNode);\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of non-null type \\\"\").concat(inspect(argType), \"\\\" \") + 'must not be null.', valueNode);\n    }\n\n    var coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" has invalid value \").concat(print(valueNode), \".\"), valueNode);\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var directiveNode = node.directives && find(node.directives, function (directive) {\n    return directive.name.value === directiveDef.name;\n  });\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","export default \"<nui-message [allowDismiss]=\\\"false\\\" type=\\\"info\\\">\\n    This code has been generated using the following command:\\n    <code>\\n        <ng-content></ng-content>\\n    </code>\\n    <ng-content select=\\\"[appendedText]\\\"></ng-content>\\n</nui-message>\\n\";","export default \"<h2>Selection result</h2>\\n<div class=\\\"flex-row-container\\\">\\n    <span class=\\\"flex-independent-row-item\\\">{{selection | json}}</span>\\n</div>\\n<div class=\\\"app-filtered-view-table-with-virtual-scroll-selection-table__container\\\">\\n    <cdk-virtual-scroll-viewport class=\\\"app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container\\\" tableStickyHeader #viewportRef [itemSize]=\\\"rowHeight\\\">\\n    <table nui-table [dataSource]=\\\"items | sliceRange: viewportRef.getRenderedRange()\\\"\\n           [(selection)]=\\\"selection\\\"\\n           (selectionChange)=\\\"onSelectionChanged($event)\\\"\\n           [selectable]=\\\"true\\\"\\n           [trackBy]=\\\"trackBy\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n            <ng-template nuiRowDef cdkVirtualFor\\n                         let-context\\n                         [nuiRowDefColumns]=\\\"displayedColumns\\\"\\n                         [cdkVirtualForOf]=\\\"items\\\">\\n                <tr nui-row  [rowObject]=\\\"context\\\"></tr>\\n            </ng-template>\\n    </table>\\n    </cdk-virtual-scroll-viewport>\\n\\n    <footer class=\\\"app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                    <div class=\\\"d-flex pt-3 pb-3\\\">\\n                        <ng-container i18n *ngIf=\\\"items.length !== totalItems; else endOfData\\\">, scroll down for more.</ng-container>\\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n\";","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport didYouMean from \"../jsutils/didYouMean.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport safeArrayFrom from \"../jsutils/safeArrayFrom.mjs\";\nimport suggestionList from \"../jsutils/suggestionList.mjs\";\nimport printPathArray from \"../jsutils/printPathArray.mjs\";\nimport { addPath, pathToArray } from \"../jsutils/Path.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { isLeafType, isInputObjectType, isListType, isNonNullType } from \"../type/definition.mjs\";\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nexport function coerceInputValue(inputValue, type) {\n  var onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOnError;\n  return coerceInputValueImpl(inputValue, type, onError);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  var errorPrefix = 'Invalid value ' + inspect(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += \" at \\\"value\".concat(printPathArray(path), \"\\\"\");\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if (isNonNullType(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(pathToArray(path), inputValue, new GraphQLError(\"Expected non-nullable type \\\"\".concat(inspect(type), \"\\\" not to be null.\")));\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    var coercedList = safeArrayFrom(inputValue, function (itemValue, index) {\n      var itemPath = addPath(path, index, undefined);\n      return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n    });\n\n    if (coercedList != null) {\n      return coercedList;\n    } // Lists accept a non-list value as a list of one.\n\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(inputValue)) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\" to be an object.\")));\n      return;\n    }\n\n    var coercedValue = {};\n    var fieldDefs = type.getFields();\n\n    for (var _i2 = 0, _objectValues2 = objectValues(fieldDefs); _i2 < _objectValues2.length; _i2++) {\n      var field = _objectValues2[_i2];\n      var fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          var typeStr = inspect(field.type);\n          onError(pathToArray(path), inputValue, new GraphQLError(\"Field \\\"\".concat(field.name, \"\\\" of required type \\\"\").concat(typeStr, \"\\\" was not provided.\")));\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(fieldValue, field.type, onError, addPath(path, field.name, type.name));\n    } // Ensure every provided field is defined.\n\n\n    for (var _i4 = 0, _Object$keys2 = Object.keys(inputValue); _i4 < _Object$keys2.length; _i4++) {\n      var fieldName = _Object$keys2[_i4];\n\n      if (!fieldDefs[fieldName]) {\n        var suggestions = suggestionList(fieldName, Object.keys(type.getFields()));\n        onError(pathToArray(path), inputValue, new GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" is not defined by type \\\"\").concat(type.name, \"\\\".\") + didYouMean(suggestions)));\n      }\n    }\n\n    return coercedValue;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isLeafType(type)) {\n    var parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof GraphQLError) {\n        onError(pathToArray(path), inputValue, error);\n      } else {\n        onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\". \") + error.message, undefined, undefined, undefined, undefined, error));\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\".\")));\n    }\n\n    return parseResult;\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || invariant(0, 'Unexpected input type: ' + inspect(type));\n}\n","import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n} from \"@nova-ui/bits\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { Subscription } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\ninterface ExampleItem {\n    color: string;\n    status: string;\n}\n\ninterface CustomTemplateFilterGroupOption extends IFilterGroupOption {\n    icon: string;\n}\n\ninterface CustomTemplateFilterGroupItem extends IFilterGroupItem {\n    count: number;\n    allFilterOptions: CustomTemplateFilterGroupOption[];\n}\n\nconst RANDOM_ARRAY = [\n    {color: \"regular-azure\", status: \"Critical\"},\n    {color: \"regular-black\", status: \"Warning\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-yellow\", status: \"Critical\"},\n    {color: \"regular-yellow\", status: \"Warning\"},\n    {color: \"regular-black\", status: \"Up\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-azure\", status: \"Up\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-azure\", status: \"Critical\"},\n];\n\n@Component({\n    selector: \"app-custom-template-filter-group-composite-example\",\n    templateUrl: \"custom-template-filter-group.example.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n})\nexport class CustomTemplateFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: CustomTemplateFilterGroupItem[] = [\n        {\n            id: \"color\",\n            title: \"Color\",\n            count: 4,\n            allFilterOptions: [\n                {\n                    icon: \"copy\",\n                    value: \"azure\",\n                    displayValue: \"Azure\",\n                }, {\n                    icon: \"clock\",\n                    value: \"black\",\n                    displayValue: \"Black\",\n                }, {\n                    icon: \"status_up\",\n                    value: \"blue\",\n                    displayValue: \"Blue\",\n                }, {\n                    icon: \"signal-0\",\n                    value: \"yellow\",\n                    displayValue: \"Yellow\",\n                },\n            ],\n            selectedFilterValues: [\"azure\"],\n        }, {\n            id: \"status\",\n            title: \"Status\",\n            count: 3,\n            allFilterOptions: [\n                {\n                    icon: \"status_warning\",\n                    value: \"warning\",\n                    displayValue: \"Warning\",\n                }, {\n                    icon: \"status_critical\",\n                    value: \"critical\",\n                    displayValue: \"Critical\",\n                },\n                {\n                    icon: \"status_up\",\n                    value: \"up\",\n                    displayValue: \"Up\",\n                },\n            ],\n            selectedFilterValues: [\"critical\"],\n        },\n    ];\n\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n\n    private outputsSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n    }\n\n    ngAfterViewInit(): void {\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.filteringState = data;\n            // get counts of filters\n            this.recalculateCounts(data);\n        });\n        this.dataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.dataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, \"filteringState.repeat.itemsSource\"));\n    }\n\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value];\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n}\n","<ng-template #customCheckboxTemplate let-checkbox=\"checkbox\">\n    <div class=\"d-flex align-items-center\">\n        <nui-icon class=\"mr-2\" [icon]=\"checkbox.icon\"></nui-icon>\n        <span class=\"mr-2\">{{checkbox.displayValue}}</span>\n    </div>\n</ng-template>\n\n<ng-template #customExpanderTemplate let-expander=\"expander\">\n    <div class=\"d-flex align-items-center\">\n        <span class=\"mr-2\">\n            <b>{{expander.title}}</b>\n        </span>\n        <span class=\"mr-2\" *ngIf=\"!expander.expanded\">{{expander.count}}</span>\n    </div>\n</ng-template>\n\n<ng-template #emptyListTemplate>\n    <div class=\"d-flex flex-column align-items-center\">\n        <nui-image [isWatermark]=\"true\" image=\"no-data-to-show\"></nui-image>\n        <p class=\"nui-text-small\">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-custom-template-filter-groups-wrapper>\n            <app-custom-template-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                        [filterGroupItem]=\"filterGroupItem\"\n                                        [checkboxTemplateRef]=\"customCheckboxTemplate\"\n                                        [expanderTemplateRef]=\"customExpanderTemplate\"\n                                        (filterChanged)=\"changeFilters($event)\"></app-custom-template-filter-group>\n        </app-custom-template-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf=\"hasItems(); else emptyListTemplate\">\n            <nui-repeat id=\"nui-composites-demo-repeat\"\n                        [itemsSource]=\"filteringState.repeat.itemsSource\"\n                        [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                        paddingSize=\"normal\">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-table-with-virtual-scroll-table #child></app-filtered-view-table-with-virtual-scroll-table>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { isCompositeType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        var type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          var typeStr = print(typeCondition);\n          context.reportError(new GraphQLError(\"Fragment cannot condition on non composite type \\\"\".concat(typeStr, \"\\\".\"), typeCondition));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        var typeStr = print(node.typeCondition);\n        context.reportError(new GraphQLError(\"Fragment \\\"\".concat(node.name.value, \"\\\" cannot condition on non composite type \\\"\").concat(typeStr, \"\\\".\"), node.typeCondition));\n      }\n    }\n  };\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Apollo } from \\\"apollo-angular\\\";\\nimport { DocumentNode } from \\\"graphql\\\";\\nimport gql from \\\"graphql-tag\\\";\\nimport isArray from \\\"lodash/isArray\\\";\\nimport isPlainObject from \\\"lodash/isPlainObject\\\";\\nimport {\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersCollection,\\n    ISubregion,\\n    ITreeNode,\\n} from \\\"./types\\\";\\n\\nconst nameFieldsProperties = [\\\"name\\\", \\\"code\\\", \\\"__typename\\\"];\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewWithTreeDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private apollo: Apollo\\n    ) {\\n        super();\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.Subregion;\\n\\n                return {\\n                    tree: { itemsSource: this.buildTree(itemsSource) },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<ISubregion> {\\n        const mainRequest = this.apollo.query<ISubregion>({query: this.generateQuery(filters)});\\n\\n        return mainRequest.pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(mainResponse => mainResponse.data),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({} as ISubregion);\\n            })\\n        );\\n    }\\n\\n    private generateQuery(filters: IServerFilters): DocumentNode {\\n        let languages = \\\"\\\";\\n        let currencies = \\\"\\\";\\n        let subregion = \\\"\\\";\\n\\n        filters.language?.value.forEach(i => languages += `{officialLanguages_some: {name: \\\"${i}\\\"}},`);\\n        filters.currency?.value.forEach(i => currencies += `{currencies_some: {code: \\\"${i}\\\"}},`);\\n        filters.subregion?.value.forEach(i => subregion += `{name: \\\"${i}\\\"},`);\\n\\n        const queryString = `query {\\n          Subregion(filter: {AND: [{region: {name: \\\"Americas\\\"}}], ${subregion ? \\\"OR: [\\\" + subregion + \\\"]\\\" : \\\"\\\"}}) {\\n            name,\\n            countries${languages || currencies ? \\\"(filter: {AND: [\\\" + languages + currencies + \\\"]})\\\" : \\\"\\\"} {\\n              name,\\n              population,\\n              officialLanguages {\\n                name\\n              },\\n              currencies {\\n                code\\n              }\\n            }\\n          }\\n        }`;\\n\\n        return gql`${queryString}`;\\n    }\\n\\n    private buildTree(value: any): ITreeNode[] {\\n        const data: ITreeNode[] = [];\\n\\n        for (const k in value) {\\n            if (value.hasOwnProperty(k) && k !== \\\"__typename\\\") {\\n                const nodeValue: ITreeNode = value[k];\\n                const node: ITreeNode = {} as ITreeNode;\\n\\n                if (isArray(nodeValue)) {\\n                    node.name = `${k}`;\\n                    node.children = this.buildTree(nodeValue);\\n                } else if (isPlainObject(nodeValue)) {\\n                    node.name = nodeValue.name || nodeValue.code || `${k}`;\\n                    const hasChildren = Object.keys(nodeValue).filter((key: any) => !nameFieldsProperties.includes(key)).length;\\n                    if (hasChildren) {\\n                        node.children = this.buildTree(nodeValue);\\n                    }\\n                } else {\\n                    if (!nameFieldsProperties.includes(k)) {\\n                        node.name = `${k}`;\\n                        node.children = [{name: nodeValue}];\\n                    }\\n                }\\n\\n                if (Object.keys(node).length) {\\n                    data.push(node);\\n                }\\n            }\\n        }\\n\\n        return data;\\n    }\\n\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.nui-filter-group-composite-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","import { InjectionToken } from \"@angular/core\";\n// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 400;\n\nexport const CUSTOM_SCROLL_ITEMS_PER_PAGE: InjectionToken<number> = new InjectionToken(\"CUSTOM_SCROLL_ITEMS_PER_PAGE\");\n\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"nui-filter-group-composite-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\n\nexport class FilterGroupCompositeDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"nui-filter-group-composite-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"nui-filter-group-composite-dialog__body\">\n        <nui-item-picker-composite\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></nui-item-picker-composite>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","import invariant from \"../../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType, isInputObjectType } from \"../../../type/definition.mjs\";\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || invariant(0);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(0);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(0);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    nameof,\\n    PaginatorComponent,\\n    RepeatComponent,\\n    SearchComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    BehaviorSubject,\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./search-list-data\\\";\\nimport { SearchListDataSource } from \\\"./search-list-data-source.service\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-search-list\\\",\\n    templateUrl: \\\"./search-list.component.html\\\",\\n    styleUrls: [\\\"./search-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: SearchListDataSource,\\n        },\\n    ],\\n})\\nexport class SearchListComponent implements OnInit, AfterViewInit, OnDestroy {\\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n    public isBusy = false;\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: SearchListDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n            search: { componentInstance: this.search },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.listItems$.next(data.repeat?.itemsSource || []);\\n\\n                this.filteringState = data;\\n\\n                this.totalItems = data.paginator?.total ?? 0;\\n\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // make 1st call to retrieve initial results\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n    TemplateRef,\\n} from \\\"@angular/core\\\";\\nimport { DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-basic-filter-group\\\",\\n    templateUrl: \\\"./basic-filter-group.component.html\\\",\\n    styleUrls: [\\\"./basic-filter-group.component.less\\\"],\\n})\\nexport class BasicFilterGroupCompositeComponent implements IFilterPub, OnInit {\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","export { Source } from \"./source.mjs\";\nexport { getLocation } from \"./location.mjs\";\nexport { printLocation, printSourceLocation } from \"./printLocation.mjs\";\nexport { Kind } from \"./kinds.mjs\";\nexport { TokenKind } from \"./tokenKind.mjs\";\nexport { Lexer } from \"./lexer.mjs\";\nexport { parse, parseValue, parseType } from \"./parser.mjs\";\nexport { print } from \"./printer.mjs\";\nexport { visit, visitInParallel, getVisitFn, BREAK } from \"./visitor.mjs\";\nexport { Location, Token } from \"./ast.mjs\";\nexport { isDefinitionNode, isExecutableDefinitionNode, isSelectionNode, isValueNode, isTypeNode, isTypeSystemDefinitionNode, isTypeDefinitionNode, isTypeSystemExtensionNode, isTypeExtensionNode } from \"./predicates.mjs\";\nexport { DirectiveLocation } from \"./directiveLocation.mjs\";\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-table-with-custom-virtual-scroll__container {\\n    height: 400px;\\n    border-color: lightgray;\\n    overflow: auto;\\n}\\n\\n.app-table-with-custom-virtual-scroll-searchable__search {\\n    max-width: 350px;\\n    margin-bottom: @nui-space-xs;\\n    margin-left: auto;\\n}\\n\\n.app-table-with-custom-virtual-scroll-scrolling-container {\\n    height: 300px;\\n}\\n\\n.app-table-with-custom-virtual-scroll-scrolling-footer {\\n    height: 28px;\\n    .setCssVariable(background-color, nui-color-bg-transparent);\\n    .setCssVariable(color, nui-color-text-secondary);\\n}\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) private dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-basic-table__container {\\n    overflow: auto;\\n}\\n\\n\";","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-table-with-custom-virtual-scroll-table #child></app-filtered-view-table-with-custom-virtual-scroll-table>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","import {Component, Input, OnInit, TemplateRef} from \"@angular/core\";\nimport _isObject from \"lodash/isObject\";\nimport _sortBy from \"lodash/sortBy\";\n\n@Component({\n    selector: \"nui-recursive-object-view\",\n    template: `\n        <div class=\"ml-5\" *ngFor=\"let key of orderOfKeys\">\n            <div *ngIf=\"checkInstance(key); else notObject\">\n                <nui-expander [header]=\"key\" icon=\"group\">\n                    <nui-recursive-object-view [object]=\"object[key]\"\n                                               [objectTemplate]=\"objectTemplate\"\n                                               [notObjectTemplate]=\"notObjectTemplate\">\n                        <ng-container [ngTemplateOutlet]=\"objectTemplate\"\n                                      [ngTemplateOutletContext]=\"{item: object[key]}\"></ng-container>\n                    </nui-recursive-object-view>\n                </nui-expander>\n            </div>\n            <ng-template #notObject>\n                <ng-container [ngTemplateOutlet]=\"notObjectTemplate\"\n                              [ngTemplateOutletContext]=\"{item: key}\"></ng-container>\n            </ng-template>\n        </div>\n    `,\n})\nexport class RecursiveObjectViewComponent implements OnInit {\n    @Input() object: any;\n    @Input() objectTemplate: TemplateRef<string>;\n    @Input() notObjectTemplate: TemplateRef<string>;\n\n    public orderOfKeys: Array<string>;\n\n    ngOnInit() {\n        this.orderOfKeys = _sortBy(Object.keys(this.object), (key: string) => key.length);\n    }\n\n    public checkInstance(key: string) {\n        return _isObject(this.object[key]);\n    }\n}\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","export default \"import { InjectionToken } from \\\"@angular/core\\\";\\n// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 400;\\n\\nexport const CUSTOM_SCROLL_ITEMS_PER_PAGE: InjectionToken<number> = new InjectionToken(\\\"CUSTOM_SCROLL_ITEMS_PER_PAGE\\\");\\n\\n\";","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","/**\n * Returns the first argument it receives.\n */\nexport default function identityFunc(x) {\n  return x;\n}\n","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-custom-virtual-scroll-table #child></app-filtered-view-table-with-custom-virtual-scroll-table>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewTableWithCustomVirtualScrollDataSource,\n} from \"./filtered-view-table-with-custom-virtual-scroll-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-custom-virtual-scroll\",\n    styleUrls: [\"./filtered-view-table-with-custom-virtual-scroll.component.less\"],\n    templateUrl: \"./filtered-view-table-with-custom-virtual-scroll.component.html\",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithCustomVirtualScrollDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithCustomVirtualScrollComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithCustomVirtualScrollDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport isAsyncIterable from \"../jsutils/isAsyncIterable.mjs\";\nimport { addPath, pathToArray } from \"../jsutils/Path.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { locatedError } from \"../error/locatedError.mjs\";\nimport { getArgumentValues } from \"../execution/values.mjs\";\nimport { assertValidExecutionArguments, buildExecutionContext, buildResolveInfo, collectFields, execute, getFieldDef } from \"../execution/execute.mjs\";\nimport { getOperationRootType } from \"../utilities/getOperationRootType.mjs\";\nimport mapAsyncIterator from \"./mapAsyncIterator.mjs\";\nexport function subscribe(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? subscribeImpl(argsOrSchema) : subscribeImpl({\n    schema: argsOrSchema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    subscribeFieldResolver: subscribeFieldResolver\n  });\n}\n/**\n * This function checks if the error is a GraphQLError. If it is, report it as\n * an ExecutionResult, containing only errors and no data. Otherwise treat the\n * error as a system-class error and re-throw it.\n */\n\nfunction reportGraphQLError(error) {\n  if (error instanceof GraphQLError) {\n    return {\n      errors: [error]\n    };\n  }\n\n  throw error;\n}\n\nfunction subscribeImpl(args) {\n  var schema = args.schema,\n      document = args.document,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      subscribeFieldResolver = args.subscribeFieldResolver;\n  var sourcePromise = createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, subscribeFieldResolver); // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  var mapSourceToResponse = function mapSourceToResponse(payload) {\n    return execute({\n      schema: schema,\n      document: document,\n      rootValue: payload,\n      contextValue: contextValue,\n      variableValues: variableValues,\n      operationName: operationName,\n      fieldResolver: fieldResolver\n    });\n  }; // Resolve the Source Stream, then map every source value to a\n  // ExecutionResult value as described above.\n\n\n  return sourcePromise.then(function (resultOrStream) {\n    return (// Note: Flow can't refine isAsyncIterable, so explicit casts are used.\n      isAsyncIterable(resultOrStream) ? mapAsyncIterator(resultOrStream, mapSourceToResponse, reportGraphQLError) : resultOrStream\n    );\n  });\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\n\nexport function createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n  assertValidExecutionArguments(schema, document, variableValues);\n  return new Promise(function (resolve) {\n    // If a valid context cannot be created due to incorrect arguments,\n    // this will throw an error.\n    var exeContext = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n    resolve( // Return early errors if execution context failed.\n    Array.isArray(exeContext) ? {\n      errors: exeContext\n    } : executeSubscription(exeContext));\n  }).catch(reportGraphQLError);\n}\n\nfunction executeSubscription(exeContext) {\n  var schema = exeContext.schema,\n      operation = exeContext.operation,\n      variableValues = exeContext.variableValues,\n      rootValue = exeContext.rootValue;\n  var type = getOperationRootType(schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n  var responseNames = Object.keys(fields);\n  var responseName = responseNames[0];\n  var fieldNodes = fields[responseName];\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n  var fieldDef = getFieldDef(schema, type, fieldName);\n\n  if (!fieldDef) {\n    throw new GraphQLError(\"The subscription field \\\"\".concat(fieldName, \"\\\" is not defined.\"), fieldNodes);\n  }\n\n  var path = addPath(undefined, responseName, type.name);\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, type, path); // Coerce to Promise for easier error handling and consistent return type.\n\n  return new Promise(function (resolveResult) {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    var args = getArgumentValues(fieldDef, fieldNodes[0], variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    var contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    var resolveFn = (_fieldDef$subscribe = fieldDef.subscribe) !== null && _fieldDef$subscribe !== void 0 ? _fieldDef$subscribe : exeContext.fieldResolver;\n    resolveResult(resolveFn(rootValue, args, contextValue, info));\n  }).then(function (eventStream) {\n    if (eventStream instanceof Error) {\n      throw locatedError(eventStream, fieldNodes, pathToArray(path));\n    } // Assert field returned an event stream, otherwise yield an error.\n\n\n    if (!isAsyncIterable(eventStream)) {\n      throw new Error('Subscription field must return Async Iterable. ' + \"Received: \".concat(inspect(eventStream), \".\"));\n    }\n\n    return eventStream;\n  }, function (error) {\n    throw locatedError(error, fieldNodes, pathToArray(path));\n  });\n}\n","import find from \"../polyfills/find.mjs\";\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { locatedError } from \"../error/locatedError.mjs\";\nimport { isValidNameError } from \"../utilities/assertValidName.mjs\";\nimport { isEqualType, isTypeSubTypeOf } from \"../utilities/typeComparators.mjs\";\nimport { assertSchema } from \"./schema.mjs\";\nimport { isIntrospectionType } from \"./introspection.mjs\";\nimport { isDirective, GraphQLDeprecatedDirective } from \"./directives.mjs\";\nimport { isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNamedType, isNonNullType, isInputType, isOutputType, isRequiredArgument, isRequiredInputField } from \"./definition.mjs\";\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n\n  var context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  var errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  var errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n\nvar SchemaValidationContext = /*#__PURE__*/function () {\n  function SchemaValidationContext(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  var _proto = SchemaValidationContext.prototype;\n\n  _proto.reportError = function reportError(message, nodes) {\n    var _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this.addError(new GraphQLError(message, _nodes));\n  };\n\n  _proto.addError = function addError(error) {\n    this._errors.push(error);\n  };\n\n  _proto.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  return SchemaValidationContext;\n}();\n\nfunction validateRootTypes(context) {\n  var schema = context.schema;\n  var queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\"Query root type must be Object type, it cannot be \".concat(inspect(queryType), \".\"), (_getOperationTypeNode = getOperationTypeNode(schema, 'query')) !== null && _getOperationTypeNode !== void 0 ? _getOperationTypeNode : queryType.astNode);\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + \"\".concat(inspect(mutationType), \".\"), (_getOperationTypeNode2 = getOperationTypeNode(schema, 'mutation')) !== null && _getOperationTypeNode2 !== void 0 ? _getOperationTypeNode2 : mutationType.astNode);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + \"\".concat(inspect(subscriptionType), \".\"), (_getOperationTypeNode3 = getOperationTypeNode(schema, 'subscription')) !== null && _getOperationTypeNode3 !== void 0 ? _getOperationTypeNode3 : subscriptionType.astNode);\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var operationNodes = getAllSubNodes(schema, function (node) {\n    return node.operationTypes;\n  });\n\n  for (var _i2 = 0; _i2 < operationNodes.length; _i2++) {\n    var node = operationNodes[_i2];\n\n    if (node.operation === operation) {\n      return node.type;\n    }\n  }\n\n  return undefined;\n}\n\nfunction validateDirectives(context) {\n  for (var _i4 = 0, _context$schema$getDi2 = context.schema.getDirectives(); _i4 < _context$schema$getDi2.length; _i4++) {\n    var directive = _context$schema$getDi2[_i4];\n\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\"Expected directive but got: \".concat(inspect(directive), \".\"), directive === null || directive === void 0 ? void 0 : directive.astNode);\n      continue;\n    } // Ensure they are named correctly.\n\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n      var arg = _directive$args2[_i6];\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\"The type of @\".concat(directive.name, \"(\").concat(arg.name, \":) must be Input Type \") + \"but got: \".concat(inspect(arg.type), \".\"), arg.astNode);\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\"Required argument @\".concat(directive.name, \"(\").concat(arg.name, \":) cannot be deprecated.\"), [getDeprecatedDirectiveNode(arg.astNode), // istanbul ignore next (TODO need to write coverage tests)\n        (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0 ? void 0 : _arg$astNode.type]);\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  var error = isValidNameError(node.name);\n\n  if (error) {\n    context.addError(locatedError(error, node.astNode));\n  }\n}\n\nfunction validateTypes(context) {\n  var validateInputObjectCircularRefs = createInputObjectCircularRefsValidator(context);\n  var typeMap = context.schema.getTypeMap();\n\n  for (var _i8 = 0, _objectValues2 = objectValues(typeMap); _i8 < _objectValues2.length; _i8++) {\n    var type = _objectValues2[_i8];\n\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\"Expected GraphQL named type but got: \".concat(inspect(type), \".\"), type.astNode);\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  var fields = objectValues(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(\"Type \".concat(type.name, \" must define one or more fields.\"), getAllNodes(type));\n  }\n\n  for (var _i10 = 0; _i10 < fields.length; _i10++) {\n    var field = fields[_i10];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \" must be Output Type \") + \"but got: \".concat(inspect(field.type), \".\"), (_field$astNode = field.astNode) === null || _field$astNode === void 0 ? void 0 : _field$astNode.type);\n    } // Ensure the arguments are valid\n\n\n    for (var _i12 = 0, _field$args2 = field.args; _i12 < _field$args2.length; _i12++) {\n      var arg = _field$args2[_i12];\n      var argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) must be Input \") + \"Type but got: \".concat(inspect(arg.type), \".\"), (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0 ? void 0 : _arg$astNode2.type);\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\"Required argument \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) cannot be deprecated.\"), [getDeprecatedDirectiveNode(arg.astNode), // istanbul ignore next (TODO need to write coverage tests)\n        (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0 ? void 0 : _arg$astNode3.type]);\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  var ifaceTypeNames = Object.create(null);\n\n  for (var _i14 = 0, _type$getInterfaces2 = type.getInterfaces(); _i14 < _type$getInterfaces2.length; _i14++) {\n    var iface = _type$getInterfaces2[_i14];\n\n    if (!isInterfaceType(iface)) {\n      context.reportError(\"Type \".concat(inspect(type), \" must only implement Interface types, \") + \"it cannot implement \".concat(inspect(iface), \".\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\"Type \".concat(type.name, \" cannot implement itself because it would create a circular reference.\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\"Type \".concat(type.name, \" can only implement \").concat(iface.name, \" once.\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  var typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (var _i16 = 0, _objectValues4 = objectValues(iface.getFields()); _i16 < _objectValues4.length; _i16++) {\n    var ifaceField = _objectValues4[_i16];\n    var fieldName = ifaceField.name;\n    var typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expected but \").concat(type.name, \" does not provide it.\"), [ifaceField.astNode].concat(getAllNodes(type)));\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expects type \") + \"\".concat(inspect(ifaceField.type), \" but \").concat(type.name, \".\").concat(fieldName, \" \") + \"is type \".concat(inspect(typeField.type), \".\"), [// istanbul ignore next (TODO need to write coverage tests)\n      (_ifaceField$astNode = ifaceField.astNode) === null || _ifaceField$astNode === void 0 ? void 0 : _ifaceField$astNode.type, // istanbul ignore next (TODO need to write coverage tests)\n      (_typeField$astNode = typeField.astNode) === null || _typeField$astNode === void 0 ? void 0 : _typeField$astNode.type]);\n    } // Assert each interface field arg is implemented.\n\n\n    var _loop = function _loop(_i18, _ifaceField$args2) {\n      var ifaceArg = _ifaceField$args2[_i18];\n      var argName = ifaceArg.name;\n      var typeArg = find(typeField.args, function (arg) {\n        return arg.name === argName;\n      }); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) expected but \").concat(type.name, \".\").concat(fieldName, \" does not provide it.\"), [ifaceArg.astNode, typeField.astNode]);\n        return \"continue\";\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) \") + \"expects type \".concat(inspect(ifaceArg.type), \" but \") + \"\".concat(type.name, \".\").concat(fieldName, \"(\").concat(argName, \":) is type \") + \"\".concat(inspect(typeArg.type), \".\"), [// istanbul ignore next (TODO need to write coverage tests)\n        (_ifaceArg$astNode = ifaceArg.astNode) === null || _ifaceArg$astNode === void 0 ? void 0 : _ifaceArg$astNode.type, // istanbul ignore next (TODO need to write coverage tests)\n        (_typeArg$astNode = typeArg.astNode) === null || _typeArg$astNode === void 0 ? void 0 : _typeArg$astNode.type]);\n      } // TODO: validate default values?\n\n    };\n\n    for (var _i18 = 0, _ifaceField$args2 = ifaceField.args; _i18 < _ifaceField$args2.length; _i18++) {\n      var _ret = _loop(_i18, _ifaceField$args2);\n\n      if (_ret === \"continue\") continue;\n    } // Assert additional arguments must not be required.\n\n\n    var _loop2 = function _loop2(_i20, _typeField$args2) {\n      var typeArg = _typeField$args2[_i20];\n      var argName = typeArg.name;\n      var ifaceArg = find(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\"Object field \".concat(type.name, \".\").concat(fieldName, \" includes required argument \").concat(argName, \" that is missing from the Interface field \").concat(iface.name, \".\").concat(fieldName, \".\"), [typeArg.astNode, ifaceField.astNode]);\n      }\n    };\n\n    for (var _i20 = 0, _typeField$args2 = typeField.args; _i20 < _typeField$args2.length; _i20++) {\n      _loop2(_i20, _typeField$args2);\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  var ifaceInterfaces = type.getInterfaces();\n\n  for (var _i22 = 0, _iface$getInterfaces2 = iface.getInterfaces(); _i22 < _iface$getInterfaces2.length; _i22++) {\n    var transitive = _iface$getInterfaces2[_i22];\n\n    if (ifaceInterfaces.indexOf(transitive) === -1) {\n      context.reportError(transitive === type ? \"Type \".concat(type.name, \" cannot implement \").concat(iface.name, \" because it would create a circular reference.\") : \"Type \".concat(type.name, \" must implement \").concat(transitive.name, \" because it is implemented by \").concat(iface.name, \".\"), [].concat(getAllImplementsInterfaceNodes(iface, transitive), getAllImplementsInterfaceNodes(type, iface)));\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  var memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\"Union type \".concat(union.name, \" must define one or more member types.\"), getAllNodes(union));\n  }\n\n  var includedTypeNames = Object.create(null);\n\n  for (var _i24 = 0; _i24 < memberTypes.length; _i24++) {\n    var memberType = memberTypes[_i24];\n\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include type \").concat(memberType.name, \" once.\"), getUnionMemberTypeNodes(union, memberType.name));\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include Object types, \") + \"it cannot include \".concat(inspect(memberType), \".\"), getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  var enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\"Enum type \".concat(enumType.name, \" must define one or more values.\"), getAllNodes(enumType));\n  }\n\n  for (var _i26 = 0; _i26 < enumValues.length; _i26++) {\n    var enumValue = enumValues[_i26];\n    var valueName = enumValue.name; // Ensure valid name.\n\n    validateName(context, enumValue);\n\n    if (valueName === 'true' || valueName === 'false' || valueName === 'null') {\n      context.reportError(\"Enum type \".concat(enumType.name, \" cannot include value: \").concat(valueName, \".\"), enumValue.astNode);\n    }\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  var fields = objectValues(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\"Input Object type \".concat(inputObj.name, \" must define one or more fields.\"), getAllNodes(inputObj));\n  } // Ensure the arguments are valid\n\n\n  for (var _i28 = 0; _i28 < fields.length; _i28++) {\n    var field = fields[_i28];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\"The type of \".concat(inputObj.name, \".\").concat(field.name, \" must be Input Type \") + \"but got: \".concat(inspect(field.type), \".\"), (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0 ? void 0 : _field$astNode2.type);\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\"Required input field \".concat(inputObj.name, \".\").concat(field.name, \" cannot be deprecated.\"), [getDeprecatedDirectiveNode(field.astNode), // istanbul ignore next (TODO need to write coverage tests)\n      (_field$astNode3 = field.astNode) === null || _field$astNode3 === void 0 ? void 0 : _field$astNode3.type]);\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  var fieldPath = []; // Position in the type path\n\n  var fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    var fields = objectValues(inputObj.getFields());\n\n    for (var _i30 = 0; _i30 < fields.length; _i30++) {\n      var field = fields[_i30];\n\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        var fieldType = field.type.ofType;\n        var cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          var cyclePath = fieldPath.slice(cycleIndex);\n          var pathStr = cyclePath.map(function (fieldObj) {\n            return fieldObj.name;\n          }).join('.');\n          context.reportError(\"Cannot reference Input Object \\\"\".concat(fieldType.name, \"\\\" within itself through a series of non-null fields: \\\"\").concat(pathStr, \"\\\".\"), cyclePath.map(function (fieldObj) {\n            return fieldObj.astNode;\n          }));\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllNodes(object) {\n  var astNode = object.astNode,\n      extensionASTNodes = object.extensionASTNodes;\n  return astNode ? extensionASTNodes ? [astNode].concat(extensionASTNodes) : [astNode] : extensionASTNodes !== null && extensionASTNodes !== void 0 ? extensionASTNodes : [];\n}\n\nfunction getAllSubNodes(object, getter) {\n  var subNodes = [];\n\n  for (var _i32 = 0, _getAllNodes2 = getAllNodes(object); _i32 < _getAllNodes2.length; _i32++) {\n    var _getter;\n\n    var node = _getAllNodes2[_i32];\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    subNodes = subNodes.concat((_getter = getter(node)) !== null && _getter !== void 0 ? _getter : []);\n  }\n\n  return subNodes;\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  return getAllSubNodes(type, function (typeNode) {\n    return typeNode.interfaces;\n  }).filter(function (ifaceNode) {\n    return ifaceNode.name.value === iface.name;\n  });\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  return getAllSubNodes(union, function (unionNode) {\n    return unionNode.types;\n  }).filter(function (typeNode) {\n    return typeNode.name.value === typeName;\n  });\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n  return definitionNode === null || definitionNode === void 0 ? void 0 : (_definitionNode$direc = definitionNode.directives) === null || _definitionNode$direc === void 0 ? void 0 : _definitionNode$direc.find(function (node) {\n    return node.name.value === GraphQLDeprecatedDirective.name;\n  });\n}\n","export default \"import { CdkVirtualScrollViewport } from \\\"@angular/cdk/scrolling\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    ISortedItem,\\n    nameof,\\n    SearchComponent,\\n    SorterDirection,\\n    TableComponent,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    debounceTime,\\n    filter,\\n    switchMap,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-virtual-scroll-data\\\";\\nimport { TableWithVirtualScrollDataSource } from \\\"./table-with-virtual-scroll-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-table-with-virtual-scroll\\\",\\n    templateUrl: \\\"./table-with-virtual-scroll.component.html\\\",\\n    styleUrls: [\\\"./table-with-virtual-scroll.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        VirtualViewportManager,\\n        {\\n            provide: DataSourceService,\\n            useClass: TableWithVirtualScrollDataSource,\\n        },\\n    ],\\n})\\nexport class TableWithVirtualScrollComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // sorting\\n    public sortedColumn: ISortedItem = {\\n        sortBy: \\\"name\\\",\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    // search\\n    public searchTerm: string;\\n    public columnsToApplySearch = [\\\"name\\\"];\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\\n\\n    // the height in px of a single row from the table\\n    public rowHeight = 40;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: TableWithVirtualScrollDataSource<IServer>,\\n        private viewportManager: VirtualViewportManager,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        // register filter to be able to sort\\n        this.dataSource.registerComponent(this.table.getFilterComponents());\\n        this.dataSource.registerComponent({\\n            search: { componentInstance: this.search },\\n            virtualScroll: {componentInstance: this.viewportManager},\\n        });\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.viewport)\\n            // Note: Initializing the stream with the desired page size, based on which\\n            // VirtualViewportManager will perform the observations and will emit\\n            // distinct ranges with step equal to provided pageSize\\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\\n                // Since we know the total number of items we can stop the stream when dataset end is reached\\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\\n                filter(() => !this.items.length || this.items.length < this.totalItems),\\n                tap(() => this.applyFilters(false)),\\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\\n                switchMap(() => this.dataSource.outputsSubject.pipe(\\n                    tap((data: IFilteringOutputs) => {\\n                        // update the list of items to be rendered\\n                        const items = data.repeat?.itemsSource || [];\\n\\n                        // after receiving data we need to append it to our previous fetched results\\n                        this.items = this.items.concat(items);\\n                        this.totalItems = data.paginator?.total || 0;\\n                        this.changeDetection.detectChanges();\\n                    })\\n                )\\n            ),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // listen for input change in order to perform the search\\n        this.search.inputChange.pipe(\\n            debounceTime(500),\\n            // perform actual search\\n            tap(() => this.onSearch()),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onSearchCancel() {\\n        await this.applyFilters();\\n    }\\n\\n    public async sortData(sortedColumn: ISortedItem) {\\n        this.sortedColumn = sortedColumn;\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.items = [];\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./filtered-view-table-with-virtual-scroll-selection-data\\\";\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewTableWithVirtualScrollSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewTableWithVirtualScrollSelectionDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewTableWithVirtualScrollSelectionDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","export default \"<div class=\\\"app-item-picker-composite\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n\\n    <div>\\n        <div class=\\\"d-flex flex-row\\\">\\n            <nui-repeat class=\\\"app-list-repeat\\\"\\n                        [selectionMode]=\\\"selectionMode\\\"\\n                        [repeatItemTemplateRef]=\\\"listRepeatDefaultItemTemplate\\\"\\n                        [selection]=\\\"selectedOptions\\\"\\n                        [itemsSource]=\\\"itemPickerOptions\\\"\\n                        (selectionChange)=\\\"onSelection($event)\\\">\\n            </nui-repeat>\\n        </div>\\n    </div>\\n\\n</div>\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","export default \"<div class=\\\"app-table-with-sort__container\\\">\\n    <table nui-table [dataSource]=\\\"items\\\"\\n           [sortable]=\\\"true\\\"\\n           [sortedColumn]=\\\"sortedColumn\\\"\\n           (sortOrderChanged)=\\\"sortData($event)\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n\\n    <footer class=\\\"app-table-with-sort-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","/*\nCLI commands used to generate the current examples:\n\nng g \"./schematics/src/collection.json\":table --force --path=demo/src/schematics/table --prefix=app\n --name=basic-table --dataSource=clientSide --enable-search=false --enable-sort=false --pagingMode=pagination\n\nng g \"./schematics/src/collection.json\":table --force --path=demo/src/schematics/table --prefix=app\n --name=table-with-sort --dataSource=serverSide --enable-search=false --enable-sort=true --pagingMode=pagination\n\nng g \"./schematics/src/collection.json\":table --force --path=demo/src/schematics/table --prefix=app\n --name=table-with-search --dataSource=serverSide --enable-search=true --enable-sort=false --pagingMode=pagination\n\nng g \"./schematics/src/collection.json\":table --lint-fix --force --path=demo/src/schematics/table\n --name=table-with-pagination --prefix=app --dataSource=serverSide --pagingMode=pagination\n\nng g \"./schematics/src/collection.json\":table --lint-fix --force\n--name=table-with-selection  --path=demo/src/schematics/table --prefix=app --dataSource=serverSide --pagingMode=pagination --selectionMode=multi\n\nng g \"./schematics/src/collection.json\":table --lint-fix --force --path=demo/src/schematics/table --prefix=app\n --name=table-with-virtual-scroll --dataSource=serverSide --pagingMode=virtualScroll\n*/\nimport { Component } from \"@angular/core\";\n\nimport { SchematicsDocsComponentType } from \"../utils/schematic-docs-cli-option/schematic-docs-cli-option.component\";\n\n@Component({\n    selector: \"nui-table-schematics-docs-example\",\n    templateUrl: \"table-schematic-example.component.html\",\n    providers: [{provide: SchematicsDocsComponentType, useValue: SchematicsDocsComponentType.table }],\n})\nexport class TableSchematicExampleComponent {\n}\n","<nui-schematic-docs-page schematicFolderName=\"table\">\n    <div schematicSummary>\n        <p>\n            The Table schematic provides the ability to create a generic table that can cover a majority of use cases.\n            Its main responsibility is to integrate the functionality of the <code>nui-table</code> component with other components\n            commonly used with a table such as <code>nui-search</code> and <code>nui-paginator</code>.\n        </p>\n        <h2>Notable Command Line Options</h2>\n        <nui-schematic-cli-option name=\"selectionMode\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"pagingMode\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"dataSource\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"enableSearch\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"enableSort\"></nui-schematic-cli-option>\n    </div>\n    <nui-tab-group schematicExamples>\n        <nui-tab heading=\"Basic\">\n            <h2>Basic Usage</h2>\n            <p>\n                This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to\n                provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the\n                <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n                service, which can be extended with custom filtering behavior.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=basic-table --enable-search=false --enable-sort=false</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"basic-table\">\n                <app-basic-table></app-basic-table>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Sort\">\n            <h2>Table Sorting</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=table-with-sort --enable-sort --enable-search=false</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"table-with-sort\">\n                <app-table-with-sort></app-table-with-sort>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Search\">\n            <h2>Table with Search</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=table-with-search --enable-search --enable-sort=false</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"table-with-search\">\n                <app-table-with-search></app-table-with-search>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Pagination\">\n            <h2>Pagination</h2>\n            <p>\n                This example shows how to add pagination to <code>nui-table</code> with a remote data source.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"table/table-with-pagination\">\n                <app-table-with-pagination></app-table-with-pagination>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Selection\">\n            <h2>Selection</h2>\n            <p>\n                This example shows how to add selection to <code>nui-table</code> with a remote data source.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide\n                <strong>--selectionMode=multi</strong></nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"table/table-with-selection\">\n                <app-table-with-selection></app-table-with-selection>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Virtual Scroll\" #vs>\n            <h2>Virtual Scroll</h2>\n            <p>\n                This example shows how to add virtual scroll to <code>nui-repeat</code> with a remote data source.\n            </p>\n            <nui-message [allowDismiss]=\"false\" type=\"warning\">\n                Since the example makes use of search and sorting filters, it's important to note that\n                the viewport manager's paging progress must be reset each time the data is refreshed with\n                new filtered results whenever the filters are changed.\n            </nui-message>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"table/table-with-virtual-scroll\">\n                <app-table-with-virtual-scroll *ngIf=\"vs.active\"></app-table-with-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Custom Virtual Scroll\" #cvs>\n            <h2>Virtual Scroll with Custom Strategy</h2>\n            <nui-schematic-docs-command>\n                ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide\n                <strong>--virtualScrollStrategy=custom</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"table/table-with-custom-virtual-scroll\">\n                <app-table-with-custom-virtual-scroll *ngIf=\"cvs.active\"></app-table-with-custom-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","module.exports = require('./lib/Observable.js').Observable;\n","import inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  } // istanbul ignore next (Not reachable. All possible value nodes have been considered)\n\n\n  false || invariant(0, 'Unexpected value node: ' + inspect(valueNode));\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.nui-filter-group-composite-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./filtered-view-list-with-virtual-scroll-data\";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewListWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        if (filters.search?.value) {\n            params = params.set(\"searchField\", \"name\");\n            params = params.set(\"searchContent\", filters.search?.value ?? \"\");\n        }\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewListWithVirtualScrollDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewListWithVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-list-with-pagination-list #child></app-filtered-view-list-with-pagination-list>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewListWithPaginationDataSource,\n} from \"./filtered-view-list-with-pagination-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-list-with-pagination\",\n    styleUrls: [\"./filtered-view-list-with-pagination.component.less\"],\n    templateUrl: \"./filtered-view-list-with-pagination.component.html\",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewListWithPaginationDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListWithPaginationComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithPaginationDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./filtered-view-table-with-custom-virtual-scroll-data\";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithCustomVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithCustomVirtualScrollDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithCustomVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","import { CdkTreeModule } from \"@angular/cdk/tree\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiChipsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTreeComponent } from \"./filtered-view-tree/filtered-view-tree.component\";\nimport { FilteredViewWithTreeComponent } from \"./filtered-view-with-tree.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        NuiIconModule,\n        NuiButtonModule,\n        NuiExpanderModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n        CdkTreeModule,\n    ],\n    declarations: [\n        FilteredViewWithTreeComponent,\n        FilteredViewTreeComponent,\n    ],\n    exports: [\n        FilteredViewWithTreeComponent,\n        FilteredViewTreeComponent,\n    ],\n})\n\nexport class FilteredViewWithTreeModule {}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport naturalCompare from \"../jsutils/naturalCompare.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType, isRequiredArgument, isRequiredInputField } from \"../type/definition.mjs\";\nimport { astFromValue } from \"./astFromValue.mjs\";\nexport var BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  IMPLEMENTED_INTERFACE_REMOVED: 'IMPLEMENTED_INTERFACE_REMOVED',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_REPEATABLE_REMOVED: 'DIRECTIVE_REPEATABLE_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexport var DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  IMPLEMENTED_INTERFACE_ADDED: 'IMPLEMENTED_INTERFACE_ADDED',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n\n  for (var _i2 = 0, _directivesDiff$remov2 = directivesDiff.removed; _i2 < _directivesDiff$remov2.length; _i2++) {\n    var oldDirective = _directivesDiff$remov2[_i2];\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: \"\".concat(oldDirective.name, \" was removed.\")\n    });\n  }\n\n  for (var _i4 = 0, _directivesDiff$persi2 = directivesDiff.persisted; _i4 < _directivesDiff$persi2.length; _i4++) {\n    var _ref2 = _directivesDiff$persi2[_i4];\n    var _oldDirective = _ref2[0];\n    var newDirective = _ref2[1];\n    var argsDiff = diff(_oldDirective.args, newDirective.args);\n\n    for (var _i6 = 0, _argsDiff$added2 = argsDiff.added; _i6 < _argsDiff$added2.length; _i6++) {\n      var newArg = _argsDiff$added2[_i6];\n\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n        });\n      }\n    }\n\n    for (var _i8 = 0, _argsDiff$removed2 = argsDiff.removed; _i8 < _argsDiff$removed2.length; _i8++) {\n      var oldArg = _argsDiff$removed2[_i8];\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n      });\n    }\n\n    if (_oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: \"Repeatable flag was removed from \".concat(_oldDirective.name, \".\")\n      });\n    }\n\n    for (var _i10 = 0, _oldDirective$locatio2 = _oldDirective.locations; _i10 < _oldDirective$locatio2.length; _i10++) {\n      var location = _oldDirective$locatio2[_i10];\n\n      if (newDirective.locations.indexOf(location) === -1) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff(objectValues(oldSchema.getTypeMap()), objectValues(newSchema.getTypeMap()));\n\n  for (var _i12 = 0, _typesDiff$removed2 = typesDiff.removed; _i12 < _typesDiff$removed2.length; _i12++) {\n    var oldType = _typesDiff$removed2[_i12];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType) ? \"Standard scalar \".concat(oldType.name, \" was removed because it is not referenced anymore.\") : \"\".concat(oldType.name, \" was removed.\")\n    });\n  }\n\n  for (var _i14 = 0, _typesDiff$persisted2 = typesDiff.persisted; _i14 < _typesDiff$persisted2.length; _i14++) {\n    var _ref4 = _typesDiff$persisted2[_i14];\n    var _oldType = _ref4[0];\n    var newType = _ref4[1];\n\n    if (isEnumType(_oldType) && isEnumType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n    } else if (isUnionType(_oldType) && isUnionType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n    } else if (isInputObjectType(_oldType) && isInputObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n    } else if (isObjectType(_oldType) && isObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (isInterfaceType(_oldType) && isInterfaceType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (_oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i16 = 0, _fieldsDiff$added2 = fieldsDiff.added; _i16 < _fieldsDiff$added2.length; _i16++) {\n    var newField = _fieldsDiff$added2[_i16];\n\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    }\n  }\n\n  for (var _i18 = 0, _fieldsDiff$removed2 = fieldsDiff.removed; _i18 < _fieldsDiff$removed2.length; _i18++) {\n    var oldField = _fieldsDiff$removed2[_i18];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i20 = 0, _fieldsDiff$persisted2 = fieldsDiff.persisted; _i20 < _fieldsDiff$persisted2.length; _i20++) {\n    var _ref6 = _fieldsDiff$persisted2[_i20];\n    var _oldField = _ref6[0];\n    var _newField = _ref6[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (var _i22 = 0, _possibleTypesDiff$ad2 = possibleTypesDiff.added; _i22 < _possibleTypesDiff$ad2.length; _i22++) {\n    var newPossibleType = _possibleTypesDiff$ad2[_i22];\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i24 = 0, _possibleTypesDiff$re2 = possibleTypesDiff.removed; _i24 < _possibleTypesDiff$re2.length; _i24++) {\n    var oldPossibleType = _possibleTypesDiff$re2[_i24];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (var _i26 = 0, _valuesDiff$added2 = valuesDiff.added; _i26 < _valuesDiff$added2.length; _i26++) {\n    var newValue = _valuesDiff$added2[_i26];\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i28 = 0, _valuesDiff$removed2 = valuesDiff.removed; _i28 < _valuesDiff$removed2.length; _i28++) {\n    var oldValue = _valuesDiff$removed2[_i28];\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  var schemaChanges = [];\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (var _i30 = 0, _interfacesDiff$added2 = interfacesDiff.added; _i30 < _interfacesDiff$added2.length; _i30++) {\n    var newInterface = _interfacesDiff$added2[_i30];\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i32 = 0, _interfacesDiff$remov2 = interfacesDiff.removed; _i32 < _interfacesDiff$remov2.length; _i32++) {\n    var oldInterface = _interfacesDiff$remov2[_i32];\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i34 = 0, _fieldsDiff$removed4 = fieldsDiff.removed; _i34 < _fieldsDiff$removed4.length; _i34++) {\n    var oldField = _fieldsDiff$removed4[_i34];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i36 = 0, _fieldsDiff$persisted4 = fieldsDiff.persisted; _i36 < _fieldsDiff$persisted4.length; _i36++) {\n    var _ref8 = _fieldsDiff$persisted4[_i36];\n    var _oldField2 = _ref8[0];\n    var newField = _ref8[1];\n    schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n    var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n\n  for (var _i38 = 0, _argsDiff$removed4 = argsDiff.removed; _i38 < _argsDiff$removed4.length; _i38++) {\n    var oldArg = _argsDiff$removed4[_i38];\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n    });\n  }\n\n  for (var _i40 = 0, _argsDiff$persisted2 = argsDiff.persisted; _i40 < _argsDiff$persisted2.length; _i40++) {\n    var _ref10 = _argsDiff$persisted2[_i40];\n    var _oldArg = _ref10[0];\n    var newArg = _ref10[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n      });\n    } else if (_oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n        var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n          });\n        }\n      }\n    }\n  }\n\n  for (var _i42 = 0, _argsDiff$added4 = argsDiff.added; _i42 < _argsDiff$added4.length; _i42++) {\n    var _newArg = _argsDiff$added4[_i42];\n\n    if (isRequiredArgument(_newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (// if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) || // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n\n  return (// if they're both named types, see if their names are equivalent\n    isNamedType(newType) && oldType.name === newType.name || // moving from nullable to non-null of the same underlying type is safe\n    isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n\n  if (isNonNullType(oldType)) {\n    return (// if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) || // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  } // istanbul ignore next (Not reachable. All possible named types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  var ast = astFromValue(value, type);\n  ast != null || invariant(0);\n  var sortedAST = visit(ast, {\n    ObjectValue: function ObjectValue(objectNode) {\n      // Make a copy since sort mutates array\n      var fields = [].concat(objectNode.fields);\n      fields.sort(function (fieldA, fieldB) {\n        return naturalCompare(fieldA.name.value, fieldB.name.value);\n      });\n      return _objectSpread(_objectSpread({}, objectNode), {}, {\n        fields: fields\n      });\n    }\n  });\n  return print(sortedAST);\n}\n\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = keyMap(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = keyMap(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n\n  for (var _i44 = 0; _i44 < oldArray.length; _i44++) {\n    var oldItem = oldArray[_i44];\n    var newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (var _i46 = 0; _i46 < newArray.length; _i46++) {\n    var _newItem = newArray[_i46];\n\n    if (oldMap[_newItem.name] === undefined) {\n      added.push(_newItem);\n    }\n  }\n\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewListWithPaginationComponent } from \\\"./filtered-view-list-with-pagination.component\\\";\\nimport { FilteredViewListComponent } from \\\"./filtered-view-list/filtered-view-list.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiSpinnerModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewListWithPaginationComponent,\\n        FilteredViewListComponent,\\n    ],\\n    exports: [\\n        FilteredViewListWithPaginationComponent,\\n        FilteredViewListComponent,\\n    ],\\n})\\n\\nexport class FilteredViewListWithPaginationModule {}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","export default \"// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 10;\\n\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"import { IFilteringOutputs, IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\\n\\nexport interface ExampleItem {\\n    color: string;\\n    status: string;\\n}\\n\\nexport interface ICustomDSFilteredData {\\n    filterGroupItems?: IFilterGroupItem[];\\n    filteringState?: IFilteringOutputs;\\n}\\n\";","export default \"import { Component, Input, OnInit, ViewEncapsulation } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-schematic-docs-page\\\",\\n    templateUrl: \\\"schematic-docs-page.component.html\\\",\\n    styleUrls: [\\\"schematic-docs-page.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class SchematicDocsPageComponent implements OnInit {\\n    @Input() schematicFolderName: string;\\n    public schematicHeading: string;\\n    public angularJsonStylePreprocOptions: string = `\\n\\\"stylePreprocessorOptions\\\": {\\n    \\\"includePaths\\\": [\\n        \\\"node_modules\\\"\\n    ]\\n}`;\\n\\n    ngOnInit() {\\n        this.schematicHeading = this.schematicFolderName.replace(/-/g, \\\" \\\");\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 400;\\n\\n\";","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nexport function KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + didYouMean(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","import { Inject, Injectable } from \"@angular/core\";\nimport { DataSourceService, IFilters } from \"@nova-ui/bits\";\n\nimport { FakeHTTPService } from \"../fake-http.service\";\n\nimport { ExampleItem, ICustomDSFilteredData } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupCustomDataSourceService extends DataSourceService<ExampleItem> {\n    constructor(@Inject(FakeHTTPService) public httpService: FakeHTTPService) {\n        super();\n    }\n\n    // Emitting current filters to 'server' via http service, to get filtered data 'ICustomDSFilteredData'\n    public async getFilteredData(filters: IFilters): Promise<ICustomDSFilteredData> {\n        return await this.httpService.getData(filters);\n    }\n}\n","export default \"import { IServer, ServerStatus } from \\\"./types\\\";\\n\\n// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 20;\\n\\nexport const LOCAL_DATA: IServer[] = [\\n    {\\n        name: \\\"FOCUS-SVR-12345\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-ASD123\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-DSA331\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-JKS212\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"ABERN-SVR-ATQU9404\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-433AAD\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-098331\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-GHJ882\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LLK001\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-KKJ998\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-RRR001\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LKJF12\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-882JJS\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-7733KK\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-JSHNSA\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-KKAEQWE\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-123KKNPQ\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-RRF231\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n];\\n\";","export default \"// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 10;\\n\\n\";","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    ISelection,\\n    ISortedItem,\\n    nameof,\\n    PaginatorComponent,\\n    SearchComponent,\\n    SorterDirection,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    debounceTime,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-selection-data\\\";\\nimport { TableWithSelectionDataSource } from \\\"./table-with-selection-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-table-with-selection\\\",\\n    templateUrl: \\\"./table-with-selection.component.html\\\",\\n    styleUrls: [\\\"./table-with-selection.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: TableWithSelectionDataSource,\\n        },\\n    ],\\n})\\nexport class TableWithSelectionComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // sorting\\n    public sortedColumn: ISortedItem = {\\n        sortBy: \\\"name\\\",\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    // search\\n    public searchTerm: string;\\n    public columnsToApplySearch = [\\\"name\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    // row selection\\n    public selectedItems: IServer[] = [];\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [\\\"ABERN-SVR-ATQU9404\\\"],\\n        exclude: [],\\n    };\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: TableWithSelectionDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        // register filter to be able to sort\\n        this.dataSource.registerComponent(this.table.getFilterComponents());\\n        this.dataSource.registerComponent({\\n            search: { componentInstance: this.search },\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // listen for input change in order to perform the search\\n        this.search.inputChange.pipe(\\n            debounceTime(500),\\n            // perform actual search\\n            tap(() => this.onSearch()),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onSearchCancel() {\\n        await this.applyFilters();\\n    }\\n\\n    public async sortData(sortedColumn: ISortedItem) {\\n        this.sortedColumn = sortedColumn;\\n        await this.applyFilters();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        // do something with the selection\\n\\n        // make component aware of the new selection value\\n        // so it's displayed correctly\\n        this.changeDetection.detectChanges();\\n    }\\n\\n    // trackBy handler used to identify uniquely each item in the table\\n    public trackBy(index: number, item: IServer) {\\n        return item.name;\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","import isPromise from \"./isPromise.mjs\";\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\n\nexport default function promiseReduce(values, callback, initialValue) {\n  return values.reduce(function (previous, value) {\n    return isPromise(previous) ? previous.then(function (resolved) {\n      return callback(resolved, value);\n    }) : callback(previous, value);\n  }, initialValue);\n}\n","export default \"import { Component, Input, OnInit } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-schematic-json\\\",\\n    template: `\\n        <div>\\n            <code>Schema.json <b>options:</b></code>\\n        </div>\\n        <div *ngFor=\\\"let item of schemaViewData | keyvalue\\\"\\n                class=\\\"d-inline-block p-2\\\">\\n            <nui-popover [template]=\\\"popoverWithBasicUsage\\\"\\n                            placement=\\\"top\\\">\\n                <span class=\\\"nui-text-default--hoverable\\\">{{item.key}}</span>\\n            </nui-popover>\\n            <ng-template #popoverWithBasicUsage>\\n                <div *ngFor=\\\"let field of fieldsToDisplay\\\">\\n                    <ng-container *ngIf=\\\"item.value[field] !== undefined\\\">\\n                        <div class=\\\"nui-text-default\\\">\\n                            <i style=\\\"font-weight: bold\\\">{{ field }}: </i> <span>{{item.value[field]}}</span>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n            </ng-template>\\n        </div>\\n    `,\\n})\\nexport class SchematicJsonComponent implements OnInit {\\n    // Folder from where schema.json should be taken\\n    @Input() schematicFolderName: string;\\n\\n    public schemaViewData: any = {};\\n    public fieldsToDisplay: Array<string> = [\\\"description\\\", \\\"type\\\", \\\"enum\\\", \\\"alias\\\", \\\"default\\\"];\\n\\n    ngOnInit() {\\n       const schemaJson = require(`../../../../schematics/src/${this.schematicFolderName}/schema.json`);\\n       this.fillViewData(schemaJson.properties);\\n    }\\n\\n    private fillViewData(schemaJsonFields: any) {\\n        Object.keys(schemaJsonFields).forEach(fieldName => {\\n            const { description, type, enum: enumField, default: defaultField, alias: aliasField } = schemaJsonFields[fieldName];\\n            this.schemaViewData[fieldName] = {\\n                description,\\n                type,\\n                enum: enumField && enumField.join(\\\", \\\"),\\n                default: defaultField,\\n                alias: aliasField,\\n            };\\n        });\\n    }\\n}\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","export default \"<div class=\\\"nui-item-picker-composite\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","export default \"import { CdkTreeModule } from \\\"@angular/cdk/tree\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiButtonModule,\\n    NuiChipsModule,\\n    NuiExpanderModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTreeComponent } from \\\"./filtered-view-tree/filtered-view-tree.component\\\";\\nimport { FilteredViewWithTreeComponent } from \\\"./filtered-view-with-tree.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiSpinnerModule,\\n        NuiBusyModule,\\n        NuiIconModule,\\n        NuiButtonModule,\\n        NuiExpanderModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n        CdkTreeModule,\\n    ],\\n    declarations: [\\n        FilteredViewWithTreeComponent,\\n        FilteredViewTreeComponent,\\n    ],\\n    exports: [\\n        FilteredViewWithTreeComponent,\\n        FilteredViewTreeComponent,\\n    ],\\n})\\n\\nexport class FilteredViewWithTreeModule {}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    LocalFilteringDataSource,\\n    nameof,\\n    PaginatorComponent,\\n    RepeatComponent,\\n    SearchComponent,\\n    SorterComponent,\\n    SorterDirection,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    LOCAL_DATA,\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-with-list-data\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-with-list-list\\\",\\n    templateUrl: \\\"./filtered-view-list.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewListComponent implements AfterViewInit, OnDestroy {\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                this.filteringState = data;\\n\\n                this.totalItems = data.paginator?.total ?? 0;\\n\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // make 1st call to retrieve initial results\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from \"@angular/core\";\nimport { DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-custom-template-filter-group\",\n    templateUrl: \"./custom-template-filter-group.component.html\",\n    styleUrls: [\"./custom-template-filter-group.component.less\"],\n})\nexport class CustomTemplateFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n","<div class=\"nui-filter-group-composite\" *ngIf=\"hasFilterOptions()\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\" (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"nui-filter-group-composite__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group\n            [values]=\"filterGroupItem.selectedFilterValues\"\n            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\"\n                          class=\"nui-checkbox--justified\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between nui-filter-group-composite__checkbox\">\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"nui-filter-group-composite__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","import { ListRange } from \"@angular/cdk/collections\";\nimport {\n    Inject,\n    Injectable,\n} from \"@angular/core\";\nimport {\n    IFilter,\n    IFilterPub,\n} from \"@nova-ui/bits\";\n\nimport { CUSTOM_SCROLL_ITEMS_PER_PAGE } from \"../filtered-view-table-with-custom-virtual-scroll-data\";\n\n@Injectable()\nexport class VirtualScrollCustomStrategyService implements IFilterPub<IFilter<ListRange>> {\n    public itemsPerPage: number;\n\n    protected virtualScrollRange: ListRange;\n\n    constructor(@Inject(CUSTOM_SCROLL_ITEMS_PER_PAGE) itemsPerPage: number) {\n        this.itemsPerPage = itemsPerPage;\n        this.reset();\n    }\n\n    public getFilters(): IFilter<ListRange> {\n        return {\n            type: \"virtualScroll\",\n            value: this.virtualScrollRange,\n        };\n    }\n\n    public reset() {\n        this.virtualScrollRange = { start: 0, end: this.itemsPerPage };\n    }\n\n    public prepareNextPage(fetchedItemsCount: number) {\n        if (fetchedItemsCount < this.itemsPerPage) {\n            // keep requesting the same page if not all expected items per page were loaded\n        } else {\n            // advances \"pagination\" to the next pages\n            this.virtualScrollRange.start += this.itemsPerPage;\n            this.virtualScrollRange.end = this.virtualScrollRange.start + this.itemsPerPage;\n        }\n    }\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { NuiRepeatModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { ItemPickerCompositeComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiRepeatModule,\\n    ],\\n    declarations: [\\n        ItemPickerCompositeComponent,\\n    ],\\n    exports: [\\n        ItemPickerCompositeComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerCompositeModule {\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-filter-group-composite-basic\\\",\\n    templateUrl: \\\"filter-group-schematic.example.component.html\\\",\\n})\\nexport class FilterGroupSchematicExampleComponent {\\n    constructor() { }\\n}\\n\";","import objectEntries from \"../polyfills/objectEntries.mjs\";\nexport default function toObjMap(obj) {\n  /* eslint-enable no-redeclare */\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  var map = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(obj); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var key = _ref2[0];\n    var value = _ref2[1];\n    map[key] = value;\n  }\n\n  return map;\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./filtered-view-table-with-virtual-scroll-selection-data\";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithVirtualScrollSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithVirtualScrollSelectionDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithVirtualScrollSelectionDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTableComponent } from \"./filtered-view-table/filtered-view-table.component\";\nimport { FilteredViewWithTableComponent } from \"./filtered-view-with-table.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewWithTableComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewWithTableComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewWithTableModule {}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n}\\n\";","import devAssert from \"../jsutils/devAssert.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { visit, visitInParallel } from \"../language/visitor.mjs\";\nimport { assertValidSchema } from \"../type/validate.mjs\";\nimport { TypeInfo, visitWithTypeInfo } from \"../utilities/TypeInfo.mjs\";\nimport { specifiedRules, specifiedSDLRules } from \"./specifiedRules.mjs\";\nimport { SDLValidationContext, ValidationContext } from \"./ValidationContext.mjs\";\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(schema, documentAST) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : specifiedRules;\n  var typeInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new TypeInfo(schema);\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n    maxErrors: undefined\n  };\n  documentAST || devAssert(0, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  var abortObj = Object.freeze({});\n  var errors = [];\n  var context = new ValidationContext(schema, documentAST, typeInfo, function (error) {\n    if (options.maxErrors != null && errors.length >= options.maxErrors) {\n      errors.push(new GraphQLError('Too many validation errors, error limit reached. Validation aborted.'));\n      throw abortObj;\n    }\n\n    errors.push(error);\n  }); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  var visitor = visitInParallel(rules.map(function (rule) {\n    return rule(context);\n  })); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(documentAST, schemaToExtend) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : specifiedSDLRules;\n  var errors = [];\n  var context = new SDLValidationContext(documentAST, schemaToExtend, function (error) {\n    errors.push(error);\n  });\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  var errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  var errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n","export default \"<div>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-sorter class=\\\"app-filtered-view-with-list-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-filtered-view-with-list-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"filteringState.repeat?.itemsSource.length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-filtered-view-with-list-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"filteringState.repeat?.itemsSource\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-paginator class=\\\"app-filtered-view-with-list-list-paginator\\\"\\n                       [(page)]=\\\"page\\\"\\n                       [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeSet]=\\\"[10,20,30,40]\\\"\\n                       [total]=\\\"filteringState.paginator?.total\\\"\\n                       (pagerAction)=\\\"applyFilters()\\\">\\n        </nui-paginator>\\n    </div>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","export default \"<div class=\\\"nui-filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-with-list-list #child></app-filtered-view-with-list-list>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport { LOCAL_DATA } from \"./filtered-view-with-list-data\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-with-list\",\n    styleUrls: [\"./filtered-view-with-list.component.less\"],\n    templateUrl: \"./filtered-view-with-list.component.html\",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewWithListComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n        // here we use ClientSideDataSource since the data we're working with is static (RANDOM_ARRAY)\n        // if you have a dynamic data source, you need to extend DataSourceService for your custom filtering behavior\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class SearchListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value ?? { start : 0, end: 0};\\n        const params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start))\\n\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = SearchListDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { parse } from \"../language/parser.mjs\";\nimport { executeSync } from \"../execution/execute.mjs\";\nimport { getIntrospectionQuery } from \"./getIntrospectionQuery.mjs\";\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  var optionsWithDefaults = _objectSpread({\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true\n  }, options);\n\n  var document = parse(getIntrospectionQuery(optionsWithDefaults));\n  var result = executeSync({\n    schema: schema,\n    document: document\n  });\n  !result.errors && result.data || invariant(0);\n  return result.data;\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    nameof,\\n    PaginatorComponent,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-table-with-pagination-data\\\";\\nimport { FilteredViewTableWithPaginationDataSource } from \\\"../filtered-view-table-with-pagination-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-pagination-table\\\",\\n    templateUrl: \\\"./filtered-view-table.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithPaginationDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins.less\\\";;\\n\\n.nui-filter-group-composite {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from \"./rules/ExecutableDefinitionsRule.mjs\"; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from \"./rules/UniqueOperationNamesRule.mjs\"; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from \"./rules/LoneAnonymousOperationRule.mjs\"; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from \"./rules/SingleFieldSubscriptionsRule.mjs\"; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from \"./rules/KnownTypeNamesRule.mjs\"; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from \"./rules/FragmentsOnCompositeTypesRule.mjs\"; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from \"./rules/VariablesAreInputTypesRule.mjs\"; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from \"./rules/ScalarLeafsRule.mjs\"; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from \"./rules/FieldsOnCorrectTypeRule.mjs\"; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from \"./rules/UniqueFragmentNamesRule.mjs\"; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from \"./rules/KnownFragmentNamesRule.mjs\"; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from \"./rules/NoUnusedFragmentsRule.mjs\"; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from \"./rules/PossibleFragmentSpreadsRule.mjs\"; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from \"./rules/NoFragmentCyclesRule.mjs\"; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from \"./rules/UniqueVariableNamesRule.mjs\"; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from \"./rules/NoUndefinedVariablesRule.mjs\"; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from \"./rules/NoUnusedVariablesRule.mjs\"; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from \"./rules/KnownDirectivesRule.mjs\"; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from \"./rules/UniqueDirectivesPerLocationRule.mjs\"; // Spec Section: \"Argument Names\"\n\nimport { KnownArgumentNamesRule, KnownArgumentNamesOnDirectivesRule } from \"./rules/KnownArgumentNamesRule.mjs\"; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from \"./rules/UniqueArgumentNamesRule.mjs\"; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from \"./rules/ValuesOfCorrectTypeRule.mjs\"; // Spec Section: \"Argument Optionality\"\n\nimport { ProvidedRequiredArgumentsRule, ProvidedRequiredArgumentsOnDirectivesRule } from \"./rules/ProvidedRequiredArgumentsRule.mjs\"; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from \"./rules/VariablesInAllowedPositionRule.mjs\"; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from \"./rules/OverlappingFieldsCanBeMergedRule.mjs\"; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from \"./rules/UniqueInputFieldNamesRule.mjs\"; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from \"./rules/LoneSchemaDefinitionRule.mjs\";\nimport { UniqueOperationTypesRule } from \"./rules/UniqueOperationTypesRule.mjs\";\nimport { UniqueTypeNamesRule } from \"./rules/UniqueTypeNamesRule.mjs\";\nimport { UniqueEnumValueNamesRule } from \"./rules/UniqueEnumValueNamesRule.mjs\";\nimport { UniqueFieldDefinitionNamesRule } from \"./rules/UniqueFieldDefinitionNamesRule.mjs\";\nimport { UniqueDirectiveNamesRule } from \"./rules/UniqueDirectiveNamesRule.mjs\";\nimport { PossibleTypeExtensionsRule } from \"./rules/PossibleTypeExtensionsRule.mjs\";\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexport var specifiedRules = Object.freeze([ExecutableDefinitionsRule, UniqueOperationNamesRule, LoneAnonymousOperationRule, SingleFieldSubscriptionsRule, KnownTypeNamesRule, FragmentsOnCompositeTypesRule, VariablesAreInputTypesRule, ScalarLeafsRule, FieldsOnCorrectTypeRule, UniqueFragmentNamesRule, KnownFragmentNamesRule, NoUnusedFragmentsRule, PossibleFragmentSpreadsRule, NoFragmentCyclesRule, UniqueVariableNamesRule, NoUndefinedVariablesRule, NoUnusedVariablesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, KnownArgumentNamesRule, UniqueArgumentNamesRule, ValuesOfCorrectTypeRule, ProvidedRequiredArgumentsRule, VariablesInAllowedPositionRule, OverlappingFieldsCanBeMergedRule, UniqueInputFieldNamesRule]);\n/**\n * @internal\n */\n\nexport var specifiedSDLRules = Object.freeze([LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, KnownArgumentNamesOnDirectivesRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, ProvidedRequiredArgumentsOnDirectivesRule]);\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./filtered-view-table-with-virtual-scroll-data\";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithVirtualScrollDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"import {Component, Input, OnInit, TemplateRef} from \\\"@angular/core\\\";\\nimport _isObject from \\\"lodash/isObject\\\";\\nimport _sortBy from \\\"lodash/sortBy\\\";\\n\\n@Component({\\n    selector: \\\"nui-recursive-object-view\\\",\\n    template: `\\n        <div class=\\\"ml-5\\\" *ngFor=\\\"let key of orderOfKeys\\\">\\n            <div *ngIf=\\\"checkInstance(key); else notObject\\\">\\n                <nui-expander [header]=\\\"key\\\" icon=\\\"group\\\">\\n                    <nui-recursive-object-view [object]=\\\"object[key]\\\"\\n                                               [objectTemplate]=\\\"objectTemplate\\\"\\n                                               [notObjectTemplate]=\\\"notObjectTemplate\\\">\\n                        <ng-container [ngTemplateOutlet]=\\\"objectTemplate\\\"\\n                                      [ngTemplateOutletContext]=\\\"{item: object[key]}\\\"></ng-container>\\n                    </nui-recursive-object-view>\\n                </nui-expander>\\n            </div>\\n            <ng-template #notObject>\\n                <ng-container [ngTemplateOutlet]=\\\"notObjectTemplate\\\"\\n                              [ngTemplateOutletContext]=\\\"{item: key}\\\"></ng-container>\\n            </ng-template>\\n        </div>\\n    `,\\n})\\nexport class RecursiveObjectViewComponent implements OnInit {\\n    @Input() object: any;\\n    @Input() objectTemplate: TemplateRef<string>;\\n    @Input() notObjectTemplate: TemplateRef<string>;\\n\\n    public orderOfKeys: Array<string>;\\n\\n    ngOnInit() {\\n        this.orderOfKeys = _sortBy(Object.keys(this.object), (key: string) => key.length);\\n    }\\n\\n    public checkInstance(key: string) {\\n        return _isObject(this.object[key]);\\n    }\\n}\\n\";","<ng-container *ngIf=\"dataSourceTree\">\n    <cdk-tree [dataSource]=\"dataSourceTree\" [treeControl]=\"treeControl\">\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"nui-tree__leaf\">\n            <button nui-button displayStyle=\"action\" type=\"button\" disabled></button>\n            {{node.name}}\n        </cdk-nested-tree-node>\n        <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"nui-tree\">\n            <div class=\"nui-tree__header\" cdkTreeNodeToggle>\n                <nui-icon class=\"nui-tree__header-icon\" icon=\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\"></nui-icon>\n                <span class=\"nui-tree__header-title\">{{ node.name }}</span>\n            </div>\n            <div class=\"nui-tree__body\"\n                 [class.nui-tree__body--collapsed]=\"!treeControl.isExpanded(node)\"\n                 [@expandedState]=\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\">\n                <ng-container cdkTreeNodeOutlet></ng-container>\n            </div>\n        </cdk-nested-tree-node>\n    </cdk-tree>\n</ng-container>\n","import { ArrayDataSource } from \"@angular/cdk/collections\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n} from \"@angular/core\";\nimport {\n    DataSourceService, expand,\n    IMenuItem,\n    INovaFilteringOutputs,\n} from \"@nova-ui/bits\";\nimport {\n    Subject,\n} from \"rxjs\";\nimport { takeUntil, tap } from \"rxjs/operators\";\n\nimport { FilteredViewWithTreeDataSource } from \"../filtered-view-with-tree-data-source.service\";\nimport {\n    IServer,\n} from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-tree\",\n    templateUrl: \"./filtered-view-tree.component.html\",\n    styleUrls: [\"./filtered-view-tree.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [expand],\n})\nexport class FilteredViewTreeComponent implements OnDestroy, AfterViewInit {\n\n    treeControl = new NestedTreeControl<any>((node) => node.children);\n    dataSourceTree: ArrayDataSource<any>;\n\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n    public items: IServer[] = [];\n    public filteringState: INovaFilteringOutputs = {};\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewWithTreeDataSource<IServer>,\n        private cdRef: ChangeDetectorRef\n    ) {\n    }\n\n    async ngAfterViewInit() {\n        this.dataSource.outputsSubject.pipe(\n            tap((data: any) => {\n                // update the list of items to be rendered\n                this.dataSourceTree = new ArrayDataSource(data.tree.itemsSource);\n                this.cdRef.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    hasChild = (_: number, node: any) => !!node.children && node.children.length > 0;\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    ISortedItem,\\n    nameof,\\n    PaginatorComponent,\\n    SorterDirection,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-sort-data\\\";\\nimport { TableWithSortDataSource } from \\\"./table-with-sort-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-table-with-sort\\\",\\n    templateUrl: \\\"./table-with-sort.component.html\\\",\\n    styleUrls: [\\\"./table-with-sort.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: TableWithSortDataSource,\\n        },\\n    ],\\n})\\nexport class TableWithSortComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // sorting\\n    public sortedColumn: ISortedItem = {\\n        sortBy: \\\"name\\\",\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: TableWithSortDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        // register filter to be able to sort\\n        this.dataSource.registerComponent(this.table.getFilterComponents());\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async sortData(sortedColumn: ISortedItem) {\\n        this.sortedColumn = sortedColumn;\\n        await this.applyFilters();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"// number of results to be displayed in the table\\nexport const RESULTS_PER_PAGE = 400;\\n\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 400;\n\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewListWithPaginationComponent } from \"./filtered-view-list-with-pagination.component\";\nimport { FilteredViewListComponent } from \"./filtered-view-list/filtered-view-list.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewListWithPaginationComponent,\n        FilteredViewListComponent,\n    ],\n    exports: [\n        FilteredViewListWithPaginationComponent,\n        FilteredViewListComponent,\n    ],\n})\n\nexport class FilteredViewListWithPaginationModule {}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-filtered-view-with-table-table__container {\\n    overflow: auto;\\n}\\n\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 20;\n\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","<h5>{{name}}</h5>\n<div [ngSwitch]=\"name\">\n    <ng-container *ngSwitchCase=\"'selectionMode'\">\n        <p>\n            This string option allows you to select whether to enable selection and, if so, what type. Default is <code>none</code>.\n            The values currently supported for this option are listed{{forComponent ? \"\" : \" below for each type of component\"}}:\n        </p>\n        <ng-container *ngTemplateOutlet=\"helpRenderer;context:{tpl: selectionModeTpl, types: [componentType.list, componentType.table]}\"></ng-container>\n        <ng-template #selectionModeTpl let-type=type>\n            <ul>\n                <li>\n                    <nui-expander [open]=\"false\" header=\"none\">\n                        <p>Table rows are not selectable.</p>\n                    </nui-expander>\n                </li>\n                <li>\n                    <nui-expander [open]=\"false\" header=\"multi\">\n                        <p>This option enables the possibility to select one or more rows in the {{forComponent ? forComponent : \"component\"}}.</p>\n                        <ng-container *ngIf=\"type == componentType.table\">\n                            <p>To give users the ability to select rows, do the following:</p>\n                            <ol>\n                                <li>\n                                    Set the <code>selectable</code> input to <code>true</code>.\n                                </li>\n                                <li>\n                                    Bind a trackBy handler to the\n                                    <code><a href=\"https://material.angular.io/cdk/table/overview#connecting-the-table-to-a-data-source\" target=\"_blank\">trackBy</a></code>\n                                    property inherited from\n                                    <code><a href=\"https://material.angular.io/cdk/table/overview\" target=\"_blank\">CdkTable</a></code>.\n                                    The trackBy handler should return a value that uniquely identifies each item in the table.\n                                    <br>\n                                    <strong>Note:</strong> When <code>trackBy</code> is used, the\n                                    <code><a href=\"../interfaces/ISelection.html\" target=\"_blank\">ISelection</a></code> will consist\n                                    of the <code>trackBy</code> property values only and will not contain entire representations of the selected\n                                    objects. As a result, it may be beneficial to keep a separate index that maps the selected item IDs\n                                    to the corresponding objects.\n                                </li>\n                                <li>\n                                    Pass the row object to <code>nui-row</code> using the <code>rowObject</code> input.\n                                </li>\n                                <li>\n                                    Bind to the selection event using the <code>(selectionChange)</code> output. The event's payload is an\n                                    <code><a href=\"../interfaces/ISelection.html\" target=\"_blank\">ISelection</a></code>\n                                    object which should be converted to selected items by calling the <code>getSelectedItems</code>\n                                    function on the\n                                    <code><a href=\"../injectables/SelectorService.html\" target=\"_blank\">SelectorService</a></code>.\n                                </li>\n                            </ol>\n                            <p>\n                                <b>Note 1:</b>To preselect rows in a table or to programmatically change the selection you can use the\n                                <code>selection</code> input which is of type\n                                <code><a href=\"../interfaces/ISelection.html\" target=\"_blank\">ISelection</a></code>.\n                            </p>\n                            <p>\n                                <b>Note 2:</b> If you need to use <code>nui-paginator</code> with row selection, you need to pass the total number\n                                of items on all pages into the <code>totalItems</code> input.\n                            </p>\n                            <nui-message [allowDismiss]=false type=\"warning\">\n                                <p>\n                                    <strong>Important:</strong> When working with data that's coming across the wire, it's necessary\n                                    to bind a <code>trackBy</code> handler as mentioned above. This will allow selection tracking to be based on\n                                    the identifier returned by the <code>trackBy</code> handler. If a <code>trackBy</code> is not provided, comparisons to\n                                    determine whether items are selected will be based on object reference which of course\n                                    won't work with items coming from a backend.\n                                </p>\n                                Take a look at the source on the \"Selection\" tab example to see how.\n                            </nui-message>\n                        </ng-container>\n                    </nui-expander>\n                </li>\n                <li *ngIf=\"type == componentType.list\">\n                    <nui-expander [open]=\"false\" header=\"radio\">\n                        <p>Enables single-selection with deselection not allowed.</p>\n                    </nui-expander>\n                </li>\n                <li *ngIf=\"type == componentType.list\">\n                    <nui-expander [open]=\"false\" header=\"single\">\n                        <p>Enables single-selection with no radio buttons and deselection allowed.</p>\n                    </nui-expander>\n                </li>\n                <li *ngIf=\"type == componentType.list\">\n                    <nui-expander [open]=\"false\" header=\"singleWithRequiredSelection\">\n                        <p>Enables single-selection with no radio buttons and deselection not allowed.</p>\n                    </nui-expander>\n                </li>\n                <li *ngIf=\"type == componentType.list\">\n                    <nui-expander [open]=\"false\" header=\"radioWithNonRequiredSelection\">\n                        <p>Enables single-selection with deselection allowed.</p>\n                    </nui-expander>\n                </li>\n            </ul>\n        </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'pagingMode'\">\n        <p>\n            This string option allows you to select the paging mode of the data presentation. Default is\n            <code>virtualScroll</code>. The values currently supported for this option are:\n        </p>\n        <ul>\n            <li>\n                <nui-expander [open]=\"false\" header=\"virtualScroll\">\n                    <p>\n                        This setting allows us to use\n                        <a href=\"https://material.angular.io/cdk/scrolling/overview\">CDK Virtual Scroll</a>\n                        by setting <code>pagingMode</code> to <code>virtualScroll</code>.\n                    </p>\n                    <ng-container *ngTemplateOutlet=\"helpRenderer;context:{tpl: pagingModeVSTpl, types: [componentType.list, componentType.table]}\"></ng-container>\n                    <ng-template #pagingModeVSTpl let-type=type>\n                        <ng-container *ngIf=\"type == componentType.list\">\n                            <p>\n                                The <code>nui-repeat</code> used inside this schematic allows you to manage the\n                                virtual viewport by exposing its <code>{{getRepeatPropKey('viewportRef')}}</code>\n                                property which is an instance of\n                                <code><a href=\"https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport\">CdkVirtualScrollViewport</a></code>.\n                                The example below uses Nova's\n                                <code><a href=\"/injectables/VirtualViewportManager.html\">VirtualViewportManager</a></code>\n                                to handle the viewport management duties via the\n                                <code>{{getRepeatPropKey('viewportRef')}}</code> property.\n                            </p>\n                        </ng-container>\n                        <ng-container *ngIf=\"type == componentType.table\">\n                            The <code>nui-table</code> used inside this schematic API is using\n                            <a href=\"../directives/TableVirtualScrollLinearDirective.html#info\">nui table virtual scroll directive</a>. It makes it possible to\n                            load items in chunks. The amount of items loaded per fetch can be configured by setting the <code>range</code> variable.\n\n                            <nui-message [allowDismiss]=false type=\"warning\">\n                                The following examples use custom Nova <a href=\"../directives/TableVirtualScrollLinearDirective.html#info\">TableVirtualScrollLinearDirective</a> to perform scrolling\n                                based on scrolling indexes within the virtual scroll viewport. Customers are free to create their own directive and\\or scrolling strategy if they want\n                                custom behavior.\n                            </nui-message>\n                            <nui-message [allowDismiss]=false type=\"warning\">\n                                There are some known <strong>technical limitations</strong>:<br />\n                                <ol>\n                                    <li>\n                                        Data for the table should be provided in a DataSource service\n                                    </li>\n                                    <li>\n                                        Each datasource should have a page counter, to enable items prefetching (in case the viewport size is larger that the chosen items per page selected)\n                                    </li>\n                                    <li>\n                                        <a href=\"https://github.com/angular/components/issues/10113\">Angular doesn't subport virtual scrolling over a list of items whose size is\n                                            not known and needs to be measured</a>\n                                    </li>\n                                    <li>\n                                        When CDK Viewport is used in context of non-visible dom elements (eg: Tabs, Accordion) virtual scroll will not work properly.\n                                        The solution is not do initiate the viewport until it is visible using *ngIf, *ngSwitch.\n                                    </li>\n                                </ol>\n                            </nui-message>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"type == componentType.table\">\n                            <p>\n                                To make the scrolling working with <code>nui-table</code> start with declaring the following variables:<br /><br />\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.vars}}</nui-example-code><br />\n\n                            <p>\n                                Import <a href=\"../injectables/VirtualViewportManager.html\" target=\"_blank\">VirtualViewportManager</a>\n                                (provides a mechanism for sequencing the rendered range stream emitted from the CDK Viewport into distinct page ranges):<br />\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.viewportManagerImport}}</nui-example-code><br />\n                            <p>\n                                Provide VirtualViewportManager on a component level providers:<br />\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.provideViewport}}</nui-example-code><br />\n\n                            <p>\n                                Inject VirtualViewportManager type in the constructor:<br />\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.injectViewport}}</nui-example-code><br />\n\n                            <p>\n                                Use the Angular ViewChild decorator to get a reference to the scrolling viewport (CdkVirtualScrollViewport):<br />\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.viewChildren}}</nui-example-code><br />\n\n                            <p>\n                                Register the virtual scroll filter on dataSource:\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.registerScroll}}</nui-example-code><br />\n\n                            <p>\n                                Optionally, subscribe to the <code>busy</code> state changes:\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.oninitSubscribeBusy}}</nui-example-code><br />\n                            <p>\n                                Start setting up the <code>ngAfterViewInit()</code> lifecycle hook:<br />\n                            </p>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.ngAfterViewInitStart}}</nui-example-code><br />\n\n                            Setting up the viewportManager listener and dataSource handler in the <code>ngAfterViewInit</code>:\n                            <ol>\n                                <li>Use the <strong>setViewport</strong> method to initialize <code>VirtualViewportManager</code>.</li>\n                                <li>Chain the <strong>observeNextPage$</strong> method with the required parameters (<a href=\"../interfaces/IVirtualPageConfig.html\">IVirtualPageConfig)</a>.</li>\n                                <li>\n                                    <b><i>Optional</i></b> You may like to ignore <code>VirtualViewportManager</code> emissions when the <code>totalItems</code> number is reached.\n                                    To do this, you can use the RxJS <code>filter</code> operator as in example.<br />\n                                    <b>Note:</b> <code>VirtualViewportManager</code> has its own mechanism of stopping when the length of the last received page is less than the page size requested. <br />\n                                    In the example, we use the <code>filter</code> operator to avoid making the additional requests when the dataset's last page has enough data.\n                                </li>\n                                <li>Finally, call <code>datasource.applyFilters()</code> to trigger fetching of the data.</li>\n                                <li>\n                                    To avoid having two listeners (the next page observer and the data source's outputsSubject), we can combine them together into one stream <br />\n                                    with the RxJS <code>switchMap</code> operator. In the example, we map to an inner subscription which contains all new data related operations: <br />\n                                    <code>totalItems</code> update, assigning new data, and triggering the change detector. <br />\n                                    <b>Alternative</b>: You can subscribe to the <code>this.dataSource.outputsSubject</code>code> in the ngOnInit method using the same RxJS pipe operators.\n                                </li>\n                            </ol>\n                            <nui-example-code language=\"typescript\">{{tableScrollingSetup.ngAfterViewInitViewport}}</nui-example-code><br />\n                        </ng-container>\n                    </ng-template>\n                    <p>\n                        Although the generated code of the schematic already takes care of basic setup\n                        steps, please make sure while customizing this feature for your own use case to\n                        do the following on the component:\n                    </p>\n                    <ol>\n                        <li *ngIf=\"for(componentType.list)\">\n                            <strong>For <code>list</code>'s only</strong>: set the <code>itemSize</code> component input to a valid value. It's\n                            mandatory to have this input set as there is a technical limitation on the\n                            Angular side. If the input is omitted, you'll see this error message in the\n                            console output:\n                            <mark>\n                                \"ERROR: To use virtual scroll feature please set correct value to the\n                                'itemSize' input!\"\n                            </mark>\n                        </li>\n                        <li>\n                            Set the <code>height</code> of the component element (either through a\n                            css/less file or inline in the ng-container). This sets the viewport for the\n                            virtual scroll. If this action is omitted, the viewport will have a height of\n                            <code>0px</code> and no content will be visible on the page.\n                        </li>\n                    </ol>\n\n                    <nui-message [allowDismiss]=\"false\" type=\"warning\">\n                        <ol>\n                            <li>\n                                If the user filters the results in some way, say with a search box, make sure to\n                                reset progress on the VirtualViewportManager before applying the filters.\n                            </li>\n                            <li>\n                                Due to a <a href=\"https://github.com/angular/components/issues/13981\" target=\"_blank\">known\n                                CDK issue</a>,\n                                make sure that the <code>nui-repeat</code> component hosting the virtual scroll is\n                                visible\n                                in order for the virtual scroll functionality to work properly.\n                            </li>\n                        </ol>\n                    </nui-message>\n                </nui-expander>\n            </li>\n            <li>\n                <nui-expander [open]=\"false\" header=\"pagination\">\n                    Data is displayed using standard pagination with a <code>nui-paginator</code> component.\n                    <p>\n                        To enable pagination, do the following:\n                    </p>\n                    <ol>\n                        <li>\n                            Provide a service that performs filtering (pagination is considered to be a form of\n                            filtering in Nova). There is a default service, <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\">\n                            <code>ClientSideDataSource</code></a>, which provides default methods for working with\n                            filters. In case you need something special (such as filtering on a back-end or more complex\n                            sorting capability), you may extend this service and override its methods.\n                        </li>\n                        <li>\n                            In your component's constructor, provide an initial dataset via the <code>setData</code>\n                            method\n                            of\n                            <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\">\n                                <code>ClientSideDataSource</code></a>.\n                        </li>\n                        <li>\n                            Get the paginator component via <code>@ViewChild</code>.\n                        </li>\n                        <li>\n                            In your component's <code>ngAfterViewInit</code>, pass the paginator to the\n                            <code>componentTree</code>\n                            property of <code>ClientSideDataSource</code>. Then, invoke the\n                            <code>applyFilters</code>\n                            method of\n                            <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\">\n                                <code>ClientSideDataSource</code></a>. And, lastly, subscribe to\n                            <code>outputsSubject</code> on\n                            <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\">\n                                <code>ClientSideDataSource</code></a> which will return an <a target=\"_blank\"\n                                                                                                  href=\"../interfaces/INovaFilteringOutputs.html\">\n                            <code>INovaFilteringOutputs</code></a> object after each change in pagination.\n                        </li>\n                        <li>\n                            In the <code>outputsSubject</code> subscription handler, overwrite your\n                            <code>dataSource</code>\n                            with the\n                            <code>itemsSource</code> you receive and pass the number of pages to the paginator's\n                            <code>total</code> input.\n                        </li>\n                        <li>\n                            Bind to the paginator's <code>pagerAction</code> output, and invoke the\n                            <code>applyFilters</code> method of\n                            <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n                            in the output handler.\n                        </li>\n                        <li>\n                            Unsubscribe from the <code>outputsSubject</code> in your component's\n                            <code>ngOnDestroy</code>\n                            method.\n                        </li>\n                    </ol>\n                </nui-expander>\n            </li>\n            <li>\n                <nui-expander [open]=\"false\" header=\"none\">\n                    All data is displayed at once.\n                </nui-expander>\n            </li>\n        </ul>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'dataSource'\">\n        <p>\n            This string option allows you to select the way data is retrieved for displaying in the {{forComponent ? forComponent : \"component\"}}.\n            Default is <code>serverSide</code>. The values currently supported for this option are:\n        </p>\n        <nui-expander [open]=\"false\" header=\"serverSide\">\n            The generated data source will retrieve data remotely from a server side API, usually achieved by extending\n            the\n            <a target=\"_blank\" href=\"../injectables/DataSourceService.html\"><code>DataSourceService</code></a> class.\n            <nui-message [allowDismiss]=\"false\" type=\"info\">\n                When this option is chosen, the schematic automatically generates a loading indicator\n                (<code>nui-busy</code>) which is displayed as an overlay on the list during data\n                retrieval.\n            </nui-message>\n        </nui-expander>\n        <nui-expander [open]=\"false\" header=\"custom\">\n            <p>No data source will be generated, allowing you to create one from scratch.</p>\n        </nui-expander>\n        <nui-expander [open]=\"false\" header=\"clientSide\">\n            Generated data source will retrieve data locally from a client side source, usually via the\n            <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n            class.\n        </nui-expander>\n        <nui-expander [open]=\"false\" header=\"none\">\n            No data source will be generated and no data source related features\n            such as sorting or search will be added to the generated code.\n        </nui-expander>\n        <div>\n            <p>\n                For additional information on how the data source setup is done please consult the paragraphs below:\n            </p>\n            <nui-expander [open]=\"false\" header=\"DataSource Setup\">\n                <p>Both local and remote setup are feasible for custom data sources, while the remote setup is feasible\n                    for\n                    the <code>serverSide</code> option.</p>\n                <nui-expander [open]=\"false\" header=\"Remote DataSource Setup\">\n                    <div>\n                        <p>\n                            To make component work with remote backend, it's advised to use the Nova\n                            <code>DataSourceService</code>\n                            which can be imported from\n                            <code>\"@nova-ui/bits\"</code>.\n                        </p>\n                        <p>Create the <code>@Injectable</code> class that extends the data source service mentioned\n                            above.\n                        </p>\n                        <nui-example-code language=\"typescript\">{{dataSourceSetup.extendDS}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            Define the following fields to work with the data source.<br/>\n                            <mark><sup><strong>Hint!</strong></sup> The list below is a required minimum. Feel free to\n                                define other fields required to work with your API.\n                            </mark>\n                        </p>\n                        <br/>\n                        <code><b>url</b></code> - This is where you store your API url. <br/>\n                        <code><b>cache</b></code> - This is where you store the cached list data. Because we fetch the\n                        data\n                        in chunks, every time a user fetches a new chunk of data\n                        it is appended to that array immediately, and then the updated array is sent to the list.<br/>\n                        <code><sup>(Optional)</sup><b>busy</b></code> - This sets the busy state. The state is\n                        considered\n                        busy only when the data is being fetched, and it's used to display loading indicator\n                        components on the view while the data is being fetched. This is optional.\n                        <mark>Consult with your UX team about using busy state and busy components in your list</mark>\n                        .\n                        <nui-example-code language=\"typescript\">{{dataSourceSetup.defineFields}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            Create a method that will fetch the data and perhaps convert the response to an expected\n                            format.\n                            It should have two parameters, <code>start</code>\n                            and <code>end</code>, which are the current values of the scrolling indices within the\n                            scrolling\n                            viewport. The calculation <code>end - start</code> will give you the number\n                            of items to fetch. If your API supports returning data by page, the <code>page</code>\n                            variable\n                            will be useful in that case, but if not, use the <code>end</code> index\n                            as the starting point for the next chunk of data.<br/>\n                            Next, prepare the URI to be fetched. It can, and probably will, vary by API implementation.\n                            Your\n                            goal here is to return the requested number of items.\n                        </p>\n                        <nui-example-code language=\"typescript\">{{fetch}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            Afterwards, when you get the data back as a response, convert the returned dataset into the\n                            structure expected by the\n                            component. The received data will be concatenated with <code>this.cache</code>,\n                            so\n                            the dataset must be in the format expected by the\n                            list's <code>dataSource</code> input in order to render the items correctly.\n                        </p>\n                        <nui-example-code language=\"typescript\">{{dataSourceSetup.getData}}</nui-example-code>\n                        <br/>\n\n                        <p>\n                            The next step will be to implement the <code>getFilteredData</code> method of the <code>DataSourceService</code>.\n                            This method is called whenever the\n                            <code>applyFilters</code> method of current data source is called in the code, so this is\n                            where\n                            data operations will be triggered.\n                            Optionally, notify the <code>busy</code> observable to toggle the busy state to \"on\". Then,\n                            retrieve the <code>virtualScroll</code> from the available filters\n                            passed into the method as an argument. The <code>virtualScroll</code> filter is registered\n                            with\n                            the data source farther down in the code listing of the list implementation.<br/><br/>\n\n                            From the <code>virtualScroll</code> filter you can retrieve the <code>start</code> and\n                            <code>end</code> indices for the scrolling viewport.\n                            Use them to fetch to correct amount of data. Then, update the cache with the items you just\n                            got\n                            from the server, and return the data in the format that would\n                            contain AT LEAST the total number of items the API is able to return and the list's cached\n                            data.\n                        </p>\n                        <nui-example-code language=\"typescript\">{{dataSourceSetup.getFilteredData}}</nui-example-code>\n                        <br/>\n\n                        <p>All data source preparation steps are finished at this point.</p>\n                    </div>\n                </nui-expander>\n                <nui-expander [open]=\"false\" header=\"Local DataSource Setup\">\n                    <p>\n                        To make the component work with a local API it's advised\n                        to extend <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n                        which can be imported from <code>\"@nova-ui/bits\"</code>.\n                    </p>\n                </nui-expander>\n            </nui-expander>\n        </div>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'enableSearch'\">\n        <p>\n            This boolean option allows you to enable/disable search functionality. Default is\n            <code>true</code>.\n        </p>\n        <p>\n            To subscribe to the search events, use search's <code>onSearch</code> or <code>inputChange</code>\n            (and, if needed, <code>onSearchCancel</code>) hooks to invoke the <code>applyFilters</code>\n            method of the <a target=\"_blank\" href=\"../injectables/DataSourceService.html\"><code>DataSourceService</code></a>\n            class\n            in order to perform the actual search.\n        </p>\n        <nui-message [allowDismiss]=\"false\" type=\"warning\">\n            <ol>\n                <li>\n                    For remote data sources, which usually extend or use directly <a target=\"_blank\" href=\"../injectables/ServerSideDataSource.html\">\n                    <code>ServerSideDataSource</code></a>, if you want searches to be performed as the user types, it's advised to\n                    add a debounce to the filtering to avoid stressing out the backend API by using\n                    <code>pipe(debounceTime(Integer_Value))</code> between search subscriptions.\n                </li>\n                <li>\n                    For local data sources, which usually extend or use directly <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\">\n                    <code>ClientSideDataSource</code></a>, you can use the <code>setSearchProperties</code> method of\n                    <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n                    to specify which columns the search should apply to; if not set, the search will be performed on all columns.\n                </li>\n            </ol>\n        </nui-message>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'enableSort'\">\n        <p>\n            This boolean option allows you to enable/disable sorting functionality. Default is\n            <code>true</code>.\n        </p>\n        <ng-container *ngIf=\"for(componentType.table)\">\n            <p>To use sorting in a table you need to:</p>\n            <ol>\n                <li>Set <code>[sortable]=\"true\"</code> on <code>nui-table</code>.</li>\n                <li>Get table component via <code>@ViewChild</code>.</li>\n                <li>Set up the filtering component tree. To get table filtering components use <code>getFilterComponents()</code>\n                    function of table component.\n                    This will give filtering mechanism an ability to receive data for sorting at the moment you'll call\n                    <code>applyFilters</code> method of <a target=\"_blank\"\n                                                           href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>.\n                </li>\n                <li>Set <code>[isColumnSortingDisabled]=\"true\"</code> on the table-header-cell to prevent table from\n                    sorting by this property.\n                </li>\n                <li>Subscribe to <code>outputsSubject</code> on <a target=\"_blank\"\n                                                                   href=\"../injectables/ClientSideDataSource.html\">\n                    <code>ClientSideDataSource</code></a> which will return you <a target=\"_blank\"\n                                                                                       href=\"../interfaces/INovaFilteringOutputs.html\">\n                    <code>INovaFilteringOutputs</code></a> object after each change of sorting.\n                </li>\n                <li>In the <code>outputsSubject</code> subscription handler, overwrite your <code>dataSource</code> with\n                    the <code>itemsSource</code> you receive.\n                </li>\n                <li>On <code>(sortOrderChanged)</code> event call <code>applyFilters</code> method of\n                    <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>.\n                    <code>(sortOrderChanged)</code> event will emit you <a target=\"_blank\"\n                                                                           href=\"../interfaces/ISortedItem.html\">\n                        <code>ISortedItem</code></a> object.\n                </li>\n                <li>Unsubscribe from the <code>outputsSubject</code> in your component's <code>ngOnDestroy</code>\n                    method.\n                </li>\n            </ol>\n            <nui-message [allowDismiss]=\"false\" type=\"info\">\n                <ul>\n                    <li>\n                        If you need to apply a more complicated sorting algorithm, you can extend\n                        <code>ClientSideDataSource</code> and override its sorting methods.\n                    </li>\n                    <li>\n                        If you need to sort some column by default (or programmatically), you can do that by passing <a\n                        target=\"_blank\" href=\"../interfaces/ISortedItem.html\">\n                        <code>ISortedItem</code></a> to <code>[sortingColumn]</code> input of the table.\n                    </li>\n                </ul>\n            </nui-message>\n        </ng-container>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'chips'\">\n        <p>\n            This boolean option allows you to enable/disable chips functionality. Default is\n            <code>true</code>.\n        </p>\n    </ng-container>\n\n    <ng-container *ngSwitchDefault>\n        <ng-content></ng-content>\n    </ng-container>\n</div>\n\n<ng-template #helpRenderer let-types=types let-tpl=tpl>\n    <ng-container [ngSwitch]=\"forComponent ? forComponent : 'shared'\">\n        <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"tpl;context:{type: forComponent}\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'shared'\">\n            <ul>\n                <li *ngFor=\"let type of types\">\n                    <nui-expander [open]=\"false\" header=\"{{type}}\">\n                        <ng-container *ngTemplateOutlet=\"tpl;context:{type: type}\"></ng-container>\n                    </nui-expander>\n                </li>\n            </ul>\n        </ng-container>\n    </ng-container>\n</ng-template>\n","import { Component, Inject, Input, Optional } from \"@angular/core\";\nimport { RepeatComponent } from \"@nova-ui/bits\";\n\nexport enum SchematicsDocsComponentType {\n    \"list\" = \"list\",\n    \"table\" = \"table\",\n}\n\n@Component({\n    selector: \"nui-schematic-cli-option\",\n    templateUrl: \"./schematic-docs-cli-option.component.html\",\n})\nexport class SchematicsDocsCliOptionComponent {\n    @Input() name: string;\n\n    public componentType = SchematicsDocsComponentType;\n\n    public fetch = `fetchURI = \"\\${this.url\\}/?page=\\${end / (end - start)}&results=\\${end - start}\"`;\n\n    public dataSourceSetup = {\n        extendDS:\n            `@Injectable()\nexport class RandomuserTableDataSource extends DataSourceService<ITableModel> {\n    constructor(private searchService: SearchService) {\n        super();\n    }\n}`,\n        defineFields:\n            `private readonly url = \"https://yourserver.com/api\";\nprivate cache = Array.from<ITableModel>({ length: 0 });\npublic busy = new BehaviorSubject(false);`,\n        getData:\n            `public async getData(start: number = 0, end: number= 20): Promise<INovaFilteringOutputs> {\n    let response: IRandomuserResponse = null;\n    try {\n        response = await\n                    (await fetch(\"this.fetchURI\"))\n                        .json();\n                            return {\n                                users: response.results.map((result: IRandomuserResults, i: number) => ({\n                                    no: this.cache.length + i + 1,\n                                    nameTitle: result.name.title,\n                                    nameFirst: result.name.first,\n                                    nameLast: result.name.last,\n                                    gender: result.gender,\n                                    country: result.location.country,\n                                    city: result.location.city,\n                                    postcode: result.location.postcode,\n                                    email: result.email,\n                                    cell: result.cell,\n                                })),\n                                total: response.results.length,\n                                start: start,\n                            } as UsersQueryResponse;\n    } catch (e) {\n        console.error(\"Error responding from server. Please visit https://https://randomuser.me/ to see if it's available\");\n    }\n}`,\n        getFilteredData:\n            `public async getFilteredData(filters: INovaFilters): Promise<INovaFilteringOutputs> {\n    this.busy.next(true);\n    const virtualScrollFilter = filters.virtualScroll && filters.virtualScroll.value;\n    const start = virtualScrollFilter ? filters.virtualScroll.value.start : 0;\n    const end = virtualScrollFilter ? filters.virtualScroll.value.end : 0;\n\n    this.getData(start, end).then((response: UsersQueryResponse) => {\n        if (!response) { return; }\n\n        this.cache = this.cache.concat(response.users);\n        this.dataSubject.next(this.cache);\n        this.busy.next(false);\n    });\n\n    return {\n        repeat: {\n            itemsSource: this.cache,\n        },\n        totalItems: 200,\n    }\n}`,\n    };\n\n    public tableScrollingSetup = {\n        vars:\n            `\n// will store the table data received from the server\npublic totalItems: number = 0;\npublic isBusy: boolean = false;\n\n// number of items to be fetched for each request\npublic pageSize: number = 40;\n\nprivate onDestroy$: Subject<void> = new Subject<void>();\n\n// stores the cached table data dynamically changed after every request from the server\n// this value is set to the dataSource input of the nui-table.\npublic items: IServer[] = [];\n\n// define the array of columns for the table\n// the table data from the datasource to the users var must come in the very same format.\npublic displayedColumns = [\"name\", \"location\", \"status\"];\n\n// datasource that you inject, or instantiate in constructor\nprivate dataSource: TableWithVirtualScrollDataSource;\n`,\n        viewportManagerImport: `import { VirtualViewportManager } from \"@nova-ui/bits\";`,\n        viewChildren:\n            `\n@ViewChild(CdkVirtualScrollViewport, { static: false }) viewport: CdkVirtualScrollViewport;\n`,\n        provideViewport:\n            `\n@Component({\n    //\n    providers: [VirtualViewportManager]\n})\n`,\n        injectViewport:\n            `\nconstructor(private viewportManager: VirtualViewportManager) {}\n`,\n        oninitSubscribeBusy:\n            `\nngOnInit(): void {\n    this.dataSource.busy.subscribe(busy => {\n        this._isBusy = busy;\n    });\n}`,\n        registerScroll:\n            `private registerVirtualScroll() {\n    this.dataSource.registerComponent({\n        virtualScroll: { componentInstance: this.viewportManager },\n    });\n }`,\n        ngAfterViewInitStart:\n            `ngAfterViewInit(): void {\n    this.registerVirtualScroll();\n}`,\n        ngAfterViewInitViewport:\n            `this.viewportManager\n    // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n    .setViewport(this.viewport)\n    // Note: Initializing the stream with the desired page size, based on which\n    // VirtualViewportManager will perform the observations and will emit\n    // distinct ranges with step equal to provided pageSize\n    .observeNextPage$({pageSize: this.range}).pipe(\n    // Note: In case we know the total number of items we can stop the stream when dataset end is reached\n    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n    filter(range => this.totalItems ? this.totalItems >= range.end : true),\n    tap(() => this.dataSource.applyFilters()),\n    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n    switchMap(() => this.dataSource.outputsSubject.pipe(\n        tap((outputs: IFilteringOutputs) => {\n            this._totalItems = outputs.totalItems;\n            this.users = outputs.repeat.itemsSource || [];\n            this.cd.detectChanges();\n        })\n    )),\n    takeUntil(this.onDestroy$)\n).subscribe();\n        `,\n\n    };\n\n    public constructor(\n        @Optional() @Inject(SchematicsDocsComponentType) public forComponent?: SchematicsDocsComponentType\n    ) {}\n\n    public getRepeatPropKey(key: keyof RepeatComponent): string {\n        return key;\n    }\n\n    public for(forComponent: SchematicsDocsComponentType) {\n        return this.forComponent === forComponent || !this.forComponent;\n    }\n}\n","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-with-table-table #child></app-filtered-view-with-table-table>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","export { pathToArray as responsePathAsArray } from \"../jsutils/Path.mjs\";\nexport { execute, executeSync, defaultFieldResolver, defaultTypeResolver } from \"./execute.mjs\";\nexport { getDirectiveValues } from \"./values.mjs\";\n","export default \"<div nui-busy [busy]=\\\"isBusy\\\">\\n    <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Loading...\\\"></nui-spinner>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-sorter class=\\\"app-paginated-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-paginated-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"!isBusy && (listItems$ | async).length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-paginated-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"filteringState.repeat?.itemsSource\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-paginator class=\\\"app-paginated-list-paginator\\\"\\n                       [(page)]=\\\"page\\\"\\n                       [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeSet]=\\\"[10,20,30,40]\\\"\\n                       [total]=\\\"filteringState.paginator?.total\\\"\\n                       (pagerAction)=\\\"applyFilters()\\\">\\n        </nui-paginator>\\n    </div>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","import { AfterViewInit, Component, Inject, OnDestroy, QueryList, ViewChildren } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants, INovaFilteringOutputs } from \"@nova-ui/bits\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { Subscription } from \"rxjs\";\n\nimport { CustomDataSourceFilterGroupCompositeComponent } from \"./custom-data-source-filter-group.component\";\nimport { FilterGroupCustomDataSourceService } from \"./custom-data-source.service\";\nimport { ICustomDSFilteredData, IFilterGroupItem } from \"./public-api\";\n\n@Component({\n    selector: \"app-custom-data-source-filter-group-composite-example\",\n    templateUrl: \"custom-data-source-filter-group.example.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: FilterGroupCustomDataSourceService,\n    }],\n})\nexport class CustomDataSourceFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    @ViewChildren(CustomDataSourceFilterGroupCompositeComponent) filterGroups: QueryList<CustomDataSourceFilterGroupCompositeComponent>;\n\n    public filterGroupItems?: Array<IFilterGroupItem> = [];\n    public filteringState?: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n    private filterGroupSubscriptions: Array<Subscription> = [];\n\n    constructor(@Inject(DataSourceService) private filterGroupCustomDataSourceService: FilterGroupCustomDataSourceService) { }\n\n    ngAfterViewInit(): void {\n\n        this.filterGroupSubscriptions.push(\n            this.filterGroupCustomDataSourceService.outputsSubject.subscribe((filteredData: ICustomDSFilteredData) => {\n                this.filterGroupItems = filteredData.filterGroupItems;\n                this.filteringState = filteredData.filteringState;\n            })\n        );\n\n        this.filterGroupSubscriptions.push(\n            this.filterGroups.changes.subscribe(() => {\n                this.filterGroupCustomDataSourceService.registerComponent(this.getFilterComponents());\n            })\n        );\n        this.filterGroupCustomDataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.filterGroupCustomDataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, \"filteringState.repeat.itemsSource\"));\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomDataSourceFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n\n    ngOnDestroy() {\n        this.filterGroupSubscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n","<ng-template #emptyListTemplate>\n    <div class=\"d-flex flex-column align-items-center\">\n        <nui-image [isWatermark]=\"true\" image=\"no-data-to-show\"></nui-image>\n        <p class=\"nui-text-small\">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-custom-data-source-filter-groups-wrapper>\n            <app-custom-data-source-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                        [filterGroupItem]=\"filterGroupItem\"\n                                        (filterChanged)=\"changeFilters($event)\"></app-custom-data-source-filter-group>\n        </app-custom-data-source-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf=\"hasItems(); else emptyListTemplate\">\n            <nui-repeat id=\"nui-composites-demo-repeat\"\n                        [itemsSource]=\"filteringState.repeat.itemsSource\"\n                        [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                        paddingSize=\"normal\">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    Subregion: ISubregion;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    language?: IFilter<string[]>;\\n    currency?: IFilter<string[]>;\\n    subregion?: IFilter<string[]>;\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    Subregion: ITreeNode[];\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\\nexport interface ITreeNode {\\n    name: string;\\n    code?: string;\\n    children?: any[];\\n}\\n\\nexport interface ISubregion {\\n    name: string;\\n    countries: Array<ICountry>;\\n}\\n\\ninterface ICountry {\\n    name: string;\\n    population: string;\\n    officialLanguages: Array<ILanguage>;\\n    currencies: Array<ICurrency>;\\n}\\n\\ninterface ILanguage {\\n    name: string;\\n}\\n\\ninterface ICurrency {\\n    code: string;\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"schematics-docs-outlet\\\",\\n    template: `<router-outlet></router-outlet>`,\\n})\\nexport class ListSchematicsOutletComponent {}\\n\";","export var ReactNativeFile = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type\n  this.uri = uri\n  this.name = name\n  this.type = type\n}\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    LocalFilteringDataSource,\\n    PaginatorComponent,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    LOCAL_DATA,\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-with-table-data\\\";\\nimport { IServer } from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-with-table-table\\\",\\n    templateUrl: \\\"./filtered-view-table.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class FilteredViewTableComponent implements OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>\\n    ) {\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins.less\\\";\\n\\n.nui-filter-group-composite {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewListWithVirtualScrollDataSource,\\n} from \\\"./filtered-view-list-with-virtual-scroll-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-list-with-virtual-scroll\\\",\\n    styleUrls: [\\\"./filtered-view-list-with-virtual-scroll.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-list-with-virtual-scroll.component.html\\\",\\n    providers: [\\n        VirtualViewportManager,\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewListWithVirtualScrollDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewListWithVirtualScrollComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithVirtualScrollDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerCompositeComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerCompositeComponent,\\n    ],\\n    exports: [\\n        ItemPickerCompositeComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerCompositeModule {}\\n\";","export default \"// number of results to be displayed in the table\\nexport const RESULTS_PER_PAGE = 20;\\n\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class PaginatedListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value ?? { start : 0, end: 0};\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start))\\n\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = PaginatedListDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class SearchListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value ?? { start : 0, end: 0};\n        const params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start))\n\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = SearchListDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    nameof,\\n    RepeatComponent,\\n    SearchComponent,\\n    SorterComponent,\\n    SorterDirection,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    BehaviorSubject,\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    filter,\\n    switchMap,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"./types\\\";\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./virtual-scroll-list-data\\\";\\nimport { VirtualScrollListDataSource } from \\\"./virtual-scroll-list-data-source.service\\\";\\n\\n@Component({\\n    selector: \\\"app-virtual-scroll-list\\\",\\n    templateUrl: \\\"./virtual-scroll-list.component.html\\\",\\n    styleUrls: [\\\"./virtual-scroll-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    providers: [\\n        VirtualViewportManager,\\n        {\\n            provide: DataSourceService,\\n            useClass: VirtualScrollListDataSource,\\n        },\\n    ],\\n})\\nexport class VirtualScrollListComponent implements OnInit, AfterViewInit, OnDestroy {\\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n    public isBusy = false;\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: VirtualScrollListDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef,\\n        private viewportManager: VirtualViewportManager\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            virtualScroll: { componentInstance: this.viewportManager },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.repeat.viewportRef)\\n\\n            // Note: Initializing the stream with the desired page size, based on which\\n            // ViewportManager will perform the observations and will emit\\n            // distinct ranges with step equal to provided pageSize\\n            .observeNextPage$({pageSize: RESULTS_PER_PAGE})\\n                .pipe(\\n                    // Since we know the total number of items we can stop the stream when dataset end is reached\\n                    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\\n                    filter(() => {\\n                        const items = this.listItems$.getValue();\\n                        return !items.length || items.length < this.totalItems;\\n                    }),\\n                    tap(() => this.applyFilters(false)),\\n                    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\\n                    switchMap(() => this.dataSource.outputsSubject.pipe(\\n                        tap((data: IFilteringOutputs) => {\\n                            // update the list of items to be rendered\\n                            const items = data.repeat?.itemsSource || [];\\n\\n                            // after receiving data we need to append it to our previous fetched results\\n                            this.listItems$.next(this.listItems$.getValue().concat(items));\\n\\n                            this.totalItems = data.paginator?.total || 0;\\n\\n                            this.changeDetection.detectChanges();\\n                        })\\n                    )\\n                ),\\n                takeUntil(this.destroy$)\\n            ).subscribe();\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.listItems$.next([]);\\n            this.changeDetection.detectChanges();\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {FilteredViewWithTreeDataSource} from \\\"./filtered-view-with-tree-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-with-tree\\\",\\n    styleUrls: [\\\"./filtered-view-with-tree.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-with-tree.component.html\\\",\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewWithTreeDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewWithTreeComponent implements AfterViewInit {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"subregion\\\",\\n            title: \\\"Subregion\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Caribbean\\\",\\n                    displayValue: \\\"Caribbean\\\",\\n                },\\n                {\\n                    value: \\\"South America\\\",\\n                    displayValue: \\\"South America\\\",\\n                },\\n                {\\n                    value: \\\"Central America\\\",\\n                    displayValue: \\\"Central America\\\",\\n                },\\n                {\\n                    value: \\\"Northern America\\\",\\n                    displayValue: \\\"Northern America\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n        {\\n            id: \\\"language\\\",\\n            title: \\\"Language\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"English\\\",\\n                    displayValue: \\\"English\\\",\\n                },\\n                {\\n                    value: \\\"Dutch\\\",\\n                    displayValue: \\\"Dutch\\\",\\n                },\\n                {\\n                    value: \\\"French\\\",\\n                    displayValue: \\\"French\\\",\\n                },\\n                {\\n                    value: \\\"Spanish\\\",\\n                    displayValue: \\\"Spanish\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n\\n        {\\n            id: \\\"currency\\\",\\n            title: \\\"Currency\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"USD\\\",\\n                    displayValue: \\\"USD\\\",\\n                },\\n                {\\n                    value: \\\"EUR\\\",\\n                    displayValue: \\\"EUR\\\",\\n                },\\n                {\\n                    value: \\\"CAD\\\",\\n                    displayValue: \\\"CAD\\\",\\n                },\\n                {\\n                    value: \\\"MXN\\\",\\n                    displayValue: \\\"MXN\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewWithTreeDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n}\\n\";","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export { // Predicate\nisSchema // Assertion\n, assertSchema // GraphQL Schema definition\n, GraphQLSchema } from \"./schema.mjs\";\nexport { // Predicates\nisType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType, isRequiredArgument, isRequiredInputField // Assertions\n, assertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType // Un-modifiers\n, getNullableType, getNamedType // Definitions\n, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType // Type Wrappers\n, GraphQLList, GraphQLNonNull } from \"./definition.mjs\";\nexport { // Predicate\nisDirective // Assertion\n, assertDirective // Directives Definition\n, GraphQLDirective // Built-in Directives defined by the Spec\n, isSpecifiedDirective, specifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective // Constant Deprecation Reason\n, DEFAULT_DEPRECATION_REASON } from \"./directives.mjs\";\n// Common built-in scalar instances.\nexport { // Predicate\nisSpecifiedScalarType // Standard GraphQL Scalars\n, specifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID } from \"./scalars.mjs\";\nexport { // Predicate\nisIntrospectionType // GraphQL Types for introspection.\n, introspectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind // \"Enum\" of Type Kinds\n, TypeKind // Meta-field definitions.\n, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from \"./introspection.mjs\";\n// Validate GraphQL schema.\nexport { validateSchema, assertValidSchema } from \"./validate.mjs\";\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","import { Injectable, NgModule } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApolloLink, Observable } from 'apollo-link';\nimport { print } from 'graphql';\nimport { prioritize, mergeHeaders, fetch } from 'apollo-angular-link-http-common';\nimport { extractFiles } from 'extract-files';\n\n// XXX find a better name for it\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nclass HttpLinkHandler extends ApolloLink {\n    constructor(httpClient, options) {\n        super();\n        this.httpClient = httpClient;\n        this.options = options;\n        this.requester = (operation) => new Observable((observer) => {\n            const context = operation.getContext();\n            // decides which value to pick, Context, Options or to just use the default\n            const pick = (key, init) => {\n                return prioritize(context[key], this.options[key], init);\n            };\n            const includeQuery = pick('includeQuery', true);\n            const includeExtensions = pick('includeExtensions', false);\n            const method = pick('method', 'POST');\n            const url = pick('uri', 'graphql');\n            const withCredentials = pick('withCredentials');\n            const useMultipart = pick('useMultipart');\n            const req = {\n                method,\n                url: typeof url === 'function' ? url(operation) : url,\n                body: {\n                    operationName: operation.operationName,\n                    variables: operation.variables,\n                },\n                options: {\n                    withCredentials,\n                    useMultipart,\n                    headers: this.options.headers,\n                },\n            };\n            if (includeExtensions) {\n                req.body.extensions = operation.extensions;\n            }\n            if (includeQuery) {\n                req.body.query = print(operation.query);\n            }\n            if (context.headers) {\n                req.options.headers = mergeHeaders(req.options.headers, context.headers);\n            }\n            const sub = fetch(req, this.httpClient, extractFiles).subscribe({\n                next: (response) => {\n                    operation.setContext({ response });\n                    observer.next(response.body);\n                },\n                error: (err) => observer.error(err),\n                complete: () => observer.complete(),\n            });\n            return () => {\n                if (!sub.closed) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    }\n    request(op) {\n        return this.requester(op);\n    }\n}\nclass HttpLink {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    create(options) {\n        return new HttpLinkHandler(this.httpClient, options);\n    }\n}\nHttpLink.ɵfac = function HttpLink_Factory(t) { return new (t || HttpLink)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };\nHttpLink.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpLink, factory: HttpLink.ɵfac });\nHttpLink.ctorParameters = () => [\n    { type: HttpClient }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HttpLink, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();\n\nconst PROVIDERS = [HttpLink];\nclass HttpLinkModule {\n}\nHttpLinkModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpLinkModule });\nHttpLinkModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpLinkModule_Factory(t) { return new (t || HttpLinkModule)(); }, providers: PROVIDERS });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HttpLinkModule, [{\n        type: NgModule,\n        args: [{\n                providers: PROVIDERS\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HttpLink, HttpLinkHandler, HttpLinkModule, PROVIDERS };\n\n//# sourceMappingURL=ngApolloLinkHttp.js.map","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","export default \"// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 20;\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","<div class=\"nui-item-picker-composite\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    ISelection,\n    LocalFilteringDataSource,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\nimport { Subscription } from \"rxjs\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n// import { ListCompositeComponent } from \"../list/list.component\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"nui-item-picker-composite\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerCompositeComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public filteringState: IFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        paginator: {\n            total: undefined,\n        },\n    };\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    public page: number = 1;\n\n    // @ViewChild(\"list\", {static: false}) listComposite: ListCompositeComponent;\n\n    private outputsSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as LocalFilteringDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    async ngAfterViewInit() {\n        this.changeDetection.markForCheck();\n\n        // this.dataSource.registerComponent(this.listComposite.getFilterComponents());\n\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: IFilteringOutputs) => {\n            this.filteringState = data;\n        });\n\n        await this.dataSource.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","export default \"<div class=\\\"app-table-with-custom-virtual-scroll__container\\\">\\n    <div class=\\\"app-table-with-custom-virtual-scroll-searchable__search\\\">\\n        <nui-search [value]=\\\"searchTerm\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onSearchCancel()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <cdk-virtual-scroll-viewport class=\\\"app-table-with-custom-virtual-scroll-scrolling-container\\\" tableStickyHeader #viewportRef [itemSize]=\\\"rowHeight\\\">\\n    <table nui-table [dataSource]=\\\"items | sliceRange: viewportRef.getRenderedRange()\\\"\\n           [sortable]=\\\"true\\\"\\n           [sortedColumn]=\\\"sortedColumn\\\"\\n           (sortOrderChanged)=\\\"sortData($event)\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n            <ng-template nuiRowDef cdkVirtualFor\\n                         let-context\\n                         [nuiRowDefColumns]=\\\"displayedColumns\\\"\\n                         [cdkVirtualForOf]=\\\"items\\\">\\n                <tr nui-row ></tr>\\n            </ng-template>\\n    </table>\\n    </cdk-virtual-scroll-viewport>\\n\\n    <footer class=\\\"app-table-with-custom-virtual-scroll-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                         item(s).\\n                    </div>\\n                    <div class=\\\"d-flex justify-content-center\\\">\\n                        <button btn\\n                                nui-button\\n                                i18n\\n                                type=\\\"button\\\"\\n                                size=\\\"default\\\"\\n                                displayStyle=\\\"action\\\"\\n                                (click)=\\\"applyFilters(false)\\\">\\n                            Load another {{pageSize}} items\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { isInputType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.type);\n\n      if (type && !isInputType(type)) {\n        var variableName = node.variable.name.value;\n        var typeName = print(node.type);\n        context.reportError(new GraphQLError(\"Variable \\\"$\".concat(variableName, \"\\\" cannot be non-input type \\\"\").concat(typeName, \"\\\".\"), node.type));\n      }\n    }\n  };\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","export default \"import { IServer, ServerStatus } from \\\"./types\\\";\\n\\n// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 20;\\n\\nexport const LOCAL_DATA: IServer[] = [\\n    {\\n        name: \\\"FOCUS-SVR-12345\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-ASD123\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-DSA331\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-JKS212\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"ABERN-SVR-ATQU9404\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-433AAD\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-098331\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-GHJ882\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LLK001\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-KKJ998\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-RRR001\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LKJF12\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-882JJS\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-7733KK\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-JSHNSA\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-KKAEQWE\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-123KKNPQ\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-RRF231\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n];\\n\";","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, maybeDeepFreeze, isIdValue, getStoreKeyName, toIdValue, isJsonValue, canUseWeakMap, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap, KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        if (!__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady, 1) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        process.env.NODE_ENV === \"production\" ? invariant(__typename, 2) : invariant(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (__typename &&\n            implementingTypes &&\n            implementingTypes.indexOf(__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        var _this = this;\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n        this.depend = wrap(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            },\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.cacheKeyRoot, cacheKeyRoot = _c === void 0 ? new KeyTrie(canUseWeakMap) : _c, _d = _b.freezeResults, freezeResults = _d === void 0 ? false : _d;\n        var _e = this, executeStoreQuery = _e.executeStoreQuery, executeSelectionSet = _e.executeSelectionSet, executeSubSelectedArray = _e.executeSubSelectedArray;\n        this.freezeResults = freezeResults;\n        this.executeStoreQuery = wrap(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSelectionSet = wrap(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            return executeSubSelectedArray.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n                }\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        return this.diffQueryAgainstStore(__assign(__assign({}, options), { returnPartialData: false })).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: config && config.dataIdFromObject,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n                var match = !typeCondition ||\n                    execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign(__assign({}, fragmentExecResult), { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign(__assign({}, info), { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(finalResult.result);\n        }\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n                field: field,\n                array: readStoreResult.result,\n                execContext: execContext,\n            }));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n                maybeDeepFreeze(readStoreResult);\n            }\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, execContext = _a.execContext;\n        var missing;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        array = array.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    execContext: execContext,\n                }));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(array);\n        }\n        return { result: array, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue), 11) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            var id = context.dataIdFromObject(storeObj);\n                            return id && toIdValue({\n                                id: id,\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment, 3) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var id = dataId || 'self';\n                    var idValue = toIdValue({ id: id, typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var _b;\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId), 4) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged, 5) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename, 6) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign(__assign({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign(__assign({}, generated), real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    freezeResults: false,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new KeyTrie(canUseWeakMap);\n        _this.silenceBroadcast = false;\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = !!_this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter();\n        _this.storeReader = new StoreReader({\n            cacheKeyRoot: _this.cacheKeyRoot,\n            freezeResults: config.freezeResults,\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            previousResult: options.previousResult,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (write) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(7) : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { HeuristicFragmentMatcher, InMemoryCache, IntrospectionFragmentMatcher, ObjectCache, StoreReader, StoreWriter, WriteError, assertIdValue, defaultDataIdFromObject, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory, enhanceErrorWithDocument };\n//# sourceMappingURL=bundle.esm.js.map\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"schematics-docs-outlet\",\n    template: `<router-outlet></router-outlet>`,\n})\nexport class FilteredViewSchematicOutletComponent {}\n","import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    DialogService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n} from \"@nova-ui/bits\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupCompositeDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { IFilterGroupItem } from \"./public-api\";\n\ninterface ExampleItem {\n    color: string;\n    name: string;\n}\n\nconst RANDOM_ARRAY = [\n    {color: \"yellow\", name: \"banana\"},\n    {color: \"orange\", name: \"orange\"},\n    {color: \"violet\", name: \"plum\"},\n    {color: \"blue\", name: \"blueberry\"},\n    {color: \"brown\", name: \"potato\"},\n    {color: \"red\", name: \"apple\"},\n    {color: \"green\", name: \"pear\"},\n    {color: \"black\", name: \"blackcurrant\"},\n    {color: \"white\", name: \"coconut\"},\n    {color: \"magenta\", name: \"mulberry\"},\n    {color: \"apricot\", name: \"peach\"},\n    {color: \"olive\", name: \"olive\"},\n    {color: \"carmine\", name: \"grapefruit\"},\n    {color: \"coral\", name: \"pomegranate\"},\n    {color: \"corn\", name: \"corn\"},\n];\n\n@Component({\n    selector: \"app-dialog-filter-group-composite-example\",\n    templateUrl: \"dialog-filter-group.example.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n})\nexport class DialogFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"color\",\n            title: \"Color\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: \"yellow\",\n                    displayValue: \"Yellow\",\n                    count: 1,\n                }, {\n                    value: \"orange\",\n                    displayValue: \"Orange\",\n                    count: 1,\n                }, {\n                    value: \"violet\",\n                    displayValue: \"Violet\",\n                    count: 1,\n                }, {\n                    value: \"blue\",\n                    displayValue: \"Blue\",\n                    count: 1,\n                }, {\n                    value: \"brown\",\n                    displayValue: \"Brown\",\n                    count: 1,\n                }, {\n                    value: \"red\",\n                    displayValue: \"Red\",\n                    count: 1,\n                }, {\n                    value: \"green\",\n                    displayValue: \"Green\",\n                    count: 1,\n                }, {\n                    value: \"black\",\n                    displayValue: \"Black\",\n                    count: 1,\n                }, {\n                    value: \"white\",\n                    displayValue: \"White\",\n                    count: 1,\n                }, {\n                    value: \"magenta\",\n                    displayValue: \"Magenta\",\n                    count: 1,\n                }, {\n                    value: \"apricot\",\n                    displayValue: \"Apricot\",\n                    count: 1,\n                }, {\n                    value: \"olive\",\n                    displayValue: \"Olive\",\n                    count: 1,\n                }, {\n                    value: \"carmine\",\n                    displayValue: \"Carmine\",\n                    count: 1,\n                }, {\n                    value: \"coral\",\n                    displayValue: \"Coral\",\n                    count: 1,\n                }, {\n                    value: \"corn\",\n                    displayValue: \"Corn\",\n                    count: 1,\n                },\n            ],\n            selectedFilterValues: [],\n            itemsToDisplay: 10,\n        }, {\n            id: \"name\",\n            title: \"Fruits and Vegetables\",\n            expanded: false,\n            allFilterOptions: [\n                {\n                    value: \"banana\",\n                    displayValue: \"Banana\",\n                    count: 1,\n                }, {\n                    value: \"orange\",\n                    displayValue: \"Orange\",\n                    count: 1,\n                }, {\n                    value: \"plum\",\n                    displayValue: \"Plum\",\n                    count: 1,\n                }, {\n                    value: \"blueberry\",\n                    displayValue: \"Blueberry\",\n                    count: 1,\n                }, {\n                    value: \"potato\",\n                    displayValue: \"Potato\",\n                    count: 1,\n                }, {\n                    value: \"apple\",\n                    displayValue: \"Apple\",\n                    count: 1,\n                }, {\n                    value: \"pear\",\n                    displayValue: \"Pear\",\n                    count: 1,\n                }, {\n                    value: \"blackcurrant\",\n                    displayValue: \"Blackcurrant\",\n                    count: 1,\n                }, {\n                    value: \"coconut\",\n                    displayValue: \"Coconut\",\n                    count: 1,\n                }, {\n                    value: \"mulberry\",\n                    displayValue: \"Mulberry\",\n                    count: 1,\n                }, {\n                    value: \"peach\",\n                    displayValue: \"Peach\",\n                    count: 1,\n                }, {\n                    value: \"olive\",\n                    displayValue: \"Olive\",\n                    count: 1,\n                }, {\n                    value: \"grapefruit\",\n                    displayValue: \"Grapefruit\",\n                    count: 1,\n                }, {\n                    value: \"pomegranate\",\n                    displayValue: \"Pomegranate\",\n                    count: 1,\n                }, {\n                    value: \"corn\",\n                    displayValue: \"Corn\",\n                    count: 1,\n                },\n            ],\n            selectedFilterValues: [],\n            itemsToDisplay: 10,\n        },\n    ];\n\n    public filteringState: INovaFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        name: [],\n    };\n\n    private outputsSubscription: Subscription;\n    private dialogSubscription: Subscription;\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>,\n                @Inject(DialogService) private dialogService: DialogService,\n                private filterGroupService: FilterGroupService) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n    }\n\n    ngAfterViewInit(): void {\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.filteringState = data;\n            // get counts of filters\n            this.recalculateCounts(data);\n        });\n        this.dataSourceService.applyFilters();\n    }\n\n    public changeFilters(event: IFilterGroupItem) {\n        this.dataSourceService.applyFilters();\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, \"filteringState.repeat.itemsSource\"));\n    }\n\n    public handleFilterDialog(filterGroupItem: IFilterGroupItem) {\n        const dialogRef = this.dialogService.open(FilterGroupCompositeDialogComponent);\n        dialogRef.componentInstance.title = \"Filter dialog\";\n        dialogRef.componentInstance.itemPickerOptions = filterGroupItem.allFilterOptions;\n        dialogRef.componentInstance.selectedValues = filterGroupItem.selectedFilterValues;\n        this.dialogSubscription = dialogRef.componentInstance.dialogClosed.subscribe((selectedValues: string[]) => {\n            filterGroupItem.selectedFilterValues = selectedValues;\n            filterGroupItem = this.filterGroupService.appendHiddenFilters(filterGroupItem);\n            this.dataSourceService.applyFilters();\n        });\n    }\n\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value];\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.outputsSubscription) {\n            this.outputsSubscription.unsubscribe();\n        }\n    }\n}\n","<ng-template #emptyListTemplate>\n    <div class=\"d-flex flex-column align-items-center\">\n        <nui-image [isWatermark]=\"true\" image=\"no-data-to-show\"></nui-image>\n        <p class=\"nui-text-small\">No data to show</p>\n    </div>\n</ng-template>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div>{{item.color}}</div>\n    <div>{{item.status}}</div>\n</ng-template>\n\n<nui-panel>\n    <div nuiPanelEmbeddedBody>\n        <app-dialog-filter-groups-wrapper>\n            <app-dialog-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                        [filterGroupItem]=\"filterGroupItem\"\n                                        (filterChanged)=\"changeFilters($event)\"\n                                        (showAllButtonClicked)=\"handleFilterDialog(filterGroupItem)\">\n            </app-dialog-filter-group>\n        </app-dialog-filter-groups-wrapper>\n    </div>\n    <div>\n        <div *ngIf=\"hasItems(); else emptyListTemplate\">\n            <nui-repeat id=\"nui-composites-demo-repeat\"\n                        [itemsSource]=\"filteringState.repeat.itemsSource\"\n                        [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                        paddingSize=\"normal\">\n            </nui-repeat>\n        </div>\n    </div>\n</nui-panel>\n","import inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isNonNullType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\nimport { isTypeSubTypeOf } from \"../../utilities/typeComparators.mjs\";\n\n/**\n * Variables passed to field arguments conform to type\n */\nexport function VariablesInAllowedPositionRule(context) {\n  var varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var type = _ref2.type;\n          var defaultValue = _ref2.defaultValue;\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = typeFromAST(schema, varDef.type);\n\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              var varTypeStr = inspect(varType);\n              var typeStr = inspect(type);\n              context.reportError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of type \\\"\").concat(varTypeStr, \"\\\" used in position expecting type \\\"\").concat(typeStr, \"\\\".\"), [varDef, node]));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    var hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    var hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    var nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","export default \"import { CdkVirtualScrollViewport } from \\\"@angular/cdk/scrolling\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    ISortedItem,\\n    nameof,\\n    SearchComponent,\\n    SorterDirection,\\n    TableComponent,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    debounceTime,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    CUSTOM_SCROLL_ITEMS_PER_PAGE,\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-custom-virtual-scroll-data\\\";\\nimport { TableWithCustomVirtualScrollDataSource } from \\\"./table-with-custom-virtual-scroll-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"./types\\\";\\nimport { VirtualScrollCustomStrategyService } from \\\"./virtual-scroll-custom-strategy.service\\\";\\n\\n@Component({\\n    selector: \\\"app-table-with-custom-virtual-scroll\\\",\\n    templateUrl: \\\"./table-with-custom-virtual-scroll.component.html\\\",\\n    styleUrls: [\\\"./table-with-custom-virtual-scroll.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        VirtualViewportManager,\\n        VirtualScrollCustomStrategyService,\\n        {\\n            provide: CUSTOM_SCROLL_ITEMS_PER_PAGE,\\n            useValue: RESULTS_PER_PAGE,\\n        },\\n        {\\n            provide: DataSourceService,\\n            useClass: TableWithCustomVirtualScrollDataSource,\\n        },\\n    ],\\n})\\nexport class TableWithCustomVirtualScrollComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // sorting\\n    public sortedColumn: ISortedItem = {\\n        sortBy: \\\"name\\\",\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    // search\\n    public searchTerm: string;\\n    public columnsToApplySearch = [\\\"name\\\"];\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\\n\\n    // the height in px of a single row from the table\\n    public rowHeight = 40;\\n\\n    private previouslyLoadedCount: number;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: TableWithCustomVirtualScrollDataSource<IServer>,\\n        private viewportManager: VirtualViewportManager,\\n        private customVirtualScrollStrategyService: VirtualScrollCustomStrategyService,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        // register filter to be able to sort\\n        this.dataSource.registerComponent(this.table.getFilterComponents());\\n        this.dataSource.registerComponent({\\n            search: { componentInstance: this.search },\\n            virtualScroll: {componentInstance: this.customVirtualScrollStrategyService },\\n        });\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.viewport);\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                let items = data.repeat?.itemsSource || [];\\n\\n                // number of fetched items from our data source\\n                const fetchedItemsCount = items.length;\\n\\n                // number of useful items after eliminating the leftovers;\\n                // leftovers appear when we reach the end of all our data\\n                // since we're keep requesting the same page multiple times\\n                // waiting for new items to be added between subsequent requests\\n                const usefulItemsCount = fetchedItemsCount < this.pageSize\\n                    ? this.previouslyLoadedCount - fetchedItemsCount\\n                    : fetchedItemsCount;\\n\\n                items = items.slice(0, usefulItemsCount);\\n\\n                this.previouslyLoadedCount = items.length;\\n\\n                // append current useful items we need to append it to our previous fetched results\\n                this.items = this.items.concat(items);\\n\\n                this.customVirtualScrollStrategyService.prepareNextPage(fetchedItemsCount);\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // listen for input change in order to perform the search\\n        this.search.inputChange.pipe(\\n            debounceTime(500),\\n            // perform actual search\\n            tap(() => this.onSearch()),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onSearchCancel() {\\n        await this.applyFilters();\\n    }\\n\\n    public async sortData(sortedColumn: ISortedItem) {\\n        this.sortedColumn = sortedColumn;\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.items = [];\\n            this.customVirtualScrollStrategyService.reset();\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { NuiCheckboxModule, NuiExpanderModule, NuiPopoverModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { CustomDataSourceFilterGroupCompositeComponent } from \\\"./custom-data-source-filter-group.component\\\";\\nimport { CustomDataSourceFilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiExpanderModule,\\n        NuiCheckboxModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        CustomDataSourceFilterGroupsWrapperComponent,\\n        CustomDataSourceFilterGroupCompositeComponent,\\n    ],\\n    exports: [\\n        CustomDataSourceFilterGroupsWrapperComponent,\\n        CustomDataSourceFilterGroupCompositeComponent,\\n    ],\\n})\\n\\nexport class CustomDataSourceFilterGroupCompositeModule {}\\n\";","export default \"import { Component, Inject, Injectable, OnDestroy, ViewChild } from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    IFilters,\\n    LocalFilteringDataSource,\\n    RepeatComponent\\n} from \\\"@nova-ui/bits\\\";\\nimport _get from \\\"lodash/get\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\nimport { Subject, Subscription } from \\\"rxjs\\\";\\nimport { delay } from \\\"rxjs/operators\\\";\\n\\nimport { ExampleItem, ICustomDSFilteredData, IFilterGroupItem } from \\\"./custom-data-source-filter-group/public-api\\\";\\n\\nconst RANDOM_ARRAY = [\\n    {color: \\\"regular-azure\\\", status: \\\"Critical\\\"},\\n    {color: \\\"regular-black\\\", status: \\\"Warning\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-yellow\\\", status: \\\"Critical\\\"},\\n    {color: \\\"regular-yellow\\\", status: \\\"Warning\\\"},\\n    {color: \\\"regular-black\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-azure\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-azure\\\", status: \\\"Critical\\\"},\\n];\\n\\nconst filterGroupItems: IFilterGroupItem[] = [\\n    {\\n        id: \\\"color\\\",\\n        title: \\\"Color\\\",\\n        expanded: true,\\n        allFilterOptions: [\\n            {\\n                value: \\\"azure\\\",\\n                displayValue: \\\"Azure\\\",\\n                count: 3,\\n            }, {\\n                value: \\\"black\\\",\\n                displayValue: \\\"Black\\\",\\n                count: 2,\\n            }, {\\n                value: \\\"blue\\\",\\n                displayValue: \\\"Blue\\\",\\n                count: 3,\\n            }, {\\n                value: \\\"yellow\\\",\\n                displayValue: \\\"Yellow\\\",\\n                count: 2,\\n            },\\n        ],\\n        selectedFilterValues: [],\\n    }, {\\n        id: \\\"status\\\",\\n        title: \\\"Status\\\",\\n        allFilterOptions: [\\n            {\\n                value: \\\"warning\\\",\\n                displayValue: \\\"Warning\\\",\\n                count: 2,\\n            }, {\\n                value: \\\"critical\\\",\\n                displayValue: \\\"Critical\\\",\\n                count: 2,\\n            },\\n            {\\n                value: \\\"up\\\",\\n                displayValue: \\\"Up\\\",\\n                count: 5,\\n            },\\n        ],\\n        selectedFilterValues: [],\\n    },\\n    {\\n        id: \\\"vendor\\\",\\n        title: \\\"Vendors\\\",\\n        allFilterOptions: [],\\n        selectedFilterValues: [],\\n    },\\n];\\n\\n/** @ignore */\\n@Injectable()\\nexport class FakeHTTPService {\\n    public receiveFilteredDataSubject: Subject<ICustomDSFilteredData> = new Subject<ICustomDSFilteredData>();\\n    public getFilteredDataSubject: Subject<IFilters> = new Subject<IFilters>();\\n\\n    constructor() {}\\n\\n    public async getData(filters: IFilters): Promise<ICustomDSFilteredData> {\\n        this.getFilteredDataSubject.next(filters);\\n\\n        return new Promise((resolve) => {\\n            this.receiveFilteredDataSubject.subscribe((filteredData: ICustomDSFilteredData) => {\\n                resolve(filteredData);\\n            });\\n        });\\n    }\\n\\n    public receiveFilteredData(filteredData: ICustomDSFilteredData): void {\\n        this.receiveFilteredDataSubject.next(filteredData);\\n    }\\n}\\n\\n/** @ignore */\\n@Component({\\n    selector: \\\"nui-fake-filtering-datasource-backend-component\\\",\\n    template: ``,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: LocalFilteringDataSource,\\n        },\\n    ],\\n})\\n// tslint:disable-next-line:component-class-suffix\\nexport class FakeServer implements OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = filterGroupItems;\\n    public filteringState: IFilteringOutputs = {\\n        repeat: {\\n            itemsSource: [],\\n        },\\n        color: [],\\n        status: [],\\n    };\\n\\n    private filterGroupSubscriptions: Array<Subscription> = [];\\n\\n    @ViewChild(RepeatComponent) filteringRepeat: RepeatComponent;\\n\\n    constructor(@Inject(DataSourceService) private dataSourceService: DataSourceService<ExampleItem>,\\n                @Inject(FakeHTTPService) private httpService: FakeHTTPService) {\\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\\n\\n        this.filterGroupSubscriptions.push(\\n            this.dataSourceService.outputsSubject.subscribe((filteringState: IFilteringOutputs) => {\\n                this.filteringState = filteringState;\\n                this.recalculateCounts(filteringState);\\n            })\\n        );\\n\\n        this.filterGroupSubscriptions.push(\\n            this.httpService.getFilteredDataSubject\\n                .pipe(delay(500))\\n                .subscribe(async (filters: IFilters) => {\\n                    this.filteringState = await this.dataSourceService.getFilteredData(filters);\\n                    this.recalculateCounts(this.filteringState);\\n                    this.sendFilteredData();\\n                })\\n        );\\n    }\\n\\n    private sendFilteredData(): void {\\n        this.httpService.receiveFilteredData({\\n            filterGroupItems: this.filterGroupItems,\\n            filteringState: this.filteringState,\\n        });\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs): void {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n\\n                if (!_isEmpty(counts)) {\\n                    filterOption.count = counts[filterOption.value];\\n                }\\n            });\\n        });\\n    }\\n\\n    public hasItems(): boolean {\\n        return !_isEmpty(_get(this, \\\"filteringState.repeat.itemsSource\\\"));\\n    }\\n\\n    ngOnDestroy() {\\n        this.filterGroupSubscriptions.forEach(subscription => subscription.unsubscribe());\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"schematics-docs-outlet\\\",\\n    template: `<router-outlet></router-outlet>`,\\n})\\nexport class FilteredViewSchematicOutletComponent {}\\n\";","<div class=\"app-basic-table__container\">\n    <table nui-table [dataSource]=\"items\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    INovaFilteringOutputs,\n    PaginatorComponent,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from \"./basic-table-data\";\nimport { IServer } from \"./types\";\n\n@Component({\n    selector: \"app-basic-table\",\n    templateUrl: \"./basic-table.component.html\",\n    styleUrls: [\"./basic-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: ClientSideDataSource,\n        },\n    ],\n})\nexport class BasicTableComponent implements OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(node.name ? \"Subscription \\\"\".concat(node.name.value, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.', node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { CustomDataSourceFilterGroupCompositeComponent } from \\\"../custom-data-source-filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-custom-data-source-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\n\\nexport class CustomDataSourceFilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(CustomDataSourceFilterGroupCompositeComponent) filterGroups: QueryList<CustomDataSourceFilterGroupCompositeComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomDataSourceFilterGroupCompositeComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"<h1>\\n    bits schematics\\n</h1>\\n<div>\\n    All schematics work in similar way. To use them, you can call it by first doing <code>ng add @nova-ui/bits</code>\\n    then <code>ng g @nova-ui/bits:SCHEMATICNAME</code> and add option, available for each schematic.\\n    <b>Note:</b> for most of the schematics, name can be set without specifying option, just type it as the first argument in command line.\\n</div>\\n\\n<div>\\n    <h2>Ng-add schematic guide</h2>\\n    <p>Bootstraps nova-composites for consumption in your project. Adds it package.json and does <code>npm install</code>.</p>\\n    <div *ngFor=\\\"let key of objectKeys(addJsonScheme)\\\">\\n        <nui-expander [header]=\\\"key\\\">\\n            <div><i>Description: </i><span>{{addJsonScheme[key].description}}</span></div>\\n            <div><i>Type: </i><span>{{addJsonScheme[key].type}}</span></div>\\n            <div *ngIf=\\\"addJsonScheme[key].enum\\\"><i>Enum: </i><span>{{addJsonScheme[key].enum}}</span></div>\\n            <div *ngIf=\\\"addJsonScheme[key].alias\\\"><i>Alias: </i><span>{{addJsonScheme[key].alias}}</span></div>\\n            <div *ngIf=\\\"addJsonScheme[key].default\\\"><i>Default: </i><span>{{addJsonScheme[key].default}}</span></div>\\n        </nui-expander>\\n    </div>\\n</div>\\n<div>\\n    <h2>Layout schematic guide</h2>\\n    <p>Use <code>ng g @nova-ui/bits:layout</code> to generate basic layout example that can be used in you project out of the box.</p>\\n    <p>Use the following options in the command line to modify schematic's execution:</p>\\n    <div *ngFor=\\\"let key of objectKeys(layoutJsonScheme)\\\">\\n        <nui-expander [header]=\\\"key\\\">\\n            <div><i>Description: </i><span>{{layoutJsonScheme[key].description}}</span></div>\\n            <div><i>Type: </i><span>{{layoutJsonScheme[key].type}}</span></div>\\n            <div *ngIf=\\\"layoutJsonScheme[key].enum\\\"><i>Enum: </i><span>{{layoutJsonScheme[key].enum}}</span></div>\\n            <div *ngIf=\\\"layoutJsonScheme[key].alias\\\"><i>Alias: </i><span>{{layoutJsonScheme[key].alias}}</span></div>\\n            <div *ngIf=\\\"layoutJsonScheme[key].default\\\"><i>Default: </i><span>{{layoutJsonScheme[key].default}}</span></div>\\n        </nui-expander>\\n    </div>\\n</div>\\n<div>\\n    <h2>Table schematic guide</h2>\\n    <p>In your command line, type <code>ng g @nova-ui/bits:table</code>to generate table.</p>\\n    <div *ngFor=\\\"let key of objectKeys(tableJsonScheme)\\\">\\n        <nui-expander [header]=\\\"key\\\">\\n            <div><i>Description: </i><span>{{tableJsonScheme[key].description}}</span></div>\\n            <div><i>Type: </i><span>{{tableJsonScheme[key].type}}</span></div>\\n            <div *ngIf=\\\"tableJsonScheme[key].enum\\\"><i>Enum: </i><span>{{tableJsonScheme[key].enum}}</span></div>\\n            <div *ngIf=\\\"tableJsonScheme[key].alias\\\"><i>Alias: </i><span>{{tableJsonScheme[key].alias}}</span></div>\\n            <div *ngIf=\\\"tableJsonScheme[key].default\\\"><i>Default: </i><span>{{tableJsonScheme[key].default}}</span></div>\\n        </nui-expander>\\n    </div>\\n</div>\\n\";","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","export default \"import { ScrollingModule } from \\\"@angular/cdk/scrolling\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTableWithVirtualScrollComponent } from \\\"./filtered-view-table-with-virtual-scroll.component\\\";\\nimport { FilteredViewTableComponent } from \\\"./filtered-view-table/filtered-view-table.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        ScrollingModule,\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiProgressModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiIconModule,\\n        NuiSpinnerModule,\\n        NuiTableModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewTableWithVirtualScrollComponent,\\n        FilteredViewTableComponent,\\n    ],\\n    exports: [\\n        FilteredViewTableWithVirtualScrollComponent,\\n        FilteredViewTableComponent,\\n    ],\\n})\\n\\nexport class FilteredViewTableWithVirtualScrollModule {}\\n\";","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { DirectiveLocation } from \"../language/directiveLocation.mjs\";\nimport { astFromValue } from \"../utilities/astFromValue.mjs\";\nimport { GraphQLString, GraphQLBoolean } from \"./scalars.mjs\";\nimport { GraphQLList, GraphQLNonNull, GraphQLObjectType, GraphQLEnumType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isAbstractType } from \"./definition.mjs\";\nexport var __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(schema) {\n          return schema.description;\n        }\n      },\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n        resolve: function resolve(schema) {\n          return objectValues(schema.getTypeMap());\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: new GraphQLNonNull(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\nexport var __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description: \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(directive) {\n          return directive.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(directive) {\n          return directive.description;\n        }\n      },\n      isRepeatable: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(directive) {\n          return directive.isRepeatable;\n        }\n      },\n      locations: {\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__DirectiveLocation))),\n        resolve: function resolve(directive) {\n          return directive.locations;\n        }\n      },\n      args: {\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__InputValue))),\n        resolve: function resolve(directive) {\n          return directive.args;\n        }\n      }\n    };\n  }\n});\nexport var __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.'\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\nexport var __Type = new GraphQLObjectType({\n  name: '__Type',\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: new GraphQLNonNull(__TypeKind),\n        resolve: function resolve(type) {\n          if (isScalarType(type)) {\n            return TypeKind.SCALAR;\n          }\n\n          if (isObjectType(type)) {\n            return TypeKind.OBJECT;\n          }\n\n          if (isInterfaceType(type)) {\n            return TypeKind.INTERFACE;\n          }\n\n          if (isUnionType(type)) {\n            return TypeKind.UNION;\n          }\n\n          if (isEnumType(type)) {\n            return TypeKind.ENUM;\n          }\n\n          if (isInputObjectType(type)) {\n            return TypeKind.INPUT_OBJECT;\n          }\n\n          if (isListType(type)) {\n            return TypeKind.LIST;\n          } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n          if (isNonNullType(type)) {\n            return TypeKind.NON_NULL;\n          } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n          false || invariant(0, \"Unexpected type: \\\"\".concat(inspect(type), \"\\\".\"));\n        }\n      },\n      name: {\n        type: GraphQLString,\n        resolve: function resolve(type) {\n          return type.name !== undefined ? type.name : undefined;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(type) {\n          return type.description !== undefined ? type.description : undefined;\n        }\n      },\n      specifiedByUrl: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.specifiedByUrl !== undefined ? obj.specifiedByUrl : undefined;\n        }\n      },\n      fields: {\n        type: new GraphQLList(new GraphQLNonNull(__Field)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n\n          if (isObjectType(type) || isInterfaceType(type)) {\n            var fields = objectValues(type.getFields());\n            return includeDeprecated ? fields : fields.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      interfaces: {\n        type: new GraphQLList(new GraphQLNonNull(__Type)),\n        resolve: function resolve(type) {\n          if (isObjectType(type) || isInterfaceType(type)) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: new GraphQLList(new GraphQLNonNull(__Type)),\n        resolve: function resolve(type, _args, _context, _ref2) {\n          var schema = _ref2.schema;\n\n          if (isAbstractType(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref3) {\n          var includeDeprecated = _ref3.includeDeprecated;\n\n          if (isEnumType(type)) {\n            var values = type.getValues();\n            return includeDeprecated ? values : values.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      inputFields: {\n        type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref4) {\n          var includeDeprecated = _ref4.includeDeprecated;\n\n          if (isInputObjectType(type)) {\n            var values = objectValues(type.getFields());\n            return includeDeprecated ? values : values.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      ofType: {\n        type: __Type,\n        resolve: function resolve(type) {\n          return type.ofType !== undefined ? type.ofType : undefined;\n        }\n      }\n    };\n  }\n});\nexport var __Field = new GraphQLObjectType({\n  name: '__Field',\n  description: 'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(field) {\n          return field.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(field) {\n          return field.description;\n        }\n      },\n      args: {\n        type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__InputValue))),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(field, _ref5) {\n          var includeDeprecated = _ref5.includeDeprecated;\n          return includeDeprecated ? field.args : field.args.filter(function (arg) {\n            return arg.deprecationReason == null;\n          });\n        }\n      },\n      type: {\n        type: new GraphQLNonNull(__Type),\n        resolve: function resolve(field) {\n          return field.type;\n        }\n      },\n      isDeprecated: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(field) {\n          return field.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(field) {\n          return field.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description: 'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(inputValue) {\n          return inputValue.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(inputValue) {\n          return inputValue.description;\n        }\n      },\n      type: {\n        type: new GraphQLNonNull(__Type),\n        resolve: function resolve(inputValue) {\n          return inputValue.type;\n        }\n      },\n      defaultValue: {\n        type: GraphQLString,\n        description: 'A GraphQL-formatted string representing the default value for this input value.',\n        resolve: function resolve(inputValue) {\n          var type = inputValue.type,\n              defaultValue = inputValue.defaultValue;\n          var valueAST = astFromValue(defaultValue, type);\n          return valueAST ? print(valueAST) : null;\n        }\n      },\n      isDeprecated: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(field) {\n          return field.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description: 'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new GraphQLNonNull(GraphQLString),\n        resolve: function resolve(enumValue) {\n          return enumValue.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(enumValue) {\n          return enumValue.description;\n        }\n      },\n      isDeprecated: {\n        type: new GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(enumValue) {\n          return enumValue.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(enumValue) {\n          return enumValue.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var TypeKind = Object.freeze({\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n});\nexport var __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. `fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. `possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. `enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. `inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. `ofType` is a valid field.'\n    }\n  }\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport var SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(_source, _args, _context, _ref6) {\n    var schema = _ref6.schema;\n    return schema;\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{\n    name: 'name',\n    description: undefined,\n    type: new GraphQLNonNull(GraphQLString),\n    defaultValue: undefined,\n    deprecationReason: undefined,\n    extensions: undefined,\n    astNode: undefined\n  }],\n  resolve: function resolve(_source, _ref7, _context, _ref8) {\n    var name = _ref7.name;\n    var schema = _ref8.schema;\n    return schema.getType(name);\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(_source, _args, _context, _ref9) {\n    var parentType = _ref9.parentType;\n    return parentType.name;\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var introspectionTypes = Object.freeze([__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(function (_ref10) {\n    var name = _ref10.name;\n    return type.name === name;\n  });\n}\n","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"/*\\nCLI commands used to generate the current examples:\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app\\n --name=filtered-view-with-list --presentationType=list --dataSource=none --pagingMode=pagination --selectionMode=none\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app\\n --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide --pagingMode=pagination --selectionMode=none\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\\n --name=filtered-view-list-with-virtual-scroll --presentationType=list --dataSource=serverSide --selectionMode=none\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=pagination\\n --name=filtered-view-with-table --presentationType=table --dataSource=none --enableSort=false --enableSearch=false --selectionMode=none\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=pagination \\\\\\n --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false --selectionMode=none\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --presentationType=table\\n--name=filtered-view-table-with-selection --dataSource=serverSide --pagingMode=pagination --selectionMode=multi\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\\n --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false --selectionMode=none\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\\n--name=filtered-view-table-with-virtual-scroll-selection --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false\\n--selectionMode=multi\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\\n--name=filtered-view-table-with-virtual-scroll-selection --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false\\n--selectionMode=multi\\n\\n\\nng g \\\"./schematics/src/collection.json\\\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\\n --name=filtered-view-table-with-custom-virtual-scroll --presentationType=table --dataSource=serverSide  --enableSort=false --enableSearch=false\\n --virtualScrollStrategy=custom --selectionMode=none\\n*/\\nimport { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"schematics-docs-example\\\",\\n    templateUrl: \\\"./filtered-view-schematic.example.component.html\\\",\\n})\\nexport class FilteredViewSchematicExampleComponent {}\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-custom-virtual-scroll-data\\\";\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class TableWithCustomVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE))\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = TableWithCustomVirtualScrollDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-table-with-sort__container {\\n    overflow: auto;\\n}\\n\\n.app-table-with-sort-scrolling-footer {\\n    height: 28px;\\n}\\n\";","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","<div>\n    <div class=\"d-flex flex-row\">\n        <nui-sorter class=\"app-basic-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-basic-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"filteringState.repeat?.itemsSource.length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-basic-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"filteringState.repeat?.itemsSource\">\n        </nui-repeat>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <nui-paginator class=\"app-basic-list-paginator\"\n                       [(page)]=\"page\"\n                       [pageSize]=\"pageSize\"\n                       [pageSizeSet]=\"[10,20,30,40]\"\n                       [total]=\"filteringState.paginator?.total\"\n                       (pagerAction)=\"applyFilters()\">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from \"@nova-ui/bits\";\nimport {\n    Subject,\n} from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from \"./basic-list-data\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"./types\";\n\n@Component({\n    selector: \"app-basic-list\",\n    templateUrl: \"./basic-list.component.html\",\n    styleUrls: [\"./basic-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: ClientSideDataSource,\n        },\n    ],\n})\nexport class BasicListComponent implements AfterViewInit, OnDestroy {\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { DialogFilterGroupCompositeComponent } from \"../dialog-filter-group.component\";\n\n@Component({\n    selector: \"app-dialog-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\n\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(DialogFilterGroupCompositeComponent) filterGroups: QueryList<DialogFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: DialogFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"nui-filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"nui-filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"nui-filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class TableWithSearchDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        const params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start))\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = TableWithSearchDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","import objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { isLeafType, isInputObjectType, isListType, isNonNullType } from \"../type/definition.mjs\";\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    var variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    var variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      var coercedValues = [];\n\n      for (var _i2 = 0, _valueNode$values2 = valueNode.values; _i2 < _valueNode$values2.length; _i2++) {\n        var itemNode = _valueNode$values2[_i2];\n\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    var coercedObj = Object.create(null);\n    var fieldNodes = keyMap(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n\n    for (var _i4 = 0, _objectValues2 = objectValues(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    var result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || invariant(0, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === Kind.VARIABLE && (variables == null || variables[valueNode.name.value] === undefined);\n}\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","var map = {\n\t\"./filter-group/schema.json\": \"1DH5\",\n\t\"./filtered-view/schema.json\": \"uEkh\",\n\t\"./layout/schema.json\": \"DWUt\",\n\t\"./list/schema.json\": \"Ct9E\",\n\t\"./ng-add/schema.json\": \"OFrb\",\n\t\"./ng-update/schema.json\": \"PVKA\",\n\t\"./table/schema.json\": \"5KZL\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Mpl2\";","/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nexport default process.env.NODE_ENV === 'production' ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n// eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (value) {\n    var valueClass = value.constructor;\n    var className = constructor.name;\n\n    if (className && valueClass && valueClass.name === className) {\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(value, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n","export default \"<div class=\\\"app-filtered-view-table-with-virtual-scroll-table__container\\\">\\n    <cdk-virtual-scroll-viewport class=\\\"app-filtered-view-table-with-virtual-scroll-table-scrolling-container\\\" tableStickyHeader #viewportRef [itemSize]=\\\"rowHeight\\\">\\n    <table nui-table [dataSource]=\\\"items | sliceRange: viewportRef.getRenderedRange()\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n            <ng-template nuiRowDef cdkVirtualFor\\n                         let-context\\n                         [nuiRowDefColumns]=\\\"displayedColumns\\\"\\n                         [cdkVirtualForOf]=\\\"items\\\">\\n                <tr nui-row ></tr>\\n            </ng-template>\\n    </table>\\n    </cdk-virtual-scroll-viewport>\\n\\n    <footer class=\\\"app-filtered-view-table-with-virtual-scroll-table-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                    <div class=\\\"d-flex pt-3 pb-3\\\">\\n                        <ng-container i18n *ngIf=\\\"items.length !== totalItems; else endOfData\\\">, scroll down for more.</ng-container>\\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n\";","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","export default \"<nui-schematic-docs-page schematicFolderName=\\\"filter-group\\\">\\n    <nui-tab-group schematicExamples>\\n        <nui-tab heading=\\\"Basic usage\\\">\\n            <h2>Basic Usage</h2>\\n            <p>Filter group depends heavily on the\\n                <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a> service,\\n                    so first and foremost please check out the documentation for\\n                <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>.\\n            </p>\\n            <p>\\n                This example contains all the files generated by the CLI command. The schematic will output a feature module,\\n                a filter group composite and helper components: <code>filter-groups-wrapper</code>,  <code>filter-group-dialog</code>\\n                and <code>item-picker</code>. Except for the wrapper, usage of these components may not be required by your implementation.\\n            </p>\\n            <p>Once you have scaffolded your filter group, follow these steps to add it to your application:</p>\\n            <ol>\\n                <li>\\n                    In your template, place your composite(s) inside the wrapper component. The wrapper will register your composites with\\n                    <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n                    as well as hide and display a popover over filter groups with no existing values.\\n                </li>\\n                <li>\\n                    Pass an <a target=\\\"_blank\\\" href=\\\"../interfaces/IFilterGroupItem.html\\\"><code>IFilterGroupItem</code></a> object to each <code>[filterGroupItem]</code> input.\\n                </li>\\n                <li>\\n                    To receive new filtering state (<code>IFilteringOutputs</code>), bind to the <code>(filterChanged)</code> output\\n                    and invoke the <code>applyFilters</code> method of\\n                    <a target=\\\"_blank\\\" href=\\\"../../../../../../nova-bits/develop/sdk/api-docs-ng2/injectables/ClientSideDataSource.html\\\">\\n                        <code>ClientSideDataSource</code>.\\n                    </a>\\n                </li>\\n\\n            </ol>\\n            <p>\\n                <b>Note:</b> If you provide a value for the count property in\\n                <a target=\\\"_blank\\\" href=\\\"../interfaces/IFilterGroupOption.html\\\"><code>IFilterGroupOption</code></a>, counts\\n                will be added to the checkbox template. To recalculate counts, you must implement a <code>recalculateCounts</code> method and\\n                call it upon receiving filteringState <code>IFilteringOutputs</code>.\\n            </p>\\n\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=basic-filter-group --p=app</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"basic-filter-group\\\">\\n                <app-basic-filter-group-composite-example></app-basic-filter-group-composite-example>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Custom template\\\">\\n            <h2>Custom Component Templates</h2>\\n            <p>\\n                To use a custom <strong>checkbox</strong> or <strong>expander </strong> <code>ng-template</code>,\\n                use the <code>[checkboxTemplateRef]</code> or <code>[expanderTemplateRef]</code> input of the filter group.\\n            </p>\\n            <p>\\n                To pre-select filters, define <code>selectedFilterValues</code> for your\\n                <a target=\\\"_blank\\\" href=\\\"../interfaces/IFilterGroupItem.html\\\"><code>IFilterGroupItem</code></a> objects.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=custom-template-filter-group --p=app\\n                <span appendedText>with some manual adjustments that can be seen below</span>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"custom-template-filter-group\\\">\\n                <app-custom-template-filter-group-composite-example></app-custom-template-filter-group-composite-example>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Custom data source\\\">\\n            <h2>Custom Data Source</h2>\\n            <p>To use Filter Group with a custom data source:</p>\\n            <ol>\\n                <li>\\n                    Create a custom data source service that extends <code>DataSourceService</code> and implements a method called <code>getFilteredData</code>.\\n                    This method will communicate with an HTTP service to fetch filtered data and emit it back to the filter group.\\n                </li>\\n                <li>\\n                    Get a reference to your filter groups via <code>ViewChildren</code> and subscribe to their changes. In the callback, register\\n                    components in your custom data service using the <code>registerComponent</code> method of<code>DataSourceService</code>.\\n                </li>\\n                <li>\\n                    On filter change, have the custom data source service emit filters (<code>IFilters</code>) to the http service\\n                    and receive a filtered data object (<code>ICustomDSFilteredData</code>) in return.\\n                    The filtered data object consists of filterGroupItems (<code>IFilterGroupItem[]</code>) and filteringState (<code>IFilteringOutputs</code>).\\n                </li>\\n            </ol>\\n            <p>\\n                As implementations of the custom data source service may vary, other data may be passed from the filter group to the custom data source\\n                in order for the custom data source to apply filters and return filtered data.\\n            </p>\\n\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=custom-data-source-filter-group --p=app\\n                <span appendedText>with some manual adjustments that can be seen below</span>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"custom-data-source-filter-group\\\">\\n                <app-custom-data-source-filter-group-composite-example></app-custom-data-source-filter-group-composite-example>\\n                <nui-fake-filtering-datasource-backend-component></nui-fake-filtering-datasource-backend-component>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n\\n\\n        <nui-tab heading=\\\"Collapse / Dialog\\\">\\n            <h2>Handle Multiple Filter Group Options</h2>\\n            <p>\\n                Only 10 filter group options are displayed by default. You can change this number by setting the <code>itemsToDisplay</code>\\n                property of an <a target=\\\"_blank\\\" href=\\\"../interfaces/IFilterGroupItem.html\\\"><code>IFilterGroupItem</code></a>.\\n            </p>\\n            <p>\\n                The remaining options will be replaced with a <strong>Show all</strong> button bound to the <code>(showAllButtonClicked)</code> output.\\n                To display the hidden options, you can use the <code>FilterGroupCompositeDialogComponent</code> generated by the schematic:\\n            </p>\\n            <ol>\\n                <li>\\n                    Implement an item picker and place it in the dialog template. The example below uses a simple selectable list - to add more functionality,\\n                    such as sorting and pagination, refer to the <a target=\\\"_blank\\\" href=\\\"../additional-documentation/schematics/list.html\\\">list schematic docs</a>.\\n                </li>\\n                <li>\\n                    Add your dialog component to your module's <code>entryComponents</code>.\\n                </li>\\n                <li>\\n                    Implement a handler for the <code>showAllButtonClicked</code> output.\\n                    Use it to open the dialog, feed it the required parameters and update selection on <code>dialogClosed</code> event\\n                    (refer to the <code>handleFilterDialog</code> method in the example).\\n                </li>\\n            </ol>\\n\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=dialog-filter-group --p=app\\n                <span appendedText>with some manual adjustments that can be seen below</span>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"dialog-filter-group\\\">\\n                <app-dialog-filter-group-composite-example></app-dialog-filter-group-composite-example>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n    </nui-tab-group>\\n</nui-schematic-docs-page>\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    ISelection,\\n    LocalFilteringDataSource,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n// import { ListCompositeComponent } from \\\"../list/list.component\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"nui-item-picker-composite\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: LocalFilteringDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerCompositeComponent implements AfterViewInit, OnInit, OnDestroy {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public filteringState: IFilteringOutputs = {\\n        repeat: {\\n            itemsSource: [],\\n        },\\n        paginator: {\\n            total: undefined,\\n        },\\n    };\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    public page: number = 1;\\n\\n    // @ViewChild(\\\"list\\\", {static: false}) listComposite: ListCompositeComponent;\\n\\n    private outputsSubscription: Subscription;\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as LocalFilteringDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    async ngAfterViewInit() {\\n        this.changeDetection.markForCheck();\\n\\n        // this.dataSource.registerComponent(this.listComposite.getFilterComponents());\\n\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: IFilteringOutputs) => {\\n            this.filteringState = data;\\n        });\\n\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        if (this.outputsSubscription) {\\n            this.outputsSubscription.unsubscribe();\\n        }\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiButtonModule,\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n    NuiSpinnerModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { DialogFilterGroupCompositeComponent } from \\\"./dialog-filter-group.component\\\";\\nimport { FilterGroupCompositeDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerCompositeModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiDialogModule,\\n        NuiSpinnerModule,\\n        NuiButtonModule,\\n        ItemPickerCompositeModule,\\n        NuiPopoverModule,\\n        NuiExpanderModule,\\n        NuiCheckboxModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupCompositeDialogComponent,\\n        DialogFilterGroupCompositeComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupCompositeDialogComponent,\\n        DialogFilterGroupCompositeComponent,\\n    ],\\n    providers: [FilterGroupService],\\n    entryComponents: [FilterGroupCompositeDialogComponent],\\n})\\n\\nexport class DialogFilterGroupCompositeModule {\\n}\\n\";","export default \"<div class=\\\"nui-filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTableWithSelectionComponent } from \\\"./filtered-view-table-with-selection.component\\\";\\nimport { FilteredViewTableComponent } from \\\"./filtered-view-table/filtered-view-table.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiProgressModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiIconModule,\\n        NuiSpinnerModule,\\n        NuiTableModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewTableWithSelectionComponent,\\n        FilteredViewTableComponent,\\n    ],\\n    exports: [\\n        FilteredViewTableWithSelectionComponent,\\n        FilteredViewTableComponent,\\n    ],\\n})\\n\\nexport class FilteredViewTableWithSelectionModule {}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(\"There can be only one variable named \\\"$\".concat(variableName, \"\\\".\"), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n","export default \"import { ScrollingModule } from \\\"@angular/cdk/scrolling\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTableWithCustomVirtualScrollComponent } from \\\"./filtered-view-table-with-custom-virtual-scroll.component\\\";\\nimport { FilteredViewTableComponent } from \\\"./filtered-view-table/filtered-view-table.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        ScrollingModule,\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiProgressModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiIconModule,\\n        NuiSpinnerModule,\\n        NuiTableModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewTableWithCustomVirtualScrollComponent,\\n        FilteredViewTableComponent,\\n    ],\\n    exports: [\\n        FilteredViewTableWithCustomVirtualScrollComponent,\\n        FilteredViewTableComponent,\\n    ],\\n})\\n\\nexport class FilteredViewTableWithCustomVirtualScrollModule {}\\n\";","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n    TemplateRef,\\n} from \\\"@angular/core\\\";\\nimport { DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-dialog-filter-group\\\",\\n    templateUrl: \\\"./dialog-filter-group.component.html\\\",\\n    styleUrls: [\\\"./dialog-filter-group.component.less\\\"],\\n})\\nexport class DialogFilterGroupCompositeComponent implements IFilterPub, OnInit {\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n}\\n\";","export default \"import { Inject, Injectable } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilters } from \\\"@nova-ui/bits\\\";\\n\\nimport { FakeHTTPService } from \\\"../fake-http.service\\\";\\n\\nimport { ExampleItem, ICustomDSFilteredData } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupCustomDataSourceService extends DataSourceService<ExampleItem> {\\n    constructor(@Inject(FakeHTTPService) public httpService: FakeHTTPService) {\\n        super();\\n    }\\n\\n    // Emitting current filters to 'server' via http service, to get filtered data 'ICustomDSFilteredData'\\n    public async getFilteredData(filters: IFilters): Promise<ICustomDSFilteredData> {\\n        return await this.httpService.getData(filters);\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    nameof,\\n    RepeatComponent,\\n    SearchComponent,\\n    SorterComponent,\\n    SorterDirection,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    BehaviorSubject,\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    filter,\\n    switchMap,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-list-with-virtual-scroll-data\\\";\\nimport { FilteredViewListWithVirtualScrollDataSource } from \\\"../filtered-view-list-with-virtual-scroll-data-source.service\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-list-with-virtual-scroll-list\\\",\\n    templateUrl: \\\"./filtered-view-list.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewListComponent implements OnInit, AfterViewInit, OnDestroy {\\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n    public isBusy = false;\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithVirtualScrollDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef,\\n        private viewportManager: VirtualViewportManager\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            virtualScroll: { componentInstance: this.viewportManager },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.repeat.viewportRef)\\n\\n            // Note: Initializing the stream with the desired page size, based on which\\n            // ViewportManager will perform the observations and will emit\\n            // distinct ranges with step equal to provided pageSize\\n            .observeNextPage$({pageSize: RESULTS_PER_PAGE})\\n                .pipe(\\n                    // Since we know the total number of items we can stop the stream when dataset end is reached\\n                    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\\n                    filter(() => {\\n                        const items = this.listItems$.getValue();\\n                        return !items.length || items.length < this.totalItems;\\n                    }),\\n                    tap(() => this.applyFilters(false)),\\n                    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\\n                    switchMap(() => this.dataSource.outputsSubject.pipe(\\n                        tap((data: IFilteringOutputs) => {\\n                            // update the list of items to be rendered\\n                            const items = data.repeat?.itemsSource || [];\\n\\n                            // after receiving data we need to append it to our previous fetched results\\n                            this.listItems$.next(this.listItems$.getValue().concat(items));\\n\\n                            this.totalItems = data.paginator?.total || 0;\\n\\n                            this.changeDetection.detectChanges();\\n                        })\\n                    )\\n                ),\\n                takeUntil(this.destroy$)\\n            ).subscribe();\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.listItems$.next([]);\\n            this.changeDetection.detectChanges();\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewListWithPaginationDataSource,\\n} from \\\"./filtered-view-list-with-pagination-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-list-with-pagination\\\",\\n    styleUrls: [\\\"./filtered-view-list-with-pagination.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-list-with-pagination.component.html\\\",\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewListWithPaginationDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewListWithPaginationComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithPaginationDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-virtual-scroll-selection-table #child></app-filtered-view-table-with-virtual-scroll-selection-table>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewTableWithVirtualScrollSelectionDataSource,\n} from \"./filtered-view-table-with-virtual-scroll-selection-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-virtual-scroll-selection\",\n    styleUrls: [\"./filtered-view-table-with-virtual-scroll-selection.component.less\"],\n    templateUrl: \"./filtered-view-table-with-virtual-scroll-selection.component.html\",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithVirtualScrollSelectionDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithVirtualScrollSelectionComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollSelectionDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-filtered-view-table-with-virtual-scroll-selection-table__container {\\n    height: 400px;\\n    border-color: lightgray;\\n    overflow: auto;\\n}\\n\\n.app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container {\\n    height: 300px;\\n}\\n\\n.app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer {\\n    height: 28px;\\n    .setCssVariable(background-color, nui-color-bg-transparent);\\n    .setCssVariable(color, nui-color-text-secondary);\\n}\\n\";","import { Component, Inject, Input, OnInit, Optional, SkipSelf, ViewEncapsulation } from \"@angular/core\";\nimport _set from \"lodash/set\";\n\nimport { DEMO_PATH_TOKEN } from \"../../../../../src/constants/path.constant\";\n\n@Component({\n    selector: \"nui-schematic-docs-example\",\n    templateUrl: \"schematic-docs-example.component.html\",\n    styleUrls: [\"schematic-docs-example.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class SchematicDocsExampleComponent implements OnInit {\n    @Input() exampleFolderName: string;\n    public componentSources: string[];\n    public shouldCodeRender: boolean;\n\n    private fileExtensionsRegex = /.*\\.(ts|html|less)$/;\n    private rawData: any = {};\n\n    private _selectedFile: string;\n    private selectedFileOpen: boolean;\n\n    get selectedFile() {\n        return this._selectedFile;\n    }\n\n    set selectedFile(value: string) {\n        this._selectedFile = value;\n        // TODO Remove when NUI-2704 is finished\n        this.shouldCodeRender = false;\n        setTimeout(() => {\n            this.shouldCodeRender = true;\n        }, 100);\n    }\n\n    constructor(@SkipSelf() @Optional() @Inject(DEMO_PATH_TOKEN) private context: any) {}\n\n    ngOnInit() {\n        this.componentSources = this.getSourcesByFilenamePrefix(this.exampleFolderName);\n    }\n\n    public getSource(fileName: string) {\n        return this.rawData[fileName];\n    }\n\n    public selectFile(name: string) {\n        this.selectedFile = name;\n        this.selectedFileOpen = true;\n    }\n\n    public isSelectedFileOpen(): boolean {\n        return this.selectedFileOpen;\n    }\n\n    public onSelectedFileOpenChange(event: boolean) {\n        this.selectedFileOpen = event;\n    }\n\n    private getSourcesByFilenamePrefix(prefix: string) {\n        const matchingFilePaths = this.context.keys().filter((filePath: string) => {\n            const prefixIndex = filePath.indexOf(prefix);\n            const nextChar = prefixIndex !== -1 ? filePath[prefixIndex + prefix.length] : undefined;\n            return prefixIndex !== -1 && (nextChar === \".\" || nextChar === \"/\");\n        });\n\n        return matchingFilePaths.reduce((dataset: any, fileName: any) => {\n            const fileObj = this.getFileData(fileName);\n            const splitPath = fileName.substr(fileName.indexOf(prefix)).split(\"/\");\n            const pathToSourceCode = [];\n\n            this.rawData[splitPath[splitPath.length - 1]] = fileObj;\n\n            for (let i = splitPath.length; i > 0; i--) {\n                const shifted = splitPath.shift();\n                pathToSourceCode.push(shifted);\n            }\n            return _set(dataset, pathToSourceCode, fileObj);\n        }, {});\n    }\n\n    private getFileData(fileName: string) {\n        let fileContent = \"\";\n        const regExResultArray = this.fileExtensionsRegex.exec(fileName);\n        if (regExResultArray) {\n            fileContent = this.context(fileName).default;\n\n            const extension = <string>fileName.split(\".\").pop();\n            if (extension === \"less\") {\n                fileContent = fileContent.replace(\n                    /@import \\(reference\\) \"([\\w-]+\\/){0,}([\\w-]+)(\\.less)?\"/g,\n                    `@import (reference) \"@nova-ui/bits/sdk/less/$1$2\"`\n                );\n            }\n        }\n\n        return fileContent;\n    }\n\n}\n","<div class=\"d-flex\">\n    <div class=\"p-0 col-4 schematic-docs-example__files\">\n        <h2 class=\"mt-4\">Source files</h2>\n        <div *ngFor=\"let item of componentSources | keyvalue\">\n            <nui-expander [header]=\"item.key\"\n                          icon=\"group\">\n                <nui-recursive-object-view [object]=\"item.value\"\n                                           [objectTemplate]=\"objectTemplate\"\n                                           [notObjectTemplate]=\"notObjectTemplate\">\n                    {{item.key}}\n                </nui-recursive-object-view>\n            </nui-expander>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <h2 class=\"mt-4\">Source code</h2>\n        <nui-expander [disabled]=\"!selectedFile\"\n                      [open]=\"isSelectedFileOpen()\"\n                      (openChange)=\"onSelectedFileOpenChange($event)\">\n            <div nuiExpanderHeader>\n                <h5 class=\"m-0\">\n                    Selected file:\n                    <span class=\"schematic-docs-example__selected-file\">{{ selectedFile ? selectedFile : \"None\" }}</span>\n                </h5>\n            </div>\n            <div class=\"nui-source-inspector-code\">\n                <nui-example-code *ngIf=\"shouldCodeRender\">{{ getSource(selectedFile) }}</nui-example-code>\n            </div>\n        </nui-expander>\n    </div>\n</div>\n\n<h2 class=\"mt-4\">Example</h2>\n<ng-content></ng-content>\n\n<ng-template #objectTemplate\n             let-item=\"item\">\n    <nui-icon icon=\"xml-file\"></nui-icon>\n    {{ item.key }}\n</ng-template>\n\n<ng-template #notObjectTemplate\n             let-key=\"item\">\n    <button nui-button\n            class=\"mw-100\"\n            type=\"button\"\n            displayStyle=\"action\"\n            icon=\"xml-file\"\n            (click)=\"selectFile(key)\">\n        {{ key }}\n    </button>\n</ng-template>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    LocalFilteringDataSource,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport { LOCAL_DATA } from \\\"./filtered-view-with-list-data\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-with-list\\\",\\n    styleUrls: [\\\"./filtered-view-with-list.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-with-list.component.html\\\",\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: LocalFilteringDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewWithListComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n        // here we use ClientSideDataSource since the data we're working with is static (RANDOM_ARRAY)\\n        // if you have a dynamic data source, you need to extend DataSourceService for your custom filtering behavior\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-table-with-pagination-table #child></app-filtered-view-table-with-pagination-table>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n    TemplateRef,\\n} from \\\"@angular/core\\\";\\nimport { DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-custom-data-source-filter-group\\\",\\n    templateUrl: \\\"./custom-data-source-filter-group.component.html\\\",\\n    styleUrls: [\\\"./custom-data-source-filter-group.component.less\\\"],\\n})\\nexport class CustomDataSourceFilterGroupCompositeComponent implements IFilterPub, OnInit {\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n}\\n\";","<nui-schematic-docs-page schematicFolderName=\"filtered-view\">\n    <div schematicSummary>\n        <p>\n            The Filtered View schematic provides the ability to create a generic filtered view that can cover many use cases\n            for filtering a set of data. Its main responsibility is to integrate a filter group panel with a list or table view\n            that displays the filtered data.\n        </p>\n        <h2>Notable Command Line Options</h2>\n        <nui-schematic-cli-option name=\"presentationType\">\n            <p>\n                This string option allows you to select how the filtered data will be presented to the user. The values currently supported\n                for this option are <code>table</code> and <code>list</code>. The default value is <code>list</code>.\n            </p>\n        </nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"selectionMode\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"pagingMode\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"dataSource\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"enableSearch\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"enableSort\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"chips\"></nui-schematic-cli-option>\n    </div>\n    <nui-tab-group schematicExamples>\n        <nui-tab heading=\"List\">\n            <h2>Filtered View with List</h2>\n            <p>\n                This example shows the output of the CLI command without any modifications.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-with-list --presentationType=list</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-with-list\">\n                <app-filtered-view-with-list></app-filtered-view-with-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"List with Pagination\">\n            <h2>List with Pagination</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide\n                <strong>--pagingMode=pagination</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-list-with-pagination\">\n                <app-filtered-view-list-with-pagination></app-filtered-view-list-with-pagination>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"List with Virtual Scroll\">\n            <h2>List with Virtual Scroll</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-virtual-scroll --presentationType=list --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-list-with-virtual-scroll\">\n                <app-filtered-view-list-with-virtual-scroll></app-filtered-view-list-with-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Table\">\n            <h2>Filtered View with Table</h2>\n            <p>\n                This example shows the output of the CLI command shown below.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --name=filtered-view-with-table --p=app <strong>--presentationType=table</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-with-table\">\n                <app-filtered-view-with-table></app-filtered-view-with-table>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Table with Pagination\">\n            <h2>Table with Pagination</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=pagination</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-table-with-pagination\">\n                <app-filtered-view-table-with-pagination></app-filtered-view-table-with-pagination>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Table with Selection\">\n            <h2>Table with Selection</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-selection --presentationType=table --dataSource=serverSide --pagingMode=pagination\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-table-with-selection\">\n                <app-filtered-view-table-with-selection></app-filtered-view-table-with-selection>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Table with Virtual Scroll\" #vs>\n            <h2>Table with Virtual Scroll</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-table-with-virtual-scroll\">\n                <app-filtered-view-table-with-virtual-scroll *ngIf=\"vs.active\"></app-filtered-view-table-with-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Table with Virtual Scroll and Selection\" #vss>\n            <h2>Table with Virtual Scroll and Selection</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-table-with-virtual-scroll-selection\">\n                <app-filtered-view-table-with-virtual-scroll-selection *ngIf=\"vss.active\"></app-filtered-view-table-with-virtual-scroll-selection>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Table with Custom Virtual Scroll\" #cvs>\n            <h2>Table with Custom Virtual Scroll</h2>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\n                <strong>--pagingMode=virtualScroll --virtualScrollStrategy=custom</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-table-with-custom-virtual-scroll\">\n                <app-filtered-view-table-with-custom-virtual-scroll *ngIf=\"cvs.active\"></app-filtered-view-table-with-custom-virtual-scroll>\n            </nui-schematic-docs-example>\n        </nui-tab>\n        <nui-tab heading=\"Tree\" #tree>\n            <h2>Tree</h2>\n            <nui-schematic-docs-example exampleFolderName=\"filtered-view-with-tree\">\n                <app-filtered-view-with-tree *ngIf=\"tree.active\"></app-filtered-view-with-tree>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n","/*\nCLI commands used to generate the current examples:\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app\n --name=filtered-view-with-list --presentationType=list --dataSource=none --pagingMode=pagination --selectionMode=none\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app\n --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide --pagingMode=pagination --selectionMode=none\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n --name=filtered-view-list-with-virtual-scroll --presentationType=list --dataSource=serverSide --selectionMode=none\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=pagination\n --name=filtered-view-with-table --presentationType=table --dataSource=none --enableSort=false --enableSearch=false --selectionMode=none\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=pagination \\\n --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false --selectionMode=none\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --presentationType=table\n--name=filtered-view-table-with-selection --dataSource=serverSide --pagingMode=pagination --selectionMode=multi\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false --selectionMode=none\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n--name=filtered-view-table-with-virtual-scroll-selection --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false\n--selectionMode=multi\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n--name=filtered-view-table-with-virtual-scroll-selection --presentationType=table --dataSource=serverSide --enableSort=false --enableSearch=false\n--selectionMode=multi\n\n\nng g \"./schematics/src/collection.json\":filtered-view --lint-fix --force --path=demo/src/schematics/filtered-view --prefix=app --pagingMode=virtualScroll\n --name=filtered-view-table-with-custom-virtual-scroll --presentationType=table --dataSource=serverSide  --enableSort=false --enableSearch=false\n --virtualScrollStrategy=custom --selectionMode=none\n*/\nimport { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"schematics-docs-example\",\n    templateUrl: \"./filtered-view-schematic.example.component.html\",\n})\nexport class FilteredViewSchematicExampleComponent {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTableWithCustomVirtualScrollComponent } from \"./filtered-view-table-with-custom-virtual-scroll.component\";\nimport { FilteredViewTableComponent } from \"./filtered-view-table/filtered-view-table.component\";\n\n@NgModule({\n    imports: [\n        ScrollingModule,\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithCustomVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithCustomVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithCustomVirtualScrollModule {}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-schematic-docs-command\",\n    templateUrl: \"./schematic-docs-command.component.html\",\n})\nexport class SchematicsDocsCommandComponent {}\n","<nui-message [allowDismiss]=\"false\" type=\"info\">\n    This code has been generated using the following command:\n    <code>\n        <ng-content></ng-content>\n    </code>\n    <ng-content select=\"[appendedText]\"></ng-content>\n</nui-message>\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { CustomDataSourceFilterGroupCompositeComponent } from \"../custom-data-source-filter-group.component\";\n\n@Component({\n    selector: \"app-custom-data-source-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\n\nexport class CustomDataSourceFilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(CustomDataSourceFilterGroupCompositeComponent) filterGroups: QueryList<CustomDataSourceFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomDataSourceFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"nui-filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"nui-filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"nui-filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NuiRepeatModule } from \"@nova-ui/bits\";\n\nimport { ItemPickerCompositeComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiRepeatModule,\n    ],\n    declarations: [\n        ItemPickerCompositeComponent,\n    ],\n    exports: [\n        ItemPickerCompositeComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerCompositeModule {\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isObjectType, isInterfaceType, isInputObjectType } from \"../../type/definition.mjs\";\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nexport function UniqueFieldDefinitionNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    var typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var fieldNodes = (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n    var fieldNames = knownFieldNames[typeName];\n\n    for (var _i2 = 0; _i2 < fieldNodes.length; _i2++) {\n      var fieldDef = fieldNodes[_i2];\n      var fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(new GraphQLError(\"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\"), fieldDef.name));\n      } else if (fieldNames[fieldName]) {\n        context.reportError(new GraphQLError(\"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" can only be defined once.\"), [fieldNames[fieldName], fieldDef.name]));\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n","<div nui-busy [busy]=\"isBusy\">\n    <nui-spinner size=\"large\" i18n-message message=\"Loading...\"></nui-spinner>\n    <div class=\"d-flex flex-row\">\n        <nui-sorter class=\"app-virtual-scroll-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-virtual-scroll-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"!isBusy && (listItems$ | async).length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-virtual-scroll-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"listItems$ | async\"\n                    virtualScroll=\"true\"\n                    itemSize=\"30\">\n        </nui-repeat>\n    </div>\n\n    <footer class=\"app-virtual-scroll-list-scrolling-footer\">\n        <div class=\"d-flex justify-content-center align-items-center\">\n            <div class=\"p-1 d-flex\">\n                <div class=\"d-flex pt-3 pb-3\" i18n>\n                    Showing {{(listItems$ | async).length}} of {{ totalItems }}.\n                </div>\n                <div class=\"d-flex pt-3 pb-3\">\n                    <ng-container i18n *ngIf=\"(listItems$ | async).length !== totalItems; else endOfData\">, scroll down for more.</ng-container>\n                    <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                </div>\n            </div>\n        </div>\n    </footer>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport {\n    BehaviorSubject,\n    Subject,\n} from \"rxjs\";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    IServer,\n    IServerFilters,\n} from \"./types\";\nimport {\n    RESULTS_PER_PAGE,\n} from \"./virtual-scroll-list-data\";\nimport { VirtualScrollListDataSource } from \"./virtual-scroll-list-data-source.service\";\n\n@Component({\n    selector: \"app-virtual-scroll-list\",\n    templateUrl: \"./virtual-scroll-list.component.html\",\n    styleUrls: [\"./virtual-scroll-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: VirtualScrollListDataSource,\n        },\n    ],\n})\nexport class VirtualScrollListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: VirtualScrollListDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.repeat.viewportRef)\n\n            // Note: Initializing the stream with the desired page size, based on which\n            // ViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({pageSize: RESULTS_PER_PAGE})\n                .pipe(\n                    // Since we know the total number of items we can stop the stream when dataset end is reached\n                    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                    filter(() => {\n                        const items = this.listItems$.getValue();\n                        return !items.length || items.length < this.totalItems;\n                    }),\n                    tap(() => this.applyFilters(false)),\n                    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                    switchMap(() => this.dataSource.outputsSubject.pipe(\n                        tap((data: IFilteringOutputs) => {\n                            // update the list of items to be rendered\n                            const items = data.repeat?.itemsSource || [];\n\n                            // after receiving data we need to append it to our previous fetched results\n                            this.listItems$.next(this.listItems$.getValue().concat(items));\n\n                            this.totalItems = data.paginator?.total || 0;\n\n                            this.changeDetection.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.destroy$)\n            ).subscribe();\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.listItems$.next([]);\n            this.changeDetection.detectChanges();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n","import { SYMBOL_ITERATOR } from \"./symbols.mjs\";\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound]\nvar arrayFrom = Array.from || function (obj, mapFn, thisArg) {\n  if (obj == null) {\n    throw new TypeError('Array.from requires an array-like object - not null or undefined');\n  } // Is Iterable?\n\n\n  var iteratorMethod = obj[SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    var iterator = iteratorMethod.call(obj);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn.call(thisArg, step.value, i)); // Infinite Iterators could cause forEach to run forever.\n      // After a very large number of iterations, produce an error.\n      // istanbul ignore if (Too big to actually test)\n\n      if (i > 9999999) {\n        throw new TypeError('Near-infinite iteration.');\n      }\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = obj.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (Object.prototype.hasOwnProperty.call(obj, _i)) {\n        _result.push(mapFn.call(thisArg, obj[_i], _i));\n      }\n    }\n\n    return _result;\n  }\n\n  return [];\n};\n\nexport default arrayFrom;\n","var _defKindToExtKind;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isTypeDefinitionNode } from \"../../language/predicates.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from \"../../type/definition.mjs\";\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  var schema = context.getSchema();\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n\n  function checkExtension(node) {\n    var typeName = node.name.value;\n    var defNode = definedTypes[typeName];\n    var existingType = schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    var expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        var kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(new GraphQLError(\"Cannot extend non-\".concat(kindStr, \" type \\\"\").concat(typeName, \"\\\".\"), defNode ? [defNode, node] : node));\n      }\n    } else {\n      var allTypeNames = Object.keys(definedTypes);\n\n      if (schema) {\n        allTypeNames = allTypeNames.concat(Object.keys(schema.getTypeMap()));\n      }\n\n      var suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(new GraphQLError(\"Cannot extend type \\\"\".concat(typeName, \"\\\" because it is not defined.\") + didYouMean(suggestedTypes), node.name));\n    }\n  }\n}\nvar defKindToExtKind = (_defKindToExtKind = {}, _defineProperty(_defKindToExtKind, Kind.SCALAR_TYPE_DEFINITION, Kind.SCALAR_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.OBJECT_TYPE_DEFINITION, Kind.OBJECT_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INTERFACE_TYPE_DEFINITION, Kind.INTERFACE_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.UNION_TYPE_DEFINITION, Kind.UNION_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.ENUM_TYPE_DEFINITION, Kind.ENUM_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INPUT_OBJECT_TYPE_DEFINITION, Kind.INPUT_OBJECT_TYPE_EXTENSION), _defKindToExtKind);\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected kind: ' + inspect(kind));\n}\n","export default \"import { IServer, ServerStatus } from \\\"./types\\\";\\n\\n// number of results to be displayed in the table\\nexport const RESULTS_PER_PAGE = 20;\\n\\nexport const LOCAL_DATA: IServer[] = [\\n    {\\n        name: \\\"FOCUS-SVR-12345\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-ASD123\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-DSA331\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-JKS212\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"ABERN-SVR-ATQU9404\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-433AAD\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-098331\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-GHJ882\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LLK001\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-KKJ998\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-RRR001\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LKJF12\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-882JJS\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-7733KK\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-JSHNSA\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-KKAEQWE\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-123KKNPQ\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-RRF231\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n];\\n\";","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-list-with-virtual-scroll-list #child></app-filtered-view-list-with-virtual-scroll-list>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewListWithVirtualScrollDataSource,\n} from \"./filtered-view-list-with-virtual-scroll-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-list-with-virtual-scroll\",\n    styleUrls: [\"./filtered-view-list-with-virtual-scroll.component.less\"],\n    templateUrl: \"./filtered-view-list-with-virtual-scroll.component.html\",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewListWithVirtualScrollDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListWithVirtualScrollComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithVirtualScrollDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 13) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 14) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 15) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(11) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 12) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 1) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 2) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 4) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 5) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 6) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 7) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 8) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 9) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n//# sourceMappingURL=bundle.esm.js.map\n","import devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nexport function formatError(error) {\n  var _error$message;\n\n  error || devAssert(0, 'Received null or undefined error.');\n  var message = (_error$message = error.message) !== null && _error$message !== void 0 ? _error$message : 'An unknown error occurred.';\n  var locations = error.locations;\n  var path = error.path;\n  var extensions = error.extensions;\n  return extensions ? {\n    message: message,\n    locations: locations,\n    path: path,\n    extensions: extensions\n  } : {\n    message: message,\n    locations: locations,\n    path: path\n  };\n}\n/**\n * @see https://github.com/graphql/graphql-spec/blob/master/spec/Section%207%20--%20Response.md#errors\n */\n","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","<h1>\n    bits schematics\n</h1>\n<div>\n    All schematics work in similar way. To use them, you can call it by first doing <code>ng add @nova-ui/bits</code>\n    then <code>ng g @nova-ui/bits:SCHEMATICNAME</code> and add option, available for each schematic.\n    <b>Note:</b> for most of the schematics, name can be set without specifying option, just type it as the first argument in command line.\n</div>\n\n<div>\n    <h2>Ng-add schematic guide</h2>\n    <p>Bootstraps nova-composites for consumption in your project. Adds it package.json and does <code>npm install</code>.</p>\n    <div *ngFor=\"let key of objectKeys(addJsonScheme)\">\n        <nui-expander [header]=\"key\">\n            <div><i>Description: </i><span>{{addJsonScheme[key].description}}</span></div>\n            <div><i>Type: </i><span>{{addJsonScheme[key].type}}</span></div>\n            <div *ngIf=\"addJsonScheme[key].enum\"><i>Enum: </i><span>{{addJsonScheme[key].enum}}</span></div>\n            <div *ngIf=\"addJsonScheme[key].alias\"><i>Alias: </i><span>{{addJsonScheme[key].alias}}</span></div>\n            <div *ngIf=\"addJsonScheme[key].default\"><i>Default: </i><span>{{addJsonScheme[key].default}}</span></div>\n        </nui-expander>\n    </div>\n</div>\n<div>\n    <h2>Layout schematic guide</h2>\n    <p>Use <code>ng g @nova-ui/bits:layout</code> to generate basic layout example that can be used in you project out of the box.</p>\n    <p>Use the following options in the command line to modify schematic's execution:</p>\n    <div *ngFor=\"let key of objectKeys(layoutJsonScheme)\">\n        <nui-expander [header]=\"key\">\n            <div><i>Description: </i><span>{{layoutJsonScheme[key].description}}</span></div>\n            <div><i>Type: </i><span>{{layoutJsonScheme[key].type}}</span></div>\n            <div *ngIf=\"layoutJsonScheme[key].enum\"><i>Enum: </i><span>{{layoutJsonScheme[key].enum}}</span></div>\n            <div *ngIf=\"layoutJsonScheme[key].alias\"><i>Alias: </i><span>{{layoutJsonScheme[key].alias}}</span></div>\n            <div *ngIf=\"layoutJsonScheme[key].default\"><i>Default: </i><span>{{layoutJsonScheme[key].default}}</span></div>\n        </nui-expander>\n    </div>\n</div>\n<div>\n    <h2>Table schematic guide</h2>\n    <p>In your command line, type <code>ng g @nova-ui/bits:table</code>to generate table.</p>\n    <div *ngFor=\"let key of objectKeys(tableJsonScheme)\">\n        <nui-expander [header]=\"key\">\n            <div><i>Description: </i><span>{{tableJsonScheme[key].description}}</span></div>\n            <div><i>Type: </i><span>{{tableJsonScheme[key].type}}</span></div>\n            <div *ngIf=\"tableJsonScheme[key].enum\"><i>Enum: </i><span>{{tableJsonScheme[key].enum}}</span></div>\n            <div *ngIf=\"tableJsonScheme[key].alias\"><i>Alias: </i><span>{{tableJsonScheme[key].alias}}</span></div>\n            <div *ngIf=\"tableJsonScheme[key].default\"><i>Default: </i><span>{{tableJsonScheme[key].default}}</span></div>\n        </nui-expander>\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\nconst layoutSchema = require(\"../../../schematics/src/layout/schema.json\");\nconst tableSchema = require(\"../../../schematics/src/table/schema.json\");\nconst addSchema = require(\"../../../schematics/src/ng-add/schema.json\");\n\n@Component({\n    selector: \"schematics-docs\",\n    templateUrl: \"./schematics-docs.component.html\",\n})\nexport class SchematicsDocsComponent {\n    public layoutJsonScheme: any = {};\n    public tableJsonScheme: any = {};\n    public addJsonScheme: any = {};\n    objectKeys = Object.keys;\n\n    constructor() {\n        this.schemaObjectFiller(layoutSchema.properties, \"layout\");\n        this.schemaObjectFiller(tableSchema.properties, \"table\");\n        this.schemaObjectFiller(addSchema.properties, \"add\");\n    }\n\n    private schemaObjectFiller(props: any, name: string) {\n        const object = (this as any)[`${name}JsonScheme`];\n        for (const prop of this.objectKeys(props)) {\n            object[prop] = {\n                \"description\": props[prop].description,\n                \"type\": props[prop].type,\n            };\n            if (props[prop].enum) { object[prop].enum = props[prop].enum; }\n            if (props[prop].default) { object[prop].default = props[prop].default; }\n            if (props[prop].alias) { object[prop].alias = props[prop].alias; }\n        }\n    }\n}\n","export default \"/*\\nCLI commands used to generate the current examples:\\n\\nng g \\\"./schematics/src/collection.json\\\":list --force --path=demo/src/schematics/list --prefix=app\\n --name=basic-list --selectionMode=none --dataSource=none --pagingMode=pagination\\n\\nng g \\\"./schematics/src/collection.json\\\":list --force --path=demo/src/schematics/list --prefix=app\\n --name=selection-list --selectionMode=multi --dataSource=none --pagingMode=pagination\\n\\nng g \\\"./schematics/src/collection.json\\\":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\\n--name=search-list --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-search=true --enable-sort=false\\n\\nng g \\\"./schematics/src/collection.json\\\":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\\n --name=virtual-scroll-list --selectionMode=none --dataSource=serverSide --pagingMode=virtualScroll\\n\\nng g \\\"./schematics/src/collection.json\\\":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\\n --name=paginated-list --selectionMode=none --dataSource=serverSide --pagingMode=pagination\\n*/\\nimport { Component } from \\\"@angular/core\\\";\\n\\nimport { SchematicsDocsComponentType } from \\\"../utils/schematic-docs-cli-option/schematic-docs-cli-option.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-list-schematics-docs-example\\\",\\n    templateUrl: \\\"list-schematic.example.component.html\\\",\\n    providers: [{provide: SchematicsDocsComponentType, useValue: SchematicsDocsComponentType.list }],\\n})\\nexport class ListSchematicExampleComponent {\\n}\\n\";","<h2>Selection result</h2>\n<div class=\"flex-row-container\">\n    <span class=\"flex-independent-row-item\">{{selection | json}}</span>\n</div>\n<div class=\"app-filtered-view-table-with-virtual-scroll-selection-table__container\">\n    <cdk-virtual-scroll-viewport class=\"app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-container\" tableStickyHeader #viewportRef [itemSize]=\"rowHeight\">\n    <table nui-table [dataSource]=\"items | sliceRange: viewportRef.getRenderedRange()\"\n           [(selection)]=\"selection\"\n           (selectionChange)=\"onSelectionChanged($event)\"\n           [selectable]=\"true\"\n           [trackBy]=\"trackBy\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]=\"displayedColumns\"\n                         [cdkVirtualForOf]=\"items\">\n                <tr nui-row  [rowObject]=\"context\"></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class=\"app-filtered-view-table-with-virtual-scroll-selection-table-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                    <div class=\"d-flex pt-3 pb-3\">\n                        <ng-container i18n *ngIf=\"items.length !== totalItems; else endOfData\">, scroll down for more.</ng-container>\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n","import { CdkVirtualScrollViewport } from \"@angular/cdk/scrolling\";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    ISelection,\n    nameof,\n    TableComponent,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-table-with-virtual-scroll-selection-data\";\nimport { FilteredViewTableWithVirtualScrollSelectionDataSource } from \"../filtered-view-table-with-virtual-scroll-selection-data-source.service\";\nimport { IServer, IServerFilters } from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-virtual-scroll-selection-table\",\n    templateUrl: \"./filtered-view-table.component.html\",\n    styleUrls: [\"./filtered-view-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    // row selection\n    public selectedItems: IServer[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [\"ABERN-SVR-ATQU9404\"],\n        exclude: [],\n    };\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollSelectionDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: {componentInstance: this.viewportManager},\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => !this.items.length || this.items.length < this.totalItems),\n                tap(() => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                switchMap(() => this.dataSource.outputsSubject.pipe(\n                    tap((data: IFilteringOutputs) => {\n                        // update the list of items to be rendered\n                        const items = data.repeat?.itemsSource || [];\n\n                        // after receiving data we need to append it to our previous fetched results\n                        this.items = this.items.concat(items);\n                        this.totalItems = data.paginator?.total || 0;\n                        this.changeDetection.detectChanges();\n                    })\n                )\n            ),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        // do something with the selection\n\n        // make component aware of the new selection value\n        // so it's displayed correctly\n        this.changeDetection.detectChanges();\n    }\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackBy(index: number, item: IServer) {\n        return item.name;\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\nimport { isType, isRequiredArgument } from \"../../type/definition.mjs\";\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return _objectSpread(_objectSpread({}, ProvidedRequiredArgumentsOnDirectivesRule(context)), {}, {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n        var argNodes = (_fieldNode$arguments = fieldNode.arguments) !== null && _fieldNode$arguments !== void 0 ? _fieldNode$arguments : [];\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && isRequiredArgument(argDef)) {\n            var argTypeStr = inspect(argDef.type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), fieldNode));\n          }\n        }\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = keyMap(directive.args.filter(isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = keyMap(argNodes.filter(isRequiredArgumentNode), function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n          var _argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n\n          var argNodeMap = keyMap(_argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              var argTypeStr = isType(argType) ? inspect(argType) : print(argType);\n              context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins.less\\\";\\n\\n.nui-filter-group-composite {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nexport default isInteger;\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-filtered-view-list-with-pagination-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-filtered-view-list-with-pagination-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-list-with-pagination-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-list-with-pagination-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-list-with-pagination-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\";","export default \"<div class=\\\"app-table-with-pagination__container\\\">\\n    <div class=\\\"app-table-with-pagination-searchable__search\\\">\\n        <nui-search [value]=\\\"searchTerm\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onSearchCancel()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <table nui-table [dataSource]=\\\"items\\\"\\n           [sortable]=\\\"true\\\"\\n           [sortedColumn]=\\\"sortedColumn\\\"\\n           (sortOrderChanged)=\\\"sortData($event)\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n\\n    <footer class=\\\"app-table-with-pagination-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","import { Component, Inject, Injectable, OnDestroy, ViewChild } from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    IFilters,\n    LocalFilteringDataSource,\n    RepeatComponent\n} from \"@nova-ui/bits\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { Subject, Subscription } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\nimport { ExampleItem, ICustomDSFilteredData, IFilterGroupItem } from \"./custom-data-source-filter-group/public-api\";\n\nconst RANDOM_ARRAY = [\n    {color: \"regular-azure\", status: \"Critical\"},\n    {color: \"regular-black\", status: \"Warning\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-yellow\", status: \"Critical\"},\n    {color: \"regular-yellow\", status: \"Warning\"},\n    {color: \"regular-black\", status: \"Up\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-azure\", status: \"Up\"},\n    {color: \"regular-blue\", status: \"Up\"},\n    {color: \"regular-azure\", status: \"Critical\"},\n];\n\nconst filterGroupItems: IFilterGroupItem[] = [\n    {\n        id: \"color\",\n        title: \"Color\",\n        expanded: true,\n        allFilterOptions: [\n            {\n                value: \"azure\",\n                displayValue: \"Azure\",\n                count: 3,\n            }, {\n                value: \"black\",\n                displayValue: \"Black\",\n                count: 2,\n            }, {\n                value: \"blue\",\n                displayValue: \"Blue\",\n                count: 3,\n            }, {\n                value: \"yellow\",\n                displayValue: \"Yellow\",\n                count: 2,\n            },\n        ],\n        selectedFilterValues: [],\n    }, {\n        id: \"status\",\n        title: \"Status\",\n        allFilterOptions: [\n            {\n                value: \"warning\",\n                displayValue: \"Warning\",\n                count: 2,\n            }, {\n                value: \"critical\",\n                displayValue: \"Critical\",\n                count: 2,\n            },\n            {\n                value: \"up\",\n                displayValue: \"Up\",\n                count: 5,\n            },\n        ],\n        selectedFilterValues: [],\n    },\n    {\n        id: \"vendor\",\n        title: \"Vendors\",\n        allFilterOptions: [],\n        selectedFilterValues: [],\n    },\n];\n\n/** @ignore */\n@Injectable()\nexport class FakeHTTPService {\n    public receiveFilteredDataSubject: Subject<ICustomDSFilteredData> = new Subject<ICustomDSFilteredData>();\n    public getFilteredDataSubject: Subject<IFilters> = new Subject<IFilters>();\n\n    constructor() {}\n\n    public async getData(filters: IFilters): Promise<ICustomDSFilteredData> {\n        this.getFilteredDataSubject.next(filters);\n\n        return new Promise((resolve) => {\n            this.receiveFilteredDataSubject.subscribe((filteredData: ICustomDSFilteredData) => {\n                resolve(filteredData);\n            });\n        });\n    }\n\n    public receiveFilteredData(filteredData: ICustomDSFilteredData): void {\n        this.receiveFilteredDataSubject.next(filteredData);\n    }\n}\n\n/** @ignore */\n@Component({\n    selector: \"nui-fake-filtering-datasource-backend-component\",\n    template: ``,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: LocalFilteringDataSource,\n        },\n    ],\n})\n// tslint:disable-next-line:component-class-suffix\nexport class FakeServer implements OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = filterGroupItems;\n    public filteringState: IFilteringOutputs = {\n        repeat: {\n            itemsSource: [],\n        },\n        color: [],\n        status: [],\n    };\n\n    private filterGroupSubscriptions: Array<Subscription> = [];\n\n    @ViewChild(RepeatComponent) filteringRepeat: RepeatComponent;\n\n    constructor(@Inject(DataSourceService) private dataSourceService: DataSourceService<ExampleItem>,\n                @Inject(FakeHTTPService) private httpService: FakeHTTPService) {\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\n\n        this.filterGroupSubscriptions.push(\n            this.dataSourceService.outputsSubject.subscribe((filteringState: IFilteringOutputs) => {\n                this.filteringState = filteringState;\n                this.recalculateCounts(filteringState);\n            })\n        );\n\n        this.filterGroupSubscriptions.push(\n            this.httpService.getFilteredDataSubject\n                .pipe(delay(500))\n                .subscribe(async (filters: IFilters) => {\n                    this.filteringState = await this.dataSourceService.getFilteredData(filters);\n                    this.recalculateCounts(this.filteringState);\n                    this.sendFilteredData();\n                })\n        );\n    }\n\n    private sendFilteredData(): void {\n        this.httpService.receiveFilteredData({\n            filterGroupItems: this.filterGroupItems,\n            filteringState: this.filteringState,\n        });\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs): void {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n\n                if (!_isEmpty(counts)) {\n                    filterOption.count = counts[filterOption.value];\n                }\n            });\n        });\n    }\n\n    public hasItems(): boolean {\n        return !_isEmpty(_get(this, \"filteringState.repeat.itemsSource\"));\n    }\n\n    ngOnDestroy() {\n        this.filterGroupSubscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","import { Kind } from \"../language/kinds.mjs\";\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-virtual-scroll-data\";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE))\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithVirtualScrollDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","import { Source, isSource } from \"../language/source.mjs\";\nimport { TokenKind } from \"../language/tokenKind.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"../language/lexer.mjs\";\nimport { dedentBlockStringValue, getBlockStringIndentation } from \"../language/blockString.mjs\";\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n *\n * Becomes:\n *\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n *\n * SDL example:\n *\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n *\n * Becomes:\n *\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n */\n\nexport function stripIgnoredCharacters(source) {\n  var sourceObj = isSource(source) ? source : new Source(source);\n  var body = sourceObj.body;\n  var lexer = new Lexer(sourceObj);\n  var strippedBody = '';\n  var wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== TokenKind.EOF) {\n    var currentToken = lexer.token;\n    var tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    var isNonPunctuator = !isPunctuatorTokenKind(currentToken.kind);\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n\n    var tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === TokenKind.BLOCK_STRING) {\n      strippedBody += dedentBlockString(tokenBody);\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n\nfunction dedentBlockString(blockStr) {\n  // skip leading and trailing triple quotations\n  var rawStr = blockStr.slice(3, -3);\n  var body = dedentBlockStringValue(rawStr);\n\n  if (getBlockStringIndentation(body) > 0) {\n    body = '\\n' + body;\n  }\n\n  var lastChar = body[body.length - 1];\n  var hasTrailingQuote = lastChar === '\"' && body.slice(-4) !== '\\\\\"\"\"';\n\n  if (hasTrailingQuote || lastChar === '\\\\') {\n    body += '\\n';\n  }\n\n  return '\"\"\"' + body + '\"\"\"';\n}\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nexport function LoneAnonymousOperationRule(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError('This anonymous operation must be the only defined operation.', node));\n      }\n    }\n  };\n}\n","export default \"<div class=\\\"nui-filter-group-composite-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"nui-filter-group-composite-dialog__body\\\">\\n        <nui-item-picker-composite\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></nui-item-picker-composite>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","import naturalCompare from \"./naturalCompare.mjs\";\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport default function suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var lexicalDistance = new LexicalDistance(input);\n  var threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (var _i2 = 0; _i2 < options.length; _i2++) {\n    var option = options[_i2];\n    var distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    var distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nvar LexicalDistance = /*#__PURE__*/function () {\n  function LexicalDistance(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0)];\n  }\n\n  var _proto = LexicalDistance.prototype;\n\n  _proto.measure = function measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    var optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    var a = stringToArray(optionLowerCase);\n    var b = this._inputArray;\n\n    if (a.length < b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var aLength = a.length;\n    var bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    var rows = this._rows;\n\n    for (var j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (var i = 1; i <= aLength; i++) {\n      var upRow = rows[(i - 1) % 3];\n      var currentRow = rows[i % 3];\n      var smallestCell = currentRow[0] = i;\n\n      for (var _j = 1; _j <= bLength; _j++) {\n        var cost = a[i - 1] === b[_j - 1] ? 0 : 1;\n        var currentCell = Math.min(upRow[_j] + 1, // delete\n        currentRow[_j - 1] + 1, // insert\n        upRow[_j - 1] + cost // substitute\n        );\n\n        if (i > 1 && _j > 1 && a[i - 1] === b[_j - 2] && a[i - 2] === b[_j - 1]) {\n          // transposition\n          var doubleDiagonalCell = rows[(i - 2) % 3][_j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[_j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    var distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  };\n\n  return LexicalDistance;\n}();\n\nfunction stringToArray(str) {\n  var strLength = str.length;\n  var array = new Array(strLength);\n\n  for (var i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { parseValue } from \"../language/parser.mjs\";\nimport { GraphQLSchema } from \"../type/schema.mjs\";\nimport { GraphQLDirective } from \"../type/directives.mjs\";\nimport { specifiedScalarTypes } from \"../type/scalars.mjs\";\nimport { introspectionTypes, TypeKind } from \"../type/introspection.mjs\";\nimport { isInputType, isOutputType, GraphQLList, GraphQLNonNull, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, assertNullableType, assertObjectType, assertInterfaceType } from \"../type/definition.mjs\";\nimport { valueFromAST } from \"./valueFromAST.mjs\";\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  isObjectLike(introspection) && isObjectLike(introspection.__schema) || devAssert(0, \"Invalid or incomplete introspection result. Ensure that you are passing \\\"data\\\" property of introspection response and no \\\"errors\\\" was returned alongside: \".concat(inspect(introspection), \".\")); // Get the schema from the introspection result.\n\n  var schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  var typeMap = keyValMap(schemaIntrospection.types, function (typeIntrospection) {\n    return typeIntrospection.name;\n  }, function (typeIntrospection) {\n    return buildType(typeIntrospection);\n  }); // Include standard types only if they are used.\n\n  for (var _i2 = 0, _ref2 = [].concat(specifiedScalarTypes, introspectionTypes); _i2 < _ref2.length; _i2++) {\n    var stdType = _ref2[_i2];\n\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n\n  var queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: objectValues(typeMap),\n    directives: directives,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      var nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    var typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(\"Unknown type reference: \".concat(inspect(typeRef), \".\"));\n    }\n\n    var type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\"Invalid or incomplete schema, unknown type: \".concat(typeName, \". Ensure that a full introspection query is used in order to build a client schema.\"));\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n\n  function buildType(type) {\n    if (type != null && type.name != null && type.kind != null) {\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    var typeStr = inspect(type);\n    throw new Error(\"Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: \".concat(typeStr, \".\"));\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByUrl: scalarIntrospection.specifiedByUrl\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (implementingIntrospection.interfaces === null && implementingIntrospection.kind === TypeKind.INTERFACE) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      var implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\"Introspection result missing interfaces: \".concat(implementingIntrospectionStr, \".\"));\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: function interfaces() {\n        return buildImplementationsList(objectIntrospection);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: function interfaces() {\n        return buildImplementationsList(interfaceIntrospection);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      }\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      var unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\"Introspection result missing possibleTypes: \".concat(unionIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: function types() {\n        return unionIntrospection.possibleTypes.map(getObjectType);\n      }\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      var enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\"Introspection result missing enumValues: \".concat(enumIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      var inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\"Introspection result missing inputFields: \".concat(inputObjectIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\"Introspection result missing fields: \".concat(inspect(typeIntrospection), \".\"));\n    }\n\n    return keyValMap(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, buildField);\n  }\n\n  function buildField(fieldIntrospection) {\n    var type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      var typeStr = inspect(type);\n      throw new Error(\"Introspection must provide output type for fields, but received: \".concat(typeStr, \".\"));\n    }\n\n    if (!fieldIntrospection.args) {\n      var fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\"Introspection result missing field args: \".concat(fieldIntrospectionStr, \".\"));\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type: type,\n      args: buildInputValueDefMap(fieldIntrospection.args)\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      var typeStr = inspect(type);\n      throw new Error(\"Introspection must provide input type for arguments, but received: \".concat(typeStr, \".\"));\n    }\n\n    var defaultValue = inputValueIntrospection.defaultValue != null ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      var directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\"Introspection result missing directive args: \".concat(directiveIntrospectionStr, \".\"));\n    }\n\n    if (!directiveIntrospection.locations) {\n      var _directiveIntrospectionStr = inspect(directiveIntrospection);\n\n      throw new Error(\"Introspection result missing directive locations: \".concat(_directiveIntrospectionStr, \".\"));\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class PaginatedListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value ?? { start : 0, end: 0};\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start))\n\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = PaginatedListDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-filtered-view-table-with-selection-table__container {\\n    overflow: auto;\\n}\\n\\n.app-filtered-view-table-with-selection-table-searchable__search {\\n    max-width: 350px;\\n    margin-bottom: @nui-space-xs;\\n    margin-left: auto;\\n}\\n\\n.app-filtered-view-table-with-selection-table-scrolling-footer {\\n    height: 28px;\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    LocalFilteringDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _get from \\\"lodash/get\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\ninterface ExampleItem {\\n    color: string;\\n    status: string;\\n}\\n\\ninterface CustomTemplateFilterGroupOption extends IFilterGroupOption {\\n    icon: string;\\n}\\n\\ninterface CustomTemplateFilterGroupItem extends IFilterGroupItem {\\n    count: number;\\n    allFilterOptions: CustomTemplateFilterGroupOption[];\\n}\\n\\nconst RANDOM_ARRAY = [\\n    {color: \\\"regular-azure\\\", status: \\\"Critical\\\"},\\n    {color: \\\"regular-black\\\", status: \\\"Warning\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-yellow\\\", status: \\\"Critical\\\"},\\n    {color: \\\"regular-yellow\\\", status: \\\"Warning\\\"},\\n    {color: \\\"regular-black\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-azure\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-blue\\\", status: \\\"Up\\\"},\\n    {color: \\\"regular-azure\\\", status: \\\"Critical\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"app-custom-template-filter-group-composite-example\\\",\\n    templateUrl: \\\"custom-template-filter-group.example.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: LocalFilteringDataSource,\\n    }],\\n})\\nexport class CustomTemplateFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: CustomTemplateFilterGroupItem[] = [\\n        {\\n            id: \\\"color\\\",\\n            title: \\\"Color\\\",\\n            count: 4,\\n            allFilterOptions: [\\n                {\\n                    icon: \\\"copy\\\",\\n                    value: \\\"azure\\\",\\n                    displayValue: \\\"Azure\\\",\\n                }, {\\n                    icon: \\\"clock\\\",\\n                    value: \\\"black\\\",\\n                    displayValue: \\\"Black\\\",\\n                }, {\\n                    icon: \\\"status_up\\\",\\n                    value: \\\"blue\\\",\\n                    displayValue: \\\"Blue\\\",\\n                }, {\\n                    icon: \\\"signal-0\\\",\\n                    value: \\\"yellow\\\",\\n                    displayValue: \\\"Yellow\\\",\\n                },\\n            ],\\n            selectedFilterValues: [\\\"azure\\\"],\\n        }, {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            count: 3,\\n            allFilterOptions: [\\n                {\\n                    icon: \\\"status_warning\\\",\\n                    value: \\\"warning\\\",\\n                    displayValue: \\\"Warning\\\",\\n                }, {\\n                    icon: \\\"status_critical\\\",\\n                    value: \\\"critical\\\",\\n                    displayValue: \\\"Critical\\\",\\n                },\\n                {\\n                    icon: \\\"status_up\\\",\\n                    value: \\\"up\\\",\\n                    displayValue: \\\"Up\\\",\\n                },\\n            ],\\n            selectedFilterValues: [\\\"critical\\\"],\\n        },\\n    ];\\n\\n    public filteringState: INovaFilteringOutputs = {\\n        repeat: {\\n            itemsSource: [],\\n        },\\n        color: [],\\n        status: [],\\n    };\\n\\n    private outputsSubscription: Subscription;\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>) {\\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.filteringState = data;\\n            // get counts of filters\\n            this.recalculateCounts(data);\\n        });\\n        this.dataSourceService.applyFilters();\\n    }\\n\\n    public changeFilters(event: IFilterGroupItem) {\\n        this.dataSourceService.applyFilters();\\n    }\\n\\n    public hasItems(): boolean {\\n        return !_isEmpty(_get(this, \\\"filteringState.repeat.itemsSource\\\"));\\n    }\\n\\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value];\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        if (this.outputsSubscription) {\\n            this.outputsSubscription.unsubscribe();\\n        }\\n    }\\n}\\n\";","/**\n * Memoizes the provided three-argument function.\n */\nexport default function memoize3(fn) {\n  var cache0;\n  return function memoized(a1, a2, a3) {\n    if (!cache0) {\n      cache0 = new WeakMap();\n    }\n\n    var cache1 = cache0.get(a1);\n    var cache2;\n\n    if (cache1) {\n      cache2 = cache1.get(a2);\n\n      if (cache2) {\n        var cachedValue = cache2.get(a3);\n\n        if (cachedValue !== undefined) {\n          return cachedValue;\n        }\n      }\n    } else {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    if (!cache2) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    var newValue = fn(a1, a2, a3);\n    cache2.set(a3, newValue);\n    return newValue;\n  };\n}\n","/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n *     import { parse } from 'graphql';\n *     import { parse } from 'graphql/language';\n */\n// The GraphQL.js version info.\nexport { version, versionInfo } from \"./version.mjs\"; // The primary entry point into fulfilling a GraphQL request.\n\nexport { graphql, graphqlSync } from \"./graphql.mjs\"; // Create and operate on GraphQL type definitions and schema.\n\nexport { // Definitions\nGraphQLSchema, GraphQLDirective, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull // Standard GraphQL Scalars\n, specifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID // Built-in Directives defined by the Spec\n, specifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective // \"Enum\" of Type Kinds\n, TypeKind // Constant Deprecation Reason\n, DEFAULT_DEPRECATION_REASON // GraphQL Types for introspection.\n, introspectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind // Meta-field definitions.\n, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef // Predicates\n, isSchema, isDirective, isType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType, isRequiredArgument, isRequiredInputField, isSpecifiedScalarType, isIntrospectionType, isSpecifiedDirective // Assertions\n, assertSchema, assertDirective, assertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType // Un-modifiers\n, getNullableType, getNamedType // Validate GraphQL schema.\n, validateSchema, assertValidSchema } from \"./type/index.mjs\";\n// Parse and operate on GraphQL language source files.\nexport { Token, Source, Location, getLocation // Print source location\n, printLocation, printSourceLocation // Lex\n, Lexer, TokenKind // Parse\n, parse, parseValue, parseType // Print\n, print // Visit\n, visit, visitInParallel, getVisitFn, BREAK, Kind, DirectiveLocation // Predicates\n, isDefinitionNode, isExecutableDefinitionNode, isSelectionNode, isValueNode, isTypeNode, isTypeSystemDefinitionNode, isTypeDefinitionNode, isTypeSystemExtensionNode, isTypeExtensionNode } from \"./language/index.mjs\";\n// Execute GraphQL queries.\nexport { execute, executeSync, defaultFieldResolver, defaultTypeResolver, responsePathAsArray, getDirectiveValues } from \"./execution/index.mjs\";\nexport { subscribe, createSourceEventStream } from \"./subscription/index.mjs\";\n// Validate GraphQL documents.\nexport { validate, ValidationContext // All validation rules in the GraphQL Specification.\n, specifiedRules // Individual validation rules.\n, ExecutableDefinitionsRule, FieldsOnCorrectTypeRule, FragmentsOnCompositeTypesRule, KnownArgumentNamesRule, KnownDirectivesRule, KnownFragmentNamesRule, KnownTypeNamesRule, LoneAnonymousOperationRule, NoFragmentCyclesRule, NoUndefinedVariablesRule, NoUnusedFragmentsRule, NoUnusedVariablesRule, OverlappingFieldsCanBeMergedRule, PossibleFragmentSpreadsRule, ProvidedRequiredArgumentsRule, ScalarLeafsRule, SingleFieldSubscriptionsRule, UniqueArgumentNamesRule, UniqueDirectivesPerLocationRule, UniqueFragmentNamesRule, UniqueInputFieldNamesRule, UniqueOperationNamesRule, UniqueVariableNamesRule, ValuesOfCorrectTypeRule, VariablesAreInputTypesRule, VariablesInAllowedPositionRule // SDL-specific validation rules\n, LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, PossibleTypeExtensionsRule // Custom validation rules\n, NoDeprecatedCustomRule, NoSchemaIntrospectionCustomRule } from \"./validation/index.mjs\";\n// Create, format, and print GraphQL errors.\nexport { GraphQLError, syntaxError, locatedError, printError, formatError } from \"./error/index.mjs\";\n// Utilities for operating on GraphQL type schema and parsed sources.\nexport { // Produce the GraphQL query recommended for a full schema introspection.\n// Accepts optional IntrospectionOptions.\ngetIntrospectionQuery // Gets the target Operation from a Document.\n, getOperationAST // Gets the Type for the target Operation AST.\n, getOperationRootType // Convert a GraphQLSchema to an IntrospectionQuery.\n, introspectionFromSchema // Build a GraphQLSchema from an introspection result.\n, buildClientSchema // Build a GraphQLSchema from a parsed GraphQL Schema language AST.\n, buildASTSchema // Build a GraphQLSchema from a GraphQL schema language document.\n, buildSchema // @deprecated: Get the description from a schema AST node and supports legacy\n// syntax for specifying descriptions - will be removed in v16.\n, getDescription // Extends an existing GraphQLSchema from a parsed GraphQL Schema\n// language AST.\n, extendSchema // Sort a GraphQLSchema.\n, lexicographicSortSchema // Print a GraphQLSchema to GraphQL Schema language.\n, printSchema // Print a GraphQLType to GraphQL Schema language.\n, printType // Prints the built-in introspection schema in the Schema Language\n// format.\n, printIntrospectionSchema // Create a GraphQLType from a GraphQL language AST.\n, typeFromAST // Create a JavaScript value from a GraphQL language AST with a Type.\n, valueFromAST // Create a JavaScript value from a GraphQL language AST without a Type.\n, valueFromASTUntyped // Create a GraphQL language AST from a JavaScript value.\n, astFromValue // A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\n, TypeInfo, visitWithTypeInfo // Coerces a JavaScript value to a GraphQL type, or produces errors.\n, coerceInputValue // Concatenates multiple AST together.\n, concatAST // Separates an AST into an AST per Operation.\n, separateOperations // Strips characters that are not significant to the validity or execution\n// of a GraphQL document.\n, stripIgnoredCharacters // Comparators for types\n, isEqualType, isTypeSubTypeOf, doTypesOverlap // Asserts a string is a valid GraphQL name.\n, assertValidName // Determine if a string is a valid GraphQL name.\n, isValidNameError // Compares two GraphQLSchemas and detects breaking changes.\n, BreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges // @deprecated: Report all deprecated usage within a GraphQL document.\n, findDeprecatedUsages } from \"./utilities/index.mjs\";\n","import { isExtractableFile as defaultIsExtractableFile } from './isExtractableFile.mjs'\nexport function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = ''\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile\n  }\n\n  var clone\n  var files = new Map()\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file)\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths)\n    else files.set(file, paths)\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null\n    addFile([path], value)\n  } else {\n    var prefix = path ? path + '.' : ''\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function(file, i) {\n        addFile(['' + prefix + i], file)\n        return null\n      })\n    else if (Array.isArray(value))\n      clone = value.map(function(child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile)\n        result.files.forEach(addFile)\n        return result.clone\n      })\n    else if (value && value.constructor === Object) {\n      clone = {}\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile)\n        result.files.forEach(addFile)\n        clone[i] = result.clone\n      }\n    } else clone = value\n  }\n\n  return {\n    clone: clone,\n    files: files\n  }\n}\n","export default \"<ng-template #customCheckboxTemplate let-checkbox=\\\"checkbox\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <nui-icon class=\\\"mr-2\\\" [icon]=\\\"checkbox.icon\\\"></nui-icon>\\n        <span class=\\\"mr-2\\\">{{checkbox.displayValue}}</span>\\n    </div>\\n</ng-template>\\n\\n<ng-template #customExpanderTemplate let-expander=\\\"expander\\\">\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <span class=\\\"mr-2\\\">\\n            <b>{{expander.title}}</b>\\n        </span>\\n        <span class=\\\"mr-2\\\" *ngIf=\\\"!expander.expanded\\\">{{expander.count}}</span>\\n    </div>\\n</ng-template>\\n\\n<ng-template #emptyListTemplate>\\n    <div class=\\\"d-flex flex-column align-items-center\\\">\\n        <nui-image [isWatermark]=\\\"true\\\" image=\\\"no-data-to-show\\\"></nui-image>\\n        <p class=\\\"nui-text-small\\\">No data to show</p>\\n    </div>\\n</ng-template>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n    <div>{{item.status}}</div>\\n</ng-template>\\n\\n<nui-panel>\\n    <div nuiPanelEmbeddedBody>\\n        <app-custom-template-filter-groups-wrapper>\\n            <app-custom-template-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                        [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                        [checkboxTemplateRef]=\\\"customCheckboxTemplate\\\"\\n                                        [expanderTemplateRef]=\\\"customExpanderTemplate\\\"\\n                                        (filterChanged)=\\\"changeFilters($event)\\\"></app-custom-template-filter-group>\\n        </app-custom-template-filter-groups-wrapper>\\n    </div>\\n    <div>\\n        <div *ngIf=\\\"hasItems(); else emptyListTemplate\\\">\\n            <nui-repeat id=\\\"nui-composites-demo-repeat\\\"\\n                        [itemsSource]=\\\"filteringState.repeat.itemsSource\\\"\\n                        [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                        paddingSize=\\\"normal\\\">\\n            </nui-repeat>\\n        </div>\\n    </div>\\n</nui-panel>\\n\";","export default \"import { CdkVirtualScrollViewport } from \\\"@angular/cdk/scrolling\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    nameof,\\n    TableComponent,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    filter,\\n    switchMap,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-table-with-virtual-scroll-data\\\";\\nimport { FilteredViewTableWithVirtualScrollDataSource } from \\\"../filtered-view-table-with-virtual-scroll-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-virtual-scroll-table\\\",\\n    templateUrl: \\\"./filtered-view-table.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\\n\\n    // the height in px of a single row from the table\\n    public rowHeight = 40;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollDataSource<IServer>,\\n        private viewportManager: VirtualViewportManager,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            virtualScroll: {componentInstance: this.viewportManager},\\n        });\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.viewport)\\n            // Note: Initializing the stream with the desired page size, based on which\\n            // VirtualViewportManager will perform the observations and will emit\\n            // distinct ranges with step equal to provided pageSize\\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\\n                // Since we know the total number of items we can stop the stream when dataset end is reached\\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\\n                filter(() => !this.items.length || this.items.length < this.totalItems),\\n                tap(() => this.applyFilters(false)),\\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\\n                switchMap(() => this.dataSource.outputsSubject.pipe(\\n                    tap((data: IFilteringOutputs) => {\\n                        // update the list of items to be rendered\\n                        const items = data.repeat?.itemsSource || [];\\n\\n                        // after receiving data we need to append it to our previous fetched results\\n                        this.items = this.items.concat(items);\\n                        this.totalItems = data.paginator?.total || 0;\\n                        this.changeDetection.detectChanges();\\n                    })\\n                )\\n            ),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.items = [];\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"nui-filter-group-composite-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\n\nexport class FilterGroupCompositeDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: IFilterGroupOption[]) {\n        this.selectedValues = selection.map(item => item.value);\n    }\n}\n","<div class=\"nui-filter-group-composite-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"nui-filter-group-composite-dialog__body\">\n        <app-item-picker-composite\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker-composite>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 400;\n\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","export default \"<nui-schematic-docs-page schematicFolderName=\\\"filtered-view\\\">\\n    <div schematicSummary>\\n        <p>\\n            The Filtered View schematic provides the ability to create a generic filtered view that can cover many use cases\\n            for filtering a set of data. Its main responsibility is to integrate a filter group panel with a list or table view\\n            that displays the filtered data.\\n        </p>\\n        <h2>Notable Command Line Options</h2>\\n        <nui-schematic-cli-option name=\\\"presentationType\\\">\\n            <p>\\n                This string option allows you to select how the filtered data will be presented to the user. The values currently supported\\n                for this option are <code>table</code> and <code>list</code>. The default value is <code>list</code>.\\n            </p>\\n        </nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"selectionMode\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"pagingMode\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"dataSource\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"enableSearch\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"enableSort\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"chips\\\"></nui-schematic-cli-option>\\n    </div>\\n    <nui-tab-group schematicExamples>\\n        <nui-tab heading=\\\"List\\\">\\n            <h2>Filtered View with List</h2>\\n            <p>\\n                This example shows the output of the CLI command without any modifications.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-with-list --presentationType=list</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-with-list\\\">\\n                <app-filtered-view-with-list></app-filtered-view-with-list>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"List with Pagination\\\">\\n            <h2>List with Pagination</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-list-with-pagination --presentationType=list --dataSource=serverSide\\n                <strong>--pagingMode=pagination</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-list-with-pagination\\\">\\n                <app-filtered-view-list-with-pagination></app-filtered-view-list-with-pagination>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"List with Virtual Scroll\\\">\\n            <h2>List with Virtual Scroll</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-virtual-scroll --presentationType=list --dataSource=serverSide\\n                <strong>--pagingMode=virtualScroll</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-list-with-virtual-scroll\\\">\\n                <app-filtered-view-list-with-virtual-scroll></app-filtered-view-list-with-virtual-scroll>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Table\\\">\\n            <h2>Filtered View with Table</h2>\\n            <p>\\n                This example shows the output of the CLI command shown below.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --name=filtered-view-with-table --p=app <strong>--presentationType=table</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-with-table\\\">\\n                <app-filtered-view-with-table></app-filtered-view-with-table>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Table with Pagination\\\">\\n            <h2>Table with Pagination</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-pagination --presentationType=table --dataSource=serverSide\\n                <strong>--pagingMode=pagination</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-table-with-pagination\\\">\\n                <app-filtered-view-table-with-pagination></app-filtered-view-table-with-pagination>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Table with Selection\\\">\\n            <h2>Table with Selection</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-selection --presentationType=table --dataSource=serverSide --pagingMode=pagination\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-table-with-selection\\\">\\n                <app-filtered-view-table-with-selection></app-filtered-view-table-with-selection>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Table with Virtual Scroll\\\" #vs>\\n            <h2>Table with Virtual Scroll</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\\n                <strong>--pagingMode=virtualScroll</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-table-with-virtual-scroll\\\">\\n                <app-filtered-view-table-with-virtual-scroll *ngIf=\\\"vs.active\\\"></app-filtered-view-table-with-virtual-scroll>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Table with Virtual Scroll and Selection\\\" #vss>\\n            <h2>Table with Virtual Scroll and Selection</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\\n                <strong>--pagingMode=virtualScroll</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-table-with-virtual-scroll-selection\\\">\\n                <app-filtered-view-table-with-virtual-scroll-selection *ngIf=\\\"vss.active\\\"></app-filtered-view-table-with-virtual-scroll-selection>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Table with Custom Virtual Scroll\\\" #cvs>\\n            <h2>Table with Custom Virtual Scroll</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filtered-view --p=app --name=filtered-view-table-with-virtual-scroll --presentationType=table --dataSource=serverSide\\n                <strong>--pagingMode=virtualScroll --virtualScrollStrategy=custom</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-table-with-custom-virtual-scroll\\\">\\n                <app-filtered-view-table-with-custom-virtual-scroll *ngIf=\\\"cvs.active\\\"></app-filtered-view-table-with-custom-virtual-scroll>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n        <nui-tab heading=\\\"Tree\\\" #tree>\\n            <h2>Tree</h2>\\n            <nui-schematic-docs-example exampleFolderName=\\\"filtered-view-with-tree\\\">\\n                <app-filtered-view-with-tree *ngIf=\\\"tree.active\\\"></app-filtered-view-with-tree>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n    </nui-tab-group>\\n</nui-schematic-docs-page>\\n\";","import { ListRange } from \"@angular/cdk/collections\";\nimport {\n    Inject,\n    Injectable,\n} from \"@angular/core\";\nimport {\n    IFilter,\n    IFilterPub,\n} from \"@nova-ui/bits\";\n\nimport { CUSTOM_SCROLL_ITEMS_PER_PAGE } from \"./table-with-custom-virtual-scroll-data\";\n\n@Injectable()\nexport class VirtualScrollCustomStrategyService implements IFilterPub<IFilter<ListRange>> {\n    public itemsPerPage: number;\n\n    protected virtualScrollRange: ListRange;\n\n    constructor(@Inject(CUSTOM_SCROLL_ITEMS_PER_PAGE) itemsPerPage: number) {\n        this.itemsPerPage = itemsPerPage;\n        this.reset();\n    }\n\n    public getFilters(): IFilter<ListRange> {\n        return {\n            type: \"virtualScroll\",\n            value: this.virtualScrollRange,\n        };\n    }\n\n    public reset() {\n        this.virtualScrollRange = { start: 0, end: this.itemsPerPage };\n    }\n\n    public prepareNextPage(fetchedItemsCount: number) {\n        if (fetchedItemsCount < this.itemsPerPage) {\n            // keep requesting the same page if not all expected items per page were loaded\n        } else {\n            // advances \"pagination\" to the next pages\n            this.virtualScrollRange.start += this.itemsPerPage;\n            this.virtualScrollRange.end = this.virtualScrollRange.start + this.itemsPerPage;\n        }\n    }\n}\n","<div class=\"app-filtered-view-with-table-table__container\">\n    <table nui-table [dataSource]=\"items\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    LocalFilteringDataSource,\n    PaginatorComponent,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-with-table-data\";\nimport { IServer } from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-with-table-table\",\n    templateUrl: \"./filtered-view-table.component.html\",\n    styleUrls: [\"./filtered-view-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-selection-table #child></app-filtered-view-table-with-selection-table>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewTableWithSelectionDataSource,\n} from \"./filtered-view-table-with-selection-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-selection\",\n    styleUrls: [\"./filtered-view-table-with-selection.component.less\"],\n    templateUrl: \"./filtered-view-table-with-selection.component.html\",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithSelectionDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithSelectionComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithSelectionDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from \"@angular/core\";\nimport { DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-dialog-filter-group\",\n    templateUrl: \"./dialog-filter-group.component.html\",\n    styleUrls: [\"./dialog-filter-group.component.less\"],\n})\nexport class DialogFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"nui-filter-group-composite\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"nui-filter-group-composite__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between nui-filter-group-composite__checkbox\">\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"nui-filter-group-composite__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","export default \"import { IServer, ServerStatus } from \\\"./types\\\";\\n\\n// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 20;\\n\\nexport const LOCAL_DATA: IServer[] = [\\n    {\\n        name: \\\"FOCUS-SVR-12345\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-ASD123\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-DSA331\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-JKS212\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"ABERN-SVR-ATQU9404\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-433AAD\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-098331\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-GHJ882\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LLK001\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-KKJ998\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-RRR001\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LKJF12\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-882JJS\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-7733KK\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-JSHNSA\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-KKAEQWE\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-123KKNPQ\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-RRF231\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n];\\n\";","<div class=\"app-filtered-view-table-with-pagination-table__container\">\n    <table nui-table [dataSource]=\"items\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <footer class=\"app-filtered-view-table-with-pagination-table-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    nameof,\n    PaginatorComponent,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-table-with-pagination-data\";\nimport { FilteredViewTableWithPaginationDataSource } from \"../filtered-view-table-with-pagination-data-source.service\";\nimport { IServer, IServerFilters } from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-pagination-table\",\n    templateUrl: \"./filtered-view-table.component.html\",\n    styleUrls: [\"./filtered-view-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithPaginationDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nexport function UniqueTypeNamesRule(context) {\n  var knownTypeNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName\n  };\n\n  function checkTypeName(node) {\n    var typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(new GraphQLError(\"Type \\\"\".concat(typeName, \"\\\" already exists in the schema. It cannot also be defined in this type definition.\"), node.name));\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(new GraphQLError(\"There can be only one type named \\\"\".concat(typeName, \"\\\".\"), [knownTypeNames[typeName], node.name]));\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n","<div class=\"app-table-with-virtual-scroll__container\">\n    <div class=\"app-table-with-virtual-scroll-searchable__search\">\n        <nui-search [value]=\"searchTerm\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onSearchCancel()\">\n        </nui-search>\n    </div>\n\n    <cdk-virtual-scroll-viewport class=\"app-table-with-virtual-scroll-scrolling-container\" tableStickyHeader #viewportRef [itemSize]=\"rowHeight\">\n    <table nui-table [dataSource]=\"items | sliceRange: viewportRef.getRenderedRange()\"\n           [sortable]=\"true\"\n           [sortedColumn]=\"sortedColumn\"\n           (sortOrderChanged)=\"sortData($event)\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]=\"displayedColumns\"\n                         [cdkVirtualForOf]=\"items\">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class=\"app-table-with-virtual-scroll-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                    <div class=\"d-flex pt-3 pb-3\">\n                        <ng-container i18n *ngIf=\"items.length !== totalItems; else endOfData\">, scroll down for more.</ng-container>\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n","import { CdkVirtualScrollViewport } from \"@angular/cdk/scrolling\";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    ISortedItem,\n    nameof,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    debounceTime,\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-virtual-scroll-data\";\nimport { TableWithVirtualScrollDataSource } from \"./table-with-virtual-scroll-data-source.service\";\nimport { IServer, IServerFilters } from \"./types\";\n\n@Component({\n    selector: \"app-table-with-virtual-scroll\",\n    templateUrl: \"./table-with-virtual-scroll.component.html\",\n    styleUrls: [\"./table-with-virtual-scroll.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: TableWithVirtualScrollDataSource,\n        },\n    ],\n})\nexport class TableWithVirtualScrollComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: \"name\",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = [\"name\"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            virtualScroll: {componentInstance: this.viewportManager},\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => !this.items.length || this.items.length < this.totalItems),\n                tap(() => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                switchMap(() => this.dataSource.outputsSubject.pipe(\n                    tap((data: IFilteringOutputs) => {\n                        // update the list of items to be rendered\n                        const items = data.repeat?.itemsSource || [];\n\n                        // after receiving data we need to append it to our previous fetched results\n                        this.items = this.items.concat(items);\n                        this.totalItems = data.paginator?.total || 0;\n                        this.changeDetection.detectChanges();\n                    })\n                )\n            ),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","export default \".schematic-docs-example {\\n    &__files {\\n        overflow-x: auto;\\n    }\\n\\n    &__selected-file {\\n        font-weight: bold;\\n    }\\n}\\n.nui-source-inspector-code {\\n    max-height: 600px;\\n    overflow-y: auto;\\n\\n    .nui-example-code {\\n        min-width: fit-content;\\n    }\\n}\\n\";","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","import objectEntries from \"../polyfills/objectEntries.mjs\";\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport default function mapValue(map, fn) {\n  var result = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(map); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var _key = _ref2[0];\n    var _value = _ref2[1];\n    result[_key] = fn(_value, _key);\n  }\n\n  return result;\n}\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"nui-filter-group-composite\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"nui-filter-group-composite__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between nui-filter-group-composite__checkbox\\\">\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"nui-filter-group-composite__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"// number of results to be displayed in the table\\nexport const RESULTS_PER_PAGE = 20;\\n\\n\";","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport naturalCompare from \"../jsutils/naturalCompare.mjs\";\nimport { GraphQLSchema } from \"../type/schema.mjs\";\nimport { GraphQLDirective } from \"../type/directives.mjs\";\nimport { isIntrospectionType } from \"../type/introspection.mjs\";\nimport { GraphQLList, GraphQLNonNull, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, isListType, isNonNullType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from \"../type/definition.mjs\";\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\n\nexport function lexicographicSortSchema(schema) {\n  var schemaConfig = schema.toConfig();\n  var typeMap = keyValMap(sortByName(schemaConfig.types), function (type) {\n    return type.name;\n  }, sortNamedType);\n  return new GraphQLSchema(_objectSpread(_objectSpread({}, schemaConfig), {}, {\n    types: objectValues(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription)\n  }));\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new GraphQLList(replaceType(type.ofType));\n    } else if (isNonNullType(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new GraphQLNonNull(replaceType(type.ofType));\n    }\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    var config = directive.toConfig();\n    return new GraphQLDirective(_objectSpread(_objectSpread({}, config), {}, {\n      locations: sortBy(config.locations, function (x) {\n        return x;\n      }),\n      args: sortArgs(config.args)\n    }));\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, function (arg) {\n      return _objectSpread(_objectSpread({}, arg), {}, {\n        type: replaceType(arg.type)\n      });\n    });\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        type: replaceType(field.type),\n        args: sortArgs(field.args)\n      });\n    });\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        type: replaceType(field.type)\n      });\n    });\n  }\n\n  function sortTypes(arr) {\n    return sortByName(arr).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (isScalarType(type) || isIntrospectionType(type)) {\n      return type;\n    }\n\n    if (isObjectType(type)) {\n      var config = type.toConfig();\n      return new GraphQLObjectType(_objectSpread(_objectSpread({}, config), {}, {\n        interfaces: function interfaces() {\n          return sortTypes(config.interfaces);\n        },\n        fields: function fields() {\n          return sortFields(config.fields);\n        }\n      }));\n    }\n\n    if (isInterfaceType(type)) {\n      var _config = type.toConfig();\n\n      return new GraphQLInterfaceType(_objectSpread(_objectSpread({}, _config), {}, {\n        interfaces: function interfaces() {\n          return sortTypes(_config.interfaces);\n        },\n        fields: function fields() {\n          return sortFields(_config.fields);\n        }\n      }));\n    }\n\n    if (isUnionType(type)) {\n      var _config2 = type.toConfig();\n\n      return new GraphQLUnionType(_objectSpread(_objectSpread({}, _config2), {}, {\n        types: function types() {\n          return sortTypes(_config2.types);\n        }\n      }));\n    }\n\n    if (isEnumType(type)) {\n      var _config3 = type.toConfig();\n\n      return new GraphQLEnumType(_objectSpread(_objectSpread({}, _config3), {}, {\n        values: sortObjMap(_config3.values)\n      }));\n    } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n    if (isInputObjectType(type)) {\n      var _config4 = type.toConfig();\n\n      return new GraphQLInputObjectType(_objectSpread(_objectSpread({}, _config4), {}, {\n        fields: function fields() {\n          return sortInputFields(_config4.fields);\n        }\n      }));\n    } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n    false || invariant(0, 'Unexpected type: ' + inspect(type));\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  var sortedMap = Object.create(null);\n  var sortedKeys = sortBy(Object.keys(map), function (x) {\n    return x;\n  });\n\n  for (var _i2 = 0; _i2 < sortedKeys.length; _i2++) {\n    var key = sortedKeys[_i2];\n    var value = map[key];\n    sortedMap[key] = sortValueFn ? sortValueFn(value) : value;\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, function (obj) {\n    return obj.name;\n  });\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort(function (obj1, obj2) {\n    var key1 = mapToKey(obj1);\n    var key2 = mapToKey(obj2);\n    return naturalCompare(key1, key2);\n  });\n}\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","// Produce the GraphQL query recommended for a full schema introspection.\n// Accepts optional IntrospectionOptions.\nexport { getIntrospectionQuery } from \"./getIntrospectionQuery.mjs\";\n// Gets the target Operation from a Document.\nexport { getOperationAST } from \"./getOperationAST.mjs\"; // Gets the Type for the target Operation AST.\n\nexport { getOperationRootType } from \"./getOperationRootType.mjs\"; // Convert a GraphQLSchema to an IntrospectionQuery.\n\nexport { introspectionFromSchema } from \"./introspectionFromSchema.mjs\"; // Build a GraphQLSchema from an introspection result.\n\nexport { buildClientSchema } from \"./buildClientSchema.mjs\"; // Build a GraphQLSchema from GraphQL Schema language.\n\nexport { buildASTSchema, buildSchema } from \"./buildASTSchema.mjs\";\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema // @deprecated: Get the description from a schema AST node and supports legacy\n// syntax for specifying descriptions - will be removed in v16.\n, getDescription } from \"./extendSchema.mjs\"; // Sort a GraphQLSchema.\n\nexport { lexicographicSortSchema } from \"./lexicographicSortSchema.mjs\"; // Print a GraphQLSchema to GraphQL Schema language.\n\nexport { printSchema, printType, printIntrospectionSchema } from \"./printSchema.mjs\"; // Create a GraphQLType from a GraphQL language AST.\n\nexport { typeFromAST } from \"./typeFromAST.mjs\"; // Create a JavaScript value from a GraphQL language AST with a type.\n\nexport { valueFromAST } from \"./valueFromAST.mjs\"; // Create a JavaScript value from a GraphQL language AST without a type.\n\nexport { valueFromASTUntyped } from \"./valueFromASTUntyped.mjs\"; // Create a GraphQL language AST from a JavaScript value.\n\nexport { astFromValue } from \"./astFromValue.mjs\"; // A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\n\nexport { TypeInfo, visitWithTypeInfo } from \"./TypeInfo.mjs\"; // Coerces a JavaScript value to a GraphQL type, or produces errors.\n\nexport { coerceInputValue } from \"./coerceInputValue.mjs\"; // Concatenates multiple AST together.\n\nexport { concatAST } from \"./concatAST.mjs\"; // Separates an AST into an AST per Operation.\n\nexport { separateOperations } from \"./separateOperations.mjs\"; // Strips characters that are not significant to the validity or execution\n// of a GraphQL document.\n\nexport { stripIgnoredCharacters } from \"./stripIgnoredCharacters.mjs\"; // Comparators for types\n\nexport { isEqualType, isTypeSubTypeOf, doTypesOverlap } from \"./typeComparators.mjs\"; // Asserts that a string is a valid GraphQL name\n\nexport { assertValidName, isValidNameError } from \"./assertValidName.mjs\"; // Compares two GraphQLSchemas and detects breaking changes.\n\nexport { BreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges } from \"./findBreakingChanges.mjs\";\n// @deprecated: Report all deprecated usage within a GraphQL document.\nexport { findDeprecatedUsages } from \"./findDeprecatedUsages.mjs\";\n","export default \"import {\\n    AfterViewInit,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    DialogService,\\n    INovaFilteringOutputs,\\n    LocalFilteringDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _get from \\\"lodash/get\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupCompositeDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { IFilterGroupItem } from \\\"./public-api\\\";\\n\\ninterface ExampleItem {\\n    color: string;\\n    name: string;\\n}\\n\\nconst RANDOM_ARRAY = [\\n    {color: \\\"yellow\\\", name: \\\"banana\\\"},\\n    {color: \\\"orange\\\", name: \\\"orange\\\"},\\n    {color: \\\"violet\\\", name: \\\"plum\\\"},\\n    {color: \\\"blue\\\", name: \\\"blueberry\\\"},\\n    {color: \\\"brown\\\", name: \\\"potato\\\"},\\n    {color: \\\"red\\\", name: \\\"apple\\\"},\\n    {color: \\\"green\\\", name: \\\"pear\\\"},\\n    {color: \\\"black\\\", name: \\\"blackcurrant\\\"},\\n    {color: \\\"white\\\", name: \\\"coconut\\\"},\\n    {color: \\\"magenta\\\", name: \\\"mulberry\\\"},\\n    {color: \\\"apricot\\\", name: \\\"peach\\\"},\\n    {color: \\\"olive\\\", name: \\\"olive\\\"},\\n    {color: \\\"carmine\\\", name: \\\"grapefruit\\\"},\\n    {color: \\\"coral\\\", name: \\\"pomegranate\\\"},\\n    {color: \\\"corn\\\", name: \\\"corn\\\"},\\n];\\n\\n@Component({\\n    selector: \\\"app-dialog-filter-group-composite-example\\\",\\n    templateUrl: \\\"dialog-filter-group.example.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: LocalFilteringDataSource,\\n    }],\\n})\\nexport class DialogFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"color\\\",\\n            title: \\\"Color\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: \\\"yellow\\\",\\n                    displayValue: \\\"Yellow\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"orange\\\",\\n                    displayValue: \\\"Orange\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"violet\\\",\\n                    displayValue: \\\"Violet\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"blue\\\",\\n                    displayValue: \\\"Blue\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"brown\\\",\\n                    displayValue: \\\"Brown\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"red\\\",\\n                    displayValue: \\\"Red\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"green\\\",\\n                    displayValue: \\\"Green\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"black\\\",\\n                    displayValue: \\\"Black\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"white\\\",\\n                    displayValue: \\\"White\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"magenta\\\",\\n                    displayValue: \\\"Magenta\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"apricot\\\",\\n                    displayValue: \\\"Apricot\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"olive\\\",\\n                    displayValue: \\\"Olive\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"carmine\\\",\\n                    displayValue: \\\"Carmine\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"coral\\\",\\n                    displayValue: \\\"Coral\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"corn\\\",\\n                    displayValue: \\\"Corn\\\",\\n                    count: 1,\\n                },\\n            ],\\n            selectedFilterValues: [],\\n            itemsToDisplay: 10,\\n        }, {\\n            id: \\\"name\\\",\\n            title: \\\"Fruits and Vegetables\\\",\\n            expanded: false,\\n            allFilterOptions: [\\n                {\\n                    value: \\\"banana\\\",\\n                    displayValue: \\\"Banana\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"orange\\\",\\n                    displayValue: \\\"Orange\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"plum\\\",\\n                    displayValue: \\\"Plum\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"blueberry\\\",\\n                    displayValue: \\\"Blueberry\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"potato\\\",\\n                    displayValue: \\\"Potato\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"apple\\\",\\n                    displayValue: \\\"Apple\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"pear\\\",\\n                    displayValue: \\\"Pear\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"blackcurrant\\\",\\n                    displayValue: \\\"Blackcurrant\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"coconut\\\",\\n                    displayValue: \\\"Coconut\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"mulberry\\\",\\n                    displayValue: \\\"Mulberry\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"peach\\\",\\n                    displayValue: \\\"Peach\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"olive\\\",\\n                    displayValue: \\\"Olive\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"grapefruit\\\",\\n                    displayValue: \\\"Grapefruit\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"pomegranate\\\",\\n                    displayValue: \\\"Pomegranate\\\",\\n                    count: 1,\\n                }, {\\n                    value: \\\"corn\\\",\\n                    displayValue: \\\"Corn\\\",\\n                    count: 1,\\n                },\\n            ],\\n            selectedFilterValues: [],\\n            itemsToDisplay: 10,\\n        },\\n    ];\\n\\n    public filteringState: INovaFilteringOutputs = {\\n        repeat: {\\n            itemsSource: [],\\n        },\\n        color: [],\\n        name: [],\\n    };\\n\\n    private outputsSubscription: Subscription;\\n    private dialogSubscription: Subscription;\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<ExampleItem>,\\n                @Inject(DialogService) private dialogService: DialogService,\\n                private filterGroupService: FilterGroupService) {\\n        (this.dataSourceService as LocalFilteringDataSource<ExampleItem>).setData(RANDOM_ARRAY);\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.outputsSubscription = this.dataSourceService.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.filteringState = data;\\n            // get counts of filters\\n            this.recalculateCounts(data);\\n        });\\n        this.dataSourceService.applyFilters();\\n    }\\n\\n    public changeFilters(event: IFilterGroupItem) {\\n        this.dataSourceService.applyFilters();\\n    }\\n\\n    public hasItems(): boolean {\\n        return !_isEmpty(_get(this, \\\"filteringState.repeat.itemsSource\\\"));\\n    }\\n\\n    public handleFilterDialog(filterGroupItem: IFilterGroupItem) {\\n        const dialogRef = this.dialogService.open(FilterGroupCompositeDialogComponent);\\n        dialogRef.componentInstance.title = \\\"Filter dialog\\\";\\n        dialogRef.componentInstance.itemPickerOptions = filterGroupItem.allFilterOptions;\\n        dialogRef.componentInstance.selectedValues = filterGroupItem.selectedFilterValues;\\n        this.dialogSubscription = dialogRef.componentInstance.dialogClosed.subscribe((selectedValues: string[]) => {\\n            filterGroupItem.selectedFilterValues = selectedValues;\\n            filterGroupItem = this.filterGroupService.appendHiddenFilters(filterGroupItem);\\n            this.dataSourceService.applyFilters();\\n        });\\n    }\\n\\n    private recalculateCounts(filterData: INovaFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value];\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        if (this.outputsSubscription) {\\n            this.outputsSubscription.unsubscribe();\\n        }\\n    }\\n}\\n\";","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","<div class=\"app-table-with-pagination__container\">\n    <div class=\"app-table-with-pagination-searchable__search\">\n        <nui-search [value]=\"searchTerm\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onSearchCancel()\">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]=\"items\"\n           [sortable]=\"true\"\n           [sortedColumn]=\"sortedColumn\"\n           (sortOrderChanged)=\"sortData($event)\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <footer class=\"app-table-with-pagination-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-pagination-data\";\nimport { TableWithPaginationDataSource } from \"./table-with-pagination-data-source.service\";\nimport { IServer, IServerFilters } from \"./types\";\n\n@Component({\n    selector: \"app-table-with-pagination\",\n    templateUrl: \"./table-with-pagination.component.html\",\n    styleUrls: [\"./table-with-pagination.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithPaginationDataSource,\n        },\n    ],\n})\nexport class TableWithPaginationComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: \"name\",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = [\"name\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithPaginationDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","import { Kind } from \"./kinds.mjs\";\nexport function isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\nexport function isExecutableDefinitionNode(node) {\n  return node.kind === Kind.OPERATION_DEFINITION || node.kind === Kind.FRAGMENT_DEFINITION;\n}\nexport function isSelectionNode(node) {\n  return node.kind === Kind.FIELD || node.kind === Kind.FRAGMENT_SPREAD || node.kind === Kind.INLINE_FRAGMENT;\n}\nexport function isValueNode(node) {\n  return node.kind === Kind.VARIABLE || node.kind === Kind.INT || node.kind === Kind.FLOAT || node.kind === Kind.STRING || node.kind === Kind.BOOLEAN || node.kind === Kind.NULL || node.kind === Kind.ENUM || node.kind === Kind.LIST || node.kind === Kind.OBJECT;\n}\nexport function isTypeNode(node) {\n  return node.kind === Kind.NAMED_TYPE || node.kind === Kind.LIST_TYPE || node.kind === Kind.NON_NULL_TYPE;\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return node.kind === Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === Kind.DIRECTIVE_DEFINITION;\n}\nexport function isTypeDefinitionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_DEFINITION || node.kind === Kind.OBJECT_TYPE_DEFINITION || node.kind === Kind.INTERFACE_TYPE_DEFINITION || node.kind === Kind.UNION_TYPE_DEFINITION || node.kind === Kind.ENUM_TYPE_DEFINITION || node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_EXTENSION || node.kind === Kind.OBJECT_TYPE_EXTENSION || node.kind === Kind.INTERFACE_TYPE_EXTENSION || node.kind === Kind.UNION_TYPE_EXTENSION || node.kind === Kind.ENUM_TYPE_EXTENSION || node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NuiButtonModule, NuiCheckboxModule, NuiDialogModule, NuiExpanderModule } from \"@nova-ui/bits\";\n\nimport { BasicFilterGroupCompositeComponent } from \"./basic-filter-group.component\";\nimport { FilterGroupCompositeDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { BasicFilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerCompositeModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiButtonModule,\n        NuiDialogModule,\n        ItemPickerCompositeModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n    ],\n    declarations: [\n        BasicFilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        BasicFilterGroupCompositeComponent,\n    ],\n    exports: [\n        BasicFilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        BasicFilterGroupCompositeComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class BasicFilterGroupCompositeModule {\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isTypeDefinitionNode, isTypeExtensionNode } from \"../../language/predicates.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  var uniqueDirectiveMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  var schemaDirectives = Object.create(null);\n  var typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      if (node.directives == null) {\n        return;\n      }\n\n      var seenDirectives;\n\n      if (node.kind === Kind.SCHEMA_DEFINITION || node.kind === Kind.SCHEMA_EXTENSION) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        var typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (var _i6 = 0, _node$directives2 = node.directives; _i6 < _node$directives2.length; _i6++) {\n        var _directive = _node$directives2[_i6];\n        var directiveName = _directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(new GraphQLError(\"The directive \\\"@\".concat(directiveName, \"\\\" can only be used once at this location.\"), [seenDirectives[directiveName], _directive]));\n          } else {\n            seenDirectives[directiveName] = _directive;\n          }\n        }\n      }\n    }\n  };\n}\n","import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectEntries = Object.entries || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n};\n\nexport default objectEntries;\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nexport function UniqueFragmentNamesRule(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(\"There can be only one fragment named \\\"\".concat(fragmentName, \"\\\".\"), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewListWithVirtualScrollComponent } from \\\"./filtered-view-list-with-virtual-scroll.component\\\";\\nimport { FilteredViewListComponent } from \\\"./filtered-view-list/filtered-view-list.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiSpinnerModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewListWithVirtualScrollComponent,\\n        FilteredViewListComponent,\\n    ],\\n    exports: [\\n        FilteredViewListWithVirtualScrollComponent,\\n        FilteredViewListComponent,\\n    ],\\n})\\n\\nexport class FilteredViewListWithVirtualScrollModule {}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-filtered-view-with-list-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-filtered-view-with-list-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-with-list-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-with-list-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-with-list-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\";","export default \"import { ScrollingModule } from \\\"@angular/cdk/scrolling\\\";\\nimport { CommonModule, DatePipe } from \\\"@angular/common\\\";\\nimport { HttpClientModule } from \\\"@angular/common/http\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { Route, RouterModule, Routes } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiBusyModule,\\n    NuiButtonModule,\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiDocsModule,\\n    NuiExpanderModule,\\n    NuiIconModule,\\n    NuiImageModule,\\n    NuiMessageModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSelectorModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n    NuiTabsModule,\\n    NuiToolbarModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\nimport { ApolloModule, APOLLO_OPTIONS } from \\\"apollo-angular\\\";\\nimport { HttpLink, HttpLinkModule } from \\\"apollo-angular-link-http\\\";\\nimport { InMemoryCache } from \\\"apollo-cache-inmemory\\\";\\n\\nimport { BasicFilterGroupExampleComponent } from \\\"./filter-group/basic-filter-group/basic-filter-group.example.component\\\";\\nimport { BasicFilterGroupCompositeModule } from \\\"./filter-group/basic-filter-group/basic-filter-group.module\\\";\\nimport { CustomDataSourceFilterGroupExampleComponent } from \\\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component\\\";\\nimport { CustomDataSourceFilterGroupCompositeModule } from \\\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module\\\";\\nimport { CustomTemplateFilterGroupExampleComponent } from \\\"./filter-group/custom-template-filter-group/custom-template-filter-group.example.component\\\";\\nimport { CustomTemplateFilterGroupCompositeModule } from \\\"./filter-group/custom-template-filter-group/custom-template-filter-group.module\\\";\\nimport { DialogFilterGroupExampleComponent } from \\\"./filter-group/dialog-filter-group/dialog-filter-group.example.component\\\";\\nimport { DialogFilterGroupCompositeModule } from \\\"./filter-group/dialog-filter-group/dialog-filter-group.module\\\";\\nimport { FakeHTTPService, FakeServer } from \\\"./filter-group/fake-http.service\\\";\\nimport { FilterGroupSchematicExampleComponent } from \\\"./filter-group/filter-group-schematic.example.component\\\";\\nimport { FilteredViewListWithPaginationComponent } from \\\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component\\\";\\nimport { FilteredViewListWithPaginationModule } from \\\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module\\\";\\nimport { FilteredViewListWithVirtualScrollComponent } from \\\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component\\\";\\nimport { FilteredViewListWithVirtualScrollModule } from \\\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module\\\";\\nimport { FilteredViewSchematicExampleComponent } from \\\"./filtered-view/filtered-view-schematic.example.component\\\";\\nimport { FilteredViewSchematicOutletComponent } from \\\"./filtered-view/filtered-view-schematics.outlet.component\\\";\\nimport { FilteredViewTableWithCustomVirtualScrollComponent } from \\\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component\\\";\\nimport { FilteredViewTableWithCustomVirtualScrollModule } from \\\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module\\\";\\nimport { FilteredViewTableWithPaginationComponent } from \\\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component\\\";\\nimport { FilteredViewTableWithPaginationModule } from \\\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module\\\";\\nimport { FilteredViewTableWithSelectionComponent } from \\\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component\\\";\\nimport { FilteredViewTableWithSelectionModule } from \\\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module\\\";\\nimport { FilteredViewTableWithVirtualScrollSelectionComponent } from \\\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component\\\";\\nimport { FilteredViewTableWithVirtualScrollSelectionModule } from \\\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module\\\";\\nimport { FilteredViewTableWithVirtualScrollComponent } from \\\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component\\\";\\nimport { FilteredViewTableWithVirtualScrollModule } from \\\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module\\\";\\nimport { FilteredViewWithListComponent } from \\\"./filtered-view/filtered-view-with-list/filtered-view-with-list.component\\\";\\nimport { FilteredViewWithListModule } from \\\"./filtered-view/filtered-view-with-list/filtered-view-with-list.module\\\";\\nimport { FilteredViewWithTableComponent } from \\\"./filtered-view/filtered-view-with-table/filtered-view-with-table.component\\\";\\nimport { FilteredViewWithTableModule } from \\\"./filtered-view/filtered-view-with-table/filtered-view-with-table.module\\\";\\nimport { FilteredViewWithTreeComponent } from \\\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component\\\";\\nimport { FilteredViewWithTreeModule } from \\\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.module\\\";\\nimport { BasicListComponent } from \\\"./list/basic-list/basic-list.component\\\";\\nimport { ListSchematicExampleComponent } from \\\"./list/list-schematic.example.component\\\";\\nimport { ListSchematicsOutletComponent } from \\\"./list/list-schematics-outlet.component\\\";\\nimport { PaginatedListComponent } from \\\"./list/paginated-list/paginated-list.component\\\";\\nimport { SearchListComponent } from \\\"./list/search-list/search-list.component\\\";\\nimport { SelectionListComponent } from \\\"./list/selection-list/selection-list.component\\\";\\nimport { VirtualScrollListComponent } from \\\"./list/virtual-scroll-list/virtual-scroll-list.component\\\";\\nimport { SchematicsDocsComponent } from \\\"./schematics-docs.component\\\";\\nimport { BasicTableComponent } from \\\"./table/basic-table/basic-table.component\\\";\\nimport { TableSchematicExampleComponent } from \\\"./table/table-schematic-example.component\\\";\\nimport { TableWithCustomVirtualScrollComponent } from \\\"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component\\\";\\nimport { TableWithPaginationComponent } from \\\"./table/table-with-pagination/table-with-pagination.component\\\";\\nimport { TableWithSearchComponent } from \\\"./table/table-with-search/table-with-search.component\\\";\\nimport { TableWithSelectionComponent } from \\\"./table/table-with-selection/table-with-selection.component\\\";\\nimport { TableWithSortComponent } from \\\"./table/table-with-sort/table-with-sort.component\\\";\\nimport { TableWithVirtualScrollComponent } from \\\"./table/table-with-virtual-scroll/table-with-virtual-scroll.component\\\";\\nimport { RecursiveObjectViewComponent } from \\\"./utils/recursive-object-view.component\\\";\\nimport { SchematicsDocsCliOptionComponent } from \\\"./utils/schematic-docs-cli-option/schematic-docs-cli-option.component\\\";\\nimport { SchematicsDocsCommandComponent } from \\\"./utils/schematic-docs-command/schematic-docs-command.component\\\";\\nimport { SchematicDocsExampleComponent } from \\\"./utils/schematic-docs-example/schematic-docs-example.component\\\";\\nimport { SchematicDocsPageComponent } from \\\"./utils/schematic-docs-page/schematic-docs-page.component\\\";\\nimport { SchematicJsonComponent } from \\\"./utils/schematic-json.component\\\";\\n\\nconst COUNTRIES_API = \\\"https://countries-274616.ew.r.appspot.com/\\\";\\n\\n\\nenum FilteredViewRoutes {\\n    Main = \\\"\\\",\\n    List = \\\"list\\\",\\n    ListPagination = \\\"list-pagination\\\",\\n    ListVirtualScroll = \\\"list-virtual-scroll\\\",\\n    Table = \\\"table\\\",\\n    TablePagination = \\\"table-pagination\\\",\\n    TablePaginationSelection = \\\"table-pagination-selection\\\",\\n    TableVirtualScroll = \\\"table-virtual-scroll\\\",\\n    TableVirtualScrollSelection = \\\"table-virtual-scroll-selection\\\",\\n    TableVirtualScrollCustom = \\\"table-virtual-scroll-custom\\\",\\n}\\n\\nconst FILTERED_VIEW_CHILD_ROUTES: (Route & { path: FilteredViewRoutes })[] = [\\n    {\\n      path: FilteredViewRoutes.Main,\\n      component: FilteredViewSchematicExampleComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.List,\\n        component: FilteredViewWithListComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.ListPagination,\\n        component: FilteredViewListWithPaginationComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.ListVirtualScroll,\\n        component: FilteredViewListWithVirtualScrollComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.Table,\\n        component: FilteredViewWithTableComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.TablePagination,\\n        component: FilteredViewTableWithPaginationComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.TablePaginationSelection,\\n        component: FilteredViewTableWithSelectionComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.TableVirtualScroll,\\n        component: FilteredViewTableWithVirtualScrollComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.TableVirtualScrollSelection,\\n        component: FilteredViewTableWithVirtualScrollSelectionComponent,\\n    },\\n    {\\n        path: FilteredViewRoutes.TableVirtualScrollCustom,\\n        component: FilteredViewTableWithCustomVirtualScrollComponent,\\n    },\\n];\\n\\n\\nconst staticRoutes: Routes = [\\n    {\\n        path: \\\"\\\",\\n        component: SchematicsDocsComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"filtered-view\\\",\\n        component: FilteredViewSchematicOutletComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n        children: FILTERED_VIEW_CHILD_ROUTES,\\n    },\\n    {\\n        path: \\\"filter-group\\\",\\n        component: FilterGroupSchematicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"list\\\",\\n        component: ListSchematicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"list-outlet\\\",\\n        component: ListSchematicsOutletComponent,\\n        children: [{\\n            path: \\\"selection\\\",\\n            component: SelectionListComponent,\\n        }],\\n    },\\n    {\\n        path: \\\"table\\\",\\n        component: TableSchematicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"tree\\\",\\n        component: FilteredViewWithTreeComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    declarations: [\\n        FakeServer,\\n        FilteredViewSchematicOutletComponent,\\n        ListSchematicsOutletComponent,\\n        FilteredViewSchematicExampleComponent,\\n        BasicFilterGroupExampleComponent,\\n        CustomDataSourceFilterGroupExampleComponent,\\n        CustomTemplateFilterGroupExampleComponent,\\n        DialogFilterGroupExampleComponent,\\n        FilterGroupSchematicExampleComponent,\\n        BasicListComponent,\\n        SearchListComponent,\\n        SelectionListComponent,\\n        ListSchematicExampleComponent,\\n        TableSchematicExampleComponent,\\n        RecursiveObjectViewComponent,\\n        SchematicJsonComponent,\\n        SchematicsDocsComponent,\\n        SchematicsDocsCommandComponent,\\n        SchematicDocsExampleComponent,\\n        SchematicDocsPageComponent,\\n        SchematicsDocsCliOptionComponent,\\n        VirtualScrollListComponent,\\n        PaginatedListComponent,\\n        TableWithVirtualScrollComponent,\\n        TableWithPaginationComponent,\\n        BasicTableComponent,\\n        TableWithSortComponent,\\n        TableWithSearchComponent,\\n        TableWithSelectionComponent,\\n        TableWithCustomVirtualScrollComponent,\\n    ],\\n    imports: [\\n        CommonModule,\\n        ApolloModule,\\n        HttpLinkModule,\\n        NuiExpanderModule,\\n        NuiMessageModule,\\n        NuiPaginatorModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiSelectorModule,\\n        NuiToolbarModule,\\n        NuiCheckboxModule,\\n        NuiTabsModule,\\n        NuiSpinnerModule,\\n        NuiPanelModule,\\n        NuiTableModule,\\n        NuiDialogModule,\\n        NuiBusyModule,\\n        NuiIconModule,\\n        RouterModule.forChild(staticRoutes),\\n        FilteredViewWithTableModule,\\n        BasicFilterGroupCompositeModule,\\n        CustomDataSourceFilterGroupCompositeModule,\\n        CustomTemplateFilterGroupCompositeModule,\\n        DialogFilterGroupCompositeModule,\\n        NuiDocsModule,\\n        NuiButtonModule,\\n        NuiImageModule,\\n        HttpClientModule,\\n        NuiPopoverModule,\\n        ScrollingModule,\\n        NuiProgressModule,\\n        FilteredViewTableWithPaginationModule,\\n        FilteredViewTableWithVirtualScrollModule,\\n        FilteredViewListWithVirtualScrollModule,\\n        FilteredViewListWithPaginationModule,\\n        FilteredViewWithListModule,\\n        FilteredViewWithTableModule,\\n        FilteredViewWithTreeModule,\\n        NuiDividerModule,\\n        FilteredViewTableWithSelectionModule,\\n        FilteredViewTableWithCustomVirtualScrollModule,\\n        FilteredViewTableWithVirtualScrollSelectionModule,\\n    ],\\n    providers: [\\n        DatePipe,\\n        FakeHTTPService,\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n        {\\n            provide: APOLLO_OPTIONS,\\n            useFactory: (httpLink: HttpLink) =>\\n                ({\\n                    cache: new InMemoryCache(),\\n                    link: httpLink.create({\\n                        uri: COUNTRIES_API,\\n                    }),\\n                }),\\n            deps: [HttpLink],\\n        },\\n    ],\\n})\\nexport class SchematicModule {\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","import devAssert from \"../jsutils/devAssert.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { parse } from \"../language/parser.mjs\";\nimport { assertValidSDL } from \"../validation/validate.mjs\";\nimport { GraphQLSchema } from \"../type/schema.mjs\";\nimport { specifiedDirectives } from \"../type/directives.mjs\";\nimport { extendSchemaImpl } from \"./extendSchema.mjs\";\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query\n * and Mutation.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function buildASTSchema(documentAST, options) {\n  documentAST != null && documentAST.kind === Kind.DOCUMENT || devAssert(0, 'Must provide valid Document AST.');\n\n  if ((options === null || options === void 0 ? void 0 : options.assumeValid) !== true && (options === null || options === void 0 ? void 0 : options.assumeValidSDL) !== true) {\n    assertValidSDL(documentAST);\n  }\n\n  var emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: undefined,\n    extensionASTNodes: [],\n    assumeValid: false\n  };\n  var config = extendSchemaImpl(emptySchemaConfig, documentAST, options);\n\n  if (config.astNode == null) {\n    for (var _i2 = 0, _config$types2 = config.types; _i2 < _config$types2.length; _i2++) {\n      var type = _config$types2[_i2];\n\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  var directives = config.directives; // If specified directives were not explicitly declared, add them.\n\n  var _loop = function _loop(_i4) {\n    var stdDirective = specifiedDirectives[_i4];\n\n    if (directives.every(function (directive) {\n      return directive.name !== stdDirective.name;\n    })) {\n      directives.push(stdDirective);\n    }\n  };\n\n  for (var _i4 = 0; _i4 < specifiedDirectives.length; _i4++) {\n    _loop(_i4);\n  }\n\n  return new GraphQLSchema(config);\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nexport function buildSchema(source, options) {\n  var document = parse(source, {\n    noLocation: options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacySDLEmptyFields: options === null || options === void 0 ? void 0 : options.allowLegacySDLEmptyFields,\n    allowLegacySDLImplementsInterfaces: options === null || options === void 0 ? void 0 : options.allowLegacySDLImplementsInterfaces,\n    experimentalFragmentVariables: options === null || options === void 0 ? void 0 : options.experimentalFragmentVariables\n  });\n  return buildASTSchema(document, {\n    commentDescriptions: options === null || options === void 0 ? void 0 : options.commentDescriptions,\n    assumeValidSDL: options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  });\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTableWithPaginationComponent } from \\\"./filtered-view-table-with-pagination.component\\\";\\nimport { FilteredViewTableComponent } from \\\"./filtered-view-table/filtered-view-table.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiProgressModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiIconModule,\\n        NuiSpinnerModule,\\n        NuiTableModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewTableWithPaginationComponent,\\n        FilteredViewTableComponent,\\n    ],\\n    exports: [\\n        FilteredViewTableWithPaginationComponent,\\n        FilteredViewTableComponent,\\n    ],\\n})\\n\\nexport class FilteredViewTableWithPaginationModule {}\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./filtered-view-list-with-virtual-scroll-data\\\";\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewListWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        if (filters.search?.value) {\\n            params = params.set(\\\"searchField\\\", \\\"name\\\");\\n            params = params.set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n        }\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewListWithVirtualScrollDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewListWithVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-pagination-table #child></app-filtered-view-table-with-pagination-table>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewTableWithPaginationDataSource,\n} from \"./filtered-view-table-with-pagination-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-pagination\",\n    styleUrls: [\"./filtered-view-table-with-pagination.component.less\"],\n    templateUrl: \"./filtered-view-table-with-pagination.component.html\",\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithPaginationDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithPaginationComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithPaginationDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from \"@angular/core\";\nimport { DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-custom-data-source-filter-group\",\n    templateUrl: \"./custom-data-source-filter-group.component.html\",\n    styleUrls: [\"./custom-data-source-filter-group.component.less\"],\n})\nexport class CustomDataSourceFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"nui-filter-group-composite\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"nui-filter-group-composite__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between nui-filter-group-composite__checkbox\">\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"nui-filter-group-composite__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","import { IServer, ServerStatus } from \"./types\";\n\n// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: \"FOCUS-SVR-12345\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-ASD123\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-DSA331\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-JKS212\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"ABERN-SVR-ATQU9404\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-433AAD\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-098331\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-GHJ882\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LLK001\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-KKJ998\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-RRR001\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LKJF12\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-882JJS\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-7733KK\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-JSHNSA\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-KKAEQWE\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-123KKNPQ\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-RRF231\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n];\n","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-tree #child></app-filtered-view-tree>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-filtered-view-table-with-virtual-scroll-table__container {\\n    height: 400px;\\n    border-color: lightgray;\\n    overflow: auto;\\n}\\n\\n.app-filtered-view-table-with-virtual-scroll-table-scrolling-container {\\n    height: 300px;\\n}\\n\\n.app-filtered-view-table-with-virtual-scroll-table-scrolling-footer {\\n    height: 28px;\\n    .setCssVariable(background-color, nui-color-bg-transparent);\\n    .setCssVariable(color, nui-color-text-secondary);\\n}\\n\";","import { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType } from \"../../../type/definition.mjs\";\nimport { isIntrospectionType } from \"../../../type/introspection.mjs\";\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nexport function NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = getNamedType(context.getType());\n\n      if (type && isIntrospectionType(type)) {\n        context.reportError(new GraphQLError(\"GraphQL introspection has been disabled, but the requested query contained the field \\\"\".concat(node.name.value, \"\\\".\"), node));\n      }\n    }\n  };\n}\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewTableWithVirtualScrollDataSource,\\n} from \\\"./filtered-view-table-with-virtual-scroll-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-virtual-scroll\\\",\\n    styleUrls: [\\\"./filtered-view-table-with-virtual-scroll.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-table-with-virtual-scroll.component.html\\\",\\n    providers: [\\n        VirtualViewportManager,\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewTableWithVirtualScrollDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewTableWithVirtualScrollComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","export default \"<nui-schematic-docs-page schematicFolderName=\\\"table\\\">\\n    <div schematicSummary>\\n        <p>\\n            The Table schematic provides the ability to create a generic table that can cover a majority of use cases.\\n            Its main responsibility is to integrate the functionality of the <code>nui-table</code> component with other components\\n            commonly used with a table such as <code>nui-search</code> and <code>nui-paginator</code>.\\n        </p>\\n        <h2>Notable Command Line Options</h2>\\n        <nui-schematic-cli-option name=\\\"selectionMode\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"pagingMode\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"dataSource\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"enableSearch\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"enableSort\\\"></nui-schematic-cli-option>\\n    </div>\\n    <nui-tab-group schematicExamples>\\n        <nui-tab heading=\\\"Basic\\\">\\n            <h2>Basic Usage</h2>\\n            <p>\\n                This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to\\n                provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the\\n                <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n                service, which can be extended with custom filtering behavior.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=basic-table --enable-search=false --enable-sort=false</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"basic-table\\\">\\n                <app-basic-table></app-basic-table>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Sort\\\">\\n            <h2>Table Sorting</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=table-with-sort --enable-sort --enable-search=false</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"table-with-sort\\\">\\n                <app-table-with-sort></app-table-with-sort>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Search\\\">\\n            <h2>Table with Search</h2>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --p=app --name=table-with-search --enable-search --enable-sort=false</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"table-with-search\\\">\\n                <app-table-with-search></app-table-with-search>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Pagination\\\">\\n            <h2>Pagination</h2>\\n            <p>\\n                This example shows how to add pagination to <code>nui-table</code> with a remote data source.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"table/table-with-pagination\\\">\\n                <app-table-with-pagination></app-table-with-pagination>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Selection\\\">\\n            <h2>Selection</h2>\\n            <p>\\n                This example shows how to add selection to <code>nui-table</code> with a remote data source.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-pagination --p=app --pagingMode=pagination --dataSource=serverSide\\n                <strong>--selectionMode=multi</strong></nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"table/table-with-selection\\\">\\n                <app-table-with-selection></app-table-with-selection>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Virtual Scroll\\\" #vs>\\n            <h2>Virtual Scroll</h2>\\n            <p>\\n                This example shows how to add virtual scroll to <code>nui-repeat</code> with a remote data source.\\n            </p>\\n            <nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n                Since the example makes use of search and sorting filters, it's important to note that\\n                the viewport manager's paging progress must be reset each time the data is refreshed with\\n                new filtered results whenever the filters are changed.\\n            </nui-message>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"table/table-with-virtual-scroll\\\">\\n                <app-table-with-virtual-scroll *ngIf=\\\"vs.active\\\"></app-table-with-virtual-scroll>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Custom Virtual Scroll\\\" #cvs>\\n            <h2>Virtual Scroll with Custom Strategy</h2>\\n            <nui-schematic-docs-command>\\n                ng g @nova-ui/bits:table --name=table-with-virtual-scroll --p=app --pagingMode=virtualScroll --dataSource=serverSide\\n                <strong>--virtualScrollStrategy=custom</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"table/table-with-custom-virtual-scroll\\\">\\n                <app-table-with-custom-virtual-scroll *ngIf=\\\"cvs.active\\\"></app-table-with-custom-virtual-scroll>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n    </nui-tab-group>\\n</nui-schematic-docs-page>\\n\\n\";","export default \"import { InjectionToken } from \\\"@angular/core\\\";\\n// number of results to be displayed in the table\\nexport const RESULTS_PER_PAGE = 400;\\n\\nexport const CUSTOM_SCROLL_ITEMS_PER_PAGE: InjectionToken<number> = new InjectionToken(\\\"CUSTOM_SCROLL_ITEMS_PER_PAGE\\\");\\n\\n\";","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-with-list-list #child></app-filtered-view-with-list-list>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"<div nui-busy [busy]=\\\"isBusy\\\">\\n    <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Loading...\\\"></nui-spinner>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-search class=\\\"d-flex justify-content-end app-search-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"!isBusy && (listItems$ | async).length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-search-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"filteringState.repeat?.itemsSource\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-paginator class=\\\"app-search-list-paginator\\\"\\n                       [(page)]=\\\"page\\\"\\n                       [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeSet]=\\\"[10,20,30,40]\\\"\\n                       [total]=\\\"filteringState.paginator?.total\\\"\\n                       (pagerAction)=\\\"applyFilters()\\\">\\n        </nui-paginator>\\n    </div>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nexport function UniqueArgumentNamesRule(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(\"There can be only one argument named \\\"\".concat(argName, \"\\\".\"), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport objectEntries from \"../polyfills/objectEntries.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport mapValue from \"../jsutils/mapValue.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport didYouMean from \"../jsutils/didYouMean.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport identityFunc from \"../jsutils/identityFunc.mjs\";\nimport defineInspect from \"../jsutils/defineInspect.mjs\";\nimport suggestionList from \"../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { valueFromASTUntyped } from \"../utilities/valueFromASTUntyped.mjs\";\nexport function isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL type.\"));\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Scalar type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Interface type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Union type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Enum type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Input Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL List type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Non-Null type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL input type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL output type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL leaf type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL composite type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL abstract type.\"));\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: new GraphQLList(PersonType) },\n *         children: { type: new GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLList<+T: GraphQLType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLList<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLList(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLList.prototype.toString = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\nGraphQLList.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLList.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLList';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLList);\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: new GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLNonNull<+T: GraphQLNullableType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLNonNull<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLNonNull(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLNonNull.prototype.toString = function toString() {\n  return String(this.ofType) + '!';\n};\n\nGraphQLNonNull.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLNonNull.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLNonNull';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLNonNull);\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL wrapping type.\"));\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL nullable type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL named type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveThunk(thunk) {\n  // $FlowFixMe[incompatible-use]\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction undefineIfEmpty(arr) {\n  return arr && arr.length > 0 ? arr : undefined;\n}\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\n\n\nexport var GraphQLScalarType = /*#__PURE__*/function () {\n  function GraphQLScalarType(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral;\n\n    var parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : identityFunc;\n    this.name = config.name;\n    this.description = config.description;\n    this.specifiedByUrl = config.specifiedByUrl;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : function (node, variables) {\n      return parseValue(valueFromASTUntyped(node, variables));\n    };\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.specifiedByUrl == null || typeof config.specifiedByUrl === 'string' || devAssert(0, \"\".concat(this.name, \" must provide \\\"specifiedByUrl\\\" as a string, \") + \"but got: \".concat(inspect(config.specifiedByUrl), \".\"));\n    config.serialize == null || typeof config.serialize === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"serialize\\\" function. If this custom Scalar is also used as an input type, ensure \\\"parseValue\\\" and \\\"parseLiteral\\\" functions are also provided.\"));\n\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || devAssert(0, \"\".concat(this.name, \" must provide both \\\"parseValue\\\" and \\\"parseLiteral\\\" functions.\"));\n    }\n  }\n\n  var _proto = GraphQLScalarType.prototype;\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByUrl: this.specifiedByUrl,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : []\n    };\n  };\n\n  _proto.toString = function toString() {\n    return this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLScalarType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLScalarType';\n    }\n  }]);\n\n  return GraphQLScalarType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLScalarType);\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nexport var GraphQLObjectType = /*#__PURE__*/function () {\n  function GraphQLObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"isTypeOf\\\" as a function, \") + \"but got: \".concat(inspect(config.isTypeOf), \".\"));\n  }\n\n  var _proto2 = GraphQLObjectType.prototype;\n\n  _proto2.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto2.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto2.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto2.toString = function toString() {\n    return this.name;\n  };\n\n  _proto2.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLObjectType';\n    }\n  }]);\n\n  return GraphQLObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLObjectType);\n\nfunction defineInterfaces(config) {\n  var _resolveThunk;\n\n  var interfaces = (_resolveThunk = resolveThunk(config.interfaces)) !== null && _resolveThunk !== void 0 ? _resolveThunk : [];\n  Array.isArray(interfaces) || devAssert(0, \"\".concat(config.name, \" interfaces must be an Array or a function which returns an Array.\"));\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field config must be an object.\"));\n    !('isDeprecated' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field resolver must be a function if \") + \"provided, but got: \".concat(inspect(fieldConfig.resolve), \".\"));\n    var argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" args must be an object with argument names as keys.\"));\n    var args = objectEntries(argsConfig).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && toObjMap(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: args,\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      isDeprecated: fieldConfig.deprecationReason != null,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, function (field) {\n    return {\n      description: field.description,\n      type: field.type,\n      args: argsToArgsConfig(field.args),\n      resolve: field.resolve,\n      subscribe: field.subscribe,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    };\n  });\n}\n/**\n * @internal\n */\n\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(args, function (arg) {\n    return arg.name;\n  }, function (arg) {\n    return {\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    };\n  });\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nexport var GraphQLInterfaceType = /*#__PURE__*/function () {\n  function GraphQLInterfaceType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto3 = GraphQLInterfaceType.prototype;\n\n  _proto3.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto3.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto3.toConfig = function toConfig() {\n    var _this$extensionASTNod2;\n\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod2 = this.extensionASTNodes) !== null && _this$extensionASTNod2 !== void 0 ? _this$extensionASTNod2 : []\n    };\n  };\n\n  _proto3.toString = function toString() {\n    return this.name;\n  };\n\n  _proto3.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInterfaceType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInterfaceType';\n    }\n  }]);\n\n  return GraphQLInterfaceType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInterfaceType);\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLUnionType = /*#__PURE__*/function () {\n  function GraphQLUnionType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._types = defineTypes.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto4 = GraphQLUnionType.prototype;\n\n  _proto4.getTypes = function getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  };\n\n  _proto4.toConfig = function toConfig() {\n    var _this$extensionASTNod3;\n\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod3 = this.extensionASTNodes) !== null && _this$extensionASTNod3 !== void 0 ? _this$extensionASTNod3 : []\n    };\n  };\n\n  _proto4.toString = function toString() {\n    return this.name;\n  };\n\n  _proto4.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLUnionType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLUnionType';\n    }\n  }]);\n\n  return GraphQLUnionType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLUnionType);\n\nfunction defineTypes(config) {\n  var types = resolveThunk(config.types);\n  Array.isArray(types) || devAssert(0, \"Must provide Array of types or a function which returns such an array for Union \".concat(config.name, \".\"));\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport var GraphQLEnumType\n/* <T> */\n= /*#__PURE__*/function () {\n  function GraphQLEnumType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(function (enumValue) {\n      return [enumValue.value, enumValue];\n    }));\n    this._nameLookup = keyMap(this._values, function (value) {\n      return value.name;\n    });\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto5 = GraphQLEnumType.prototype;\n\n  _proto5.getValues = function getValues() {\n    return this._values;\n  };\n\n  _proto5.getValue = function getValue(name) {\n    return this._nameLookup[name];\n  };\n\n  _proto5.serialize = function serialize(outputValue) {\n    var enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent value: \").concat(inspect(outputValue)));\n    }\n\n    return enumValue.name;\n  };\n\n  _proto5.parseValue = function parseValue(inputValue)\n  /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      var valueStr = inspect(inputValue);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-string value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr));\n    }\n\n    var enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\"Value \\\"\".concat(inputValue, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, inputValue));\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.parseLiteral = function parseLiteral(valueNode, _variables)\n  /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      var valueStr = print(valueNode);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-enum value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr), valueNode);\n    }\n\n    var enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      var _valueStr = print(valueNode);\n\n      throw new GraphQLError(\"Value \\\"\".concat(_valueStr, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, _valueStr), valueNode);\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.toConfig = function toConfig() {\n    var _this$extensionASTNod4;\n\n    var values = keyValMap(this.getValues(), function (value) {\n      return value.name;\n    }, function (value) {\n      return {\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      values: values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod4 = this.extensionASTNodes) !== null && _this$extensionASTNod4 !== void 0 ? _this$extensionASTNod4 : []\n    };\n  };\n\n  _proto5.toString = function toString() {\n    return this.name;\n  };\n\n  _proto5.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLEnumType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLEnumType';\n    }\n  }]);\n\n  return GraphQLEnumType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLEnumType);\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  var allNames = enumType.getValues().map(function (value) {\n    return value.name;\n  });\n  var suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || devAssert(0, \"\".concat(typeName, \" values must be an object with value names as keys.\"));\n  return objectEntries(valueMap).map(function (_ref2) {\n    var valueName = _ref2[0],\n        valueConfig = _ref2[1];\n    isPlainObj(valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" must refer to an object with a \\\"value\\\" key \") + \"representing an internal value but got: \".concat(inspect(valueConfig), \".\"));\n    !('isDeprecated' in valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    return {\n      name: valueName,\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      isDeprecated: valueConfig.deprecationReason != null,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: valueConfig.extensions && toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nexport var GraphQLInputObjectType = /*#__PURE__*/function () {\n  function GraphQLInputObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineInputFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto6 = GraphQLInputObjectType.prototype;\n\n  _proto6.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto6.toConfig = function toConfig() {\n    var _this$extensionASTNod5;\n\n    var fields = mapValue(this.getFields(), function (field) {\n      return {\n        description: field.description,\n        type: field.type,\n        defaultValue: field.defaultValue,\n        extensions: field.extensions,\n        astNode: field.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod5 = this.extensionASTNodes) !== null && _this$extensionASTNod5 !== void 0 ? _this$extensionASTNod5 : []\n    };\n  };\n\n  _proto6.toString = function toString() {\n    return this.name;\n  };\n\n  _proto6.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInputObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInputObjectType';\n    }\n  }]);\n\n  return GraphQLInputObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInputObjectType);\n\nfunction defineInputFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    !('resolve' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field has a resolve property, but Input Types cannot define resolvers.\"));\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import objectValues from \"../../polyfills/objectValues.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { isLeafType, isInputObjectType, isListType, isNonNullType, isRequiredInputField, getNullableType, getNamedType } from \"../../type/definition.mjs\";\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n\n      var fieldNodeMap = keyMap(node.fields, function (field) {\n        return field.name.value;\n      });\n\n      for (var _i2 = 0, _objectValues2 = objectValues(type.getFields()); _i2 < _objectValues2.length; _i2++) {\n        var fieldDef = _objectValues2[_i2];\n        var fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          var typeStr = inspect(fieldDef.type);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(type.name, \".\").concat(fieldDef.name, \"\\\" of required type \\\"\").concat(typeStr, \"\\\" was not provided.\"), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = getNamedType(context.getParentInputType());\n      var fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        var suggestions = suggestionList(node.name.value, Object.keys(parentType.getFields()));\n        context.reportError(new GraphQLError(\"Field \\\"\".concat(node.name.value, \"\\\" is not defined by type \\\"\").concat(parentType.name, \"\\\".\") + didYouMean(suggestions), node));\n      }\n    },\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(inspect(type), \"\\\", found \").concat(print(node), \".\"), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      return isValidValueNode(context, node);\n    },\n    IntValue: function IntValue(node) {\n      return isValidValueNode(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidValueNode(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidValueNode(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidValueNode(context, node);\n    }\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  var type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    var typeStr = inspect(locationType);\n    context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(typeStr, \"\\\", found \").concat(print(node), \".\"), node));\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n\n  try {\n    var parseResult = type.parseLiteral(node, undefined\n    /* variables */\n    );\n\n    if (parseResult === undefined) {\n      var _typeStr = inspect(locationType);\n\n      context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(_typeStr, \"\\\", found \").concat(print(node), \".\"), node));\n    }\n  } catch (error) {\n    var _typeStr2 = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(new GraphQLError(\"Expected value of type \\\"\".concat(_typeStr2, \"\\\", found \").concat(print(node), \"; \") + error.message, node, undefined, undefined, undefined, error));\n    }\n  }\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","import zenObservable from 'zen-observable';\n\nvar Observable = zenObservable;\n\nexport default Observable;\nexport { Observable };\n//# sourceMappingURL=bundle.esm.js.map\n","export default \"/*\\nCLI commands used to generate the current examples:\\n\\nng g \\\"./schematics/src/collection.json\\\":table --force --path=demo/src/schematics/table --prefix=app\\n --name=basic-table --dataSource=clientSide --enable-search=false --enable-sort=false --pagingMode=pagination\\n\\nng g \\\"./schematics/src/collection.json\\\":table --force --path=demo/src/schematics/table --prefix=app\\n --name=table-with-sort --dataSource=serverSide --enable-search=false --enable-sort=true --pagingMode=pagination\\n\\nng g \\\"./schematics/src/collection.json\\\":table --force --path=demo/src/schematics/table --prefix=app\\n --name=table-with-search --dataSource=serverSide --enable-search=true --enable-sort=false --pagingMode=pagination\\n\\nng g \\\"./schematics/src/collection.json\\\":table --lint-fix --force --path=demo/src/schematics/table\\n --name=table-with-pagination --prefix=app --dataSource=serverSide --pagingMode=pagination\\n\\nng g \\\"./schematics/src/collection.json\\\":table --lint-fix --force\\n--name=table-with-selection  --path=demo/src/schematics/table --prefix=app --dataSource=serverSide --pagingMode=pagination --selectionMode=multi\\n\\nng g \\\"./schematics/src/collection.json\\\":table --lint-fix --force --path=demo/src/schematics/table --prefix=app\\n --name=table-with-virtual-scroll --dataSource=serverSide --pagingMode=virtualScroll\\n*/\\nimport { Component } from \\\"@angular/core\\\";\\n\\nimport { SchematicsDocsComponentType } from \\\"../utils/schematic-docs-cli-option/schematic-docs-cli-option.component\\\";\\n\\n@Component({\\n    selector: \\\"nui-table-schematics-docs-example\\\",\\n    templateUrl: \\\"table-schematic-example.component.html\\\",\\n    providers: [{provide: SchematicsDocsComponentType, useValue: SchematicsDocsComponentType.table }],\\n})\\nexport class TableSchematicExampleComponent {\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins/expander-base\\\";\\n\\n:host {\\n    .app-filtered-view-with-list-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-filtered-view-with-list-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-with-list-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-with-list-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-with-list-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\\n.nui-tree {\\n    .expander();\\n\\n    &__body {\\n        &--collapsed {\\n            overflow: hidden;\\n        }\\n    }\\n\\n    &__leaf {\\n        display: flex;\\n        align-items: center;\\n    }\\n\\n    &__invisible {\\n        display: none;\\n    }\\n}\\n\";","import { IServer, ServerStatus } from \"./types\";\n// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: \"FOCUS-SVR-12345\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-ASD123\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-DSA331\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-JKS212\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"ABERN-SVR-ATQU9404\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-433AAD\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-098331\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-GHJ882\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LLK001\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-KKJ998\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-RRR001\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LKJF12\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-882JJS\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-7733KK\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-JSHNSA\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-KKAEQWE\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-123KKNPQ\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-RRF231\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n];\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTableWithSelectionComponent } from \"./filtered-view-table-with-selection.component\";\nimport { FilteredViewTableComponent } from \"./filtered-view-table/filtered-view-table.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithSelectionModule {}\n","export default \"<div class=\\\"d-flex\\\">\\n    <div class=\\\"p-0 col-4 schematic-docs-example__files\\\">\\n        <h2 class=\\\"mt-4\\\">Source files</h2>\\n        <div *ngFor=\\\"let item of componentSources | keyvalue\\\">\\n            <nui-expander [header]=\\\"item.key\\\"\\n                          icon=\\\"group\\\">\\n                <nui-recursive-object-view [object]=\\\"item.value\\\"\\n                                           [objectTemplate]=\\\"objectTemplate\\\"\\n                                           [notObjectTemplate]=\\\"notObjectTemplate\\\">\\n                    {{item.key}}\\n                </nui-recursive-object-view>\\n            </nui-expander>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-8\\\">\\n        <h2 class=\\\"mt-4\\\">Source code</h2>\\n        <nui-expander [disabled]=\\\"!selectedFile\\\"\\n                      [open]=\\\"isSelectedFileOpen()\\\"\\n                      (openChange)=\\\"onSelectedFileOpenChange($event)\\\">\\n            <div nuiExpanderHeader>\\n                <h5 class=\\\"m-0\\\">\\n                    Selected file:\\n                    <span class=\\\"schematic-docs-example__selected-file\\\">{{ selectedFile ? selectedFile : \\\"None\\\" }}</span>\\n                </h5>\\n            </div>\\n            <div class=\\\"nui-source-inspector-code\\\">\\n                <nui-example-code *ngIf=\\\"shouldCodeRender\\\">{{ getSource(selectedFile) }}</nui-example-code>\\n            </div>\\n        </nui-expander>\\n    </div>\\n</div>\\n\\n<h2 class=\\\"mt-4\\\">Example</h2>\\n<ng-content></ng-content>\\n\\n<ng-template #objectTemplate\\n             let-item=\\\"item\\\">\\n    <nui-icon icon=\\\"xml-file\\\"></nui-icon>\\n    {{ item.key }}\\n</ng-template>\\n\\n<ng-template #notObjectTemplate\\n             let-key=\\\"item\\\">\\n    <button nui-button\\n            class=\\\"mw-100\\\"\\n            type=\\\"button\\\"\\n            displayStyle=\\\"action\\\"\\n            icon=\\\"xml-file\\\"\\n            (click)=\\\"selectFile(key)\\\">\\n        {{ key }}\\n    </button>\\n</ng-template>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"import { CdkVirtualScrollViewport } from \\\"@angular/cdk/scrolling\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    nameof,\\n    TableComponent,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    CUSTOM_SCROLL_ITEMS_PER_PAGE,\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-table-with-custom-virtual-scroll-data\\\";\\nimport { FilteredViewTableWithCustomVirtualScrollDataSource } from \\\"../filtered-view-table-with-custom-virtual-scroll-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"../types\\\";\\n\\nimport { VirtualScrollCustomStrategyService } from \\\"./virtual-scroll-custom-strategy.service\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-custom-virtual-scroll-table\\\",\\n    templateUrl: \\\"./filtered-view-table.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        VirtualViewportManager,\\n        VirtualScrollCustomStrategyService,\\n        {\\n            provide: CUSTOM_SCROLL_ITEMS_PER_PAGE,\\n            useValue: RESULTS_PER_PAGE,\\n        },\\n    ],\\n})\\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\\n\\n    // the height in px of a single row from the table\\n    public rowHeight = 40;\\n\\n    private previouslyLoadedCount: number;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithCustomVirtualScrollDataSource<IServer>,\\n        private viewportManager: VirtualViewportManager,\\n        private customVirtualScrollStrategyService: VirtualScrollCustomStrategyService,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            virtualScroll: {componentInstance: this.customVirtualScrollStrategyService },\\n        });\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.viewport);\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                let items = data.repeat?.itemsSource || [];\\n\\n                // number of fetched items from our data source\\n                const fetchedItemsCount = items.length;\\n\\n                // number of useful items after eliminating the leftovers;\\n                // leftovers appear when we reach the end of all our data\\n                // since we're keep requesting the same page multiple times\\n                // waiting for new items to be added between subsequent requests\\n                const usefulItemsCount = fetchedItemsCount < this.pageSize\\n                    ? this.previouslyLoadedCount - fetchedItemsCount\\n                    : fetchedItemsCount;\\n\\n                items = items.slice(0, usefulItemsCount);\\n\\n                this.previouslyLoadedCount = items.length;\\n\\n                // append current useful items we need to append it to our previous fetched results\\n                this.items = this.items.concat(items);\\n\\n                this.customVirtualScrollStrategyService.prepareNextPage(fetchedItemsCount);\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.items = [];\\n            this.customVirtualScrollStrategyService.reset();\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","import { Observable } from 'rxjs';\n\nconst fetch = (req, httpClient, extractFiles) => {\n    const shouldUseBody = ['POST', 'PUT', 'PATCH'].indexOf(req.method.toUpperCase()) !== -1;\n    const shouldStringify = (param) => ['variables', 'extensions'].indexOf(param.toLowerCase()) !== -1;\n    const isBatching = req.body.length;\n    let shouldUseMultipart = req.options && req.options.useMultipart;\n    let multipartInfo;\n    if (shouldUseMultipart) {\n        if (isBatching) {\n            return new Observable(observer => observer.error(new Error('File upload is not available when combined with Batching')));\n        }\n        if (!shouldUseBody) {\n            return new Observable(observer => observer.error(new Error('File upload is not available when GET is used')));\n        }\n        multipartInfo = extractFiles(req.body);\n        shouldUseMultipart = !!multipartInfo.files.size;\n    }\n    // `body` for some, `params` for others\n    let bodyOrParams = {};\n    if (isBatching) {\n        if (!shouldUseBody) {\n            return new Observable(observer => observer.error(new Error('Batching is not available for GET requests')));\n        }\n        bodyOrParams = {\n            body: req.body,\n        };\n    }\n    else {\n        const body = shouldUseMultipart ? multipartInfo.clone : req.body;\n        if (shouldUseBody) {\n            bodyOrParams = {\n                body,\n            };\n        }\n        else {\n            const params = Object.keys(req.body).reduce((obj, param) => {\n                const value = req.body[param];\n                obj[param] = shouldStringify(param) ? JSON.stringify(value) : value;\n                return obj;\n            }, {});\n            bodyOrParams = { params: params };\n        }\n    }\n    if (shouldUseMultipart && shouldUseBody) {\n        const form = new FormData();\n        form.append('operations', JSON.stringify(bodyOrParams.body));\n        const map = {};\n        const files = multipartInfo.files;\n        let i = 0;\n        files.forEach(paths => {\n            map[++i] = paths;\n        });\n        form.append('map', JSON.stringify(map));\n        i = 0;\n        files.forEach((_, file) => {\n            form.append(++i + '', file, file.name);\n        });\n        bodyOrParams.body = form;\n    }\n    // create a request\n    return httpClient.request(req.method, req.url, Object.assign(Object.assign({ observe: 'response', responseType: 'json', reportProgress: false }, bodyOrParams), req.options));\n};\nconst mergeHeaders = (source, destination) => {\n    if (source && destination) {\n        const merged = destination\n            .keys()\n            .reduce((headers, name) => headers.set(name, destination.getAll(name)), source);\n        return merged;\n    }\n    return destination || source;\n};\nfunction prioritize(...values) {\n    const picked = values.find(val => typeof val !== 'undefined');\n    if (typeof picked === 'undefined') {\n        return values[values.length - 1];\n    }\n    return picked;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { fetch, mergeHeaders, prioritize };\n\n//# sourceMappingURL=ngApolloLinkHttpCommon.js.map","export default \"<div class=\\\"nui-filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    LocalFilteringDataSource,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport { LOCAL_DATA } from \\\"./filtered-view-with-table-data\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-with-table\\\",\\n    styleUrls: [\\\"./filtered-view-with-table.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-with-table.component.html\\\",\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: LocalFilteringDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewWithTableComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n        // here we use ClientSideDataSource since the data we're working with is static (RANDOM_ARRAY)\\n        // if you have a dynamic data source, you need to extend DataSourceService for your custom filtering behavior\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","<div class=\"app-filtered-view-table-with-virtual-scroll-table__container\">\n    <cdk-virtual-scroll-viewport class=\"app-filtered-view-table-with-virtual-scroll-table-scrolling-container\" tableStickyHeader #viewportRef [itemSize]=\"rowHeight\">\n    <table nui-table [dataSource]=\"items | sliceRange: viewportRef.getRenderedRange()\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]=\"displayedColumns\"\n                         [cdkVirtualForOf]=\"items\">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class=\"app-filtered-view-table-with-virtual-scroll-table-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                    <div class=\"d-flex pt-3 pb-3\">\n                        <ng-container i18n *ngIf=\"items.length !== totalItems; else endOfData\">, scroll down for more.</ng-container>\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n","import { CdkVirtualScrollViewport } from \"@angular/cdk/scrolling\";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    nameof,\n    TableComponent,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-table-with-virtual-scroll-data\";\nimport { FilteredViewTableWithVirtualScrollDataSource } from \"../filtered-view-table-with-virtual-scroll-data-source.service\";\nimport { IServer, IServerFilters } from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-virtual-scroll-table\",\n    templateUrl: \"./filtered-view-table.component.html\",\n    styleUrls: [\"./filtered-view-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: {componentInstance: this.viewportManager},\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.viewport)\n            // Note: Initializing the stream with the desired page size, based on which\n            // VirtualViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\n                // Since we know the total number of items we can stop the stream when dataset end is reached\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                filter(() => !this.items.length || this.items.length < this.totalItems),\n                tap(() => this.applyFilters(false)),\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                switchMap(() => this.dataSource.outputsSubject.pipe(\n                    tap((data: IFilteringOutputs) => {\n                        // update the list of items to be rendered\n                        const items = data.repeat?.itemsSource || [];\n\n                        // after receiving data we need to append it to our previous fetched results\n                        this.items = this.items.concat(items);\n                        this.totalItems = data.paginator?.total || 0;\n                        this.changeDetection.detectChanges();\n                    })\n                )\n            ),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n","export default \"<div class=\\\"nui-filter-group-composite\\\" *ngIf=\\\"hasFilterOptions()\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\" (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"nui-filter-group-composite__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group\\n            [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\"\\n                          class=\\\"nui-checkbox--justified\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between nui-filter-group-composite__checkbox\\\">\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"nui-filter-group-composite__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    nameof,\\n    PaginatorComponent,\\n    SearchComponent,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    debounceTime,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-search-data\\\";\\nimport { TableWithSearchDataSource } from \\\"./table-with-search-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-table-with-search\\\",\\n    templateUrl: \\\"./table-with-search.component.html\\\",\\n    styleUrls: [\\\"./table-with-search.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: TableWithSearchDataSource,\\n        },\\n    ],\\n})\\nexport class TableWithSearchComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // search\\n    public searchTerm: string;\\n    public columnsToApplySearch = [\\\"name\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: TableWithSearchDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            search: { componentInstance: this.search },\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // listen for input change in order to perform the search\\n        this.search.inputChange.pipe(\\n            debounceTime(500),\\n            // perform actual search\\n            tap(() => this.onSearch()),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onSearchCancel() {\\n        await this.applyFilters();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"<div nui-busy [busy]=\\\"isBusy\\\">\\n    <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Loading...\\\"></nui-spinner>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-sorter class=\\\"app-filtered-view-list-with-pagination-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-filtered-view-list-with-pagination-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"!isBusy && (listItems$ | async).length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-filtered-view-list-with-pagination-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"filteringState.repeat?.itemsSource\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-paginator class=\\\"app-filtered-view-list-with-pagination-list-paginator\\\"\\n                       [(page)]=\\\"page\\\"\\n                       [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeSet]=\\\"[10,20,30,40]\\\"\\n                       [total]=\\\"filteringState.paginator?.total\\\"\\n                       (pagerAction)=\\\"applyFilters()\\\">\\n        </nui-paginator>\\n    </div>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.nui-schematic-docs-examples {\\n    margin-top: @nui-space-sm\\n}\\n\";","<div class=\"mt-2 nui-edge-definer\">\n    <nui-panel>\n        <div nuiPanelEmbeddedBody>\n            <app-filter-groups-wrapper>\n                <app-filter-group *ngFor=\"let filterGroupItem of filterGroupItems\"\n                                            [filterGroupItem]=\"filterGroupItem\"\n                                            (filterChanged)=\"applyFilters()\"\n                                            ></app-filter-group>\n            </app-filter-groups-wrapper>\n        </div>\n        <div class=\"ml-2\">\n            <div>\n                <nui-chips [itemsSource]=\"chipsDataSource\"\n                           [overflow]=\"true\"\n                           (chipRemoved)=\"onClear($event)\"\n                           (removeAll)=\"onClearAll($event)\"\n                           (chipsOverflowed)=\"onChipsOverflow($event)\">\n                    <div class=\"nui-chips-overflowed\" #overflowCounterLabel *ngIf=\"overflowCounter > 0\">\n                        <nui-popover trigger=\"click\"\n                                     [popoverOverlayPosition]=\"overflowPopoverPosition\"\n                                     [template]=\"popoverWithClickTrigger\">\n                            <a class=\"nui-chips-overflowed__counter\">+{{ overflowCounter }}</a>\n                        </nui-popover>\n                    </div>\n                </nui-chips>\n\n                <ng-template #popoverWithClickTrigger>\n                    <nui-chips-overflow\n                            [overflowSource]=\"overflowSource\"\n                            [itemsSource]=\"chipsDataSource\"\n                            (chipRemoved)=\"onClear($event)\"\n                            orientation=\"vertical\">\n                    </nui-chips-overflow>\n                </ng-template>\n            </div>\n            <app-filtered-view-table-with-virtual-scroll-table #child></app-filtered-view-table-with-virtual-scroll-table>\n        </div>\n    </nui-panel>\n</div>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    QueryList,\n    ViewChild,\n    ViewChildren,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IChipsGroup,\n    IChipsItem,\n    IChipsItemsSource,\n    IFilteringOutputs,\n    INovaFilteringOutputs,\n    PopoverComponent,\n    PopoverOverlayPosition,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport _pull from \"lodash/pull\";\nimport { Subscription } from \"rxjs\";\n\nimport { FilterGroupComponent } from \"./filter-group/filter-group.component\";\nimport { IFilterGroupItem } from \"./filter-group/public-api\";\nimport {\n    FilteredViewTableWithVirtualScrollDataSource,\n} from \"./filtered-view-table-with-virtual-scroll-data-source.service\";\nimport {\n    IFilterable,\n    IServer,\n    ServerStatus,\n} from \"./types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-virtual-scroll\",\n    styleUrls: [\"./filtered-view-table-with-virtual-scroll.component.less\"],\n    templateUrl: \"./filtered-view-table-with-virtual-scroll.component.html\",\n    providers: [\n        VirtualViewportManager,\n        {\n            provide: DataSourceService,\n            useClass: FilteredViewTableWithVirtualScrollDataSource,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewTableWithVirtualScrollComponent implements AfterViewInit, OnDestroy {\n    public filterGroupItems: IFilterGroupItem[] = [\n        {\n            id: \"status\",\n            title: \"Status\",\n            expanded: true,\n            allFilterOptions: [\n                {\n                    value: ServerStatus.down,\n                    displayValue: \"Down\",\n                },\n                {\n                    value: ServerStatus.active,\n                    displayValue: \"Active\",\n                },\n            ],\n            selectedFilterValues: [],\n        }, {\n            id: \"location\",\n            title: \"Location\",\n            allFilterOptions: [\n                {\n                    value: \"Austin\",\n                    displayValue: \"Austin\",\n                },\n                {\n                    value: \"Brno\",\n                    displayValue: \"Brno\",\n                },\n                {\n                    value: \"Bucharest\",\n                    displayValue: \"Bucharest\",\n                },\n                {\n                    value: \"Kyiv\",\n                    displayValue: \"Kyiv\",\n                },\n                {\n                    value: \"London\",\n                    displayValue: \"London\",\n                },\n            ],\n            selectedFilterValues: [],\n        },\n    ];\n\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\n    public overflowCounter: number;\n    public overflowSource: IChipsItemsSource;\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\n    private outputsSubscription: Subscription;\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\n    @ViewChild(\"child\") private child: IFilterable;\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\n\n    constructor(\n        // inject dataSource providers only to share the same instance\n        // using DI descendants inheritance with child components\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollDataSource<IServer>,\n        private cd: ChangeDetectorRef\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\n            this.recalculateCounts(data);\n            this.cd.detectChanges();\n        });\n    }\n\n    public async applyFilters() {\n        await this.child.applyFilters();\n        this.updateChips();\n    }\n\n    public onChipsOverflow(source: IChipsItemsSource) {\n        this.overflowSource = source;\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\n        this.popover?.updatePosition();\n    }\n\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\n        if (event.group) {\n            _pull(event.group.items || [], event.item);\n        } else {\n            _pull(this.chipsDataSource.flatItems || [], event.item);\n        }\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\n        group?.deselectFilterItemByValue(event.item.label);\n    }\n\n    public onClearAll(e: MouseEvent) {\n        this.chipsDataSource.groupedItems = [];\n        this.popover?.onClick(e);\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\n    }\n\n    private updateChips() {\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\n            {\n                id: i.id,\n                label: i.title,\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\n            }\n        ));\n        this.cd.markForCheck();\n    }\n\n    private recalculateCounts(filterData: IFilteringOutputs) {\n        this.filterGroupItems.forEach(filterGroupItem => {\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\n                const counts = filterData[filterGroupItem.id];\n                filterOption.count = counts[filterOption.value] ?? 0;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.outputsSubscription.unsubscribe();\n    }\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport mapValue from \"../jsutils/mapValue.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { TokenKind } from \"../language/tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"../language/blockString.mjs\";\nimport { isTypeDefinitionNode, isTypeExtensionNode } from \"../language/predicates.mjs\";\nimport { assertValidSDLExtension } from \"../validation/validate.mjs\";\nimport { getDirectiveValues } from \"../execution/values.mjs\";\nimport { assertSchema, GraphQLSchema } from \"../type/schema.mjs\";\nimport { specifiedScalarTypes, isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { introspectionTypes, isIntrospectionType } from \"../type/introspection.mjs\";\nimport { GraphQLDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective } from \"../type/directives.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isListType, isNonNullType, isEnumType, isInputObjectType, GraphQLList, GraphQLNonNull, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType } from \"../type/definition.mjs\";\nimport { valueFromAST } from \"./valueFromAST.mjs\";\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n *\n * Accepts options as a third argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function extendSchema(schema, documentAST, options) {\n  assertSchema(schema);\n  documentAST != null && documentAST.kind === Kind.DOCUMENT || devAssert(0, 'Must provide valid Document AST.');\n\n  if ((options === null || options === void 0 ? void 0 : options.assumeValid) !== true && (options === null || options === void 0 ? void 0 : options.assumeValidSDL) !== true) {\n    assertValidSDLExtension(documentAST, schema);\n  }\n\n  var schemaConfig = schema.toConfig();\n  var extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig ? schema : new GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nexport function extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefs = [];\n  var typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  var directiveDefs = [];\n  var schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  var schemaExtensions = [];\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var def = _documentAST$definiti2[_i2];\n\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (isTypeExtensionNode(def)) {\n      var extendedTypeName = def.name.value;\n      var existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions ? existingTypeExtensions.concat([def]) : [def];\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n\n  if (Object.keys(typeExtensionsMap).length === 0 && typeDefs.length === 0 && directiveDefs.length === 0 && schemaExtensions.length === 0 && schemaDef == null) {\n    return schemaConfig;\n  }\n\n  var typeMap = Object.create(null);\n\n  for (var _i4 = 0, _schemaConfig$types2 = schemaConfig.types; _i4 < _schemaConfig$types2.length; _i4++) {\n    var existingType = _schemaConfig$types2[_i4];\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (var _i6 = 0; _i6 < typeDefs.length; _i6++) {\n    var _stdTypeMap$name;\n\n    var typeNode = typeDefs[_i6];\n    var name = typeNode.name.value;\n    typeMap[name] = (_stdTypeMap$name = stdTypeMap[name]) !== null && _stdTypeMap$name !== void 0 ? _stdTypeMap$name : buildType(typeNode);\n  }\n\n  var operationTypes = _objectSpread(_objectSpread({\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription: schemaConfig.subscription && replaceNamedType(schemaConfig.subscription)\n  }, schemaDef && getOperationTypes([schemaDef])), getOperationTypes(schemaExtensions)); // Then produce and return a Schema config with these types.\n\n\n  return _objectSpread(_objectSpread({\n    description: (_schemaDef = schemaDef) === null || _schemaDef === void 0 ? void 0 : (_schemaDef$descriptio = _schemaDef.description) === null || _schemaDef$descriptio === void 0 ? void 0 : _schemaDef$descriptio.value\n  }, operationTypes), {}, {\n    types: objectValues(typeMap),\n    directives: [].concat(schemaConfig.directives.map(replaceDirective), directiveDefs.map(buildDirective)),\n    extensions: undefined,\n    astNode: (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0 ? _schemaDef2 : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid: (_options$assumeValid = options === null || options === void 0 ? void 0 : options.assumeValid) !== null && _options$assumeValid !== void 0 ? _options$assumeValid : false\n  }); // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new GraphQLList(replaceType(type.ofType));\n    }\n\n    if (isNonNullType(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new GraphQLNonNull(replaceType(type.ofType));\n    }\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    var config = directive.toConfig();\n    return new GraphQLDirective(_objectSpread(_objectSpread({}, config), {}, {\n      args: mapValue(config.args, extendArg)\n    }));\n  }\n\n  function extendNamedType(type) {\n    if (isIntrospectionType(type) || isSpecifiedScalarType(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if (isScalarType(type)) {\n      return extendScalarType(type);\n    }\n\n    if (isObjectType(type)) {\n      return extendObjectType(type);\n    }\n\n    if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if (isUnionType(type)) {\n      return extendUnionType(type);\n    }\n\n    if (isEnumType(type)) {\n      return extendEnumType(type);\n    } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n    if (isInputObjectType(type)) {\n      return extendInputObjectType(type);\n    } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n    false || invariant(0, 'Unexpected type: ' + inspect(type));\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co !== void 0 ? _typeExtensionsMap$co : [];\n    return new GraphQLInputObjectType(_objectSpread(_objectSpread({}, config), {}, {\n      fields: function fields() {\n        return _objectSpread(_objectSpread({}, mapValue(config.fields, function (field) {\n          return _objectSpread(_objectSpread({}, field), {}, {\n            type: replaceType(field.type)\n          });\n        })), buildInputFieldMap(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null && _typeExtensionsMap$ty !== void 0 ? _typeExtensionsMap$ty : [];\n    return new GraphQLEnumType(_objectSpread(_objectSpread({}, config), {}, {\n      values: _objectSpread(_objectSpread({}, config.values), buildEnumValueMap(extensions)),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co2 !== void 0 ? _typeExtensionsMap$co2 : [];\n    var specifiedByUrl = config.specifiedByUrl;\n\n    for (var _i8 = 0; _i8 < extensions.length; _i8++) {\n      var _getSpecifiedByUrl;\n\n      var extensionNode = extensions[_i8];\n      specifiedByUrl = (_getSpecifiedByUrl = getSpecifiedByUrl(extensionNode)) !== null && _getSpecifiedByUrl !== void 0 ? _getSpecifiedByUrl : specifiedByUrl;\n    }\n\n    return new GraphQLScalarType(_objectSpread(_objectSpread({}, config), {}, {\n      specifiedByUrl: specifiedByUrl,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co3 !== void 0 ? _typeExtensionsMap$co3 : [];\n    return new GraphQLObjectType(_objectSpread(_objectSpread({}, config), {}, {\n      interfaces: function interfaces() {\n        return [].concat(type.getInterfaces().map(replaceNamedType), buildInterfaces(extensions));\n      },\n      fields: function fields() {\n        return _objectSpread(_objectSpread({}, mapValue(config.fields, extendField)), buildFieldMap(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co4 !== void 0 ? _typeExtensionsMap$co4 : [];\n    return new GraphQLInterfaceType(_objectSpread(_objectSpread({}, config), {}, {\n      interfaces: function interfaces() {\n        return [].concat(type.getInterfaces().map(replaceNamedType), buildInterfaces(extensions));\n      },\n      fields: function fields() {\n        return _objectSpread(_objectSpread({}, mapValue(config.fields, extendField)), buildFieldMap(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co5 !== void 0 ? _typeExtensionsMap$co5 : [];\n    return new GraphQLUnionType(_objectSpread(_objectSpread({}, config), {}, {\n      types: function types() {\n        return [].concat(type.getTypes().map(replaceNamedType), buildUnionTypes(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendField(field) {\n    return _objectSpread(_objectSpread({}, field), {}, {\n      type: replaceType(field.type),\n      // $FlowFixMe[incompatible-call]\n      args: mapValue(field.args, extendArg)\n    });\n  }\n\n  function extendArg(arg) {\n    return _objectSpread(_objectSpread({}, arg), {}, {\n      type: replaceType(arg.type)\n    });\n  }\n\n  function getOperationTypes(nodes) {\n    var opTypes = {};\n\n    for (var _i10 = 0; _i10 < nodes.length; _i10++) {\n      var _node$operationTypes;\n\n      var node = nodes[_i10];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n      for (var _i12 = 0; _i12 < operationTypesNodes.length; _i12++) {\n        var operationType = operationTypesNodes[_i12];\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    } // Note: While this could make early assertions to get the correctly\n    // typed values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    var name = node.name.value;\n    var type = (_stdTypeMap$name2 = stdTypeMap[name]) !== null && _stdTypeMap$name2 !== void 0 ? _stdTypeMap$name2 : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(\"Unknown type: \\\"\".concat(name, \"\\\".\"));\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === Kind.LIST_TYPE) {\n      return new GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === Kind.NON_NULL_TYPE) {\n      return new GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var locations = node.locations.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return new GraphQLDirective({\n      name: node.name.value,\n      description: getDescription(node, options),\n      locations: locations,\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    var fieldConfigMap = Object.create(null);\n\n    for (var _i14 = 0; _i14 < nodes.length; _i14++) {\n      var _node$fields;\n\n      var node = nodes[_i14];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var nodeFields = (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n\n      for (var _i16 = 0; _i16 < nodeFields.length; _i16++) {\n        var field = nodeFields[_i16];\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description: getDescription(field, options),\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var argsNodes = args !== null && args !== void 0 ? args : [];\n    var argConfigMap = Object.create(null);\n\n    for (var _i18 = 0; _i18 < argsNodes.length; _i18++) {\n      var arg = argsNodes[_i18];\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      var type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type: type,\n        description: getDescription(arg, options),\n        defaultValue: valueFromAST(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    var inputFieldMap = Object.create(null);\n\n    for (var _i20 = 0; _i20 < nodes.length; _i20++) {\n      var _node$fields2;\n\n      var node = nodes[_i20];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var fieldsNodes = (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0 ? _node$fields2 : [];\n\n      for (var _i22 = 0; _i22 < fieldsNodes.length; _i22++) {\n        var field = fieldsNodes[_i22];\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        var type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type: type,\n          description: getDescription(field, options),\n          defaultValue: valueFromAST(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    var enumValueMap = Object.create(null);\n\n    for (var _i24 = 0; _i24 < nodes.length; _i24++) {\n      var _node$values;\n\n      var node = nodes[_i24];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var valuesNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n\n      for (var _i26 = 0; _i26 < valuesNodes.length; _i26++) {\n        var value = valuesNodes[_i26];\n        enumValueMap[value.name.value] = {\n          description: getDescription(value, options),\n          deprecationReason: getDeprecationReason(value),\n          astNode: value\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    var interfaces = [];\n\n    for (var _i28 = 0; _i28 < nodes.length; _i28++) {\n      var _node$interfaces;\n\n      var node = nodes[_i28];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var interfacesNodes = (_node$interfaces = node.interfaces) !== null && _node$interfaces !== void 0 ? _node$interfaces : [];\n\n      for (var _i30 = 0; _i30 < interfacesNodes.length; _i30++) {\n        var type = interfacesNodes[_i30];\n        // Note: While this could make assertions to get the correctly typed\n        // values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable\n        // results.\n        interfaces.push(getNamedType(type));\n      }\n    }\n\n    return interfaces;\n  }\n\n  function buildUnionTypes(nodes) {\n    var types = [];\n\n    for (var _i32 = 0; _i32 < nodes.length; _i32++) {\n      var _node$types;\n\n      var node = nodes[_i32];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var typeNodes = (_node$types = node.types) !== null && _node$types !== void 0 ? _node$types : [];\n\n      for (var _i34 = 0; _i34 < typeNodes.length; _i34++) {\n        var type = typeNodes[_i34];\n        // Note: While this could make assertions to get the correctly typed\n        // values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable\n        // results.\n        types.push(getNamedType(type));\n      }\n    }\n\n    return types;\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    var name = astNode.name.value;\n    var description = getDescription(astNode, options);\n    var extensionNodes = (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null && _typeExtensionsMap$na !== void 0 ? _typeExtensionsMap$na : [];\n\n    switch (astNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        {\n          var extensionASTNodes = extensionNodes;\n          var allNodes = [astNode].concat(extensionASTNodes);\n          return new GraphQLObjectType({\n            name: name,\n            description: description,\n            interfaces: function interfaces() {\n              return buildInterfaces(allNodes);\n            },\n            fields: function fields() {\n              return buildFieldMap(allNodes);\n            },\n            astNode: astNode,\n            extensionASTNodes: extensionASTNodes\n          });\n        }\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes = extensionNodes;\n\n          var _allNodes = [astNode].concat(_extensionASTNodes);\n\n          return new GraphQLInterfaceType({\n            name: name,\n            description: description,\n            interfaces: function interfaces() {\n              return buildInterfaces(_allNodes);\n            },\n            fields: function fields() {\n              return buildFieldMap(_allNodes);\n            },\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes\n          });\n        }\n\n      case Kind.ENUM_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes2 = extensionNodes;\n\n          var _allNodes2 = [astNode].concat(_extensionASTNodes2);\n\n          return new GraphQLEnumType({\n            name: name,\n            description: description,\n            values: buildEnumValueMap(_allNodes2),\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes2\n          });\n        }\n\n      case Kind.UNION_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes3 = extensionNodes;\n\n          var _allNodes3 = [astNode].concat(_extensionASTNodes3);\n\n          return new GraphQLUnionType({\n            name: name,\n            description: description,\n            types: function types() {\n              return buildUnionTypes(_allNodes3);\n            },\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes3\n          });\n        }\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes4 = extensionNodes;\n          return new GraphQLScalarType({\n            name: name,\n            description: description,\n            specifiedByUrl: getSpecifiedByUrl(astNode),\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes4\n          });\n        }\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes5 = extensionNodes;\n\n          var _allNodes4 = [astNode].concat(_extensionASTNodes5);\n\n          return new GraphQLInputObjectType({\n            name: name,\n            description: description,\n            fields: function fields() {\n              return buildInputFieldMap(_allNodes4);\n            },\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes5\n          });\n        }\n    } // istanbul ignore next (Not reachable. All possible type definition nodes have been considered)\n\n\n    false || invariant(0, 'Unexpected type definition node: ' + inspect(astNode));\n  }\n}\nvar stdTypeMap = keyMap(specifiedScalarTypes.concat(introspectionTypes), function (type) {\n  return type.name;\n});\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  var deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node);\n  return deprecated === null || deprecated === void 0 ? void 0 : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByUrl.\n */\n\n\nfunction getSpecifiedByUrl(node) {\n  var specifiedBy = getDirectiveValues(GraphQLSpecifiedByDirective, node);\n  return specifiedBy === null || specifiedBy === void 0 ? void 0 : specifiedBy.url;\n}\n/**\n * Given an ast node, returns its string description.\n * @deprecated: provided to ease adoption and will be removed in v16.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\n\n\nexport function getDescription(node, options) {\n  if (node.description) {\n    return node.description.value;\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n    var rawValue = getLeadingCommentBlock(node);\n\n    if (rawValue !== undefined) {\n      return dedentBlockStringValue('\\n' + rawValue);\n    }\n  }\n}\n\nfunction getLeadingCommentBlock(node) {\n  var loc = node.loc;\n\n  if (!loc) {\n    return;\n  }\n\n  var comments = [];\n  var token = loc.startToken.prev;\n\n  while (token != null && token.kind === TokenKind.COMMENT && token.next && token.prev && token.line + 1 === token.next.line && token.line !== token.prev.line) {\n    var value = String(token.value);\n    comments.push(value);\n    token = token.prev;\n  }\n\n  return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Output,\n} from \"@angular/core\";\nimport { ISelection, NuiActiveDialog, SelectorService } from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\n@Component({\n    selector: \"app-filter-group-dialog\",\n    templateUrl: \"./filter-group-dialog.component.html\",\n    styleUrls: [\"./filter-group-dialog.component.less\"],\n})\nexport class FilterGroupDialogComponent {\n    @Input() title: string;\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\n    @Input() selectedValues: string[] = [];\n\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\n\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\n\n    public acceptDialogFilters() {\n        this.dialogClosed.emit(this.selectedValues);\n        this.closeDialog();\n    }\n\n    public closeDialog() {\n        this.activeDialog.close();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\n        this.selectedValues = selectedOptions.map((item) => item.value);\n    }\n}\n","<div class=\"filter-group-dialog\">\n    <nui-dialog-header [title]=\"title\" (closed)=\"closeDialog()\"></nui-dialog-header>\n    <div class=\"filter-group-dialog__body\">\n        <app-item-picker\n            [itemPickerOptions]=\"itemPickerOptions\"\n            [selectedValues]=\"selectedValues\"\n            (selectionChanged)=\"onSelectionChanged($event)\"></app-item-picker>\n    </div>\n    <nui-dialog-footer>\n        <button nui-button type=\"button\"\n                (click)=\"closeDialog()\" i18n>\n            Cancel\n        </button>\n        <button nui-button type=\"button\"\n                displayStyle=\"primary\"\n                (click)=\"acceptDialogFilters()\" i18n>\n            Save\n        </button>\n    </nui-dialog-footer>\n</div>\n\n","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./filtered-view-table-with-custom-virtual-scroll-data\\\";\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewTableWithCustomVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewTableWithCustomVirtualScrollDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewTableWithCustomVirtualScrollDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 400;\n\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { getOperationDefinition, isEqual, tryFunctionOrLogError, cloneDeep, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, canUseWeakMap, graphQLResultHasError, removeConnectionDirectiveFromDocument, hasClientExports, getDefaultValues, getOperationName } from 'apollo-utilities';\nimport { Observable as Observable$1, execute, ApolloLink } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(__assign(__assign({}, result), { stale: false }));\n        }\n        return __assign(__assign({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign(__assign({}, this.variables), variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, __assign(__assign({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery, 2) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = __assign(__assign({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && isEqual(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !isEqual(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 3) : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        process.env.NODE_ENV === \"production\" ? invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 19) : invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 'Internal Error: may not update existing query string in store');\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in a query but no ApolloClient resolvers ' +\n                'were specified. This means ApolloClient local resolver handling ' +\n                'has been disabled, and @client directives will be passed through ' +\n                'to your link chain.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false, 6) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment, 7) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation, 9) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 10) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    process.env.NODE_ENV === \"production\" || invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                process.env.NODE_ENV === \"production\" || invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby', 11) : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query, 12) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 13) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 14) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 15) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery, 17) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 18) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = tryFunctionOrLogError(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: getOperationName(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    tryFunctionOrLogError(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.10\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(4) : new InvariantError(\"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n                \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n                \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 5) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Calling the initQueryManager method is no longer necessary, ' +\n            'and it will be removed from ApolloClient in version 3.0.');\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ApolloError, FetchType, NetworkStatus, ObservableQuery, isApolloError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","import arrayFrom from \"../../polyfills/arrayFrom.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport naturalCompare from \"../../jsutils/naturalCompare.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isObjectType, isInterfaceType, isAbstractType } from \"../../type/definition.mjs\";\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n\n      if (type) {\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          var suggestion = didYouMean('to use an inline fragment on', getSuggestedTypeNames(schema, type, fieldName)); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n\n          context.reportError(new GraphQLError(\"Cannot query field \\\"\".concat(fieldName, \"\\\" on type \\\"\").concat(type.name, \"\\\".\") + suggestion, node));\n        }\n      }\n    }\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  var suggestedTypes = new Set();\n  var usageCount = Object.create(null);\n\n  for (var _i2 = 0, _schema$getPossibleTy2 = schema.getPossibleTypes(type); _i2 < _schema$getPossibleTy2.length; _i2++) {\n    var possibleType = _schema$getPossibleTy2[_i2];\n\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (var _i4 = 0, _possibleType$getInte2 = possibleType.getInterfaces(); _i4 < _possibleType$getInte2.length; _i4++) {\n      var _usageCount$possibleI;\n\n      var possibleInterface = _possibleType$getInte2[_i4];\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] = ((_usageCount$possibleI = usageCount[possibleInterface.name]) !== null && _usageCount$possibleI !== void 0 ? _usageCount$possibleI : 0) + 1;\n    }\n  }\n\n  return arrayFrom(suggestedTypes).sort(function (typeA, typeB) {\n    // Suggest both interface and object types based on how common they are.\n    var usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n    if (usageCountDiff !== 0) {\n      return usageCountDiff;\n    } // Suggest super types first followed by subtypes\n\n\n    if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n      return -1;\n    }\n\n    if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n      return 1;\n    }\n\n    return naturalCompare(typeA.name, typeB.name);\n  }).map(function (x) {\n    return x.name;\n  });\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n\n  return [];\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nexport function NoUnusedVariablesRule(context) {\n  var variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (var _i4 = 0, _variableDefs2 = variableDefs; _i4 < _variableDefs2.length; _i4++) {\n          var variableDef = _variableDefs2[_i4];\n          var variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(variableName, \"\\\" is never used in operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(variableName, \"\\\" is never used.\"), variableDef));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start))\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithSelectionDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithPaginationDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithPaginationDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTableWithPaginationComponent } from \"./filtered-view-table-with-pagination.component\";\nimport { FilteredViewTableComponent } from \"./filtered-view-table/filtered-view-table.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithPaginationComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithPaginationComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithPaginationModule {}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-filtered-view-list-with-virtual-scroll-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n        // it is very important to have a height for virtual scroll\\n        height: 300px;\\n    }\\n\\n    .app-filtered-view-list-with-virtual-scroll-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-list-with-virtual-scroll-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-filtered-view-list-with-virtual-scroll-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n}\\n\";","/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev: prev,\n    key: key,\n    typename: typename\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  var flattened = [];\n  var curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTableWithVirtualScrollSelectionComponent } from \"./filtered-view-table-with-virtual-scroll-selection.component\";\nimport { FilteredViewTableComponent } from \"./filtered-view-table/filtered-view-table.component\";\n\n@NgModule({\n    imports: [\n        ScrollingModule,\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithVirtualScrollSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithVirtualScrollSelectionComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithVirtualScrollSelectionModule {}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewTableWithSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        if (filters.search?.value) {\n            params = params.set(\"searchField\", \"name\");\n            params = params.set(\"searchContent\", filters.search?.value ?? \"\");\n        }\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewTableWithSelectionDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewTableWithSelectionDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nexport function NoUnusedFragmentsRule(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n\n        for (var _i2 = 0; _i2 < operationDefs.length; _i2++) {\n          var operation = operationDefs[_i2];\n\n          for (var _i4 = 0, _context$getRecursive2 = context.getRecursivelyReferencedFragments(operation); _i4 < _context$getRecursive2.length; _i4++) {\n            var fragment = _context$getRecursive2[_i4];\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (var _i6 = 0; _i6 < fragmentDefs.length; _i6++) {\n          var fragmentDef = fragmentDefs[_i6];\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(\"Fragment \\\"\".concat(fragName, \"\\\" is never used.\"), fragmentDef));\n          }\n        }\n      }\n    }\n  };\n}\n","<div class=\"app-table-with-search__container\">\n    <div class=\"app-table-with-search-searchable__search\">\n        <nui-search [value]=\"searchTerm\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onSearchCancel()\">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]=\"items\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <footer class=\"app-table-with-search-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-search-data\";\nimport { TableWithSearchDataSource } from \"./table-with-search-data-source.service\";\nimport { IServer, IServerFilters } from \"./types\";\n\n@Component({\n    selector: \"app-table-with-search\",\n    templateUrl: \"./table-with-search.component.html\",\n    styleUrls: [\"./table-with-search.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithSearchDataSource,\n        },\n    ],\n})\nexport class TableWithSearchComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = [\"name\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithSearchDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","export default \"<ng-template #emptyListTemplate>\\n    <div class=\\\"d-flex flex-column align-items-center\\\">\\n        <nui-image [isWatermark]=\\\"true\\\" image=\\\"no-data-to-show\\\"></nui-image>\\n        <p class=\\\"nui-text-small\\\">No data to show</p>\\n    </div>\\n</ng-template>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n    <div>{{item.status}}</div>\\n</ng-template>\\n\\n<nui-panel>\\n    <div nuiPanelEmbeddedBody>\\n        <app-basic-filter-groups-wrapper>\\n            <app-basic-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                        [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                        (filterChanged)=\\\"changeFilters($event)\\\"></app-basic-filter-group>\\n        </app-basic-filter-groups-wrapper>\\n    </div>\\n    <div>\\n        <div *ngIf=\\\"hasItems(); else emptyListTemplate\\\">\\n            <nui-repeat id=\\\"nui-composites-demo-repeat\\\"\\n                        [itemsSource]=\\\"filteringState.repeat.itemsSource\\\"\\n                        [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                        paddingSize=\\\"normal\\\">\\n            </nui-repeat>\\n        </div>\\n    </div>\\n</nui-panel>\\n\";","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nexport default function promiseForObject(object) {\n  var keys = Object.keys(object);\n  var valuesAndPromises = keys.map(function (name) {\n    return object[name];\n  });\n  return Promise.all(valuesAndPromises).then(function (values) {\n    return values.reduce(function (resolvedObject, value, i) {\n      resolvedObject[keys[i]] = value;\n      return resolvedObject;\n    }, Object.create(null));\n  });\n}\n","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { CustomTemplateFilterGroupCompositeComponent } from \\\"../custom-template-filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-custom-template-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\n\\nexport class CustomTemplateFilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(CustomTemplateFilterGroupCompositeComponent) filterGroups: QueryList<CustomTemplateFilterGroupCompositeComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomTemplateFilterGroupCompositeComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","import { GraphQLError } from \"../error/GraphQLError.mjs\";\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    var queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError('Schema does not define the required query root type.', operation);\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    var mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', operation);\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    var subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', operation);\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError('Can only have query, mutation and subscription operations.', operation);\n}\n","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    nameof,\\n    PaginatorComponent,\\n    RepeatComponent,\\n    SearchComponent,\\n    SorterComponent,\\n    SorterDirection,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    BehaviorSubject,\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./paginated-list-data\\\";\\nimport { PaginatedListDataSource } from \\\"./paginated-list-data-source.service\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-paginated-list\\\",\\n    templateUrl: \\\"./paginated-list.component.html\\\",\\n    styleUrls: [\\\"./paginated-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: PaginatedListDataSource,\\n        },\\n    ],\\n})\\nexport class PaginatedListComponent implements OnInit, AfterViewInit, OnDestroy {\\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n    public isBusy = false;\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: PaginatedListDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.listItems$.next(data.repeat?.itemsSource || []);\\n\\n                this.filteringState = data;\\n\\n                this.totalItems = data.paginator?.total ?? 0;\\n\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // make 1st call to retrieve initial results\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","export default \"<h2>Selection result</h2>\\n<div class=\\\"flex-row-container\\\">\\n    <span class=\\\"flex-independent-row-item\\\">{{selection | json}}</span>\\n</div>\\n<div class=\\\"app-table-with-selection__container\\\">\\n    <div class=\\\"app-table-with-selection-searchable__search\\\">\\n        <nui-search [value]=\\\"searchTerm\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onSearchCancel()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <table nui-table [dataSource]=\\\"items\\\"\\n           [sortable]=\\\"true\\\"\\n           [sortedColumn]=\\\"sortedColumn\\\"\\n           (sortOrderChanged)=\\\"sortData($event)\\\"\\n           [(selection)]=\\\"selection\\\"\\n           (selectionChange)=\\\"onSelectionChanged($event)\\\"\\n           [selectable]=\\\"true\\\"\\n           [trackBy]=\\\"trackBy\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\" [rowObject]=\\\"row\\\"></tr>\\n    </table>\\n\\n    <footer class=\\\"app-table-with-selection-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","// number of results to be displayed\nexport const RESULTS_PER_PAGE = 400;\n\n","/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nexport function concatAST(documents) {\n  var definitions = [];\n\n  for (var _i2 = 0; _i2 < documents.length; _i2++) {\n    var doc = documents[_i2];\n    definitions = definitions.concat(doc.definitions);\n  }\n\n  return {\n    kind: 'Document',\n    definitions: definitions\n  };\n}\n","export { extractFiles } from './extractFiles.mjs'\nexport { ReactNativeFile } from './ReactNativeFile.mjs'\nexport { isExtractableFile } from './isExtractableFile.mjs'\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-virtual-scroll-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n        // it is very important to have a height for virtual scroll\\n        height: 300px;\\n    }\\n\\n    .app-virtual-scroll-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-virtual-scroll-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-virtual-scroll-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n}\\n\";","// This currentContext variable will only be used if the makeSlotClass\r\n// function is called, which happens only if this is the first copy of the\r\n// @wry/context package to be imported.\r\nvar currentContext = null;\r\n// This unique internal object is used to denote the absence of a value\r\n// for a given Slot, and is never exposed to outside code.\r\nvar MISSING_VALUE = {};\r\nvar idCounter = 1;\r\n// Although we can't do anything about the cost of duplicated code from\r\n// accidentally bundling multiple copies of the @wry/context package, we can\r\n// avoid creating the Slot class more than once using makeSlotClass.\r\nvar makeSlotClass = function () { return /** @class */ (function () {\r\n    function Slot() {\r\n        // If you have a Slot object, you can find out its slot.id, but you cannot\r\n        // guess the slot.id of a Slot you don't have access to, thanks to the\r\n        // randomized suffix.\r\n        this.id = [\r\n            \"slot\",\r\n            idCounter++,\r\n            Date.now(),\r\n            Math.random().toString(36).slice(2),\r\n        ].join(\":\");\r\n    }\r\n    Slot.prototype.hasValue = function () {\r\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\r\n            // We use the Slot object iself as a key to its value, which means the\r\n            // value cannot be obtained without a reference to the Slot object.\r\n            if (this.id in context_1.slots) {\r\n                var value = context_1.slots[this.id];\r\n                if (value === MISSING_VALUE)\r\n                    break;\r\n                if (context_1 !== currentContext) {\r\n                    // Cache the value in currentContext.slots so the next lookup will\r\n                    // be faster. This caching is safe because the tree of contexts and\r\n                    // the values of the slots are logically immutable.\r\n                    currentContext.slots[this.id] = value;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (currentContext) {\r\n            // If a value was not found for this Slot, it's never going to be found\r\n            // no matter how many times we look it up, so we might as well cache\r\n            // the absence of the value, too.\r\n            currentContext.slots[this.id] = MISSING_VALUE;\r\n        }\r\n        return false;\r\n    };\r\n    Slot.prototype.getValue = function () {\r\n        if (this.hasValue()) {\r\n            return currentContext.slots[this.id];\r\n        }\r\n    };\r\n    Slot.prototype.withValue = function (value, callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        var _a;\r\n        var slots = (_a = {\r\n                __proto__: null\r\n            },\r\n            _a[this.id] = value,\r\n            _a);\r\n        var parent = currentContext;\r\n        currentContext = { parent: parent, slots: slots };\r\n        try {\r\n            // Function.prototype.apply allows the arguments array argument to be\r\n            // omitted or undefined, so args! is fine here.\r\n            return callback.apply(thisArg, args);\r\n        }\r\n        finally {\r\n            currentContext = parent;\r\n        }\r\n    };\r\n    // Capture the current context and wrap a callback function so that it\r\n    // reestablishes the captured context when called.\r\n    Slot.bind = function (callback) {\r\n        var context = currentContext;\r\n        return function () {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = context;\r\n                return callback.apply(this, arguments);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        };\r\n    };\r\n    // Immediately run a callback function without any captured context.\r\n    Slot.noContext = function (callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        if (currentContext) {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = null;\r\n                // Function.prototype.apply allows the arguments array argument to be\r\n                // omitted or undefined, so args! is fine here.\r\n                return callback.apply(thisArg, args);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        }\r\n        else {\r\n            return callback.apply(thisArg, args);\r\n        }\r\n    };\r\n    return Slot;\r\n}()); };\r\n// We store a single global implementation of the Slot class as a permanent\r\n// non-enumerable symbol property of the Array constructor. This obfuscation\r\n// does nothing to prevent access to the Slot class, but at least it ensures\r\n// the implementation (i.e. currentContext) cannot be tampered with, and all\r\n// copies of the @wry/context package (hopefully just one) will share the\r\n// same Slot implementation. Since the first copy of the @wry/context package\r\n// to be imported wins, this technique imposes a very high cost for any\r\n// future breaking changes to the Slot class.\r\nvar globalKey = \"@wry/context:Slot\";\r\nvar host = Array;\r\nvar Slot = host[globalKey] || function () {\r\n    var Slot = makeSlotClass();\r\n    try {\r\n        Object.defineProperty(host, globalKey, {\r\n            value: host[globalKey] = Slot,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false,\r\n        });\r\n    }\r\n    finally {\r\n        return Slot;\r\n    }\r\n}();\n\nvar bind = Slot.bind, noContext = Slot.noContext;\r\nfunction setTimeoutWithContext(callback, delay) {\r\n    return setTimeout(bind(callback), delay);\r\n}\r\n// Turn any generator function into an async function (using yield instead\r\n// of await), with context automatically preserved across yields.\r\nfunction asyncFromGen(genFn) {\r\n    return function () {\r\n        var gen = genFn.apply(this, arguments);\r\n        var boundNext = bind(gen.next);\r\n        var boundThrow = bind(gen.throw);\r\n        return new Promise(function (resolve, reject) {\r\n            function invoke(method, argument) {\r\n                try {\r\n                    var result = method.call(gen, argument);\r\n                }\r\n                catch (error) {\r\n                    return reject(error);\r\n                }\r\n                var next = result.done ? resolve : invokeNext;\r\n                if (isPromiseLike(result.value)) {\r\n                    result.value.then(next, result.done ? reject : invokeThrow);\r\n                }\r\n                else {\r\n                    next(result.value);\r\n                }\r\n            }\r\n            var invokeNext = function (value) { return invoke(boundNext, value); };\r\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\r\n            invokeNext();\r\n        });\r\n    };\r\n}\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\n// If you use the fibers npm package to implement coroutines in Node.js,\r\n// you should call this function at least once to ensure context management\r\n// remains coherent across any yields.\r\nvar wrappedFibers = [];\r\nfunction wrapYieldingFiberMethods(Fiber) {\r\n    // There can be only one implementation of Fiber per process, so this array\r\n    // should never grow longer than one element.\r\n    if (wrappedFibers.indexOf(Fiber) < 0) {\r\n        var wrap = function (obj, method) {\r\n            var fn = obj[method];\r\n            obj[method] = function () {\r\n                return noContext(fn, arguments, this);\r\n            };\r\n        };\r\n        // These methods can yield, according to\r\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\r\n        wrap(Fiber, \"yield\");\r\n        wrap(Fiber.prototype, \"run\");\r\n        wrap(Fiber.prototype, \"throwInto\");\r\n        wrappedFibers.push(Fiber);\r\n    }\r\n    return Fiber;\r\n}\n\nexport { Slot, asyncFromGen, bind, noContext, setTimeoutWithContext as setTimeout, wrapYieldingFiberMethods };\n//# sourceMappingURL=context.esm.js.map\n","export default \"<div>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-sorter class=\\\"app-basic-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-basic-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"filteringState.repeat?.itemsSource.length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-basic-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"filteringState.repeat?.itemsSource\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-paginator class=\\\"app-basic-list-paginator\\\"\\n                       [(page)]=\\\"page\\\"\\n                       [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeSet]=\\\"[10,20,30,40]\\\"\\n                       [total]=\\\"filteringState.paginator?.total\\\"\\n                       (pagerAction)=\\\"applyFilters()\\\">\\n        </nui-paginator>\\n    </div>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","<div class=\"app-table-with-custom-virtual-scroll__container\">\n    <div class=\"app-table-with-custom-virtual-scroll-searchable__search\">\n        <nui-search [value]=\"searchTerm\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onSearchCancel()\">\n        </nui-search>\n    </div>\n\n    <cdk-virtual-scroll-viewport class=\"app-table-with-custom-virtual-scroll-scrolling-container\" tableStickyHeader #viewportRef [itemSize]=\"rowHeight\">\n    <table nui-table [dataSource]=\"items | sliceRange: viewportRef.getRenderedRange()\"\n           [sortable]=\"true\"\n           [sortedColumn]=\"sortedColumn\"\n           (sortOrderChanged)=\"sortData($event)\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]=\"displayedColumns\"\n                         [cdkVirtualForOf]=\"items\">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class=\"app-table-with-custom-virtual-scroll-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                         item(s).\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <button btn\n                                nui-button\n                                i18n\n                                type=\"button\"\n                                size=\"default\"\n                                displayStyle=\"action\"\n                                (click)=\"applyFilters(false)\">\n                            Load another {{pageSize}} items\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n","import { CdkVirtualScrollViewport } from \"@angular/cdk/scrolling\";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISortedItem,\n    nameof,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    CUSTOM_SCROLL_ITEMS_PER_PAGE,\n    RESULTS_PER_PAGE,\n} from \"./table-with-custom-virtual-scroll-data\";\nimport { TableWithCustomVirtualScrollDataSource } from \"./table-with-custom-virtual-scroll-data-source.service\";\nimport { IServer, IServerFilters } from \"./types\";\nimport { VirtualScrollCustomStrategyService } from \"./virtual-scroll-custom-strategy.service\";\n\n@Component({\n    selector: \"app-table-with-custom-virtual-scroll\",\n    templateUrl: \"./table-with-custom-virtual-scroll.component.html\",\n    styleUrls: [\"./table-with-custom-virtual-scroll.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        VirtualViewportManager,\n        VirtualScrollCustomStrategyService,\n        {\n            provide: CUSTOM_SCROLL_ITEMS_PER_PAGE,\n            useValue: RESULTS_PER_PAGE,\n        },\n        {\n            provide: DataSourceService,\n            useClass: TableWithCustomVirtualScrollDataSource,\n        },\n    ],\n})\nexport class TableWithCustomVirtualScrollComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: \"name\",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = [\"name\"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private previouslyLoadedCount: number;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithCustomVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private customVirtualScrollStrategyService: VirtualScrollCustomStrategyService,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            virtualScroll: {componentInstance: this.customVirtualScrollStrategyService },\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.viewport);\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                let items = data.repeat?.itemsSource || [];\n\n                // number of fetched items from our data source\n                const fetchedItemsCount = items.length;\n\n                // number of useful items after eliminating the leftovers;\n                // leftovers appear when we reach the end of all our data\n                // since we're keep requesting the same page multiple times\n                // waiting for new items to be added between subsequent requests\n                const usefulItemsCount = fetchedItemsCount < this.pageSize\n                    ? this.previouslyLoadedCount - fetchedItemsCount\n                    : fetchedItemsCount;\n\n                items = items.slice(0, usefulItemsCount);\n\n                this.previouslyLoadedCount = items.length;\n\n                // append current useful items we need to append it to our previous fetched results\n                this.items = this.items.concat(items);\n\n                this.customVirtualScrollStrategyService.prepareNextPage(fetchedItemsCount);\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n            this.customVirtualScrollStrategyService.reset();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport function getIntrospectionQuery(options) {\n  var optionsWithDefault = _objectSpread({\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false\n  }, options);\n\n  var descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  var specifiedByUrl = optionsWithDefault.specifiedByUrl ? 'specifiedByUrl' : '';\n  var directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable ? 'isRepeatable' : '';\n  var schemaDescription = optionsWithDefault.schemaDescription ? descriptions : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return \"\\n    query IntrospectionQuery {\\n      __schema {\\n        \".concat(schemaDescription, \"\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          \").concat(descriptions, \"\\n          \").concat(directiveIsRepeatable, \"\\n          locations\\n          args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      \").concat(descriptions, \"\\n      \").concat(specifiedByUrl, \"\\n      fields(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      \").concat(descriptions, \"\\n      type { ...TypeRef }\\n      defaultValue\\n      \").concat(inputDeprecation('isDeprecated'), \"\\n      \").concat(inputDeprecation('deprecationReason'), \"\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \");\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class TableWithSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start))\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = TableWithSelectionDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-list-with-virtual-scroll-list #child></app-filtered-view-list-with-virtual-scroll-list>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","import { validate } from \"../validation/validate.mjs\";\nimport { NoDeprecatedCustomRule } from \"../validation/rules/custom/NoDeprecatedCustomRule.mjs\";\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n *\n * @deprecated Please use `validate` with `NoDeprecatedCustomRule` instead:\n *\n * ```\n * import { validate, NoDeprecatedCustomRule } from 'graphql'\n *\n * const errors = validate(schema, document, [NoDeprecatedCustomRule])\n * ```\n */\n\nexport function findDeprecatedUsages(schema, ast) {\n  return validate(schema, ast, [NoDeprecatedCustomRule]);\n}\n","/*\nCLI commands used to generate the current examples:\n\nng g \"./schematics/src/collection.json\":list --force --path=demo/src/schematics/list --prefix=app\n --name=basic-list --selectionMode=none --dataSource=none --pagingMode=pagination\n\nng g \"./schematics/src/collection.json\":list --force --path=demo/src/schematics/list --prefix=app\n --name=selection-list --selectionMode=multi --dataSource=none --pagingMode=pagination\n\nng g \"./schematics/src/collection.json\":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\n--name=search-list --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-search=true --enable-sort=false\n\nng g \"./schematics/src/collection.json\":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\n --name=virtual-scroll-list --selectionMode=none --dataSource=serverSide --pagingMode=virtualScroll\n\nng g \"./schematics/src/collection.json\":list --lint-fix --force --path=demo/src/schematics/list --prefix=app\n --name=paginated-list --selectionMode=none --dataSource=serverSide --pagingMode=pagination\n*/\nimport { Component } from \"@angular/core\";\n\nimport { SchematicsDocsComponentType } from \"../utils/schematic-docs-cli-option/schematic-docs-cli-option.component\";\n\n@Component({\n    selector: \"nui-list-schematics-docs-example\",\n    templateUrl: \"list-schematic.example.component.html\",\n    providers: [{provide: SchematicsDocsComponentType, useValue: SchematicsDocsComponentType.list }],\n})\nexport class ListSchematicExampleComponent {\n}\n","<nui-schematic-docs-page schematicFolderName=\"list\">\n    <div schematicSummary>\n        <p>\n            The List schematic provides the ability to create a generic list that can cover a majority of use cases for a list.\n            Its main responsibility is to integrate the functionality of the <code>nui-repeat</code> component with other components\n            commonly used with a list such as <code>nui-selector</code>, <code>nui-search</code>, <code>nui-paginator</code>, and\n            <code>nui-sorter</code>.\n        </p>\n        <h2>Notable Command Line Options</h2>\n        <nui-schematic-cli-option name=\"selectionMode\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"pagingMode\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"dataSource\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"enableSearch\"></nui-schematic-cli-option>\n        <nui-schematic-cli-option name=\"enableSort\"></nui-schematic-cli-option>\n    </div>\n    <nui-tab-group schematicExamples>\n        <nui-tab heading=\"Basic\">\n            <h2>Basic Usage</h2>\n            <p>\n                This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to\n                provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the\n                <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n                service, which can be extended with custom filtering behavior.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=basic-list --p=app</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"basic-list\">\n                <app-basic-list></app-basic-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Selection\">\n            <h2>List with Selection</h2>\n            <p>\n                Selection is facilitated by the\n                <a target=\"_blank\" href=\"../injectables/ListService.html\"><code>ListService</code></a>\n                and can be enabled by running the CLI command with the <code>selectionMode</code> option\n                set to one of the selection-enabling values listed under <strong>Notable Command Line Options</strong> section above.\n                The initial selection can be set using the <code>selection</code> input of\n                the <code>nui-repeat</code>. Selection changes can be intercepted using the\n                <code>selectionChange</code> output of the <code>nui-repeat</code>.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=selection-list --p=app\n                <strong>--selectionMode=multi</strong></nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"selection-list\">\n                <app-selection-list></app-selection-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Search\">\n            <h2>Search Properties</h2>\n            <p>\n                To specify fields for search, pass a properties array to the <code>setSearchProperties</code> method\n                exposed by the <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\">\n                    <code>ClientSideDataSource</code></a> service.\n                If no properties are specified, the search will be performed on all fields.\n            </p>\n            <nui-schematic-docs-command>\n                ng g @nova-ui/bits:list --name=search-list --p=app --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-sort=false\n                <strong>--enable-search=true</strong>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"search-list\">\n                <app-search-list></app-search-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Pagination\">\n            <h2>Pagination</h2>\n            <p>\n                This example shows how to add pagination to <code>nui-repeat</code> with a remote data source.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=paginated-list --p=app --pagingMode=pagination --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"paginated-list\">\n                <app-paginated-list></app-paginated-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Virtual Scroll\">\n            <h2>Virtual Scroll</h2>\n            <p>\n                This example shows how to add virtual scroll to <code>nui-repeat</code> with a remote data source.\n            </p>\n            <nui-message [allowDismiss]=\"false\" type=\"warning\">\n                Since the example makes use of search and sorting filters, it's important to note that\n                the viewport manager's paging progress must be reset each time the data is refreshed with\n                new filtered results. The reset invocation can be seen in the\n                <code>virtual-scroll-list.component.ts:doSearch</code> method.\n            </nui-message>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=scrollable-list --p=app --pagingMode=virtualScroll --dataSource=serverSide</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"virtual-scroll-list\">\n                <app-virtual-scroll-list></app-virtual-scroll-list>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NuiCheckboxModule, NuiExpanderModule, NuiPopoverModule } from \"@nova-ui/bits\";\n\nimport { CustomDataSourceFilterGroupCompositeComponent } from \"./custom-data-source-filter-group.component\";\nimport { CustomDataSourceFilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        CustomDataSourceFilterGroupsWrapperComponent,\n        CustomDataSourceFilterGroupCompositeComponent,\n    ],\n    exports: [\n        CustomDataSourceFilterGroupsWrapperComponent,\n        CustomDataSourceFilterGroupCompositeComponent,\n    ],\n})\n\nexport class CustomDataSourceFilterGroupCompositeModule {}\n","// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","export default \"import { AfterViewInit, Component, Inject, OnDestroy, QueryList, ViewChildren } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants, INovaFilteringOutputs } from \\\"@nova-ui/bits\\\";\\nimport _get from \\\"lodash/get\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { CustomDataSourceFilterGroupCompositeComponent } from \\\"./custom-data-source-filter-group.component\\\";\\nimport { FilterGroupCustomDataSourceService } from \\\"./custom-data-source.service\\\";\\nimport { ICustomDSFilteredData, IFilterGroupItem } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-custom-data-source-filter-group-composite-example\\\",\\n    templateUrl: \\\"custom-data-source-filter-group.example.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: FilterGroupCustomDataSourceService,\\n    }],\\n})\\nexport class CustomDataSourceFilterGroupExampleComponent implements AfterViewInit, OnDestroy {\\n    @ViewChildren(CustomDataSourceFilterGroupCompositeComponent) filterGroups: QueryList<CustomDataSourceFilterGroupCompositeComponent>;\\n\\n    public filterGroupItems?: Array<IFilterGroupItem> = [];\\n    public filteringState?: INovaFilteringOutputs = {\\n        repeat: {\\n            itemsSource: [],\\n        },\\n        color: [],\\n        status: [],\\n    };\\n    private filterGroupSubscriptions: Array<Subscription> = [];\\n\\n    constructor(@Inject(DataSourceService) private filterGroupCustomDataSourceService: FilterGroupCustomDataSourceService) { }\\n\\n    ngAfterViewInit(): void {\\n\\n        this.filterGroupSubscriptions.push(\\n            this.filterGroupCustomDataSourceService.outputsSubject.subscribe((filteredData: ICustomDSFilteredData) => {\\n                this.filterGroupItems = filteredData.filterGroupItems;\\n                this.filteringState = filteredData.filteringState;\\n            })\\n        );\\n\\n        this.filterGroupSubscriptions.push(\\n            this.filterGroups.changes.subscribe(() => {\\n                this.filterGroupCustomDataSourceService.registerComponent(this.getFilterComponents());\\n            })\\n        );\\n        this.filterGroupCustomDataSourceService.applyFilters();\\n    }\\n\\n    public changeFilters(event: IFilterGroupItem) {\\n        this.filterGroupCustomDataSourceService.applyFilters();\\n    }\\n\\n    public hasItems(): boolean {\\n        return !_isEmpty(_get(this, \\\"filteringState.repeat.itemsSource\\\"));\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomDataSourceFilterGroupCompositeComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n\\n    ngOnDestroy() {\\n        this.filterGroupSubscriptions.forEach(subscription => subscription.unsubscribe());\\n    }\\n}\\n\";","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-custom-virtual-scroll-data\";\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithCustomVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE))\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithCustomVirtualScrollDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { NuiCheckboxModule, NuiExpanderModule, NuiPopoverModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { CustomTemplateFilterGroupCompositeComponent } from \\\"./custom-template-filter-group.component\\\";\\nimport { CustomTemplateFilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiExpanderModule,\\n        NuiCheckboxModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        CustomTemplateFilterGroupsWrapperComponent,\\n        CustomTemplateFilterGroupCompositeComponent,\\n    ],\\n    exports: [\\n        CustomTemplateFilterGroupsWrapperComponent,\\n        CustomTemplateFilterGroupCompositeComponent,\\n    ],\\n})\\n\\nexport class CustomTemplateFilterGroupCompositeModule {\\n}\\n\";","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"<div class=\\\"app-table-with-virtual-scroll__container\\\">\\n    <div class=\\\"app-table-with-virtual-scroll-searchable__search\\\">\\n        <nui-search [value]=\\\"searchTerm\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onSearchCancel()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <cdk-virtual-scroll-viewport class=\\\"app-table-with-virtual-scroll-scrolling-container\\\" tableStickyHeader #viewportRef [itemSize]=\\\"rowHeight\\\">\\n    <table nui-table [dataSource]=\\\"items | sliceRange: viewportRef.getRenderedRange()\\\"\\n           [sortable]=\\\"true\\\"\\n           [sortedColumn]=\\\"sortedColumn\\\"\\n           (sortOrderChanged)=\\\"sortData($event)\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n            <ng-template nuiRowDef cdkVirtualFor\\n                         let-context\\n                         [nuiRowDefColumns]=\\\"displayedColumns\\\"\\n                         [cdkVirtualForOf]=\\\"items\\\">\\n                <tr nui-row ></tr>\\n            </ng-template>\\n    </table>\\n    </cdk-virtual-scroll-viewport>\\n\\n    <footer class=\\\"app-table-with-virtual-scroll-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                    <div class=\\\"d-flex pt-3 pb-3\\\">\\n                        <ng-container i18n *ngIf=\\\"items.length !== totalItems; else endOfData\\\">, scroll down for more.</ng-container>\\n                        <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewListWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        if (filters.search?.value) {\\n            params = params.set(\\\"searchField\\\", \\\"name\\\");\\n            params = params.set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n        }\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewListWithPaginationDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewListWithPaginationDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  var spreadPath = []; // Position in the spread path\n\n  var spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    }\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var _i2 = 0; _i2 < spreadNodes.length; _i2++) {\n      var spreadNode = spreadNodes[_i2];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        var spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        var viaPath = cyclePath.slice(0, -1).map(function (s) {\n          return '\"' + s.name.value + '\"';\n        }).join(', ');\n        context.reportError(new GraphQLError(\"Cannot spread fragment \\\"\".concat(spreadName, \"\\\" within itself\") + (viaPath !== '' ? \" via \".concat(viaPath, \".\") : '.'), cyclePath));\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-list-with-pagination-list #child></app-filtered-view-list-with-pagination-list>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 400;\n\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-table-with-virtual-scroll__container {\\n    height: 400px;\\n    border-color: lightgray;\\n    overflow: auto;\\n}\\n\\n.app-table-with-virtual-scroll-searchable__search {\\n    max-width: 350px;\\n    margin-bottom: @nui-space-xs;\\n    margin-left: auto;\\n}\\n\\n.app-table-with-virtual-scroll-scrolling-container {\\n    height: 300px;\\n}\\n\\n.app-table-with-virtual-scroll-scrolling-footer {\\n    height: 28px;\\n    .setCssVariable(background-color, nui-color-bg-transparent);\\n    .setCssVariable(color, nui-color-text-secondary);\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","import inspect from \"../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  var originalError = rawOriginalError instanceof Error ? rawOriginalError : new Error('Unexpected error value: ' + inspect(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes, originalError.source, originalError.positions, path, originalError);\n}\n","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport { Kind } from \"../language/kinds.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { TypeInfo, visitWithTypeInfo } from \"../utilities/TypeInfo.mjs\";\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport var ASTValidationContext = /*#__PURE__*/function () {\n  function ASTValidationContext(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  var _proto = ASTValidationContext.prototype;\n\n  _proto.reportError = function reportError(error) {\n    this._onError(error);\n  };\n\n  _proto.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  _proto.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n\n        return frags;\n      }, Object.create(null));\n    }\n\n    return fragments[name];\n  };\n\n  _proto.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n\n        for (var _i2 = 0, _set$selections2 = set.selections; _i2 < _set$selections2.length; _i2++) {\n          var selection = _set$selections2[_i2];\n\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  };\n\n  _proto.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n\n      while (nodesToVisit.length !== 0) {\n        var node = nodesToVisit.pop();\n\n        for (var _i4 = 0, _this$getFragmentSpre2 = this.getFragmentSpreads(node); _i4 < _this$getFragmentSpre2.length; _i4++) {\n          var spread = _this$getFragmentSpre2[_i4];\n          var fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  };\n\n  return ASTValidationContext;\n}();\nexport var SDLValidationContext = /*#__PURE__*/function (_ASTValidationContext) {\n  _inheritsLoose(SDLValidationContext, _ASTValidationContext);\n\n  function SDLValidationContext(ast, schema, onError) {\n    var _this;\n\n    _this = _ASTValidationContext.call(this, ast, onError) || this;\n    _this._schema = schema;\n    return _this;\n  }\n\n  var _proto2 = SDLValidationContext.prototype;\n\n  _proto2.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  return SDLValidationContext;\n}(ASTValidationContext);\nexport var ValidationContext = /*#__PURE__*/function (_ASTValidationContext2) {\n  _inheritsLoose(ValidationContext, _ASTValidationContext2);\n\n  function ValidationContext(schema, ast, typeInfo, onError) {\n    var _this2;\n\n    _this2 = _ASTValidationContext2.call(this, ast, onError) || this;\n    _this2._schema = schema;\n    _this2._typeInfo = typeInfo;\n    _this2._variableUsages = new Map();\n    _this2._recursiveVariableUsages = new Map();\n    return _this2;\n  }\n\n  var _proto3 = ValidationContext.prototype;\n\n  _proto3.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  _proto3.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new TypeInfo(this._schema);\n      visit(node, visitWithTypeInfo(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({\n            node: variable,\n            type: typeInfo.getInputType(),\n            defaultValue: typeInfo.getDefaultValue()\n          });\n        }\n      }));\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (var _i6 = 0, _this$getRecursivelyR2 = this.getRecursivelyReferencedFragments(operation); _i6 < _this$getRecursivelyR2.length; _i6++) {\n        var frag = _this$getRecursivelyR2[_i6];\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  _proto3.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  _proto3.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  _proto3.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  _proto3.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  _proto3.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  _proto3.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  _proto3.getEnumValue = function getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  };\n\n  return ValidationContext;\n}(ASTValidationContext);\n","export default \"<h5>{{name}}</h5>\\n<div [ngSwitch]=\\\"name\\\">\\n    <ng-container *ngSwitchCase=\\\"'selectionMode'\\\">\\n        <p>\\n            This string option allows you to select whether to enable selection and, if so, what type. Default is <code>none</code>.\\n            The values currently supported for this option are listed{{forComponent ? \\\"\\\" : \\\" below for each type of component\\\"}}:\\n        </p>\\n        <ng-container *ngTemplateOutlet=\\\"helpRenderer;context:{tpl: selectionModeTpl, types: [componentType.list, componentType.table]}\\\"></ng-container>\\n        <ng-template #selectionModeTpl let-type=type>\\n            <ul>\\n                <li>\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"none\\\">\\n                        <p>Table rows are not selectable.</p>\\n                    </nui-expander>\\n                </li>\\n                <li>\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"multi\\\">\\n                        <p>This option enables the possibility to select one or more rows in the {{forComponent ? forComponent : \\\"component\\\"}}.</p>\\n                        <ng-container *ngIf=\\\"type == componentType.table\\\">\\n                            <p>To give users the ability to select rows, do the following:</p>\\n                            <ol>\\n                                <li>\\n                                    Set the <code>selectable</code> input to <code>true</code>.\\n                                </li>\\n                                <li>\\n                                    Bind a trackBy handler to the\\n                                    <code><a href=\\\"https://material.angular.io/cdk/table/overview#connecting-the-table-to-a-data-source\\\" target=\\\"_blank\\\">trackBy</a></code>\\n                                    property inherited from\\n                                    <code><a href=\\\"https://material.angular.io/cdk/table/overview\\\" target=\\\"_blank\\\">CdkTable</a></code>.\\n                                    The trackBy handler should return a value that uniquely identifies each item in the table.\\n                                    <br>\\n                                    <strong>Note:</strong> When <code>trackBy</code> is used, the\\n                                    <code><a href=\\\"../interfaces/ISelection.html\\\" target=\\\"_blank\\\">ISelection</a></code> will consist\\n                                    of the <code>trackBy</code> property values only and will not contain entire representations of the selected\\n                                    objects. As a result, it may be beneficial to keep a separate index that maps the selected item IDs\\n                                    to the corresponding objects.\\n                                </li>\\n                                <li>\\n                                    Pass the row object to <code>nui-row</code> using the <code>rowObject</code> input.\\n                                </li>\\n                                <li>\\n                                    Bind to the selection event using the <code>(selectionChange)</code> output. The event's payload is an\\n                                    <code><a href=\\\"../interfaces/ISelection.html\\\" target=\\\"_blank\\\">ISelection</a></code>\\n                                    object which should be converted to selected items by calling the <code>getSelectedItems</code>\\n                                    function on the\\n                                    <code><a href=\\\"../injectables/SelectorService.html\\\" target=\\\"_blank\\\">SelectorService</a></code>.\\n                                </li>\\n                            </ol>\\n                            <p>\\n                                <b>Note 1:</b>To preselect rows in a table or to programmatically change the selection you can use the\\n                                <code>selection</code> input which is of type\\n                                <code><a href=\\\"../interfaces/ISelection.html\\\" target=\\\"_blank\\\">ISelection</a></code>.\\n                            </p>\\n                            <p>\\n                                <b>Note 2:</b> If you need to use <code>nui-paginator</code> with row selection, you need to pass the total number\\n                                of items on all pages into the <code>totalItems</code> input.\\n                            </p>\\n                            <nui-message [allowDismiss]=false type=\\\"warning\\\">\\n                                <p>\\n                                    <strong>Important:</strong> When working with data that's coming across the wire, it's necessary\\n                                    to bind a <code>trackBy</code> handler as mentioned above. This will allow selection tracking to be based on\\n                                    the identifier returned by the <code>trackBy</code> handler. If a <code>trackBy</code> is not provided, comparisons to\\n                                    determine whether items are selected will be based on object reference which of course\\n                                    won't work with items coming from a backend.\\n                                </p>\\n                                Take a look at the source on the \\\"Selection\\\" tab example to see how.\\n                            </nui-message>\\n                        </ng-container>\\n                    </nui-expander>\\n                </li>\\n                <li *ngIf=\\\"type == componentType.list\\\">\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"radio\\\">\\n                        <p>Enables single-selection with deselection not allowed.</p>\\n                    </nui-expander>\\n                </li>\\n                <li *ngIf=\\\"type == componentType.list\\\">\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"single\\\">\\n                        <p>Enables single-selection with no radio buttons and deselection allowed.</p>\\n                    </nui-expander>\\n                </li>\\n                <li *ngIf=\\\"type == componentType.list\\\">\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"singleWithRequiredSelection\\\">\\n                        <p>Enables single-selection with no radio buttons and deselection not allowed.</p>\\n                    </nui-expander>\\n                </li>\\n                <li *ngIf=\\\"type == componentType.list\\\">\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"radioWithNonRequiredSelection\\\">\\n                        <p>Enables single-selection with deselection allowed.</p>\\n                    </nui-expander>\\n                </li>\\n            </ul>\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'pagingMode'\\\">\\n        <p>\\n            This string option allows you to select the paging mode of the data presentation. Default is\\n            <code>virtualScroll</code>. The values currently supported for this option are:\\n        </p>\\n        <ul>\\n            <li>\\n                <nui-expander [open]=\\\"false\\\" header=\\\"virtualScroll\\\">\\n                    <p>\\n                        This setting allows us to use\\n                        <a href=\\\"https://material.angular.io/cdk/scrolling/overview\\\">CDK Virtual Scroll</a>\\n                        by setting <code>pagingMode</code> to <code>virtualScroll</code>.\\n                    </p>\\n                    <ng-container *ngTemplateOutlet=\\\"helpRenderer;context:{tpl: pagingModeVSTpl, types: [componentType.list, componentType.table]}\\\"></ng-container>\\n                    <ng-template #pagingModeVSTpl let-type=type>\\n                        <ng-container *ngIf=\\\"type == componentType.list\\\">\\n                            <p>\\n                                The <code>nui-repeat</code> used inside this schematic allows you to manage the\\n                                virtual viewport by exposing its <code>{{getRepeatPropKey('viewportRef')}}</code>\\n                                property which is an instance of\\n                                <code><a href=\\\"https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport\\\">CdkVirtualScrollViewport</a></code>.\\n                                The example below uses Nova's\\n                                <code><a href=\\\"/injectables/VirtualViewportManager.html\\\">VirtualViewportManager</a></code>\\n                                to handle the viewport management duties via the\\n                                <code>{{getRepeatPropKey('viewportRef')}}</code> property.\\n                            </p>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"type == componentType.table\\\">\\n                            The <code>nui-table</code> used inside this schematic API is using\\n                            <a href=\\\"../directives/TableVirtualScrollLinearDirective.html#info\\\">nui table virtual scroll directive</a>. It makes it possible to\\n                            load items in chunks. The amount of items loaded per fetch can be configured by setting the <code>range</code> variable.\\n\\n                            <nui-message [allowDismiss]=false type=\\\"warning\\\">\\n                                The following examples use custom Nova <a href=\\\"../directives/TableVirtualScrollLinearDirective.html#info\\\">TableVirtualScrollLinearDirective</a> to perform scrolling\\n                                based on scrolling indexes within the virtual scroll viewport. Customers are free to create their own directive and\\\\or scrolling strategy if they want\\n                                custom behavior.\\n                            </nui-message>\\n                            <nui-message [allowDismiss]=false type=\\\"warning\\\">\\n                                There are some known <strong>technical limitations</strong>:<br />\\n                                <ol>\\n                                    <li>\\n                                        Data for the table should be provided in a DataSource service\\n                                    </li>\\n                                    <li>\\n                                        Each datasource should have a page counter, to enable items prefetching (in case the viewport size is larger that the chosen items per page selected)\\n                                    </li>\\n                                    <li>\\n                                        <a href=\\\"https://github.com/angular/components/issues/10113\\\">Angular doesn't subport virtual scrolling over a list of items whose size is\\n                                            not known and needs to be measured</a>\\n                                    </li>\\n                                    <li>\\n                                        When CDK Viewport is used in context of non-visible dom elements (eg: Tabs, Accordion) virtual scroll will not work properly.\\n                                        The solution is not do initiate the viewport until it is visible using *ngIf, *ngSwitch.\\n                                    </li>\\n                                </ol>\\n                            </nui-message>\\n                        </ng-container>\\n\\n                        <ng-container *ngIf=\\\"type == componentType.table\\\">\\n                            <p>\\n                                To make the scrolling working with <code>nui-table</code> start with declaring the following variables:<br /><br />\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.vars}}</nui-example-code><br />\\n\\n                            <p>\\n                                Import <a href=\\\"../injectables/VirtualViewportManager.html\\\" target=\\\"_blank\\\">VirtualViewportManager</a>\\n                                (provides a mechanism for sequencing the rendered range stream emitted from the CDK Viewport into distinct page ranges):<br />\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.viewportManagerImport}}</nui-example-code><br />\\n                            <p>\\n                                Provide VirtualViewportManager on a component level providers:<br />\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.provideViewport}}</nui-example-code><br />\\n\\n                            <p>\\n                                Inject VirtualViewportManager type in the constructor:<br />\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.injectViewport}}</nui-example-code><br />\\n\\n                            <p>\\n                                Use the Angular ViewChild decorator to get a reference to the scrolling viewport (CdkVirtualScrollViewport):<br />\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.viewChildren}}</nui-example-code><br />\\n\\n                            <p>\\n                                Register the virtual scroll filter on dataSource:\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.registerScroll}}</nui-example-code><br />\\n\\n                            <p>\\n                                Optionally, subscribe to the <code>busy</code> state changes:\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.oninitSubscribeBusy}}</nui-example-code><br />\\n                            <p>\\n                                Start setting up the <code>ngAfterViewInit()</code> lifecycle hook:<br />\\n                            </p>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.ngAfterViewInitStart}}</nui-example-code><br />\\n\\n                            Setting up the viewportManager listener and dataSource handler in the <code>ngAfterViewInit</code>:\\n                            <ol>\\n                                <li>Use the <strong>setViewport</strong> method to initialize <code>VirtualViewportManager</code>.</li>\\n                                <li>Chain the <strong>observeNextPage$</strong> method with the required parameters (<a href=\\\"../interfaces/IVirtualPageConfig.html\\\">IVirtualPageConfig)</a>.</li>\\n                                <li>\\n                                    <b><i>Optional</i></b> You may like to ignore <code>VirtualViewportManager</code> emissions when the <code>totalItems</code> number is reached.\\n                                    To do this, you can use the RxJS <code>filter</code> operator as in example.<br />\\n                                    <b>Note:</b> <code>VirtualViewportManager</code> has its own mechanism of stopping when the length of the last received page is less than the page size requested. <br />\\n                                    In the example, we use the <code>filter</code> operator to avoid making the additional requests when the dataset's last page has enough data.\\n                                </li>\\n                                <li>Finally, call <code>datasource.applyFilters()</code> to trigger fetching of the data.</li>\\n                                <li>\\n                                    To avoid having two listeners (the next page observer and the data source's outputsSubject), we can combine them together into one stream <br />\\n                                    with the RxJS <code>switchMap</code> operator. In the example, we map to an inner subscription which contains all new data related operations: <br />\\n                                    <code>totalItems</code> update, assigning new data, and triggering the change detector. <br />\\n                                    <b>Alternative</b>: You can subscribe to the <code>this.dataSource.outputsSubject</code>code> in the ngOnInit method using the same RxJS pipe operators.\\n                                </li>\\n                            </ol>\\n                            <nui-example-code language=\\\"typescript\\\">{{tableScrollingSetup.ngAfterViewInitViewport}}</nui-example-code><br />\\n                        </ng-container>\\n                    </ng-template>\\n                    <p>\\n                        Although the generated code of the schematic already takes care of basic setup\\n                        steps, please make sure while customizing this feature for your own use case to\\n                        do the following on the component:\\n                    </p>\\n                    <ol>\\n                        <li *ngIf=\\\"for(componentType.list)\\\">\\n                            <strong>For <code>list</code>'s only</strong>: set the <code>itemSize</code> component input to a valid value. It's\\n                            mandatory to have this input set as there is a technical limitation on the\\n                            Angular side. If the input is omitted, you'll see this error message in the\\n                            console output:\\n                            <mark>\\n                                \\\"ERROR: To use virtual scroll feature please set correct value to the\\n                                'itemSize' input!\\\"\\n                            </mark>\\n                        </li>\\n                        <li>\\n                            Set the <code>height</code> of the component element (either through a\\n                            css/less file or inline in the ng-container). This sets the viewport for the\\n                            virtual scroll. If this action is omitted, the viewport will have a height of\\n                            <code>0px</code> and no content will be visible on the page.\\n                        </li>\\n                    </ol>\\n\\n                    <nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n                        <ol>\\n                            <li>\\n                                If the user filters the results in some way, say with a search box, make sure to\\n                                reset progress on the VirtualViewportManager before applying the filters.\\n                            </li>\\n                            <li>\\n                                Due to a <a href=\\\"https://github.com/angular/components/issues/13981\\\" target=\\\"_blank\\\">known\\n                                CDK issue</a>,\\n                                make sure that the <code>nui-repeat</code> component hosting the virtual scroll is\\n                                visible\\n                                in order for the virtual scroll functionality to work properly.\\n                            </li>\\n                        </ol>\\n                    </nui-message>\\n                </nui-expander>\\n            </li>\\n            <li>\\n                <nui-expander [open]=\\\"false\\\" header=\\\"pagination\\\">\\n                    Data is displayed using standard pagination with a <code>nui-paginator</code> component.\\n                    <p>\\n                        To enable pagination, do the following:\\n                    </p>\\n                    <ol>\\n                        <li>\\n                            Provide a service that performs filtering (pagination is considered to be a form of\\n                            filtering in Nova). There is a default service, <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                            <code>ClientSideDataSource</code></a>, which provides default methods for working with\\n                            filters. In case you need something special (such as filtering on a back-end or more complex\\n                            sorting capability), you may extend this service and override its methods.\\n                        </li>\\n                        <li>\\n                            In your component's constructor, provide an initial dataset via the <code>setData</code>\\n                            method\\n                            of\\n                            <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                                <code>ClientSideDataSource</code></a>.\\n                        </li>\\n                        <li>\\n                            Get the paginator component via <code>@ViewChild</code>.\\n                        </li>\\n                        <li>\\n                            In your component's <code>ngAfterViewInit</code>, pass the paginator to the\\n                            <code>componentTree</code>\\n                            property of <code>ClientSideDataSource</code>. Then, invoke the\\n                            <code>applyFilters</code>\\n                            method of\\n                            <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                                <code>ClientSideDataSource</code></a>. And, lastly, subscribe to\\n                            <code>outputsSubject</code> on\\n                            <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                                <code>ClientSideDataSource</code></a> which will return an <a target=\\\"_blank\\\"\\n                                                                                                  href=\\\"../interfaces/INovaFilteringOutputs.html\\\">\\n                            <code>INovaFilteringOutputs</code></a> object after each change in pagination.\\n                        </li>\\n                        <li>\\n                            In the <code>outputsSubject</code> subscription handler, overwrite your\\n                            <code>dataSource</code>\\n                            with the\\n                            <code>itemsSource</code> you receive and pass the number of pages to the paginator's\\n                            <code>total</code> input.\\n                        </li>\\n                        <li>\\n                            Bind to the paginator's <code>pagerAction</code> output, and invoke the\\n                            <code>applyFilters</code> method of\\n                            <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n                            in the output handler.\\n                        </li>\\n                        <li>\\n                            Unsubscribe from the <code>outputsSubject</code> in your component's\\n                            <code>ngOnDestroy</code>\\n                            method.\\n                        </li>\\n                    </ol>\\n                </nui-expander>\\n            </li>\\n            <li>\\n                <nui-expander [open]=\\\"false\\\" header=\\\"none\\\">\\n                    All data is displayed at once.\\n                </nui-expander>\\n            </li>\\n        </ul>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'dataSource'\\\">\\n        <p>\\n            This string option allows you to select the way data is retrieved for displaying in the {{forComponent ? forComponent : \\\"component\\\"}}.\\n            Default is <code>serverSide</code>. The values currently supported for this option are:\\n        </p>\\n        <nui-expander [open]=\\\"false\\\" header=\\\"serverSide\\\">\\n            The generated data source will retrieve data remotely from a server side API, usually achieved by extending\\n            the\\n            <a target=\\\"_blank\\\" href=\\\"../injectables/DataSourceService.html\\\"><code>DataSourceService</code></a> class.\\n            <nui-message [allowDismiss]=\\\"false\\\" type=\\\"info\\\">\\n                When this option is chosen, the schematic automatically generates a loading indicator\\n                (<code>nui-busy</code>) which is displayed as an overlay on the list during data\\n                retrieval.\\n            </nui-message>\\n        </nui-expander>\\n        <nui-expander [open]=\\\"false\\\" header=\\\"custom\\\">\\n            <p>No data source will be generated, allowing you to create one from scratch.</p>\\n        </nui-expander>\\n        <nui-expander [open]=\\\"false\\\" header=\\\"clientSide\\\">\\n            Generated data source will retrieve data locally from a client side source, usually via the\\n            <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n            class.\\n        </nui-expander>\\n        <nui-expander [open]=\\\"false\\\" header=\\\"none\\\">\\n            No data source will be generated and no data source related features\\n            such as sorting or search will be added to the generated code.\\n        </nui-expander>\\n        <div>\\n            <p>\\n                For additional information on how the data source setup is done please consult the paragraphs below:\\n            </p>\\n            <nui-expander [open]=\\\"false\\\" header=\\\"DataSource Setup\\\">\\n                <p>Both local and remote setup are feasible for custom data sources, while the remote setup is feasible\\n                    for\\n                    the <code>serverSide</code> option.</p>\\n                <nui-expander [open]=\\\"false\\\" header=\\\"Remote DataSource Setup\\\">\\n                    <div>\\n                        <p>\\n                            To make component work with remote backend, it's advised to use the Nova\\n                            <code>DataSourceService</code>\\n                            which can be imported from\\n                            <code>\\\"@nova-ui/bits\\\"</code>.\\n                        </p>\\n                        <p>Create the <code>@Injectable</code> class that extends the data source service mentioned\\n                            above.\\n                        </p>\\n                        <nui-example-code language=\\\"typescript\\\">{{dataSourceSetup.extendDS}}</nui-example-code>\\n                        <br/>\\n\\n                        <p>\\n                            Define the following fields to work with the data source.<br/>\\n                            <mark><sup><strong>Hint!</strong></sup> The list below is a required minimum. Feel free to\\n                                define other fields required to work with your API.\\n                            </mark>\\n                        </p>\\n                        <br/>\\n                        <code><b>url</b></code> - This is where you store your API url. <br/>\\n                        <code><b>cache</b></code> - This is where you store the cached list data. Because we fetch the\\n                        data\\n                        in chunks, every time a user fetches a new chunk of data\\n                        it is appended to that array immediately, and then the updated array is sent to the list.<br/>\\n                        <code><sup>(Optional)</sup><b>busy</b></code> - This sets the busy state. The state is\\n                        considered\\n                        busy only when the data is being fetched, and it's used to display loading indicator\\n                        components on the view while the data is being fetched. This is optional.\\n                        <mark>Consult with your UX team about using busy state and busy components in your list</mark>\\n                        .\\n                        <nui-example-code language=\\\"typescript\\\">{{dataSourceSetup.defineFields}}</nui-example-code>\\n                        <br/>\\n\\n                        <p>\\n                            Create a method that will fetch the data and perhaps convert the response to an expected\\n                            format.\\n                            It should have two parameters, <code>start</code>\\n                            and <code>end</code>, which are the current values of the scrolling indices within the\\n                            scrolling\\n                            viewport. The calculation <code>end - start</code> will give you the number\\n                            of items to fetch. If your API supports returning data by page, the <code>page</code>\\n                            variable\\n                            will be useful in that case, but if not, use the <code>end</code> index\\n                            as the starting point for the next chunk of data.<br/>\\n                            Next, prepare the URI to be fetched. It can, and probably will, vary by API implementation.\\n                            Your\\n                            goal here is to return the requested number of items.\\n                        </p>\\n                        <nui-example-code language=\\\"typescript\\\">{{fetch}}</nui-example-code>\\n                        <br/>\\n\\n                        <p>\\n                            Afterwards, when you get the data back as a response, convert the returned dataset into the\\n                            structure expected by the\\n                            component. The received data will be concatenated with <code>this.cache</code>,\\n                            so\\n                            the dataset must be in the format expected by the\\n                            list's <code>dataSource</code> input in order to render the items correctly.\\n                        </p>\\n                        <nui-example-code language=\\\"typescript\\\">{{dataSourceSetup.getData}}</nui-example-code>\\n                        <br/>\\n\\n                        <p>\\n                            The next step will be to implement the <code>getFilteredData</code> method of the <code>DataSourceService</code>.\\n                            This method is called whenever the\\n                            <code>applyFilters</code> method of current data source is called in the code, so this is\\n                            where\\n                            data operations will be triggered.\\n                            Optionally, notify the <code>busy</code> observable to toggle the busy state to \\\"on\\\". Then,\\n                            retrieve the <code>virtualScroll</code> from the available filters\\n                            passed into the method as an argument. The <code>virtualScroll</code> filter is registered\\n                            with\\n                            the data source farther down in the code listing of the list implementation.<br/><br/>\\n\\n                            From the <code>virtualScroll</code> filter you can retrieve the <code>start</code> and\\n                            <code>end</code> indices for the scrolling viewport.\\n                            Use them to fetch to correct amount of data. Then, update the cache with the items you just\\n                            got\\n                            from the server, and return the data in the format that would\\n                            contain AT LEAST the total number of items the API is able to return and the list's cached\\n                            data.\\n                        </p>\\n                        <nui-example-code language=\\\"typescript\\\">{{dataSourceSetup.getFilteredData}}</nui-example-code>\\n                        <br/>\\n\\n                        <p>All data source preparation steps are finished at this point.</p>\\n                    </div>\\n                </nui-expander>\\n                <nui-expander [open]=\\\"false\\\" header=\\\"Local DataSource Setup\\\">\\n                    <p>\\n                        To make the component work with a local API it's advised\\n                        to extend <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n                        which can be imported from <code>\\\"@nova-ui/bits\\\"</code>.\\n                    </p>\\n                </nui-expander>\\n            </nui-expander>\\n        </div>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'enableSearch'\\\">\\n        <p>\\n            This boolean option allows you to enable/disable search functionality. Default is\\n            <code>true</code>.\\n        </p>\\n        <p>\\n            To subscribe to the search events, use search's <code>onSearch</code> or <code>inputChange</code>\\n            (and, if needed, <code>onSearchCancel</code>) hooks to invoke the <code>applyFilters</code>\\n            method of the <a target=\\\"_blank\\\" href=\\\"../injectables/DataSourceService.html\\\"><code>DataSourceService</code></a>\\n            class\\n            in order to perform the actual search.\\n        </p>\\n        <nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n            <ol>\\n                <li>\\n                    For remote data sources, which usually extend or use directly <a target=\\\"_blank\\\" href=\\\"../injectables/ServerSideDataSource.html\\\">\\n                    <code>ServerSideDataSource</code></a>, if you want searches to be performed as the user types, it's advised to\\n                    add a debounce to the filtering to avoid stressing out the backend API by using\\n                    <code>pipe(debounceTime(Integer_Value))</code> between search subscriptions.\\n                </li>\\n                <li>\\n                    For local data sources, which usually extend or use directly <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                    <code>ClientSideDataSource</code></a>, you can use the <code>setSearchProperties</code> method of\\n                    <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n                    to specify which columns the search should apply to; if not set, the search will be performed on all columns.\\n                </li>\\n            </ol>\\n        </nui-message>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'enableSort'\\\">\\n        <p>\\n            This boolean option allows you to enable/disable sorting functionality. Default is\\n            <code>true</code>.\\n        </p>\\n        <ng-container *ngIf=\\\"for(componentType.table)\\\">\\n            <p>To use sorting in a table you need to:</p>\\n            <ol>\\n                <li>Set <code>[sortable]=\\\"true\\\"</code> on <code>nui-table</code>.</li>\\n                <li>Get table component via <code>@ViewChild</code>.</li>\\n                <li>Set up the filtering component tree. To get table filtering components use <code>getFilterComponents()</code>\\n                    function of table component.\\n                    This will give filtering mechanism an ability to receive data for sorting at the moment you'll call\\n                    <code>applyFilters</code> method of <a target=\\\"_blank\\\"\\n                                                           href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>.\\n                </li>\\n                <li>Set <code>[isColumnSortingDisabled]=\\\"true\\\"</code> on the table-header-cell to prevent table from\\n                    sorting by this property.\\n                </li>\\n                <li>Subscribe to <code>outputsSubject</code> on <a target=\\\"_blank\\\"\\n                                                                   href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                    <code>ClientSideDataSource</code></a> which will return you <a target=\\\"_blank\\\"\\n                                                                                       href=\\\"../interfaces/INovaFilteringOutputs.html\\\">\\n                    <code>INovaFilteringOutputs</code></a> object after each change of sorting.\\n                </li>\\n                <li>In the <code>outputsSubject</code> subscription handler, overwrite your <code>dataSource</code> with\\n                    the <code>itemsSource</code> you receive.\\n                </li>\\n                <li>On <code>(sortOrderChanged)</code> event call <code>applyFilters</code> method of\\n                    <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>.\\n                    <code>(sortOrderChanged)</code> event will emit you <a target=\\\"_blank\\\"\\n                                                                           href=\\\"../interfaces/ISortedItem.html\\\">\\n                        <code>ISortedItem</code></a> object.\\n                </li>\\n                <li>Unsubscribe from the <code>outputsSubject</code> in your component's <code>ngOnDestroy</code>\\n                    method.\\n                </li>\\n            </ol>\\n            <nui-message [allowDismiss]=\\\"false\\\" type=\\\"info\\\">\\n                <ul>\\n                    <li>\\n                        If you need to apply a more complicated sorting algorithm, you can extend\\n                        <code>ClientSideDataSource</code> and override its sorting methods.\\n                    </li>\\n                    <li>\\n                        If you need to sort some column by default (or programmatically), you can do that by passing <a\\n                        target=\\\"_blank\\\" href=\\\"../interfaces/ISortedItem.html\\\">\\n                        <code>ISortedItem</code></a> to <code>[sortingColumn]</code> input of the table.\\n                    </li>\\n                </ul>\\n            </nui-message>\\n        </ng-container>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'chips'\\\">\\n        <p>\\n            This boolean option allows you to enable/disable chips functionality. Default is\\n            <code>true</code>.\\n        </p>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchDefault>\\n        <ng-content></ng-content>\\n    </ng-container>\\n</div>\\n\\n<ng-template #helpRenderer let-types=types let-tpl=tpl>\\n    <ng-container [ngSwitch]=\\\"forComponent ? forComponent : 'shared'\\\">\\n        <ng-container *ngSwitchDefault>\\n            <ng-container *ngTemplateOutlet=\\\"tpl;context:{type: forComponent}\\\"></ng-container>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"'shared'\\\">\\n            <ul>\\n                <li *ngFor=\\\"let type of types\\\">\\n                    <nui-expander [open]=\\\"false\\\" header=\\\"{{type}}\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"tpl;context:{type: type}\\\"></ng-container>\\n                    </nui-expander>\\n                </li>\\n            </ul>\\n        </ng-container>\\n    </ng-container>\\n</ng-template>\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.nui-filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","import { Component, Input, OnInit } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-schematic-json\",\n    template: `\n        <div>\n            <code>Schema.json <b>options:</b></code>\n        </div>\n        <div *ngFor=\"let item of schemaViewData | keyvalue\"\n                class=\"d-inline-block p-2\">\n            <nui-popover [template]=\"popoverWithBasicUsage\"\n                            placement=\"top\">\n                <span class=\"nui-text-default--hoverable\">{{item.key}}</span>\n            </nui-popover>\n            <ng-template #popoverWithBasicUsage>\n                <div *ngFor=\"let field of fieldsToDisplay\">\n                    <ng-container *ngIf=\"item.value[field] !== undefined\">\n                        <div class=\"nui-text-default\">\n                            <i style=\"font-weight: bold\">{{ field }}: </i> <span>{{item.value[field]}}</span>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-template>\n        </div>\n    `,\n})\nexport class SchematicJsonComponent implements OnInit {\n    // Folder from where schema.json should be taken\n    @Input() schematicFolderName: string;\n\n    public schemaViewData: any = {};\n    public fieldsToDisplay: Array<string> = [\"description\", \"type\", \"enum\", \"alias\", \"default\"];\n\n    ngOnInit() {\n       const schemaJson = require(`../../../../schematics/src/${this.schematicFolderName}/schema.json`);\n       this.fillViewData(schemaJson.properties);\n    }\n\n    private fillViewData(schemaJsonFields: any) {\n        Object.keys(schemaJsonFields).forEach(fieldName => {\n            const { description, type, enum: enumField, default: defaultField, alias: aliasField } = schemaJsonFields[fieldName];\n            this.schemaViewData[fieldName] = {\n                description,\n                type,\n                enum: enumField && enumField.join(\", \"),\n                default: defaultField,\n                alias: aliasField,\n            };\n        });\n    }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { SYMBOL_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\n * Safer version of `Array.from` that return `null` if value isn't convertible to array.\n * Also protects against Array-like objects without items.\n *\n * @example\n *\n * safeArrayFrom([ 1, 2, 3 ]) // [1, 2, 3]\n * safeArrayFrom('ABC') // null\n * safeArrayFrom({ length: 1 }) // null\n * safeArrayFrom({ length: 1, 0: 'Alpha' }) // ['Alpha']\n * safeArrayFrom({ key: 'value' }) // null\n * safeArrayFrom(new Map()) // []\n *\n */\n\nexport default function safeArrayFrom(collection) {\n  var mapFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (item) {\n    return item;\n  };\n\n  if (collection == null || _typeof(collection) !== 'object') {\n    return null;\n  }\n\n  if (Array.isArray(collection)) {\n    return collection.map(mapFn);\n  } // Is Iterable?\n\n\n  var iteratorMethod = collection[SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    // $FlowFixMe[incompatible-use]\n    var iterator = iteratorMethod.call(collection);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn(step.value, i));\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = collection.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (!Object.prototype.hasOwnProperty.call(collection, _i)) {\n        return null;\n      }\n\n      _result.push(mapFn(collection[String(_i)], _i));\n    }\n\n    return _result;\n  }\n\n  return null;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nexport default function keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = item;\n    return map;\n  }, Object.create(null));\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-filtered-view-table-with-custom-virtual-scroll-table__container {\\n    height: 400px;\\n    border-color: lightgray;\\n    overflow: auto;\\n}\\n\\n.app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container {\\n    height: 300px;\\n}\\n\\n.app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer {\\n    height: 28px;\\n    .setCssVariable(background-color, nui-color-bg-transparent);\\n    .setCssVariable(color, nui-color-text-secondary);\\n}\\n\";","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { CustomTemplateFilterGroupCompositeComponent } from \"../custom-template-filter-group.component\";\n\n@Component({\n    selector: \"app-custom-template-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\n\nexport class CustomTemplateFilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(CustomTemplateFilterGroupCompositeComponent) filterGroups: QueryList<CustomTemplateFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: CustomTemplateFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"nui-filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"nui-filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"nui-filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"<div class=\\\"app-filtered-view-table-with-custom-virtual-scroll-table__container\\\">\\n    <cdk-virtual-scroll-viewport class=\\\"app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container\\\" tableStickyHeader #viewportRef [itemSize]=\\\"rowHeight\\\">\\n    <table nui-table [dataSource]=\\\"items | sliceRange: viewportRef.getRenderedRange()\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell [style.width.%]=\\\"30\\\" *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n            <ng-template nuiRowDef cdkVirtualFor\\n                         let-context\\n                         [nuiRowDefColumns]=\\\"displayedColumns\\\"\\n                         [cdkVirtualForOf]=\\\"items\\\">\\n                <tr nui-row ></tr>\\n            </ng-template>\\n    </table>\\n    </cdk-virtual-scroll-viewport>\\n\\n    <footer class=\\\"app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                         item(s).\\n                    </div>\\n                    <div class=\\\"d-flex justify-content-center\\\">\\n                        <button btn\\n                                nui-button\\n                                i18n\\n                                type=\\\"button\\\"\\n                                size=\\\"default\\\"\\n                                displayStyle=\\\"action\\\"\\n                                (click)=\\\"applyFilters(false)\\\">\\n                            Load another {{pageSize}} items\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n\";","import { IServer, ServerStatus } from \"./types\";\n\n// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: \"FOCUS-SVR-12345\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-ASD123\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-DSA331\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-JKS212\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"ABERN-SVR-ATQU9404\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-433AAD\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-098331\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-GHJ882\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LLK001\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-KKJ998\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-RRR001\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LKJF12\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-882JJS\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-7733KK\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-JSHNSA\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-KKAEQWE\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-123KKNPQ\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-RRF231\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n];\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    INovaFilteringOutputs,\\n    ISelection,\\n    ISortedItem,\\n    nameof,\\n    PaginatorComponent,\\n    SearchComponent,\\n    SorterDirection,\\n    TableComponent,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    debounceTime,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-table-with-selection-data\\\";\\nimport { FilteredViewTableWithSelectionDataSource } from \\\"../filtered-view-table-with-selection-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-selection-table\\\",\\n    templateUrl: \\\"./filtered-view-table.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n\\n    // sorting\\n    public sortedColumn: ISortedItem = {\\n        sortBy: \\\"name\\\",\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    // search\\n    public searchTerm: string;\\n    public columnsToApplySearch = [\\\"name\\\"];\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    // row selection\\n    public selectedItems: IServer[] = [];\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [\\\"ABERN-SVR-ATQU9404\\\"],\\n        exclude: [],\\n    };\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithSelectionDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        // register filter to be able to sort\\n        this.dataSource.registerComponent(this.table.getFilterComponents());\\n        this.dataSource.registerComponent({\\n            search: { componentInstance: this.search },\\n            paginator: { componentInstance: this.paginator },\\n        });\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                // update the list of items to be rendered\\n                this.items = data.repeat?.itemsSource || [];\\n                this.totalItems = data.paginator?.total ?? 0;\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // listen for input change in order to perform the search\\n        this.search.inputChange.pipe(\\n            debounceTime(500),\\n            // perform actual search\\n            tap(() => this.onSearch()),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onSearchCancel() {\\n        await this.applyFilters();\\n    }\\n\\n    public async sortData(sortedColumn: ISortedItem) {\\n        this.sortedColumn = sortedColumn;\\n        await this.applyFilters();\\n    }\\n\\n    public async changePagination($event: any) {\\n        await this.applyFilters();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        // do something with the selection\\n\\n        // make component aware of the new selection value\\n        // so it's displayed correctly\\n        this.changeDetection.detectChanges();\\n    }\\n\\n    // trackBy handler used to identify uniquely each item in the table\\n    public trackBy(index: number, item: IServer) {\\n        return item.name;\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar isFinitePolyfill = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n};\n\nexport default isFinitePolyfill;\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","import { SYMBOL_ASYNC_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function isAsyncIterable(maybeAsyncIterable) {\n  return typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0 ? void 0 : maybeAsyncIterable[SYMBOL_ASYNC_ITERATOR]) === 'function';\n}\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import find from \"../../polyfills/find.mjs\";\nimport objectEntries from \"../../polyfills/objectEntries.mjs\";\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { getNamedType, isNonNullType, isLeafType, isObjectType, isListType, isInterfaceType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subReason = _ref[1];\n      return \"subfields \\\"\".concat(responseName, \"\\\" conflict because \") + reasonMessage(subReason);\n    }).join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\n\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  var cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n\n      for (var _i2 = 0; _i2 < conflicts.length; _i2++) {\n        var _ref3 = conflicts[_i2];\n        var _ref2$ = _ref3[0];\n        var responseName = _ref2$[0];\n        var reason = _ref2$[1];\n        var fields1 = _ref3[1];\n        var fields2 = _ref3[2];\n        var reasonMsg = reasonMessage(reason);\n        context.reportError(new GraphQLError(\"Fields \\\"\".concat(responseName, \"\\\" conflict because \").concat(reasonMsg, \". Use different aliases on the fields to fetch both if this was intentional.\"), fields1.concat(fields2)));\n      }\n    }\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1]; // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (var i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fieldMap, fragmentNames[i]); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (var j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\n\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  var fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1]; // Do not compare a fragment's fieldMap to itself.\n\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\n\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1]; // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\n\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1]; // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  if (fragmentNames2.length !== 0) {\n    for (var j = 0; j < fragmentNames2.length; j++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n    }\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n\n  if (fragmentNames1.length !== 0) {\n    for (var i = 0; i < fragmentNames1.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n    }\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n\n  for (var _i3 = 0; _i3 < fragmentNames1.length; _i3++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[_i3], fragmentNames2[_j]);\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\n\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (var _i5 = 0, _objectEntries2 = objectEntries(fieldMap); _i5 < _objectEntries2.length; _i5++) {\n    var _ref5 = _objectEntries2[_i5];\n    var responseName = _ref5[0];\n    var fields = _ref5[1];\n\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\n\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (var _i7 = 0, _Object$keys2 = Object.keys(fieldMap1); _i7 < _Object$keys2.length; _i7++) {\n    var responseName = _Object$keys2[_i7];\n    var fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\n\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2]; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && isObjectType(parentType1) && isObjectType(parentType2);\n\n  if (!areMutuallyExclusive) {\n    var _node1$arguments, _node2$arguments;\n\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [[responseName, \"\\\"\".concat(name1, \"\\\" and \\\"\").concat(name2, \"\\\" are different fields\")], [node1], [node2]];\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var args1 = (_node1$arguments = node1.arguments) !== null && _node1$arguments !== void 0 ? _node1$arguments : []; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n    var args2 = (_node2$arguments = node2.arguments) !== null && _node2$arguments !== void 0 ? _node2$arguments : []; // Two field calls must have the same arguments.\n\n    if (!sameArguments(args1, args2)) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  } // The return type for each field.\n\n\n  var type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  var type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, \"they return conflicting types \\\"\".concat(inspect(type1), \"\\\" and \\\"\").concat(inspect(type2), \"\\\"\")], [node1], [node2]];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, getNamedType(type1), selectionSet1, getNamedType(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n\n  return arguments1.every(function (argument1) {\n    var argument2 = find(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n\n    if (!argument2) {\n      return false;\n    }\n\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return print(value1) === print(value2);\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\n\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n\n  return cached;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\n\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var _i9 = 0, _selectionSet$selecti2 = selectionSet.selections; _i9 < _selectionSet$selecti2.length; _i9++) {\n    var selection = _selectionSet$selecti2[_i9];\n\n    switch (selection.kind) {\n      case Kind.FIELD:\n        {\n          var fieldName = selection.name.value;\n          var fieldDef = void 0;\n\n          if (isObjectType(parentType) || isInterfaceType(parentType)) {\n            fieldDef = parentType.getFields()[fieldName];\n          }\n\n          var responseName = selection.alias ? selection.alias.value : fieldName;\n\n          if (!nodeAndDefs[responseName]) {\n            nodeAndDefs[responseName] = [];\n          }\n\n          nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n          break;\n        }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT:\n        {\n          var typeCondition = selection.typeCondition;\n          var inlineFragmentType = typeCondition ? typeFromAST(context.getSchema(), typeCondition) : parentType;\n\n          _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n\n          break;\n        }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref6) {\n      var reason = _ref6[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref7) {\n      var fields1 = _ref7[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref8) {\n      var fields2 = _ref8[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\n\nvar PairSet = /*#__PURE__*/function () {\n  function PairSet() {\n    this._data = Object.create(null);\n  }\n\n  var _proto = PairSet.prototype;\n\n  _proto.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n\n\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n\n    return true;\n  };\n\n  _proto.add = function add(a, b, areMutuallyExclusive) {\n    this._pairSetAdd(a, b, areMutuallyExclusive);\n\n    this._pairSetAdd(b, a, areMutuallyExclusive);\n  };\n\n  _proto._pairSetAdd = function _pairSetAdd(a, b, areMutuallyExclusive) {\n    var map = this._data[a];\n\n    if (!map) {\n      map = Object.create(null);\n      this._data[a] = map;\n    }\n\n    map[b] = areMutuallyExclusive;\n  };\n\n  return PairSet;\n}();\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerComponent,\n    ],\n    exports: [\n        ItemPickerComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerModule {}\n","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main server model being received from the backend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-paginated-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-paginated-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-paginated-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-paginated-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-paginated-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 20;\n\n","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-selection-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-selection-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-selection-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-selection-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-selection-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\";","export { GraphQLError, printError } from \"./GraphQLError.mjs\";\nexport { syntaxError } from \"./syntaxError.mjs\";\nexport { locatedError } from \"./locatedError.mjs\";\nexport { formatError } from \"./formatError.mjs\";\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"// number of results to be displayed in the table\\nexport const RESULTS_PER_PAGE = 400;\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewListComponent } from \"./filtered-view-list/filtered-view-list.component\";\nimport { FilteredViewWithListComponent } from \"./filtered-view-with-list.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewWithListComponent,\n        FilteredViewListComponent,\n    ],\n    exports: [\n        FilteredViewWithListComponent,\n        FilteredViewListComponent,\n    ],\n})\n\nexport class FilteredViewWithListModule {}\n","<div>\n    <div class=\"d-flex flex-row\">\n        <nui-sorter class=\"app-filtered-view-with-list-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-filtered-view-with-list-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"filteringState.repeat?.itemsSource.length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-filtered-view-with-list-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"filteringState.repeat?.itemsSource\">\n        </nui-repeat>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <nui-paginator class=\"app-filtered-view-with-list-list-paginator\"\n                       [(page)]=\"page\"\n                       [pageSize]=\"pageSize\"\n                       [pageSizeSet]=\"[10,20,30,40]\"\n                       [total]=\"filteringState.paginator?.total\"\n                       (pagerAction)=\"applyFilters()\">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    LocalFilteringDataSource,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from \"@nova-ui/bits\";\nimport {\n    Subject,\n} from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-with-list-data\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-with-list-list\",\n    templateUrl: \"./filtered-view-list.component.html\",\n    styleUrls: [\"./filtered-view-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListComponent implements AfterViewInit, OnDestroy {\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: LocalFilteringDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isEnumType } from \"../../type/definition.mjs\";\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nexport function UniqueEnumValueNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    var typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var valueNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n    var valueNames = knownValueNames[typeName];\n\n    for (var _i2 = 0; _i2 < valueNodes.length; _i2++) {\n      var valueDef = valueNodes[_i2];\n      var valueName = valueDef.name.value;\n      var existingType = existingTypeMap[typeName];\n\n      if (isEnumType(existingType) && existingType.getValue(valueName)) {\n        context.reportError(new GraphQLError(\"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\"), valueDef.name));\n      } else if (valueNames[valueName]) {\n        context.reportError(new GraphQLError(\"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" can only be defined once.\"), [valueNames[valueName], valueDef.name]));\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n","export default \"import { CdkVirtualScrollViewport } from \\\"@angular/cdk/scrolling\\\";\\nimport {\\n    AfterViewInit,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    OnInit,\\n    ViewChild,\\n    ViewEncapsulation\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IFilteringOutputs,\\n    ISelection,\\n    nameof,\\n    TableComponent,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Subject } from \\\"rxjs\\\";\\nimport {\\n    filter,\\n    switchMap,\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"../filtered-view-table-with-virtual-scroll-selection-data\\\";\\nimport { FilteredViewTableWithVirtualScrollSelectionDataSource } from \\\"../filtered-view-table-with-virtual-scroll-selection-data-source.service\\\";\\nimport { IServer, IServerFilters } from \\\"../types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-virtual-scroll-selection-table\\\",\\n    templateUrl: \\\"./filtered-view-table.component.html\\\",\\n    styleUrls: [\\\"./filtered-view-table.component.less\\\"],\\n    encapsulation: ViewEncapsulation.None,\\n})\\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public items: IServer[] = [];\\n    public isBusy: boolean = false;\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // columns of the table\\n    public displayedColumns = [\\\"name\\\", \\\"location\\\", \\\"status\\\"];\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    // row selection\\n    public selectedItems: IServer[] = [];\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [\\\"ABERN-SVR-ATQU9404\\\"],\\n        exclude: [],\\n    };\\n\\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\\n\\n    // the height in px of a single row from the table\\n    public rowHeight = 40;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollSelectionDataSource<IServer>,\\n        private viewportManager: VirtualViewportManager,\\n        private changeDetection: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngOnInit() {\\n        this.dataSource.busy.pipe(\\n            tap(val => {\\n                this.isBusy = val;\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            virtualScroll: {componentInstance: this.viewportManager},\\n        });\\n        this.viewportManager\\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\\n            .setViewport(this.viewport)\\n            // Note: Initializing the stream with the desired page size, based on which\\n            // VirtualViewportManager will perform the observations and will emit\\n            // distinct ranges with step equal to provided pageSize\\n            .observeNextPage$({ pageSize: this.pageSize }).pipe(\\n                // Since we know the total number of items we can stop the stream when dataset end is reached\\n                // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\\n                filter(() => !this.items.length || this.items.length < this.totalItems),\\n                tap(() => this.applyFilters(false)),\\n                // Note: Using the same stream to subscribe to the outputsSubject and update the items list\\n                switchMap(() => this.dataSource.outputsSubject.pipe(\\n                    tap((data: IFilteringOutputs) => {\\n                        // update the list of items to be rendered\\n                        const items = data.repeat?.itemsSource || [];\\n\\n                        // after receiving data we need to append it to our previous fetched results\\n                        this.items = this.items.concat(items);\\n                        this.totalItems = data.paginator?.total || 0;\\n                        this.changeDetection.detectChanges();\\n                    })\\n                )\\n            ),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        // do something with the selection\\n\\n        // make component aware of the new selection value\\n        // so it's displayed correctly\\n        this.changeDetection.detectChanges();\\n    }\\n\\n    // trackBy handler used to identify uniquely each item in the table\\n    public trackBy(index: number, item: IServer) {\\n        return item.name;\\n    }\\n\\n    public async applyFilters(resetVirtualScroll: boolean = true) {\\n        if (resetVirtualScroll) {\\n            // it is important to reset viewportManager to start page\\n            // so that the datasource performs the search with 1st page\\n            this.viewportManager.reset({emitFirstPage: false});\\n        }\\n\\n        // Every new search request or filter change should\\n        // clear the cache in order to correctly display a new set of data\\n        const filters = this.dataSource.getFilters();\\n        const reset = this.dataSource.computeFiltersChange(filters);\\n        if (reset || filters.virtualScroll?.value.start === 0) {\\n            this.items = [];\\n        }\\n\\n        await this.dataSource.applyFilters();\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\nconst layoutSchema = require(\\\"../../../schematics/src/layout/schema.json\\\");\\nconst tableSchema = require(\\\"../../../schematics/src/table/schema.json\\\");\\nconst addSchema = require(\\\"../../../schematics/src/ng-add/schema.json\\\");\\n\\n@Component({\\n    selector: \\\"schematics-docs\\\",\\n    templateUrl: \\\"./schematics-docs.component.html\\\",\\n})\\nexport class SchematicsDocsComponent {\\n    public layoutJsonScheme: any = {};\\n    public tableJsonScheme: any = {};\\n    public addJsonScheme: any = {};\\n    objectKeys = Object.keys;\\n\\n    constructor() {\\n        this.schemaObjectFiller(layoutSchema.properties, \\\"layout\\\");\\n        this.schemaObjectFiller(tableSchema.properties, \\\"table\\\");\\n        this.schemaObjectFiller(addSchema.properties, \\\"add\\\");\\n    }\\n\\n    private schemaObjectFiller(props: any, name: string) {\\n        const object = (this as any)[`${name}JsonScheme`];\\n        for (const prop of this.objectKeys(props)) {\\n            object[prop] = {\\n                \\\"description\\\": props[prop].description,\\n                \\\"type\\\": props[prop].type,\\n            };\\n            if (props[prop].enum) { object[prop].enum = props[prop].enum; }\\n            if (props[prop].default) { object[prop].default = props[prop].default; }\\n            if (props[prop].alias) { object[prop].alias = props[prop].alias; }\\n        }\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    ViewChild,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    IMenuItem,\\n    INovaFilteringOutputs,\\n    IRepeatItemConfig,\\n    ISorterChanges,\\n    ListService,\\n    nameof,\\n    PaginatorComponent,\\n    RepeatComponent,\\n    RepeatSelectionMode,\\n    SearchComponent,\\n    SelectionType,\\n    SorterComponent,\\n    SorterDirection,\\n} from \\\"@nova-ui/bits\\\";\\nimport {\\n    Subject,\\n} from \\\"rxjs\\\";\\nimport {\\n    takeUntil,\\n    tap,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    LOCAL_DATA,\\n    RESULTS_PER_PAGE,\\n} from \\\"./selection-list-data\\\";\\nimport {\\n    IServer,\\n    IServerFilters,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-selection-list\\\",\\n    templateUrl: \\\"./selection-list.component.html\\\",\\n    styleUrls: [\\\"./selection-list.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: ClientSideDataSource,\\n        },\\n    ],\\n})\\nexport class SelectionListComponent implements AfterViewInit, OnDestroy {\\n    public readonly sorterItems: IMenuItem[] = [\\n        {\\n            title: $localize`Name`,\\n            value: \\\"name\\\",\\n        },\\n        {\\n            title: $localize`Status`,\\n            value: \\\"status\\\",\\n        },\\n        {\\n            title: $localize`Location`,\\n            value: \\\"location\\\",\\n        },\\n    ];\\n\\n    public readonly initialSortDirection = SorterDirection.ascending;\\n    public sortBy = this.sorterItems[0].value;\\n\\n    public filteringState: INovaFilteringOutputs = {};\\n\\n    // This value is obtained from the server and used to evaluate the total number of pages to display\\n    public totalItems: number = 0;\\n\\n    // pagination\\n    public page: number = 1;\\n    public pageSize: number = RESULTS_PER_PAGE;\\n\\n    public itemConfig: IRepeatItemConfig<IServer> = {\\n        trackBy: (index, item) => item?.name,\\n    };\\n\\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\\n    @ViewChild(SearchComponent) search: SearchComponent;\\n    @ViewChild(SorterComponent) sorter: SorterComponent;\\n\\n    private destroy$ = new Subject();\\n\\n    constructor(\\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>,\\n        private changeDetection: ChangeDetectorRef,\\n        private listService: ListService\\n    ) {\\n        this.dataSource.setData(LOCAL_DATA);\\n    }\\n\\n    public async ngAfterViewInit() {\\n        this.dataSource.registerComponent({\\n            paginator: { componentInstance: this.paginator },\\n            search: { componentInstance: this.search },\\n            sorter: { componentInstance: this.sorter },\\n            repeat: { componentInstance: this.repeat },\\n        });\\n\\n        this.search.focusChange.pipe(\\n            tap(async(focused: boolean) => {\\n                // we want to perform a new search on blur event\\n                // only if the search filter changed\\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\\\"search\\\"))) {\\n                    await this.applyFilters();\\n                }\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        this.dataSource.outputsSubject.pipe(\\n            tap((data: INovaFilteringOutputs) => {\\n                this.filteringState = { ...this.filteringState, ...data };\\n                this.filteringState = this.listService.updateSelectionState(this.filteringState);\\n\\n                this.totalItems = data.paginator?.total ?? 0;\\n\\n                this.changeDetection.detectChanges();\\n            }),\\n            takeUntil(this.destroy$)\\n        ).subscribe();\\n\\n        // make 1st call to retrieve initial results\\n        await this.applyFilters();\\n    }\\n\\n    public ngOnDestroy() {\\n        this.destroy$.next();\\n        this.destroy$.complete();\\n    }\\n\\n    public async onSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async onCancelSearch() {\\n        await this.applyFilters();\\n    }\\n\\n    public async applyFilters() {\\n        await this.dataSource.applyFilters();\\n    }\\n\\n    public async onSorterAction(changes: ISorterChanges) {\\n        this.sortBy = changes.newValue.sortBy;\\n        await this.applyFilters();\\n    }\\n\\n    public onSelectorOutput(selectionType: SelectionType) {\\n        this.filteringState = this.listService.applySelector(selectionType, this.filteringState);\\n    }\\n\\n    public onRepeatOutput(selectedItems: IServer[]) {\\n        this.filteringState = this.listService.selectItems(selectedItems, RepeatSelectionMode.multi, this.filteringState);\\n    }\\n}\\n\";","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-filtered-view-table-with-pagination-table__container {\\n    overflow: auto;\\n}\\n\\n.app-filtered-view-table-with-pagination-table-scrolling-footer {\\n    height: 28px;\\n}\\n\";","<h2>Selection result</h2>\n<div class=\"flex-row-container\">\n    <span class=\"flex-independent-row-item\">{{selection | json}}</span>\n</div>\n<div class=\"app-filtered-view-table-with-selection-table__container\">\n    <div class=\"app-filtered-view-table-with-selection-table-searchable__search\">\n        <nui-search [value]=\"searchTerm\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onSearchCancel()\">\n        </nui-search>\n    </div>\n\n    <table nui-table [dataSource]=\"items\"\n           [sortable]=\"true\"\n           [sortedColumn]=\"sortedColumn\"\n           (sortOrderChanged)=\"sortData($event)\"\n           [(selection)]=\"selection\"\n           (selectionChange)=\"onSelectionChanged($event)\"\n           [selectable]=\"true\"\n           [trackBy]=\"trackBy\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\" [rowObject]=\"row\"></tr>\n    </table>\n\n    <footer class=\"app-filtered-view-table-with-selection-table-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISelection,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SearchComponent,\n    SorterDirection,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    debounceTime,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-table-with-selection-data\";\nimport { FilteredViewTableWithSelectionDataSource } from \"../filtered-view-table-with-selection-data-source.service\";\nimport { IServer, IServerFilters } from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-selection-table\",\n    templateUrl: \"./filtered-view-table.component.html\",\n    styleUrls: [\"./filtered-view-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: \"name\",\n        direction: SorterDirection.ascending,\n    };\n\n    // search\n    public searchTerm: string;\n    public columnsToApplySearch = [\"name\"];\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    // row selection\n    public selectedItems: IServer[] = [];\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [\"ABERN-SVR-ATQU9404\"],\n        exclude: [],\n    };\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithSelectionDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            search: { componentInstance: this.search },\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // listen for input change in order to perform the search\n        this.search.inputChange.pipe(\n            debounceTime(500),\n            // perform actual search\n            tap(() => this.onSearch()),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onSearchCancel() {\n        await this.applyFilters();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public onSelectionChanged(selection: ISelection) {\n        // do something with the selection\n\n        // make component aware of the new selection value\n        // so it's displayed correctly\n        this.changeDetection.detectChanges();\n    }\n\n    // trackBy handler used to identify uniquely each item in the table\n    public trackBy(index: number, item: IServer) {\n        return item.name;\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","<div nui-busy [busy]=\"isBusy\">\n    <nui-spinner size=\"large\" i18n-message message=\"Loading...\"></nui-spinner>\n    <div class=\"d-flex flex-row\">\n        <nui-sorter class=\"app-filtered-view-list-with-pagination-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-filtered-view-list-with-pagination-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"!isBusy && (listItems$ | async).length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-filtered-view-list-with-pagination-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"filteringState.repeat?.itemsSource\">\n        </nui-repeat>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <nui-paginator class=\"app-filtered-view-list-with-pagination-list-paginator\"\n                       [(page)]=\"page\"\n                       [pageSize]=\"pageSize\"\n                       [pageSizeSet]=\"[10,20,30,40]\"\n                       [total]=\"filteringState.paginator?.total\"\n                       (pagerAction)=\"applyFilters()\">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from \"@nova-ui/bits\";\nimport {\n    BehaviorSubject,\n    Subject,\n} from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-list-with-pagination-data\";\nimport { FilteredViewListWithPaginationDataSource } from \"../filtered-view-list-with-pagination-data-source.service\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-list-with-pagination-list\",\n    templateUrl: \"./filtered-view-list.component.html\",\n    styleUrls: [\"./filtered-view-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithPaginationDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.listItems$.next(data.repeat?.itemsSource || []);\n\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"<nui-schematic-docs-page schematicFolderName=\\\"list\\\">\\n    <div schematicSummary>\\n        <p>\\n            The List schematic provides the ability to create a generic list that can cover a majority of use cases for a list.\\n            Its main responsibility is to integrate the functionality of the <code>nui-repeat</code> component with other components\\n            commonly used with a list such as <code>nui-selector</code>, <code>nui-search</code>, <code>nui-paginator</code>, and\\n            <code>nui-sorter</code>.\\n        </p>\\n        <h2>Notable Command Line Options</h2>\\n        <nui-schematic-cli-option name=\\\"selectionMode\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"pagingMode\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"dataSource\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"enableSearch\\\"></nui-schematic-cli-option>\\n        <nui-schematic-cli-option name=\\\"enableSort\\\"></nui-schematic-cli-option>\\n    </div>\\n    <nui-tab-group schematicExamples>\\n        <nui-tab heading=\\\"Basic\\\">\\n            <h2>Basic Usage</h2>\\n            <p>\\n                This example illustrates the output of the CLI command without any modifications. Consumers are able to build upon the generated boilerplate to\\n                provide additional functionality depending on their use case. Data manipulations (filtering/pagination/sorting/search) are handled by the\\n                <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\"><code>ClientSideDataSource</code></a>\\n                service, which can be extended with custom filtering behavior.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=basic-list --p=app</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"basic-list\\\">\\n                <app-basic-list></app-basic-list>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Selection\\\">\\n            <h2>List with Selection</h2>\\n            <p>\\n                Selection is facilitated by the\\n                <a target=\\\"_blank\\\" href=\\\"../injectables/ListService.html\\\"><code>ListService</code></a>\\n                and can be enabled by running the CLI command with the <code>selectionMode</code> option\\n                set to one of the selection-enabling values listed under <strong>Notable Command Line Options</strong> section above.\\n                The initial selection can be set using the <code>selection</code> input of\\n                the <code>nui-repeat</code>. Selection changes can be intercepted using the\\n                <code>selectionChange</code> output of the <code>nui-repeat</code>.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=selection-list --p=app\\n                <strong>--selectionMode=multi</strong></nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"selection-list\\\">\\n                <app-selection-list></app-selection-list>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Search\\\">\\n            <h2>Search Properties</h2>\\n            <p>\\n                To specify fields for search, pass a properties array to the <code>setSearchProperties</code> method\\n                exposed by the <a target=\\\"_blank\\\" href=\\\"../injectables/ClientSideDataSource.html\\\">\\n                    <code>ClientSideDataSource</code></a> service.\\n                If no properties are specified, the search will be performed on all fields.\\n            </p>\\n            <nui-schematic-docs-command>\\n                ng g @nova-ui/bits:list --name=search-list --p=app --selectionMode=none --dataSource=serverSide --pagingMode=pagination --enable-sort=false\\n                <strong>--enable-search=true</strong>\\n            </nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"search-list\\\">\\n                <app-search-list></app-search-list>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Pagination\\\">\\n            <h2>Pagination</h2>\\n            <p>\\n                This example shows how to add pagination to <code>nui-repeat</code> with a remote data source.\\n            </p>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=paginated-list --p=app --pagingMode=pagination --dataSource=serverSide</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"paginated-list\\\">\\n                <app-paginated-list></app-paginated-list>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n\\n        <nui-tab heading=\\\"Virtual Scroll\\\">\\n            <h2>Virtual Scroll</h2>\\n            <p>\\n                This example shows how to add virtual scroll to <code>nui-repeat</code> with a remote data source.\\n            </p>\\n            <nui-message [allowDismiss]=\\\"false\\\" type=\\\"warning\\\">\\n                Since the example makes use of search and sorting filters, it's important to note that\\n                the viewport manager's paging progress must be reset each time the data is refreshed with\\n                new filtered results. The reset invocation can be seen in the\\n                <code>virtual-scroll-list.component.ts:doSearch</code> method.\\n            </nui-message>\\n            <nui-schematic-docs-command>ng g @nova-ui/bits:list --name=scrollable-list --p=app --pagingMode=virtualScroll --dataSource=serverSide</nui-schematic-docs-command>\\n            <nui-schematic-docs-example exampleFolderName=\\\"virtual-scroll-list\\\">\\n                <app-virtual-scroll-list></app-virtual-scroll-list>\\n            </nui-schematic-docs-example>\\n        </nui-tab>\\n    </nui-tab-group>\\n</nui-schematic-docs-page>\\n\\n\";","<div class=\"app-filtered-view-table-with-custom-virtual-scroll-table__container\">\n    <cdk-virtual-scroll-viewport class=\"app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-container\" tableStickyHeader #viewportRef [itemSize]=\"rowHeight\">\n    <table nui-table [dataSource]=\"items | sliceRange: viewportRef.getRenderedRange()\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell [style.width.%]=\"30\" *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <ng-template nuiRowDef cdkVirtualFor\n                         let-context\n                         [nuiRowDefColumns]=\"displayedColumns\"\n                         [cdkVirtualForOf]=\"items\">\n                <tr nui-row ></tr>\n            </ng-template>\n    </table>\n    </cdk-virtual-scroll-viewport>\n\n    <footer class=\"app-filtered-view-table-with-custom-virtual-scroll-table-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                         item(s).\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <button btn\n                                nui-button\n                                i18n\n                                type=\"button\"\n                                size=\"default\"\n                                displayStyle=\"action\"\n                                (click)=\"applyFilters(false)\">\n                            Load another {{pageSize}} items\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n","import { CdkVirtualScrollViewport } from \"@angular/cdk/scrolling\";\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    nameof,\n    TableComponent,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    CUSTOM_SCROLL_ITEMS_PER_PAGE,\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-table-with-custom-virtual-scroll-data\";\nimport { FilteredViewTableWithCustomVirtualScrollDataSource } from \"../filtered-view-table-with-custom-virtual-scroll-data-source.service\";\nimport { IServer, IServerFilters } from \"../types\";\n\nimport { VirtualScrollCustomStrategyService } from \"./virtual-scroll-custom-strategy.service\";\n\n@Component({\n    selector: \"app-filtered-view-table-with-custom-virtual-scroll-table\",\n    templateUrl: \"./filtered-view-table.component.html\",\n    styleUrls: [\"./filtered-view-table.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        VirtualViewportManager,\n        VirtualScrollCustomStrategyService,\n        {\n            provide: CUSTOM_SCROLL_ITEMS_PER_PAGE,\n            useValue: RESULTS_PER_PAGE,\n        },\n    ],\n})\nexport class FilteredViewTableComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n    // the height in px of a single row from the table\n    public rowHeight = 40;\n\n    private previouslyLoadedCount: number;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithCustomVirtualScrollDataSource<IServer>,\n        private viewportManager: VirtualViewportManager,\n        private customVirtualScrollStrategyService: VirtualScrollCustomStrategyService,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: {componentInstance: this.customVirtualScrollStrategyService },\n        });\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.viewport);\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                let items = data.repeat?.itemsSource || [];\n\n                // number of fetched items from our data source\n                const fetchedItemsCount = items.length;\n\n                // number of useful items after eliminating the leftovers;\n                // leftovers appear when we reach the end of all our data\n                // since we're keep requesting the same page multiple times\n                // waiting for new items to be added between subsequent requests\n                const usefulItemsCount = fetchedItemsCount < this.pageSize\n                    ? this.previouslyLoadedCount - fetchedItemsCount\n                    : fetchedItemsCount;\n\n                items = items.slice(0, usefulItemsCount);\n\n                this.previouslyLoadedCount = items.length;\n\n                // append current useful items we need to append it to our previous fetched results\n                this.items = this.items.concat(items);\n\n                this.customVirtualScrollStrategyService.prepareNextPage(fetchedItemsCount);\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.items = [];\n            this.customVirtualScrollStrategyService.reset();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n}\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","<div nui-busy [busy]=\"isBusy\">\n    <nui-spinner size=\"large\" i18n-message message=\"Loading...\"></nui-spinner>\n    <div class=\"d-flex flex-row\">\n        <nui-search class=\"d-flex justify-content-end app-search-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"!isBusy && (listItems$ | async).length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-search-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"filteringState.repeat?.itemsSource\">\n        </nui-repeat>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <nui-paginator class=\"app-search-list-paginator\"\n                       [(page)]=\"page\"\n                       [pageSize]=\"pageSize\"\n                       [pageSizeSet]=\"[10,20,30,40]\"\n                       [total]=\"filteringState.paginator?.total\"\n                       (pagerAction)=\"applyFilters()\">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n} from \"@nova-ui/bits\";\nimport {\n    BehaviorSubject,\n    Subject,\n} from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./search-list-data\";\nimport { SearchListDataSource } from \"./search-list-data-source.service\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"./types\";\n\n@Component({\n    selector: \"app-search-list\",\n    templateUrl: \"./search-list.component.html\",\n    styleUrls: [\"./search-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: SearchListDataSource,\n        },\n    ],\n})\nexport class SearchListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: SearchListDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.listItems$.next(data.repeat?.itemsSource || []);\n\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","// number of results to be displayed\nexport const RESULTS_PER_PAGE = 10;\n\n","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins.less\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.nui-filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        .setCssVariable(background-color, nui-color-bg-accordion_header);\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        .setCssVariable(color, nui-color-text-secondary);\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        .setCssVariable(color, nui-color-text-secondary);\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.icon-margin {\\n    margin-right: @nui-space-xs;\\n}\\n\\n.app-table-with-selection__container {\\n    overflow: auto;\\n}\\n\\n.app-table-with-selection-searchable__search {\\n    max-width: 350px;\\n    margin-bottom: @nui-space-xs;\\n    margin-left: auto;\\n}\\n\\n.app-table-with-selection-scrolling-footer {\\n    height: 28px;\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiCheckboxModule,\\n    NuiDialogModule,\\n    NuiDividerModule,\\n    NuiExpanderModule,\\n    NuiPopoverModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupDialogComponent } from \\\"./filter-group-dialog/filter-group-dialog.component\\\";\\nimport { FilterGroupComponent } from \\\"./filter-group.component\\\";\\nimport { FilterGroupService } from \\\"./filter-group.service\\\";\\nimport { FilterGroupsWrapperComponent } from \\\"./filter-groups-wrapper/filter-groups-wrapper.component\\\";\\nimport { ItemPickerModule } from \\\"./item-picker/item-picker.module\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiCheckboxModule,\\n        NuiDialogModule,\\n        NuiDividerModule,\\n        NuiExpanderModule,\\n        NuiPopoverModule,\\n        ItemPickerModule,\\n    ],\\n    declarations: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    exports: [\\n        FilterGroupsWrapperComponent,\\n        FilterGroupDialogComponent,\\n        FilterGroupComponent,\\n    ],\\n    providers: [FilterGroupService],\\n})\\n\\nexport class FilterGroupModule {}\\n\";","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(\"Unknown fragment \\\"\".concat(fragmentName, \"\\\".\"), node.name));\n      }\n    }\n  };\n}\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\nexport class FilterGroupDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: ISelection) {\\n        const selectedOptions = this.selectorService.getSelectedItems(selection, this.itemPickerOptions);\\n        this.selectedValues = selectedOptions.map((item) => item.value);\\n    }\\n}\\n\";","var MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function didYouMean(firstArg, secondArg) {\n  var _ref = typeof firstArg === 'string' ? [firstArg, secondArg] : [undefined, firstArg],\n      subMessage = _ref[0],\n      suggestionsArg = _ref[1];\n\n  var message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  var suggestions = suggestionsArg.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  var selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  var lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ItemPickerCompositeComponent } from \"./item-picker.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        ItemPickerCompositeComponent,\n    ],\n    exports: [\n        ItemPickerCompositeComponent,\n    ],\n    providers: [],\n})\n\nexport class ItemPickerCompositeModule {}\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nexport function UniqueOperationNamesRule(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(\"There can be only one operation named \\\"\".concat(operationName.value, \"\\\".\"), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n","import { Injectable } from \"@angular/core\";\nimport _difference from \"lodash/difference\";\nimport _flatten from \"lodash/flatten\";\n\nimport { IFilterGroupItem, IFilterGroupOption } from \"./public-api\";\n\n@Injectable()\nexport class FilterGroupService {\n    /**\n     *\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\n     */\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\n        const valuesToAppend: any[] = [];\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\n            .slice(0, numberToDisplay)\n            .map(item => item.value);\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\n        if (difference.length !== 0) {\n            difference.forEach(diff => {\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\n            });\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\n            flattenedValuesToAppend.forEach(item => {\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\n                numberToDisplay += 1;\n            });\n            filterGroupItem.itemsToDisplay = numberToDisplay;\n        }\n        return {...filterGroupItem};\n    }\n\n}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiIconModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewTableWithVirtualScrollComponent } from \"./filtered-view-table-with-virtual-scroll.component\";\nimport { FilteredViewTableComponent } from \"./filtered-view-table/filtered-view-table.component\";\n\n@NgModule({\n    imports: [\n        ScrollingModule,\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiProgressModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiIconModule,\n        NuiSpinnerModule,\n        NuiTableModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewTableWithVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n    exports: [\n        FilteredViewTableWithVirtualScrollComponent,\n        FilteredViewTableComponent,\n    ],\n})\n\nexport class FilteredViewTableWithVirtualScrollModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupComponent } from \"./filter-group.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiCheckboxModule,\n        NuiDialogModule,\n        NuiDividerModule,\n        NuiExpanderModule,\n        NuiPopoverModule,\n        ItemPickerModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupDialogComponent,\n        FilterGroupComponent,\n    ],\n    providers: [FilterGroupService],\n})\n\nexport class FilterGroupModule {}\n","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\nfunction wrapConsoleMethod(method) {\r\n    return function () {\r\n        return console[method].apply(console, arguments);\r\n    };\r\n}\r\n(function (invariant) {\r\n    invariant.warn = wrapConsoleMethod(\"warn\");\r\n    invariant.error = wrapConsoleMethod(\"error\");\r\n})(invariant || (invariant = {}));\r\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\r\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\r\n// However, because most ESM-to-CJS compilers will rewrite the process import\r\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\r\n// also attempt to define the stub globally when it is not already defined.\r\nvar processStub = { env: {} };\r\nif (typeof process === \"object\") {\r\n    processStub = process;\r\n}\r\nelse\r\n    try {\r\n        // Using Function to evaluate this assignment in global scope also escapes\r\n        // the strict mode of the current module, thereby allowing the assignment.\r\n        // Inspired by https://github.com/facebook/regenerator/pull/369.\r\n        Function(\"stub\", \"process = stub\")(processStub);\r\n    }\r\n    catch (atLeastWeTried) {\r\n        // The assignment can fail if a Content Security Policy heavy-handedly\r\n        // forbids Function usage. In those environments, developers should take\r\n        // extra care to replace process.env.NODE_ENV in their production builds,\r\n        // or define an appropriate global.process polyfill.\r\n    }\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant, processStub as process };\n//# sourceMappingURL=invariant.esm.js.map\n","export default \"<div class=\\\"app-filtered-view-table-with-pagination-table__container\\\">\\n    <table nui-table [dataSource]=\\\"items\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n\\n    <footer class=\\\"app-filtered-view-table-with-pagination-table-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","var _a = Object.prototype, toString = _a.toString, hasOwnProperty = _a.hasOwnProperty;\r\nvar previousComparisons = new Map();\r\n/**\r\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\r\n */\r\nfunction equal(a, b) {\r\n    try {\r\n        return check(a, b);\r\n    }\r\n    finally {\r\n        previousComparisons.clear();\r\n    }\r\n}\r\nfunction check(a, b) {\r\n    // If the two values are strictly equal, our job is easy.\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    // Object.prototype.toString returns a representation of the runtime type of\r\n    // the given value that is considerably more precise than typeof.\r\n    var aTag = toString.call(a);\r\n    var bTag = toString.call(b);\r\n    // If the runtime types of a and b are different, they could maybe be equal\r\n    // under some interpretation of equality, but for simplicity and performance\r\n    // we just return false instead.\r\n    if (aTag !== bTag) {\r\n        return false;\r\n    }\r\n    switch (aTag) {\r\n        case '[object Array]':\r\n            // Arrays are a lot like other objects, but we can cheaply compare their\r\n            // lengths as a short-cut before comparing their elements.\r\n            if (a.length !== b.length)\r\n                return false;\r\n        // Fall through to object case...\r\n        case '[object Object]': {\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aKeys = Object.keys(a);\r\n            var bKeys = Object.keys(b);\r\n            // If `a` and `b` have a different number of enumerable keys, they\r\n            // must be different.\r\n            var keyCount = aKeys.length;\r\n            if (keyCount !== bKeys.length)\r\n                return false;\r\n            // Now make sure they have the same keys.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                if (!hasOwnProperty.call(b, aKeys[k])) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Finally, check deep equality of all child properties.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                var key = aKeys[k];\r\n                if (!check(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Error]':\r\n            return a.name === b.name && a.message === b.message;\r\n        case '[object Number]':\r\n            // Handle NaN, which is !== itself.\r\n            if (a !== a)\r\n                return b !== b;\r\n        // Fall through to shared +a === +b case...\r\n        case '[object Boolean]':\r\n        case '[object Date]':\r\n            return +a === +b;\r\n        case '[object RegExp]':\r\n        case '[object String]':\r\n            return a == \"\" + b;\r\n        case '[object Map]':\r\n        case '[object Set]': {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aIterator = a.entries();\r\n            var isMap = aTag === '[object Map]';\r\n            while (true) {\r\n                var info = aIterator.next();\r\n                if (info.done)\r\n                    break;\r\n                // If a instanceof Set, aValue === aKey.\r\n                var _a = info.value, aKey = _a[0], aValue = _a[1];\r\n                // So this works the same way for both Set and Map.\r\n                if (!b.has(aKey)) {\r\n                    return false;\r\n                }\r\n                // However, we care about deep equality of values only when dealing\r\n                // with Map structures.\r\n                if (isMap && !check(aValue, b.get(aKey))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    // Otherwise the values are not equal.\r\n    return false;\r\n}\r\nfunction previouslyCompared(a, b) {\r\n    // Though cyclic references can make an object graph appear infinite from the\r\n    // perspective of a depth-first traversal, the graph still contains a finite\r\n    // number of distinct object references. We use the previousComparisons cache\r\n    // to avoid comparing the same pair of object references more than once, which\r\n    // guarantees termination (even if we end up comparing every object in one\r\n    // graph to every object in the other graph, which is extremely unlikely),\r\n    // while still allowing weird isomorphic structures (like rings with different\r\n    // lengths) a chance to pass the equality test.\r\n    var bSet = previousComparisons.get(a);\r\n    if (bSet) {\r\n        // Return true here because we can be sure false will be returned somewhere\r\n        // else if the objects are not equivalent.\r\n        if (bSet.has(b))\r\n            return true;\r\n    }\r\n    else {\r\n        previousComparisons.set(a, bSet = new Set);\r\n    }\r\n    bSet.add(b);\r\n    return false;\r\n}\n\nexport default equal;\nexport { equal };\n//# sourceMappingURL=equality.esm.js.map\n","export default \"<div class=\\\"filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 10;\\n\\n\";","<div class=\"app-table-with-sort__container\">\n    <table nui-table [dataSource]=\"items\"\n           [sortable]=\"true\"\n           [sortedColumn]=\"sortedColumn\"\n           (sortOrderChanged)=\"sortData($event)\">\n        <ng-container nuiColumnDef=\"name\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.name}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"location\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.location}}</td>\n        </ng-container>\n\n        <ng-container nuiColumnDef=\"status\">\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\n            <td nui-cell *nuiCellDef=\"let element\"> {{element.status}}</td>\n        </ng-container>\n\n        <tr nui-header-row *nuiHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr nui-row *nuiRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <footer class=\"app-table-with-sort-scrolling-footer\">\n        <div *ngIf=\"isBusy; else defaultText\">\n            <nui-progress [show]=\"true\" [compactMode]=\"true\"></nui-progress>\n            <div class=\"d-flex justify-content-center align-items-center\">Loading next {{pageSize}} items...</div>\n        </div>\n        <ng-template #defaultText>\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"p-1 d-flex\">\n                    <div class=\"d-flex pt-3 pb-3\" i18n>\n                        Showing {{items.length}}\n                        of {{totalItems}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </footer>\n</div>\n\n<nui-paginator [(page)]=\"page\"\n               [pageSize]=\"pageSize\"\n               [pageSizeSet]=\"[10,20,50,100]\"\n               [total]=\"totalItems\"\n               (pagerAction)=\"changePagination($event)\">\n</nui-paginator>\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    INovaFilteringOutputs,\n    ISortedItem,\n    nameof,\n    PaginatorComponent,\n    SorterDirection,\n    TableComponent,\n} from \"@nova-ui/bits\";\nimport { Subject } from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./table-with-sort-data\";\nimport { TableWithSortDataSource } from \"./table-with-sort-data-source.service\";\nimport { IServer, IServerFilters } from \"./types\";\n\n@Component({\n    selector: \"app-table-with-sort\",\n    templateUrl: \"./table-with-sort.component.html\",\n    styleUrls: [\"./table-with-sort.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: TableWithSortDataSource,\n        },\n    ],\n})\nexport class TableWithSortComponent implements OnInit, OnDestroy, AfterViewInit {\n    public items: IServer[] = [];\n    public isBusy: boolean = false;\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // columns of the table\n    public displayedColumns = [\"name\", \"location\", \"status\"];\n\n    // sorting\n    public sortedColumn: ISortedItem = {\n        sortBy: \"name\",\n        direction: SorterDirection.ascending,\n    };\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    @ViewChild(TableComponent) table: TableComponent<IServer>;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: TableWithSortDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        // register filter to be able to sort\n        this.dataSource.registerComponent(this.table.getFilterComponents());\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n        });\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.items = data.repeat?.itemsSource || [];\n                this.totalItems = data.paginator?.total ?? 0;\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async sortData(sortedColumn: ISortedItem) {\n        this.sortedColumn = sortedColumn;\n        await this.applyFilters();\n    }\n\n    public async changePagination($event: any) {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-basic-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-basic-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-basic-list-sorter {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-basic-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-basic-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\";","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport _forEach from \"lodash/forEach\";\nimport {\n    forkJoin,\n    Observable,\n    of,\n} from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class FilteredViewListWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start));\n\n        const multiFilters = this.extractMultiFilters(filters);\n        if (multiFilters.size) {\n            // set params if any filters\n            const json = Array.from(multiFilters.entries())\n                .reduce((o: {[key: string]: any}, [key, value]) => {\n                    o[key] = value;\n                    return o;\n                }, {});\n            params = params.set(\"filters\", JSON.stringify(json));\n        }\n\n        if (filters.search?.value) {\n            params = params.set(\"searchField\", \"name\");\n            params = params.set(\"searchContent\", filters.search?.value ?? \"\");\n        }\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\n        const filterKeys: (keyof IServerFilters)[] = [];\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\") {\n                filterKeys.push(key);\n            }\n        });\n\n        return filterKeys;\n    }\n\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\n        _forEach(filters, (value, key) => {\n            if (value?.type === \"string[]\" && value?.value?.length > 0) {\n                multiFilterArr.set(key, value?.value);\n            }\n        });\n\n        return multiFilterArr;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                    status: response.status,\n                    location: response.location,\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = FilteredViewListWithPaginationDataSource.getRequestParams(filters);\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\n        const requests = [mainRequest];\n\n        // cleans any filter that we don't need\n        let filterRequestParams = requestParams;\n        [\"page\", \"pageSize\", \"sortField\", \"sortOrder\"].forEach(f => {\n            filterRequestParams = filterRequestParams.delete(f);\n        });\n\n        const lastFilters = filterRequestParams.get(\"filters\") ?? \"{}\";\n\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\n        FilteredViewListWithPaginationDataSource.getMultiFiltersNames(filters).forEach(filterName => {\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\n            // always removes the current filter before the API call\n            if (serverFilters[filterName]) {\n                delete serverFilters[filterName];\n                filterRequestParams = filterRequestParams.set(\"filters\", JSON.stringify(serverFilters));\n            }\n\n            filterRequestParams = filterRequestParams.set(\"groupByField\", filterName.toString());\n            const filterViewRequest = this.http.get<IServersApiResponse>(\n                `${API_URL}/count`, { params: filterRequestParams });\n\n            // restore the filters\n            filterRequestParams = filterRequestParams.set(\"filters\", lastFilters);\n\n            requests.push(filterViewRequest);\n        });\n\n        // transform the and array that has unique keys from the backend\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\n        const flatCount = (mapObj: any, obj: any) => {\n            const key = Object.keys(obj)[0];\n            mapObj[key] = Object.values(obj)[0];\n            return mapObj;\n        };\n\n        return forkJoin(requests).pipe(\n            // since API being used sends the response almost immediately,\n            // we need to fake it takes longer to be able the show the spinner component\n            // while the data is being received\n            // PS: NOT to be used in real examples\n            delay(300),\n\n            // transform backend API response (IServersApiResponse)\n            // to our frontend items collection (IServersCollection)\n            map(([mainResponse, statusResponse, locationResponse]) => ({\n                items: mainResponse.items?.map(item => ({\n                    name: item.name,\n                    location: item.location,\n                    status: item.status,\n                })) || [],\n                count: mainResponse.count,\n                status: statusResponse.items?.reduce(flatCount, {}),\n                location: locationResponse.items?.reduce(flatCount, {}),\n            })),\n\n            // error handle in case of any error\n            catchError(e => {\n                this.logger.error(e);\n                return of({\n                    items: [],\n                    count: 0,\n                });\n            })\n        );\n    }\n}\n","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start))\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithPaginationDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class TableWithPaginationDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start))\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = TableWithPaginationDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","<div nui-busy [busy]=\"isBusy\">\n    <nui-spinner size=\"large\" i18n-message message=\"Loading...\"></nui-spinner>\n    <div class=\"d-flex flex-row\">\n        <nui-sorter class=\"app-paginated-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-paginated-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"!isBusy && (listItems$ | async).length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-paginated-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"filteringState.repeat?.itemsSource\">\n        </nui-repeat>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <nui-paginator class=\"app-paginated-list-paginator\"\n                       [(page)]=\"page\"\n                       [pageSize]=\"pageSize\"\n                       [pageSizeSet]=\"[10,20,30,40]\"\n                       [total]=\"filteringState.paginator?.total\"\n                       (pagerAction)=\"applyFilters()\">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n} from \"@nova-ui/bits\";\nimport {\n    BehaviorSubject,\n    Subject,\n} from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"./paginated-list-data\";\nimport { PaginatedListDataSource } from \"./paginated-list-data-source.service\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"./types\";\n\n@Component({\n    selector: \"app-paginated-list\",\n    templateUrl: \"./paginated-list.component.html\",\n    styleUrls: [\"./paginated-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: PaginatedListDataSource,\n        },\n    ],\n})\nexport class PaginatedListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: PaginatedListDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                // update the list of items to be rendered\n                this.listItems$.next(data.repeat?.itemsSource || []);\n\n                this.filteringState = data;\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","import { isInterfaceType, isObjectType, isListType, isNonNullType, isAbstractType } from \"../type/definition.mjs\";\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\n\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n\n  return isAbstractType(superType) && (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) && schema.isSubType(superType, maybeSubType);\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isSubType(typeB, type);\n      });\n    } // Determine if the latter type is a possible concrete type of the former.\n\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n\n  return false;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-group-dialog {\\n    &__body {\\n        margin: @nui-space-sm 0 @nui-space-sm 0;\\n    }\\n}\\n\";","export default \"<div class=\\\"item-picker\\\">\\n    <ng-template #listRepeatDefaultItemTemplate let-item=\\\"item\\\">\\n        <div>{{item.displayValue}}</div>\\n    </ng-template>\\n</div>\\n\";","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    LocalFilteringDataSource,\n    RepeatSelectionMode,\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker-composite\",\n    templateUrl: \"./item-picker.component.html\",\n    styleUrls: [\"./item-picker.component.less\"],\n    providers: [{\n        provide: DataSourceService,\n        useClass: LocalFilteringDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class ItemPickerCompositeComponent implements OnInit {\n    @Input() itemPickerOptions: IFilterGroupOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<IFilterGroupOption[]> = new EventEmitter();\n\n    public selectionMode = RepeatSelectionMode.multi;\n    public selectedOptions: IFilterGroupOption[] = [];\n\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as LocalFilteringDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selectedOptions = this.getSelectedOptions();\n    }\n\n    public onSelection(selection: IFilterGroupOption[]) {\n        this.selectedOptions = selection;\n        this.selectionChanged.emit(selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"app-item-picker-composite\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n\n    <div>\n        <div class=\"d-flex flex-row\">\n            <nui-repeat class=\"app-list-repeat\"\n                        [selectionMode]=\"selectionMode\"\n                        [repeatItemTemplateRef]=\"listRepeatDefaultItemTemplate\"\n                        [selection]=\"selectedOptions\"\n                        [itemsSource]=\"itemPickerOptions\"\n                        (selectionChange)=\"onSelection($event)\">\n            </nui-repeat>\n        </div>\n    </div>\n\n</div>\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewTableWithVirtualScrollSelectionDataSource,\\n} from \\\"./filtered-view-table-with-virtual-scroll-selection-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-virtual-scroll-selection\\\",\\n    styleUrls: [\\\"./filtered-view-table-with-virtual-scroll-selection.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-table-with-virtual-scroll-selection.component.html\\\",\\n    providers: [\\n        VirtualViewportManager,\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewTableWithVirtualScrollSelectionDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewTableWithVirtualScrollSelectionComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithVirtualScrollSelectionDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","export default \"<div nui-busy [busy]=\\\"isBusy\\\">\\n    <nui-spinner size=\\\"large\\\" i18n-message message=\\\"Loading...\\\"></nui-spinner>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-sorter class=\\\"app-filtered-view-list-with-virtual-scroll-list-sorter\\\"\\n                    [itemsSource]=\\\"sorterItems\\\"\\n                    [selectedItem]=\\\"sortBy\\\"\\n                    [sortDirection]=\\\"initialSortDirection\\\"\\n                    (sorterAction)=\\\"onSorterAction($event)\\\">\\n        </nui-sorter>\\n        <nui-search class=\\\"d-flex justify-content-end app-filtered-view-list-with-virtual-scroll-list-search\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onCancelSearch()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-row\\\">\\n        <ng-container *ngIf=\\\"!isBusy && (listItems$ | async).length === 0\\\">\\n            <span i18n>No results</span>\\n        </ng-container>\\n\\n        <nui-repeat class=\\\"app-filtered-view-list-with-virtual-scroll-list-repeat\\\"\\n                    selectionMode=\\\"none\\\"\\n                    [itemConfig]=\\\"itemConfig\\\"\\n                    [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                    [selection]=\\\"filteringState.repeat?.selectedItems\\\"\\n                    [itemsSource]=\\\"listItems$ | async\\\"\\n                    virtualScroll=\\\"true\\\"\\n                    itemSize=\\\"30\\\">\\n        </nui-repeat>\\n    </div>\\n\\n    <footer class=\\\"app-filtered-view-list-with-virtual-scroll-list-scrolling-footer\\\">\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n            <div class=\\\"p-1 d-flex\\\">\\n                <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                    Showing {{(listItems$ | async).length}} of {{ totalItems }}.\\n                </div>\\n                <div class=\\\"d-flex pt-3 pb-3\\\">\\n                    <ng-container i18n *ngIf=\\\"(listItems$ | async).length !== totalItems; else endOfData\\\">, scroll down for more.</ng-container>\\n                    <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\\n                </div>\\n            </div>\\n        </div>\\n    </footer>\\n</div>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let field of item | keyvalue\\\" class=\\\"col-sm\\\">\\n                {{field.value}}\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","export default \"import { IServer, ServerStatus } from \\\"./types\\\";\\n// number of results to be displayed\\nexport const RESULTS_PER_PAGE = 10;\\n\\nexport const LOCAL_DATA: IServer[] = [\\n    {\\n        name: \\\"FOCUS-SVR-12345\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-ASD123\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-DSA331\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-JKS212\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"ABERN-SVR-ATQU9404\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-433AAD\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-098331\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-GHJ882\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LLK001\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-KKJ998\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-RRR001\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-LKJF12\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"Man-LT-882JJS\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-7733KK\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-JSHNSA\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-KKAEQWE\\\",\\n        location: \\\"Kyiv\\\",\\n        status: ServerStatus.down,\\n    },\\n    {\\n        name: \\\"FOCUS-SVR-123KKNPQ\\\",\\n        location: \\\"Brno\\\",\\n        status: ServerStatus.active,\\n    },\\n    {\\n        name: \\\"Man-LT-RRF231\\\",\\n        location: \\\"Austin\\\",\\n        status: ServerStatus.down,\\n    },\\n];\\n\";","import { IServer, ServerStatus } from \"./types\";\n\n// number of results to be displayed in the table\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: \"FOCUS-SVR-12345\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-ASD123\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-DSA331\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-JKS212\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"ABERN-SVR-ATQU9404\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-433AAD\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-098331\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-GHJ882\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LLK001\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-KKJ998\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-RRR001\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LKJF12\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-882JJS\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-7733KK\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-JSHNSA\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-KKAEQWE\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-123KKNPQ\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-RRF231\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n];\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport { Observable, of } from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    RESULTS_PER_PAGE,\\n} from \\\"./table-with-virtual-scroll-data\\\";\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class TableWithVirtualScrollDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.virtualScroll?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(RESULTS_PER_PAGE))\\n            .set(\\\"searchField\\\", \\\"name\\\")\\n            .set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = TableWithVirtualScrollDataSource.getRequestParams(filters);\\n        return this.http\\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\\n            .pipe(\\n                // since API being used sends the response almost immediately,\\n                // we need to fake it takes longer to be able the show the spinner component\\n                // while the data is being received\\n                // PS: NOT to be used in real examples\\n                delay(300),\\n\\n                // transform backend API response (IServersApiResponse)\\n                // to our frontend items collection (IServersCollection)\\n                map(response => ({\\n                    items: response.items?.map(item => ({\\n                        name: item.name,\\n                        location: item.location,\\n                        status: item.status,\\n                    })) || [],\\n                    count: response.count,\\n                })),\\n\\n                // error handle in case of any error\\n                catchError(e => {\\n                    this.logger.error(e);\\n                    return of({\\n                        items: [],\\n                        count: 0,\\n                    });\\n                })\\n            );\\n    }\\n}\\n\";","export default \"<ng-container *ngIf=\\\"dataSourceTree\\\">\\n    <cdk-tree [dataSource]=\\\"dataSourceTree\\\" [treeControl]=\\\"treeControl\\\">\\n        <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node\\\" class=\\\"nui-tree__leaf\\\">\\n            <button nui-button displayStyle=\\\"action\\\" type=\\\"button\\\" disabled></button>\\n            {{node.name}}\\n        </cdk-nested-tree-node>\\n        <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node; when: hasChild\\\" class=\\\"nui-tree\\\">\\n            <div class=\\\"nui-tree__header\\\" cdkTreeNodeToggle>\\n                <nui-icon class=\\\"nui-tree__header-icon\\\" icon=\\\"{{treeControl.isExpanded(node) ? 'triangle-down' : 'triangle-right'}}\\\"></nui-icon>\\n                <span class=\\\"nui-tree__header-title\\\">{{ node.name }}</span>\\n            </div>\\n            <div class=\\\"nui-tree__body\\\"\\n                 [class.nui-tree__body--collapsed]=\\\"!treeControl.isExpanded(node)\\\"\\n                 [@expandedState]=\\\"treeControl.isExpanded(node) ? 'expanded' : 'collapsed'\\\">\\n                <ng-container cdkTreeNodeOutlet></ng-container>\\n            </div>\\n        </cdk-nested-tree-node>\\n    </cdk-tree>\\n</ng-container>\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nexport function NoUndefinedVariablesRule(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\"), [node, operation]));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"schematics-docs-outlet\",\n    template: `<router-outlet></router-outlet>`,\n})\nexport class ListSchematicsOutletComponent {}\n","import { IServer, ServerStatus } from \"./types\";\n\n// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\nexport const LOCAL_DATA: IServer[] = [\n    {\n        name: \"FOCUS-SVR-12345\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-ASD123\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-DSA331\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-JKS212\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"ABERN-SVR-ATQU9404\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-433AAD\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-098331\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-GHJ882\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LLK001\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-KKJ998\",\n        location: \"Kyiv\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-RRR001\",\n        location: \"Brno\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-LKJF12\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"Man-LT-882JJS\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-7733KK\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-JSHNSA\",\n        location: \"Austin\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"FOCUS-SVR-KKAEQWE\",\n        location: \"Kyiv\",\n        status: ServerStatus.down,\n    },\n    {\n        name: \"FOCUS-SVR-123KKNPQ\",\n        location: \"Brno\",\n        status: ServerStatus.active,\n    },\n    {\n        name: \"Man-LT-RRF231\",\n        location: \"Austin\",\n        status: ServerStatus.down,\n    },\n];\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isExecutableDefinitionNode } from \"../../language/predicates.mjs\";\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          var defName = definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new GraphQLError(\"The \".concat(defName, \" definition is not executable.\"), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n:host {\\n    .app-search-list-repeat {\\n        margin: @nui-space-sm @nui-space-md;\\n        width: 100%;\\n    }\\n\\n    .app-search-list-selector {\\n        flex-grow: 0;\\n        margin-left: @nui-space-md;\\n    }\\n\\n    .app-search-list-search {\\n        flex-grow: 1;\\n        margin-right: @nui-space-md;\\n    }\\n\\n    .app-search-list-paginator {\\n        flex-grow: 1;\\n        margin: 0 @nui-space-md;\\n    }\\n}\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  var schema = context.getSchema();\n  var definedOperationTypes = Object.create(null);\n  var existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n    for (var _i2 = 0; _i2 < operationTypesNodes.length; _i2++) {\n      var operationType = operationTypesNodes[_i2];\n      var operation = operationType.operation;\n      var alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(new GraphQLError(\"Type for \".concat(operation, \" already defined in the schema. It cannot be redefined.\"), operationType));\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(new GraphQLError(\"There can be only one \".concat(operation, \" type in schema.\"), [alreadyDefinedOperationType, operationType]));\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithSearchDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        const params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start))\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithSearchDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\nimport {\n    RESULTS_PER_PAGE,\n} from \"./virtual-scroll-list-data\";\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class VirtualScrollListDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.virtualScroll?.value ?? { start : 0, end: 0};\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(RESULTS_PER_PAGE))\n\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = VirtualScrollListDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","/**\n * Build a string describing the path.\n */\nexport default function printPathArray(path) {\n  return path.map(function (key) {\n    return typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key;\n  }).join('');\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiExpanderModule,\n    NuiPopoverModule,\n    NuiSpinnerModule,\n} from \"@nova-ui/bits\";\n\nimport { DialogFilterGroupCompositeComponent } from \"./dialog-filter-group.component\";\nimport { FilterGroupCompositeDialogComponent } from \"./filter-group-dialog/filter-group-dialog.component\";\nimport { FilterGroupService } from \"./filter-group.service\";\nimport { FilterGroupsWrapperComponent } from \"./filter-groups-wrapper/filter-groups-wrapper.component\";\nimport { ItemPickerCompositeModule } from \"./item-picker/item-picker.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiDialogModule,\n        NuiSpinnerModule,\n        NuiButtonModule,\n        ItemPickerCompositeModule,\n        NuiPopoverModule,\n        NuiExpanderModule,\n        NuiCheckboxModule,\n    ],\n    declarations: [\n        FilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        DialogFilterGroupCompositeComponent,\n    ],\n    exports: [\n        FilterGroupsWrapperComponent,\n        FilterGroupCompositeDialogComponent,\n        DialogFilterGroupCompositeComponent,\n    ],\n    providers: [FilterGroupService],\n    entryComponents: [FilterGroupCompositeDialogComponent],\n})\n\nexport class DialogFilterGroupCompositeModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n    TemplateRef,\\n} from \\\"@angular/core\\\";\\nimport { DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-custom-template-filter-group\\\",\\n    templateUrl: \\\"./custom-template-filter-group.component.html\\\",\\n    styleUrls: [\\\"./custom-template-filter-group.component.less\\\"],\\n})\\nexport class CustomTemplateFilterGroupCompositeComponent implements IFilterPub, OnInit {\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n}\\n\";","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    ISelection,\n    RepeatSelectionMode,\n    SorterDirection\n} from \"@nova-ui/bits\";\n\nimport { IFilterGroupOption } from \"../public-api\";\n\nexport interface IItemPickerOption {\n    value: string;\n    displayValue: string;\n}\n\n@Component({\n    selector: \"app-item-picker\",\n    templateUrl: \"./item-picker.component.html\",\n    providers: [{\n        provide: DataSourceService,\n        useClass: ClientSideDataSource,\n    }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\n    @Input() itemPickerOptions: IItemPickerOption[];\n    @Input() selectedValues: string[] = [];\n\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\n\n    public sorter = {\n        items: [\"value\"],\n        direction: SorterDirection.ascending,\n    };\n\n    public selectionMode = RepeatSelectionMode.multi;\n\n    public selection: ISelection = {\n        isAllPages: false,\n        include: [],\n        exclude: [],\n    };\n\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\n                public changeDetection: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\n        this.selection = {\n            isAllPages: false,\n            include: this.getSelectedOptions(),\n            exclude: [],\n        };\n    }\n\n    ngAfterViewInit(): void {\n        this.changeDetection.markForCheck();\n\n        this.dataSource.applyFilters();\n    }\n\n    public applyFilters() {\n        this.dataSource.applyFilters();\n    }\n\n    public onSelection(selection: ISelection) {\n        this.selection = selection;\n        this.selectionChanged.emit(this.selection);\n    }\n\n    public getSelectedOptions(): IFilterGroupOption[] {\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\n    }\n}\n","<div class=\"item-picker\">\n    <ng-template #listRepeatDefaultItemTemplate let-item=\"item\">\n        <div>{{item.displayValue}}</div>\n    </ng-template>\n</div>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n} from \"@angular/core\";\nimport { DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-basic-filter-group\",\n    templateUrl: \"./basic-filter-group.component.html\",\n    styleUrls: [\"./basic-filter-group.component.less\"],\n})\nexport class BasicFilterGroupCompositeComponent implements IFilterPub, OnInit {\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"nui-filter-group-composite\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"nui-filter-group-composite__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between nui-filter-group-composite__checkbox\">\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block nui-filter-group-composite__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"nui-filter-group-composite__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"<h2>Selection result</h2>\\n<div class=\\\"flex-row-container\\\">\\n    <span class=\\\"flex-independent-row-item\\\">{{selection | json}}</span>\\n</div>\\n<div class=\\\"app-filtered-view-table-with-selection-table__container\\\">\\n    <div class=\\\"app-filtered-view-table-with-selection-table-searchable__search\\\">\\n        <nui-search [value]=\\\"searchTerm\\\"\\n                    (search)=\\\"onSearch()\\\"\\n                    (cancel)=\\\"onSearchCancel()\\\">\\n        </nui-search>\\n    </div>\\n\\n    <table nui-table [dataSource]=\\\"items\\\"\\n           [sortable]=\\\"true\\\"\\n           [sortedColumn]=\\\"sortedColumn\\\"\\n           (sortOrderChanged)=\\\"sortData($event)\\\"\\n           [(selection)]=\\\"selection\\\"\\n           (selectionChange)=\\\"onSelectionChanged($event)\\\"\\n           [selectable]=\\\"true\\\"\\n           [trackBy]=\\\"trackBy\\\">\\n        <ng-container nuiColumnDef=\\\"name\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Name</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.name}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"location\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Location</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.location}}</td>\\n        </ng-container>\\n\\n        <ng-container nuiColumnDef=\\\"status\\\">\\n            <th nui-header-cell *nuiHeaderCellDef i18n> Status</th>\\n            <td nui-cell *nuiCellDef=\\\"let element\\\"> {{element.status}}</td>\\n        </ng-container>\\n\\n        <tr nui-header-row *nuiHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        <tr nui-row *nuiRowDef=\\\"let row; columns: displayedColumns\\\" [rowObject]=\\\"row\\\"></tr>\\n    </table>\\n\\n    <footer class=\\\"app-filtered-view-table-with-selection-table-scrolling-footer\\\">\\n        <div *ngIf=\\\"isBusy; else defaultText\\\">\\n            <nui-progress [show]=\\\"true\\\" [compactMode]=\\\"true\\\"></nui-progress>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">Loading next {{pageSize}} items...</div>\\n        </div>\\n        <ng-template #defaultText>\\n            <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                <div class=\\\"p-1 d-flex\\\">\\n                    <div class=\\\"d-flex pt-3 pb-3\\\" i18n>\\n                        Showing {{items.length}}\\n                        of {{totalItems}}\\n                    </div>\\n                </div>\\n            </div>\\n        </ng-template>\\n    </footer>\\n</div>\\n\\n<nui-paginator [(page)]=\\\"page\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeSet]=\\\"[10,20,50,100]\\\"\\n               [total]=\\\"totalItems\\\"\\n               (pagerAction)=\\\"changePagination($event)\\\">\\n</nui-paginator>\\n\";","export { validate } from \"./validate.mjs\";\nexport { ValidationContext } from \"./ValidationContext.mjs\";\n// All validation rules in the GraphQL Specification.\nexport { specifiedRules } from \"./specifiedRules.mjs\"; // Spec Section: \"Executable Definitions\"\n\nexport { ExecutableDefinitionsRule } from \"./rules/ExecutableDefinitionsRule.mjs\"; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nexport { FieldsOnCorrectTypeRule } from \"./rules/FieldsOnCorrectTypeRule.mjs\"; // Spec Section: \"Fragments on Composite Types\"\n\nexport { FragmentsOnCompositeTypesRule } from \"./rules/FragmentsOnCompositeTypesRule.mjs\"; // Spec Section: \"Argument Names\"\n\nexport { KnownArgumentNamesRule } from \"./rules/KnownArgumentNamesRule.mjs\"; // Spec Section: \"Directives Are Defined\"\n\nexport { KnownDirectivesRule } from \"./rules/KnownDirectivesRule.mjs\"; // Spec Section: \"Fragment spread target defined\"\n\nexport { KnownFragmentNamesRule } from \"./rules/KnownFragmentNamesRule.mjs\"; // Spec Section: \"Fragment Spread Type Existence\"\n\nexport { KnownTypeNamesRule } from \"./rules/KnownTypeNamesRule.mjs\"; // Spec Section: \"Lone Anonymous Operation\"\n\nexport { LoneAnonymousOperationRule } from \"./rules/LoneAnonymousOperationRule.mjs\"; // Spec Section: \"Fragments must not form cycles\"\n\nexport { NoFragmentCyclesRule } from \"./rules/NoFragmentCyclesRule.mjs\"; // Spec Section: \"All Variable Used Defined\"\n\nexport { NoUndefinedVariablesRule } from \"./rules/NoUndefinedVariablesRule.mjs\"; // Spec Section: \"Fragments must be used\"\n\nexport { NoUnusedFragmentsRule } from \"./rules/NoUnusedFragmentsRule.mjs\"; // Spec Section: \"All Variables Used\"\n\nexport { NoUnusedVariablesRule } from \"./rules/NoUnusedVariablesRule.mjs\"; // Spec Section: \"Field Selection Merging\"\n\nexport { OverlappingFieldsCanBeMergedRule } from \"./rules/OverlappingFieldsCanBeMergedRule.mjs\"; // Spec Section: \"Fragment spread is possible\"\n\nexport { PossibleFragmentSpreadsRule } from \"./rules/PossibleFragmentSpreadsRule.mjs\"; // Spec Section: \"Argument Optionality\"\n\nexport { ProvidedRequiredArgumentsRule } from \"./rules/ProvidedRequiredArgumentsRule.mjs\"; // Spec Section: \"Leaf Field Selections\"\n\nexport { ScalarLeafsRule } from \"./rules/ScalarLeafsRule.mjs\"; // Spec Section: \"Subscriptions with Single Root Field\"\n\nexport { SingleFieldSubscriptionsRule } from \"./rules/SingleFieldSubscriptionsRule.mjs\"; // Spec Section: \"Argument Uniqueness\"\n\nexport { UniqueArgumentNamesRule } from \"./rules/UniqueArgumentNamesRule.mjs\"; // Spec Section: \"Directives Are Unique Per Location\"\n\nexport { UniqueDirectivesPerLocationRule } from \"./rules/UniqueDirectivesPerLocationRule.mjs\"; // Spec Section: \"Fragment Name Uniqueness\"\n\nexport { UniqueFragmentNamesRule } from \"./rules/UniqueFragmentNamesRule.mjs\"; // Spec Section: \"Input Object Field Uniqueness\"\n\nexport { UniqueInputFieldNamesRule } from \"./rules/UniqueInputFieldNamesRule.mjs\"; // Spec Section: \"Operation Name Uniqueness\"\n\nexport { UniqueOperationNamesRule } from \"./rules/UniqueOperationNamesRule.mjs\"; // Spec Section: \"Variable Uniqueness\"\n\nexport { UniqueVariableNamesRule } from \"./rules/UniqueVariableNamesRule.mjs\"; // Spec Section: \"Values Type Correctness\"\n\nexport { ValuesOfCorrectTypeRule } from \"./rules/ValuesOfCorrectTypeRule.mjs\"; // Spec Section: \"Variables are Input Types\"\n\nexport { VariablesAreInputTypesRule } from \"./rules/VariablesAreInputTypesRule.mjs\"; // Spec Section: \"All Variable Usages Are Allowed\"\n\nexport { VariablesInAllowedPositionRule } from \"./rules/VariablesInAllowedPositionRule.mjs\"; // SDL-specific validation rules\n\nexport { LoneSchemaDefinitionRule } from \"./rules/LoneSchemaDefinitionRule.mjs\";\nexport { UniqueOperationTypesRule } from \"./rules/UniqueOperationTypesRule.mjs\";\nexport { UniqueTypeNamesRule } from \"./rules/UniqueTypeNamesRule.mjs\";\nexport { UniqueEnumValueNamesRule } from \"./rules/UniqueEnumValueNamesRule.mjs\";\nexport { UniqueFieldDefinitionNamesRule } from \"./rules/UniqueFieldDefinitionNamesRule.mjs\";\nexport { UniqueDirectiveNamesRule } from \"./rules/UniqueDirectiveNamesRule.mjs\";\nexport { PossibleTypeExtensionsRule } from \"./rules/PossibleTypeExtensionsRule.mjs\"; // Optional rules not defined by the GraphQL Specification\n\nexport { NoDeprecatedCustomRule } from \"./rules/custom/NoDeprecatedCustomRule.mjs\";\nexport { NoSchemaIntrospectionCustomRule } from \"./rules/custom/NoSchemaIntrospectionCustomRule.mjs\";\n","import inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { GraphQLList, GraphQLNonNull } from \"../type/definition.mjs\";\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n\n/* eslint-disable no-redeclare */\n\nexport function typeFromAST(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType;\n\n  if (typeNode.kind === Kind.LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new GraphQLList(innerType);\n  }\n\n  if (typeNode.kind === Kind.NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new GraphQLNonNull(innerType);\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (typeNode.kind === Kind.NAMED_TYPE) {\n    return schema.getType(typeNode.name.value);\n  } // istanbul ignore next (Not reachable. All possible type nodes have been considered)\n\n\n  false || invariant(0, 'Unexpected type node: ' + inspect(typeNode));\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"<ng-template #emptyListTemplate>\\n    <div class=\\\"d-flex flex-column align-items-center\\\">\\n        <nui-image [isWatermark]=\\\"true\\\" image=\\\"no-data-to-show\\\"></nui-image>\\n        <p class=\\\"nui-text-small\\\">No data to show</p>\\n    </div>\\n</ng-template>\\n\\n<ng-template #listRepeatItemTemplate let-item=\\\"item\\\">\\n    <div>{{item.color}}</div>\\n    <div>{{item.status}}</div>\\n</ng-template>\\n\\n<nui-panel>\\n    <div nuiPanelEmbeddedBody>\\n        <app-dialog-filter-groups-wrapper>\\n            <app-dialog-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                        [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                        (filterChanged)=\\\"changeFilters($event)\\\"\\n                                        (showAllButtonClicked)=\\\"handleFilterDialog(filterGroupItem)\\\">\\n            </app-dialog-filter-group>\\n        </app-dialog-filter-groups-wrapper>\\n    </div>\\n    <div>\\n        <div *ngIf=\\\"hasItems(); else emptyListTemplate\\\">\\n            <nui-repeat id=\\\"nui-composites-demo-repeat\\\"\\n                        [itemsSource]=\\\"filteringState.repeat.itemsSource\\\"\\n                        [repeatItemTemplateRef]=\\\"listRepeatItemTemplate\\\"\\n                        paddingSize=\\\"normal\\\">\\n            </nui-repeat>\\n        </div>\\n    </div>\\n</nui-panel>\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"nui-filter-group-composite\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"nui-filter-group-composite__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between nui-filter-group-composite__checkbox\\\">\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block nui-filter-group-composite__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"nui-filter-group-composite__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","import inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { DirectiveLocation } from \"../../language/directiveLocation.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || invariant(0);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return DirectiveLocation.QUERY;\n\n    case 'mutation':\n      return DirectiveLocation.MUTATION;\n\n    case 'subscription':\n      return DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected operation: ' + inspect(operation));\n}\n","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { BasicFilterGroupCompositeComponent } from \"../basic-filter-group.component\";\n\n@Component({\n    selector: \"app-basic-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\n\nexport class BasicFilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(BasicFilterGroupCompositeComponent) filterGroups: QueryList<BasicFilterGroupCompositeComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: BasicFilterGroupCompositeComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"nui-filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"nui-filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"nui-filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) private dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnDestroy,\\n    OnInit,\\n    Output,\\n    QueryList,\\n    TemplateRef,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \\\"@nova-ui/bits\\\";\\nimport _orderBy from \\\"lodash/orderBy\\\";\\nimport { Subject } from \\\"rxjs\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-group\\\",\\n    templateUrl: \\\"./filter-group.component.html\\\",\\n    styleUrls: [\\\"./filter-group.component.less\\\"],\\n})\\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\\n    // before any new search is performed\\n    public detectFilterChanges = true;\\n\\n    @Input() filterGroupItem: IFilterGroupItem;\\n    @Input() checkboxTemplateRef: TemplateRef<string>;\\n    @Input() expanderTemplateRef: TemplateRef<string>;\\n\\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\\n\\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\\n\\n    public onDestroy$ = new Subject<void>();\\n\\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\\n\\n    ngOnInit() {\\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \\\"value\\\", \\\"asc\\\");\\n    }\\n\\n    public isChecked(value: string): boolean {\\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\\n    }\\n\\n    public onValueChanged(selectedValues: string[]): void {\\n        this.filterGroupItem.selectedFilterValues = selectedValues;\\n        this.filterChanged.emit(this.filterGroupItem);\\n    }\\n\\n    public onOpenChanged(isExpanded: boolean): void {\\n        this.filterGroupItem.expanded = isExpanded;\\n    }\\n\\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\\n        return {\\n            type: \\\"string[]\\\",\\n            value: this.filterGroupItem.selectedFilterValues,\\n            metadata: {\\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\\n                expanded: Boolean(this.filterGroupItem.expanded),\\n            },\\n        };\\n    }\\n\\n    public showFilterDialog() {\\n        this.showAllButtonClicked.emit();\\n    }\\n\\n    public getDisplayedFiltersCount() {\\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\\n    }\\n\\n    public hasFilterOptions(): boolean {\\n        return this.filterGroupItem.allFilterOptions.length > 0;\\n    }\\n\\n    public deselectFilterItemByValue(value: any) {\\n        const checkbox = this.filterItems.find(i => i.value === value);\\n        if (checkbox) {\\n            this.deselectFilterItem(checkbox);\\n        }\\n    }\\n\\n    public deselectAllFilterItems() {\\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\\n    }\\n\\n    private deselectFilterItem(checkbox: CheckboxComponent) {\\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\\\"change\\\"));\\n    }\\n\\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\\n        return filterGroupItems.map((item) => item.value);\\n    }\\n\\n    ngOnDestroy() {\\n        this.onDestroy$.next();\\n        this.onDestroy$.complete();\\n    }\\n}\\n\";","export default \"import { IMultiFilterMetadata } from \\\"@nova-ui/bits\\\";\\n\\nexport interface IFilterGroupItem {\\n    id: string;\\n    title: string;\\n    allFilterOptions: IFilterGroupOption[];\\n    selectedFilterValues: string[];\\n    expanded?: boolean;\\n    itemsToDisplay?: number;\\n}\\n\\nexport interface IFilterGroupOption {\\n    value: string;\\n    displayValue: string;\\n    count?: number;\\n}\\n\\nexport interface IFilterGroupMultiFilterMetadata extends IMultiFilterMetadata {\\n    expanded: boolean;\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-filter-group-composite-basic\",\n    templateUrl: \"filter-group-schematic.example.component.html\",\n})\nexport class FilterGroupSchematicExampleComponent {\n    constructor() { }\n}\n","<nui-schematic-docs-page schematicFolderName=\"filter-group\">\n    <nui-tab-group schematicExamples>\n        <nui-tab heading=\"Basic usage\">\n            <h2>Basic Usage</h2>\n            <p>Filter group depends heavily on the\n                <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a> service,\n                    so first and foremost please check out the documentation for\n                <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>.\n            </p>\n            <p>\n                This example contains all the files generated by the CLI command. The schematic will output a feature module,\n                a filter group composite and helper components: <code>filter-groups-wrapper</code>,  <code>filter-group-dialog</code>\n                and <code>item-picker</code>. Except for the wrapper, usage of these components may not be required by your implementation.\n            </p>\n            <p>Once you have scaffolded your filter group, follow these steps to add it to your application:</p>\n            <ol>\n                <li>\n                    In your template, place your composite(s) inside the wrapper component. The wrapper will register your composites with\n                    <a target=\"_blank\" href=\"../injectables/ClientSideDataSource.html\"><code>ClientSideDataSource</code></a>\n                    as well as hide and display a popover over filter groups with no existing values.\n                </li>\n                <li>\n                    Pass an <a target=\"_blank\" href=\"../interfaces/IFilterGroupItem.html\"><code>IFilterGroupItem</code></a> object to each <code>[filterGroupItem]</code> input.\n                </li>\n                <li>\n                    To receive new filtering state (<code>IFilteringOutputs</code>), bind to the <code>(filterChanged)</code> output\n                    and invoke the <code>applyFilters</code> method of\n                    <a target=\"_blank\" href=\"../../../../../../nova-bits/develop/sdk/api-docs-ng2/injectables/ClientSideDataSource.html\">\n                        <code>ClientSideDataSource</code>.\n                    </a>\n                </li>\n\n            </ol>\n            <p>\n                <b>Note:</b> If you provide a value for the count property in\n                <a target=\"_blank\" href=\"../interfaces/IFilterGroupOption.html\"><code>IFilterGroupOption</code></a>, counts\n                will be added to the checkbox template. To recalculate counts, you must implement a <code>recalculateCounts</code> method and\n                call it upon receiving filteringState <code>IFilteringOutputs</code>.\n            </p>\n\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=basic-filter-group --p=app</nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"basic-filter-group\">\n                <app-basic-filter-group-composite-example></app-basic-filter-group-composite-example>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Custom template\">\n            <h2>Custom Component Templates</h2>\n            <p>\n                To use a custom <strong>checkbox</strong> or <strong>expander </strong> <code>ng-template</code>,\n                use the <code>[checkboxTemplateRef]</code> or <code>[expanderTemplateRef]</code> input of the filter group.\n            </p>\n            <p>\n                To pre-select filters, define <code>selectedFilterValues</code> for your\n                <a target=\"_blank\" href=\"../interfaces/IFilterGroupItem.html\"><code>IFilterGroupItem</code></a> objects.\n            </p>\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=custom-template-filter-group --p=app\n                <span appendedText>with some manual adjustments that can be seen below</span>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"custom-template-filter-group\">\n                <app-custom-template-filter-group-composite-example></app-custom-template-filter-group-composite-example>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n        <nui-tab heading=\"Custom data source\">\n            <h2>Custom Data Source</h2>\n            <p>To use Filter Group with a custom data source:</p>\n            <ol>\n                <li>\n                    Create a custom data source service that extends <code>DataSourceService</code> and implements a method called <code>getFilteredData</code>.\n                    This method will communicate with an HTTP service to fetch filtered data and emit it back to the filter group.\n                </li>\n                <li>\n                    Get a reference to your filter groups via <code>ViewChildren</code> and subscribe to their changes. In the callback, register\n                    components in your custom data service using the <code>registerComponent</code> method of<code>DataSourceService</code>.\n                </li>\n                <li>\n                    On filter change, have the custom data source service emit filters (<code>IFilters</code>) to the http service\n                    and receive a filtered data object (<code>ICustomDSFilteredData</code>) in return.\n                    The filtered data object consists of filterGroupItems (<code>IFilterGroupItem[]</code>) and filteringState (<code>IFilteringOutputs</code>).\n                </li>\n            </ol>\n            <p>\n                As implementations of the custom data source service may vary, other data may be passed from the filter group to the custom data source\n                in order for the custom data source to apply filters and return filtered data.\n            </p>\n\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=custom-data-source-filter-group --p=app\n                <span appendedText>with some manual adjustments that can be seen below</span>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"custom-data-source-filter-group\">\n                <app-custom-data-source-filter-group-composite-example></app-custom-data-source-filter-group-composite-example>\n                <nui-fake-filtering-datasource-backend-component></nui-fake-filtering-datasource-backend-component>\n            </nui-schematic-docs-example>\n        </nui-tab>\n\n\n\n        <nui-tab heading=\"Collapse / Dialog\">\n            <h2>Handle Multiple Filter Group Options</h2>\n            <p>\n                Only 10 filter group options are displayed by default. You can change this number by setting the <code>itemsToDisplay</code>\n                property of an <a target=\"_blank\" href=\"../interfaces/IFilterGroupItem.html\"><code>IFilterGroupItem</code></a>.\n            </p>\n            <p>\n                The remaining options will be replaced with a <strong>Show all</strong> button bound to the <code>(showAllButtonClicked)</code> output.\n                To display the hidden options, you can use the <code>FilterGroupCompositeDialogComponent</code> generated by the schematic:\n            </p>\n            <ol>\n                <li>\n                    Implement an item picker and place it in the dialog template. The example below uses a simple selectable list - to add more functionality,\n                    such as sorting and pagination, refer to the <a target=\"_blank\" href=\"../additional-documentation/schematics/list.html\">list schematic docs</a>.\n                </li>\n                <li>\n                    Add your dialog component to your module's <code>entryComponents</code>.\n                </li>\n                <li>\n                    Implement a handler for the <code>showAllButtonClicked</code> output.\n                    Use it to open the dialog, feed it the required parameters and update selection on <code>dialogClosed</code> event\n                    (refer to the <code>handleFilterDialog</code> method in the example).\n                </li>\n            </ol>\n\n            <nui-schematic-docs-command>ng g @nova-ui/bits:filter-group --name=dialog-filter-group --p=app\n                <span appendedText>with some manual adjustments that can be seen below</span>\n            </nui-schematic-docs-command>\n            <nui-schematic-docs-example exampleFolderName=\"dialog-filter-group\">\n                <app-dialog-filter-group-composite-example></app-dialog-filter-group-composite-example>\n            </nui-schematic-docs-example>\n        </nui-tab>\n    </nui-tab-group>\n</nui-schematic-docs-page>\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiBusyModule,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDialogModule,\n    NuiDividerModule,\n    NuiDocsModule,\n    NuiExpanderModule,\n    NuiIconModule,\n    NuiImageModule,\n    NuiMessageModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiProgressModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSelectorModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n    NuiTableModule,\n    NuiTabsModule,\n    NuiToolbarModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\nimport { ApolloModule, APOLLO_OPTIONS } from \"apollo-angular\";\nimport { HttpLink, HttpLinkModule } from \"apollo-angular-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { BasicFilterGroupExampleComponent } from \"./filter-group/basic-filter-group/basic-filter-group.example.component\";\nimport { BasicFilterGroupCompositeModule } from \"./filter-group/basic-filter-group/basic-filter-group.module\";\nimport { CustomDataSourceFilterGroupExampleComponent } from \"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component\";\nimport { CustomDataSourceFilterGroupCompositeModule } from \"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module\";\nimport { CustomTemplateFilterGroupExampleComponent } from \"./filter-group/custom-template-filter-group/custom-template-filter-group.example.component\";\nimport { CustomTemplateFilterGroupCompositeModule } from \"./filter-group/custom-template-filter-group/custom-template-filter-group.module\";\nimport { DialogFilterGroupExampleComponent } from \"./filter-group/dialog-filter-group/dialog-filter-group.example.component\";\nimport { DialogFilterGroupCompositeModule } from \"./filter-group/dialog-filter-group/dialog-filter-group.module\";\nimport { FakeHTTPService, FakeServer } from \"./filter-group/fake-http.service\";\nimport { FilterGroupSchematicExampleComponent } from \"./filter-group/filter-group-schematic.example.component\";\nimport { FilteredViewListWithPaginationComponent } from \"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component\";\nimport { FilteredViewListWithPaginationModule } from \"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module\";\nimport { FilteredViewListWithVirtualScrollComponent } from \"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component\";\nimport { FilteredViewListWithVirtualScrollModule } from \"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module\";\nimport { FilteredViewSchematicExampleComponent } from \"./filtered-view/filtered-view-schematic.example.component\";\nimport { FilteredViewSchematicOutletComponent } from \"./filtered-view/filtered-view-schematics.outlet.component\";\nimport { FilteredViewTableWithCustomVirtualScrollComponent } from \"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component\";\nimport { FilteredViewTableWithCustomVirtualScrollModule } from \"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module\";\nimport { FilteredViewTableWithPaginationComponent } from \"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component\";\nimport { FilteredViewTableWithPaginationModule } from \"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module\";\nimport { FilteredViewTableWithSelectionComponent } from \"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component\";\nimport { FilteredViewTableWithSelectionModule } from \"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module\";\nimport { FilteredViewTableWithVirtualScrollSelectionComponent } from \"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component\";\nimport { FilteredViewTableWithVirtualScrollSelectionModule } from \"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module\";\nimport { FilteredViewTableWithVirtualScrollComponent } from \"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component\";\nimport { FilteredViewTableWithVirtualScrollModule } from \"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module\";\nimport { FilteredViewWithListComponent } from \"./filtered-view/filtered-view-with-list/filtered-view-with-list.component\";\nimport { FilteredViewWithListModule } from \"./filtered-view/filtered-view-with-list/filtered-view-with-list.module\";\nimport { FilteredViewWithTableComponent } from \"./filtered-view/filtered-view-with-table/filtered-view-with-table.component\";\nimport { FilteredViewWithTableModule } from \"./filtered-view/filtered-view-with-table/filtered-view-with-table.module\";\nimport { FilteredViewWithTreeComponent } from \"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component\";\nimport { FilteredViewWithTreeModule } from \"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.module\";\nimport { BasicListComponent } from \"./list/basic-list/basic-list.component\";\nimport { ListSchematicExampleComponent } from \"./list/list-schematic.example.component\";\nimport { ListSchematicsOutletComponent } from \"./list/list-schematics-outlet.component\";\nimport { PaginatedListComponent } from \"./list/paginated-list/paginated-list.component\";\nimport { SearchListComponent } from \"./list/search-list/search-list.component\";\nimport { SelectionListComponent } from \"./list/selection-list/selection-list.component\";\nimport { VirtualScrollListComponent } from \"./list/virtual-scroll-list/virtual-scroll-list.component\";\nimport { SchematicsDocsComponent } from \"./schematics-docs.component\";\nimport { BasicTableComponent } from \"./table/basic-table/basic-table.component\";\nimport { TableSchematicExampleComponent } from \"./table/table-schematic-example.component\";\nimport { TableWithCustomVirtualScrollComponent } from \"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component\";\nimport { TableWithPaginationComponent } from \"./table/table-with-pagination/table-with-pagination.component\";\nimport { TableWithSearchComponent } from \"./table/table-with-search/table-with-search.component\";\nimport { TableWithSelectionComponent } from \"./table/table-with-selection/table-with-selection.component\";\nimport { TableWithSortComponent } from \"./table/table-with-sort/table-with-sort.component\";\nimport { TableWithVirtualScrollComponent } from \"./table/table-with-virtual-scroll/table-with-virtual-scroll.component\";\nimport { RecursiveObjectViewComponent } from \"./utils/recursive-object-view.component\";\nimport { SchematicsDocsCliOptionComponent } from \"./utils/schematic-docs-cli-option/schematic-docs-cli-option.component\";\nimport { SchematicsDocsCommandComponent } from \"./utils/schematic-docs-command/schematic-docs-command.component\";\nimport { SchematicDocsExampleComponent } from \"./utils/schematic-docs-example/schematic-docs-example.component\";\nimport { SchematicDocsPageComponent } from \"./utils/schematic-docs-page/schematic-docs-page.component\";\nimport { SchematicJsonComponent } from \"./utils/schematic-json.component\";\n\nconst COUNTRIES_API = \"https://countries-274616.ew.r.appspot.com/\";\n\n\nenum FilteredViewRoutes {\n    Main = \"\",\n    List = \"list\",\n    ListPagination = \"list-pagination\",\n    ListVirtualScroll = \"list-virtual-scroll\",\n    Table = \"table\",\n    TablePagination = \"table-pagination\",\n    TablePaginationSelection = \"table-pagination-selection\",\n    TableVirtualScroll = \"table-virtual-scroll\",\n    TableVirtualScrollSelection = \"table-virtual-scroll-selection\",\n    TableVirtualScrollCustom = \"table-virtual-scroll-custom\",\n}\n\nconst FILTERED_VIEW_CHILD_ROUTES: (Route & { path: FilteredViewRoutes })[] = [\n    {\n      path: FilteredViewRoutes.Main,\n      component: FilteredViewSchematicExampleComponent,\n    },\n    {\n        path: FilteredViewRoutes.List,\n        component: FilteredViewWithListComponent,\n    },\n    {\n        path: FilteredViewRoutes.ListPagination,\n        component: FilteredViewListWithPaginationComponent,\n    },\n    {\n        path: FilteredViewRoutes.ListVirtualScroll,\n        component: FilteredViewListWithVirtualScrollComponent,\n    },\n    {\n        path: FilteredViewRoutes.Table,\n        component: FilteredViewWithTableComponent,\n    },\n    {\n        path: FilteredViewRoutes.TablePagination,\n        component: FilteredViewTableWithPaginationComponent,\n    },\n    {\n        path: FilteredViewRoutes.TablePaginationSelection,\n        component: FilteredViewTableWithSelectionComponent,\n    },\n    {\n        path: FilteredViewRoutes.TableVirtualScroll,\n        component: FilteredViewTableWithVirtualScrollComponent,\n    },\n    {\n        path: FilteredViewRoutes.TableVirtualScrollSelection,\n        component: FilteredViewTableWithVirtualScrollSelectionComponent,\n    },\n    {\n        path: FilteredViewRoutes.TableVirtualScrollCustom,\n        component: FilteredViewTableWithCustomVirtualScrollComponent,\n    },\n];\n\n\nconst staticRoutes: Routes = [\n    {\n        path: \"\",\n        component: SchematicsDocsComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"filtered-view\",\n        component: FilteredViewSchematicOutletComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n        children: FILTERED_VIEW_CHILD_ROUTES,\n    },\n    {\n        path: \"filter-group\",\n        component: FilterGroupSchematicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"list\",\n        component: ListSchematicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"list-outlet\",\n        component: ListSchematicsOutletComponent,\n        children: [{\n            path: \"selection\",\n            component: SelectionListComponent,\n        }],\n    },\n    {\n        path: \"table\",\n        component: TableSchematicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"tree\",\n        component: FilteredViewWithTreeComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n];\n\n@NgModule({\n    declarations: [\n        FakeServer,\n        FilteredViewSchematicOutletComponent,\n        ListSchematicsOutletComponent,\n        FilteredViewSchematicExampleComponent,\n        BasicFilterGroupExampleComponent,\n        CustomDataSourceFilterGroupExampleComponent,\n        CustomTemplateFilterGroupExampleComponent,\n        DialogFilterGroupExampleComponent,\n        FilterGroupSchematicExampleComponent,\n        BasicListComponent,\n        SearchListComponent,\n        SelectionListComponent,\n        ListSchematicExampleComponent,\n        TableSchematicExampleComponent,\n        RecursiveObjectViewComponent,\n        SchematicJsonComponent,\n        SchematicsDocsComponent,\n        SchematicsDocsCommandComponent,\n        SchematicDocsExampleComponent,\n        SchematicDocsPageComponent,\n        SchematicsDocsCliOptionComponent,\n        VirtualScrollListComponent,\n        PaginatedListComponent,\n        TableWithVirtualScrollComponent,\n        TableWithPaginationComponent,\n        BasicTableComponent,\n        TableWithSortComponent,\n        TableWithSearchComponent,\n        TableWithSelectionComponent,\n        TableWithCustomVirtualScrollComponent,\n    ],\n    imports: [\n        CommonModule,\n        ApolloModule,\n        HttpLinkModule,\n        NuiExpanderModule,\n        NuiMessageModule,\n        NuiPaginatorModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSelectorModule,\n        NuiToolbarModule,\n        NuiCheckboxModule,\n        NuiTabsModule,\n        NuiSpinnerModule,\n        NuiPanelModule,\n        NuiTableModule,\n        NuiDialogModule,\n        NuiBusyModule,\n        NuiIconModule,\n        RouterModule.forChild(staticRoutes),\n        FilteredViewWithTableModule,\n        BasicFilterGroupCompositeModule,\n        CustomDataSourceFilterGroupCompositeModule,\n        CustomTemplateFilterGroupCompositeModule,\n        DialogFilterGroupCompositeModule,\n        NuiDocsModule,\n        NuiButtonModule,\n        NuiImageModule,\n        HttpClientModule,\n        NuiPopoverModule,\n        ScrollingModule,\n        NuiProgressModule,\n        FilteredViewTableWithPaginationModule,\n        FilteredViewTableWithVirtualScrollModule,\n        FilteredViewListWithVirtualScrollModule,\n        FilteredViewListWithPaginationModule,\n        FilteredViewWithListModule,\n        FilteredViewWithTableModule,\n        FilteredViewWithTreeModule,\n        NuiDividerModule,\n        FilteredViewTableWithSelectionModule,\n        FilteredViewTableWithCustomVirtualScrollModule,\n        FilteredViewTableWithVirtualScrollSelectionModule,\n    ],\n    providers: [\n        DatePipe,\n        FakeHTTPService,\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n        {\n            provide: APOLLO_OPTIONS,\n            useFactory: (httpLink: HttpLink) =>\n                ({\n                    cache: new InMemoryCache(),\n                    link: httpLink.create({\n                        uri: COUNTRIES_API,\n                    }),\n                }),\n            deps: [HttpLink],\n        },\n    ],\n})\nexport class SchematicModule {\n}\n","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTableComponent } from \\\"./filtered-view-table/filtered-view-table.component\\\";\\nimport { FilteredViewWithTableComponent } from \\\"./filtered-view-with-table.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiIconModule,\\n        NuiSpinnerModule,\\n        NuiTableModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewWithTableComponent,\\n        FilteredViewTableComponent,\\n    ],\\n    exports: [\\n        FilteredViewWithTableComponent,\\n        FilteredViewTableComponent,\\n    ],\\n})\\n\\nexport class FilteredViewWithTableModule {}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  var oldSchema = context.getSchema();\n  var alreadyDefined = (_ref = (_ref2 = (_oldSchema$astNode = oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0 ? _oldSchema$astNode : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getQueryType()) !== null && _ref2 !== void 0 ? _ref2 : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getMutationType()) !== null && _ref !== void 0 ? _ref : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getSubscriptionType();\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError('Cannot define a new schema within a schema extension.', node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError('Must provide only one schema definition.', node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}\n","import inspect from \"../../jsutils/inspect.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { isCompositeType } from \"../../type/definition.mjs\";\nimport { typeFromAST } from \"../../utilities/typeFromAST.mjs\";\nimport { doTypesOverlap } from \"../../utilities/typeComparators.mjs\";\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n\n      if (isCompositeType(fragType) && isCompositeType(parentType) && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        var parentTypeStr = inspect(parentType);\n        var fragTypeStr = inspect(fragType);\n        context.reportError(new GraphQLError(\"Fragment cannot be spread here as objects of type \\\"\".concat(parentTypeStr, \"\\\" can never be of type \\\"\").concat(fragTypeStr, \"\\\".\"), node));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n\n      if (fragType && parentType && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        var parentTypeStr = inspect(parentType);\n        var fragTypeStr = inspect(fragType);\n        context.reportError(new GraphQLError(\"Fragment \\\"\".concat(fragName, \"\\\" cannot be spread here as objects of type \\\"\").concat(parentTypeStr, \"\\\" can never be of type \\\"\").concat(fragTypeStr, \"\\\".\"), node));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n\n  if (frag) {\n    var type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","import { IFilter, INovaFilters } from \"@nova-ui/bits\";\n\nexport enum ServerStatus {\n    active = \"Active\",\n    down = \"Down\",\n}\n\n// main model being processed & rendered in the frontend\nexport interface IServer {\n    location: string;\n    name: string;\n    status: ServerStatus;\n}\n\n// implement custom filters\nexport interface IServerFilters extends INovaFilters {\n    location?: IFilter<string>;\n    name?: IFilter<string>;\n    status?: IFilter<ServerStatus>;\n}\n\n// collection of items that we've received from the backend API response\nexport interface IServersApiResponse {\n    count: number;\n    items: IServer[];\n}\n\n// collection of items that we've transformed from the backend API\nexport interface IServersCollection {\n    items: IServer[];\n    count: number;\n    status?: IFilter<Record<string, number>>;\n    location?: IFilter<Record<string, number>>;\n}\n\nexport interface IFilterable {\n    applyFilters: () => Promise<void>;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins.less\\\";\\n\\n.nui-filter-group-composite {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","import { Component, Input, OnInit, ViewEncapsulation } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-schematic-docs-page\",\n    templateUrl: \"schematic-docs-page.component.html\",\n    styleUrls: [\"schematic-docs-page.component.less\"],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class SchematicDocsPageComponent implements OnInit {\n    @Input() schematicFolderName: string;\n    public schematicHeading: string;\n    public angularJsonStylePreprocOptions: string = `\n\"stylePreprocessorOptions\": {\n    \"includePaths\": [\n        \"node_modules\"\n    ]\n}`;\n\n    ngOnInit() {\n        this.schematicHeading = this.schematicFolderName.replace(/-/g, \" \");\n    }\n}\n","<div class=\"nui-schematic-docs-page\">\n    <h1>{{ schematicHeading | titlecase }} Schematic</h1>\n    <ng-content select=\"[schematicSummary]\"></ng-content>\n    <h2 class=\"mt-4\">API</h2>\n    <div>\n        <p>\n            Use the following command to generate a {{ schematicHeading | titlecase }}:\n            <code>ng g @nova-ui/bits:{{ schematicFolderName }} --name=%name_of_component% --p=%prefix_for_component_selector%</code>\n        </p>\n        <p>\n            The schematic generates styles with a reference to files that are stored in\n            <code>node_modules/@nova-ui/bits/sdk/less</code>. You can provide this path in your project's\n            <code>angular.json</code> to make these references work:\n        </p>\n        <p>\n            <nui-example-code>\n                {{ angularJsonStylePreprocOptions }}\n            </nui-example-code>\n        </p>\n        <nui-schematic-json [schematicFolderName]=\"schematicFolderName\"></nui-schematic-json>\n    </div>\n\n    <div class=\"nui-schematic-docs-examples\">\n        <ng-content select=\"[schematicExamples]\"></ng-content>\n    </div>\n</div>\n","<div nui-busy [busy]=\"isBusy\">\n    <nui-spinner size=\"large\" i18n-message message=\"Loading...\"></nui-spinner>\n    <div class=\"d-flex flex-row\">\n        <nui-sorter class=\"app-filtered-view-list-with-virtual-scroll-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-filtered-view-list-with-virtual-scroll-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"!isBusy && (listItems$ | async).length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-filtered-view-list-with-virtual-scroll-list-repeat\"\n                    selectionMode=\"none\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"listItems$ | async\"\n                    virtualScroll=\"true\"\n                    itemSize=\"30\">\n        </nui-repeat>\n    </div>\n\n    <footer class=\"app-filtered-view-list-with-virtual-scroll-list-scrolling-footer\">\n        <div class=\"d-flex justify-content-center align-items-center\">\n            <div class=\"p-1 d-flex\">\n                <div class=\"d-flex pt-3 pb-3\" i18n>\n                    Showing {{(listItems$ | async).length}} of {{ totalItems }}.\n                </div>\n                <div class=\"d-flex pt-3 pb-3\">\n                    <ng-container i18n *ngIf=\"(listItems$ | async).length !== totalItems; else endOfData\">, scroll down for more.</ng-container>\n                    <ng-template #endOfData><strong>. All items loaded.</strong></ng-template>\n                </div>\n            </div>\n        </div>\n    </footer>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    DataSourceService,\n    IFilteringOutputs,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    nameof,\n    RepeatComponent,\n    SearchComponent,\n    SorterComponent,\n    SorterDirection,\n    VirtualViewportManager,\n} from \"@nova-ui/bits\";\nimport {\n    BehaviorSubject,\n    Subject,\n} from \"rxjs\";\nimport {\n    filter,\n    switchMap,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    RESULTS_PER_PAGE,\n} from \"../filtered-view-list-with-virtual-scroll-data\";\nimport { FilteredViewListWithVirtualScrollDataSource } from \"../filtered-view-list-with-virtual-scroll-data-source.service\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"../types\";\n\n@Component({\n    selector: \"app-filtered-view-list-with-virtual-scroll-list\",\n    templateUrl: \"./filtered-view-list.component.html\",\n    styleUrls: [\"./filtered-view-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilteredViewListComponent implements OnInit, AfterViewInit, OnDestroy {\n    public listItems$ = new BehaviorSubject<IServer[]>([]);\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n    public isBusy = false;\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: FilteredViewListWithVirtualScrollDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private viewportManager: VirtualViewportManager\n    ) {\n    }\n\n    public ngOnInit() {\n        this.dataSource.busy.pipe(\n            tap(val => {\n                this.isBusy = val;\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            virtualScroll: { componentInstance: this.viewportManager },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.viewportManager\n            // Note: Initializing viewportManager with the repeat's CDK Viewport Ref\n            .setViewport(this.repeat.viewportRef)\n\n            // Note: Initializing the stream with the desired page size, based on which\n            // ViewportManager will perform the observations and will emit\n            // distinct ranges with step equal to provided pageSize\n            .observeNextPage$({pageSize: RESULTS_PER_PAGE})\n                .pipe(\n                    // Since we know the total number of items we can stop the stream when dataset end is reached\n                    // Otherwise we can let VirtualViewportManager to stop when last received page range will not match requested range\n                    filter(() => {\n                        const items = this.listItems$.getValue();\n                        return !items.length || items.length < this.totalItems;\n                    }),\n                    tap(() => this.applyFilters(false)),\n                    // Note: Using the same stream to subscribe to the outputsSubject and update the items list\n                    switchMap(() => this.dataSource.outputsSubject.pipe(\n                        tap((data: IFilteringOutputs) => {\n                            // update the list of items to be rendered\n                            const items = data.repeat?.itemsSource || [];\n\n                            // after receiving data we need to append it to our previous fetched results\n                            this.listItems$.next(this.listItems$.getValue().concat(items));\n\n                            this.totalItems = data.paginator?.total || 0;\n\n                            this.changeDetection.detectChanges();\n                        })\n                    )\n                ),\n                takeUntil(this.destroy$)\n            ).subscribe();\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters(resetVirtualScroll: boolean = true) {\n        if (resetVirtualScroll) {\n            // it is important to reset viewportManager to start page\n            // so that the datasource performs the search with 1st page\n            this.viewportManager.reset({emitFirstPage: false});\n        }\n\n        // Every new search request or filter change should\n        // clear the cache in order to correctly display a new set of data\n        const filters = this.dataSource.getFilters();\n        const reset = this.dataSource.computeFiltersChange(filters);\n        if (reset || filters.virtualScroll?.value.start === 0) {\n            this.listItems$.next([]);\n            this.changeDetection.detectChanges();\n        }\n\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n    NuiBusyModule,\n    NuiChipsModule,\n    NuiPaginatorModule,\n    NuiPanelModule,\n    NuiPopoverModule,\n    NuiRepeatModule,\n    NuiSearchModule,\n    NuiSorterModule,\n    NuiSpinnerModule,\n} from \"@nova-ui/bits\";\n\nimport { FilterGroupModule } from \"./filter-group/filter-group.module\";\nimport { FilteredViewListWithVirtualScrollComponent } from \"./filtered-view-list-with-virtual-scroll.component\";\nimport { FilteredViewListComponent } from \"./filtered-view-list/filtered-view-list.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NuiPaginatorModule,\n        NuiPanelModule,\n        NuiRepeatModule,\n        NuiSearchModule,\n        NuiSorterModule,\n        NuiSpinnerModule,\n        NuiBusyModule,\n        FilterGroupModule,\n        NuiChipsModule,\n        NuiPopoverModule,\n    ],\n    declarations: [\n        FilteredViewListWithVirtualScrollComponent,\n        FilteredViewListComponent,\n    ],\n    exports: [\n        FilteredViewListWithVirtualScrollComponent,\n        FilteredViewListComponent,\n    ],\n})\n\nexport class FilteredViewListWithVirtualScrollModule {}\n","export default \"<div class=\\\"filter-group-dialog\\\">\\n    <nui-dialog-header [title]=\\\"title\\\" (closed)=\\\"closeDialog()\\\"></nui-dialog-header>\\n    <div class=\\\"filter-group-dialog__body\\\">\\n        <app-item-picker\\n            [itemPickerOptions]=\\\"itemPickerOptions\\\"\\n            [selectedValues]=\\\"selectedValues\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"></app-item-picker>\\n    </div>\\n    <nui-dialog-footer>\\n        <button nui-button type=\\\"button\\\"\\n                (click)=\\\"closeDialog()\\\" i18n>\\n            Cancel\\n        </button>\\n        <button nui-button type=\\\"button\\\"\\n                displayStyle=\\\"primary\\\"\\n                (click)=\\\"acceptDialogFilters()\\\" i18n>\\n            Save\\n        </button>\\n    </nui-dialog-footer>\\n</div>\\n\\n\";","export default \"import { ScrollingModule } from \\\"@angular/cdk/scrolling\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport {\\n    NuiBusyModule,\\n    NuiChipsModule,\\n    NuiIconModule,\\n    NuiPaginatorModule,\\n    NuiPanelModule,\\n    NuiPopoverModule,\\n    NuiProgressModule,\\n    NuiRepeatModule,\\n    NuiSearchModule,\\n    NuiSorterModule,\\n    NuiSpinnerModule,\\n    NuiTableModule,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { FilterGroupModule } from \\\"./filter-group/filter-group.module\\\";\\nimport { FilteredViewTableWithVirtualScrollSelectionComponent } from \\\"./filtered-view-table-with-virtual-scroll-selection.component\\\";\\nimport { FilteredViewTableComponent } from \\\"./filtered-view-table/filtered-view-table.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        ScrollingModule,\\n        CommonModule,\\n        NuiPaginatorModule,\\n        NuiPanelModule,\\n        NuiProgressModule,\\n        NuiRepeatModule,\\n        NuiSearchModule,\\n        NuiSorterModule,\\n        NuiIconModule,\\n        NuiSpinnerModule,\\n        NuiTableModule,\\n        NuiBusyModule,\\n        FilterGroupModule,\\n        NuiChipsModule,\\n        NuiPopoverModule,\\n    ],\\n    declarations: [\\n        FilteredViewTableWithVirtualScrollSelectionComponent,\\n        FilteredViewTableComponent,\\n    ],\\n    exports: [\\n        FilteredViewTableWithVirtualScrollSelectionComponent,\\n        FilteredViewTableComponent,\\n    ],\\n})\\n\\nexport class FilteredViewTableWithVirtualScrollSelectionModule {}\\n\";","export default \"import { CommonModule } from \\\"@angular/common\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\n\\nimport { ItemPickerComponent } from \\\"./item-picker.component\\\";\\n\\n@NgModule({\\n    imports: [\\n        CommonModule,\\n    ],\\n    declarations: [\\n        ItemPickerComponent,\\n    ],\\n    exports: [\\n        ItemPickerComponent,\\n    ],\\n    providers: [],\\n})\\n\\nexport class ItemPickerModule {}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","import { InjectionToken } from \"@angular/core\";\n// number of results to be displayed\nexport const RESULTS_PER_PAGE = 400;\n\nexport const CUSTOM_SCROLL_ITEMS_PER_PAGE: InjectionToken<number> = new InjectionToken(\"CUSTOM_SCROLL_ITEMS_PER_PAGE\");\n\n","import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \"@angular/core\";\nimport { DataSourceService, IFilteringParticipants } from \"@nova-ui/bits\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { FilterGroupComponent } from \"../filter-group.component\";\n\n@Component({\n    selector: \"app-filter-groups-wrapper\",\n    templateUrl: \"filter-groups-wrapper.component.html\",\n    styleUrls: [\"filter-groups-wrapper.component.less\"],\n})\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\n\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\"=1\": $localize `1 hidden filter.`, \"other\": $localize `# hidden filters.`};\n\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\n\n    ngAfterViewInit() {\n        this.dataSourceService.registerComponent(this.getFilterComponents());\n        this.filterGroups.changes.subscribe(() => {\n            this.dataSourceService.registerComponent(this.getFilterComponents());\n        });\n    }\n\n    public emptyFilterGroupsTitles(): string {\n        return this.filterGroups\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\n            .map(filterGroup => filterGroup.filterGroupItem.title)\n            .join(\", \");\n    }\n\n    public emptyFilterGroupsExist(): boolean {\n        return this.emptyFilterGroupsCount() > 0;\n    }\n\n    public emptyFilterGroupsCount(): number {\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\n    }\n\n    private getFilterComponents(): IFilteringParticipants {\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\n            obj[item.filterGroupItem.id] = {componentInstance: item};\n            return obj;\n        }, {});\n    }\n}\n","<div class=\"filter-groups-wrapper\">\n    <ng-content></ng-content>\n    <div *ngIf=\"emptyFilterGroupsExist()\"\n         class=\"filter-groups-wrapper__hidden-filters d-flex align-items-center\">\n        <nui-popover [template]=\"hiddenFiltersPopover\">\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\n        </nui-popover>\n    </div>\n</div>\n\n<ng-template #hiddenFiltersPopover>\n    <span class=\"filter-groups-wrapper__popover-hint\" i18n>\n        Following filter properties are turned on, but there are no existing values for them in the system.\n    </span>\n    <nui-divider size=\"small\"></nui-divider>\n    <span class=\"filter-groups-wrapper__popover-hidden-filters\">{{emptyFilterGroupsTitles()}}</span>\n</ng-template>\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n    IDataSource,\n    INovaFilteringOutputs,\n    LoggerService,\n    ServerSideDataSource,\n} from \"@nova-ui/bits\";\nimport { Observable, of } from \"rxjs\";\nimport {\n    catchError,\n    delay,\n    map,\n} from \"rxjs/operators\";\n\nimport {\n    IServerFilters,\n    IServersApiResponse,\n    IServersCollection,\n} from \"./types\";\n\n// @TODO customize the backend API URL\nexport const API_URL = \"http://nova-pg.swdev.local/api/v1/servers\";\n\n/**\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\n * to fetch data\n */\n@Injectable()\nexport class TableWithSortDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\n    constructor(\n        private logger: LoggerService,\n        private http: HttpClient\n    ) {\n        super();\n    }\n\n    // build query params specific to our backend API\n    private static getRequestParams(filters: IServerFilters): HttpParams {\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\n        let params = new HttpParams()\n            // define the start page used by the virtual scroll internal \"paginator\"\n            .set(\"page\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\n\n            // specify the maximum number of items we need to fetch for each request\n            .set(\"pageSize\", String(paging.end - paging.start))\n            .set(\"searchField\", \"name\")\n            .set(\"searchContent\", filters.search?.value ?? \"\");\n\n        if (filters.sorter?.value?.sortBy) {\n            params = params.set(\"sortField\", filters.sorter.value.sortBy);\n            params = params.set(\"sortOrder\", filters.sorter.value.direction.toUpperCase());\n        }\n\n        return params;\n    }\n\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\n        return of(data).pipe(\n            map((response: IServersCollection) => {\n                const itemsSource = response.items;\n\n                return {\n                    repeat: { itemsSource: itemsSource },\n                    paginator: {\n                        total: response.count,\n                    },\n                };\n            })\n        ).toPromise();\n    }\n\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\n        // fetch response from the backend\n        const requestParams = TableWithSortDataSource.getRequestParams(filters);\n        return this.http\n            .get<IServersApiResponse>(API_URL, {params: requestParams})\n            .pipe(\n                // since API being used sends the response almost immediately,\n                // we need to fake it takes longer to be able the show the spinner component\n                // while the data is being received\n                // PS: NOT to be used in real examples\n                delay(300),\n\n                // transform backend API response (IServersApiResponse)\n                // to our frontend items collection (IServersCollection)\n                map(response => ({\n                    items: response.items?.map(item => ({\n                        name: item.name,\n                        location: item.location,\n                        status: item.status,\n                    })) || [],\n                    count: response.count,\n                })),\n\n                // error handle in case of any error\n                catchError(e => {\n                    this.logger.error(e);\n                    return of({\n                        items: [],\n                        count: 0,\n                    });\n                })\n            );\n    }\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport memoize3 from \"../jsutils/memoize3.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport isPromise from \"../jsutils/isPromise.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport safeArrayFrom from \"../jsutils/safeArrayFrom.mjs\";\nimport promiseReduce from \"../jsutils/promiseReduce.mjs\";\nimport promiseForObject from \"../jsutils/promiseForObject.mjs\";\nimport { addPath, pathToArray } from \"../jsutils/Path.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { locatedError } from \"../error/locatedError.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { assertValidSchema } from \"../type/validate.mjs\";\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from \"../type/introspection.mjs\";\nimport { GraphQLIncludeDirective, GraphQLSkipDirective } from \"../type/directives.mjs\";\nimport { isNamedType, isObjectType, isAbstractType, isLeafType, isListType, isNonNullType } from \"../type/definition.mjs\";\nimport { typeFromAST } from \"../utilities/typeFromAST.mjs\";\nimport { getOperationRootType } from \"../utilities/getOperationRootType.mjs\";\nimport { getVariableValues, getArgumentValues, getDirectiveValues } from \"./values.mjs\";\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g \"a\"\n * 2) fragment \"spreads\" e.g. \"...c\"\n * 3) inline fragment \"spreads\" e.g. \"...on Type { a }\"\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\nexport function execute(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? executeImpl(argsOrSchema) : executeImpl({\n    schema: argsOrSchema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  });\n}\n/**\n * Also implements the \"Evaluating requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function executeSync(args) {\n  var result = executeImpl(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction executeImpl(args) {\n  var schema = args.schema,\n      document = args.document,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      typeResolver = args.typeResolver; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  var exeContext = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver); // Return early errors if execution context failed.\n\n  if (Array.isArray(exeContext)) {\n    return {\n      errors: exeContext\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n\n\n  var data = executeOperation(exeContext, exeContext.operation, rootValue);\n  return buildResponse(exeContext, data);\n}\n/**\n * Given a completed execution context and data, build the { errors, data }\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\n\nfunction buildResponse(exeContext, data) {\n  if (isPromise(data)) {\n    return data.then(function (resolved) {\n      return buildResponse(exeContext, resolved);\n    });\n  }\n\n  return exeContext.errors.length === 0 ? {\n    data: data\n  } : {\n    errors: exeContext.errors,\n    data: data\n  };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\n\nexport function assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || devAssert(0, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  assertValidSchema(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null || isObjectLike(rawVariableValues) || devAssert(0, 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nexport function buildExecutionContext(schema, document, rootValue, contextValue, rawVariableValues, operationName, fieldResolver, typeResolver) {\n  var _definition$name, _operation$variableDe;\n\n  var operation;\n  var fragments = Object.create(null);\n\n  for (var _i2 = 0, _document$definitions2 = document.definitions; _i2 < _document$definitions2.length; _i2++) {\n    var definition = _document$definitions2[_i2];\n\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [new GraphQLError('Must provide operation name if query contains multiple operations.')];\n          }\n\n          operation = definition;\n        } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n          operation = definition;\n        }\n\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [new GraphQLError(\"Unknown operation named \\\"\".concat(operationName, \"\\\".\"))];\n    }\n\n    return [new GraphQLError('Must provide an operation.')];\n  } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n  var variableDefinitions = (_operation$variableDe = operation.variableDefinitions) !== null && _operation$variableDe !== void 0 ? _operation$variableDe : [];\n  var coercedVariableValues = getVariableValues(schema, variableDefinitions, rawVariableValues !== null && rawVariableValues !== void 0 ? rawVariableValues : {}, {\n    maxErrors: 50\n  });\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema: schema,\n    fragments: fragments,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    operation: operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver: fieldResolver !== null && fieldResolver !== void 0 ? fieldResolver : defaultFieldResolver,\n    typeResolver: typeResolver !== null && typeResolver !== void 0 ? typeResolver : defaultTypeResolver,\n    errors: []\n  };\n}\n/**\n * Implements the \"Evaluating operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  var type = getOperationRootType(exeContext.schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n  var path = undefined; // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    var result = operation.operation === 'mutation' ? executeFieldsSerially(exeContext, type, rootValue, path, fields) : executeFields(exeContext, type, rootValue, path, fields);\n\n    if (isPromise(result)) {\n      return result.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n\n    return result;\n  } catch (error) {\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"write\" mode.\n */\n\n\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return promiseReduce(Object.keys(fields), function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName, parentType.name);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n\n    if (result === undefined) {\n      return results;\n    }\n\n    if (isPromise(result)) {\n      return result.then(function (resolvedResult) {\n        results[responseName] = resolvedResult;\n        return results;\n      });\n    }\n\n    results[responseName] = result;\n    return results;\n  }, Object.create(null));\n}\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"read\" mode.\n */\n\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  var results = Object.create(null);\n  var containsPromise = false;\n\n  for (var _i4 = 0, _Object$keys2 = Object.keys(fields); _i4 < _Object$keys2.length; _i4++) {\n    var responseName = _Object$keys2[_i4];\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName, parentType.name);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n\n    if (result !== undefined) {\n      results[responseName] = result;\n\n      if (isPromise(result)) {\n        containsPromise = true;\n      }\n    }\n  } // If there are no promises, we can just return the object\n\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n\n  return promiseForObject(results);\n}\n/**\n * Given a selectionSet, adds all of the fields in that selection to\n * the passed in map of fields, and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n *\n * @internal\n */\n\n\nexport function collectFields(exeContext, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (var _i6 = 0, _selectionSet$selecti2 = selectionSet.selections; _i6 < _selectionSet$selecti2.length; _i6++) {\n    var selection = _selectionSet$selecti2[_i6];\n\n    switch (selection.kind) {\n      case Kind.FIELD:\n        {\n          if (!shouldIncludeNode(exeContext, selection)) {\n            continue;\n          }\n\n          var name = getFieldEntryKey(selection);\n\n          if (!fields[name]) {\n            fields[name] = [];\n          }\n\n          fields[name].push(selection);\n          break;\n        }\n\n      case Kind.INLINE_FRAGMENT:\n        {\n          if (!shouldIncludeNode(exeContext, selection) || !doesFragmentConditionMatch(exeContext, selection, runtimeType)) {\n            continue;\n          }\n\n          collectFields(exeContext, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n\n      case Kind.FRAGMENT_SPREAD:\n        {\n          var fragName = selection.name.value;\n\n          if (visitedFragmentNames[fragName] || !shouldIncludeNode(exeContext, selection)) {\n            continue;\n          }\n\n          visitedFragmentNames[fragName] = true;\n          var fragment = exeContext.fragments[fragName];\n\n          if (!fragment || !doesFragmentConditionMatch(exeContext, fragment, runtimeType)) {\n            continue;\n          }\n\n          collectFields(exeContext, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n    }\n  }\n\n  return fields;\n}\n/**\n * Determines if a field should be included based on the @include and @skip\n * directives, where @skip has higher precedence than @include.\n */\n\nfunction shouldIncludeNode(exeContext, node) {\n  var skip = getDirectiveValues(GraphQLSkipDirective, node, exeContext.variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  var include = getDirectiveValues(GraphQLIncludeDirective, node, exeContext.variableValues);\n\n  if ((include === null || include === void 0 ? void 0 : include.if) === false) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\n\nfunction doesFragmentConditionMatch(exeContext, fragment, type) {\n  var typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  var conditionalType = typeFromAST(exeContext.schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return exeContext.schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Resolves the field on the given source object. In particular, this\n * figures out the value that the field returns by calling its resolve function,\n * then calls completeValue to complete promises, serialize scalars, or execute\n * the sub-selection-set for objects.\n */\n\n\nfunction resolveField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n  var fieldDef = getFieldDef(exeContext.schema, parentType, fieldName);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  var returnType = fieldDef.type;\n  var resolveFn = (_fieldDef$resolve = fieldDef.resolve) !== null && _fieldDef$resolve !== void 0 ? _fieldDef$resolve : exeContext.fieldResolver;\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    var args = getArgumentValues(fieldDef, fieldNodes[0], exeContext.variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    var _contextValue = exeContext.contextValue;\n    var result = resolveFn(source, args, _contextValue, info);\n    var completed;\n\n    if (isPromise(result)) {\n      completed = result.then(function (resolved) {\n        return completeValue(exeContext, returnType, fieldNodes, info, path, resolved);\n      });\n    } else {\n      completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    }\n\n    if (isPromise(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, function (rawError) {\n        var error = locatedError(rawError, fieldNodes, pathToArray(path));\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    var error = locatedError(rawError, fieldNodes, pathToArray(path));\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\n\nexport function buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes: fieldNodes,\n    returnType: fieldDef.type,\n    parentType: parentType,\n    path: path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (isNonNullType(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Field entries\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by evaluating all sub-selections.\n */\n\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n\n  if (isNonNullType(returnType)) {\n    var completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n\n    if (completed === null) {\n      throw new Error(\"Cannot return null for non-nullable field \".concat(info.parentType.name, \".\").concat(info.fieldName, \".\"));\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n\n  if (isListType(returnType)) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n\n  if (isLeafType(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n\n  if (isAbstractType(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is Object, execute and complete all sub-selections.\n  // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isObjectType(returnType)) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // istanbul ignore next (Not reachable. All possible output types have been considered)\n\n\n  false || invariant(0, 'Cannot complete value of unexpected output type: ' + inspect(returnType));\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\n\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n  var itemType = returnType.ofType;\n  var containsPromise = false;\n  var completedResults = safeArrayFrom(result, function (item, index) {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    var itemPath = addPath(path, index, undefined);\n\n    try {\n      var completedItem;\n\n      if (isPromise(item)) {\n        completedItem = item.then(function (resolved) {\n          return completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved);\n        });\n      } else {\n        completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item);\n      }\n\n      if (isPromise(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, function (rawError) {\n          var error = locatedError(rawError, fieldNodes, pathToArray(itemPath));\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      var error = locatedError(rawError, fieldNodes, pathToArray(itemPath));\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n\n  if (completedResults == null) {\n    throw new GraphQLError(\"Expected Iterable, but did not find one for field \\\"\".concat(info.parentType.name, \".\").concat(info.fieldName, \"\\\".\"));\n  }\n\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\n\nfunction completeLeafValue(returnType, result) {\n  var serializedResult = returnType.serialize(result);\n\n  if (serializedResult === undefined) {\n    throw new Error(\"Expected a value of type \\\"\".concat(inspect(returnType), \"\\\" but \") + \"received: \".concat(inspect(result)));\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\n\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var _returnType$resolveTy;\n\n  var resolveTypeFn = (_returnType$resolveTy = returnType.resolveType) !== null && _returnType$resolveTy !== void 0 ? _returnType$resolveTy : exeContext.typeResolver;\n  var contextValue = exeContext.contextValue;\n  var runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if (isPromise(runtimeType)) {\n    return runtimeType.then(function (resolvedRuntimeType) {\n      return completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n    });\n  }\n\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\n\nfunction ensureValidRuntimeType(runtimeTypeOrName, exeContext, returnType, fieldNodes, info, result) {\n  if (runtimeTypeOrName == null) {\n    throw new GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" must resolve to an Object type at runtime for field \\\"\").concat(info.parentType.name, \".\").concat(info.fieldName, \"\\\". Either the \\\"\").concat(returnType.name, \"\\\" type should provide a \\\"resolveType\\\" function or each possible type should provide an \\\"isTypeOf\\\" function.\"), fieldNodes);\n  } // FIXME: temporary workaround until support for passing object types would be removed in v16.0.0\n\n\n  var runtimeTypeName = isNamedType(runtimeTypeOrName) ? runtimeTypeOrName.name : runtimeTypeOrName;\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" must resolve to an Object type at runtime for field \\\"\").concat(info.parentType.name, \".\").concat(info.fieldName, \"\\\" with \") + \"value \".concat(inspect(result), \", received \\\"\").concat(inspect(runtimeTypeOrName), \"\\\".\"));\n  }\n\n  var runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" was resolve to a type \\\"\").concat(runtimeTypeName, \"\\\" that does not exist inside schema.\"), fieldNodes);\n  }\n\n  if (!isObjectType(runtimeType)) {\n    throw new GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" was resolve to a non-object type \\\"\").concat(runtimeTypeName, \"\\\".\"), fieldNodes);\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new GraphQLError(\"Runtime Object type \\\"\".concat(runtimeType.name, \"\\\" is not a possible type for \\\"\").concat(returnType.name, \"\\\".\"), fieldNodes);\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\n\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n  if (returnType.isTypeOf) {\n    var isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (isPromise(isTypeOf)) {\n      return isTypeOf.then(function (resolvedIsTypeOf) {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result);\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new GraphQLError(\"Expected value of type \\\"\".concat(returnType.name, \"\\\" but got: \").concat(inspect(result), \".\"), fieldNodes);\n}\n\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  var subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes);\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\n\nvar collectSubfields = memoize3(_collectSubfields);\n\nfunction _collectSubfields(exeContext, returnType, fieldNodes) {\n  var subFieldNodes = Object.create(null);\n  var visitedFragmentNames = Object.create(null);\n\n  for (var _i8 = 0; _i8 < fieldNodes.length; _i8++) {\n    var node = fieldNodes[_i8];\n\n    if (node.selectionSet) {\n      subFieldNodes = collectFields(exeContext, returnType, node.selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n\n  return subFieldNodes;\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\n\nexport var defaultTypeResolver = function defaultTypeResolver(value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if (isObjectLike(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n\n  var possibleTypes = info.schema.getPossibleTypes(abstractType);\n  var promisedIsTypeOfResults = [];\n\n  for (var i = 0; i < possibleTypes.length; i++) {\n    var type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      var isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if (isPromise(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(function (isTypeOfResults) {\n      for (var _i9 = 0; _i9 < isTypeOfResults.length; _i9++) {\n        if (isTypeOfResults[_i9]) {\n          return possibleTypes[_i9].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexport var defaultFieldResolver = function defaultFieldResolver(source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if (isObjectLike(source) || typeof source === 'function') {\n    var property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexport function getFieldDef(schema, parentType, fieldName) {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  } else if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  } else if (fieldName === TypeNameMetaFieldDef.name) {\n    return TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n","export default \"import { HttpClient, HttpParams } from \\\"@angular/common/http\\\";\\nimport { Injectable } from \\\"@angular/core\\\";\\nimport {\\n    IDataSource,\\n    INovaFilteringOutputs,\\n    LoggerService,\\n    ServerSideDataSource,\\n} from \\\"@nova-ui/bits\\\";\\nimport _forEach from \\\"lodash/forEach\\\";\\nimport {\\n    forkJoin,\\n    Observable,\\n    of,\\n} from \\\"rxjs\\\";\\nimport {\\n    catchError,\\n    delay,\\n    map,\\n} from \\\"rxjs/operators\\\";\\n\\nimport {\\n    IServerFilters,\\n    IServersApiResponse,\\n    IServersCollection,\\n} from \\\"./types\\\";\\n\\n// @TODO customize the backend API URL\\nexport const API_URL = \\\"http://nova-pg.swdev.local/api/v1/servers\\\";\\n\\n/**\\n * Example of a ServerSide DataSourceService which is using the Nova Backend API\\n * to fetch data\\n */\\n@Injectable()\\nexport class FilteredViewTableWithSelectionDataSource<T> extends ServerSideDataSource<T> implements IDataSource {\\n    constructor(\\n        private logger: LoggerService,\\n        private http: HttpClient\\n    ) {\\n        super();\\n    }\\n\\n    // build query params specific to our backend API\\n    private static getRequestParams(filters: IServerFilters): HttpParams {\\n        const paging = filters.paginator?.value || { start: 0, end: 0 };\\n        let params = new HttpParams()\\n            // define the start page used by the virtual scroll internal \\\"paginator\\\"\\n            .set(\\\"page\\\", Math.ceil(paging.start / (paging.end - paging.start)).toString())\\n\\n            // specify the maximum number of items we need to fetch for each request\\n            .set(\\\"pageSize\\\", String(paging.end - paging.start));\\n\\n        const multiFilters = this.extractMultiFilters(filters);\\n        if (multiFilters.size) {\\n            // set params if any filters\\n            const json = Array.from(multiFilters.entries())\\n                .reduce((o: {[key: string]: any}, [key, value]) => {\\n                    o[key] = value;\\n                    return o;\\n                }, {});\\n            params = params.set(\\\"filters\\\", JSON.stringify(json));\\n        }\\n\\n        if (filters.search?.value) {\\n            params = params.set(\\\"searchField\\\", \\\"name\\\");\\n            params = params.set(\\\"searchContent\\\", filters.search?.value ?? \\\"\\\");\\n        }\\n\\n        if (filters.sorter?.value?.sortBy) {\\n            params = params.set(\\\"sortField\\\", filters.sorter.value.sortBy);\\n            params = params.set(\\\"sortOrder\\\", filters.sorter.value.direction.toUpperCase());\\n        }\\n\\n        return params;\\n    }\\n\\n    private static getMultiFiltersNames(filters: IServerFilters): (keyof IServerFilters)[] {\\n        const filterKeys: (keyof IServerFilters)[] = [];\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\") {\\n                filterKeys.push(key);\\n            }\\n        });\\n\\n        return filterKeys;\\n    }\\n\\n    private static extractMultiFilters(filters: IServerFilters): Map<keyof IServerFilters, string[]> {\\n        const multiFilterArr: Map<string, string[]> = new Map<string, string[]>();\\n        _forEach(filters, (value, key) => {\\n            if (value?.type === \\\"string[]\\\" && value?.value?.length > 0) {\\n                multiFilterArr.set(key, value?.value);\\n            }\\n        });\\n\\n        return multiFilterArr;\\n    }\\n\\n    public async getFilteredData(data: IServersCollection): Promise<INovaFilteringOutputs> {\\n        return of(data).pipe(\\n            map((response: IServersCollection) => {\\n                const itemsSource = response.items;\\n\\n                return {\\n                    repeat: { itemsSource: itemsSource },\\n                    paginator: {\\n                        total: response.count,\\n                    },\\n                    status: response.status,\\n                    location: response.location,\\n                };\\n            })\\n        ).toPromise();\\n    }\\n\\n    // This method is expected to return all data needed for repeat/paginator/filterGroups in order to work.\\n    // In case of custom filtering participants feel free to extend INovaFilteringOutputs.\\n    protected getBackendData(filters: IServerFilters): Observable<IServersCollection> {\\n        // fetch response from the backend\\n        const requestParams = FilteredViewTableWithSelectionDataSource.getRequestParams(filters);\\n        const mainRequest = this.http.get<IServersApiResponse>(API_URL, {params: requestParams});\\n        const requests = [mainRequest];\\n\\n        // cleans any filter that we don't need\\n        let filterRequestParams = requestParams;\\n        [\\\"page\\\", \\\"pageSize\\\", \\\"sortField\\\", \\\"sortOrder\\\"].forEach(f => {\\n            filterRequestParams = filterRequestParams.delete(f);\\n        });\\n\\n        const lastFilters = filterRequestParams.get(\\\"filters\\\") ?? \\\"{}\\\";\\n\\n        // perform additional requests to retrieve the count for each filter group (eg: status, location)\\n        FilteredViewTableWithSelectionDataSource.getMultiFiltersNames(filters).forEach(filterName => {\\n            const serverFilters = Object.assign({}, JSON.parse(lastFilters));\\n            // always removes the current filter before the API call\\n            if (serverFilters[filterName]) {\\n                delete serverFilters[filterName];\\n                filterRequestParams = filterRequestParams.set(\\\"filters\\\", JSON.stringify(serverFilters));\\n            }\\n\\n            filterRequestParams = filterRequestParams.set(\\\"groupByField\\\", filterName.toString());\\n            const filterViewRequest = this.http.get<IServersApiResponse>(\\n                `${API_URL}/count`, { params: filterRequestParams });\\n\\n            // restore the filters\\n            filterRequestParams = filterRequestParams.set(\\\"filters\\\", lastFilters);\\n\\n            requests.push(filterViewRequest);\\n        });\\n\\n        // transform the and array that has unique keys from the backend\\n        // from => [{Active: 10}, {Down: 5}] => {{Active: 10}, {Down: 5}}\\n        const flatCount = (mapObj: any, obj: any) => {\\n            const key = Object.keys(obj)[0];\\n            mapObj[key] = Object.values(obj)[0];\\n            return mapObj;\\n        };\\n\\n        return forkJoin(requests).pipe(\\n            // since API being used sends the response almost immediately,\\n            // we need to fake it takes longer to be able the show the spinner component\\n            // while the data is being received\\n            // PS: NOT to be used in real examples\\n            delay(300),\\n\\n            // transform backend API response (IServersApiResponse)\\n            // to our frontend items collection (IServersCollection)\\n            map(([mainResponse, statusResponse, locationResponse]) => ({\\n                items: mainResponse.items?.map(item => ({\\n                    name: item.name,\\n                    location: item.location,\\n                    status: item.status,\\n                })) || [],\\n                count: mainResponse.count,\\n                status: statusResponse.items?.reduce(flatCount, {}),\\n                location: locationResponse.items?.reduce(flatCount, {}),\\n            })),\\n\\n            // error handle in case of any error\\n            catchError(e => {\\n                this.logger.error(e);\\n                return of({\\n                    items: [],\\n                    count: 0,\\n                });\\n            })\\n        );\\n    }\\n}\\n\";","// number of results to be displayed in the list\nexport const RESULTS_PER_PAGE = 20;\n\n","export default \"import { AfterViewInit, Component, ContentChildren, Inject, QueryList } from \\\"@angular/core\\\";\\nimport { DataSourceService, IFilteringParticipants } from \\\"@nova-ui/bits\\\";\\nimport _isEmpty from \\\"lodash/isEmpty\\\";\\n\\nimport { FilterGroupComponent } from \\\"../filter-group.component\\\";\\n\\n@Component({\\n    selector: \\\"app-filter-groups-wrapper\\\",\\n    templateUrl: \\\"filter-groups-wrapper.component.html\\\",\\n    styleUrls: [\\\"filter-groups-wrapper.component.less\\\"],\\n})\\nexport class FilterGroupsWrapperComponent implements AfterViewInit {\\n    @ContentChildren(FilterGroupComponent) filterGroups: QueryList<FilterGroupComponent>;\\n\\n    public i18nHiddenFiltersMapping: { [k: string]: string } = {\\\"=1\\\": $localize `1 hidden filter.`, \\\"other\\\": $localize `# hidden filters.`};\\n\\n    constructor(@Inject(DataSourceService) public dataSourceService: DataSourceService<any>) { }\\n\\n    ngAfterViewInit() {\\n        this.dataSourceService.registerComponent(this.getFilterComponents());\\n        this.filterGroups.changes.subscribe(() => {\\n            this.dataSourceService.registerComponent(this.getFilterComponents());\\n        });\\n    }\\n\\n    public emptyFilterGroupsTitles(): string {\\n        return this.filterGroups\\n            .filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions))\\n            .map(filterGroup => filterGroup.filterGroupItem.title)\\n            .join(\\\", \\\");\\n    }\\n\\n    public emptyFilterGroupsExist(): boolean {\\n        return this.emptyFilterGroupsCount() > 0;\\n    }\\n\\n    public emptyFilterGroupsCount(): number {\\n        return this.filterGroups.filter(filterGroup => _isEmpty(filterGroup.filterGroupItem.allFilterOptions)).length;\\n    }\\n\\n    private getFilterComponents(): IFilteringParticipants {\\n        return this.filterGroups.reduce((obj: IFilteringParticipants, item: FilterGroupComponent) => {\\n            obj[item.filterGroupItem.id] = {componentInstance: item};\\n            return obj;\\n        }, {});\\n    }\\n}\\n\";","import { ReactNativeFile } from './ReactNativeFile.mjs'\nexport var isExtractableFile = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  )\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n\\n.filter-panel__heading {\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    &-label {\\n        text-transform: uppercase;\\n        font-weight: @nui-font-weight-semibold;\\n    }\\n}\\n\\n.nui-chips-overflowed__counter { margin-left: 3px; display: inline-flex; }\\n\";","export default \"<div class=\\\"nui-filter-groups-wrapper\\\">\\n    <ng-content></ng-content>\\n    <div *ngIf=\\\"emptyFilterGroupsExist()\\\"\\n         class=\\\"nui-filter-groups-wrapper__hidden-filters d-flex align-items-center\\\">\\n        <nui-popover [template]=\\\"hiddenFiltersPopover\\\">\\n            {{emptyFilterGroupsCount() | i18nPlural: i18nHiddenFiltersMapping}}\\n        </nui-popover>\\n    </div>\\n</div>\\n\\n<ng-template #hiddenFiltersPopover>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hint\\\" i18n>\\n        Following filter properties are turned on, but there are no existing values for them in the system.\\n    </span>\\n    <nui-divider size=\\\"small\\\"></nui-divider>\\n    <span class=\\\"nui-filter-groups-wrapper__popover-hidden-filters\\\">{{emptyFilterGroupsTitles()}}</span>\\n</ng-template>\\n\";","export default \"<div *ngIf=\\\"hasFilterOptions()\\\"\\n     class=\\\"filter-group\\\">\\n    <nui-expander [open]=\\\"filterGroupItem?.expanded\\\"\\n                  (openChange)=\\\"onOpenChanged($event)\\\">\\n        <div nuiExpanderHeader>\\n            <ng-template #defaultExpander>\\n                <span class=\\\"filter-group__header\\\">{{filterGroupItem.title}}</span>\\n            </ng-template>\\n            <ng-container *ngTemplateOutlet=\\\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\\\"></ng-container>\\n        </div>\\n        <nui-checkbox-group [values]=\\\"filterGroupItem.selectedFilterValues\\\"\\n                            (valuesChange)=\\\"onValueChanged($event)\\\">\\n            <nui-checkbox *ngFor=\\\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\\\"\\n                          class=\\\"nui-checkbox--justified\\\"\\n                          [value]=\\\"filterOption.value\\\"\\n                          [checked]=\\\"isChecked(filterOption.value)\\\">\\n                <ng-template #defaultCheckboxes>\\n                    <div class=\\\"d-flex justify-content-between filter-group__checkbox\\\">\\n                        <span class=\\\"d-inline-block filter-group__checkbox-value\\\">{{filterOption.displayValue}}</span>\\n                        <span class=\\\"d-inline-block filter-group__checkbox-count\\\">{{filterOption.count}}</span>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\\\"></ng-container>\\n            </nui-checkbox>\\n        </nui-checkbox-group>\\n        <a class=\\\"filter-group__show-more-link\\\"\\n           *ngIf=\\\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\\\"\\n           (click)=\\\"showFilterDialog()\\\">\\n            Show all ({{filterGroupItem.allFilterOptions.length}})\\n        </a>\\n    </nui-expander>\\n</div>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"nui-framework-spaces\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.filter-group {\\n    &__header {\\n        .setCssVariable(color, nui-color-text-default);\\n        font-weight: bold;\\n        line-height: @nui-line-height-default;\\n        text-overflow: ellipsis;\\n    }\\n\\n    &__show-more-link {\\n        cursor: pointer;\\n        padding: @nui-space-xs + @nui-space-xxs;\\n    }\\n\\n    &__checkbox {\\n        &-value {\\n            flex: 0 1 auto;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        }\\n\\n        &-count {\\n            flex: 0 0 auto;\\n            margin-left: @nui-space-xs;\\n            text-align: right;\\n        }\\n    }\\n}\\n\";","var map = {\n\t\"./filter-group/basic-filter-group/basic-filter-group.component.html\": \"X0l0\",\n\t\"./filter-group/basic-filter-group/basic-filter-group.component.less\": \"wdiV\",\n\t\"./filter-group/basic-filter-group/basic-filter-group.component.ts\": \"8/6O\",\n\t\"./filter-group/basic-filter-group/basic-filter-group.example.component.html\": \"g4Kh\",\n\t\"./filter-group/basic-filter-group/basic-filter-group.example.component.ts\": \"0azc\",\n\t\"./filter-group/basic-filter-group/basic-filter-group.module.ts\": \"5+AM\",\n\t\"./filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"T6oI\",\n\t\"./filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"ADIE\",\n\t\"./filter-group/basic-filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"/KhJ\",\n\t\"./filter-group/basic-filter-group/filter-group.service.ts\": \"j9rn\",\n\t\"./filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"buyP\",\n\t\"./filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"ozY/\",\n\t\"./filter-group/basic-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"5QOY\",\n\t\"./filter-group/basic-filter-group/item-picker/item-picker.component.html\": \"DTWi\",\n\t\"./filter-group/basic-filter-group/item-picker/item-picker.component.ts\": \"NLhU\",\n\t\"./filter-group/basic-filter-group/item-picker/item-picker.module.ts\": \"HR1H\",\n\t\"./filter-group/basic-filter-group/public-api.ts\": \"mRB6\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.html\": \"vQHS\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.less\": \"S0g3\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.component.ts\": \"QF9Z\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.html\": \"2M/d\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.example.component.ts\": \"i3m0\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source-filter-group.module.ts\": \"KMBL\",\n\t\"./filter-group/custom-data-source-filter-group/custom-data-source.service.ts\": \"Oobn\",\n\t\"./filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"Nh4E\",\n\t\"./filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"zBhg\",\n\t\"./filter-group/custom-data-source-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"KigS\",\n\t\"./filter-group/custom-data-source-filter-group/public-api.ts\": \"BrYz\",\n\t\"./filter-group/custom-template-filter-group/custom-template-filter-group.component.html\": \"cDP2\",\n\t\"./filter-group/custom-template-filter-group/custom-template-filter-group.component.less\": \"HJm1\",\n\t\"./filter-group/custom-template-filter-group/custom-template-filter-group.component.ts\": \"uA9b\",\n\t\"./filter-group/custom-template-filter-group/custom-template-filter-group.example.component.html\": \"UONi\",\n\t\"./filter-group/custom-template-filter-group/custom-template-filter-group.example.component.ts\": \"TqYB\",\n\t\"./filter-group/custom-template-filter-group/custom-template-filter-group.module.ts\": \"ib9H\",\n\t\"./filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"yhXC\",\n\t\"./filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"1Ava\",\n\t\"./filter-group/custom-template-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"g9v7\",\n\t\"./filter-group/custom-template-filter-group/public-api.ts\": \"oXTf\",\n\t\"./filter-group/dialog-filter-group/dialog-filter-group.component.html\": \"2O3u\",\n\t\"./filter-group/dialog-filter-group/dialog-filter-group.component.less\": \"FOe6\",\n\t\"./filter-group/dialog-filter-group/dialog-filter-group.component.ts\": \"OZDa\",\n\t\"./filter-group/dialog-filter-group/dialog-filter-group.example.component.html\": \"v+Rf\",\n\t\"./filter-group/dialog-filter-group/dialog-filter-group.example.component.ts\": \"XQnw\",\n\t\"./filter-group/dialog-filter-group/dialog-filter-group.module.ts\": \"NdzR\",\n\t\"./filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"3UJP\",\n\t\"./filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"7HXv\",\n\t\"./filter-group/dialog-filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"zcuq\",\n\t\"./filter-group/dialog-filter-group/filter-group.service.ts\": \"igCT\",\n\t\"./filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"Ens1\",\n\t\"./filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"jmKU\",\n\t\"./filter-group/dialog-filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"+L+9\",\n\t\"./filter-group/dialog-filter-group/item-picker/item-picker.component.html\": \"9Y16\",\n\t\"./filter-group/dialog-filter-group/item-picker/item-picker.component.less\": \"EjuN\",\n\t\"./filter-group/dialog-filter-group/item-picker/item-picker.component.ts\": \"zlJP\",\n\t\"./filter-group/dialog-filter-group/item-picker/item-picker.module.ts\": \"Dggl\",\n\t\"./filter-group/dialog-filter-group/public-api.ts\": \"i4CD\",\n\t\"./filter-group/fake-http.service.ts\": \"KPTH\",\n\t\"./filter-group/filter-group-schematic.example.component.html\": \"NCJ4\",\n\t\"./filter-group/filter-group-schematic.example.component.ts\": \"Dwpg\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"mL3K\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"KG87\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"PtPt\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.html\": \"PU5b\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.less\": \"mxfK\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.component.ts\": \"q0ho\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.module.ts\": \"S6WH\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-group.service.ts\": \"7T+d\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"PIKP\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"bcjz\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"BWiB\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.html\": \"Wkhv\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.component.ts\": \"1rHs\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/item-picker/item-picker.module.ts\": \"8eR6\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filter-group/public-api.ts\": \"vVke\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data-source.service.ts\": \"irBY\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination-data.ts\": \"zkDx\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.html\": \"j9gw\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.less\": \"gAd6\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.component.ts\": \"OsHu\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list-with-pagination.module.ts\": \"Av/c\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.html\": \"cP6f\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.less\": \"SIpX\",\n\t\"./filtered-view/filtered-view-list-with-pagination/filtered-view-list/filtered-view-list.component.ts\": \"0+CU\",\n\t\"./filtered-view/filtered-view-list-with-pagination/types.ts\": \"zP37\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"otSX\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"473j\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"2kk/\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.html\": \"w4rn\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.less\": \"PGXC\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.component.ts\": \"FVrs\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.module.ts\": \"pMok\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-group.service.ts\": \"zRqg\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"djRx\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"FYF4\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"HpIB\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.html\": \"kve3\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts\": \"NkGi\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts\": \"xRUv\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filter-group/public-api.ts\": \"XLzI\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data-source.service.ts\": \"ZIY/\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll-data.ts\": \"C7U/\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.html\": \"hjcB\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.less\": \"yh+Q\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.component.ts\": \"HKeU\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list-with-virtual-scroll.module.ts\": \"YJSa\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.html\": \"soo4\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.less\": \"exIU\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/filtered-view-list/filtered-view-list.component.ts\": \"OqYa\",\n\t\"./filtered-view/filtered-view-list-with-virtual-scroll/types.ts\": \"3qka\",\n\t\"./filtered-view/filtered-view-schematic.example.component.html\": \"V2/x\",\n\t\"./filtered-view/filtered-view-schematic.example.component.ts\": \"Lwun\",\n\t\"./filtered-view/filtered-view-schematics.outlet.component.ts\": \"KRWP\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"nri8\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"sJZ2\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"IZ9a\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.html\": \"tu0+\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.less\": \"uq+Y\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.component.ts\": \"Ezox\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.module.ts\": \"GTha\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-group.service.ts\": \"ERG6\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"RZQC\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"b0Q9\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"1fpz\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.html\": \"eQ0v\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.component.ts\": \"zS0q\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/item-picker/item-picker.module.ts\": \"jfPH\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filter-group/public-api.ts\": \"SoT2\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data-source.service.ts\": \"cvH1\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll-data.ts\": \"acMz\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.html\": \"8N9M\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.less\": \"7fOe\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.component.ts\": \"zCiO\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table-with-custom-virtual-scroll.module.ts\": \"O9Y6\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.html\": \"kIGp\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.less\": \"kCL4\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/filtered-view-table.component.ts\": \"bdBF\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/filtered-view-table/virtual-scroll-custom-strategy.service.ts\": \"4NOv\",\n\t\"./filtered-view/filtered-view-table-with-custom-virtual-scroll/types.ts\": \"DF8M\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"RZm6\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"DrHA\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"8/K9\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.html\": \"ykb7\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.less\": \"2lfX\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.component.ts\": \"l7gK\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.module.ts\": \"l6vk\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-group.service.ts\": \"LHwW\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"RQpb\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"4SkL\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"3/AD\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.html\": \"rb4H\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.component.ts\": \"iQ8p\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/item-picker/item-picker.module.ts\": \"Pl95\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filter-group/public-api.ts\": \"As7/\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data-source.service.ts\": \"0iIy\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination-data.ts\": \"X3rT\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.html\": \"PfuM\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.less\": \"OWDV\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.component.ts\": \"z+Kv\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table-with-pagination.module.ts\": \"Z39/\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.html\": \"qanL\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.less\": \"nsrh\",\n\t\"./filtered-view/filtered-view-table-with-pagination/filtered-view-table/filtered-view-table.component.ts\": \"FEAd\",\n\t\"./filtered-view/filtered-view-table-with-pagination/types.ts\": \"+j7+\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"MYOS\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"V07l\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"pXq3\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.html\": \"SNq6\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.less\": \"12Yu\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.component.ts\": \"DWww\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.module.ts\": \"TFFH\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-group.service.ts\": \"II1i\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"8prE\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"2VDa\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"BBnK\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.html\": \"g9HC\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.component.ts\": \"FCHc\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/item-picker/item-picker.module.ts\": \"kxgw\",\n\t\"./filtered-view/filtered-view-table-with-selection/filter-group/public-api.ts\": \"tNo1\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data-source.service.ts\": \"yT6W\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection-data.ts\": \"HV/u\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.html\": \"2U87\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.less\": \"H3Ye\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.component.ts\": \"5BdP\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table-with-selection.module.ts\": \"NyWZ\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.html\": \"uZ49\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.less\": \"TlDy\",\n\t\"./filtered-view/filtered-view-table-with-selection/filtered-view-table/filtered-view-table.component.ts\": \"l4MR\",\n\t\"./filtered-view/filtered-view-table-with-selection/types.ts\": \"ITU4\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"x4w9\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"SSKT\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"+Ytf\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.html\": \"kmwT\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.less\": \"mmHw\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.component.ts\": \"/u/d\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.module.ts\": \"eWtL\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-group.service.ts\": \"GZTy\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"lFQr\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"Z4or\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"RCTY\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.html\": \"sV67\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.component.ts\": \"e1GV\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/item-picker/item-picker.module.ts\": \"hKU9\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filter-group/public-api.ts\": \"dMV9\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data-source.service.ts\": \"9MxI\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection-data.ts\": \"msCY\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.html\": \"zpus\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.less\": \"lvjG\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.component.ts\": \"slXr\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table-with-virtual-scroll-selection.module.ts\": \"xKiC\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.html\": \"5t+Y\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.less\": \"P2af\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/filtered-view-table/filtered-view-table.component.ts\": \"nLS7\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll-selection/types.ts\": \"0Uky\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"gDjU\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"Eon/\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"7W9U\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.html\": \"rI21\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.less\": \"vAvl\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.component.ts\": \"d8qB\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.module.ts\": \"Xk4X\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-group.service.ts\": \"v62h\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"BI6u\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"pvio\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"yYN1\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.html\": \"oAXg\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.component.ts\": \"JHmn\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/item-picker/item-picker.module.ts\": \"VZ0z\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filter-group/public-api.ts\": \"8Pxf\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data-source.service.ts\": \"5Pcf\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll-data.ts\": \"FgVk\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.html\": \"6aFP\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.less\": \"nOMo\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.component.ts\": \"aXQx\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table-with-virtual-scroll.module.ts\": \"LPfo\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.html\": \"MzAV\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.less\": \"a2IS\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/filtered-view-table/filtered-view-table.component.ts\": \"UVp3\",\n\t\"./filtered-view/filtered-view-table-with-virtual-scroll/types.ts\": \"rdBy\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"j5OO\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"ZBsu\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"eBBh\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group.component.html\": \"oDxq\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group.component.less\": \"5I3T\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group.component.ts\": \"i5OQ\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group.module.ts\": \"jCwR\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-group.service.ts\": \"PkTa\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"Lh0y\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"uKVL\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"GdJL\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.html\": \"j0d+\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.component.ts\": \"6yfM\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/item-picker/item-picker.module.ts\": \"Zeh7\",\n\t\"./filtered-view/filtered-view-with-list/filter-group/public-api.ts\": \"vvdH\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.html\": \"ElYV\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.less\": \"YO/f\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-list/filtered-view-list.component.ts\": \"DcG4\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-with-list-data.ts\": \"Va+p\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-with-list.component.html\": \"agt2\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-with-list.component.less\": \"vxvc\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-with-list.component.ts\": \"PJYf\",\n\t\"./filtered-view/filtered-view-with-list/filtered-view-with-list.module.ts\": \"4lo+\",\n\t\"./filtered-view/filtered-view-with-list/types.ts\": \"543R\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.html\": \"OJJL\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.less\": \"NUY8\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group-dialog/filter-group-dialog.component.ts\": \"Cxwk\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group.component.html\": \"wKjA\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group.component.less\": \"yqz1\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group.component.ts\": \"vpwN\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group.module.ts\": \"IuGp\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-group.service.ts\": \"lFHo\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"coaY\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"J5Hj\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"Ov8e\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.html\": \"1sv2\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.component.ts\": \"so2I\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/item-picker/item-picker.module.ts\": \"YoT9\",\n\t\"./filtered-view/filtered-view-with-table/filter-group/public-api.ts\": \"Y09W\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.html\": \"0etP\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.less\": \"GDq/\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-table/filtered-view-table.component.ts\": \"HHoa\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-with-table-data.ts\": \"R2PE\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-with-table.component.html\": \"GsTL\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-with-table.component.less\": \"19wH\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-with-table.component.ts\": \"bvle\",\n\t\"./filtered-view/filtered-view-with-table/filtered-view-with-table.module.ts\": \"w+wT\",\n\t\"./filtered-view/filtered-view-with-table/types.ts\": \"zw60\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-group.component.html\": \"HCec\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-group.component.less\": \"jphW\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-group.component.ts\": \"OT9Q\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-group.module.ts\": \"51ko\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-group.service.ts\": \"HnJX\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.html\": \"r7O0\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.less\": \"ak2H\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/filter-groups-wrapper/filter-groups-wrapper.component.ts\": \"8BGl\",\n\t\"./filtered-view/filtered-view-with-tree/filter-group/public-api.ts\": \"d/nM\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.html\": \"tBaI\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.less\": \"bCVL\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-tree/filtered-view-tree.component.ts\": \"2LcS\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree-data-source.service.ts\": \"76Rr\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.html\": \"ZzJ1\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.less\": \"YXcw\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.component.ts\": \"I5/x\",\n\t\"./filtered-view/filtered-view-with-tree/filtered-view-with-tree.module.ts\": \"DV1X\",\n\t\"./filtered-view/filtered-view-with-tree/types.ts\": \"H8bv\",\n\t\"./list/basic-list/basic-list-data.ts\": \"Jgpg\",\n\t\"./list/basic-list/basic-list.component.html\": \"hHq+\",\n\t\"./list/basic-list/basic-list.component.less\": \"rVGN\",\n\t\"./list/basic-list/basic-list.component.ts\": \"+GeP\",\n\t\"./list/basic-list/types.ts\": \"GO7z\",\n\t\"./list/list-schematic.example.component.html\": \"oPIL\",\n\t\"./list/list-schematic.example.component.ts\": \"RonO\",\n\t\"./list/list-schematics-outlet.component.ts\": \"HAHR\",\n\t\"./list/paginated-list/paginated-list-data-source.service.ts\": \"HbjM\",\n\t\"./list/paginated-list/paginated-list-data.ts\": \"2N4C\",\n\t\"./list/paginated-list/paginated-list.component.html\": \"GxBs\",\n\t\"./list/paginated-list/paginated-list.component.less\": \"lvdm\",\n\t\"./list/paginated-list/paginated-list.component.ts\": \"gddp\",\n\t\"./list/paginated-list/types.ts\": \"sCDG\",\n\t\"./list/search-list/search-list-data-source.service.ts\": \"Ewjh\",\n\t\"./list/search-list/search-list-data.ts\": \"IzhZ\",\n\t\"./list/search-list/search-list.component.html\": \"au5X\",\n\t\"./list/search-list/search-list.component.less\": \"tbaz\",\n\t\"./list/search-list/search-list.component.ts\": \"7bYG\",\n\t\"./list/search-list/types.ts\": \"sbIU\",\n\t\"./list/selection-list/selection-list-data.ts\": \"CUXy\",\n\t\"./list/selection-list/selection-list.component.html\": \"+dU9\",\n\t\"./list/selection-list/selection-list.component.less\": \"mYJz\",\n\t\"./list/selection-list/selection-list.component.ts\": \"np81\",\n\t\"./list/selection-list/types.ts\": \"/UKq\",\n\t\"./list/virtual-scroll-list/types.ts\": \"zOzp\",\n\t\"./list/virtual-scroll-list/virtual-scroll-list-data-source.service.ts\": \"0gW9\",\n\t\"./list/virtual-scroll-list/virtual-scroll-list-data.ts\": \"3jwd\",\n\t\"./list/virtual-scroll-list/virtual-scroll-list.component.html\": \"3aYd\",\n\t\"./list/virtual-scroll-list/virtual-scroll-list.component.less\": \"hATP\",\n\t\"./list/virtual-scroll-list/virtual-scroll-list.component.ts\": \"HzMg\",\n\t\"./schematic.module.ts\": \"YPYg\",\n\t\"./schematics-docs.component.html\": \"Kt0J\",\n\t\"./schematics-docs.component.ts\": \"nm3i\",\n\t\"./table/basic-table/basic-table-data.ts\": \"suyH\",\n\t\"./table/basic-table/basic-table.component.html\": \"0HAO\",\n\t\"./table/basic-table/basic-table.component.less\": \"8EIi\",\n\t\"./table/basic-table/basic-table.component.ts\": \"3G//\",\n\t\"./table/basic-table/types.ts\": \"Um2R\",\n\t\"./table/table-schematic-example.component.html\": \"aXVI\",\n\t\"./table/table-schematic-example.component.ts\": \"bAya\",\n\t\"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data-source.service.ts\": \"M13G\",\n\t\"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll-data.ts\": \"8eim\",\n\t\"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.html\": \"JQAs\",\n\t\"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.less\": \"8B4u\",\n\t\"./table/table-with-custom-virtual-scroll/table-with-custom-virtual-scroll.component.ts\": \"KHGX\",\n\t\"./table/table-with-custom-virtual-scroll/types.ts\": \"lK9O\",\n\t\"./table/table-with-custom-virtual-scroll/virtual-scroll-custom-strategy.service.ts\": \"1Dsn\",\n\t\"./table/table-with-pagination/table-with-pagination-data-source.service.ts\": \"rlLB\",\n\t\"./table/table-with-pagination/table-with-pagination-data.ts\": \"1NyV\",\n\t\"./table/table-with-pagination/table-with-pagination.component.html\": \"SJjF\",\n\t\"./table/table-with-pagination/table-with-pagination.component.less\": \"+AXO\",\n\t\"./table/table-with-pagination/table-with-pagination.component.ts\": \"4ubm\",\n\t\"./table/table-with-pagination/types.ts\": \"cl0k\",\n\t\"./table/table-with-search/table-with-search-data-source.service.ts\": \"MaE6\",\n\t\"./table/table-with-search/table-with-search-data.ts\": \"BOGw\",\n\t\"./table/table-with-search/table-with-search.component.html\": \"1D5l\",\n\t\"./table/table-with-search/table-with-search.component.less\": \"2inx\",\n\t\"./table/table-with-search/table-with-search.component.ts\": \"cNI8\",\n\t\"./table/table-with-search/types.ts\": \"2drx\",\n\t\"./table/table-with-selection/table-with-selection-data-source.service.ts\": \"hgJ+\",\n\t\"./table/table-with-selection/table-with-selection-data.ts\": \"rKH8\",\n\t\"./table/table-with-selection/table-with-selection.component.html\": \"gmyK\",\n\t\"./table/table-with-selection/table-with-selection.component.less\": \"p25t\",\n\t\"./table/table-with-selection/table-with-selection.component.ts\": \"CgX5\",\n\t\"./table/table-with-selection/types.ts\": \"Wiit\",\n\t\"./table/table-with-sort/table-with-sort-data-source.service.ts\": \"5SMQ\",\n\t\"./table/table-with-sort/table-with-sort-data.ts\": \"CVtb\",\n\t\"./table/table-with-sort/table-with-sort.component.html\": \"9bdc\",\n\t\"./table/table-with-sort/table-with-sort.component.less\": \"M2rj\",\n\t\"./table/table-with-sort/table-with-sort.component.ts\": \"Fg0S\",\n\t\"./table/table-with-sort/types.ts\": \"XnyX\",\n\t\"./table/table-with-virtual-scroll/table-with-virtual-scroll-data-source.service.ts\": \"t7e/\",\n\t\"./table/table-with-virtual-scroll/table-with-virtual-scroll-data.ts\": \"59tm\",\n\t\"./table/table-with-virtual-scroll/table-with-virtual-scroll.component.html\": \"ioa+\",\n\t\"./table/table-with-virtual-scroll/table-with-virtual-scroll.component.less\": \"jBZ9\",\n\t\"./table/table-with-virtual-scroll/table-with-virtual-scroll.component.ts\": \"9Jq5\",\n\t\"./table/table-with-virtual-scroll/types.ts\": \"VY9B\",\n\t\"./utils/recursive-object-view.component.ts\": \"FaA9\",\n\t\"./utils/schematic-docs-cli-option/schematic-docs-cli-option.component.html\": \"jPd8\",\n\t\"./utils/schematic-docs-cli-option/schematic-docs-cli-option.component.ts\": \"5Bfx\",\n\t\"./utils/schematic-docs-command/schematic-docs-command.component.html\": \"5oV4\",\n\t\"./utils/schematic-docs-command/schematic-docs-command.component.ts\": \"2Uiw\",\n\t\"./utils/schematic-docs-example/schematic-docs-example.component.html\": \"bRYX\",\n\t\"./utils/schematic-docs-example/schematic-docs-example.component.less\": \"WjSe\",\n\t\"./utils/schematic-docs-example/schematic-docs-example.component.ts\": \"2hyj\",\n\t\"./utils/schematic-docs-page/schematic-docs-page.component.html\": \"18k2\",\n\t\"./utils/schematic-docs-page/schematic-docs-page.component.less\": \"cTtc\",\n\t\"./utils/schematic-docs-page/schematic-docs-page.component.ts\": \"C+hn\",\n\t\"./utils/schematic-json.component.ts\": \"D9dE\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"ytB9\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewTableWithPaginationDataSource,\\n} from \\\"./filtered-view-table-with-pagination-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-pagination\\\",\\n    styleUrls: [\\\"./filtered-view-table-with-pagination.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-table-with-pagination.component.html\\\",\\n    providers: [\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewTableWithPaginationDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewTableWithPaginationComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithPaginationDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\n// eslint-disable-next-line no-redeclare\nexport default function isPromise(value) {\n  return typeof (value === null || value === void 0 ? void 0 : value.then) === 'function';\n}\n","import { Kind } from \"../language/kinds.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\n\nexport function separateOperations(documentAST) {\n  var operations = [];\n  var depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definitionNode = _documentAST$definiti2[_i2];\n\n    switch (definitionNode.kind) {\n      case Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(definitionNode.selectionSet);\n        break;\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n\n  var separatedDocumentASTs = Object.create(null);\n\n  var _loop = function _loop(_i4) {\n    var operation = operations[_i4];\n    var dependencies = new Set();\n\n    for (var _i6 = 0, _collectDependencies2 = collectDependencies(operation.selectionSet); _i6 < _collectDependencies2.length; _i6++) {\n      var fragmentName = _collectDependencies2[_i6];\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n\n    var operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(function (node) {\n        return node === operation || node.kind === Kind.FRAGMENT_DEFINITION && dependencies.has(node.name.value);\n      })\n    };\n  };\n\n  for (var _i4 = 0; _i4 < operations.length; _i4++) {\n    _loop(_i4);\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    var immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (var _i8 = 0; _i8 < immediateDeps.length; _i8++) {\n        var toName = immediateDeps[_i8];\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  var dependencies = [];\n  visit(selectionSet, {\n    FragmentSpread: function FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    }\n  });\n  return dependencies;\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@hidden-filters-block-height: 30px;\\n\\n.nui-filter-groups-wrapper {\\n    &__hidden-filters {\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n        background: @nui-color-bg-light-hover;\\n        height: @hidden-filters-block-height;\\n        padding-left: @nui-space-sm;\\n        color: @nui-color-text-secondary;\\n        margin-top: @nui-space-sm;\\n    }\\n    &__popover-hidden-filters {\\n        color: @nui-color-text-secondary;\\n        line-height: @nui-line-height-small;\\n        font-size: @nui-font-size-small;\\n    }\\n}\\n\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    OnDestroy,\\n    QueryList,\\n    ViewChild,\\n    ViewChildren,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    IChipsGroup,\\n    IChipsItem,\\n    IChipsItemsSource,\\n    IFilteringOutputs,\\n    INovaFilteringOutputs,\\n    PopoverComponent,\\n    PopoverOverlayPosition,\\n    VirtualViewportManager,\\n} from \\\"@nova-ui/bits\\\";\\nimport _pull from \\\"lodash/pull\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\n\\nimport { FilterGroupComponent } from \\\"./filter-group/filter-group.component\\\";\\nimport { IFilterGroupItem } from \\\"./filter-group/public-api\\\";\\nimport {\\n    FilteredViewTableWithCustomVirtualScrollDataSource,\\n} from \\\"./filtered-view-table-with-custom-virtual-scroll-data-source.service\\\";\\nimport {\\n    IFilterable,\\n    IServer,\\n    ServerStatus,\\n} from \\\"./types\\\";\\n\\n@Component({\\n    selector: \\\"app-filtered-view-table-with-custom-virtual-scroll\\\",\\n    styleUrls: [\\\"./filtered-view-table-with-custom-virtual-scroll.component.less\\\"],\\n    templateUrl: \\\"./filtered-view-table-with-custom-virtual-scroll.component.html\\\",\\n    providers: [\\n        VirtualViewportManager,\\n        {\\n            provide: DataSourceService,\\n            useClass: FilteredViewTableWithCustomVirtualScrollDataSource,\\n        },\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilteredViewTableWithCustomVirtualScrollComponent implements AfterViewInit, OnDestroy {\\n    public filterGroupItems: IFilterGroupItem[] = [\\n        {\\n            id: \\\"status\\\",\\n            title: \\\"Status\\\",\\n            expanded: true,\\n            allFilterOptions: [\\n                {\\n                    value: ServerStatus.down,\\n                    displayValue: \\\"Down\\\",\\n                },\\n                {\\n                    value: ServerStatus.active,\\n                    displayValue: \\\"Active\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        }, {\\n            id: \\\"location\\\",\\n            title: \\\"Location\\\",\\n            allFilterOptions: [\\n                {\\n                    value: \\\"Austin\\\",\\n                    displayValue: \\\"Austin\\\",\\n                },\\n                {\\n                    value: \\\"Brno\\\",\\n                    displayValue: \\\"Brno\\\",\\n                },\\n                {\\n                    value: \\\"Bucharest\\\",\\n                    displayValue: \\\"Bucharest\\\",\\n                },\\n                {\\n                    value: \\\"Kyiv\\\",\\n                    displayValue: \\\"Kyiv\\\",\\n                },\\n                {\\n                    value: \\\"London\\\",\\n                    displayValue: \\\"London\\\",\\n                },\\n            ],\\n            selectedFilterValues: [],\\n        },\\n    ];\\n\\n    public chipsDataSource: IChipsItemsSource = {groupedItems: [], flatItems: []};\\n    public overflowCounter: number;\\n    public overflowSource: IChipsItemsSource;\\n    public overflowPopoverPosition: PopoverOverlayPosition[] = [PopoverOverlayPosition.bottomLeft, PopoverOverlayPosition.topLeft];\\n    private outputsSubscription: Subscription;\\n    @ViewChild(PopoverComponent) private popover: PopoverComponent;\\n    @ViewChild(\\\"child\\\") private child: IFilterable;\\n    @ViewChildren(FilterGroupComponent) private filterGroups: QueryList<FilterGroupComponent>;\\n\\n    constructor(\\n        // inject dataSource providers only to share the same instance\\n        // using DI descendants inheritance with child components\\n        @Inject(DataSourceService) private dataSource: FilteredViewTableWithCustomVirtualScrollDataSource<IServer>,\\n        private cd: ChangeDetectorRef\\n    ) {\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.outputsSubscription = this.dataSource.outputsSubject.subscribe((data: INovaFilteringOutputs) => {\\n            this.recalculateCounts(data);\\n            this.cd.detectChanges();\\n        });\\n    }\\n\\n    public async applyFilters() {\\n        await this.child.applyFilters();\\n        this.updateChips();\\n    }\\n\\n    public onChipsOverflow(source: IChipsItemsSource) {\\n        this.overflowSource = source;\\n        const reducer = (accumulator: number, currentValue: IChipsGroup) => accumulator + currentValue.items.length;\\n        this.overflowCounter = (this.overflowSource.flatItems?.length || 0) + (this.overflowSource.groupedItems?.reduce(reducer, 0) || 0);\\n        this.popover?.updatePosition();\\n    }\\n\\n    public async onClear(event: { item: IChipsItem, group?: IChipsGroup }) {\\n        if (event.group) {\\n            _pull(event.group.items || [], event.item);\\n        } else {\\n            _pull(this.chipsDataSource.flatItems || [], event.item);\\n        }\\n        const group = this.filterGroups.find(i => event.group?.id === i.filterGroupItem.id);\\n        group?.deselectFilterItemByValue(event.item.label);\\n    }\\n\\n    public onClearAll(e: MouseEvent) {\\n        this.chipsDataSource.groupedItems = [];\\n        this.popover?.onClick(e);\\n        this.filterGroups.forEach(i => i.deselectAllFilterItems());\\n    }\\n\\n    private updateChips() {\\n        this.chipsDataSource.groupedItems = this.filterGroupItems.map(i => (\\n            {\\n                id: i.id,\\n                label: i.title,\\n                items: i.selectedFilterValues.map(selected => ({label: selected})),\\n            }\\n        ));\\n        this.cd.markForCheck();\\n    }\\n\\n    private recalculateCounts(filterData: IFilteringOutputs) {\\n        this.filterGroupItems.forEach(filterGroupItem => {\\n            filterGroupItem.allFilterOptions.forEach(filterOption => {\\n                const counts = filterData[filterGroupItem.id];\\n                filterOption.count = counts[filterOption.value] ?? 0;\\n            });\\n        });\\n    }\\n\\n    ngOnDestroy() {\\n        this.outputsSubscription.unsubscribe();\\n    }\\n}\\n\";","<div>\n    <div class=\"d-flex flex-row\">\n        <nui-selector class=\"app-selection-list-selector\"\n                      [checkboxStatus]=\"filteringState.selector?.selectorState?.checkboxStatus\"\n                      [items]=\"filteringState.selector?.selectorState?.selectorItems\"\n                      (selectionChange)=\"onSelectorOutput($event)\">\n        </nui-selector>\n        <nui-sorter class=\"app-selection-list-sorter\"\n                    [itemsSource]=\"sorterItems\"\n                    [selectedItem]=\"sortBy\"\n                    [sortDirection]=\"initialSortDirection\"\n                    (sorterAction)=\"onSorterAction($event)\">\n        </nui-sorter>\n        <nui-search class=\"d-flex justify-content-end app-selection-list-search\"\n                    (search)=\"onSearch()\"\n                    (cancel)=\"onCancelSearch()\">\n        </nui-search>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <ng-container *ngIf=\"filteringState.repeat?.itemsSource.length === 0\">\n            <span i18n>No results</span>\n        </ng-container>\n\n        <nui-repeat class=\"app-selection-list-repeat\"\n                    selectionMode=\"multi\"\n                    [itemConfig]=\"itemConfig\"\n                    [repeatItemTemplateRef]=\"listRepeatItemTemplate\"\n                    [selection]=\"filteringState.repeat?.selectedItems\"\n                    [itemsSource]=\"filteringState.repeat?.itemsSource\"\n                    (selectionChange)=\"onRepeatOutput($event)\">\n        </nui-repeat>\n    </div>\n\n    <div class=\"d-flex flex-row\">\n        <nui-paginator class=\"app-selection-list-paginator\"\n                       [(page)]=\"page\"\n                       [pageSize]=\"pageSize\"\n                       [pageSizeSet]=\"[10,20,30,40]\"\n                       [total]=\"filteringState.paginator?.total\"\n                       (pagerAction)=\"applyFilters()\">\n        </nui-paginator>\n    </div>\n</div>\n\n<ng-template #listRepeatItemTemplate let-item=\"item\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngFor=\"let field of item | keyvalue\" class=\"col-sm\">\n                {{field.value}}\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    ViewChild,\n} from \"@angular/core\";\nimport {\n    ClientSideDataSource,\n    DataSourceService,\n    IMenuItem,\n    INovaFilteringOutputs,\n    IRepeatItemConfig,\n    ISorterChanges,\n    ListService,\n    nameof,\n    PaginatorComponent,\n    RepeatComponent,\n    RepeatSelectionMode,\n    SearchComponent,\n    SelectionType,\n    SorterComponent,\n    SorterDirection,\n} from \"@nova-ui/bits\";\nimport {\n    Subject,\n} from \"rxjs\";\nimport {\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport {\n    LOCAL_DATA,\n    RESULTS_PER_PAGE,\n} from \"./selection-list-data\";\nimport {\n    IServer,\n    IServerFilters,\n} from \"./types\";\n\n@Component({\n    selector: \"app-selection-list\",\n    templateUrl: \"./selection-list.component.html\",\n    styleUrls: [\"./selection-list.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: DataSourceService,\n            useClass: ClientSideDataSource,\n        },\n    ],\n})\nexport class SelectionListComponent implements AfterViewInit, OnDestroy {\n    public readonly sorterItems: IMenuItem[] = [\n        {\n            title: $localize`Name`,\n            value: \"name\",\n        },\n        {\n            title: $localize`Status`,\n            value: \"status\",\n        },\n        {\n            title: $localize`Location`,\n            value: \"location\",\n        },\n    ];\n\n    public readonly initialSortDirection = SorterDirection.ascending;\n    public sortBy = this.sorterItems[0].value;\n\n    public filteringState: INovaFilteringOutputs = {};\n\n    // This value is obtained from the server and used to evaluate the total number of pages to display\n    public totalItems: number = 0;\n\n    // pagination\n    public page: number = 1;\n    public pageSize: number = RESULTS_PER_PAGE;\n\n    public itemConfig: IRepeatItemConfig<IServer> = {\n        trackBy: (index, item) => item?.name,\n    };\n\n    @ViewChild(RepeatComponent) repeat: RepeatComponent;\n    @ViewChild(PaginatorComponent) paginator: PaginatorComponent;\n    @ViewChild(SearchComponent) search: SearchComponent;\n    @ViewChild(SorterComponent) sorter: SorterComponent;\n\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(DataSourceService) private dataSource: ClientSideDataSource<IServer>,\n        private changeDetection: ChangeDetectorRef,\n        private listService: ListService\n    ) {\n        this.dataSource.setData(LOCAL_DATA);\n    }\n\n    public async ngAfterViewInit() {\n        this.dataSource.registerComponent({\n            paginator: { componentInstance: this.paginator },\n            search: { componentInstance: this.search },\n            sorter: { componentInstance: this.sorter },\n            repeat: { componentInstance: this.repeat },\n        });\n\n        this.search.focusChange.pipe(\n            tap(async(focused: boolean) => {\n                // we want to perform a new search on blur event\n                // only if the search filter changed\n                if (!focused && this.dataSource.filterChanged(nameof<IServerFilters>(\"search\"))) {\n                    await this.applyFilters();\n                }\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        this.dataSource.outputsSubject.pipe(\n            tap((data: INovaFilteringOutputs) => {\n                this.filteringState = { ...this.filteringState, ...data };\n                this.filteringState = this.listService.updateSelectionState(this.filteringState);\n\n                this.totalItems = data.paginator?.total ?? 0;\n\n                this.changeDetection.detectChanges();\n            }),\n            takeUntil(this.destroy$)\n        ).subscribe();\n\n        // make 1st call to retrieve initial results\n        await this.applyFilters();\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public async onSearch() {\n        await this.applyFilters();\n    }\n\n    public async onCancelSearch() {\n        await this.applyFilters();\n    }\n\n    public async applyFilters() {\n        await this.dataSource.applyFilters();\n    }\n\n    public async onSorterAction(changes: ISorterChanges) {\n        this.sortBy = changes.newValue.sortBy;\n        await this.applyFilters();\n    }\n\n    public onSelectorOutput(selectionType: SelectionType) {\n        this.filteringState = this.listService.applySelector(selectionType, this.filteringState);\n    }\n\n    public onRepeatOutput(selectedItems: IServer[]) {\n        this.filteringState = this.listService.selectItems(selectedItems, RepeatSelectionMode.multi, this.filteringState);\n    }\n}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main server model being received from the backend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n}\\n\";","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've received from the backend API response\\nexport interface IServersApiResponse {\\n    count: number;\\n    items: IServer[];\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","export default \"import { Injectable } from \\\"@angular/core\\\";\\nimport _difference from \\\"lodash/difference\\\";\\nimport _flatten from \\\"lodash/flatten\\\";\\n\\nimport { IFilterGroupItem, IFilterGroupOption } from \\\"./public-api\\\";\\n\\n@Injectable()\\nexport class FilterGroupService {\\n    /**\\n     *\\n     * @param filterGroupItem FilterGroupItem with updated selectedFilterValues\\n     * @returns IFilterGroupItem with updated itemsToDisplay and properly reordered allFilterOptions.\\n     */\\n    public appendHiddenFilters(filterGroupItem: IFilterGroupItem): IFilterGroupItem {\\n        const valuesToAppend: any[] = [];\\n        let numberToDisplay = filterGroupItem.itemsToDisplay ? filterGroupItem.itemsToDisplay : 10;\\n        const displayedCheckboxesValues = filterGroupItem.allFilterOptions\\n            .slice(0, numberToDisplay)\\n            .map(item => item.value);\\n        const checkedCheckboxes = filterGroupItem.selectedFilterValues;\\n        const difference = _difference(checkedCheckboxes, displayedCheckboxesValues);\\n        if (difference.length !== 0) {\\n            difference.forEach(diff => {\\n                valuesToAppend.push(filterGroupItem.allFilterOptions.filter(item => item.value === diff));\\n            });\\n            const flattenedValuesToAppend: IFilterGroupOption[] = _flatten(valuesToAppend);\\n            flattenedValuesToAppend.forEach(item => {\\n                filterGroupItem.allFilterOptions.splice(filterGroupItem.allFilterOptions.indexOf(item), 1);\\n                filterGroupItem.allFilterOptions.splice(numberToDisplay, 0, item);\\n                numberToDisplay += 1;\\n            });\\n            filterGroupItem.itemsToDisplay = numberToDisplay;\\n        }\\n        return {...filterGroupItem};\\n    }\\n\\n}\\n\";","export default \"import {\\n    AfterViewInit,\\n    ChangeDetectionStrategy,\\n    ChangeDetectorRef,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    ClientSideDataSource,\\n    DataSourceService,\\n    ISelection,\\n    RepeatSelectionMode,\\n    SorterDirection\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: ClientSideDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ItemPickerComponent implements OnInit, AfterViewInit {\\n    @Input() itemPickerOptions: IItemPickerOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<ISelection> = new EventEmitter();\\n\\n    public sorter = {\\n        items: [\\\"value\\\"],\\n        direction: SorterDirection.ascending,\\n    };\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n\\n    public selection: ISelection = {\\n        isAllPages: false,\\n        include: [],\\n        exclude: [],\\n    };\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>,\\n                public changeDetection: ChangeDetectorRef) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as ClientSideDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selection = {\\n            isAllPages: false,\\n            include: this.getSelectedOptions(),\\n            exclude: [],\\n        };\\n    }\\n\\n    ngAfterViewInit(): void {\\n        this.changeDetection.markForCheck();\\n\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public applyFilters() {\\n        this.dataSource.applyFilters();\\n    }\\n\\n    public onSelection(selection: ISelection) {\\n        this.selection = selection;\\n        this.selectionChanged.emit(this.selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","export default \"import {\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport { ISelection, NuiActiveDialog, SelectorService } from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\n@Component({\\n    selector: \\\"nui-filter-group-composite-dialog\\\",\\n    templateUrl: \\\"./filter-group-dialog.component.html\\\",\\n    styleUrls: [\\\"./filter-group-dialog.component.less\\\"],\\n})\\n\\nexport class FilterGroupCompositeDialogComponent {\\n    @Input() title: string;\\n    @Input() itemPickerOptions: IFilterGroupOption[] = [];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() dialogClosed: EventEmitter<string[]> = new EventEmitter();\\n\\n    constructor(@Inject(NuiActiveDialog) private activeDialog: NuiActiveDialog, private selectorService: SelectorService) {}\\n\\n    public acceptDialogFilters() {\\n        this.dialogClosed.emit(this.selectedValues);\\n        this.closeDialog();\\n    }\\n\\n    public closeDialog() {\\n        this.activeDialog.close();\\n    }\\n\\n    public onSelectionChanged(selection: IFilterGroupOption[]) {\\n        this.selectedValues = selection.map(item => item.value);\\n    }\\n}\\n\";","export default \"// number of results to be displayed in the list\\nexport const RESULTS_PER_PAGE = 20;\\n\\n\";","export default \"import {\\n    ChangeDetectionStrategy,\\n    Component,\\n    EventEmitter,\\n    Inject,\\n    Input,\\n    OnInit,\\n    Output,\\n} from \\\"@angular/core\\\";\\nimport {\\n    DataSourceService,\\n    LocalFilteringDataSource,\\n    RepeatSelectionMode,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport { IFilterGroupOption } from \\\"../public-api\\\";\\n\\nexport interface IItemPickerOption {\\n    value: string;\\n    displayValue: string;\\n}\\n\\n@Component({\\n    selector: \\\"app-item-picker-composite\\\",\\n    templateUrl: \\\"./item-picker.component.html\\\",\\n    styleUrls: [\\\"./item-picker.component.less\\\"],\\n    providers: [{\\n        provide: DataSourceService,\\n        useClass: LocalFilteringDataSource,\\n    }],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\n\\nexport class ItemPickerCompositeComponent implements OnInit {\\n    @Input() itemPickerOptions: IFilterGroupOption[];\\n    @Input() selectedValues: string[] = [];\\n\\n    @Output() selectionChanged: EventEmitter<IFilterGroupOption[]> = new EventEmitter();\\n\\n    public selectionMode = RepeatSelectionMode.multi;\\n    public selectedOptions: IFilterGroupOption[] = [];\\n\\n\\n    constructor(@Inject(DataSourceService) public dataSource: DataSourceService<IFilterGroupOption>) {\\n    }\\n\\n    ngOnInit() {\\n        (this.dataSource as LocalFilteringDataSource<IFilterGroupOption>).setData(this.itemPickerOptions);\\n        this.selectedOptions = this.getSelectedOptions();\\n    }\\n\\n    public onSelection(selection: IFilterGroupOption[]) {\\n        this.selectedOptions = selection;\\n        this.selectionChanged.emit(selection);\\n    }\\n\\n    public getSelectedOptions(): IFilterGroupOption[] {\\n        return this.itemPickerOptions.filter(item => this.selectedValues.indexOf(item.value) !== -1);\\n    }\\n}\\n\";","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChildren,\n} from \"@angular/core\";\nimport { CheckboxComponent, DialogService, IFilter, IFilterPub } from \"@nova-ui/bits\";\nimport _orderBy from \"lodash/orderBy\";\nimport { Subject } from \"rxjs\";\n\nimport { IFilterGroupItem, IFilterGroupMultiFilterMetadata, IFilterGroupOption } from \"./public-api\";\n\n@Component({\n    selector: \"app-filter-group\",\n    templateUrl: \"./filter-group.component.html\",\n    styleUrls: [\"./filter-group.component.less\"],\n})\nexport class FilterGroupComponent implements IFilterPub, OnInit, OnDestroy {\n    // mark this filter to be monitored by our datasource for any changes in order reset other filters(eg: pagination)\n    // before any new search is performed\n    public detectFilterChanges = true;\n\n    @Input() filterGroupItem: IFilterGroupItem;\n    @Input() checkboxTemplateRef: TemplateRef<string>;\n    @Input() expanderTemplateRef: TemplateRef<string>;\n\n    @Output() filterChanged: EventEmitter<IFilterGroupItem> = new EventEmitter();\n    @Output() showAllButtonClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChildren(CheckboxComponent) filterItems: QueryList<CheckboxComponent>;\n\n    public onDestroy$ = new Subject<void>();\n\n    constructor(@Inject(DialogService) private dialogService: DialogService) {}\n\n    ngOnInit() {\n        this.filterGroupItem.allFilterOptions = _orderBy(this.filterGroupItem.allFilterOptions, \"value\", \"asc\");\n    }\n\n    public isChecked(value: string): boolean {\n        return this.filterGroupItem.selectedFilterValues.indexOf(value) > -1;\n    }\n\n    public onValueChanged(selectedValues: string[]): void {\n        this.filterGroupItem.selectedFilterValues = selectedValues;\n        this.filterChanged.emit(this.filterGroupItem);\n    }\n\n    public onOpenChanged(isExpanded: boolean): void {\n        this.filterGroupItem.expanded = isExpanded;\n    }\n\n    public getFilters(): IFilter<string[], IFilterGroupMultiFilterMetadata> {\n        return {\n            type: \"string[]\",\n            value: this.filterGroupItem.selectedFilterValues,\n            metadata: {\n                allCategories: this.getAllFilterOptionsList(this.filterGroupItem.allFilterOptions),\n                expanded: Boolean(this.filterGroupItem.expanded),\n            },\n        };\n    }\n\n    public showFilterDialog() {\n        this.showAllButtonClicked.emit();\n    }\n\n    public getDisplayedFiltersCount() {\n        return this.filterGroupItem.itemsToDisplay ? this.filterGroupItem.itemsToDisplay : 10;\n    }\n\n    public hasFilterOptions(): boolean {\n        return this.filterGroupItem.allFilterOptions.length > 0;\n    }\n\n    public deselectFilterItemByValue(value: any) {\n        const checkbox = this.filterItems.find(i => i.value === value);\n        if (checkbox) {\n            this.deselectFilterItem(checkbox);\n        }\n    }\n\n    public deselectAllFilterItems() {\n        this.filterItems.filter(i => i.checked).forEach(i => this.deselectFilterItem(i));\n    }\n\n    private deselectFilterItem(checkbox: CheckboxComponent) {\n        checkbox.inputViewContainer.element.nativeElement.checked = false;\n        checkbox.inputViewContainer.element.nativeElement.dispatchEvent(new Event(\"change\"));\n    }\n\n    private getAllFilterOptionsList(filterGroupItems: IFilterGroupOption[]): string[] {\n        return filterGroupItems.map((item) => item.value);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n}\n","<div *ngIf=\"hasFilterOptions()\"\n     class=\"filter-group\">\n    <nui-expander [open]=\"filterGroupItem?.expanded\"\n                  (openChange)=\"onOpenChanged($event)\">\n        <div nuiExpanderHeader>\n            <ng-template #defaultExpander>\n                <span class=\"filter-group__header\">{{filterGroupItem.title}}</span>\n            </ng-template>\n            <ng-container *ngTemplateOutlet=\"expanderTemplateRef || defaultExpander; context: {expander: filterGroupItem}\"></ng-container>\n        </div>\n        <nui-checkbox-group [values]=\"filterGroupItem.selectedFilterValues\"\n                            (valuesChange)=\"onValueChanged($event)\">\n            <nui-checkbox *ngFor=\"let filterOption of filterGroupItem.allFilterOptions | slice: 0: getDisplayedFiltersCount()\"\n                          class=\"nui-checkbox--justified\"\n                          [value]=\"filterOption.value\"\n                          [checked]=\"isChecked(filterOption.value)\">\n                <ng-template #defaultCheckboxes>\n                    <div class=\"d-flex justify-content-between filter-group__checkbox\">\n                        <span class=\"d-inline-block filter-group__checkbox-value\">{{filterOption.displayValue}}</span>\n                        <span class=\"d-inline-block filter-group__checkbox-count\">{{filterOption.count}}</span>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"checkboxTemplateRef || defaultCheckboxes; context: {checkbox: filterOption}\"></ng-container>\n            </nui-checkbox>\n        </nui-checkbox-group>\n        <a class=\"filter-group__show-more-link\"\n           *ngIf=\"filterGroupItem?.allFilterOptions?.length > getDisplayedFiltersCount()\"\n           (click)=\"showFilterDialog()\">\n            Show all ({{filterGroupItem.allFilterOptions.length}})\n        </a>\n    </nui-expander>\n</div>\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","export default \"<div class=\\\"mt-2 nui-edge-definer\\\">\\n    <nui-panel>\\n        <div nuiPanelEmbeddedBody>\\n            <app-filter-groups-wrapper>\\n                <app-filter-group *ngFor=\\\"let filterGroupItem of filterGroupItems\\\"\\n                                            [filterGroupItem]=\\\"filterGroupItem\\\"\\n                                            (filterChanged)=\\\"applyFilters()\\\"\\n                                            ></app-filter-group>\\n            </app-filter-groups-wrapper>\\n        </div>\\n        <div class=\\\"ml-2\\\">\\n            <div>\\n                <nui-chips [itemsSource]=\\\"chipsDataSource\\\"\\n                           [overflow]=\\\"true\\\"\\n                           (chipRemoved)=\\\"onClear($event)\\\"\\n                           (removeAll)=\\\"onClearAll($event)\\\"\\n                           (chipsOverflowed)=\\\"onChipsOverflow($event)\\\">\\n                    <div class=\\\"nui-chips-overflowed\\\" #overflowCounterLabel *ngIf=\\\"overflowCounter > 0\\\">\\n                        <nui-popover trigger=\\\"click\\\"\\n                                     [popoverOverlayPosition]=\\\"overflowPopoverPosition\\\"\\n                                     [template]=\\\"popoverWithClickTrigger\\\">\\n                            <a class=\\\"nui-chips-overflowed__counter\\\">+{{ overflowCounter }}</a>\\n                        </nui-popover>\\n                    </div>\\n                </nui-chips>\\n\\n                <ng-template #popoverWithClickTrigger>\\n                    <nui-chips-overflow\\n                            [overflowSource]=\\\"overflowSource\\\"\\n                            [itemsSource]=\\\"chipsDataSource\\\"\\n                            (chipRemoved)=\\\"onClear($event)\\\"\\n                            orientation=\\\"vertical\\\">\\n                    </nui-chips-overflow>\\n                </ng-template>\\n            </div>\\n            <app-filtered-view-table-with-virtual-scroll-selection-table #child></app-filtered-view-table-with-virtual-scroll-selection-table>\\n        </div>\\n    </nui-panel>\\n</div>\\n\";","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","export default \"import { IFilter, INovaFilters } from \\\"@nova-ui/bits\\\";\\n\\nexport enum ServerStatus {\\n    active = \\\"Active\\\",\\n    down = \\\"Down\\\",\\n}\\n\\n// main model being processed & rendered in the frontend\\nexport interface IServer {\\n    location: string;\\n    name: string;\\n    status: ServerStatus;\\n}\\n\\n// implement custom filters\\nexport interface IServerFilters extends INovaFilters {\\n    location?: IFilter<string>;\\n    name?: IFilter<string>;\\n    status?: IFilter<ServerStatus>;\\n}\\n\\n// collection of items that we've transformed from the backend API\\nexport interface IServersCollection {\\n    items: IServer[];\\n    count: number;\\n    status?: IFilter<Record<string, number>>;\\n    location?: IFilter<Record<string, number>>;\\n}\\n\\nexport interface IFilterable {\\n    applyFilters: () => Promise<void>;\\n}\\n\";","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SYMBOL_ASYNC_ITERATOR } from \"../polyfills/symbols.mjs\";\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  // $FlowFixMe[prop-missing]\n  var iteratorMethod = iterable[SYMBOL_ASYNC_ITERATOR];\n  var iterator = iteratorMethod.call(iterable);\n  var $return;\n  var abruptClose;\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, SYMBOL_ASYNC_ITERATOR, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}\n"]}