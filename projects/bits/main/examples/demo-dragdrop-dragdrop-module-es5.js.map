{"version":3,"sources":["webpack:///demo/src/components/demo/dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.ts?fdae","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.component.less","webpack:///demo/src/components/demo/dragdrop/dragdrop.module.ts","webpack:///demo/src/components/demo/dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.ts","webpack:///demo/src/components/demo/dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.html","webpack:///demo/src/components/demo/dragdrop/dragdrop-basic/dragdrop-basic.example.component.ts?e9cf","webpack:///demo/src/components/demo/dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.less","webpack:///demo/src/components/demo/dragdrop/file-drop/public-api.ts?f019","webpack:///demo/src/components/demo/dragdrop/dragdrop-basic/dragdrop-basic.example.component.ts","webpack:///demo/src/components/demo/dragdrop/dragdrop-basic/dragdrop-basic.example.component.html","webpack:///demo/src/components/demo/dragdrop/dragdrop-basic/dragdrop-basic.example.component.less?05d1","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.module.ts?10c7","webpack:///demo/src/components/demo/dragdrop/dragdrop-files/dragdrop-files.example.component.html?12c6","webpack:///demo/src/components/demo/dragdrop/dragdrop.module.ts?141f","webpack:///demo/src/components/demo/dragdrop/dragdrop-docs/dragdrop-docs.example.component.ts?1904","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.module.ts","webpack:///demo/src/components/demo/dragdrop/dragdrop-docs/dragdrop-docs.example.component.ts","webpack:///demo/src/components/demo/dragdrop/dragdrop-docs/dragdrop-docs.example.component.html","webpack:///demo/src/components/demo/dragdrop/file-drop/public-api.ts","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?9146","webpack:///demo/src/components/demo/dragdrop/dragdrop-files/dragdrop-files.example.component.ts?2d80","webpack:///demo/src/components/demo/dragdrop/dragdrop-cdk/dragdrop-cdk.example.component.html?43ec","webpack:///demo/src/components/demo/dragdrop/dragdrop-files/dragdrop-files.example.component.ts","webpack:///demo/src/components/demo/dragdrop/dragdrop-files/dragdrop-files.example.component.html","webpack:///demo/src/components/demo/dragdrop/dragdrop-basic/dragdrop-basic.example.component.html?50c5","webpack:///demo/src/components/demo/dragdrop/index.ts?700c","webpack:///demo/src/components/demo/dragdrop/index.ts","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.component.html?8f56","webpack:///demo/src/components/demo/dragdrop/dragdrop-docs/dragdrop-docs.example.component.html?af57","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.component.ts","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.component.html","webpack:///demo/src/components/demo/dragdrop/file-drop/file-drop.component.ts?cb96","webpack:///demo/src/components/demo/dragdrop/dragdrop-files/dragdrop-files.example.component.less"],"names":["routes","path","component","data","alpha","DragDropDemoModule","provide","useFactory","forChild","DragdropCdkExampleComponent","IsStringValidator","payload","isExternal","IsObjectValidator","DragdropBasicExampleComponent","toastService","draggableString","draggableObj","imma","teapot","draggableExcel","isStringValidator","isObjectValidator","dropEvent","info","message","$localize","destObject","destString","JSON","stringify","destAnything","event","options","preventDuplicates","onDragStart","onDragEnd","onDropObject","onDragOver","onDragEnter","onDragLeave","onDropString","onDropAnything","NuiFileDropExampleModule","DragdropExampleComponent","FileDropState","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","DragdropFilesExampleComponent","gifError","imageType","fileDropState","files","ev","dataTransfer","push","extractFilesFromDropEventData","filter","file","validateDataType","type","invalidateFiles","target","Array","from","items","error","active","fileInput","dataType","includes","i","length","kind","getAsFile","dropHandler","dragEnterHandler","onFileRead","FileDropExampleComponent","counterToHackDragLeave","state","enter","leave","preventDefault","currentTarget","contains","emit"],"mappings":"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","file":"demo-dragdrop-dragdrop-module-es5.js","sourcesContent":["export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-dragdrop-cdk-example\\\",\\n    templateUrl: \\\"./dragdrop-cdk.example.component.html\\\",\\n    styleUrls: [\\\"./dragdrop-cdk.example.component.less\\\"],\\n})\\nexport class DragdropCdkExampleComponent {\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@drop-zone-min-height: 50px;\\n\\n:host {\\n    display: flex;\\n    padding: @nui-space-sm;\\n    width: 100%;\\n    min-height: @drop-zone-min-height;\\n    border-style: dashed; // TODO: no border-style-dashed in NUI\\n    border-width: @nui-line-default;\\n    .setCssVariable(border-color, nui-color-line-default);\\n    &.nui-file-drop {\\n        &--active, &--error {\\n            border-width: @nui-line-fat;\\n            border-style: solid;\\n        }\\n        &--active {\\n            .setCssVariable(border-color, nui-color-selected-contrast);\\n            .setCssVariable(background-color, nui-color-busy-default);\\n        }\\n        &--error {\\n            .setCssVariable(border-color, nui-color-line-critical);\\n            .setCssVariable(background-color, nui-color-busy-destructive);\\n        }\\n    }\\n}\\n\";","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCommonModule, NuiDocsModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport { NuiFileDropExampleModule } from \"./file-drop/file-drop.module\";\nimport {\n    DragdropBasicExampleComponent,\n    DragdropCdkExampleComponent,\n    DragdropExampleComponent,\n    DragdropFilesExampleComponent,\n} from \"./index\";\n\nconst routes = [{\n    path: \"\",\n    component: DragdropExampleComponent,\n    data: {\n        \"srlc\": {\n            \"stage\": SrlcStage.alpha,\n        },\n    },\n}];\n\n@NgModule({\n    imports: [\n        DragDropModule,\n        NuiButtonModule,\n        NuiDocsModule,\n        NuiCommonModule,\n        NuiFileDropExampleModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        DragdropExampleComponent,\n        DragdropBasicExampleComponent,\n        DragdropCdkExampleComponent,\n        DragdropFilesExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class DragDropDemoModule {\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-dragdrop-cdk-example\",\n    templateUrl: \"./dragdrop-cdk.example.component.html\",\n    styleUrls: [\"./dragdrop-cdk.example.component.less\"],\n})\nexport class DragdropCdkExampleComponent {\n}\n","<div class=\"nui-demo-draggable\" cdkDrag>\n    Drag me around\n</div>\n","export default \"import { Component, Inject } from \\\"@angular/core\\\";\\nimport { IDropEvent, IDropValidator, IToastService, ToastService } from \\\"@nova-ui/bits\\\";\\n\\nclass IsStringValidator implements IDropValidator {\\n    isValidDropTarget(payload: any, isExternal: boolean): boolean {\\n        if (isExternal) {\\n            return false;\\n        }\\n        return typeof payload === \\\"string\\\";\\n    }\\n}\\n\\nclass IsObjectValidator implements IDropValidator {\\n    isValidDropTarget(payload: any): boolean {\\n        return typeof payload === \\\"object\\\";\\n    }\\n}\\n\\n@Component({\\n    selector: \\\"nui-dragdrop-validator-example\\\",\\n    templateUrl: \\\"./dragdrop-basic.example.component.html\\\",\\n})\\nexport class DragdropBasicExampleComponent {\\n    public draggableString = \\\"this is a string\\\";\\n    public draggableObj = {\\n        imma: \\\"little\\\",\\n        teapot: \\\"short and stout\\\",\\n    };\\n    public destObject: {};\\n    public destString: string;\\n    public destAnything: any;\\n    public draggableExcel = \\\"<table>\\\" +\\n        \\\"<tr>\\\" +\\n        \\\"<th>thing1</th>\\\" +\\n        \\\"<th>thing2</th>\\\" +\\n        \\\"</tr>\\\" +\\n        \\\"<tr>\\\" +\\n        \\\"<td>jeff</td>\\\" +\\n        \\\"<td>4</td>\\\" +\\n        \\\"</tr>\\\" +\\n        \\\"<tr>\\\" +\\n        \\\"<td>john</td>\\\" +\\n        \\\"<td>8</td>\\\" +\\n        \\\"</tr>\\\" +\\n        \\\"</table>\\\";\\n    public isStringValidator = new IsStringValidator();\\n    public isObjectValidator = new IsObjectValidator();\\n\\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\\n\\n    public onDropObject(dropEvent: IDropEvent) {\\n        this.toastService.info({message: $localize `Drop object!`});\\n        this.destObject = dropEvent.payload;\\n    }\\n\\n    public onDropString(dropEvent: IDropEvent) {\\n        this.toastService.info({message: $localize `Drop string!`});\\n        this.destString = JSON.stringify(dropEvent.payload);\\n    }\\n\\n    public onDropAnything(dropEvent: IDropEvent) {\\n        this.toastService.info({message: $localize `Drop anything!`});\\n        this.destAnything = dropEvent.payload;\\n    }\\n\\n    public onDragStart(event: DragEvent) {\\n        this.toastService.info({message: $localize `Drag start`});\\n    }\\n\\n    public onDragEnd(event: DragEvent) {\\n        this.toastService.info({message: $localize `Drag end`});\\n    }\\n\\n    public onDragOver(event: DragEvent) {\\n        this.toastService.info({\\n            message: $localize `Drag over`,\\n            options: { preventDuplicates: true },\\n        });\\n    }\\n\\n    public onDragEnter(event: DragEvent) {\\n        this.toastService.info({message: $localize `Drag enter`});\\n    }\\n\\n    public onDragLeave(event: DragEvent) {\\n        this.toastService.info({message: $localize `Drag leave`});\\n    }\\n}\\n\";","export default \"// This can be moved to bits!\\n@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\";","export default \"export enum FileDropState {\\n    active = \\\"active\\\",\\n    error = \\\"error\\\",\\n    default = \\\"default\\\",\\n}\\n\";","import { Component, Inject } from \"@angular/core\";\nimport { IDropEvent, IDropValidator, IToastService, ToastService } from \"@nova-ui/bits\";\n\nclass IsStringValidator implements IDropValidator {\n    isValidDropTarget(payload: any, isExternal: boolean): boolean {\n        if (isExternal) {\n            return false;\n        }\n        return typeof payload === \"string\";\n    }\n}\n\nclass IsObjectValidator implements IDropValidator {\n    isValidDropTarget(payload: any): boolean {\n        return typeof payload === \"object\";\n    }\n}\n\n@Component({\n    selector: \"nui-dragdrop-validator-example\",\n    templateUrl: \"./dragdrop-basic.example.component.html\",\n})\nexport class DragdropBasicExampleComponent {\n    public draggableString = \"this is a string\";\n    public draggableObj = {\n        imma: \"little\",\n        teapot: \"short and stout\",\n    };\n    public destObject: {};\n    public destString: string;\n    public destAnything: any;\n    public draggableExcel = \"<table>\" +\n        \"<tr>\" +\n        \"<th>thing1</th>\" +\n        \"<th>thing2</th>\" +\n        \"</tr>\" +\n        \"<tr>\" +\n        \"<td>jeff</td>\" +\n        \"<td>4</td>\" +\n        \"</tr>\" +\n        \"<tr>\" +\n        \"<td>john</td>\" +\n        \"<td>8</td>\" +\n        \"</tr>\" +\n        \"</table>\";\n    public isStringValidator = new IsStringValidator();\n    public isObjectValidator = new IsObjectValidator();\n\n    constructor(@Inject(ToastService) private toastService: IToastService) { }\n\n    public onDropObject(dropEvent: IDropEvent) {\n        this.toastService.info({message: $localize `Drop object!`});\n        this.destObject = dropEvent.payload;\n    }\n\n    public onDropString(dropEvent: IDropEvent) {\n        this.toastService.info({message: $localize `Drop string!`});\n        this.destString = JSON.stringify(dropEvent.payload);\n    }\n\n    public onDropAnything(dropEvent: IDropEvent) {\n        this.toastService.info({message: $localize `Drop anything!`});\n        this.destAnything = dropEvent.payload;\n    }\n\n    public onDragStart(event: DragEvent) {\n        this.toastService.info({message: $localize `Drag start`});\n    }\n\n    public onDragEnd(event: DragEvent) {\n        this.toastService.info({message: $localize `Drag end`});\n    }\n\n    public onDragOver(event: DragEvent) {\n        this.toastService.info({\n            message: $localize `Drag over`,\n            options: { preventDuplicates: true },\n        });\n    }\n\n    public onDragEnter(event: DragEvent) {\n        this.toastService.info({message: $localize `Drag enter`});\n    }\n\n    public onDragLeave(event: DragEvent) {\n        this.toastService.info({message: $localize `Drag leave`});\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-6\">\n        <div class=\"drag-drop-item\"\n             id=\"nui-demo-src-object\"\n             nuiDraggable\n             [payload]=\"draggableObj\"\n             adornerDragClass=\"demo-drag-class\"\n             (dragStart)=\"onDragStart($event)\"\n             (dragEnd)=\"onDragEnd($event)\"\n             i18n>drag me (object)</div>\n        <pre>{{draggableObj | json}}</pre>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"drag-drop-item\"\n             id=\"nui-demo-dest-object\"\n             nuiDroppable\n             dropIndicatorClass=\"demo-drop-indicator-class\"\n             dragOverClass=\"demo-drag-over-class\"\n             invalidDragOverClass=\"demo-invalid-drag-over-class\"\n             [dropValidator]=\"isObjectValidator\"\n             (dropSuccess)=\"onDropObject($event)\"\n             (dragOver)=\"onDragOver($event)\"\n             (dragEnter)=\"onDragEnter($event)\"\n             (dragLeave)=\"onDragLeave($event)\"\n             i18n>drop here - object</div>\n        <pre>{{destObject | json}}</pre>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-6\">\n        <div class=\"drag-drop-item\"\n             nuiDraggable\n             [payload]=\"draggableString\"\n             adornerDragClass=\"demo-drag-class\"\n             (dragStart)=\"onDragStart($event)\"\n             (dragEnd)=\"onDragEnd($event)\"\n             i18n>drag me (string)</div>\n        <pre>{{draggableString}}</pre>\n    </div>\n\n    <div class=\"col-6\">\n        <div class=\"drag-drop-item\"\n             nuiDroppable\n             [dropValidator]=\"isStringValidator\"\n             dropIndicatorClass=\"demo-drop-indicator-class\"\n             dragOverClass=\"demo-drag-over-class\"\n             invalidDragOverClass=\"demo-invalid-drag-over-class\"\n             (dropSuccess)=\"onDropString($event)\"\n             (dragOver)=\"onDragOver($event)\"\n             (dragEnter)=\"onDragEnter($event)\"\n             (dragLeave)=\"onDragLeave($event)\"\n             i18n>drop here - string</div>\n        <pre>{{destString}}</pre>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"drag-drop-item\"\n             nuiDraggable\n             [payload]=\"draggableExcel\"\n             (dragStart)=\"onDragStart($event)\"\n             (dragEnd)=\"onDragEnd($event)\"\n             i18n>drag me to Excel (htmlTable)</div>\n        <pre>{{draggableExcel}}</pre>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"drag-drop-item\"\n             nuiDroppable\n             dropIndicatorClass=\"demo-drop-indicator-class\"\n             dragOverClass=\"demo-drag-over-class\"\n             invalidDragOverClass=\"demo-invalid-drag-over-class\"\n             (dragOver)=\"onDragOver($event)\"\n             (dragEnter)=\"onDragEnter($event)\"\n             (dragLeave)=\"onDragLeave($event)\"\n             (dropSuccess)=\"onDropAnything($event)\"\n             i18n>drop anything</div>\n        <pre>{{destAnything | json}}</pre>\n    </div>\n</div>\n","export default \".drag-drop-item {\\n    border: 1px solid grey;\\n    text-align: center;\\n}\\n.demo-drag-over-class {\\n    border-color: #30B230;\\n    background-color: #e7f4df;\\n}\\n.demo-invalid-drag-over-class {\\n    border-color: #D50000;\\n    background-color: #FFE4E0;\\n}\\n.demo-drop-indicator-class {\\n    border-color: #3CAADD;\\n    background-color: #a0cede;\\n}\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\n\\nimport { NuiCommonModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { FileDropExampleComponent } from \\\"./file-drop.component\\\";\\n\\n\\n/**\\n * @ignore\\n */\\n@NgModule({\\n    imports: [\\n        NuiCommonModule,\\n    ],\\n    declarations: [\\n        FileDropExampleComponent,\\n    ],\\n    exports: [\\n        FileDropExampleComponent,\\n    ],\\n    providers: [],\\n})\\nexport class NuiFileDropExampleModule {\\n}\\n\";","export default \"<nui-file-drop-example (drop)=\\\"dropHandler($event)\\\"\\n               (enter)=\\\"dragEnterHandler($event)\\\"\\n               (leave)=\\\"invalidateFiles()\\\"\\n               [state]=\\\"fileDropState\\\">\\n    <ng-container *ngIf=\\\"gifError\\\">\\n        <nui-validation-message [show]=\\\"true\\\"> Please upload GIF only!</nui-validation-message>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"!gifError\\\">\\n        <nui-icon icon=\\\"upload\\\" class=\\\"pr-2\\\" iconColor=\\\"gray\\\"></nui-icon>\\n        <span class=\\\"nui-text-small-secondary\\\">\\n            Drop only <b>GIF images</b> to upload, or <label for=\\\"uniqueOne\\\" class=\\\"nui-text-link-small nui-demo-drop-area__browse\\\">browse</label>\\n        </span>\\n    </ng-container>\\n\\n    <!--this is hidden file input to handle browse button-->\\n    <input type=\\\"file\\\"\\n           id=\\\"uniqueOne\\\"\\n           [accept]=\\\"imageType\\\"\\n           multiple\\n           (change)=\\\"onFileRead($event)\\\"\\n           class=\\\"hidden\\\">\\n</nui-file-drop-example>\\n\\n<span class=\\\"nui-text-small-secondary\\\">File types: GIF</span>\\n\\n<div class=\\\"nui-demo-file-area d-flex\\\" *ngFor=\\\"let file of files\\\">\\n    <div class=\\\" py-2 px-3 flex-grow-1 flex-row\\\">\\n        <span class=\\\"nui-text-label\\\">{{file.name}}</span>\\n        <nui-progress [show]=\\\"true\\\"\\n                      [stacked]=\\\"true\\\"\\n                      [percent]=\\\"42\\\"\\n                      [showNumber]=\\\"true\\\"\\n                      (cancel)=\\\"onCancel()\\\">\\n        </nui-progress>\\n    </div>\\n    <div class=\\\"nui-demo-file-area__right flex-grow-0\\\">\\n        <button nui-button type=\\\"button\\\" displayStyle=\\\"action\\\" icon=\\\"close\\\" (click)=\\\"rmFile(file)\\\"></button>\\n    </div>\\n</div>\\n\";","export default \"import { DragDropModule } from \\\"@angular/cdk/drag-drop\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiCommonModule, NuiDocsModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport { NuiFileDropExampleModule } from \\\"./file-drop/file-drop.module\\\";\\nimport {\\n    DragdropBasicExampleComponent,\\n    DragdropCdkExampleComponent,\\n    DragdropExampleComponent,\\n    DragdropFilesExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [{\\n    path: \\\"\\\",\\n    component: DragdropExampleComponent,\\n    data: {\\n        \\\"srlc\\\": {\\n            \\\"stage\\\": SrlcStage.alpha,\\n        },\\n    },\\n}];\\n\\n@NgModule({\\n    imports: [\\n        DragDropModule,\\n        NuiButtonModule,\\n        NuiDocsModule,\\n        NuiCommonModule,\\n        NuiFileDropExampleModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        DragdropExampleComponent,\\n        DragdropBasicExampleComponent,\\n        DragdropCdkExampleComponent,\\n        DragdropFilesExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class DragDropDemoModule {\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-dragdrop-example\\\",\\n    templateUrl: \\\"./dragdrop-docs.example.component.html\\\",\\n})\\nexport class DragdropExampleComponent {\\n\\n}\\n\";","import { NgModule } from \"@angular/core\";\n\nimport { NuiCommonModule } from \"@nova-ui/bits\";\n\nimport { FileDropExampleComponent } from \"./file-drop.component\";\n\n\n/**\n * @ignore\n */\n@NgModule({\n    imports: [\n        NuiCommonModule,\n    ],\n    declarations: [\n        FileDropExampleComponent,\n    ],\n    exports: [\n        FileDropExampleComponent,\n    ],\n    providers: [],\n})\nexport class NuiFileDropExampleModule {\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-dragdrop-example\",\n    templateUrl: \"./dragdrop-docs.example.component.html\",\n})\nexport class DragdropExampleComponent {\n\n}\n","<!--<nui-example-wrapper filenamePrefix=\"dragdrop-basic\" exampleTitle=\"Drag and Drop\">-->\n    <!--<nui-dragdrop-validator-example></nui-dragdrop-validator-example>-->\n<!--</nui-example-wrapper>-->\n<!--<nui-example-wrapper filenamePrefix=\"dragdrop-cdk\" exampleTitle=\"Drag and Drop CDK\">-->\n    <!--<nui-dragdrop-cdk-example></nui-dragdrop-cdk-example>-->\n<!--</nui-example-wrapper>-->\n\n<h2>Basic Usage</h2>\n\n<p>Usage is described in example below. FileDrop component is used internally to handle dragLeave/dragEnter and encapsulate styling</p>\n<p>Example includes:</p>\n<ol>\n    <li>\n        Browse file using file system dialog with access to input properties like \"multiple\" and \"accept\".\n    </li>\n    <li>\n        Effect while hovering file with wrong data type (for simplicity, example code checks only first item in array) - this is implemented as an input in FileDrop component.\n    </li>\n    <li>\n        List of files with layout that is taken from UX specs\n    </li>\n</ol>\n\n<nui-example-wrapper filenamePrefix=\"dragdrop-files\" exampleTitle=\"Drag and Drop Files\">\n    <nui-dragdrop-files-example></nui-dragdrop-files-example>\n</nui-example-wrapper>\n\n<h2>File Drop Component</h2>\n<p>Please see FileDrop component source code in this example (note that demo is not interactive since this is purely presentational component)</p>\n\n<nui-example-wrapper filenamePrefix=\"file-drop\" exampleTitle=\"File Drop Component\">\n    <nui-file-drop-example><span>Any content</span></nui-file-drop-example>\n</nui-example-wrapper>\n","export enum FileDropState {\n    active = \"active\",\n    error = \"error\",\n    default = \"default\",\n}\n","var map = {\n\t\"./dragdrop-basic/dragdrop-basic.example.component.html\": \"UMU+\",\n\t\"./dragdrop-basic/dragdrop-basic.example.component.less\": \"BdGP\",\n\t\"./dragdrop-basic/dragdrop-basic.example.component.ts\": \"6c9z\",\n\t\"./dragdrop-cdk/dragdrop-cdk.example.component.html\": \"Q+yD\",\n\t\"./dragdrop-cdk/dragdrop-cdk.example.component.less\": \"6urx\",\n\t\"./dragdrop-cdk/dragdrop-cdk.example.component.ts\": \"/a6g\",\n\t\"./dragdrop-docs/dragdrop-docs.example.component.html\": \"r1du\",\n\t\"./dragdrop-docs/dragdrop-docs.example.component.ts\": \"GQSF\",\n\t\"./dragdrop-files/dragdrop-files.example.component.html\": \"Esai\",\n\t\"./dragdrop-files/dragdrop-files.example.component.less\": \"yFhN\",\n\t\"./dragdrop-files/dragdrop-files.example.component.ts\": \"LYCR\",\n\t\"./dragdrop.module.ts\": \"FB9V\",\n\t\"./file-drop/file-drop.component.html\": \"j1YS\",\n\t\"./file-drop/file-drop.component.less\": \"/lup\",\n\t\"./file-drop/file-drop.component.ts\": \"y5at\",\n\t\"./file-drop/file-drop.module.ts\": \"EMce\",\n\t\"./file-drop/public-api.ts\": \"8BnG\",\n\t\"./index.ts\": \"cAym\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"KqHy\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\nimport { FileDropState } from \\\"../file-drop/public-api\\\";\\n\\n@Component({\\n    selector: \\\"nui-dragdrop-files-example\\\",\\n    templateUrl: \\\"./dragdrop-files.example.component.html\\\",\\n    styleUrls: [\\\"./dragdrop-files.example.component.less\\\"],\\n})\\nexport class DragdropFilesExampleComponent {\\n\\n    public gifError = false;\\n    public imageType = \\\"image/gif\\\";\\n\\n    public fileDropState = FileDropState.default;\\n\\n    public files: File[] = [];\\n\\n    dropHandler(ev: DragEvent) {\\n\\n        if (!ev.dataTransfer) {\\n            throw new Error(\\\"dataTransfer is not defined\\\");\\n        }\\n        this.files.push(\\n            ...this.extractFilesFromDropEventData(ev.dataTransfer)\\n                    .filter((file: File) => this.validateDataType(file.type))\\n        );\\n\\n        this.invalidateFiles();\\n    }\\n\\n    onFileRead(ev: Event) {\\n        const files: FileList | null = (ev.target as HTMLInputElement).files;\\n        if (!files) {\\n            throw new Error(\\\"fileList is not defined\\\");\\n        }\\n        // no validation here since we have native one in browser input\\n        this.files.push(...Array.from(files));\\n    }\\n\\n    dragEnterHandler(ev: DragEvent) {\\n        // This naively checks only first file\\n\\n        if (ev.dataTransfer && ev.dataTransfer.items) {\\n            this.gifError = !this.validateDataType(ev.dataTransfer.items[0].type);\\n        }\\n\\n        this.fileDropState = this.gifError ? FileDropState.error : FileDropState.active;\\n    }\\n\\n    invalidateFiles() {\\n        // Change it if you want to have some error highlight even after dragLeave\\n        this.fileDropState = FileDropState.default;\\n        this.gifError = false;\\n    }\\n\\n    rmFile(fileInput: File) {\\n        this.files = this.files.filter(file => file !== fileInput);\\n    }\\n\\n    private validateDataType(dataType: string) {\\n        return dataType.includes(this.imageType);\\n    }\\n\\n    // TODO: this can be extracted to a service\\n    private extractFilesFromDropEventData(data: DataTransfer): File[] {\\n        const files: File[] = [];\\n        if (data.items) {\\n            // Use DataTransferItemList interface to access the file(s)\\n            for (let i = 0; i < data.items.length; i++) {\\n                // If dropped items aren't files, reject them\\n                if (data.items[i].kind === \\\"file\\\") {\\n                    const file: File | null = data.items[i].getAsFile();\\n                    if (file) {\\n                        files.push(file);\\n                    }\\n                }\\n            }\\n        } else {\\n            // Use DataTransfer interface to access the file(s) for Safari\\n            for (let i = 0; i < data.files.length; i++) {\\n                files.push(data.files[i]);\\n            }\\n        }\\n        return files;\\n    }\\n\\n}\\n\";","export default \"<div class=\\\"nui-demo-draggable\\\" cdkDrag>\\n    Drag me around\\n</div>\\n\";","import { Component } from \"@angular/core\";\n\nimport { FileDropState } from \"../file-drop/public-api\";\n\n@Component({\n    selector: \"nui-dragdrop-files-example\",\n    templateUrl: \"./dragdrop-files.example.component.html\",\n    styleUrls: [\"./dragdrop-files.example.component.less\"],\n})\nexport class DragdropFilesExampleComponent {\n\n    public gifError = false;\n    public imageType = \"image/gif\";\n\n    public fileDropState = FileDropState.default;\n\n    public files: File[] = [];\n\n    dropHandler(ev: DragEvent) {\n\n        if (!ev.dataTransfer) {\n            throw new Error(\"dataTransfer is not defined\");\n        }\n        this.files.push(\n            ...this.extractFilesFromDropEventData(ev.dataTransfer)\n                    .filter((file: File) => this.validateDataType(file.type))\n        );\n\n        this.invalidateFiles();\n    }\n\n    onFileRead(ev: Event) {\n        const files: FileList | null = (ev.target as HTMLInputElement).files;\n        if (!files) {\n            throw new Error(\"fileList is not defined\");\n        }\n        // no validation here since we have native one in browser input\n        this.files.push(...Array.from(files));\n    }\n\n    dragEnterHandler(ev: DragEvent) {\n        // This naively checks only first file\n\n        if (ev.dataTransfer && ev.dataTransfer.items) {\n            this.gifError = !this.validateDataType(ev.dataTransfer.items[0].type);\n        }\n\n        this.fileDropState = this.gifError ? FileDropState.error : FileDropState.active;\n    }\n\n    invalidateFiles() {\n        // Change it if you want to have some error highlight even after dragLeave\n        this.fileDropState = FileDropState.default;\n        this.gifError = false;\n    }\n\n    rmFile(fileInput: File) {\n        this.files = this.files.filter(file => file !== fileInput);\n    }\n\n    private validateDataType(dataType: string) {\n        return dataType.includes(this.imageType);\n    }\n\n    // TODO: this can be extracted to a service\n    private extractFilesFromDropEventData(data: DataTransfer): File[] {\n        const files: File[] = [];\n        if (data.items) {\n            // Use DataTransferItemList interface to access the file(s)\n            for (let i = 0; i < data.items.length; i++) {\n                // If dropped items aren't files, reject them\n                if (data.items[i].kind === \"file\") {\n                    const file: File | null = data.items[i].getAsFile();\n                    if (file) {\n                        files.push(file);\n                    }\n                }\n            }\n        } else {\n            // Use DataTransfer interface to access the file(s) for Safari\n            for (let i = 0; i < data.files.length; i++) {\n                files.push(data.files[i]);\n            }\n        }\n        return files;\n    }\n\n}\n","<nui-file-drop-example (drop)=\"dropHandler($event)\"\n               (enter)=\"dragEnterHandler($event)\"\n               (leave)=\"invalidateFiles()\"\n               [state]=\"fileDropState\">\n    <ng-container *ngIf=\"gifError\">\n        <nui-validation-message [show]=\"true\"> Please upload GIF only!</nui-validation-message>\n    </ng-container>\n    <ng-container *ngIf=\"!gifError\">\n        <nui-icon icon=\"upload\" class=\"pr-2\" iconColor=\"gray\"></nui-icon>\n        <span class=\"nui-text-small-secondary\">\n            Drop only <b>GIF images</b> to upload, or <label for=\"uniqueOne\" class=\"nui-text-link-small nui-demo-drop-area__browse\">browse</label>\n        </span>\n    </ng-container>\n\n    <!--this is hidden file input to handle browse button-->\n    <input type=\"file\"\n           id=\"uniqueOne\"\n           [accept]=\"imageType\"\n           multiple\n           (change)=\"onFileRead($event)\"\n           class=\"hidden\">\n</nui-file-drop-example>\n\n<span class=\"nui-text-small-secondary\">File types: GIF</span>\n\n<div class=\"nui-demo-file-area d-flex\" *ngFor=\"let file of files\">\n    <div class=\" py-2 px-3 flex-grow-1 flex-row\">\n        <span class=\"nui-text-label\">{{file.name}}</span>\n        <nui-progress [show]=\"true\"\n                      [stacked]=\"true\"\n                      [percent]=\"42\"\n                      [showNumber]=\"true\"\n                      (cancel)=\"onCancel()\">\n        </nui-progress>\n    </div>\n    <div class=\"nui-demo-file-area__right flex-grow-0\">\n        <button nui-button type=\"button\" displayStyle=\"action\" icon=\"close\" (click)=\"rmFile(file)\"></button>\n    </div>\n</div>\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n        <div class=\\\"drag-drop-item\\\"\\n             id=\\\"nui-demo-src-object\\\"\\n             nuiDraggable\\n             [payload]=\\\"draggableObj\\\"\\n             adornerDragClass=\\\"demo-drag-class\\\"\\n             (dragStart)=\\\"onDragStart($event)\\\"\\n             (dragEnd)=\\\"onDragEnd($event)\\\"\\n             i18n>drag me (object)</div>\\n        <pre>{{draggableObj | json}}</pre>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n        <div class=\\\"drag-drop-item\\\"\\n             id=\\\"nui-demo-dest-object\\\"\\n             nuiDroppable\\n             dropIndicatorClass=\\\"demo-drop-indicator-class\\\"\\n             dragOverClass=\\\"demo-drag-over-class\\\"\\n             invalidDragOverClass=\\\"demo-invalid-drag-over-class\\\"\\n             [dropValidator]=\\\"isObjectValidator\\\"\\n             (dropSuccess)=\\\"onDropObject($event)\\\"\\n             (dragOver)=\\\"onDragOver($event)\\\"\\n             (dragEnter)=\\\"onDragEnter($event)\\\"\\n             (dragLeave)=\\\"onDragLeave($event)\\\"\\n             i18n>drop here - object</div>\\n        <pre>{{destObject | json}}</pre>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n        <div class=\\\"drag-drop-item\\\"\\n             nuiDraggable\\n             [payload]=\\\"draggableString\\\"\\n             adornerDragClass=\\\"demo-drag-class\\\"\\n             (dragStart)=\\\"onDragStart($event)\\\"\\n             (dragEnd)=\\\"onDragEnd($event)\\\"\\n             i18n>drag me (string)</div>\\n        <pre>{{draggableString}}</pre>\\n    </div>\\n\\n    <div class=\\\"col-6\\\">\\n        <div class=\\\"drag-drop-item\\\"\\n             nuiDroppable\\n             [dropValidator]=\\\"isStringValidator\\\"\\n             dropIndicatorClass=\\\"demo-drop-indicator-class\\\"\\n             dragOverClass=\\\"demo-drag-over-class\\\"\\n             invalidDragOverClass=\\\"demo-invalid-drag-over-class\\\"\\n             (dropSuccess)=\\\"onDropString($event)\\\"\\n             (dragOver)=\\\"onDragOver($event)\\\"\\n             (dragEnter)=\\\"onDragEnter($event)\\\"\\n             (dragLeave)=\\\"onDragLeave($event)\\\"\\n             i18n>drop here - string</div>\\n        <pre>{{destString}}</pre>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"drag-drop-item\\\"\\n             nuiDraggable\\n             [payload]=\\\"draggableExcel\\\"\\n             (dragStart)=\\\"onDragStart($event)\\\"\\n             (dragEnd)=\\\"onDragEnd($event)\\\"\\n             i18n>drag me to Excel (htmlTable)</div>\\n        <pre>{{draggableExcel}}</pre>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"drag-drop-item\\\"\\n             nuiDroppable\\n             dropIndicatorClass=\\\"demo-drop-indicator-class\\\"\\n             dragOverClass=\\\"demo-drag-over-class\\\"\\n             invalidDragOverClass=\\\"demo-invalid-drag-over-class\\\"\\n             (dragOver)=\\\"onDragOver($event)\\\"\\n             (dragEnter)=\\\"onDragEnter($event)\\\"\\n             (dragLeave)=\\\"onDragLeave($event)\\\"\\n             (dropSuccess)=\\\"onDropAnything($event)\\\"\\n             i18n>drop anything</div>\\n        <pre>{{destAnything | json}}</pre>\\n    </div>\\n</div>\\n\";","export default \"export * from \\\"./dragdrop-docs/dragdrop-docs.example.component\\\";\\nexport * from \\\"./dragdrop-basic/dragdrop-basic.example.component\\\";\\nexport * from \\\"./dragdrop-cdk/dragdrop-cdk.example.component\\\";\\nexport * from \\\"./dragdrop-files/dragdrop-files.example.component\\\";\\n\";","export * from \"./dragdrop-docs/dragdrop-docs.example.component\";\nexport * from \"./dragdrop-basic/dragdrop-basic.example.component\";\nexport * from \"./dragdrop-cdk/dragdrop-cdk.example.component\";\nexport * from \"./dragdrop-files/dragdrop-files.example.component\";\n","export default \"<ng-content></ng-content>\\n\";","export default \"<!--<nui-example-wrapper filenamePrefix=\\\"dragdrop-basic\\\" exampleTitle=\\\"Drag and Drop\\\">-->\\n    <!--<nui-dragdrop-validator-example></nui-dragdrop-validator-example>-->\\n<!--</nui-example-wrapper>-->\\n<!--<nui-example-wrapper filenamePrefix=\\\"dragdrop-cdk\\\" exampleTitle=\\\"Drag and Drop CDK\\\">-->\\n    <!--<nui-dragdrop-cdk-example></nui-dragdrop-cdk-example>-->\\n<!--</nui-example-wrapper>-->\\n\\n<h2>Basic Usage</h2>\\n\\n<p>Usage is described in example below. FileDrop component is used internally to handle dragLeave/dragEnter and encapsulate styling</p>\\n<p>Example includes:</p>\\n<ol>\\n    <li>\\n        Browse file using file system dialog with access to input properties like \\\"multiple\\\" and \\\"accept\\\".\\n    </li>\\n    <li>\\n        Effect while hovering file with wrong data type (for simplicity, example code checks only first item in array) - this is implemented as an input in FileDrop component.\\n    </li>\\n    <li>\\n        List of files with layout that is taken from UX specs\\n    </li>\\n</ol>\\n\\n<nui-example-wrapper filenamePrefix=\\\"dragdrop-files\\\" exampleTitle=\\\"Drag and Drop Files\\\">\\n    <nui-dragdrop-files-example></nui-dragdrop-files-example>\\n</nui-example-wrapper>\\n\\n<h2>File Drop Component</h2>\\n<p>Please see FileDrop component source code in this example (note that demo is not interactive since this is purely presentational component)</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"file-drop\\\" exampleTitle=\\\"File Drop Component\\\">\\n    <nui-file-drop-example><span>Any content</span></nui-file-drop-example>\\n</nui-example-wrapper>\\n\";","import { Component, EventEmitter, HostBinding, HostListener, Input, Output } from \"@angular/core\";\n\nimport { FileDropState } from \"./public-api\";\n\n/**\n * <example-url>./../examples/index.html#/file-upload</example-url>\n */\n\n/** @ignore */\n@Component({\n    selector: \"nui-file-drop-example\",\n    templateUrl: \"./file-drop.component.html\",\n    styleUrls: [\"./file-drop.component.less\"],\n    host: {\n        \"class\": \"d-inline-flex align-items-center justify-content-center\",\n    },\n})\nexport class FileDropExampleComponent {\n    // TODO: consider renaming this class to DropAreaComponent since it is not file-specific at all\n\n    private counterToHackDragLeave = 0;\n\n    @Input() public state: FileDropState = FileDropState.default;\n\n    @Output() public enter = new EventEmitter<DragEvent>();\n    @Output() public leave = new EventEmitter<DragEvent>();\n    // Drop is handled as regular JS event in parent component.\n    // enter and leave can't be since dragenter and dragleave for parent component are different\n\n    @HostBinding(\"class.nui-file-drop--active\") get hasActiveClass() { return this.state === FileDropState.active; }\n    @HostBinding(\"class.nui-file-drop--error\") get hasErrorClass() { return this.state === FileDropState.error; }\n\n    // this solves problem with opening the file since browser fires dragover by default\n    @HostListener(\"window:dragover\", [\"$event\"])\n    dragOverHandler(ev: DragEvent) {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n    }\n\n    @HostListener(\"drop\", [\"$event\"])\n    dropHandler(ev: DragEvent) {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n        this.counterToHackDragLeave = 0; // important not to break mouseleave hack\n    }\n\n    @HostListener(\"dragenter\", [\"$event\"])\n    dragEnterHandler(ev: DragEvent) {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n        this.counterToHackDragLeave++;\n        if ((ev.currentTarget as Node).contains(ev.currentTarget as Node)) {\n            this.enter.emit(ev);\n        }\n    }\n\n    @HostListener(\"dragleave\", [\"$event\"])\n    dragLeaveHandler(ev: DragEvent) {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n\n        this.counterToHackDragLeave--;\n        if (this.counterToHackDragLeave === 0) {\n            this.leave.emit(ev);\n        }\n    }\n}\n","<ng-content></ng-content>\n","export default \"import { Component, EventEmitter, HostBinding, HostListener, Input, Output } from \\\"@angular/core\\\";\\n\\nimport { FileDropState } from \\\"./public-api\\\";\\n\\n/**\\n * <example-url>./../examples/index.html#/file-upload</example-url>\\n */\\n\\n/** @ignore */\\n@Component({\\n    selector: \\\"nui-file-drop-example\\\",\\n    templateUrl: \\\"./file-drop.component.html\\\",\\n    styleUrls: [\\\"./file-drop.component.less\\\"],\\n    host: {\\n        \\\"class\\\": \\\"d-inline-flex align-items-center justify-content-center\\\",\\n    },\\n})\\nexport class FileDropExampleComponent {\\n    // TODO: consider renaming this class to DropAreaComponent since it is not file-specific at all\\n\\n    private counterToHackDragLeave = 0;\\n\\n    @Input() public state: FileDropState = FileDropState.default;\\n\\n    @Output() public enter = new EventEmitter<DragEvent>();\\n    @Output() public leave = new EventEmitter<DragEvent>();\\n    // Drop is handled as regular JS event in parent component.\\n    // enter and leave can't be since dragenter and dragleave for parent component are different\\n\\n    @HostBinding(\\\"class.nui-file-drop--active\\\") get hasActiveClass() { return this.state === FileDropState.active; }\\n    @HostBinding(\\\"class.nui-file-drop--error\\\") get hasErrorClass() { return this.state === FileDropState.error; }\\n\\n    // this solves problem with opening the file since browser fires dragover by default\\n    @HostListener(\\\"window:dragover\\\", [\\\"$event\\\"])\\n    dragOverHandler(ev: DragEvent) {\\n        // Prevent default behavior (Prevent file from being opened)\\n        ev.preventDefault();\\n    }\\n\\n    @HostListener(\\\"drop\\\", [\\\"$event\\\"])\\n    dropHandler(ev: DragEvent) {\\n        // Prevent default behavior (Prevent file from being opened)\\n        ev.preventDefault();\\n        this.counterToHackDragLeave = 0; // important not to break mouseleave hack\\n    }\\n\\n    @HostListener(\\\"dragenter\\\", [\\\"$event\\\"])\\n    dragEnterHandler(ev: DragEvent) {\\n        // Prevent default behavior (Prevent file from being opened)\\n        ev.preventDefault();\\n        this.counterToHackDragLeave++;\\n        if ((ev.currentTarget as Node).contains(ev.currentTarget as Node)) {\\n            this.enter.emit(ev);\\n        }\\n    }\\n\\n    @HostListener(\\\"dragleave\\\", [\\\"$event\\\"])\\n    dragLeaveHandler(ev: DragEvent) {\\n        // Prevent default behavior (Prevent file from being opened)\\n        ev.preventDefault();\\n\\n        this.counterToHackDragLeave--;\\n        if (this.counterToHackDragLeave === 0) {\\n            this.leave.emit(ev);\\n        }\\n    }\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n.nui-demo {\\n    &-drop-area {\\n        &__browse {\\n            cursor: pointer; // this would not be needed if nui-text-link had pointer - sadpanda\\n            margin-bottom: 0; // this is needed sadpanda2\\n        }\\n    }\\n\\n    &-file-area {\\n        width: 100%;\\n        min-height: 30px; // icon size\\n        .setCssVariable(border-color, nui-border-fade);\\n        border-width: @nui-line-default;\\n        border-bottom-width: 0;\\n        border-style: solid;\\n    }\\n    &-file-area:last-child {\\n        border-bottom-width: @nui-line-default; // this helps to merge borders of divs to look nice\\n    }\\n\\n}\\n\";"]}