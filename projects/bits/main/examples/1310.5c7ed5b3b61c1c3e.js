(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1310],{11481:(l,s,i)=>{var c={"./checkbox-group-basic/checkbox-group-basic.example.component.html":5301,"./checkbox-group-basic/checkbox-group-basic.example.component.ts":41708,"./checkbox-group-docs/checkbox-group-docs.example.component.html":48600,"./checkbox-group-docs/checkbox-group-docs.example.component.ts":52023,"./checkbox-group-in-form/checkbox-group-in-form.example.component.html":99415,"./checkbox-group-in-form/checkbox-group-in-form.example.component.ts":87782,"./checkbox-group-inline/checkbox-group-inline.example.component.html":62359,"./checkbox-group-inline/checkbox-group-inline.example.component.ts":2661,"./checkbox-group-justified/checkbox-group-justified.example.component.html":82620,"./checkbox-group-justified/checkbox-group-justified.example.component.ts":43725,"./checkbox-group-test/checkbox-group-test.component.html":86127,"./checkbox-group-test/checkbox-group-test.component.ts":97822,"./checkbox-group-visual-test/checkbox-group-visual-test.component.html":14308,"./checkbox-group-visual-test/checkbox-group-visual-test.component.ts":57559,"./checkbox-group.module.ts":11753,"./index.ts":60792,"components/demo/checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.html":5301,"components/demo/checkbox-group/checkbox-group-basic/checkbox-group-basic.example.component.ts":41708,"components/demo/checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.html":48600,"components/demo/checkbox-group/checkbox-group-docs/checkbox-group-docs.example.component.ts":52023,"components/demo/checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.html":99415,"components/demo/checkbox-group/checkbox-group-in-form/checkbox-group-in-form.example.component.ts":87782,"components/demo/checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.html":62359,"components/demo/checkbox-group/checkbox-group-inline/checkbox-group-inline.example.component.ts":2661,"components/demo/checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.html":82620,"components/demo/checkbox-group/checkbox-group-justified/checkbox-group-justified.example.component.ts":43725,"components/demo/checkbox-group/checkbox-group-test/checkbox-group-test.component.html":86127,"components/demo/checkbox-group/checkbox-group-test/checkbox-group-test.component.ts":97822,"components/demo/checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.html":14308,"components/demo/checkbox-group/checkbox-group-visual-test/checkbox-group-visual-test.component.ts":57559,"components/demo/checkbox-group/checkbox-group.module.ts":11753,"components/demo/checkbox-group/index.ts":60792};function h(e){var u=r(e);return i(u)}function r(e){if(!i.o(c,e)){var u=new Error("Cannot find module '"+e+"'");throw u.code="MODULE_NOT_FOUND",u}return c[e]}h.keys=function(){return Object.keys(c)},h.resolve=r,l.exports=h,h.id=11481},51310:(l,s,i)=>{"use strict";i.r(s),i.d(s,{CheckboxGroupModule:()=>L});var c=i(93075),h=i(11420),r=i(73303),e=i(5e3),u=i(81453),p=i(69808),b=i(59137),m=i(90697);function g(t,a){1&t&&(e.TgZ(0,"nui-message",7)(1,"b"),e.SDv(2,8),e.qZA()()),2&t&&e.Q6J("allowDismiss",!0)}function x(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",9),e._uU(1),e.qZA()),2&t){const o=a.$implicit;e.Q6J("value",o),e.xp6(1),e.hij(" ",o," ")}}let d=(()=>{class t{constructor(o,n){this.formBuilder=o,this.toastService=n,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.cabbage]}ngOnInit(){this.myForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control([this.cabbage,this.potato],[c.kI.required,c.kI.minLength(3)])})}onSubmit(){console.log(this.myForm),this.toastService.success({message:$localize`Your form is valid!`})}isChecked(o){return this.selectedVegetables.indexOf(o)>-1}}return t.\u0275fac=function(o){return new(o||t)(e.Y36(c.qu),e.Y36(r.klp))},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-in-form-example"]],decls:7,vars:4,consts:function(){let a,o;return a=$localize`:␟6d7c89dd912494f2ac8f23ea53911febf6877a94␟6983789815427820617: Submit `,o=$localize`:␟aaf9b8331666795542f417fe39c78014513ca737␟3498101055154698277:Select minimum 3 checkboxes!`,[[3,"formGroup","submit"],[1,"form-group"],["type","critical",3,"allowDismiss",4,"ngIf"],["id","nui-demo-checkbox-group-in-form","formControlName","checkboxGroup","name","vegetable","required",""],[3,"value",4,"ngFor","ngForOf"],["nui-button","","type","submit",3,"disabled"],a,["type","critical",3,"allowDismiss"],o,[3,"value"]]},template:function(o,n){1&o&&(e.TgZ(0,"form",0),e.NdJ("submit",function(){return n.onSubmit()}),e.TgZ(1,"div",1),e.YNc(2,g,3,1,"nui-message",2),e.TgZ(3,"nui-checkbox-group",3),e.YNc(4,x,2,2,"nui-checkbox",4),e.qZA()(),e.TgZ(5,"button",5),e.SDv(6,6),e.qZA()()),2&o&&(e.Q6J("formGroup",n.myForm),e.xp6(2),e.Q6J("ngIf",!n.myForm.controls.checkboxGroup.valid&&n.myForm.controls.checkboxGroup.touched),e.xp6(2),e.Q6J("ngForOf",n.vegetables),e.xp6(1),e.Q6J("disabled",n.myForm.disabled||n.myForm.controls.checkboxGroup.invalid))},directives:[c._Y,c.JL,c.sg,p.O5,u.A,c.JJ,c.u,c.Q7,p.sg,b.b,m.r],encapsulation:2}),t})();function T(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",12),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}function k(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",13),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("hint",n.hints.indexOf(o)>=0?n.hints[n.hints.indexOf(o)]:null)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}let f=(()=>{class t{constructor(o){this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(o){return this.selectedVegetables.indexOf(o)>-1}}return t.\u0275fac=function(o){return new(o||t)(e.Y36(c.qu))},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-test-example"]],decls:22,vars:24,consts:[[1,"container","d-flex"],[1,"d-flex","flex-column","mr-5"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","checkboxGroup2"],[3,"value","disabled","checked"],["id","nui-demo-checkbox-group-part-of-form"],["hint","This is some help text",3,"value","checked"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(o,n){1&o&&(e.TgZ(0,"div",0)(1,"div",1)(2,"nui-checkbox-group",2),e.YNc(3,T,2,3,"nui-checkbox",3),e.TgZ(4,"nui-checkbox",4),e._uU(5),e.qZA()()(),e.TgZ(6,"div",5)(7,"nui-checkbox-group",6),e.YNc(8,k,2,4,"nui-checkbox",7),e.qZA()(),e.TgZ(9,"div",5)(10,"form",8)(11,"nui-checkbox-group",9)(12,"nui-checkbox",10),e._uU(13),e.qZA(),e.TgZ(14,"nui-checkbox",10),e._uU(15),e.qZA(),e.TgZ(16,"nui-checkbox",10),e._uU(17),e.qZA(),e.TgZ(18,"nui-checkbox",10),e._uU(19),e.qZA()()()(),e.TgZ(20,"div",1),e._UZ(21,"nui-checkbox-group-in-form-example",11),e.qZA()()),2&o&&(e.xp6(2),e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables),e.xp6(1),e.Q6J("value",n.disabledOne)("checked",!n.isChecked(n.disabledOne)),e.xp6(1),e.Oqu(n.disabledOne),e.xp6(2),e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables),e.xp6(2),e.Q6J("formGroup",n.testForm),e.xp6(2),e.Q6J("value",n.vegetables[0])("disabled",!0)("checked",n.isChecked(n.vegetables[0])),e.xp6(1),e.hij(" ",n.vegetables[0],""),e.xp6(1),e.Q6J("value",n.vegetables[1])("disabled",!1)("checked",n.isChecked(n.vegetables[1])),e.xp6(1),e.hij(" ",n.vegetables[1],""),e.xp6(1),e.Q6J("value",n.vegetables[2])("disabled",!0)("checked",n.isChecked(n.vegetables[2])),e.xp6(1),e.hij(" ",n.vegetables[2],""),e.xp6(1),e.Q6J("value",n.vegetables[3])("disabled",!1)("checked",n.isChecked(n.vegetables[3])),e.xp6(1),e.hij(" ",n.vegetables[3],""))},directives:[u.A,p.sg,b.b,c._Y,c.JL,c.sg,c.JJ,c.u,d],encapsulation:2}),t})();var O=i(62698);function E(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",2),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}let C=(()=>{class t{constructor(o){this.toastService=o,this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}isChecked(o){return this.selectedVegetables.indexOf(o)>-1}onValueChange(o){this.toastService.success({message:$localize`Selected checkboxes: `+o})}}return t.\u0275fac=function(o){return new(o||t)(e.Y36(r.klp))},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-basic-example"]],decls:2,vars:2,consts:function(){let a;return a=$localize`:␟ba785d6cbb33a003a3ce1d20077ba67264374284␟829155627086234075:This is some help text`,[["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values","valuesChange"],["hint",a,3,"value","checked",4,"ngFor","ngForOf"],["hint",a,3,"value","checked"]]},template:function(o,n){1&o&&(e.TgZ(0,"nui-checkbox-group",0),e.NdJ("valuesChange",function(Z){return n.onValueChange(Z)}),e.YNc(1,E,2,3,"nui-checkbox",1),e.qZA()),2&o&&(e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables))},directives:[u.A,p.sg,b.b],encapsulation:2}),t})();function v(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",2),e._uU(1),e.qZA()),2&t){const o=a.$implicit;e.Q6J("value",o),e.xp6(1),e.hij(" ",o," ")}}let A=(()=>{class t{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato]}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-inline-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[3,"value"]],template:function(o,n){1&o&&(e.TgZ(0,"nui-checkbox-group",0),e.YNc(1,v,2,2,"nui-checkbox",1),e.qZA()),2&o&&(e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables))},directives:[u.A,p.sg,b.b],encapsulation:2}),t})();function I(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",2),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("hint",n.hints.indexOf(o)>=0?n.hints[n.hints.indexOf(o)]:null)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}let R=(()=>{class t{constructor(){this.cabbage=$localize`Cabbage`,this.potato=$localize`Potato`,this.tomato=$localize`Tomato`,this.carrot=$localize`Carrot`,this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.hints=[this.cabbage,this.tomato],this.selectedVegetables=[this.potato,this.tomato]}isChecked(o){return this.selectedVegetables.indexOf(o)>-1}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-justified-example"]],decls:2,vars:2,consts:[["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","hint","checked",4,"ngFor","ngForOf"],[1,"nui-checkbox--justified",3,"value","hint","checked"]],template:function(o,n){1&o&&(e.TgZ(0,"nui-checkbox-group",0),e.YNc(1,I,2,4,"nui-checkbox",1),e.qZA()),2&o&&(e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables))},directives:[u.A,p.sg,b.b],encapsulation:2}),t})();function S(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",17),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}function F(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",18),e._uU(1),e.qZA()),2&t){const o=a.$implicit;e.Q6J("value",o),e.xp6(1),e.hij(" ",o," ")}}function _(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",19),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}function U(t,a){if(1&t&&(e.TgZ(0,"nui-checkbox",20),e._uU(1),e.qZA()),2&t){const o=a.$implicit,n=e.oxw();e.Q6J("value",o)("checked",n.isChecked(o)),e.xp6(1),e.hij(" ",o," ")}}const H=[{path:"",component:(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-docs-example"]],decls:74,vars:0,consts:[["filenamePrefix","checkbox-group-basic","exampleTitle","Basic Usage"],["filenamePrefix","checkbox-group-inline","exampleTitle","Inline"],["filenamePrefix","checkbox-group-in-form","exampleTitle","Part of Form"],["filenamePrefix","checkbox-group-justified","exampleTitle","Justified"]],template:function(o,n){1&o&&(e.TgZ(0,"h2"),e._uU(1,"Required Modules"),e.qZA(),e.TgZ(2,"ul")(3,"li")(4,"code"),e._uU(5,"NuiCheckboxModule"),e.qZA()()(),e.TgZ(6,"h2"),e._uU(7,"Basic Usage"),e.qZA(),e.TgZ(8,"p"),e._uU(9," The "),e.TgZ(10,"code"),e._uU(11,"<nui-checkbox-group>"),e.qZA(),e._uU(12," component is used for combining "),e.TgZ(13,"code"),e._uU(14,"<nui-checkbox>"),e.qZA(),e._uU(15," components into a group. Use the "),e.TgZ(16,"code"),e._uU(17,"name"),e.qZA(),e._uU(18,' input to set the "name" attribute for the inner '),e.TgZ(19,"code"),e._uU(20,"<nui-checkbox>"),e.qZA(),e._uU(21," input elements. To get the values of the "),e.TgZ(22,"code"),e._uU(23,"<nui-checkbox>"),e.qZA(),e._uU(24," child components use the "),e.TgZ(25,"code"),e._uU(26,"values"),e.qZA(),e._uU(27," input which is an array of checked state values. To act on checkbox value changes, bind to the "),e.TgZ(28,"code"),e._uU(29,"(valuesChange)"),e.qZA(),e._uU(30," output.\n"),e.qZA(),e.TgZ(31,"nui-example-wrapper",0),e._UZ(32,"nui-checkbox-group-basic-example"),e.qZA(),e.TgZ(33,"h2"),e._uU(34,"Inline"),e.qZA(),e.TgZ(35,"p"),e._uU(36," Use the "),e.TgZ(37,"code"),e._uU(38,"nui-checkbox-group-inline"),e.qZA(),e._uU(39," class to display checkbox group inline.\n"),e.qZA(),e.TgZ(40,"nui-example-wrapper",1),e._UZ(41,"nui-checkbox-group-inline-example"),e.qZA(),e.TgZ(42,"h2"),e._uU(43,"Part of Form"),e.qZA(),e.TgZ(44,"p")(45,"code"),e._uU(46,"<nui-checkbox-group>"),e.qZA(),e._uU(47," can be used in reactive forms."),e.qZA(),e.TgZ(48,"nui-example-wrapper",2),e._UZ(49,"nui-checkbox-group-in-form-example"),e.qZA(),e.TgZ(50,"h2"),e._uU(51,"Justified"),e.qZA(),e.TgZ(52,"p"),e._uU(53," To justify "),e.TgZ(54,"code"),e._uU(55,"<nui-checkbox>"),e.qZA(),e._uU(56," to the width of "),e.TgZ(57,"code"),e._uU(58,"<nui-checkbox-group>"),e.qZA(),e._uU(59," (or simply parent element, in case "),e.TgZ(60,"code"),e._uU(61,"<nui-checkbox>"),e.qZA(),e._uU(62," is used not as a part of "),e.TgZ(63,"code"),e._uU(64,"<nui-checkbox-group>"),e.qZA(),e._uU(65,"), add "),e.TgZ(66,"code"),e._uU(67,"nui-checkbox--justified"),e.qZA(),e._uU(68," class to the "),e.TgZ(69,"code"),e._uU(70,"<nui-checkbox>"),e.qZA(),e._uU(71,".\n"),e.qZA(),e.TgZ(72,"nui-example-wrapper",3),e._UZ(73,"nui-checkbox-group-justified-example"),e.qZA())},directives:[O.h,C,A,d,R],encapsulation:2}),t})(),data:{srlc:{stage:r.We9.ga},showThemeSwitcher:!0}},{path:"checkbox-group-visual-test",component:(()=>{class t{constructor(o){this.formBuilder=o,this.cabbage="Cabbage",this.potato="Potato",this.tomato="Tomato",this.carrot="Carrot",this.disabledOne="DISABLED",this.vegetables=[this.cabbage,this.potato,this.tomato,this.carrot],this.selectedVegetables=[this.potato,this.tomato,this.disabledOne]}ngOnInit(){this.testForm=this.formBuilder.group({checkboxGroup:this.formBuilder.control({value:this.selectedVegetables,disabled:!0}),checkboxGroup2:this.formBuilder.control({value:this.selectedVegetables,disabled:!1})})}isChecked(o){return this.selectedVegetables.indexOf(o)>-1}}return t.\u0275fac=function(o){return new(o||t)(e.Y36(c.qu))},t.\u0275cmp=e.Xpm({type:t,selectors:[["nui-checkbox-group-visual-test"]],decls:42,vars:28,consts:[[1,"container"],[1,"row"],[1,"col"],["id","nui-demo-checkbox-group-basic","name","vegetable",3,"values"],["hint","This is some help text",3,"value","checked",4,"ngFor","ngForOf"],["hint","If it's not disabled ring the alarm!","id","nui-demo-checkbox-group-1-disabled-checkbox","disabled","true",3,"value","checked"],["id","nui-demo-checkbox-group-inline","name","vegetable",1,"nui-checkbox-group-inline",3,"values"],[3,"value",4,"ngFor","ngForOf"],[1,"w-100"],["id","nui-demo-checkbox-group-justified","name","vegetable",3,"values"],["class","nui-checkbox--justified",3,"value","checked",4,"ngFor","ngForOf"],[3,"formGroup"],["id","nui-demo-checkbox-group-in-form-disabled-checkboxes","name","vegetable","formControlName","enabledCheckboxGroup"],[3,"value","disabled","checked"],[1,"d-flex","flex-column","mt-5"],["id","nui-demo-checkbox-group-in-form","name","vegetable","formControlName","disabledCheckboxGroup"],[3,"value","checked",4,"ngFor","ngForOf"],["hint","This is some help text",3,"value","checked"],[3,"value"],[1,"nui-checkbox--justified",3,"value","checked"],[3,"value","checked"]],template:function(o,n){1&o&&(e.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"h3"),e._uU(4,"Basic Checkbox-Group with Hint Text"),e.qZA(),e.TgZ(5,"nui-checkbox-group",3),e.YNc(6,S,2,3,"nui-checkbox",4),e.TgZ(7,"nui-checkbox",5),e._uU(8),e.qZA()(),e._UZ(9,"hr"),e.qZA(),e.TgZ(10,"div",2)(11,"h3"),e._uU(12,"Inline Checkbox-Group"),e.qZA(),e.TgZ(13,"nui-checkbox-group",6),e.YNc(14,F,2,2,"nui-checkbox",7),e.qZA(),e._UZ(15,"hr"),e.qZA(),e._UZ(16,"div",8),e.TgZ(17,"div",2)(18,"h3"),e._uU(19,"Justified Checkbox-Group"),e.qZA(),e.TgZ(20,"nui-checkbox-group",9),e.YNc(21,_,2,3,"nui-checkbox",10),e.qZA(),e._UZ(22,"hr"),e.qZA(),e.TgZ(23,"div",2)(24,"h3"),e._uU(25,"Disabled checkboxes within the form"),e.qZA(),e.TgZ(26,"form",11)(27,"nui-checkbox-group",12)(28,"nui-checkbox",13),e._uU(29),e.qZA(),e.TgZ(30,"nui-checkbox",13),e._uU(31),e.qZA(),e.TgZ(32,"nui-checkbox",13),e._uU(33),e.qZA(),e.TgZ(34,"nui-checkbox",13),e._uU(35),e.qZA()()()()(),e.TgZ(36,"div",14)(37,"h3"),e._uU(38,"Disabled checkboxes within the disabled form"),e.qZA(),e.TgZ(39,"form",11)(40,"nui-checkbox-group",15),e.YNc(41,U,2,3,"nui-checkbox",16),e.qZA()()()()),2&o&&(e.xp6(5),e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables),e.xp6(1),e.Q6J("value",n.disabledOne)("checked",!n.isChecked(n.disabledOne)),e.xp6(1),e.Oqu(n.disabledOne),e.xp6(5),e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables),e.xp6(6),e.Q6J("values",n.selectedVegetables),e.xp6(1),e.Q6J("ngForOf",n.vegetables),e.xp6(5),e.Q6J("formGroup",n.testForm),e.xp6(2),e.Q6J("value",n.vegetables[0])("disabled",!0)("checked",n.isChecked(n.vegetables[0])),e.xp6(1),e.hij(" ",n.vegetables[0],""),e.xp6(1),e.Q6J("value",n.vegetables[1])("disabled",!1)("checked",n.isChecked(n.vegetables[1])),e.xp6(1),e.hij(" ",n.vegetables[1],""),e.xp6(1),e.Q6J("value",n.vegetables[2])("disabled",!0)("checked",n.isChecked(n.vegetables[2])),e.xp6(1),e.hij(" ",n.vegetables[2],""),e.xp6(1),e.Q6J("value",n.vegetables[3])("disabled",!1)("checked",n.isChecked(n.vegetables[3])),e.xp6(1),e.hij(" ",n.vegetables[3],""),e.xp6(4),e.Q6J("formGroup",n.testForm),e.xp6(2),e.Q6J("ngForOf",n.vegetables))},directives:[u.A,p.sg,b.b,c._Y,c.JL,c.sg,c.JJ,c.u],encapsulation:2}),t})(),data:{srlc:{hideIndicator:!0}}},{path:"checkbox-group-test",component:f,data:{srlc:{hideIndicator:!0}}}];let L=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({providers:[{provide:r.V3$,useFactory:()=>i(11481)}],imports:[[r.LRI,r.vvu,c.u5,c.UX,r.Az_,h.Bz.forChild(H)],h.Bz]}),t})()},5301:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<nui-checkbox-group\n    id="nui-demo-checkbox-group-basic"\n    name="vegetable"\n    [values]="selectedVegetables"\n    (valuesChange)="onValueChange($event)"\n>\n    <nui-checkbox\n        *ngFor="let vegetable of vegetables"\n        [value]="vegetable"\n        i18n-hint\n        hint="This is some help text"\n        [checked]="isChecked(vegetable)"\n    >\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},41708:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-basic-example",\n    templateUrl: "./checkbox-group-basic.example.component.html",\n})\nexport class CheckboxGroupBasicExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor(private toastService: ToastService) {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n\n    public onValueChange(event: any) {\n        this.toastService.success({\n            message: $localize`Selected checkboxes: ` + event,\n        });\n    }\n}\n'},48600:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiCheckboxModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    The <code>&lt;nui-checkbox-group&gt;</code> component is used for combining\n    <code>&lt;nui-checkbox&gt;</code> components into a group. Use the\n    <code>name</code> input to set the "name" attribute for the inner\n    <code>&lt;nui-checkbox&gt;</code> input elements. To get the values of the\n    <code>&lt;nui-checkbox&gt;</code> child components use the\n    <code>values</code> input which is an array of checked state values. To act\n    on checkbox value changes, bind to the <code>(valuesChange)</code> output.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-basic"\n    exampleTitle="Basic Usage"\n>\n    <nui-checkbox-group-basic-example></nui-checkbox-group-basic-example>\n</nui-example-wrapper>\n\n<h2>Inline</h2>\n<p>\n    Use the <code>nui-checkbox-group-inline</code> class to display checkbox\n    group inline.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-inline"\n    exampleTitle="Inline"\n>\n    <nui-checkbox-group-inline-example></nui-checkbox-group-inline-example>\n</nui-example-wrapper>\n\n<h2>Part of Form</h2>\n<p><code>&lt;nui-checkbox-group&gt;</code> can be used in reactive forms.</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-in-form"\n    exampleTitle="Part of Form"\n>\n    <nui-checkbox-group-in-form-example></nui-checkbox-group-in-form-example>\n</nui-example-wrapper>\n\n<h2>Justified</h2>\n<p>\n    To justify <code>&lt;nui-checkbox&gt;</code> to the width of\n    <code>&lt;nui-checkbox-group&gt;</code> (or simply parent element, in case\n    <code>&lt;nui-checkbox&gt;</code> is used not as a part of\n    <code>&lt;nui-checkbox-group&gt;</code>), add\n    <code>nui-checkbox--justified</code> class to the\n    <code>&lt;nui-checkbox&gt;</code>.\n</p>\n<nui-example-wrapper\n    filenamePrefix="checkbox-group-justified"\n    exampleTitle="Justified"\n>\n    <nui-checkbox-group-justified-example></nui-checkbox-group-justified-example>\n</nui-example-wrapper>\n'},52023:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-docs-example",\n    templateUrl: "./checkbox-group-docs.example.component.html",\n})\nexport class CheckboxGroupExampleComponent {}\n'},99415:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<form [formGroup]="myForm" (submit)="onSubmit()">\n    <div class="form-group">\n        <nui-message\n            [allowDismiss]="true"\n            type="critical"\n            *ngIf="\n                !myForm.controls[\'checkboxGroup\'].valid &&\n                myForm.controls[\'checkboxGroup\'].touched\n            "\n        >\n            <b i18n>Select minimum 3 checkboxes!</b>\n        </nui-message>\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-in-form"\n            formControlName="checkboxGroup"\n            name="vegetable"\n            required\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <button\n        nui-button\n        type="submit"\n        [disabled]="myForm.disabled || myForm.controls[\'checkboxGroup\'].invalid"\n        i18n\n    >\n        Submit\n    </button>\n</form>\n'},87782:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup, Validators } from "@angular/forms";\n\nimport { ToastService } from "@nova-ui/bits";\n\n@Component({\n    selector: "nui-checkbox-group-in-form-example",\n    templateUrl: "./checkbox-group-in-form.example.component.html",\n})\nexport class CheckboxGroupInFormExampleComponent implements OnInit {\n    public myForm: FormGroup;\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.cabbage];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private toastService: ToastService\n    ) {}\n\n    public ngOnInit() {\n        this.myForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control(\n                [this.cabbage, this.potato],\n                [Validators.required, Validators.minLength(3)]\n            ),\n        });\n    }\n\n    public onSubmit() {\n        console.log(this.myForm);\n        this.toastService.success({ message: $localize`Your form is valid!` });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},62359:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<nui-checkbox-group\n    id="nui-demo-checkbox-group-inline"\n    class="nui-checkbox-group-inline"\n    [values]="selectedVegetables"\n    name="vegetable"\n>\n    <nui-checkbox *ngFor="let vegetable of vegetables" [value]="vegetable">\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},2661:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-inline-example",\n    templateUrl: "./checkbox-group-inline.example.component.html",\n})\nexport class CheckboxGroupInlineExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n}\n'},82620:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<nui-checkbox-group\n    id="nui-demo-checkbox-group-justified"\n    name="vegetable"\n    [values]="selectedVegetables"\n>\n    <nui-checkbox\n        *ngFor="let vegetable of vegetables"\n        [value]="vegetable"\n        i18n-hint\n        [hint]="\n            hints.indexOf(vegetable) >= 0\n                ? hints[hints.indexOf(vegetable)]\n                : null\n        "\n        [checked]="isChecked(vegetable)"\n        class="nui-checkbox--justified"\n    >\n        {{ vegetable }}\n    </nui-checkbox>\n</nui-checkbox-group>\n'},43725:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component } from "@angular/core";\n\n@Component({\n    selector: "nui-checkbox-group-justified-example",\n    templateUrl: "./checkbox-group-justified.example.component.html",\n})\nexport class CheckboxGroupJustifiedExampleComponent {\n    public cabbage = $localize`Cabbage`;\n    public potato = $localize`Potato`;\n    public tomato = $localize`Tomato`;\n    public carrot = $localize`Carrot`;\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato];\n\n    constructor() {}\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},86127:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<div class="container d-flex">\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-basic"\n            name="vegetable"\n            [values]="selectedVegetables"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n                hint="This is some help text"\n                [checked]="isChecked(vegetable)"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n            <nui-checkbox\n                hint="If it\'s not disabled ring the alarm!"\n                id="nui-demo-checkbox-group-1-disabled-checkbox"\n                [value]="disabledOne"\n                [checked]="!isChecked(disabledOne)"\n                disabled="true"\n                >{{ disabledOne }}</nui-checkbox\n            >\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <nui-checkbox-group\n            id="nui-demo-checkbox-group-justified"\n            name="vegetable"\n            [values]="selectedVegetables"\n        >\n            <nui-checkbox\n                *ngFor="let vegetable of vegetables"\n                [value]="vegetable"\n                [hint]="\n                    hints.indexOf(vegetable) >= 0\n                        ? hints[hints.indexOf(vegetable)]\n                        : null\n                "\n                [checked]="isChecked(vegetable)"\n                class="nui-checkbox--justified"\n            >\n                {{ vegetable }}\n            </nui-checkbox>\n        </nui-checkbox-group>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <form [formGroup]="testForm">\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                name="vegetable"\n                formControlName="checkboxGroup2"\n            >\n                <nui-checkbox\n                    [value]="vegetables[0]"\n                    [disabled]="true"\n                    [checked]="isChecked(vegetables[0])"\n                >\n                    {{ vegetables[0] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[1]"\n                    [disabled]="false"\n                    [checked]="isChecked(vegetables[1])"\n                >\n                    {{ vegetables[1] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[2]"\n                    [disabled]="true"\n                    [checked]="isChecked(vegetables[2])"\n                >\n                    {{ vegetables[2] }}</nui-checkbox\n                >\n                <nui-checkbox\n                    [value]="vegetables[3]"\n                    [disabled]="false"\n                    [checked]="isChecked(vegetables[3])"\n                >\n                    {{ vegetables[3] }}</nui-checkbox\n                >\n            </nui-checkbox-group>\n        </form>\n    </div>\n    <div class="d-flex flex-column mr-5">\n        <nui-checkbox-group-in-form-example\n            id="nui-demo-checkbox-group-part-of-form"\n        ></nui-checkbox-group-in-form-example>\n    </div>\n</div>\n'},97822:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-test-example",\n    templateUrl: "checkbox-group-test.component.html",\n})\nexport class CheckboxGroupTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public hints = [this.cabbage, this.tomato];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},14308:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='<div class="container">\n    <div class="row">\n        <div class="col">\n            <h3>Basic Checkbox-Group with Hint Text</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-basic"\n                name="vegetable"\n                [values]="selectedVegetables"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    hint="This is some help text"\n                    [checked]="isChecked(vegetable)"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n                <nui-checkbox\n                    hint="If it\'s not disabled ring the alarm!"\n                    id="nui-demo-checkbox-group-1-disabled-checkbox"\n                    [value]="disabledOne"\n                    [checked]="!isChecked(disabledOne)"\n                    disabled="true"\n                    >{{ disabledOne }}</nui-checkbox\n                >\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Inline Checkbox-Group</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-inline"\n                class="nui-checkbox-group-inline"\n                [values]="selectedVegetables"\n                name="vegetable"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="w-100"></div>\n        <div class="col">\n            <h3>Justified Checkbox-Group</h3>\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-justified"\n                name="vegetable"\n                [values]="selectedVegetables"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    [checked]="isChecked(vegetable)"\n                    class="nui-checkbox--justified"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n            <hr />\n        </div>\n        <div class="col">\n            <h3>Disabled checkboxes within the form</h3>\n            <form [formGroup]="testForm">\n                <nui-checkbox-group\n                    id="nui-demo-checkbox-group-in-form-disabled-checkboxes"\n                    name="vegetable"\n                    formControlName="enabledCheckboxGroup"\n                >\n                    <nui-checkbox\n                        [value]="vegetables[0]"\n                        [disabled]="true"\n                        [checked]="isChecked(vegetables[0])"\n                    >\n                        {{ vegetables[0] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[1]"\n                        [disabled]="false"\n                        [checked]="isChecked(vegetables[1])"\n                    >\n                        {{ vegetables[1] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[2]"\n                        [disabled]="true"\n                        [checked]="isChecked(vegetables[2])"\n                    >\n                        {{ vegetables[2] }}</nui-checkbox\n                    >\n                    <nui-checkbox\n                        [value]="vegetables[3]"\n                        [disabled]="false"\n                        [checked]="isChecked(vegetables[3])"\n                    >\n                        {{ vegetables[3] }}</nui-checkbox\n                    >\n                </nui-checkbox-group>\n            </form>\n        </div>\n    </div>\n    <div class="d-flex flex-column mt-5">\n        <h3>Disabled checkboxes within the disabled form</h3>\n        <form [formGroup]="testForm">\n            <nui-checkbox-group\n                id="nui-demo-checkbox-group-in-form"\n                name="vegetable"\n                formControlName="disabledCheckboxGroup"\n            >\n                <nui-checkbox\n                    *ngFor="let vegetable of vegetables"\n                    [value]="vegetable"\n                    [checked]="isChecked(vegetable)"\n                >\n                    {{ vegetable }}\n                </nui-checkbox>\n            </nui-checkbox-group>\n        </form>\n    </div>\n</div>\n'},57559:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { Component, OnInit } from "@angular/core";\nimport { FormBuilder, FormGroup } from "@angular/forms";\n\n@Component({\n    selector: "nui-checkbox-group-visual-test",\n    templateUrl: "./checkbox-group-visual-test.component.html",\n})\nexport class CheckboxGroupVisualTestComponent implements OnInit {\n    public testForm: FormGroup;\n    public cabbage = "Cabbage";\n    public potato = "Potato";\n    public tomato = "Tomato";\n    public carrot = "Carrot";\n    public disabledOne = "DISABLED";\n    public vegetables = [this.cabbage, this.potato, this.tomato, this.carrot];\n    public selectedVegetables = [this.potato, this.tomato, this.disabledOne];\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.testForm = this.formBuilder.group({\n            checkboxGroup: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: true,\n            }),\n            checkboxGroup2: this.formBuilder.control({\n                value: this.selectedVegetables,\n                disabled: false,\n            }),\n        });\n    }\n\n    public isChecked(vegetable: string): boolean {\n        return this.selectedVegetables.indexOf(vegetable) > -1;\n    }\n}\n'},11753:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nimport { NgModule } from "@angular/core";\nimport { FormsModule, ReactiveFormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\n\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCheckboxModule,\n    NuiDocsModule,\n    SrlcStage,\n} from "@nova-ui/bits";\n\nimport { CheckboxGroupTestComponent } from "./checkbox-group-test/checkbox-group-test.component";\nimport {\n    CheckboxGroupBasicExampleComponent,\n    CheckboxGroupExampleComponent,\n    CheckboxGroupInFormExampleComponent,\n    CheckboxGroupInlineExampleComponent,\n    CheckboxGroupJustifiedExampleComponent,\n    CheckboxGroupVisualTestComponent,\n} from "./index";\n\nconst routes = [\n    {\n        path: "",\n        component: CheckboxGroupExampleComponent,\n        data: {\n            srlc: {\n                stage: SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: "checkbox-group-visual-test",\n        component: CheckboxGroupVisualTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n    {\n        path: "checkbox-group-test",\n        component: CheckboxGroupTestComponent,\n        data: {\n            srlc: {\n                hideIndicator: true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiCheckboxModule,\n        NuiDocsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NuiButtonModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        CheckboxGroupExampleComponent,\n        CheckboxGroupInlineExampleComponent,\n        CheckboxGroupInFormExampleComponent,\n        CheckboxGroupBasicExampleComponent,\n        CheckboxGroupVisualTestComponent,\n        CheckboxGroupJustifiedExampleComponent,\n        CheckboxGroupTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () =>\n                (<any>require).context(\n                    `!!raw-loader!./`,\n                    true,\n                    /.*\\.(ts|html|less)$/\n                ),\n        },\n    ],\n    exports: [RouterModule],\n})\nexport class CheckboxGroupModule {}\n'},60792:(l,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>c});const c='// \xa9 2022 SolarWinds Worldwide, LLC. All rights reserved.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the "Software"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n\nexport * from "./checkbox-group-docs/checkbox-group-docs.example.component";\nexport * from "./checkbox-group-inline/checkbox-group-inline.example.component";\nexport * from "./checkbox-group-basic/checkbox-group-basic.example.component";\nexport * from "./checkbox-group-in-form/checkbox-group-in-form.example.component";\nexport * from "./checkbox-group-visual-test/checkbox-group-visual-test.component";\nexport * from "./checkbox-group-justified/checkbox-group-justified.example.component";\nexport * from "./checkbox-group-test/checkbox-group-test.component";\n'}}]);