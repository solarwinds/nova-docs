{"version":3,"sources":["webpack:///demo/src/components/demo/search/search-focus-change/search-focus-change.example.component.ts","webpack:///demo/src/components/demo/search/search-focus-change/search-focus-change.example.component.html","webpack:///demo/src/components/demo/search/search-input-change/search-input-change.example.component.html?eb77","webpack:///demo/src/components/demo/search/index.ts","webpack:///demo/src/components/demo/search/search-basic/search-basic.example.component.ts?f5a3","webpack:///demo/src/components/demo/search/search-basic/search-basic.example.component.html?0acf","webpack:///demo/src/components/demo/search/search-input-change/search-input-change.example.component.ts?1054","webpack:///demo/src/components/demo/search/search-docs/search-docs.example.component.ts","webpack:///demo/src/components/demo/search/search-docs/search-docs.example.component.html","webpack:///demo/src/components/demo/search/search-on-search-cancel/search-on-search-cancel.example.component.ts?16f7","webpack:///demo/src/components/demo/search/search-focus-change/search-focus-change.example.component.html?1fb4","webpack:///demo/src/components/demo/search/search-basic/search-basic.example.component.ts","webpack:///demo/src/components/demo/search/search-basic/search-basic.example.component.html","webpack:///demo/src/components/demo/search/search-visual-test/search-visual-test.component.ts?2539","webpack:///demo/src/components/demo/search/search-placeholder/search-placeholder.example.component.html?25c2","webpack:///demo/src/components/demo/search/search-placeholder/search-placeholder.example.component.ts","webpack:///demo/src/components/demo/search/search-placeholder/search-placeholder.example.component.html","webpack:///demo/src/components/demo/search/search-visual-test/search-visual-test.component.ts","webpack:///demo/src/components/demo/search/search-visual-test/search-visual-test.component.html","webpack:///demo/src/components/demo/search/search-on-search-cancel/search-on-search-cancel.example.component.html?358a","webpack:///demo/src/components/demo/search/search.module.ts","webpack:///demo/src/components/demo/search/search-docs/search-docs.example.component.html?5694","webpack:///demo/src/components/demo/search/search.module.ts?5bd6","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?ed26","webpack:///demo/src/components/demo/search/search-test/search-test.example.component.ts?7b7e","webpack:///demo/src/components/demo/search/search-input-change/search-input-change.example.component.ts","webpack:///demo/src/components/demo/search/search-input-change/search-input-change.example.component.html","webpack:///demo/src/components/demo/search/search-test/search-test.example.component.ts","webpack:///demo/src/components/demo/search/search-test/search-test.example.component.html","webpack:///demo/src/components/demo/search/search-placeholder/search-placeholder.example.component.ts?8510","webpack:///demo/src/components/demo/search/search-test/search-test.example.component.html?8553","webpack:///demo/src/components/demo/search/search-docs/search-docs.example.component.ts?a145","webpack:///demo/src/components/demo/search/search-on-search-cancel/search-on-search-cancel.example.component.ts","webpack:///demo/src/components/demo/search/search-on-search-cancel/search-on-search-cancel.example.component.html","webpack:///demo/src/components/demo/search/search-focus-change/search-focus-change.example.component.ts?b9ad","webpack:///demo/src/components/demo/search/index.ts?c74e","webpack:///demo/src/components/demo/search/search-visual-test/search-visual-test.component.html?c6d9"],"names":["SearchFocusChangeExampleComponent","toastService","isFocused","focused","success","message","onFocusChange","setFocus","SearchDocsExampleComponent","SearchBasicExampleComponent","SearchPlaceholderExampleComponent","placeholder","SearchVisualTestComponent","value","routes","path","component","data","ga","showThemeSwitcher","SearchModule","provide","useFactory","forChild","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","SearchInputChangeExampleComponent","onInputChange","SearchTestExampleComponent","active","captureFocus","name","stringToSearch","interval","searchKey","event","doSearch","setTimeout","onSearch","onCancel","onPlaceholderValueChange","SearchOnSearchCancelExampleComponent"],"mappings":"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","file":"demo-search-search-module-es5.js","sourcesContent":["import { Component, Inject } from \"@angular/core\";\nimport { ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-search-focus-change-example\",\n    templateUrl: \"./search-focus-change.example.component.html\",\n})\n\nexport class SearchFocusChangeExampleComponent {\n    public isFocused: boolean = false;\n\n    constructor(@Inject(ToastService) public toastService: ToastService) {\n    }\n\n    public onFocusChange(focused: boolean) {\n        this.isFocused = focused;\n        this.toastService.success({message: this.isFocused ? \"Focused in!\" : \"Focused out\"});\n    }\n\n    public setFocus() {\n        this.isFocused = true;\n        this.toastService.success({message: \"Focused in!\"});\n    }\n}\n","<nui-search [captureFocus]=\"isFocused\" (focusChange)=\"onFocusChange($event)\"></nui-search>\n<button type=\"button\" nui-button class=\"mt-1\" (click)=\"setFocus()\" i18n>Focus Programmatically</button>\n","export default \"<nui-search [value]=\\\"value\\\" (inputChange)=\\\"onInputChange($event)\\\"></nui-search>\\n<p i18n class=\\\"nui-text-default\\\">Current value is {{value}}</p>\\n\";","export * from \"./search-visual-test/search-visual-test.component\";\nexport * from \"./search-basic/search-basic.example.component\";\nexport * from \"./search-docs/search-docs.example.component\";\nexport * from \"./search-placeholder/search-placeholder.example.component\";\nexport * from \"./search-focus-change/search-focus-change.example.component\";\nexport * from \"./search-test/search-test.example.component\";\nexport * from \"./search-input-change/search-input-change.example.component\";\nexport * from \"./search-on-search-cancel/search-on-search-cancel.example.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-basic-example\\\",\\n    templateUrl: \\\"search-basic.example.component.html\\\",\\n})\\n\\nexport class SearchBasicExampleComponent {\\n}\\n\";","export default \"<nui-search></nui-search>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-input-change-example\\\",\\n    templateUrl: \\\"search-input-change.example.component.html\\\",\\n})\\n\\nexport class SearchInputChangeExampleComponent {\\n    public value: string = \\\"example value\\\";\\n\\n    public onInputChange(value: string) {\\n        this.value = value;\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-search-docs-example\",\n    templateUrl: \"./search-docs.example.component.html\",\n})\nexport class SearchDocsExampleComponent  { }\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSearchModule</code>\n    </li>\n</ul>\n<h1>Basic Usage</h1>\n<p>\n    To use the search component add an <code>&lt;nui-search&gt;</code> to your template.<br>\n    <b>Note:</b> <code>&lt;nui-search&gt;</code> min-width is 180px and max-width is 400px.\n</p>\n<nui-example-wrapper filenamePrefix=\"search-basic\" exampleTitle=\"Basic Usage\">\n    <nui-search-basic-example></nui-search-basic-example>\n</nui-example-wrapper>\n\n<h1>Placeholder</h1>\n<p>\n    To set the placeholder (string that will be placed as a watermark inside of the search when it's empty) for the\n    <code>&lt;nui-search&gt;</code> use the <code>placeholder</code> input.\n</p>\n<nui-example-wrapper filenamePrefix=\"search-placeholder\" exampleTitle=\"Placeholder\">\n    <nui-search-placeholder-example></nui-search-placeholder-example>\n</nui-example-wrapper>\n\n<h1>Initial Value and Input Change</h1>\n<p>\n    To subscribe to value change in <code>&lt;nui-search&gt;</code> you can use the <code>(inputChanged)</code> output which emits\n    <code>string</code> when input field value is changed. Optionally, you can set an initial value via the <code>value</code> input.\n</p>\n<nui-example-wrapper filenamePrefix=\"search-input-change\" exampleTitle=\"Initial Value and Input Change\">\n    <nui-search-input-change-example></nui-search-input-change-example>\n</nui-example-wrapper>\n\n<h1>Capture Focus and Focus Change</h1>\n<p>\n    There is a possibility to focus search programmatically. To focus the search pass true to the <code>captureFocus</code>\n    input. Also there is a <code>(focusChange)</code> output that is fired on external focus changes (e.g. initiated by user via UI).\n    Use it if you bind an external input to <code>captureFocus</code> input for matching them both.\n</p>\n<nui-example-wrapper filenamePrefix=\"search-focus-change\" exampleTitle=\"Capture Focus and Focus Change\">\n    <nui-search-focus-change-example></nui-search-focus-change-example>\n</nui-example-wrapper>\n\n<h1>On Search and On Cancel</h1>\n<p>There are two outputs <code>(search)</code> and <code>(cancel)</code>. <code>(cancel)</code> event is fired on each\n    'cancel' button click, clears the value and emits it. <code>(search)</code> event is fired when\n    'search' button is clicked or on Enter keypress and emits value of the search.\n</p>\n<nui-example-wrapper filenamePrefix=\"search-on-search-cancel\" exampleTitle=\"On Search and On Cancel\">\n    <nui-search-on-search-cancel></nui-search-on-search-cancel>\n</nui-example-wrapper>\n","export default \"import { Component, Inject } from \\\"@angular/core\\\";\\nimport { ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-on-search-cancel\\\",\\n    templateUrl: \\\"search-on-search-cancel.example.component.html\\\",\\n})\\n\\nexport class SearchOnSearchCancelExampleComponent {\\n    constructor(@Inject(ToastService) public toastService: ToastService) { }\\n\\n    public onSearch(value: string) {\\n        this.toastService.success({message: `OnSearch triggered. Current value is: ${value}`});\\n    }\\n    public onCancel(value: string) {\\n        this.toastService.success({message: `OnCancel triggered. Current value is: ${value}`});\\n    }\\n}\\n\";","export default \"<nui-search [captureFocus]=\\\"isFocused\\\" (focusChange)=\\\"onFocusChange($event)\\\"></nui-search>\\n<button type=\\\"button\\\" nui-button class=\\\"mt-1\\\" (click)=\\\"setFocus()\\\" i18n>Focus Programmatically</button>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-search-basic-example\",\n    templateUrl: \"search-basic.example.component.html\",\n})\n\nexport class SearchBasicExampleComponent {\n}\n","<nui-search></nui-search>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-visual-test\\\",\\n    templateUrl: \\\"./search-visual-test.component.html\\\",\\n})\\nexport class SearchVisualTestComponent {\\n    public value: string = \\\"example value\\\";\\n}\\n\";","export default \"<nui-search i18n-placeholder placeholder=\\\"Type here to search...\\\"></nui-search>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-search-placeholder-example\",\n    templateUrl: \"search-placeholder.example.component.html\",\n})\n\nexport class SearchPlaceholderExampleComponent {\n    public placeholder = \"Search something...\";\n}\n","<nui-search i18n-placeholder placeholder=\"Type here to search...\"></nui-search>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-search-visual-test\",\n    templateUrl: \"./search-visual-test.component.html\",\n})\nexport class SearchVisualTestComponent {\n    public value: string = \"example value\";\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Basic Search</h3>\n            <nui-search id=\"nui-visual-test-basic-search\"></nui-search>\n        </div>\n        <div class=\"col\">\n            <h3>Search with Custom Placeholder</h3>\n            <nui-search placeholder=\"Type here to search...\" id=\"nui-visual-test-search-with-placeholder\"></nui-search>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>Search with input text</h3>\n            <nui-search [value]=\"value\" id=\"nui-visual-test-search-with-input-text\"></nui-search>\n        </div>\n    </div>\n</div>\n","export default \"<nui-search (cancel)=\\\"onCancel($event)\\\" (search)=\\\"onSearch($event)\\\"></nui-search>\\n\";","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiCommonModule,\n    NuiDocsModule,\n    NuiSearchModule,\n    NuiSelectModule,\n    NuiTextboxModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    SearchBasicExampleComponent,\n    SearchDocsExampleComponent,\n    SearchFocusChangeExampleComponent,\n    SearchInputChangeExampleComponent,\n    SearchOnSearchCancelExampleComponent,\n    SearchPlaceholderExampleComponent,\n    SearchTestExampleComponent,\n    SearchVisualTestComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: SearchDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"search-test\",\n        component: SearchTestExampleComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"search-visual-test\",\n        component: SearchVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSearchModule,\n        NuiTextboxModule,\n        NuiDocsModule,\n        NuiCommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n        NuiSelectModule,\n    ],\n    declarations: [\n        SearchTestExampleComponent,\n        SearchBasicExampleComponent,\n        SearchDocsExampleComponent,\n        SearchFocusChangeExampleComponent,\n        SearchInputChangeExampleComponent,\n        SearchOnSearchCancelExampleComponent,\n        SearchPlaceholderExampleComponent,\n        SearchVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class SearchModule {\n}\n","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiSearchModule</code>\\n    </li>\\n</ul>\\n<h1>Basic Usage</h1>\\n<p>\\n    To use the search component add an <code>&lt;nui-search&gt;</code> to your template.<br>\\n    <b>Note:</b> <code>&lt;nui-search&gt;</code> min-width is 180px and max-width is 400px.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"search-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-search-basic-example></nui-search-basic-example>\\n</nui-example-wrapper>\\n\\n<h1>Placeholder</h1>\\n<p>\\n    To set the placeholder (string that will be placed as a watermark inside of the search when it's empty) for the\\n    <code>&lt;nui-search&gt;</code> use the <code>placeholder</code> input.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"search-placeholder\\\" exampleTitle=\\\"Placeholder\\\">\\n    <nui-search-placeholder-example></nui-search-placeholder-example>\\n</nui-example-wrapper>\\n\\n<h1>Initial Value and Input Change</h1>\\n<p>\\n    To subscribe to value change in <code>&lt;nui-search&gt;</code> you can use the <code>(inputChanged)</code> output which emits\\n    <code>string</code> when input field value is changed. Optionally, you can set an initial value via the <code>value</code> input.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"search-input-change\\\" exampleTitle=\\\"Initial Value and Input Change\\\">\\n    <nui-search-input-change-example></nui-search-input-change-example>\\n</nui-example-wrapper>\\n\\n<h1>Capture Focus and Focus Change</h1>\\n<p>\\n    There is a possibility to focus search programmatically. To focus the search pass true to the <code>captureFocus</code>\\n    input. Also there is a <code>(focusChange)</code> output that is fired on external focus changes (e.g. initiated by user via UI).\\n    Use it if you bind an external input to <code>captureFocus</code> input for matching them both.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"search-focus-change\\\" exampleTitle=\\\"Capture Focus and Focus Change\\\">\\n    <nui-search-focus-change-example></nui-search-focus-change-example>\\n</nui-example-wrapper>\\n\\n<h1>On Search and On Cancel</h1>\\n<p>There are two outputs <code>(search)</code> and <code>(cancel)</code>. <code>(cancel)</code> event is fired on each\\n    'cancel' button click, clears the value and emits it. <code>(search)</code> event is fired when\\n    'search' button is clicked or on Enter keypress and emits value of the search.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"search-on-search-cancel\\\" exampleTitle=\\\"On Search and On Cancel\\\">\\n    <nui-search-on-search-cancel></nui-search-on-search-cancel>\\n</nui-example-wrapper>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { FormsModule, ReactiveFormsModule } from \\\"@angular/forms\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiCommonModule,\\n    NuiDocsModule,\\n    NuiSearchModule,\\n    NuiSelectModule,\\n    NuiTextboxModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    SearchBasicExampleComponent,\\n    SearchDocsExampleComponent,\\n    SearchFocusChangeExampleComponent,\\n    SearchInputChangeExampleComponent,\\n    SearchOnSearchCancelExampleComponent,\\n    SearchPlaceholderExampleComponent,\\n    SearchTestExampleComponent,\\n    SearchVisualTestComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: SearchDocsExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"search-test\\\",\\n        component: SearchTestExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"search-visual-test\\\",\\n        component: SearchVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiSearchModule,\\n        NuiTextboxModule,\\n        NuiDocsModule,\\n        NuiCommonModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        RouterModule.forChild(routes),\\n        NuiSelectModule,\\n    ],\\n    declarations: [\\n        SearchTestExampleComponent,\\n        SearchBasicExampleComponent,\\n        SearchDocsExampleComponent,\\n        SearchFocusChangeExampleComponent,\\n        SearchInputChangeExampleComponent,\\n        SearchOnSearchCancelExampleComponent,\\n        SearchPlaceholderExampleComponent,\\n        SearchVisualTestComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class SearchModule {\\n}\\n\";","var map = {\n\t\"./index.ts\": \"x055\",\n\t\"./search-basic/search-basic.example.component.html\": \"Cs/D\",\n\t\"./search-basic/search-basic.example.component.ts\": \"9aOq\",\n\t\"./search-docs/search-docs.example.component.html\": \"VpSi\",\n\t\"./search-docs/search-docs.example.component.ts\": \"oUUe\",\n\t\"./search-focus-change/search-focus-change.example.component.html\": \"H7QH\",\n\t\"./search-focus-change/search-focus-change.example.component.ts\": \"ua0L\",\n\t\"./search-input-change/search-input-change.example.component.html\": \"63dL\",\n\t\"./search-input-change/search-input-change.example.component.ts\": \"EFQq\",\n\t\"./search-on-search-cancel/search-on-search-cancel.example.component.html\": \"NYqX\",\n\t\"./search-on-search-cancel/search-on-search-cancel.example.component.ts\": \"Fvf2\",\n\t\"./search-placeholder/search-placeholder.example.component.html\": \"JcK+\",\n\t\"./search-placeholder/search-placeholder.example.component.ts\": \"hRAW\",\n\t\"./search-test/search-test.example.component.html\": \"hVNC\",\n\t\"./search-test/search-test.example.component.ts\": \"e347\",\n\t\"./search-visual-test/search-visual-test.component.html\": \"xtky\",\n\t\"./search-visual-test/search-visual-test.component.ts\": \"JTk2\",\n\t\"./search.module.ts\": \"W9YW\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"YvYQ\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-search-example\\\",\\n    templateUrl: \\\"./search-test.example.component.html\\\",\\n})\\nexport class SearchTestExampleComponent {\\n    public active = false;\\n    public captureFocus = true;\\n    public name = \\\"example-name\\\";\\n    public placeholder = \\\"Placeholder\\\";\\n    public searchKey: string;\\n    public stringToSearch = `\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec efficitur rutrum lacus id vulputate.\\n        Integer eu ex eu augue efficitur luctus quis ac elit. Nam odio est, iaculis nec varius id, congue erat.\\n        Nullam mi lectus, gravida quis pretium sit amet, accumsan non elit. In tempus commodo sem ac vulputate.\\n        Sed vel sagittis purus. Integer non ornare felis. Sed aliquam, purus et euismod tincidunt, felis ligula\\n        fermentum mi, eget commodo nisl orci efficitur dui. Etiam interdum justo magna consequat, vitae\\n        hendrerit mi aliquam. Sed non ex eu purus ornare lobortis tempus id est. Aenean dictum at dui sit amet mollis.\\n        Phasellus mauris arcu, blandit id congue vitae, elementum amet enim.\\n        Pellentesque et facilisis leo, sit amet rhoncus magna. Integer commodo lobortis arcu et bibendum.\\n        Pellentesque sagittis magna sed tellus volutpat, sed eleifend justo ornare.\\n        Fusce porttitor laoreet dui a mollis.\\n    `;\\n    public value: string;\\n\\n    public interval = 2000;\\n\\n    public onCancel(value: string) {\\n        this.value = \\\"\\\";\\n        this.searchKey = \\\"\\\";\\n    }\\n\\n    public onFocusChange(event: boolean) {\\n        this.captureFocus = event;\\n    }\\n\\n    public onInputChange(value: string) {\\n        this.value = value;\\n    }\\n\\n    public onPlaceholderValueChange(event: string) {\\n        this.placeholder = event;\\n    }\\n\\n    public onSearch(value: string) {\\n        this.doSearch(value);\\n    }\\n\\n    public setFocus() {\\n        this.captureFocus = true;\\n        setTimeout(() => {\\n            this.captureFocus = false;\\n        }, this.interval);\\n    }\\n\\n    private doSearch(value: string) {\\n        this.searchKey = value;\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-search-input-change-example\",\n    templateUrl: \"search-input-change.example.component.html\",\n})\n\nexport class SearchInputChangeExampleComponent {\n    public value: string = \"example value\";\n\n    public onInputChange(value: string) {\n        this.value = value;\n    }\n}\n","<nui-search [value]=\"value\" (inputChange)=\"onInputChange($event)\"></nui-search>\n<p i18n class=\"nui-text-default\">Current value is {{value}}</p>\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-search-example\",\n    templateUrl: \"./search-test.example.component.html\",\n})\nexport class SearchTestExampleComponent {\n    public active = false;\n    public captureFocus = true;\n    public name = \"example-name\";\n    public placeholder = \"Placeholder\";\n    public searchKey: string;\n    public stringToSearch = `\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec efficitur rutrum lacus id vulputate.\n        Integer eu ex eu augue efficitur luctus quis ac elit. Nam odio est, iaculis nec varius id, congue erat.\n        Nullam mi lectus, gravida quis pretium sit amet, accumsan non elit. In tempus commodo sem ac vulputate.\n        Sed vel sagittis purus. Integer non ornare felis. Sed aliquam, purus et euismod tincidunt, felis ligula\n        fermentum mi, eget commodo nisl orci efficitur dui. Etiam interdum justo magna consequat, vitae\n        hendrerit mi aliquam. Sed non ex eu purus ornare lobortis tempus id est. Aenean dictum at dui sit amet mollis.\n        Phasellus mauris arcu, blandit id congue vitae, elementum amet enim.\n        Pellentesque et facilisis leo, sit amet rhoncus magna. Integer commodo lobortis arcu et bibendum.\n        Pellentesque sagittis magna sed tellus volutpat, sed eleifend justo ornare.\n        Fusce porttitor laoreet dui a mollis.\n    `;\n    public value: string;\n\n    public interval = 2000;\n\n    public onCancel(value: string) {\n        this.value = \"\";\n        this.searchKey = \"\";\n    }\n\n    public onFocusChange(event: boolean) {\n        this.captureFocus = event;\n    }\n\n    public onInputChange(value: string) {\n        this.value = value;\n    }\n\n    public onPlaceholderValueChange(event: string) {\n        this.placeholder = event;\n    }\n\n    public onSearch(value: string) {\n        this.doSearch(value);\n    }\n\n    public setFocus() {\n        this.captureFocus = true;\n        setTimeout(() => {\n            this.captureFocus = false;\n        }, this.interval);\n    }\n\n    private doSearch(value: string) {\n        this.searchKey = value;\n    }\n}\n","<nui-search id=\"nui-demo-search\"\n            [name]=\"name\"\n            [value]=\"value\"\n            [placeholder]=\"placeholder\"\n            [captureFocus]=\"captureFocus\"\n            (focusChange)=\"onFocusChange($event)\"\n            (inputChange)=\"onInputChange($event)\"\n            (search)=\"onSearch($event)\"\n            (cancel)=\"onCancel($event)\">\n</nui-search>\n<div>\n    <h3>Search Result:</h3>\n    <div>\n        <p [innerHTML]=\"stringToSearch | nuiHighlight: searchKey\"></p>\n    </div>\n</div>\n<h4>Input parameters:</h4>\n<form>\n    <code> placeholder </code>\n    <nui-textbox [value]=\"placeholder\"\n                 (textChange)=\"onPlaceholderValueChange($event)\"\n                 customBoxWidth=\"150px\">\n    </nui-textbox>\n    <div>\n        <div>\n            <code> captureFocus </code>\n            <span> : {{captureFocus ? 'true' : 'false'}}</span>\n        </div>\n        <button nui-button type=\"button\"\n                           id=\"nui-demo-search-set-focus-btn\"\n                           displayStyle=\"default\"\n                           (click)=\"setFocus()\">\n            Set Focus for {{interval/1000}} sec.\n        </button>\n    </div>\n</form>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-placeholder-example\\\",\\n    templateUrl: \\\"search-placeholder.example.component.html\\\",\\n})\\n\\nexport class SearchPlaceholderExampleComponent {\\n    public placeholder = \\\"Search something...\\\";\\n}\\n\";","export default \"<nui-search id=\\\"nui-demo-search\\\"\\n            [name]=\\\"name\\\"\\n            [value]=\\\"value\\\"\\n            [placeholder]=\\\"placeholder\\\"\\n            [captureFocus]=\\\"captureFocus\\\"\\n            (focusChange)=\\\"onFocusChange($event)\\\"\\n            (inputChange)=\\\"onInputChange($event)\\\"\\n            (search)=\\\"onSearch($event)\\\"\\n            (cancel)=\\\"onCancel($event)\\\">\\n</nui-search>\\n<div>\\n    <h3>Search Result:</h3>\\n    <div>\\n        <p [innerHTML]=\\\"stringToSearch | nuiHighlight: searchKey\\\"></p>\\n    </div>\\n</div>\\n<h4>Input parameters:</h4>\\n<form>\\n    <code> placeholder </code>\\n    <nui-textbox [value]=\\\"placeholder\\\"\\n                 (textChange)=\\\"onPlaceholderValueChange($event)\\\"\\n                 customBoxWidth=\\\"150px\\\">\\n    </nui-textbox>\\n    <div>\\n        <div>\\n            <code> captureFocus </code>\\n            <span> : {{captureFocus ? 'true' : 'false'}}</span>\\n        </div>\\n        <button nui-button type=\\\"button\\\"\\n                           id=\\\"nui-demo-search-set-focus-btn\\\"\\n                           displayStyle=\\\"default\\\"\\n                           (click)=\\\"setFocus()\\\">\\n            Set Focus for {{interval/1000}} sec.\\n        </button>\\n    </div>\\n</form>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-docs-example\\\",\\n    templateUrl: \\\"./search-docs.example.component.html\\\",\\n})\\nexport class SearchDocsExampleComponent  { }\\n\";","import { Component, Inject } from \"@angular/core\";\nimport { ToastService } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-search-on-search-cancel\",\n    templateUrl: \"search-on-search-cancel.example.component.html\",\n})\n\nexport class SearchOnSearchCancelExampleComponent {\n    constructor(@Inject(ToastService) public toastService: ToastService) { }\n\n    public onSearch(value: string) {\n        this.toastService.success({message: `OnSearch triggered. Current value is: ${value}`});\n    }\n    public onCancel(value: string) {\n        this.toastService.success({message: `OnCancel triggered. Current value is: ${value}`});\n    }\n}\n","<nui-search (cancel)=\"onCancel($event)\" (search)=\"onSearch($event)\"></nui-search>\n","export default \"import { Component, Inject } from \\\"@angular/core\\\";\\nimport { ToastService } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-search-focus-change-example\\\",\\n    templateUrl: \\\"./search-focus-change.example.component.html\\\",\\n})\\n\\nexport class SearchFocusChangeExampleComponent {\\n    public isFocused: boolean = false;\\n\\n    constructor(@Inject(ToastService) public toastService: ToastService) {\\n    }\\n\\n    public onFocusChange(focused: boolean) {\\n        this.isFocused = focused;\\n        this.toastService.success({message: this.isFocused ? \\\"Focused in!\\\" : \\\"Focused out\\\"});\\n    }\\n\\n    public setFocus() {\\n        this.isFocused = true;\\n        this.toastService.success({message: \\\"Focused in!\\\"});\\n    }\\n}\\n\";","export default \"export * from \\\"./search-visual-test/search-visual-test.component\\\";\\nexport * from \\\"./search-basic/search-basic.example.component\\\";\\nexport * from \\\"./search-docs/search-docs.example.component\\\";\\nexport * from \\\"./search-placeholder/search-placeholder.example.component\\\";\\nexport * from \\\"./search-focus-change/search-focus-change.example.component\\\";\\nexport * from \\\"./search-test/search-test.example.component\\\";\\nexport * from \\\"./search-input-change/search-input-change.example.component\\\";\\nexport * from \\\"./search-on-search-cancel/search-on-search-cancel.example.component\\\";\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Basic Search</h3>\\n            <nui-search id=\\\"nui-visual-test-basic-search\\\"></nui-search>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <h3>Search with Custom Placeholder</h3>\\n            <nui-search placeholder=\\\"Type here to search...\\\" id=\\\"nui-visual-test-search-with-placeholder\\\"></nui-search>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Search with input text</h3>\\n            <nui-search [value]=\\\"value\\\" id=\\\"nui-visual-test-search-with-input-text\\\"></nui-search>\\n        </div>\\n    </div>\\n</div>\\n\";"]}