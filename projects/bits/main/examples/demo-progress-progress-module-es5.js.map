{"version":3,"sources":["webpack:///demo/src/components/demo/progress/progress.module.ts","webpack:///demo/src/components/demo/progress/indeterminate-progress/indeterminate-progress.example.component.ts","webpack:///demo/src/components/demo/progress/indeterminate-progress/indeterminate-progress.example.component.html","webpack:///demo/src/components/demo/progress/progress-with-help-template/progress-with-help-template-example.component.html","webpack:///demo/src/components/demo/progress/progress-with-help-template/progress-with-help-template-example.component.ts","webpack:///demo/src/components/demo/progress/progress-visual-test/progress-visual-test.component.html?e1e2","webpack:///demo/src/components/demo/progress/indeterminate-progress/indeterminate-progress.example.component.html?e91a","webpack:///demo/src/components/demo/progress/basic-progress/basic-progress.example.component.html?ec8d","webpack:///demo/src/components/demo/progress/progress-compact/progress-compact.example.component.ts?f2a7","webpack:///demo/src/components/demo/progress/stacked-header/stacked-header.example.component.html?02e3","webpack:///demo/src/components/demo/progress/progress-visual-test/progress-visual-test.component.ts?1140","webpack:///demo/src/components/demo/progress/progress-with-help-template/progress-with-help-template-example.component.ts?17f8","webpack:///demo/src/components/demo/progress/progress-compact/progress-compact.example.component.html?1daf","webpack:///demo/src/components/demo/progress/index.ts?2224","webpack:///demo/src/components/demo/progress/progress.module.ts?2f0c","webpack:///demo/src/components/demo/progress/basic-progress/basic-progress.example.component.ts","webpack:///demo/src/components/demo/progress/basic-progress/basic-progress.example.component.html","webpack:///demo/src/components/demo/progress/progress-compact/progress-compact.example.component.ts","webpack:///demo/src/components/demo/progress/progress-compact/progress-compact.example.component.html","webpack:///demo/src/components/demo/progress/progress-visual-test/progress-visual-test.component.ts","webpack:///demo/src/components/demo/progress/progress-visual-test/progress-visual-test.component.html","webpack:///demo/src/components/demo/progress/progress-docs/progress-docs.example.component.ts?6e05","webpack:///demo/src/components/demo/progress/progress-with-help-template/progress-with-help-template-example.component.html?781c","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?8a69","webpack:///demo/src/components/demo/progress/progress-docs/progress-docs.example.component.html?7aaa","webpack:///demo/src/components/demo/progress/stacked-header/stacked-header.example.component.ts","webpack:///demo/src/components/demo/progress/stacked-header/stacked-header.example.component.html","webpack:///demo/src/components/demo/progress/progress-docs/progress-docs.example.component.ts","webpack:///demo/src/components/demo/progress/progress-docs/progress-docs.example.component.html","webpack:///demo/src/components/demo/progress/indeterminate-progress/indeterminate-progress.example.component.ts?8294","webpack:///demo/src/components/demo/progress/stacked-header/stacked-header.example.component.ts?8c5e","webpack:///demo/src/components/demo/progress/progress-test/progress-test.component.ts?a05b","webpack:///demo/src/components/demo/progress/index.ts","webpack:///demo/src/components/demo/progress/progress-test/progress-test.component.html?ae60","webpack:///demo/src/components/demo/progress/progress-test/progress-test.component.ts","webpack:///demo/src/components/demo/progress/progress-test/progress-test.component.html","webpack:///demo/src/components/demo/progress/basic-progress/basic-progress.example.component.ts?c609"],"names":["routes","path","component","data","ga","showThemeSwitcher","ProgressModule","provide","useFactory","forChild","IndeterminateProgressExampleComponent","show","isCanceled","stop","undefined","clearInterval","onCancel","startProgress","ProgressWithHelpTemplateExampleComponent","percent","intervalId","setInterval","toggleProgress","BasicProgressExampleComponent","ProgressCompactExampleComponent","ProgressVisualTestComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","StackedHeaderProgressExampleComponent","ProgressExampleComponent","ProgressTestComponent"],"mappings":"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","file":"demo-progress-progress-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiProgressModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    BasicProgressExampleComponent,\n    IndeterminateProgressExampleComponent,\n    ProgressCompactExampleComponent,\n    ProgressExampleComponent,\n    ProgressVisualTestComponent,\n    ProgressTestComponent,\n    ProgressWithHelpTemplateExampleComponent,\n    StackedHeaderProgressExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: ProgressExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"progress-visual-test\",\n        component: ProgressVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n    {\n        path: \"progress-test\",\n        component: ProgressTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiProgressModule,\n        NuiMessageModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        BasicProgressExampleComponent,\n        IndeterminateProgressExampleComponent,\n        ProgressCompactExampleComponent,\n        ProgressExampleComponent,\n        ProgressVisualTestComponent,\n        ProgressTestComponent,\n        ProgressWithHelpTemplateExampleComponent,\n        StackedHeaderProgressExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class ProgressModule {\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-indeterminate-progress-example\",\n    templateUrl: \"./indeterminate-progress.example.component.html\",\n})\nexport class IndeterminateProgressExampleComponent implements OnDestroy {\n    public show = false;\n    public isCanceled = false;\n    private stop: any = undefined;\n\n    public startProgress() {\n        this.clearInterval();\n        this.show = true;\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.stop = undefined;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.stop) {\n            clearInterval(this.stop);\n        }\n    }\n}\n","<nui-progress id=\"nui-demo-indeterminate-progress\"\n              [show]=\"show\"\n              [allowCancel]=\"true\"\n              i18n-message\n              message=\"Task Label\"\n              i18n-helpText\n              helpText=\"Optional description\"\n              (cancel)=\"onCancel()\">\n</nui-progress>\n\n<button id=\"nui-demo-indeterminate-progress-btn\"\n        nui-button\n        class=\"mt-1\"\n        type=\"button\"\n        (click)=\"startProgress()\"\n        displayStyle=\"primary\"\n        i18n>\n    Start progress\n</button>\n","<nui-progress id=\"nui-demo-basic-progress\"\n              i18n-message\n              message=\"Task Label\"\n              [show]=\"show\"\n              [helpTemplateRef]=\"helpTemplate\"\n              [percent]=\"percent\">\n</nui-progress>\n<ng-template #helpTemplate>\n    <span i18n>\n        It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\n        The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here',\n        making it look like readable English.\n    </span>\n</ng-template>\n<button nui-button class=\"mt-1\" type=\"button\" (click)=\"toggleProgress()\" displayStyle=\"primary\" i18n>\n    Start/stop progress\n</button>\n","import {Component, OnDestroy} from \"@angular/core\";\n\n@Component({\n    selector: \"nui-progress-with-help-template-example\",\n    templateUrl: \"./progress-with-help-template-example.component.html\",\n})\nexport class ProgressWithHelpTemplateExampleComponent implements OnDestroy {\n\n    public show = false;\n    public percent = 0;\n    private intervalId?: NodeJS.Timeout;\n\n    public toggleProgress() {\n        this.show = !this.show;\n\n        if (!this.show) {\n            this.clearInterval();\n            this.percent = 0;\n        } else {\n            this.intervalId = setInterval(() => {\n                if (this.percent < 100) {\n                    this.percent += 10;\n                } else {\n                    this.clearInterval();\n                    this.show = false;\n                }\n            }, 1000);\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId);\n            this.intervalId = undefined;\n        }\n    }\n}\n","export default \"\\n<div class=\\\"container\\\">\\n        <h3>Basic Popover</h3>\\n            <nui-progress\\n                id=\\\"nui-demo-basic-progress\\\"\\n                message=\\\"Task Label\\\"\\n                helpText=\\\"Optional description\\\"\\n                [show]=\\\"show\\\"\\n                [percent]=\\\"percent\\\">\\n            </nui-progress>\\n\\n            <button id=\\\"nui-demo-start-basic-progress\\\" style=\\\"margin-top: 15px\\\" nui-button type=\\\"button\\\"\\n                    (click)=\\\"startProgress()\\\"\\n                    displayStyle=\\\"primary\\\">\\n                Start progress\\n            </button>\\n        <hr />\\n\\n        <h3>Popover with stacked header and progress percentage</h3>\\n            <nui-progress\\n                id=\\\"nui-demo-stacked-header\\\"\\n                [show]=\\\"show\\\"\\n                [stacked]=\\\"true\\\"\\n                [percent]=\\\"percent\\\"\\n                [showNumber]=\\\"true\\\"\\n                [allowCancel]=\\\"true\\\"\\n                message=\\\"Task Label\\\"\\n                helpText=\\\"Optional description\\\"\\n                (cancel)=\\\"onCancel()\\\">\\n            </nui-progress>\\n        <hr />\\n\\n        <h3>Indeterminate Popover</h3>\\n            <nui-progress\\n                id=\\\"nui-demo-indeterminate-progress\\\"\\n                [show]=\\\"show\\\"\\n                [allowCancel]=\\\"true\\\"\\n                message=\\\"Task Label\\\"\\n                helpText=\\\"Optional description\\\"\\n                (cancel)=\\\"onCancel()\\\">\\n            </nui-progress>\\n        <hr />\\n</div>\\n\";","export default \"<nui-progress id=\\\"nui-demo-indeterminate-progress\\\"\\n              [show]=\\\"show\\\"\\n              [allowCancel]=\\\"true\\\"\\n              i18n-message\\n              message=\\\"Task Label\\\"\\n              i18n-helpText\\n              helpText=\\\"Optional description\\\"\\n              (cancel)=\\\"onCancel()\\\">\\n</nui-progress>\\n\\n<button id=\\\"nui-demo-indeterminate-progress-btn\\\"\\n        nui-button\\n        class=\\\"mt-1\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"startProgress()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>\\n    Start progress\\n</button>\\n\";","export default \"<nui-progress id=\\\"nui-demo-basic-progress\\\"\\n              i18n-message\\n              message=\\\"Task Label\\\"\\n              i18n-helpText\\n              helpText=\\\"Optional description\\\"\\n              [show]=\\\"show\\\"\\n              [percent]=\\\"percent\\\">\\n</nui-progress>\\n\\n<button id=\\\"nui-demo-start-basic-progress\\\"\\n        nui-button\\n        class=\\\"mt-1\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"startProgress()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>\\n    Start progress\\n</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-progress-compact-example\\\",\\n    templateUrl: \\\"./progress-compact.example.component.html\\\",\\n})\\nexport class ProgressCompactExampleComponent {\\n    public show = false;\\n\\n    public toggleProgress() {\\n        this.show = !this.show;\\n    }\\n}\\n\";","export default \"<nui-progress id=\\\"nui-demo-stacked-header\\\"\\n              [show]=\\\"show\\\"\\n              [stacked]=\\\"true\\\"\\n              [percent]=\\\"percent\\\"\\n              [showNumber]=\\\"true\\\"\\n              [allowCancel]=\\\"true\\\"\\n              i18n-message\\n              message=\\\"Task Label\\\"\\n              i18n-helpText\\n              helpText=\\\"Optional description\\\"\\n              (cancel)=\\\"onCancel()\\\">\\n</nui-progress>\\n\\n<button id=\\\"nui-demo-stacked-header-btn\\\"\\n        nui-button\\n        class=\\\"mt-1\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"startProgress()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>\\n    Start progress\\n</button>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-progress-visual-test\\\",\\n    templateUrl: \\\"./progress-visual-test.component.html\\\",\\n})\\nexport class ProgressVisualTestComponent {\\n    public show = false;\\n    public percent = 50;\\n    public isCanceled = false;\\n\\n    public startProgress() {\\n        this.show = true;\\n    }\\n\\n    public onCancel() {\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.percent = 0;\\n    }\\n}\\n\";","export default \"import {Component, OnDestroy} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-progress-with-help-template-example\\\",\\n    templateUrl: \\\"./progress-with-help-template-example.component.html\\\",\\n})\\nexport class ProgressWithHelpTemplateExampleComponent implements OnDestroy {\\n\\n    public show = false;\\n    public percent = 0;\\n    private intervalId?: NodeJS.Timeout;\\n\\n    public toggleProgress() {\\n        this.show = !this.show;\\n\\n        if (!this.show) {\\n            this.clearInterval();\\n            this.percent = 0;\\n        } else {\\n            this.intervalId = setInterval(() => {\\n                if (this.percent < 100) {\\n                    this.percent += 10;\\n                } else {\\n                    this.clearInterval();\\n                    this.show = false;\\n                }\\n            }, 1000);\\n        }\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.intervalId) {\\n            clearInterval(this.intervalId);\\n            this.intervalId = undefined;\\n        }\\n    }\\n}\\n\";","export default \"<nui-progress [show]=\\\"show\\\"\\n              compactMode=\\\"true\\\">\\n</nui-progress>\\n\\n<button nui-button\\n        class=\\\"mt-1\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"toggleProgress()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>\\n    Start/stop progress\\n</button>\\n\";","export default \"export { ProgressExampleComponent } from \\\"./progress-docs/progress-docs.example.component\\\";\\nexport { BasicProgressExampleComponent } from \\\"./basic-progress/basic-progress.example.component\\\";\\nexport { StackedHeaderProgressExampleComponent } from \\\"./stacked-header/stacked-header.example.component\\\";\\nexport { IndeterminateProgressExampleComponent } from \\\"./indeterminate-progress/indeterminate-progress.example.component\\\";\\nexport { ProgressVisualTestComponent } from \\\"./progress-visual-test/progress-visual-test.component\\\";\\nexport { ProgressTestComponent } from \\\"./progress-test/progress-test.component\\\";\\nexport { ProgressCompactExampleComponent } from \\\"./progress-compact/progress-compact.example.component\\\";\\nexport { ProgressWithHelpTemplateExampleComponent } from \\\"./progress-with-help-template/progress-with-help-template-example.component\\\";\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiDocsModule,\\n    NuiMessageModule,\\n    NuiProgressModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    BasicProgressExampleComponent,\\n    IndeterminateProgressExampleComponent,\\n    ProgressCompactExampleComponent,\\n    ProgressExampleComponent,\\n    ProgressVisualTestComponent,\\n    ProgressTestComponent,\\n    ProgressWithHelpTemplateExampleComponent,\\n    StackedHeaderProgressExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: ProgressExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"progress-visual-test\\\",\\n        component: ProgressVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"progress-test\\\",\\n        component: ProgressTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiProgressModule,\\n        NuiMessageModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        BasicProgressExampleComponent,\\n        IndeterminateProgressExampleComponent,\\n        ProgressCompactExampleComponent,\\n        ProgressExampleComponent,\\n        ProgressVisualTestComponent,\\n        ProgressTestComponent,\\n        ProgressWithHelpTemplateExampleComponent,\\n        StackedHeaderProgressExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class ProgressModule {\\n}\\n\";","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-basic-progress-example\",\n    templateUrl: \"./basic-progress.example.component.html\",\n})\nexport class BasicProgressExampleComponent implements OnDestroy {\n\n    public show = false;\n    public percent = 0;\n    public isCanceled = false;\n    private stop: any = undefined;\n\n    public startProgress() {\n        this.clearInterval();\n\n        this.show = true;\n        this.stop = setInterval(() => {\n            if (this.percent < 100) {\n                this.percent += 10;\n            } else {\n                this.onCancel();\n            }\n        }, 1000);\n    }\n\n    private onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.stop = undefined;\n        this.percent = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.stop) {\n            clearInterval(this.stop);\n        }\n    }\n}\n","<nui-progress id=\"nui-demo-basic-progress\"\n              i18n-message\n              message=\"Task Label\"\n              i18n-helpText\n              helpText=\"Optional description\"\n              [show]=\"show\"\n              [percent]=\"percent\">\n</nui-progress>\n\n<button id=\"nui-demo-start-basic-progress\"\n        nui-button\n        class=\"mt-1\"\n        type=\"button\"\n        (click)=\"startProgress()\"\n        displayStyle=\"primary\"\n        i18n>\n    Start progress\n</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-progress-compact-example\",\n    templateUrl: \"./progress-compact.example.component.html\",\n})\nexport class ProgressCompactExampleComponent {\n    public show = false;\n\n    public toggleProgress() {\n        this.show = !this.show;\n    }\n}\n","<nui-progress [show]=\"show\"\n              compactMode=\"true\">\n</nui-progress>\n\n<button nui-button\n        class=\"mt-1\"\n        type=\"button\"\n        (click)=\"toggleProgress()\"\n        displayStyle=\"primary\"\n        i18n>\n    Start/stop progress\n</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-progress-visual-test\",\n    templateUrl: \"./progress-visual-test.component.html\",\n})\nexport class ProgressVisualTestComponent {\n    public show = false;\n    public percent = 50;\n    public isCanceled = false;\n\n    public startProgress() {\n        this.show = true;\n    }\n\n    public onCancel() {\n        this.isCanceled = true;\n        this.show = false;\n        this.percent = 0;\n    }\n}\n","\n<div class=\"container\">\n        <h3>Basic Popover</h3>\n            <nui-progress\n                id=\"nui-demo-basic-progress\"\n                message=\"Task Label\"\n                helpText=\"Optional description\"\n                [show]=\"show\"\n                [percent]=\"percent\">\n            </nui-progress>\n\n            <button id=\"nui-demo-start-basic-progress\" style=\"margin-top: 15px\" nui-button type=\"button\"\n                    (click)=\"startProgress()\"\n                    displayStyle=\"primary\">\n                Start progress\n            </button>\n        <hr />\n\n        <h3>Popover with stacked header and progress percentage</h3>\n            <nui-progress\n                id=\"nui-demo-stacked-header\"\n                [show]=\"show\"\n                [stacked]=\"true\"\n                [percent]=\"percent\"\n                [showNumber]=\"true\"\n                [allowCancel]=\"true\"\n                message=\"Task Label\"\n                helpText=\"Optional description\"\n                (cancel)=\"onCancel()\">\n            </nui-progress>\n        <hr />\n\n        <h3>Indeterminate Popover</h3>\n            <nui-progress\n                id=\"nui-demo-indeterminate-progress\"\n                [show]=\"show\"\n                [allowCancel]=\"true\"\n                message=\"Task Label\"\n                helpText=\"Optional description\"\n                (cancel)=\"onCancel()\">\n            </nui-progress>\n        <hr />\n</div>\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-progress-docs-example\\\",\\n    templateUrl: \\\"./progress-docs.example.component.html\\\",\\n})\\nexport class ProgressExampleComponent {}\\n\";","export default \"<nui-progress id=\\\"nui-demo-basic-progress\\\"\\n              i18n-message\\n              message=\\\"Task Label\\\"\\n              [show]=\\\"show\\\"\\n              [helpTemplateRef]=\\\"helpTemplate\\\"\\n              [percent]=\\\"percent\\\">\\n</nui-progress>\\n<ng-template #helpTemplate>\\n    <span i18n>\\n        It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\\n        The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here',\\n        making it look like readable English.\\n    </span>\\n</ng-template>\\n<button nui-button class=\\\"mt-1\\\" type=\\\"button\\\" (click)=\\\"toggleProgress()\\\" displayStyle=\\\"primary\\\" i18n>\\n    Start/stop progress\\n</button>\\n\";","var map = {\n\t\"./basic-progress/basic-progress.example.component.html\": \"7I05\",\n\t\"./basic-progress/basic-progress.example.component.ts\": \"xgmB\",\n\t\"./indeterminate-progress/indeterminate-progress.example.component.html\": \"6Rop\",\n\t\"./indeterminate-progress/indeterminate-progress.example.component.ts\": \"gpQx\",\n\t\"./index.ts\": \"IiRQ\",\n\t\"./progress-compact/progress-compact.example.component.html\": \"Ha/3\",\n\t\"./progress-compact/progress-compact.example.component.ts\": \"8qdf\",\n\t\"./progress-docs/progress-docs.example.component.html\": \"eqow\",\n\t\"./progress-docs/progress-docs.example.component.ts\": \"bgV1\",\n\t\"./progress-test/progress-test.component.html\": \"rmCn\",\n\t\"./progress-test/progress-test.component.ts\": \"oFs4\",\n\t\"./progress-visual-test/progress-visual-test.component.html\": \"4eJT\",\n\t\"./progress-visual-test/progress-visual-test.component.ts\": \"EUBV\",\n\t\"./progress-with-help-template/progress-with-help-template-example.component.html\": \"eBzQ\",\n\t\"./progress-with-help-template/progress-with-help-template-example.component.ts\": \"F/go\",\n\t\"./progress.module.ts\": \"LwzK\",\n\t\"./stacked-header/stacked-header.example.component.html\": \"AuMd\",\n\t\"./stacked-header/stacked-header.example.component.ts\": \"jF77\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"egSN\";","export default \"<h2>Required Modules</h2>\\n    <ul>\\n        <li>\\n            <code>NuiProgressModule</code>\\n        </li>\\n    </ul>\\n\\n<h2>Basic Usage</h2>\\n\\n<p>In order to use progress component, you need to pass <code>show</code>, <code>percent</code> and <code>message</code> bindings.</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"basic-progress\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-basic-progress-example></nui-basic-progress-example>\\n</nui-example-wrapper>\\n\\n<h2>Stacked Header</h2>\\n\\n<p>\\n    Progress header could be placed on the left side. You need to pass <code>stacked</code> as true for that.\\n    Progress percents could be shown by using <code>showNumber</code> as true.\\n    Progress could be canceled by passing <code>allowCancel</code> as true and <code>cancelProgress</code> function.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"stacked-header\\\" exampleTitle=\\\"Stacked Header\\\">\\n    <nui-stacked-header-example></nui-stacked-header-example>\\n</nui-example-wrapper>\\n\\n<h2>Indeterminate</h2>\\n\\n<p>In case <code>percent</code> was not passed, indeterminate progress will be used.</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"indeterminate-progress\\\" exampleTitle=\\\"Indeterminate\\\">\\n    <nui-indeterminate-progress-example></nui-indeterminate-progress-example>\\n</nui-example-wrapper>\\n\\n<h2>Compact</h2>\\n\\n<p>\\n    To hide all elements from Progress, except for progress bar, and to remove all margins from progress bar set\\n    <code>compactMode</code> to true.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"progress-compact\\\" exampleTitle=\\\"Compact\\\">\\n    <nui-progress-compact-example></nui-progress-compact-example>\\n</nui-example-wrapper>\\n\\n<h2>Custom Help Template</h2>\\n\\n<p>\\n    In order to customize the help content that appears below the progress bar, you can pass a template\\n    via the <code>helpTemplateRef</code> input.\\n</p>\\n<nui-message type=\\\"info\\\" [allowDismiss]=\\\"false\\\">\\n    When the <code>helpTemplateRef</code> input is used, there's no need to pass a value to the\\n    <code>helpText</code> input.\\n</nui-message>\\n\\n<nui-example-wrapper filenamePrefix=\\\"progress-with-help-template\\\" exampleTitle=\\\"Custom Help Template\\\">\\n    <nui-progress-with-help-template-example></nui-progress-with-help-template-example>\\n</nui-example-wrapper>\\n\";","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-stacked-header-example\",\n    templateUrl: \"./stacked-header.example.component.html\",\n})\nexport class StackedHeaderProgressExampleComponent implements OnDestroy {\n\n    public show = false;\n    public percent = 0;\n    public isCanceled = false;\n    private stop: any = undefined;\n\n    public startProgress() {\n        this.clearInterval();\n\n        this.show = true;\n        this.stop = setInterval(() => {\n            if (this.percent < 100) {\n                this.percent += 10;\n            } else {\n                this.onCancel();\n            }\n        }, 1000);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.stop = undefined;\n        this.percent = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.stop) {\n            clearInterval(this.stop);\n        }\n    }\n}\n","<nui-progress id=\"nui-demo-stacked-header\"\n              [show]=\"show\"\n              [stacked]=\"true\"\n              [percent]=\"percent\"\n              [showNumber]=\"true\"\n              [allowCancel]=\"true\"\n              i18n-message\n              message=\"Task Label\"\n              i18n-helpText\n              helpText=\"Optional description\"\n              (cancel)=\"onCancel()\">\n</nui-progress>\n\n<button id=\"nui-demo-stacked-header-btn\"\n        nui-button\n        class=\"mt-1\"\n        type=\"button\"\n        (click)=\"startProgress()\"\n        displayStyle=\"primary\"\n        i18n>\n    Start progress\n</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-progress-docs-example\",\n    templateUrl: \"./progress-docs.example.component.html\",\n})\nexport class ProgressExampleComponent {}\n","<h2>Required Modules</h2>\n    <ul>\n        <li>\n            <code>NuiProgressModule</code>\n        </li>\n    </ul>\n\n<h2>Basic Usage</h2>\n\n<p>In order to use progress component, you need to pass <code>show</code>, <code>percent</code> and <code>message</code> bindings.</p>\n\n<nui-example-wrapper filenamePrefix=\"basic-progress\" exampleTitle=\"Basic Usage\">\n    <nui-basic-progress-example></nui-basic-progress-example>\n</nui-example-wrapper>\n\n<h2>Stacked Header</h2>\n\n<p>\n    Progress header could be placed on the left side. You need to pass <code>stacked</code> as true for that.\n    Progress percents could be shown by using <code>showNumber</code> as true.\n    Progress could be canceled by passing <code>allowCancel</code> as true and <code>cancelProgress</code> function.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"stacked-header\" exampleTitle=\"Stacked Header\">\n    <nui-stacked-header-example></nui-stacked-header-example>\n</nui-example-wrapper>\n\n<h2>Indeterminate</h2>\n\n<p>In case <code>percent</code> was not passed, indeterminate progress will be used.</p>\n\n<nui-example-wrapper filenamePrefix=\"indeterminate-progress\" exampleTitle=\"Indeterminate\">\n    <nui-indeterminate-progress-example></nui-indeterminate-progress-example>\n</nui-example-wrapper>\n\n<h2>Compact</h2>\n\n<p>\n    To hide all elements from Progress, except for progress bar, and to remove all margins from progress bar set\n    <code>compactMode</code> to true.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"progress-compact\" exampleTitle=\"Compact\">\n    <nui-progress-compact-example></nui-progress-compact-example>\n</nui-example-wrapper>\n\n<h2>Custom Help Template</h2>\n\n<p>\n    In order to customize the help content that appears below the progress bar, you can pass a template\n    via the <code>helpTemplateRef</code> input.\n</p>\n<nui-message type=\"info\" [allowDismiss]=\"false\">\n    When the <code>helpTemplateRef</code> input is used, there's no need to pass a value to the\n    <code>helpText</code> input.\n</nui-message>\n\n<nui-example-wrapper filenamePrefix=\"progress-with-help-template\" exampleTitle=\"Custom Help Template\">\n    <nui-progress-with-help-template-example></nui-progress-with-help-template-example>\n</nui-example-wrapper>\n","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-indeterminate-progress-example\\\",\\n    templateUrl: \\\"./indeterminate-progress.example.component.html\\\",\\n})\\nexport class IndeterminateProgressExampleComponent implements OnDestroy {\\n    public show = false;\\n    public isCanceled = false;\\n    private stop: any = undefined;\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.show = true;\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.stop = undefined;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.stop) {\\n            clearInterval(this.stop);\\n        }\\n    }\\n}\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-stacked-header-example\\\",\\n    templateUrl: \\\"./stacked-header.example.component.html\\\",\\n})\\nexport class StackedHeaderProgressExampleComponent implements OnDestroy {\\n\\n    public show = false;\\n    public percent = 0;\\n    public isCanceled = false;\\n    private stop: any = undefined;\\n\\n    public startProgress() {\\n        this.clearInterval();\\n\\n        this.show = true;\\n        this.stop = setInterval(() => {\\n            if (this.percent < 100) {\\n                this.percent += 10;\\n            } else {\\n                this.onCancel();\\n            }\\n        }, 1000);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.stop = undefined;\\n        this.percent = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.stop) {\\n            clearInterval(this.stop);\\n        }\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-progress-test\\\",\\n    templateUrl: \\\"./progress-test.component.html\\\",\\n})\\nexport class ProgressTestComponent {\\n    public show = false;\\n    public percent = 50;\\n    public isCanceled = false;\\n\\n    public startProgress() {\\n        this.show = true;\\n    }\\n\\n    public toggleProgress() {\\n        this.show = !this.show;\\n    }\\n\\n    public onCancel() {\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.percent = 0;\\n    }\\n}\\n\";","export { ProgressExampleComponent } from \"./progress-docs/progress-docs.example.component\";\nexport { BasicProgressExampleComponent } from \"./basic-progress/basic-progress.example.component\";\nexport { StackedHeaderProgressExampleComponent } from \"./stacked-header/stacked-header.example.component\";\nexport { IndeterminateProgressExampleComponent } from \"./indeterminate-progress/indeterminate-progress.example.component\";\nexport { ProgressVisualTestComponent } from \"./progress-visual-test/progress-visual-test.component\";\nexport { ProgressTestComponent } from \"./progress-test/progress-test.component\";\nexport { ProgressCompactExampleComponent } from \"./progress-compact/progress-compact.example.component\";\nexport { ProgressWithHelpTemplateExampleComponent } from \"./progress-with-help-template/progress-with-help-template-example.component\";\n","export default \"<div class=\\\"container\\\">\\n    <nui-indeterminate-progress-example></nui-indeterminate-progress-example>\\n    <hr />\\n    <nui-progress-compact-example id=\\\"nui-demo-compact-progress\\\"></nui-progress-compact-example>\\n</div>\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-progress-test\",\n    templateUrl: \"./progress-test.component.html\",\n})\nexport class ProgressTestComponent {\n    public show = false;\n    public percent = 50;\n    public isCanceled = false;\n\n    public startProgress() {\n        this.show = true;\n    }\n\n    public toggleProgress() {\n        this.show = !this.show;\n    }\n\n    public onCancel() {\n        this.isCanceled = true;\n        this.show = false;\n        this.percent = 0;\n    }\n}\n","<div class=\"container\">\n    <nui-indeterminate-progress-example></nui-indeterminate-progress-example>\n    <hr />\n    <nui-progress-compact-example id=\"nui-demo-compact-progress\"></nui-progress-compact-example>\n</div>","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-basic-progress-example\\\",\\n    templateUrl: \\\"./basic-progress.example.component.html\\\",\\n})\\nexport class BasicProgressExampleComponent implements OnDestroy {\\n\\n    public show = false;\\n    public percent = 0;\\n    public isCanceled = false;\\n    private stop: any = undefined;\\n\\n    public startProgress() {\\n        this.clearInterval();\\n\\n        this.show = true;\\n        this.stop = setInterval(() => {\\n            if (this.percent < 100) {\\n                this.percent += 10;\\n            } else {\\n                this.onCancel();\\n            }\\n        }, 1000);\\n    }\\n\\n    private onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.stop = undefined;\\n        this.percent = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.stop) {\\n            clearInterval(this.stop);\\n        }\\n    }\\n}\\n\";"]}