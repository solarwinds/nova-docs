{"version":3,"sources":["./demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.ts","./demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.html","./demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts","./demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html","webpack:///./demo/src/components/demo/spinner/spinner-test/spinner-test.ts?d19d","./demo/src/components/demo/spinner/spinner.module.ts","webpack:///./demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.html?01cc","./demo/src/components/demo/spinner/spinner-test/spinner-test.ts","./demo/src/components/demo/spinner/spinner-test/spinner-test.html","webpack:///./demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.html?054a","./demo/src/components/demo/spinner/index.ts","webpack:///./demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.ts?1350","webpack:///./demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.html?1188","./demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.ts","./demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.html","./demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.ts","./demo/src/components/demo/spinner/spinner-with-text/spinner-with-text.example.component.html","webpack:///./demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.html?2f87","webpack:///./demo/src/components/demo/spinner/spinner-visual-test/spinner-visual-test.component.ts?30f4","webpack:///./demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html?40c9","webpack:///./demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.ts?4cc7","webpack:///./demo/src/components/demo/spinner/index.ts?5747","webpack:///./demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.ts?6014","webpack:///./demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts?6fa4","webpack:///./demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.html?73ce","webpack:///./demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.ts?70ea","./demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.ts","./demo/src/components/demo/spinner/spinner-docs/spinner-docs.example.component.html","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?7a18","./demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.ts","./demo/src/components/demo/spinner/spinner-with-cancel/spinner-with-cancel.example.component.html","webpack:///./demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.html?8344","webpack:///./demo/src/components/demo/spinner/spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts?8c06","./demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.ts","./demo/src/components/demo/spinner/spinner-determinate/spinner-determinate.example.component.html","webpack:///./demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.html?9467","webpack:///./demo/src/components/demo/spinner/spinner.module.ts?a7dd","./demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.ts","./demo/src/components/demo/spinner/spinner-basic/spinner-basic.example.component.html","webpack:///./demo/src/components/demo/spinner/spinner-test/spinner-test.html?bd70","webpack:///./demo/src/components/demo/spinner/spinner-sizes/spinner-sizes.example.component.ts?c657"],"names":[],"mappings":"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","file":"demo-spinner-spinner-module-es2015.js","sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-visual\",\n    templateUrl: \"./spinner-visual-test.component.html\",\n})\nexport class SpinnerVisualTestComponent {\n    public show: boolean = true;\n    public showWithCancel: boolean = true;\n    public isCanceled: boolean = false;\n    public spinPercentage: number = 0;\n\n    public onCancel() {\n        this.showWithCancel = false;\n        this.isCanceled = true;\n    }\n\n}\n","<style>\n        nui-spinner {\n                margin: 0px 10px;\n        }\n</style>\n<div class=\"container\">\n     <h4>Basic spinner</h4>\n     <nui-spinner [show]=\"show\"></nui-spinner>\n     <hr />\n\n     <h4>Big spinner</h4>\n     <nui-spinner size=\"large\" [show]=\"show\"></nui-spinner>\n     <hr />\n\n     <h4>Indetermined spinner with text</h4>\n     <nui-spinner [show]=\"show\"\n          message=\"Task Label\"\n          helpText=\"Optional description\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"show\"\n          message=\"Task Label\"\n          helpText=\"Optional description\">\n     </nui-spinner>\n     <hr />\n\n     <h4>Determined spinner with text</h4>\n     <nui-spinner [show]=\"show\"\n          [percent]=\"spinPercentage\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"show\"\n          [percent]=\"spinPercentage\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"show\"\n          [percent]=\"spinPercentage\"\n          message=\"Task Label\"\n          helpText=\"Optional description\">\n     </nui-spinner>\n     <hr />\n\n     <h4>Spinner with cancellation</h4>\n     <nui-spinner [show]=\"showWithCancel\"\n          [percent]=\"spinPercentage\"\n          [allowCancel]=\"true\"\n          (cancel)=\"onCancel()\">\n     </nui-spinner>\n     <nui-spinner size=\"large\"\n          [show]=\"showWithCancel\"\n          [percent]=\"spinPercentage\"\n          [allowCancel]=\"true\"\n          (cancel)=\"onCancel()\"\n          id=\"nui-spinner-large-cancel\">\n     </nui-spinner>\n     <hr />\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-with-delay-toggle-example\",\n    templateUrl: \"./spinner-with-delay-toggle.example.component.html\",\n})\nexport class SpinnerWithDelayToggleExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners() {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress() {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n","<button nui-button type=\"button\"\n        id=\"spinnerButton1\"\n        (click)=\"toggleSpinners()\"\n        displayStyle=\"primary\"\n        i18n>Start/stop progress</button>\n<nui-spinner id=\"spinner1\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [delay]=\"500\">\n</nui-spinner>\n\n<nui-spinner size=\"large\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [delay]=\"1000\">\n</nui-spinner>\n","export default \"import { ChangeDetectionStrategy, Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-e2e\\\",\\n    templateUrl: \\\"./spinner-test.html\\\",\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SpinnerTestComponent {\\n    public show1: boolean;\\n    public show2: boolean;\\n    public spinPercentage: number;\\n}\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiDocsModule, NuiSpinnerModule, SrlcStage } from \"@nova-ui/bits\";\n\nimport {\n    SpinnerBasicExampleComponent,\n    SpinnerDeterminateExampleComponent,\n    SpinnerExampleComponent,\n    SpinnerSizesExampleComponent,\n    SpinnerTestComponent,\n    SpinnerVisualTestComponent,\n    SpinnerWithCancelExampleComponent,\n    SpinnerWithDelayToggleExampleComponent,\n    SpinnerWithTextExampleComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: SpinnerExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"spinner-test\",\n        component: SpinnerTestComponent,\n    },\n    {\n        path: \"spinner-visual-test\",\n        component: SpinnerVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiSpinnerModule,\n        NuiDocsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        SpinnerBasicExampleComponent,\n        SpinnerDeterminateExampleComponent,\n        SpinnerTestComponent,\n        SpinnerVisualTestComponent,\n        SpinnerExampleComponent,\n        SpinnerSizesExampleComponent,\n        SpinnerWithCancelExampleComponent,\n        SpinnerWithDelayToggleExampleComponent,\n        SpinnerWithTextExampleComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class SpinnerModule {\n}\n","export default \"<style>\\n        nui-spinner {\\n                margin: 0px 10px;\\n        }\\n</style>\\n<div class=\\\"container\\\">\\n     <h4>Basic spinner</h4>\\n     <nui-spinner [show]=\\\"show\\\"></nui-spinner>\\n     <hr />\\n\\n     <h4>Big spinner</h4>\\n     <nui-spinner size=\\\"large\\\" [show]=\\\"show\\\"></nui-spinner>\\n     <hr />\\n\\n     <h4>Indetermined spinner with text</h4>\\n     <nui-spinner [show]=\\\"show\\\"\\n          message=\\\"Task Label\\\"\\n          helpText=\\\"Optional description\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"show\\\"\\n          message=\\\"Task Label\\\"\\n          helpText=\\\"Optional description\\\">\\n     </nui-spinner>\\n     <hr />\\n\\n     <h4>Determined spinner with text</h4>\\n     <nui-spinner [show]=\\\"show\\\"\\n          [percent]=\\\"spinPercentage\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"show\\\"\\n          [percent]=\\\"spinPercentage\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"show\\\"\\n          [percent]=\\\"spinPercentage\\\"\\n          message=\\\"Task Label\\\"\\n          helpText=\\\"Optional description\\\">\\n     </nui-spinner>\\n     <hr />\\n\\n     <h4>Spinner with cancellation</h4>\\n     <nui-spinner [show]=\\\"showWithCancel\\\"\\n          [percent]=\\\"spinPercentage\\\"\\n          [allowCancel]=\\\"true\\\"\\n          (cancel)=\\\"onCancel()\\\">\\n     </nui-spinner>\\n     <nui-spinner size=\\\"large\\\"\\n          [show]=\\\"showWithCancel\\\"\\n          [percent]=\\\"spinPercentage\\\"\\n          [allowCancel]=\\\"true\\\"\\n          (cancel)=\\\"onCancel()\\\"\\n          id=\\\"nui-spinner-large-cancel\\\">\\n     </nui-spinner>\\n     <hr />\\n</div>\\n\";","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-e2e\",\n    templateUrl: \"./spinner-test.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerTestComponent {\n    public show1: boolean;\n    public show2: boolean;\n    public spinPercentage: number;\n}\n","<div [@.disabled]=\"true\">\n    <div class=\"p-3\">\n        <button nui-button type=\"button\"\n                class=\"mr-3\"\n                id=\"spinnerButton1\"\n                (click)=\"show1 = !show1\"\n                displayStyle=\"primary\"\n                i18n>toggle delayed spinner\n        </button>\n        <nui-spinner id=\"spinner1\"\n                     [show]=\"show1\"\n                     [percent]=\"spinPercentage\"\n                     [delay]=\"500\">\n        </nui-spinner>\n    </div>\n\n    <div class=\"p-3\">\n        <button nui-button type=\"button\"\n                class=\"mr-3\"\n                id=\"spinnerButton2\"\n                (click)=\"show2 = !show2\"\n                displayStyle=\"primary\"\n                i18n>toggle default spinner\n        </button>\n        <nui-spinner id=\"spinner2\"\n                     [show]=\"show2\">\n        </nui-spinner>\n    </div>\n</div>\n","export default \"<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"true\\\"\\n             message=\\\"Task Label\\\" i18n-message\\n             helpText=\\\"Optional description\\\" i18n-helpText>\\n</nui-spinner>\\n\";","\nexport { SpinnerExampleComponent } from \"./spinner-docs/spinner-docs.example.component\";\nexport { SpinnerBasicExampleComponent } from \"./spinner-basic/spinner-basic.example.component\";\nexport { SpinnerDeterminateExampleComponent } from \"./spinner-determinate/spinner-determinate.example.component\";\nexport { SpinnerWithCancelExampleComponent } from \"./spinner-with-cancel/spinner-with-cancel.example.component\";\nexport { SpinnerWithDelayToggleExampleComponent } from \"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component\";\nexport { SpinnerSizesExampleComponent } from \"./spinner-sizes/spinner-sizes.example.component\";\nexport { SpinnerWithTextExampleComponent } from \"./spinner-with-text/spinner-with-text.example.component\";\nexport { SpinnerTestComponent } from \"./spinner-test/spinner-test\";\nexport { SpinnerVisualTestComponent } from \"./spinner-visual-test/spinner-visual-test.component\";\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-with-text-example\\\",\\n    templateUrl: \\\"./spinner-with-text.example.component.html\\\",\\n})\\nexport class SpinnerWithTextExampleComponent {\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\"\\n        (click)=\\\"toggleSpinners()\\\"\\n        displayStyle=\\\"primary\\\">Start/stop progress</button>\\n<nui-spinner [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [allowCancel]=\\\"true\\\"\\n             (cancel)=\\\"onCancel()\\\">\\n</nui-spinner>\\n\\n<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [allowCancel]=\\\"true\\\"\\n             (cancel)=\\\"onCancel()\\\">\\n</nui-spinner>\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-sizes-example\",\n    templateUrl: \"./spinner-sizes.example.component.html\",\n})\n\nexport class SpinnerSizesExampleComponent {\n}\n","<nui-spinner size=\"large\" [show]=\"true\"></nui-spinner>\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-with-text-example\",\n    templateUrl: \"./spinner-with-text.example.component.html\",\n})\nexport class SpinnerWithTextExampleComponent {\n}\n","<nui-spinner size=\"large\"\n             [show]=\"true\"\n             message=\"Task Label\" i18n-message\n             helpText=\"Optional description\" i18n-helpText>\n</nui-spinner>\n","export default \"<nui-spinner [show]=\\\"true\\\"></nui-spinner>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-visual\\\",\\n    templateUrl: \\\"./spinner-visual-test.component.html\\\",\\n})\\nexport class SpinnerVisualTestComponent {\\n    public show: boolean = true;\\n    public showWithCancel: boolean = true;\\n    public isCanceled: boolean = false;\\n    public spinPercentage: number = 0;\\n\\n    public onCancel() {\\n        this.showWithCancel = false;\\n        this.isCanceled = true;\\n    }\\n\\n}\\n\";","export default \"<button nui-button type=\\\"button\\\"\\n        id=\\\"spinnerButton1\\\"\\n        (click)=\\\"toggleSpinners()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>Start/stop progress</button>\\n<nui-spinner id=\\\"spinner1\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [delay]=\\\"500\\\">\\n</nui-spinner>\\n\\n<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\"\\n             [delay]=\\\"1000\\\">\\n</nui-spinner>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-basic-example\\\",\\n    templateUrl: \\\"./spinner-basic.example.component.html\\\",\\n})\\n\\nexport class SpinnerBasicExampleComponent {\\n}\\n\";","export default \"\\nexport { SpinnerExampleComponent } from \\\"./spinner-docs/spinner-docs.example.component\\\";\\nexport { SpinnerBasicExampleComponent } from \\\"./spinner-basic/spinner-basic.example.component\\\";\\nexport { SpinnerDeterminateExampleComponent } from \\\"./spinner-determinate/spinner-determinate.example.component\\\";\\nexport { SpinnerWithCancelExampleComponent } from \\\"./spinner-with-cancel/spinner-with-cancel.example.component\\\";\\nexport { SpinnerWithDelayToggleExampleComponent } from \\\"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component\\\";\\nexport { SpinnerSizesExampleComponent } from \\\"./spinner-sizes/spinner-sizes.example.component\\\";\\nexport { SpinnerWithTextExampleComponent } from \\\"./spinner-with-text/spinner-with-text.example.component\\\";\\nexport { SpinnerTestComponent } from \\\"./spinner-test/spinner-test\\\";\\nexport { SpinnerVisualTestComponent } from \\\"./spinner-visual-test/spinner-visual-test.component\\\";\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-docs-example\\\",\\n    templateUrl: \\\"./spinner-docs.example.component.html\\\",\\n})\\nexport class SpinnerExampleComponent {}\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-with-cancel-example\\\",\\n    templateUrl: \\\"./spinner-with-cancel.example.component.html\\\",\\n})\\nexport class SpinnerWithCancelExampleComponent implements OnDestroy {\\n    public show = false;\\n    public spinPercentage = 0;\\n    public isCanceled = false;\\n\\n    private interval: any = undefined;\\n\\n    public toggleSpinners() {\\n        this.show = !this.show;\\n        this.show ? this.startProgress() : this.onCancel();\\n    }\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.interval = setInterval(() => {\\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\\n        }, 500);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.spinPercentage = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.interval) {\\n            clearInterval(this.interval);\\n            this.interval = undefined;\\n        }\\n    }\\n}\\n\";","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiSpinnerModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n\\n<p>In order to use spinner component, you need to pass <code>show</code> binding.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-spinner-basic-example></nui-spinner-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Size Setting</h2>\\n\\n<p>\\n    Spinner supports two sizes: large and small. The default is small. For a larger spinner, you can pass <code>large</code> to the <code>size</code> input.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-sizes\\\" exampleTitle=\\\"Sizes\\\">\\n    <nui-spinner-sizes-example></nui-spinner-sizes-example>\\n</nui-example-wrapper>\\n\\n<h2>Adding Text</h2>\\n\\n<p>\\n    Spinner label could be placed on the right side. You only need to pass <code>message</code> string for that.\\n    In order to display additional help text on the right side you need to pass <code>helpText</code> string.\\n    <strong>Note:</strong> In order to display the help text, the <code>size</code> input must be set to <code>large</code>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-with-text\\\" exampleTitle=\\\"Indeterminate With Text\\\">\\n    <nui-spinner-with-text-example></nui-spinner-with-text-example>\\n</nui-example-wrapper>\\n\\n<h2>Determinate Progress</h2>\\n\\n<p>\\n    To enable determinate progress, set the <code>percent</code> input and pass updates to it with numbers between 0 and 100.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-determinate\\\" exampleTitle=\\\"Determinate Progress\\\">\\n    <nui-spinner-determinate-example></nui-spinner-determinate-example>\\n</nui-example-wrapper>\\n\\n<h2>Enabling Cancellation</h2>\\n\\n<p>The spinner can be set to allow cancellation by passing true to the <code>allowCancel</code> input. To take action on a cancellation, pass a handler to the <code>cancel</code> output.</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-with-cancel\\\" exampleTitle=\\\"Determinate Progress With Cancel\\\">\\n    <nui-spinner-with-cancel-example></nui-spinner-with-cancel-example>\\n</nui-example-wrapper>\\n\\n<h2>Modifying Delayed Appearance</h2>\\n\\n<p>To mitigate the possibility of a blink effect that may happen due to the show/hide timing, you can optionally set the <code>delay</code> input in milliseconds.\\n    As the name implies, this input can be used to override the delay before showing the spinner for the specified duration after the <code>show</code> input value changes to true.\\n    The default value for the <code>delay</code> input is 250.</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"spinner-with-delay-toggle\\\" exampleTitle=\\\"Delayed Appearance\\\">\\n    <nui-spinner-with-delay-toggle-example></nui-spinner-with-delay-toggle-example>\\n</nui-example-wrapper>\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-determinate-example\\\",\\n    templateUrl: \\\"./spinner-determinate.example.component.html\\\",\\n})\\nexport class SpinnerDeterminateExampleComponent implements OnDestroy {\\n    public show = false;\\n    public spinPercentage = 0;\\n\\n    private interval: any = undefined;\\n\\n    public toggleSpinners() {\\n        this.show = !this.show;\\n        this.show ? this.startProgress() : this.onCancel();\\n    }\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.interval = setInterval(() => {\\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\\n        }, 500);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.show = false;\\n        this.spinPercentage = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.interval) {\\n            clearInterval(this.interval);\\n            this.interval = undefined;\\n        }\\n    }\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-docs-example\",\n    templateUrl: \"./spinner-docs.example.component.html\",\n})\nexport class SpinnerExampleComponent {}\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiSpinnerModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n\n<p>In order to use spinner component, you need to pass <code>show</code> binding.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-basic\" exampleTitle=\"Basic Usage\">\n    <nui-spinner-basic-example></nui-spinner-basic-example>\n</nui-example-wrapper>\n\n<h2>Size Setting</h2>\n\n<p>\n    Spinner supports two sizes: large and small. The default is small. For a larger spinner, you can pass <code>large</code> to the <code>size</code> input.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-sizes\" exampleTitle=\"Sizes\">\n    <nui-spinner-sizes-example></nui-spinner-sizes-example>\n</nui-example-wrapper>\n\n<h2>Adding Text</h2>\n\n<p>\n    Spinner label could be placed on the right side. You only need to pass <code>message</code> string for that.\n    In order to display additional help text on the right side you need to pass <code>helpText</code> string.\n    <strong>Note:</strong> In order to display the help text, the <code>size</code> input must be set to <code>large</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-with-text\" exampleTitle=\"Indeterminate With Text\">\n    <nui-spinner-with-text-example></nui-spinner-with-text-example>\n</nui-example-wrapper>\n\n<h2>Determinate Progress</h2>\n\n<p>\n    To enable determinate progress, set the <code>percent</code> input and pass updates to it with numbers between 0 and 100.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-determinate\" exampleTitle=\"Determinate Progress\">\n    <nui-spinner-determinate-example></nui-spinner-determinate-example>\n</nui-example-wrapper>\n\n<h2>Enabling Cancellation</h2>\n\n<p>The spinner can be set to allow cancellation by passing true to the <code>allowCancel</code> input. To take action on a cancellation, pass a handler to the <code>cancel</code> output.</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-with-cancel\" exampleTitle=\"Determinate Progress With Cancel\">\n    <nui-spinner-with-cancel-example></nui-spinner-with-cancel-example>\n</nui-example-wrapper>\n\n<h2>Modifying Delayed Appearance</h2>\n\n<p>To mitigate the possibility of a blink effect that may happen due to the show/hide timing, you can optionally set the <code>delay</code> input in milliseconds.\n    As the name implies, this input can be used to override the delay before showing the spinner for the specified duration after the <code>show</code> input value changes to true.\n    The default value for the <code>delay</code> input is 250.</p>\n\n<nui-example-wrapper filenamePrefix=\"spinner-with-delay-toggle\" exampleTitle=\"Delayed Appearance\">\n    <nui-spinner-with-delay-toggle-example></nui-spinner-with-delay-toggle-example>\n</nui-example-wrapper>\n","var map = {\n\t\"./index.ts\": \"V0fN\",\n\t\"./spinner-basic/spinner-basic.example.component.html\": \"L4fS\",\n\t\"./spinner-basic/spinner-basic.example.component.ts\": \"TMfQ\",\n\t\"./spinner-determinate/spinner-determinate.example.component.html\": \"g0RB\",\n\t\"./spinner-determinate/spinner-determinate.example.component.ts\": \"cOo7\",\n\t\"./spinner-docs/spinner-docs.example.component.html\": \"c85H\",\n\t\"./spinner-docs/spinner-docs.example.component.ts\": \"YBSE\",\n\t\"./spinner-sizes/spinner-sizes.example.component.html\": \"lGcg\",\n\t\"./spinner-sizes/spinner-sizes.example.component.ts\": \"xleW\",\n\t\"./spinner-test/spinner-test.html\": \"vXBL\",\n\t\"./spinner-test/spinner-test.ts\": \"0Z1Y\",\n\t\"./spinner-visual-test/spinner-visual-test.component.html\": \"AcwV\",\n\t\"./spinner-visual-test/spinner-visual-test.component.ts\": \"MPSt\",\n\t\"./spinner-with-cancel/spinner-with-cancel.example.component.html\": \"EYii\",\n\t\"./spinner-with-cancel/spinner-with-cancel.example.component.ts\": \"b6R0\",\n\t\"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.html\": \"QMnL\",\n\t\"./spinner-with-delay-toggle/spinner-with-delay-toggle.example.component.ts\": \"jAbo\",\n\t\"./spinner-with-text/spinner-with-text.example.component.html\": \"BUoy\",\n\t\"./spinner-with-text/spinner-with-text.example.component.ts\": \"E1AW\",\n\t\"./spinner.module.ts\": \"p90v\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"exZP\";","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-with-cancel-example\",\n    templateUrl: \"./spinner-with-cancel.example.component.html\",\n})\nexport class SpinnerWithCancelExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n    public isCanceled = false;\n\n    private interval: any = undefined;\n\n    public toggleSpinners() {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress() {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.isCanceled = true;\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n","<button nui-button type=\"button\"\n        (click)=\"toggleSpinners()\"\n        displayStyle=\"primary\">Start/stop progress</button>\n<nui-spinner [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [allowCancel]=\"true\"\n             (cancel)=\"onCancel()\">\n</nui-spinner>\n\n<nui-spinner size=\"large\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\"\n             [allowCancel]=\"true\"\n             (cancel)=\"onCancel()\">\n</nui-spinner>\n","export default \"<button nui-button type=\\\"button\\\"\\n        (click)=\\\"toggleSpinners()\\\"\\n        displayStyle=\\\"primary\\\"\\n        i18n>Start/stop progress\\n</button>\\n<nui-spinner [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\">\\n</nui-spinner>\\n\\n<nui-spinner size=\\\"large\\\"\\n             [show]=\\\"show\\\"\\n             [percent]=\\\"spinPercentage\\\">\\n</nui-spinner>\\n\";","export default \"import { Component, OnDestroy } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-with-delay-toggle-example\\\",\\n    templateUrl: \\\"./spinner-with-delay-toggle.example.component.html\\\",\\n})\\nexport class SpinnerWithDelayToggleExampleComponent implements OnDestroy {\\n    public show = false;\\n    public spinPercentage = 0;\\n    public isCanceled = false;\\n\\n    private interval: any = undefined;\\n\\n    public toggleSpinners() {\\n        this.show = !this.show;\\n        this.show ? this.startProgress() : this.onCancel();\\n    }\\n\\n    public startProgress() {\\n        this.clearInterval();\\n        this.interval = setInterval(() => {\\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\\n        }, 500);\\n    }\\n\\n    public onCancel() {\\n        this.clearInterval();\\n        this.isCanceled = true;\\n        this.show = false;\\n        this.spinPercentage = 0;\\n    }\\n\\n    public ngOnDestroy() {\\n        this.clearInterval();\\n    }\\n\\n    private clearInterval() {\\n        if (this.interval) {\\n            clearInterval(this.interval);\\n            this.interval = undefined;\\n        }\\n    }\\n}\\n\";","import { Component, OnDestroy } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-determinate-example\",\n    templateUrl: \"./spinner-determinate.example.component.html\",\n})\nexport class SpinnerDeterminateExampleComponent implements OnDestroy {\n    public show = false;\n    public spinPercentage = 0;\n\n    private interval: any = undefined;\n\n    public toggleSpinners() {\n        this.show = !this.show;\n        this.show ? this.startProgress() : this.onCancel();\n    }\n\n    public startProgress() {\n        this.clearInterval();\n        this.interval = setInterval(() => {\n            this.spinPercentage < 100 ? this.spinPercentage += 10 : this.onCancel();\n        }, 500);\n    }\n\n    public onCancel() {\n        this.clearInterval();\n        this.show = false;\n        this.spinPercentage = 0;\n    }\n\n    public ngOnDestroy() {\n        this.clearInterval();\n    }\n\n    private clearInterval() {\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = undefined;\n        }\n    }\n}\n","<button nui-button type=\"button\"\n        (click)=\"toggleSpinners()\"\n        displayStyle=\"primary\"\n        i18n>Start/stop progress\n</button>\n<nui-spinner [show]=\"show\"\n             [percent]=\"spinPercentage\">\n</nui-spinner>\n\n<nui-spinner size=\"large\"\n             [show]=\"show\"\n             [percent]=\"spinPercentage\">\n</nui-spinner>\n","export default \"<nui-spinner size=\\\"large\\\" [show]=\\\"true\\\"></nui-spinner>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiButtonModule, NuiDocsModule, NuiSpinnerModule, SrlcStage } from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    SpinnerBasicExampleComponent,\\n    SpinnerDeterminateExampleComponent,\\n    SpinnerExampleComponent,\\n    SpinnerSizesExampleComponent,\\n    SpinnerTestComponent,\\n    SpinnerVisualTestComponent,\\n    SpinnerWithCancelExampleComponent,\\n    SpinnerWithDelayToggleExampleComponent,\\n    SpinnerWithTextExampleComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: SpinnerExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"spinner-test\\\",\\n        component: SpinnerTestComponent,\\n    },\\n    {\\n        path: \\\"spinner-visual-test\\\",\\n        component: SpinnerVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiSpinnerModule,\\n        NuiDocsModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        SpinnerBasicExampleComponent,\\n        SpinnerDeterminateExampleComponent,\\n        SpinnerTestComponent,\\n        SpinnerVisualTestComponent,\\n        SpinnerExampleComponent,\\n        SpinnerSizesExampleComponent,\\n        SpinnerWithCancelExampleComponent,\\n        SpinnerWithDelayToggleExampleComponent,\\n        SpinnerWithTextExampleComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class SpinnerModule {\\n}\\n\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-spinner-basic-example\",\n    templateUrl: \"./spinner-basic.example.component.html\",\n})\n\nexport class SpinnerBasicExampleComponent {\n}\n","<nui-spinner [show]=\"true\"></nui-spinner>\n","export default \"<div [@.disabled]=\\\"true\\\">\\n    <div class=\\\"p-3\\\">\\n        <button nui-button type=\\\"button\\\"\\n                class=\\\"mr-3\\\"\\n                id=\\\"spinnerButton1\\\"\\n                (click)=\\\"show1 = !show1\\\"\\n                displayStyle=\\\"primary\\\"\\n                i18n>toggle delayed spinner\\n        </button>\\n        <nui-spinner id=\\\"spinner1\\\"\\n                     [show]=\\\"show1\\\"\\n                     [percent]=\\\"spinPercentage\\\"\\n                     [delay]=\\\"500\\\">\\n        </nui-spinner>\\n    </div>\\n\\n    <div class=\\\"p-3\\\">\\n        <button nui-button type=\\\"button\\\"\\n                class=\\\"mr-3\\\"\\n                id=\\\"spinnerButton2\\\"\\n                (click)=\\\"show2 = !show2\\\"\\n                displayStyle=\\\"primary\\\"\\n                i18n>toggle default spinner\\n        </button>\\n        <nui-spinner id=\\\"spinner2\\\"\\n                     [show]=\\\"show2\\\">\\n        </nui-spinner>\\n    </div>\\n</div>\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-spinner-sizes-example\\\",\\n    templateUrl: \\\"./spinner-sizes.example.component.html\\\",\\n})\\n\\nexport class SpinnerSizesExampleComponent {\\n}\\n\";"],"sourceRoot":"webpack:///"}