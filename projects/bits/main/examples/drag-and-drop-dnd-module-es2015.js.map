{"version":3,"sources":["webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts?f973","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.html?d719","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.ts?d734","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.ts?df30","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.ts?e92a","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.less","webpack:///./node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?6b63","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.less","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.less","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.less","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts?01a6","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-docs/dnd-docs.example.component.html?0470","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.less","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.ts?0f02","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.html?1bcb","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.less","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-placeholder/dnd-drag-placeholder-example.component.html?1ceb","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-preview/dnd-drag-preview.example.component.ts?2994","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone-visual/dnd-dropzone-visual-example.component.html","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-basic/dnd-basic.example.component.html?3a4d","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.html?4106","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-drag-disabled/dnd-drag-disabled-example.component.html?46ec","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.ts?570f","./demo/src/components/demo/external-libraries/drag-and-drop/dnd.module.ts","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.less","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd.module.ts?7c55","./demo/src/components/demo/external-libraries/drag-and-drop/dnd-axis-constraints/dnd-axis-constraints.example.component.less","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.ts?90f8","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-custom-handle/dnd-custom-handle.example.component.html?ace6","webpack:///./demo/src/components/demo/external-libraries/drag-and-drop/dnd-dropzone/dnd-dropzone.example.component.html?c0bd"],"names":[],"mappings":"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","file":"drag-and-drop-dnd-module-es2015.js","sourcesContent":["export default \"import {CdkDragDrop, copyArrayItem, moveItemInArray, transferArrayItem} from \\\"@angular/cdk/drag-drop\\\";\\nimport {ChangeDetectionStrategy, Component} from \\\"@angular/core\\\";\\n\\nclass Company {\\n    name: string;\\n    industries?: Industry[];\\n}\\n\\nconst COMPANY_ADOBE: string = \\\"Adobe\\\";\\nconst COMPANY_IBM: string = \\\"IBM\\\";\\nconst COMPANY_DELL: string = \\\"Dell\\\";\\n\\nclass Industry {\\n    name: string;\\n    companies?: Company[];\\n}\\n\\nconst INDUSTRY_HW: string = \\\"Hardware\\\";\\nconst INDUSTRY_SW: string = \\\"Software\\\";\\n\\nconst availableCompanies: Company[] = [\\n    {name: COMPANY_ADOBE, industries: [{name: INDUSTRY_SW}]},\\n    {name: COMPANY_IBM, industries: [{name: INDUSTRY_SW}, {name: INDUSTRY_HW}]},\\n    {name: COMPANY_DELL, industries: [{name: INDUSTRY_HW}, {name: INDUSTRY_SW}]},\\n];\\n\\n@Component({\\n    selector: \\\"dnd-dropzone-visual\\\",\\n    templateUrl: \\\"./dnd-dropzone-visual-example.component.html\\\",\\n    styleUrls: [\\\"./dnd-dropzone-visual-example.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DndDropzoneVisualExampleComponent {\\n    public companies: Company[] = availableCompanies;\\n\\n    public industries: Industry[] = [{name: INDUSTRY_HW, companies: [{name: COMPANY_IBM}]}, {name: INDUSTRY_SW, companies: []}];\\n\\n    // Note: Prevent user from putting back already displaced items\\n    public sourceAcceptsItem(): boolean {\\n        return false;\\n    }\\n\\n    public destinationAcceptsItem(company: Company): boolean {\\n        return company.name === \\\"Adobe\\\" || company.name === \\\"Dell\\\";\\n    }\\n\\n    public onItemDropped(event: CdkDragDrop<Company[]>) {\\n        if (!this.destinationAcceptsItem(event.item.data)) {\\n            return;\\n        }\\n        if (event.previousContainer === event.container) {\\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\\n        } else {\\n            if (event.previousContainer.element.nativeElement.classList.contains(\\\"dragzone\\\")) {\\n                copyArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\\n            } else {\\n                transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\\n            }\\n\\n        }\\n    }\\n}\\n\";","export default \"<div cdkDropList class=\\\"draggable-container\\\" (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n    <div cdkDrag cdkDragPreviewClass=\\\"dnd-drag-preview\\\" class=\\\"draggable-item\\\" *ngFor=\\\"let item of listItems\\\">\\n        {{item.title}}\\n        <div *cdkDragPreview>\\n            <p>This is the preview for {{item.title}}</p>\\n            <img align=\\\"middle\\\" width=\\\"100\\\" [src]=\\\"item.preview\\\" [alt]=\\\"item.title\\\">\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"dnd-basic\\\",\\n    templateUrl: \\\"./dnd-basic.example.component.html\\\",\\n    styleUrls: [\\\"./dnd-basic.example.component.less\\\"],\\n})\\nexport class DndBasicExampleComponent {\\n}\\n\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-dnd-docs\\\",\\n    templateUrl: \\\"./dnd-docs.example.component.html\\\",\\n})\\nexport class DndDocsExampleComponent {\\n    public initialSetupCode = `\\n// our module where we want to use drag-and-drop features\\nimport { DragDropModule } from \\\"@angular/cdk/drag-drop\\\";\\n\\n@NgModule({\\n    imports: [\\n        DragDropModule,\\n        // other modules that we might need\\n    ],\\n    declarations: [ /* our module declaration */],\\n    exports:      [ /* our exports */ ],\\n})\\nexport class MyModule {}`\\n        .replace(\\\"\\\\r\\\\n\\\", \\\"<br/>\\\") // nice rendering\\n    ;\\n\\n    public hideHandleWhileDragging = `\\n.dnd-drag-preview .drag-handle {\\n    display: none;\\n}\\n    `;\\n}\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"dnd-axis-constraints\\\",\\n    templateUrl: \\\"./dnd-axis-constraints.example.component.html\\\",\\n    styleUrls: [\\\"./dnd-axis-constraints.example.component.less\\\"],\\n})\\nexport class DndAxisConstraintsExampleComponent {\\n}\\n\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@box-width: 150px;\\n@box-height: 50px;\\n@placeholder-border-width: @nui-line-default;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border: solid @nui-line-default @nui-color-line-default;\\n\\n    :last-child {\\n        border: none;\\n    }\\n}\\n\\n// generic item styling\\n.item {\\n    padding: @nui-space-md;\\n    text-align: center;\\n    box-sizing: border-box;\\n    border-bottom: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n// drag & drop styling\\n.draggable-item:extend(.item), .draggable-placeholder:extend(.item) {\\n    height: @box-height;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover {\\n        cursor: move;\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n    }\\n}\\n\\n.draggable-placeholder {\\n    border: dashed @placeholder-border-width @nui-color-line-default;\\n    background: @nui-color-bg-content-hover;\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {}\\n\";","var map = {\n\t\"./dnd-axis-constraints/dnd-axis-constraints.example.component.html\": \"QQYb\",\n\t\"./dnd-axis-constraints/dnd-axis-constraints.example.component.less\": \"g0Vd\",\n\t\"./dnd-axis-constraints/dnd-axis-constraints.example.component.ts\": \"6Sqy\",\n\t\"./dnd-basic/dnd-basic.example.component.html\": \"Ok0I\",\n\t\"./dnd-basic/dnd-basic.example.component.less\": \"HNaF\",\n\t\"./dnd-basic/dnd-basic.example.component.ts\": \"1zS9\",\n\t\"./dnd-custom-handle/dnd-custom-handle.example.component.html\": \"rOYC\",\n\t\"./dnd-custom-handle/dnd-custom-handle.example.component.less\": \"AFKB\",\n\t\"./dnd-custom-handle/dnd-custom-handle.example.component.ts\": \"kPgN\",\n\t\"./dnd-docs/dnd-docs.example.component.html\": \"BHCc\",\n\t\"./dnd-docs/dnd-docs.example.component.ts\": \"3zAL\",\n\t\"./dnd-drag-disabled/dnd-drag-disabled-example.component.html\": \"RuxN\",\n\t\"./dnd-drag-disabled/dnd-drag-disabled-example.component.less\": \"Dd/j\",\n\t\"./dnd-drag-disabled/dnd-drag-disabled-example.component.ts\": \"DwIe\",\n\t\"./dnd-drag-placeholder/dnd-drag-placeholder-example.component.html\": \"HOu3\",\n\t\"./dnd-drag-placeholder/dnd-drag-placeholder-example.component.less\": \"7iE8\",\n\t\"./dnd-drag-placeholder/dnd-drag-placeholder-example.component.ts\": \"Aabv\",\n\t\"./dnd-drag-preview/dnd-drag-preview.example.component.html\": \"1xmk\",\n\t\"./dnd-drag-preview/dnd-drag-preview.example.component.less\": \"A8zS\",\n\t\"./dnd-drag-preview/dnd-drag-preview.example.component.ts\": \"KZRj\",\n\t\"./dnd-dropzone-visual/dnd-dropzone-visual-example.component.html\": \"G8s3\",\n\t\"./dnd-dropzone-visual/dnd-dropzone-visual-example.component.less\": \"A6zC\",\n\t\"./dnd-dropzone-visual/dnd-dropzone-visual-example.component.ts\": \"+XN+\",\n\t\"./dnd-dropzone/dnd-dropzone.example.component.html\": \"wL1P\",\n\t\"./dnd-dropzone/dnd-dropzone.example.component.less\": \"d+0M\",\n\t\"./dnd-dropzone/dnd-dropzone.example.component.ts\": \"Vw9Z\",\n\t\"./dnd.module.ts\": \"fFVE\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"8cFS\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@min-height: 50px;\\n\\n.draggable-container {\\n    width: 50%;\\n    float: left;\\n    min-height: (@min-height * 10);\\n\\n    .draggable-list {\\n        border: solid @dnd-zone-border-width transparent;\\n        position: relative;\\n        padding: @nui-space-sm;\\n        transition: all .3s ease-in-out;\\n\\n        .title {\\n            position: absolute;\\n        }\\n        &.cdk-drop-list-dragging, &.cdk-drop-list-receiving {\\n            .draggable-item:hover {\\n                box-shadow: none;\\n                background-color: initial;\\n            }\\n        }\\n    }\\n}\\n\\n.dragzone {\\n    .cdk-drop-list-dragging .draggable-item:not(.cdk-drag-placeholder) {\\n        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n    }\\n}\\n\\n.dropzone {\\n    margin: 10px 0;\\n    min-height: (2 * (@min-height + @nui-space-md + @dnd-zone-border-width));\\n\\n    .cdk-drag-placeholder, .draggable-placeholder {\\n        visibility: hidden;\\n        min-height: @min-height - @dnd-zone-border-width;\\n    }\\n}\\n\\n.draggable-item, .draggable-placeholder, .dropzone-preview:extend(.nui-dnd-preview) {\\n    min-height: @min-height + @dnd-item-border-width;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    text-align: center;\\n    border: @dnd-item-border-width @nui-color-line-default solid;\\n    .transition(box-shadow 0.4s);\\n}\\n\\n.draggable-item {\\n    border-bottom-color: transparent;\\n\\n    &:hover:not(.cdk-drag-placeholder) {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n&.items-container :last-child { border-bottom-color: @nui-color-line-default;}\\n\\n.draggable-placeholder {\\n    min-height: @min-height + @dnd-zone-border-width - 1;\\n    border-width: @dnd-zone-border-width;\\n    border-style: dashed;\\n    background: @nui-color-bg-content-hover;\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n\\n.cdk-drag-animating {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.centered-overlay .text-special {\\n    top: -25px;\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@box-width: 150px;\\n@box-height: 50px;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border-top: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n.item {\\n    padding: @nui-space-md;\\n    text-align: center;\\n}\\n\\n.draggable-item:extend(.item) {\\n    height: @box-height;\\n    border: solid @nui-line-default @nui-color-line-default;\\n    border-top: none;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover {\\n        cursor: move;\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n    }\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@box-width: 300px;\\n@box-height: 50px;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border-top: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n// generic item styling\\n.item {\\n    height: @box-height;\\n    padding: @nui-space-md;\\n    text-align: center;\\n    box-sizing: border-box;\\n    border: solid @nui-line-default @nui-color-line-default;\\n    border-top: none;\\n    position: relative;\\n}\\n\\n// drag & drop styling\\n.draggable-item:extend(.item) {\\n    background: @nui-color-bg-content;\\n    .transition(box-shadow 0.4s);\\n\\n    // for all ENABLED items we apply the hover style\\n    &:not(.cdk-drag-disabled) {\\n        &:hover {\\n            .nui-dnd-hover-state();\\n        }\\n\\n        // we apply the raised state only for items without handle\\n        &:not(.with-handle):hover {\\n            cursor: move;\\n            .nui-dnd-raised-state();\\n        }\\n    }\\n\\n    &.cdk-drag-disabled {\\n        color: @nui-color-disabled;\\n    }\\n}\\n\\n.drag-handle {\\n    color: #ccc;\\n    cursor: move;\\n    display: inline;\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {}\\n\";","export default \"import {CdkDragDrop, moveItemInArray} from \\\"@angular/cdk/drag-drop\\\";\\nimport {Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"dnd-drag-placeholder\\\",\\n    templateUrl: \\\"./dnd-drag-placeholder-example.component.html\\\",\\n    styleUrls: [\\\"./dnd-drag-placeholder-example.component.less\\\"],\\n})\\nexport class DndDragPlaceholderExampleComponent {\\n    public listItems: string[] = [\\\"Adobe\\\", \\\"IBM\\\", \\\"Dell\\\" ];\\n\\n    public onItemDropped(event: CdkDragDrop<string[]>) {\\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\\n    }\\n}\\n\";","export default \"<p>The Angular CDK drag and drop module provides a way to easily and declaratively create drag and drop interfaces.</p>\\n<p>To get started, import <code>DragDropModule</code> into the <code>NgModule</code> where you want to use drag-and-drop features:</p>\\n<nui-example-code language=\\\"typescript\\\">{{ initialSetupCode }}</nui-example-code>\\n<p>\\n    For more details on the implementation of the @angular/cdk/drag-drop, check the documentation <a href=\\\"https://material.angular.io/cdk/drag-drop/overview\\\" target=\\\"_blank\\\">here</a>\\n</p>\\n<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiDndModule</code>\\n    </li>\\n    <li>\\n        Angular CDK's <code>DragDropModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    This example shows how easy it is to create a draggable element by adding the <code>cdkDrag</code> directive on the DOM element we want to become draggable.\\n    Since it can be dragged without any handle, hovering the element will alter its state to both <code>nui-dnd-raised-state</code> and <code>nui-dnd-hover-state</code>.\\n</p>\\n<nui-message [allowDismiss]=false type=\\\"info\\\">\\n    <p>\\n        In case you want to customize the styles for your draggable elements, it may be helpful to know that\\n        all <code>cdkDrag</code> DOM elements have the <code>.cdk-drag</code> CSS class applied to them.\\n    </p>\\n</nui-message>\\n\\n<nui-example-wrapper filenamePrefix=\\\"dnd-basic\\\" exampleTitle=\\\"Drag & Drop\\\">\\n    <dnd-basic></dnd-basic>\\n</nui-example-wrapper>\\n\\n<h2>Drag Axis Constraints</h2>\\n<p>\\n    By default, <code>cdkDrag</code> allows free movement in all directions. To restrict dragging to a specific axis, you can set\\n    the <code>cdkDragLockAxis</code> input on <code>cdkDrag</code> or the <code>cdkDropListLockAxis</code> input on <code>cdkDropList</code>\\n    to either \\\"x\\\" or \\\"y\\\".\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"dnd-axis-constraints\\\" exampleTitle=\\\"Drag Axis Constraints\\\">\\n    <dnd-axis-constraints></dnd-axis-constraints>\\n</nui-example-wrapper>\\n\\n<h2>Disabled draggable items</h2>\\n<p>A collection of <code>cdkDrag</code> elements are usually placed inside a <code>cdkDropList</code>.</p>\\n<p>To prevent an item from being dragged set the <code>cdkDragDisabled</code> input on the <code>cdkDrag</code> element to true:</p>\\n<nui-message [allowDismiss]=false type=\\\"info\\\">\\n    <p>Disabled draggable DOM elements have the <code>.cdk-drag-disabled</code> CSS class appended to them.</p>\\n    <p>See the styles customization applied to the disabled draggable items in the LESS source code tab in the source expander below for inspiration.</p>\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"dnd-drag-disabled\\\" exampleTitle=\\\"Disabled draggable items\\\">\\n    <dnd-drag-disabled></dnd-drag-disabled>\\n</nui-example-wrapper>\\n\\n<h2>Custom Drag Preview</h2>\\n<p>It is possible to display custom preview content instead of cloning the original element by specifying the <code>cdkDragPreview</code> directive.</p>\\n<p>The directive must be specified for each <code>cdkDrag</code> element that we want to have preview content.</p>\\n<nui-message [allowDismiss]=false type=\\\"warning\\\">\\n    <p>\\n        <strong>Important:</strong> In order for the <code>cdkDragPreview</code> directive to work, it must\\n        be wrapped inside a DOM element with the <code>cdkDropList</code> directive specified.\\n    </p>\\n    Take a look at the source of the following example to see how.\\n</nui-message>\\n<nui-example-wrapper filenamePrefix=\\\"dnd-drag-preview\\\" exampleTitle=\\\"Custom Drag Preview\\\">\\n    <dnd-drag-preview></dnd-drag-preview>\\n</nui-example-wrapper>\\n\\n<h2>Custom Drag Handle</h2>\\n<p>The handle by which an element can be dragged can be customized by specifying the directive <code>cdkDragHandle</code> on the element we want to become the handle.</p>\\n<nui-example-wrapper filenamePrefix=\\\"dnd-custom-handle\\\" exampleTitle=\\\"Custom Drag Handle\\\">\\n    <dnd-custom-handle></dnd-custom-handle>\\n</nui-example-wrapper>\\n<p>\\n    In the example above the handle is still displayed while dragging an element;\\n    to hide the handle we just need to apply the properer styling on the cloned preview element as shown below:\\n    <nui-example-code language=\\\"css\\\">{{hideHandleWhileDragging}}</nui-example-code>\\n</p>\\n\\n<h2>Custom Placeholder</h2>\\n<p>\\n    While a <code>cdkDrag</code> element is being dragged, the Angular CDK will create a placeholder element that\\n    will show the user where the dragged element will be placed when it's dropped.\\n</p>\\n<p>\\n    By default the placeholder is a clone of the element that is being dragged, however you can replace it\\n    with a custom one using the <code>*cdkDragPlaceholder</code> directive.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"dnd-drag-placeholder\\\" exampleTitle=\\\"Custom Placeholder\\\">\\n    <dnd-drag-placeholder></dnd-drag-placeholder>\\n</nui-example-wrapper>\\n\\n<h2>Dropzones Visualization</h2>\\n<p>\\n    A drag container is a collection of <code>cdkDrag</code> elements within a <code>cdkDropList</code>.\\n    Decorating a drag container with the <code><a href=\\\"../directives/DndDropTargetDirective.html\\\" target=\\\"_parent\\\">nuiDndDropTarget</a></code> directive defines a dropzone.\\n</p>\\n<nui-message [allowDismiss]=false type=\\\"warning\\\">\\n    In order use multiple drag containers, both sources and destinations must be wrapped within a <code>cdkDropListGroup</code> directive.\\n</nui-message>\\n<p>\\n    Once the user starts dragging an item from the source, the destination is highlighted as an available destination dropzone;\\n    the <code>nui-dnd-dropzone--active</code> CSS class is added to the dropzone once dragging starts.\\n    The destination uses the <code>nuiDndDropTarget</code> directive helper in order to inform the user visually\\n    whether a dropzone will accept or reject a dragged item. In the following example, all items are accepted\\n    except for <em>IBM</em>;\\n</p>\\n<nui-message [allowDismiss]=false type=\\\"info\\\">\\n    The following CSS classes are added to the dropzone once the conditions are met as described below:\\n    <ul>\\n        <li>- <code>nui-dnd-dropzone--active</code> - once dragging starts</li>\\n        <li>- <code>nui-dnd-dropzone--drop-allowed</code> - once the user is over the dropzone and the dragged item is accepted</li>\\n        <li>- <code>nui-dnd-dropzone--drop-not-allowed</code> - once the user is over the dropzone and the dragged item is NOT accepted</li>\\n    </ul>\\n</nui-message>\\n<p>\\n    To define acceptance conditions for a dropzone, the user can provide a callback method to the <code>canBeDropped</code>\\n    input.\\n</p>\\n<nui-example-wrapper filenamePrefix=\\\"dnd-dropzone\\\" exampleTitle=\\\"Dropzones\\\">\\n    <dnd-dropzone></dnd-dropzone>\\n</nui-example-wrapper>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@box-width: 150px;\\n@box-height: 50px;\\n\\n.draggable-container {\\n    width: @box-width;\\n    border-top: solid @nui-line-default @nui-color-line-default;\\n}\\n\\n.item {\\n    padding: @nui-space-md;\\n    text-align: center;\\n}\\n\\n.draggable-item:extend(.item) {\\n    height: @box-height;\\n    border: @dnd-item-border-width @nui-color-line-default solid;\\n    border-top: none;\\n\\n    .transition(box-shadow 0.4s);\\n\\n    // apply style only for items that are enabled\\n    &:hover:not(.cdk-drag-disabled) {\\n        cursor: move;\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n    }\\n\\n    &.cdk-drag-disabled {\\n        color: @nui-color-disabled;\\n    }\\n}\\n\\n.dnd-drag-preview:extend(.item, .nui-dnd-preview) {}\\n\\n\";","export default \"import {CdkDragDrop, moveItemInArray} from \\\"@angular/cdk/drag-drop\\\";\\nimport {Component} from \\\"@angular/core\\\";\\n\\nclass IListItem  {\\n    title: string;\\n    enabled: boolean;\\n}\\n\\n@Component({\\n    selector: \\\"dnd-drag-disabled\\\",\\n    templateUrl: \\\"./dnd-drag-disabled-example.component.html\\\",\\n    styleUrls: [\\\"./dnd-drag-disabled-example.component.less\\\"],\\n})\\nexport class DndDragDisabledExampleComponent {\\n    public listItems: IListItem[] = [\\n        {\\n            title: \\\"Adobe\\\",\\n            enabled: true,\\n        },\\n        {\\n            title: \\\"IBM\\\",\\n            enabled: false,\\n        },\\n    ];\\n\\n    public onItemDropped(event: CdkDragDrop<IListItem[]>) {\\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\\n    }\\n\\n    public translatedStatus(enabled: boolean) {\\n        return enabled ? $localize `Enabled` : $localize `Disabled`;\\n    }\\n}\\n\";","export default \"<div cdkDropListGroup>\\n    <div class=\\\"draggable-container pr-2\\\" id=\\\"nui-demo-drop-list-1\\\">\\n        <h3>Companies</h3>\\n        <div cdkDropList class=\\\"dragzone draggable-list\\\"\\n             [cdkDropListData]=\\\"companies\\\"\\n             [cdkDropListSortingDisabled]=\\\"true\\\"\\n             [cdkDropListEnterPredicate]=\\\"sourceAcceptsItem\\\"\\n             (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n            <div class=\\\"items-container\\\">\\n                <div *ngFor=\\\"let company of companies\\\" class=\\\"draggable-item\\\"\\n                     cdkDrag\\n                     cdkDragPreviewClass=\\\"nui-dnd-preview\\\"\\n                     [cdkDragData]=\\\"company\\\">\\n                    <div class=\\\"draggable-placeholder\\\" *cdkDragPlaceholder></div>\\n                    {{company.name}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"draggable-container pl-2\\\" id=\\\"nui-demo-drop-list-2\\\">\\n        <h3>Industries</h3>\\n        <div #dropTarget=nuiDndDropTarget id=\\\"cdk-drop-list\\\" *ngFor=\\\"let industry of industries\\\" class=\\\"dropzone draggable-list\\\"\\n             cdkDropList\\n             [cdkDropListSortingDisabled]=\\\"true\\\"\\n             [cdkDropListData]=\\\"industry.companies\\\"\\n             nuiDndDropTarget\\n             [canBeDropped]=\\\"destinationAcceptsItem\\\"\\n             (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n            <div class=\\\"title\\\" *ngIf=\\\"dropTarget.isDropZoneActive ||  !industry.companies?.length\\\">\\n                {{industry.name}}\\n                <!--\\n                ShowDropZone: {{ dropTarget.showDropZone$ | async}}\\n                CanDrop: {{ dropTarget.canDrop$ | async}}\\n                IsDropZoneActive: {{dropTarget.isDropZoneActive}}\\n                -->\\n            </div>\\n            <div class=\\\"items-container\\\">\\n                <div *ngFor=\\\"let company of industry.companies\\\" class=\\\"draggable-item\\\"\\n                     cdkDrag\\n                     cdkDragPreviewClass=\\\"dropzone-preview\\\"\\n                     [cdkDragData]=\\\"company\\\"\\n                     [class.invisible]=\\\"dropTarget.isDropZoneActive\\\">\\n                    {{company.name}}\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"dropTarget.isDropZoneActive\\\" class=\\\"centered-overlay\\\">\\n                <!-- highlight item placeholder-->\\n                <div *ngIf=\\\"(dropTarget.showDropZone$ | async) !== true\\\">\\n                    <nui-icon icon=\\\"plus\\\" iconSize=\\\"medium\\\" cssClass=\\\"drop-circle-permanent\\\"></nui-icon>\\n                </div>\\n\\n                <!-- accepted item placeholder-->\\n                <div *ngIf=\\\"(dropTarget.canLastDragItemBeDropped$ | async)\\\">\\n                    <nui-icon icon=\\\"plus\\\" iconSize=\\\"medium\\\" cssClass=\\\"drop-circle-allowed\\\"></nui-icon>\\n                </div>\\n\\n                <!-- reject item placeholder-->\\n                <div *ngIf=\\\"(dropTarget.canLastDragItemBeDropped$ | async) === false\\\">\\n                    <div class=\\\"centered-overlay text-nowrap text-special\\\" i18n>Not allowed</div>\\n                    <nui-icon icon=\\\"close\\\" iconSize=\\\"medium\\\" cssClass=\\\"drop-circle-not-allowed\\\"></nui-icon>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@box-width: 150px;\\n@box-height: 100px;\\n\\n.draggable-item {\\n    width: @box-width;\\n    height: @box-height;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    border: solid 1px @gray;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    position: relative;\\n    z-index: 1;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n\";","export default \"<div cdkDropList class=\\\"draggable-container\\\" (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n    <div cdkDrag cdkDragPreviewClass=\\\"dnd-drag-preview\\\" class=\\\"draggable-item\\\" *ngFor=\\\"let item of listItems\\\">\\n        {{item}}\\n        <div class=\\\"draggable-placeholder\\\" *cdkDragPlaceholder i18n>\\n            Placeholder\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"import {CdkDragDrop, moveItemInArray} from \\\"@angular/cdk/drag-drop\\\";\\nimport {Component} from \\\"@angular/core\\\";\\nimport {IRepeatItem} from \\\"@nova-ui/bits\\\";\\n\\ninterface IListItem extends IRepeatItem {\\n    title: string;\\n    preview: string;\\n}\\n\\n@Component({\\n    selector: \\\"dnd-drag-preview\\\",\\n    templateUrl: \\\"./dnd-drag-preview.example.component.html\\\",\\n    styleUrls: [\\\"./dnd-drag-preview.example.component.less\\\"],\\n})\\nexport class DndDragPreviewExampleComponent {\\n    public listItems: IListItem[] = [\\n        {\\n            title: \\\"Adobe\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Adobe_Systems_logo_and_wordmark.svg/524px-Adobe_Systems_logo_and_wordmark.svg.png\\\",\\n        },\\n        {\\n            title: \\\"IBM\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/IBM_logo.svg/800px-IBM_logo.svg.png\\\",\\n        },\\n        {\\n            title: \\\"Dell\\\",\\n            preview: \\\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Dell_Logo.svg/300px-Dell_Logo.svg.png\\\",\\n        },\\n    ];\\n\\n    public onItemDropped(event: CdkDragDrop<IListItem[]>) {\\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\\n    }\\n}\\n\";","import {CdkDragDrop, copyArrayItem, moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {ChangeDetectionStrategy, Component} from \"@angular/core\";\n\nclass Company {\n    name: string;\n    industries?: Industry[];\n}\n\nconst COMPANY_ADOBE: string = \"Adobe\";\nconst COMPANY_IBM: string = \"IBM\";\nconst COMPANY_DELL: string = \"Dell\";\n\nclass Industry {\n    name: string;\n    companies?: Company[];\n}\n\nconst INDUSTRY_HW: string = \"Hardware\";\nconst INDUSTRY_SW: string = \"Software\";\n\nconst availableCompanies: Company[] = [\n    {name: COMPANY_ADOBE, industries: [{name: INDUSTRY_SW}]},\n    {name: COMPANY_IBM, industries: [{name: INDUSTRY_SW}, {name: INDUSTRY_HW}]},\n    {name: COMPANY_DELL, industries: [{name: INDUSTRY_HW}, {name: INDUSTRY_SW}]},\n];\n\n@Component({\n    selector: \"dnd-dropzone-visual\",\n    templateUrl: \"./dnd-dropzone-visual-example.component.html\",\n    styleUrls: [\"./dnd-dropzone-visual-example.component.less\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DndDropzoneVisualExampleComponent {\n    public companies: Company[] = availableCompanies;\n\n    public industries: Industry[] = [{name: INDUSTRY_HW, companies: [{name: COMPANY_IBM}]}, {name: INDUSTRY_SW, companies: []}];\n\n    // Note: Prevent user from putting back already displaced items\n    public sourceAcceptsItem(): boolean {\n        return false;\n    }\n\n    public destinationAcceptsItem(company: Company): boolean {\n        return company.name === \"Adobe\" || company.name === \"Dell\";\n    }\n\n    public onItemDropped(event: CdkDragDrop<Company[]>) {\n        if (!this.destinationAcceptsItem(event.item.data)) {\n            return;\n        }\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            if (event.previousContainer.element.nativeElement.classList.contains(\"dragzone\")) {\n                copyArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n            } else {\n                transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n            }\n\n        }\n    }\n}\n","<div cdkDropListGroup>\n    <div class=\"draggable-container pr-2\" id=\"nui-demo-drop-list-1\">\n        <h3>Companies</h3>\n        <div cdkDropList class=\"dragzone draggable-list\"\n             [cdkDropListData]=\"companies\"\n             [cdkDropListSortingDisabled]=\"true\"\n             [cdkDropListEnterPredicate]=\"sourceAcceptsItem\"\n             (cdkDropListDropped)=\"onItemDropped($event)\">\n            <div class=\"items-container\">\n                <div *ngFor=\"let company of companies\" class=\"draggable-item\"\n                     cdkDrag\n                     cdkDragPreviewClass=\"nui-dnd-preview\"\n                     [cdkDragData]=\"company\">\n                    <div class=\"draggable-placeholder\" *cdkDragPlaceholder></div>\n                    {{company.name}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"draggable-container pl-2\" id=\"nui-demo-drop-list-2\">\n        <h3>Industries</h3>\n        <div #dropTarget=nuiDndDropTarget id=\"cdk-drop-list\" *ngFor=\"let industry of industries\" class=\"dropzone draggable-list\"\n             cdkDropList\n             [cdkDropListSortingDisabled]=\"true\"\n             [cdkDropListData]=\"industry.companies\"\n             nuiDndDropTarget\n             [canBeDropped]=\"destinationAcceptsItem\"\n             (cdkDropListDropped)=\"onItemDropped($event)\">\n            <div class=\"title\" *ngIf=\"dropTarget.isDropZoneActive ||  !industry.companies?.length\">\n                {{industry.name}}\n                <!--\n                ShowDropZone: {{ dropTarget.showDropZone$ | async}}\n                CanDrop: {{ dropTarget.canDrop$ | async}}\n                IsDropZoneActive: {{dropTarget.isDropZoneActive}}\n                -->\n            </div>\n            <div class=\"items-container\">\n                <div *ngFor=\"let company of industry.companies\" class=\"draggable-item\"\n                     cdkDrag\n                     cdkDragPreviewClass=\"dropzone-preview\"\n                     [cdkDragData]=\"company\"\n                     [class.invisible]=\"dropTarget.isDropZoneActive\">\n                    {{company.name}}\n                </div>\n            </div>\n            <div *ngIf=\"dropTarget.isDropZoneActive\" class=\"centered-overlay\">\n                <!-- highlight item placeholder-->\n                <div *ngIf=\"(dropTarget.showDropZone$ | async) !== true\">\n                    <nui-icon icon=\"plus\" iconSize=\"medium\" cssClass=\"drop-circle-permanent\"></nui-icon>\n                </div>\n\n                <!-- accepted item placeholder-->\n                <div *ngIf=\"(dropTarget.canLastDragItemBeDropped$ | async)\">\n                    <nui-icon icon=\"plus\" iconSize=\"medium\" cssClass=\"drop-circle-allowed\"></nui-icon>\n                </div>\n\n                <!-- reject item placeholder-->\n                <div *ngIf=\"(dropTarget.canLastDragItemBeDropped$ | async) === false\">\n                    <div class=\"centered-overlay text-nowrap text-special\" i18n>Not allowed</div>\n                    <nui-icon icon=\"close\" iconSize=\"medium\" cssClass=\"drop-circle-not-allowed\"></nui-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","export default \"<div class=\\\"draggable-item\\\" cdkDrag>\\n    I can be dragged from anywhere\\n</div>\\n\";","export default \"<div class=\\\"draggable-item mr-5\\\" cdkDragLockAxis=\\\"y\\\" cdkDrag>\\n    I can only be dragged up/down\\n</div>\\n<div class=\\\"draggable-item mr-5\\\" cdkDragLockAxis=\\\"x\\\" cdkDrag>\\n    I can only be dragged left/right\\n</div>\\n\";","export default \"<div cdkDropList class=\\\"draggable-container\\\" (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n    <div *ngFor=\\\"let item of listItems\\\"  class=\\\"draggable-item\\\"\\n         cdkDrag [cdkDragDisabled]=\\\"!item.enabled\\\"\\n         cdkDragPreviewClass=\\\"dnd-drag-preview\\\">\\n        {{item.title}} - {{ translatedStatus(item.enabled) }}\\n    </div>\\n</div>\\n\";","export default \"import {CdkDragDrop, CdkDropList, copyArrayItem} from \\\"@angular/cdk/drag-drop\\\";\\nimport {ChangeDetectionStrategy, Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"dnd-dropzone\\\",\\n    templateUrl: \\\"./dnd-dropzone.example.component.html\\\",\\n    styleUrls: [\\\"./dnd-dropzone.example.component.less\\\"],\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DndDropzoneExampleComponent {\\n    public sourceItems: string[] = [\\\"Adobe\\\", \\\"IBM\\\" ];\\n    public destinationItems: string[] = [\\\"Dell\\\"];\\n\\n    // prevent user from putting back already displaced items\\n    public sourceAcceptsItem(item: string, dropList?: CdkDropList): boolean {\\n        return false;\\n    }\\n\\n    public destinationAcceptsItem(item: string, dropList?: CdkDropList): boolean {\\n        return item === \\\"Adobe\\\" || item === \\\"Dell\\\";\\n    }\\n\\n    public onItemDropped(event: CdkDragDrop<string[]>) {\\n        if (!this.destinationAcceptsItem(event.item.data)) {\\n            return;\\n        }\\n\\n        copyArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\\n    }\\n}\\n\";","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CdkTreeModule } from \"@angular/cdk/tree\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DEMO_PATH_TOKEN, NuiDndModule, NuiDocsModule, NuiMessageModule } from \"@nova-ui/bits\";\n\nimport { DndAxisConstraintsExampleComponent } from \"./dnd-axis-constraints/dnd-axis-constraints.example.component\";\nimport { DndBasicExampleComponent } from \"./dnd-basic/dnd-basic.example.component\";\nimport { DndCustomHandleExampleComponent } from \"./dnd-custom-handle/dnd-custom-handle.example.component\";\nimport { DndDocsExampleComponent } from \"./dnd-docs/dnd-docs.example.component\";\nimport { DndDragDisabledExampleComponent } from \"./dnd-drag-disabled/dnd-drag-disabled-example.component\";\nimport { DndDragPlaceholderExampleComponent } from \"./dnd-drag-placeholder/dnd-drag-placeholder-example.component\";\nimport { DndDragPreviewExampleComponent } from \"./dnd-drag-preview/dnd-drag-preview.example.component\";\nimport { DndDropzoneVisualExampleComponent } from \"./dnd-dropzone-visual/dnd-dropzone-visual-example.component\";\nimport { DndDropzoneExampleComponent } from \"./dnd-dropzone/dnd-dropzone.example.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        children: [\n            {\n                path: \"\",\n                component: DndDocsExampleComponent,\n            },\n            {\n                path: \"dropzone\",\n                component: DndDropzoneExampleComponent,\n            },\n            {\n                path: \"dropzone-visual\",\n                component: DndDropzoneExampleComponent,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        DndBasicExampleComponent,\n        DndCustomHandleExampleComponent,\n        DndDragDisabledExampleComponent,\n        DndDragPlaceholderExampleComponent,\n        DndDragPreviewExampleComponent,\n        DndDocsExampleComponent,\n        DndDropzoneExampleComponent,\n        DndDropzoneVisualExampleComponent,\n        DndAxisConstraintsExampleComponent,\n    ],\n    imports: [\n        NuiDocsModule,\n        NuiDndModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n        DragDropModule,\n        CdkTreeModule,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n})\nexport class DndModule {\n}\n","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@min-height: 50px;\\n\\n.draggable-container {\\n    width: 50%;\\n    float: left;\\n    min-height: (@min-height * 5);\\n\\n    .draggable-list {\\n        border: solid @dnd-zone-border-width transparent;\\n        position: relative;\\n        padding: @nui-space-sm;\\n        transition: all .3s ease-in-out;\\n\\n        .title {\\n            position: absolute;\\n        }\\n        &.cdk-drop-list-dragging, &.cdk-drop-list-receiving {\\n            .draggable-item:hover {\\n                box-shadow: none;\\n                background-color: initial;\\n            }\\n        }\\n    }\\n}\\n\\n.dragzone {\\n    .cdk-drop-list-dragging .draggable-item:not(.cdk-drag-placeholder) {\\n        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n    }\\n}\\n\\n.dropzone {\\n    margin: 10px 0;\\n    min-height: (2 * (@min-height + @nui-space-md + @dnd-zone-border-width));\\n\\n    .cdk-drag-placeholder, .draggable-placeholder {\\n        visibility: hidden;\\n        min-height: @min-height - @dnd-zone-border-width;\\n    }\\n}\\n\\n.item, .draggable-item, .draggable-placeholder {\\n    min-height: @min-height + @dnd-item-border-width;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    text-align: center;\\n    border: @dnd-item-border-width @nui-color-line-default solid;\\n    .transition(box-shadow 0.4s);\\n}\\n\\n.item, .draggable-item {\\n    border-bottom-color: transparent;\\n\\n    &.cdk-drag:hover:not(.cdk-drag-placeholder) {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n&.items-container :last-child { border-bottom-color: @nui-color-line-default;}\\n\\n.centered-overlay .text-special {\\n    top: -25px;\\n}\\n\\n// This class is added to a cdkDrag element when the user has stopped dragging.\\n// CDK will animate the element from its drop position to the final position inside the cdkDropList container\\n.cdk-drag-animating {\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n\";","export default \"import { DragDropModule } from \\\"@angular/cdk/drag-drop\\\";\\nimport { CdkTreeModule } from \\\"@angular/cdk/tree\\\";\\nimport { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule, Routes } from \\\"@angular/router\\\";\\nimport { DEMO_PATH_TOKEN, NuiDndModule, NuiDocsModule, NuiMessageModule } from \\\"@nova-ui/bits\\\";\\n\\nimport { DndAxisConstraintsExampleComponent } from \\\"./dnd-axis-constraints/dnd-axis-constraints.example.component\\\";\\nimport { DndBasicExampleComponent } from \\\"./dnd-basic/dnd-basic.example.component\\\";\\nimport { DndCustomHandleExampleComponent } from \\\"./dnd-custom-handle/dnd-custom-handle.example.component\\\";\\nimport { DndDocsExampleComponent } from \\\"./dnd-docs/dnd-docs.example.component\\\";\\nimport { DndDragDisabledExampleComponent } from \\\"./dnd-drag-disabled/dnd-drag-disabled-example.component\\\";\\nimport { DndDragPlaceholderExampleComponent } from \\\"./dnd-drag-placeholder/dnd-drag-placeholder-example.component\\\";\\nimport { DndDragPreviewExampleComponent } from \\\"./dnd-drag-preview/dnd-drag-preview.example.component\\\";\\nimport { DndDropzoneVisualExampleComponent } from \\\"./dnd-dropzone-visual/dnd-dropzone-visual-example.component\\\";\\nimport { DndDropzoneExampleComponent } from \\\"./dnd-dropzone/dnd-dropzone.example.component\\\";\\n\\nconst routes: Routes = [\\n    {\\n        path: \\\"\\\",\\n        children: [\\n            {\\n                path: \\\"\\\",\\n                component: DndDocsExampleComponent,\\n            },\\n            {\\n                path: \\\"dropzone\\\",\\n                component: DndDropzoneExampleComponent,\\n            },\\n            {\\n                path: \\\"dropzone-visual\\\",\\n                component: DndDropzoneExampleComponent,\\n            },\\n        ],\\n    },\\n];\\n\\n@NgModule({\\n    declarations: [\\n        DndBasicExampleComponent,\\n        DndCustomHandleExampleComponent,\\n        DndDragDisabledExampleComponent,\\n        DndDragPlaceholderExampleComponent,\\n        DndDragPreviewExampleComponent,\\n        DndDocsExampleComponent,\\n        DndDropzoneExampleComponent,\\n        DndDropzoneVisualExampleComponent,\\n        DndAxisConstraintsExampleComponent,\\n    ],\\n    imports: [\\n        NuiDocsModule,\\n        NuiDndModule,\\n        NuiMessageModule,\\n        RouterModule.forChild(routes),\\n        DragDropModule,\\n        CdkTreeModule,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n})\\nexport class DndModule {\\n}\\n\";","export default \"@import (reference) \\\"nui-framework-variables\\\";\\n@import (reference) \\\"mixins\\\";\\n\\n@box-width: 150px;\\n@box-height: 100px;\\n\\n.draggable-item {\\n    width: @box-width;\\n    height: @box-height;\\n    padding: @nui-space-md;\\n    box-sizing: border-box;\\n    border: solid 1px @gray;\\n    display: inline-flex;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    position: relative;\\n    z-index: 1;\\n    .transition(box-shadow 0.4s);\\n\\n    &:hover, &.cdk-drag-dragging {\\n        .nui-dnd-hover-state();\\n        .nui-dnd-raised-state();\\n        cursor: move;\\n        padding: @nui-space-md;\\n    }\\n}\\n\";","export default \"import {CdkDragDrop, moveItemInArray} from \\\"@angular/cdk/drag-drop\\\";\\nimport { Component} from \\\"@angular/core\\\";\\n\\nclass IListItem {\\n    title: string;\\n    enabled?: boolean;\\n    hasHandle?: boolean;\\n}\\n\\n@Component({\\n    selector: \\\"dnd-custom-handle\\\",\\n    templateUrl: \\\"./dnd-custom-handle.example.component.html\\\",\\n    styleUrls: [\\\"./dnd-custom-handle.example.component.less\\\"],\\n})\\nexport class DndCustomHandleExampleComponent {\\n    public mousedOver: boolean[] = [];\\n    public listItems: IListItem[] = [\\n        {\\n            title: \\\"I can only be dragged using the handle\\\",\\n            enabled: true,\\n            hasHandle: true,\\n        },\\n        {\\n            title: \\\" I can be dragged without any handle\\\",\\n            enabled: true,\\n            hasHandle: false,\\n        },\\n        {\\n            title: \\\"Disabled item CAN'T be dragged\\\",\\n            enabled: false,\\n        },\\n    ];\\n\\n    public onItemDropped(event: CdkDragDrop<IListItem[]>) {\\n        moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\\n    }\\n}\\n\";","export default \"<!-- list of draggable items  -->\\n<div cdkDropList class=\\\"draggable-container\\\" (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n    <ng-container *ngFor=\\\"let item of listItems; let i=index\\\">\\n        <div cdkDrag\\n             cdkDragPreviewClass=\\\"dnd-drag-preview\\\"\\n             [cdkDragDisabled]=\\\"!item.enabled\\\"\\n             class=\\\"draggable-item\\\"\\n             [ngClass] = \\\"{\\n                'with-handle': item.hasHandle,\\n                'nui-dnd-raised-state': item.withHandle && mousedOver[i]\\n            }\\\">\\n\\n            <!-- raised state style is applied ONLY when the mouse is over the handle -->\\n            <div *ngIf=\\\"item.withHandle\\\" cdkDragHandle class=\\\"drag-handle\\\" (mouseover)=\\\"mousedOver[i]=true\\\" (mouseout)=\\\"mousedOver[i]=false\\\">\\n                <nui-icon icon=\\\"drag\\\"></nui-icon>\\n            </div>\\n            {{item.title}}\\n        </div>\\n    </ng-container>\\n</div>\\n\";","export default \"<div cdkDropListGroup>\\n    <!-- source from where the items will be dragged -->\\n    <div class=\\\"draggable-container pr-2\\\" id=\\\"nui-demo-drop-list-1\\\">\\n        <h3>Source</h3>\\n        <div cdkDropList class=\\\"dragzone draggable-list\\\"\\n             [cdkDropListData]=\\\"sourceItems\\\"\\n             [cdkDropListSortingDisabled]=\\\"true\\\"\\n             [cdkDropListEnterPredicate]=\\\"sourceAcceptsItem\\\">\\n\\n            <!-- display list of items -->\\n            <div class=\\\"items-container\\\">\\n                <div *ngFor=\\\"let item of sourceItems\\\" class=\\\"draggable-item\\\"\\n                     cdkDrag [cdkDragData]=\\\"item\\\"\\n                     cdkDragPreviewClass=\\\"nui-dnd-preview\\\">\\n                    {{item}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- destination dropzone where the items will be dropped -->\\n    <div class=\\\"draggable-container pl-2\\\"  id=\\\"nui-demo-drop-list-2\\\">\\n        <h3>Destination</h3>\\n        <div cdkDropList class=\\\"dropzone draggable-list\\\"\\n             nuiDndDropTarget\\n             #destinationTarget=nuiDndDropTarget\\n             [cdkDropListData]=\\\"destinationItems\\\"\\n             [canBeDropped]=\\\"destinationAcceptsItem\\\"\\n             (cdkDropListDropped)=\\\"onItemDropped($event)\\\">\\n\\n            <!-- display list of items -->\\n            <div class=\\\"items-container\\\">\\n                <!-- make items invisible while a drag operation is in progress and dropzone is active-->\\n                <div *ngFor=\\\"let item of destinationItems\\\" class=\\\"item\\\"\\n                     [class.invisible]=\\\"destinationTarget.isDropZoneActive\\\">\\n                    {{item}}\\n                </div>\\n            </div>\\n\\n            <!-- highlight dropzone area -->\\n            <ng-container *ngTemplateOutlet=\\\"highlightDropzoneTemplate; context: {target: destinationTarget}\\\"></ng-container>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- template to highlight a dropzone and inform user about the drag operation outcome (accept item or not) -->\\n<ng-template #highlightDropzoneTemplate let-target=\\\"target\\\">\\n    <div *ngIf=\\\"target.isDropZoneActive\\\" class=\\\"centered-overlay text-center\\\">\\n\\n        <!-- default state, highlight item placeholder when dragging starts -->\\n        <div *ngIf=\\\"(target.showDropZone$ | async) !== true\\\">\\n            <!-- This is a drop zone area where you can drag your items -->\\n            <nui-icon icon=\\\"plus\\\" iconSize=\\\"medium\\\" cssClass=\\\"drop-circle-permanent\\\"></nui-icon>\\n        </div>\\n\\n        <!-- accepted item placeholder -->\\n        <div *ngIf=\\\"(target.canLastDragItemBeDropped$ | async)\\\">\\n            <!-- The item currently dragged is accepted in this dropzone -->\\n            <nui-icon icon=\\\"plus\\\" iconSize=\\\"medium\\\" cssClass=\\\"drop-circle-allowed\\\"></nui-icon>\\n        </div>\\n\\n        <!-- reject item placeholder-->\\n        <div *ngIf=\\\"(target.canLastDragItemBeDropped$ | async) === false\\\">\\n            <!-- The item currently dragged is NOT accepted in this dropzone -->\\n            <div class=\\\"centered-overlay text-nowrap text-special\\\" i18n>Not allowed</div>\\n            <nui-icon icon=\\\"close\\\" iconSize=\\\"medium\\\" cssClass=\\\"drop-circle-not-allowed\\\"></nui-icon>\\n        </div>\\n    </div>\\n</ng-template>\\n\";"],"sourceRoot":"webpack:///"}