{"version":3,"sources":["webpack:///demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.html?d034","webpack:///demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.html","webpack:///demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.ts","webpack:///demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.ts","webpack:///demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.html","webpack:///demo/src/components/demo/tooltip/index.ts?0452","webpack:///demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.html?068e","webpack:///demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.ts?144f","webpack:///demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.ts?1b79","webpack:///demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.ts?2684","webpack:///demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.ts?3788","webpack:///demo/src/components/demo/tooltip/tooltip-position/tooltip-position.example.component.less","webpack:///demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.html?3f47","webpack:///demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.ts","webpack:///demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.html","webpack:///node_modules/raw-loader/dist/cjs.js .*\\.(ts|html|less)$?f9df","webpack:///demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.ts","webpack:///demo/src/components/demo/tooltip/tooltip-visual-test/tooltip-visual-test.component.html","webpack:///demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.html?62c3","webpack:///demo/src/components/demo/tooltip/tooltip.module.ts","webpack:///demo/src/components/demo/tooltip/tooltip-disabled/tooltip-disabled.example.component.ts?7234","webpack:///demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.ts?7578","webpack:///demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.ts","webpack:///demo/src/components/demo/tooltip/tooltip-trigger/tooltip-trigger.example.component.html","webpack:///demo/src/components/demo/tooltip/index.ts","webpack:///demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.ts","webpack:///demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.html","webpack:///demo/src/components/demo/tooltip/tooltip-basic/tooltip-basic.example.component.html?9481","webpack:///demo/src/components/demo/tooltip/tooltip.module.ts?c1bc","webpack:///demo/src/components/demo/tooltip/tooltip-docs/tooltip-docs.example.component.html?cd34"],"names":["TooltipPositionExampleComponent","positions","TooltipDocsExampleComponent","TooltipDisabledExampleComponent","isDisabled","tooltip","$localize","message","value","onValueChanged","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","TooltipVisualTestComponent","tooltipMessage","routes","path","component","data","ga","showThemeSwitcher","TooltipDemoModule","provide","useFactory","forChild","TooltipTriggerExampleComponent","tooltipText","state","setTimeout","event","stopPropagation","show","disableTooltip","handleClick","TooltipBasicExampleComponent"],"mappings":"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","file":"demo-tooltip-tooltip-module-es5.js","sourcesContent":["export default \"<div class=\\\"d-flex flex-row justify-content-start\\\">\\n    <div class=\\\"d-flex flex-column mr-5\\\">\\n        <h4 i18n>Selected position:</h4>\\n        <nui-radio-group name=\\\"positions\\\" [(value)]=\\\"selectedPosition\\\">\\n            <nui-radio *ngFor=\\\"let position of positions\\\"\\n                        [value]=\\\"position\\\"\\n                        [checked]=\\\"position === 'top'\\\" i18n>\\n                {{position}}\\n            </nui-radio>\\n        </nui-radio-group>\\n    </div>\\n    <div class=\\\"d-flex ml-5\\\">\\n        <div class=\\\"d-flex flex-column justify-content-center align-items-center container\\\">\\n            <div class=\\\"with-border\\\">\\n                <span nuiTooltip=\\\"I'm the Tooltip!\\\" [tooltipPlacement]=\\\"selectedPosition\\\" i18n>Hover Over Me!</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","<div class=\"d-flex flex-row justify-content-start\">\n    <div class=\"d-flex flex-column mr-5\">\n        <h4 i18n>Selected position:</h4>\n        <nui-radio-group name=\"positions\" [(value)]=\"selectedPosition\">\n            <nui-radio *ngFor=\"let position of positions\"\n                        [value]=\"position\"\n                        [checked]=\"position === 'top'\" i18n>\n                {{position}}\n            </nui-radio>\n        </nui-radio-group>\n    </div>\n    <div class=\"d-flex ml-5\">\n        <div class=\"d-flex flex-column justify-content-center align-items-center container\">\n            <div class=\"with-border\">\n                <span nuiTooltip=\"I'm the Tooltip!\" [tooltipPlacement]=\"selectedPosition\" i18n>Hover Over Me!</span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { TooltipPosition } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-tooltip-position-example\",\n    templateUrl: \"tooltip-position.example.component.html\",\n    styleUrls: [\"./tooltip-position.example.component.less\"],\n})\n\nexport class TooltipPositionExampleComponent {\n    public positions: TooltipPosition[] = [ \"top\", \"bottom\", \"left\", \"right\" ];\n    public selectedPosition: string;\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"nui-tooltip-docs-example\",\n    templateUrl: \"./tooltip-docs.example.component.html\",\n})\n\nexport class TooltipDocsExampleComponent {}\n\n","<h2>Required Modules</h2>\n<ul>\n    <li>\n        <code>NuiTooltipModule</code>\n    </li>\n</ul>\n\n<h2>Basic Usage</h2>\n<p>\n    <code>Tooltip</code> is a directive that creates a tooltip container, and can be used with any element on the page. It is extremely easy to use, simply add a tooltip directive \n    attribute, and assign a desired value to it.<br />\n    <nui-message type=\"info\"\n                 [allowDismiss]=\"false\">\n                 <strong>Note:</strong> Toolitp's <em>MAX WIDTH</em> is <strong>250px</strong>. The longer text will wrap to a new line if exceeds\n    </nui-message>\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-basic\" exampleTitle=\"Basic Usage\">\n    <nui-tooltip-basic-example></nui-tooltip-basic-example>\n</nui-example-wrapper>\n\n<h2>Disabled Tooltip</h2>\n<p>\n    <code>Tooltip</code> can be conditionally disabled, meaning it is possible to quit showing it under certain conditions. Here is an example:\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-disabled\" exampleTitle=\"Disabled Tooltip Usage Example\">\n    <nui-tooltip-disabled-example></nui-tooltip-disabled-example>\n</nui-example-wrapper>\n\n<h2>Tooltip Placement</h2>\n<p>\n    <code>Tooltip</code> can be positioned differently in relation to a host component. By default, <code>nui-tooltip</code> position is <code>top</code>, however, the tooltip \n    can change its position if there is not enough space to position itself in a chosen direction. The example below shows how you can manually set the position of <code>nui-tooltip</code> \n    using the <code>tooltipPlacement</code> attribute.\n</p>\n<p>\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-position\" exampleTitle=\"Position Tooltip Usage Example\">\n    <nui-tooltip-position-example></nui-tooltip-position-example>\n</nui-example-wrapper>\n\n<h2>Tooltip Manual Trigger</h2>\n<p>\n    <code>Tooltip</code> can be triggered manually using it's public <code>show()</code>, <code>hide()</code>, and <code>toggle()</code> methods. \n    Exmple below shows the example of typical usage of the feature.\n</p>\n<p>\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.<br />\n    <mark>Thanks to the cdk overlay scrolling strategy, a tooltip will disappear on scrolling only if it's gone off the viewport of the screen.</mark>\n</p>\n\n<nui-example-wrapper filenamePrefix=\"tooltip-trigger\" exampleTitle=\"Manual Tooltip Trigger Usage Example\">\n    <nui-tooltip-trigger-example></nui-tooltip-trigger-example>\n</nui-example-wrapper>\n\n\n","export default \"export * from \\\"./tooltip-basic/tooltip-basic.example.component\\\";\\nexport * from \\\"./tooltip-docs/tooltip-docs.example.component\\\";\\nexport * from \\\"./tooltip-disabled/tooltip-disabled.example.component\\\";\\nexport * from \\\"./tooltip-position/tooltip-position.example.component\\\";\\nexport * from \\\"./tooltip-trigger/tooltip-trigger.example.component\\\";\\nexport * from \\\"./tooltip-visual-test/tooltip-visual-test.component\\\";\\n\";","export default \"<div class=\\\"d-flex justify-content-start align-items-center w-25\\\">\\n    <button nui-button\\n            class=\\\"mr-auto\\\"\\n            #tooltip=\\\"nuiTooltip\\\"\\n            type=\\\"button\\\"\\n            [nuiTooltip]=\\\"tooltipText\\\"\\n            [nuiTooltipDisabled]=\\\"isDisabled\\\"\\n            (click)=\\\"tooltip.toggle()\\\"\\n            (mouseenter)=\\\"disableTooltip(true)\\\" i18n>\\n            <strong>Toggle</strong> Tooltip\\n    </button>\\n\\n    <div class=\\\"d-flex align-items-start flex-column\\\">\\n        <button nui-button\\n                type=\\\"button\\\"\\n                size=\\\"compact\\\"displayStyle=\\\"action\\\"\\n                (click)=\\\"handleClick($event, tooltip)\\\" i18n>\\n            Click to <strong>show</strong> tooltip\\n        </button>\\n\\n        <button nui-button\\n                type=\\\"button\\\"\\n                size=\\\"compact\\\"displayStyle=\\\"action\\\"\\n                (click)=\\\"tooltip.hide()\\\" i18n>\\n            Click to <strong>hide</strong> tooltip\\n        </button>\\n    </div>\\n</div>\\n\";","export default \"import {Component} from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-visual-test\\\",\\n    templateUrl: \\\"./tooltip-visual-test.component.html\\\",\\n})\\nexport class TooltipVisualTestComponent {\\n    tooltipMessage = \\\"ThisTooltipHasBeenCalledManuallyWithCriticallyLongTooltipMessage\\\";\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { TooltipPosition } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-position-example\\\",\\n    templateUrl: \\\"tooltip-position.example.component.html\\\",\\n    styleUrls: [\\\"./tooltip-position.example.component.less\\\"],\\n})\\n\\nexport class TooltipPositionExampleComponent {\\n    public positions: TooltipPosition[] = [ \\\"top\\\", \\\"bottom\\\", \\\"left\\\", \\\"right\\\" ];\\n    public selectedPosition: string;\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\nimport { TooltipDirective } from \\\"@nova-ui/bits\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-trigger-example\\\",\\n    templateUrl: \\\"tooltip-trigger.example.component.html\\\",\\n})\\n\\nexport class TooltipTriggerExampleComponent {\\n    public tooltipText = \\\"I am a Tooltip!\\\";\\n    public isDisabled = false;\\n\\n    constructor() {}\\n\\n    public disableTooltip(state: boolean) {\\n        this.isDisabled = state;\\n        // We only set the tooltip to a disabled state above to hide the tooltip.\\n        // Now we want to enable it back, so it works with the click event.\\n        setTimeout(() => this.isDisabled = !state, 0);\\n    }\\n\\n    public handleClick(event: MouseEvent, tooltip: TooltipDirective) {\\n        event.stopPropagation();\\n        tooltip.show();\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-tooltip-basic-example\\\",\\n    templateUrl: \\\"tooltip-basic.example.component.html\\\",\\n})\\n\\nexport class TooltipBasicExampleComponent {\\n    public tooltip = $localize `I am a Tooltip!`;\\n\\n    constructor() {}\\n}\\n\";","export default \"@import (reference) \\\"mixins\\\";\\n\\n.container {\\n    width: 300px;\\n    border: 1px dashed;\\n    .setCssVariable(border-color, nui-color-line-default);\\n    padding: 0;\\n}\\n\\n.with-border {\\n    border: 1px red dashed;\\n    padding: 5px;\\n}\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\"><h3>Basic button</h3></div>\\n    <div class=\\\"row\\\">\\n        <button nui-button type=\\\"button\\\" id=\\\"basic-tooltip\\\" nuiTooltip=\\\"Default tooltip\\\">\\n            Standard tooltip example\\n        </button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Custom position: left, bottom, right</h3></div>\\n    <div class=\\\"row\\\">\\n        <button nui-button\\n                id=\\\"left-tooltip\\\"\\n                nuiTooltip=\\\"Left-side tooltip\\\"\\n                tooltipPlacement=\\\"left\\\"\\n                type=\\\"button\\\">\\n            Tooltip on the left\\n        </button>\\n        <button nui-button\\n                id=\\\"bottom-tooltip\\\"\\n                nuiTooltip=\\\"Bottom-placed tooltip\\\"\\n                tooltipPlacement=\\\"bottom\\\"\\n                type=\\\"button\\\">\\n            Tooltip on the bottom\\n        </button>\\n        <button nui-button\\n                id=\\\"right-tooltip\\\"\\n                nuiTooltip=\\\"Right-side tooltip\\\"\\n                tooltipPlacement=\\\"right\\\"\\n                type=\\\"button\\\">\\n            Tooltip on the right\\n        </button>\\n    </div>\\n\\n    <div class=\\\"row\\\"><h3>Manual Triggering</h3></div>\\n    <div class=\\\"row\\\">\\n        <span #tooltip=\\\"nuiTooltip\\\"\\n              [nuiTooltip]=\\\"tooltipMessage\\\">\\n        </span>\\n        <button id=\\\"manual-tooltip\\\" nui-button type=\\\"button\\\" (click)=\\\"tooltip.toggle()\\\">\\n            Manually toggle tooltip\\n        </button>\\n    </div>\\n</div>\\n\";","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-tooltip-disabled-example\",\n    templateUrl: \"tooltip-disabled.example.component.html\",\n})\n\nexport class TooltipDisabledExampleComponent {\n    public isDisabled = false;\n    public tooltip = $localize `I am a Tooltip!`;\n    public message = $localize `Toggle to switch state`;\n\n\n    constructor() {}\n\n    public onValueChanged(value: boolean) {\n        this.isDisabled = value;\n        this.message = value\n            ? $localize `Tooltip is Disabled and hidden!`\n            : $localize `Tooltip is Enabled and can be shown\"`;\n    }\n}\n","<div class=\"d-flex flex-column\">\n    <div class=\"d-flex flex-row mb-5\">\n        <span [nuiTooltip]=\"tooltip\" [nuiTooltipDisabled]=\"isDisabled\" i18n>\n            Hover over me!\n        </span>\n    </div>\n    <div class=\"d-flex flex-row\">\n        <nui-switch [value]=\"isDisabled\" (valueChange)=\"onValueChanged($event)\" i18n>\n            {{message}}\n        </nui-switch>\n    </div>\n</div>\n","var map = {\n\t\"./index.ts\": \"BFJ/\",\n\t\"./tooltip-basic/tooltip-basic.example.component.html\": \"lIGJ\",\n\t\"./tooltip-basic/tooltip-basic.example.component.ts\": \"N4ju\",\n\t\"./tooltip-disabled/tooltip-disabled.example.component.html\": \"YsOG\",\n\t\"./tooltip-disabled/tooltip-disabled.example.component.ts\": \"cjQU\",\n\t\"./tooltip-docs/tooltip-docs.example.component.html\": \"zTQh\",\n\t\"./tooltip-docs/tooltip-docs.example.component.ts\": \"dXiJ\",\n\t\"./tooltip-position/tooltip-position.example.component.html\": \"0DQD\",\n\t\"./tooltip-position/tooltip-position.example.component.less\": \"O9ru\",\n\t\"./tooltip-position/tooltip-position.example.component.ts\": \"G3nC\",\n\t\"./tooltip-trigger/tooltip-trigger.example.component.html\": \"Bo5W\",\n\t\"./tooltip-trigger/tooltip-trigger.example.component.ts\": \"JoS3\",\n\t\"./tooltip-visual-test/tooltip-visual-test.component.html\": \"P0cZ\",\n\t\"./tooltip-visual-test/tooltip-visual-test.component.ts\": \"FE9U\",\n\t\"./tooltip.module.ts\": \"wbyP\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RvtI\";","import {Component} from \"@angular/core\";\n\n@Component({\n    selector: \"nui-tooltip-visual-test\",\n    templateUrl: \"./tooltip-visual-test.component.html\",\n})\nexport class TooltipVisualTestComponent {\n    tooltipMessage = \"ThisTooltipHasBeenCalledManuallyWithCriticallyLongTooltipMessage\";\n}\n","<div class=\"container\">\n    <div class=\"row\"><h3>Basic button</h3></div>\n    <div class=\"row\">\n        <button nui-button type=\"button\" id=\"basic-tooltip\" nuiTooltip=\"Default tooltip\">\n            Standard tooltip example\n        </button>\n    </div>\n\n    <div class=\"row\"><h3>Custom position: left, bottom, right</h3></div>\n    <div class=\"row\">\n        <button nui-button\n                id=\"left-tooltip\"\n                nuiTooltip=\"Left-side tooltip\"\n                tooltipPlacement=\"left\"\n                type=\"button\">\n            Tooltip on the left\n        </button>\n        <button nui-button\n                id=\"bottom-tooltip\"\n                nuiTooltip=\"Bottom-placed tooltip\"\n                tooltipPlacement=\"bottom\"\n                type=\"button\">\n            Tooltip on the bottom\n        </button>\n        <button nui-button\n                id=\"right-tooltip\"\n                nuiTooltip=\"Right-side tooltip\"\n                tooltipPlacement=\"right\"\n                type=\"button\">\n            Tooltip on the right\n        </button>\n    </div>\n\n    <div class=\"row\"><h3>Manual Triggering</h3></div>\n    <div class=\"row\">\n        <span #tooltip=\"nuiTooltip\"\n              [nuiTooltip]=\"tooltipMessage\">\n        </span>\n        <button id=\"manual-tooltip\" nui-button type=\"button\" (click)=\"tooltip.toggle()\">\n            Manually toggle tooltip\n        </button>\n    </div>\n</div>\n","export default \"<div class=\\\"d-flex flex-column\\\">\\n    <div class=\\\"d-flex flex-row mb-5\\\">\\n        <span [nuiTooltip]=\\\"tooltip\\\" [nuiTooltipDisabled]=\\\"isDisabled\\\" i18n>\\n            Hover over me!\\n        </span>\\n    </div>\\n    <div class=\\\"d-flex flex-row\\\">\\n        <nui-switch [value]=\\\"isDisabled\\\" (valueChange)=\\\"onValueChanged($event)\\\" i18n>\\n            {{message}}\\n        </nui-switch>\\n    </div>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    DEMO_PATH_TOKEN,\n    NuiButtonModule,\n    NuiDocsModule,\n    NuiMessageModule,\n    NuiRadioModule,\n    NuiSwitchModule,\n    NuiTooltipModule,\n    SrlcStage,\n} from \"@nova-ui/bits\";\n\nimport {\n    TooltipBasicExampleComponent,\n    TooltipDisabledExampleComponent,\n    TooltipDocsExampleComponent,\n    TooltipPositionExampleComponent,\n    TooltipTriggerExampleComponent,\n    TooltipVisualTestComponent,\n} from \"./index\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: TooltipDocsExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n            showThemeSwitcher: true,\n        },\n    },\n    {\n        path: \"tooltip-basic\",\n        component: TooltipBasicExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-disabled\",\n        component: TooltipDisabledExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-position\",\n        component: TooltipPositionExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-trigger\",\n        component: TooltipTriggerExampleComponent,\n        data: {\n            \"srlc\": {\n                \"stage\": SrlcStage.ga,\n            },\n        },\n    },\n    {\n        path: \"tooltip-visual-test\",\n        component: TooltipVisualTestComponent,\n        data: {\n            \"srlc\": {\n                \"hideIndicator\": true,\n            },\n        },\n    },\n];\n\n@NgModule({\n    imports: [\n        NuiButtonModule,\n        NuiTooltipModule,\n        NuiSwitchModule,\n        NuiRadioModule,\n        NuiDocsModule,\n        NuiMessageModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        TooltipBasicExampleComponent,\n        TooltipDocsExampleComponent,\n        TooltipDisabledExampleComponent,\n        TooltipPositionExampleComponent,\n        TooltipTriggerExampleComponent,\n        TooltipVisualTestComponent,\n    ],\n    providers: [\n        {\n            provide: DEMO_PATH_TOKEN,\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\.(ts|html|less)$/),\n        },\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class TooltipDemoModule {\n}\n","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n\\n@Component({\\n    selector: \\\"nui-tooltip-disabled-example\\\",\\n    templateUrl: \\\"tooltip-disabled.example.component.html\\\",\\n})\\n\\nexport class TooltipDisabledExampleComponent {\\n    public isDisabled = false;\\n    public tooltip = $localize `I am a Tooltip!`;\\n    public message = $localize `Toggle to switch state`;\\n\\n\\n    constructor() {}\\n\\n    public onValueChanged(value: boolean) {\\n        this.isDisabled = value;\\n        this.message = value\\n            ? $localize `Tooltip is Disabled and hidden!`\\n            : $localize `Tooltip is Enabled and can be shown\\\"`;\\n    }\\n}\\n\";","export default \"import { Component } from \\\"@angular/core\\\";\\n\\n@Component({\\n    selector: \\\"nui-tooltip-docs-example\\\",\\n    templateUrl: \\\"./tooltip-docs.example.component.html\\\",\\n})\\n\\nexport class TooltipDocsExampleComponent {}\\n\\n\";","import { Component } from \"@angular/core\";\nimport { TooltipDirective } from \"@nova-ui/bits\";\n\n@Component({\n    selector: \"nui-tooltip-trigger-example\",\n    templateUrl: \"tooltip-trigger.example.component.html\",\n})\n\nexport class TooltipTriggerExampleComponent {\n    public tooltipText = \"I am a Tooltip!\";\n    public isDisabled = false;\n\n    constructor() {}\n\n    public disableTooltip(state: boolean) {\n        this.isDisabled = state;\n        // We only set the tooltip to a disabled state above to hide the tooltip.\n        // Now we want to enable it back, so it works with the click event.\n        setTimeout(() => this.isDisabled = !state, 0);\n    }\n\n    public handleClick(event: MouseEvent, tooltip: TooltipDirective) {\n        event.stopPropagation();\n        tooltip.show();\n    }\n}\n","<div class=\"d-flex justify-content-start align-items-center w-25\">\n    <button nui-button\n            class=\"mr-auto\"\n            #tooltip=\"nuiTooltip\"\n            type=\"button\"\n            [nuiTooltip]=\"tooltipText\"\n            [nuiTooltipDisabled]=\"isDisabled\"\n            (click)=\"tooltip.toggle()\"\n            (mouseenter)=\"disableTooltip(true)\" i18n>\n            <strong>Toggle</strong> Tooltip\n    </button>\n\n    <div class=\"d-flex align-items-start flex-column\">\n        <button nui-button\n                type=\"button\"\n                size=\"compact\"displayStyle=\"action\"\n                (click)=\"handleClick($event, tooltip)\" i18n>\n            Click to <strong>show</strong> tooltip\n        </button>\n\n        <button nui-button\n                type=\"button\"\n                size=\"compact\"displayStyle=\"action\"\n                (click)=\"tooltip.hide()\" i18n>\n            Click to <strong>hide</strong> tooltip\n        </button>\n    </div>\n</div>\n","export * from \"./tooltip-basic/tooltip-basic.example.component\";\nexport * from \"./tooltip-docs/tooltip-docs.example.component\";\nexport * from \"./tooltip-disabled/tooltip-disabled.example.component\";\nexport * from \"./tooltip-position/tooltip-position.example.component\";\nexport * from \"./tooltip-trigger/tooltip-trigger.example.component\";\nexport * from \"./tooltip-visual-test/tooltip-visual-test.component\";\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: \"nui-tooltip-basic-example\",\n    templateUrl: \"tooltip-basic.example.component.html\",\n})\n\nexport class TooltipBasicExampleComponent {\n    public tooltip = $localize `I am a Tooltip!`;\n\n    constructor() {}\n}\n","<span [nuiTooltip]=\"tooltip\" i18n>Hover over me!</span>\n","export default \"<span [nuiTooltip]=\\\"tooltip\\\" i18n>Hover over me!</span>\\n\";","export default \"import { NgModule } from \\\"@angular/core\\\";\\nimport { RouterModule } from \\\"@angular/router\\\";\\nimport {\\n    DEMO_PATH_TOKEN,\\n    NuiButtonModule,\\n    NuiDocsModule,\\n    NuiMessageModule,\\n    NuiRadioModule,\\n    NuiSwitchModule,\\n    NuiTooltipModule,\\n    SrlcStage,\\n} from \\\"@nova-ui/bits\\\";\\n\\nimport {\\n    TooltipBasicExampleComponent,\\n    TooltipDisabledExampleComponent,\\n    TooltipDocsExampleComponent,\\n    TooltipPositionExampleComponent,\\n    TooltipTriggerExampleComponent,\\n    TooltipVisualTestComponent,\\n} from \\\"./index\\\";\\n\\nconst routes = [\\n    {\\n        path: \\\"\\\",\\n        component: TooltipDocsExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n            showThemeSwitcher: true,\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-basic\\\",\\n        component: TooltipBasicExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-disabled\\\",\\n        component: TooltipDisabledExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-position\\\",\\n        component: TooltipPositionExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-trigger\\\",\\n        component: TooltipTriggerExampleComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"stage\\\": SrlcStage.ga,\\n            },\\n        },\\n    },\\n    {\\n        path: \\\"tooltip-visual-test\\\",\\n        component: TooltipVisualTestComponent,\\n        data: {\\n            \\\"srlc\\\": {\\n                \\\"hideIndicator\\\": true,\\n            },\\n        },\\n    },\\n];\\n\\n@NgModule({\\n    imports: [\\n        NuiButtonModule,\\n        NuiTooltipModule,\\n        NuiSwitchModule,\\n        NuiRadioModule,\\n        NuiDocsModule,\\n        NuiMessageModule,\\n        RouterModule.forChild(routes),\\n    ],\\n    declarations: [\\n        TooltipBasicExampleComponent,\\n        TooltipDocsExampleComponent,\\n        TooltipDisabledExampleComponent,\\n        TooltipPositionExampleComponent,\\n        TooltipTriggerExampleComponent,\\n        TooltipVisualTestComponent,\\n    ],\\n    providers: [\\n        {\\n            provide: DEMO_PATH_TOKEN,\\n            useFactory: () => (<any>require).context(`!!raw-loader!./`, true, /.*\\\\.(ts|html|less)$/),\\n        },\\n    ],\\n    exports: [\\n        RouterModule,\\n    ],\\n})\\nexport class TooltipDemoModule {\\n}\\n\";","export default \"<h2>Required Modules</h2>\\n<ul>\\n    <li>\\n        <code>NuiTooltipModule</code>\\n    </li>\\n</ul>\\n\\n<h2>Basic Usage</h2>\\n<p>\\n    <code>Tooltip</code> is a directive that creates a tooltip container, and can be used with any element on the page. It is extremely easy to use, simply add a tooltip directive \\n    attribute, and assign a desired value to it.<br />\\n    <nui-message type=\\\"info\\\"\\n                 [allowDismiss]=\\\"false\\\">\\n                 <strong>Note:</strong> Toolitp's <em>MAX WIDTH</em> is <strong>250px</strong>. The longer text will wrap to a new line if exceeds\\n    </nui-message>\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-basic\\\" exampleTitle=\\\"Basic Usage\\\">\\n    <nui-tooltip-basic-example></nui-tooltip-basic-example>\\n</nui-example-wrapper>\\n\\n<h2>Disabled Tooltip</h2>\\n<p>\\n    <code>Tooltip</code> can be conditionally disabled, meaning it is possible to quit showing it under certain conditions. Here is an example:\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-disabled\\\" exampleTitle=\\\"Disabled Tooltip Usage Example\\\">\\n    <nui-tooltip-disabled-example></nui-tooltip-disabled-example>\\n</nui-example-wrapper>\\n\\n<h2>Tooltip Placement</h2>\\n<p>\\n    <code>Tooltip</code> can be positioned differently in relation to a host component. By default, <code>nui-tooltip</code> position is <code>top</code>, however, the tooltip \\n    can change its position if there is not enough space to position itself in a chosen direction. The example below shows how you can manually set the position of <code>nui-tooltip</code> \\n    using the <code>tooltipPlacement</code> attribute.\\n</p>\\n<p>\\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-position\\\" exampleTitle=\\\"Position Tooltip Usage Example\\\">\\n    <nui-tooltip-position-example></nui-tooltip-position-example>\\n</nui-example-wrapper>\\n\\n<h2>Tooltip Manual Trigger</h2>\\n<p>\\n    <code>Tooltip</code> can be triggered manually using it's public <code>show()</code>, <code>hide()</code>, and <code>toggle()</code> methods. \\n    Exmple below shows the example of typical usage of the feature.\\n</p>\\n<p>\\n    Available placement options should be of a type <code>TooltipPosition</code>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>.<br />\\n    <mark>Thanks to the cdk overlay scrolling strategy, a tooltip will disappear on scrolling only if it's gone off the viewport of the screen.</mark>\\n</p>\\n\\n<nui-example-wrapper filenamePrefix=\\\"tooltip-trigger\\\" exampleTitle=\\\"Manual Tooltip Trigger Usage Example\\\">\\n    <nui-tooltip-trigger-example></nui-tooltip-trigger-example>\\n</nui-example-wrapper>\\n\\n\\n\";"]}